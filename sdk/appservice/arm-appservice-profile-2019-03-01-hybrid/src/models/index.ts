/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Specification for an App Service Environment to use for this resource.
 */
export interface HostingEnvironmentProfile {
  /**
   * Resource ID of the App Service Environment.
   */
  id?: string;
  /**
   * Name of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Azure resource. This resource is tracked in Azure Resource Manager
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource Name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Kind of resource.
   */
  kind?: string;
  /**
   * Resource Location.
   */
  location: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * SSL certificate for an app.
 */
export interface Certificate extends Resource {
  /**
   * Friendly name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly friendlyName?: string;
  /**
   * Subject name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subjectName?: string;
  /**
   * Host names the certificate applies to.
   */
  hostNames?: string[];
  /**
   * Pfx blob.
   */
  pfxBlob?: Uint8Array;
  /**
   * App name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly siteName?: string;
  /**
   * Self link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly selfLink?: string;
  /**
   * Certificate issuer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly issuer?: string;
  /**
   * Certificate issue Date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly issueDate?: Date;
  /**
   * Certificate expiration date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expirationDate?: Date;
  /**
   * Certificate password.
   */
  password: string;
  /**
   * Certificate thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
  /**
   * Is the certificate valid?.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly valid?: boolean;
  /**
   * Raw bytes of .cer file
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cerBlob?: Uint8Array;
  /**
   * Public key hash.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicKeyHash?: string;
  /**
   * Specification for the App Service Environment to use for the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * Key Vault Csm resource Id.
   */
  keyVaultId?: string;
  /**
   * Key Vault secret name.
   */
  keyVaultSecretName?: string;
  /**
   * Status of the Key Vault secret. Possible values include: 'Initialized',
   * 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',
   * 'OperationNotPermittedOnKeyVault', 'AzureServiceUnauthorizedToAccessKeyVault',
   * 'KeyVaultDoesNotExist', 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
   * 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyVaultSecretStatus?: KeyVaultSecretStatus;
  /**
   * Resource ID of the associated App Service plan, formatted as:
   * "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
   */
  serverFarmId?: string;
}

/**
 * Azure proxy only resource. This resource is not tracked by Azure Resource Manager.
 */
export interface ProxyOnlyResource extends BaseResource {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource Name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Kind of resource.
   */
  kind?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * ARM resource for a certificate.
 */
export interface CertificatePatchResource extends ProxyOnlyResource {
  /**
   * Friendly name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly friendlyName?: string;
  /**
   * Subject name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subjectName?: string;
  /**
   * Host names the certificate applies to.
   */
  hostNames?: string[];
  /**
   * Pfx blob.
   */
  pfxBlob?: Uint8Array;
  /**
   * App name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly siteName?: string;
  /**
   * Self link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly selfLink?: string;
  /**
   * Certificate issuer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly issuer?: string;
  /**
   * Certificate issue Date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly issueDate?: Date;
  /**
   * Certificate expiration date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expirationDate?: Date;
  /**
   * Certificate password.
   */
  password: string;
  /**
   * Certificate thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
  /**
   * Is the certificate valid?.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly valid?: boolean;
  /**
   * Raw bytes of .cer file
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cerBlob?: Uint8Array;
  /**
   * Public key hash.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicKeyHash?: string;
  /**
   * Specification for the App Service Environment to use for the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * Key Vault Csm resource Id.
   */
  keyVaultId?: string;
  /**
   * Key Vault secret name.
   */
  keyVaultSecretName?: string;
  /**
   * Status of the Key Vault secret. Possible values include: 'Initialized',
   * 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',
   * 'OperationNotPermittedOnKeyVault', 'AzureServiceUnauthorizedToAccessKeyVault',
   * 'KeyVaultDoesNotExist', 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
   * 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyVaultSecretStatus?: KeyVaultSecretStatus;
  /**
   * Resource ID of the associated App Service plan, formatted as:
   * "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
   */
  serverFarmId?: string;
}

/**
 * Virtual Network route contract used to pass routing information for a Virtual Network.
 */
export interface VnetRoute extends ProxyOnlyResource {
  /**
   * The starting address for this route. This may also include a CIDR notation, in which case the
   * end address must not be specified.
   */
  startAddress?: string;
  /**
   * The ending address for this route. If the start address is specified in CIDR notation, this
   * must be omitted.
   */
  endAddress?: string;
  /**
   * The type of route this is:
   * DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
   * INHERITED - Routes inherited from the real Virtual Network routes
   * STATIC - Static route set on the app only
   *
   * These values will be used for syncing an app's routes with those from a Virtual Network.
   * Possible values include: 'DEFAULT', 'INHERITED', 'STATIC'
   */
  routeType?: RouteType;
}

/**
 * Virtual Network information contract.
 */
export interface VnetInfo extends ProxyOnlyResource {
  /**
   * The Virtual Network's resource ID.
   */
  vnetResourceId?: string;
  /**
   * The client certificate thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly certThumbprint?: string;
  /**
   * A certificate file (.cer) blob containing the public key of the private key used to
   * authenticate a
   * Point-To-Site VPN connection.
   */
  certBlob?: string;
  /**
   * The routes that this Virtual Network connection uses.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly routes?: VnetRoute[];
  /**
   * <code>true</code> if a resync is required; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resyncRequired?: boolean;
  /**
   * DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP
   * addresses.
   */
  dnsServers?: string;
  /**
   * Flag that is used to denote if this is VNET injection
   */
  isSwift?: boolean;
}

/**
 * The Virtual Network gateway contract. This is used to give the Virtual Network gateway access to
 * the VPN package.
 */
export interface VnetGateway extends ProxyOnlyResource {
  /**
   * The Virtual Network name.
   */
  vnetName?: string;
  /**
   * The URI where the VPN package can be downloaded.
   */
  vpnPackageUri: string;
}

/**
 * User credentials used for publishing activity.
 */
export interface User extends ProxyOnlyResource {
  /**
   * Username used for publishing.
   */
  publishingUserName: string;
  /**
   * Password used for publishing.
   */
  publishingPassword?: string;
  /**
   * Password hash used for publishing.
   */
  publishingPasswordHash?: string;
  /**
   * Password hash salt used for publishing.
   */
  publishingPasswordHashSalt?: string;
  /**
   * Url of SCM site.
   */
  scmUri?: string;
}

/**
 * A snapshot of an app.
 */
export interface Snapshot extends ProxyOnlyResource {
  /**
   * The time the snapshot was taken.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly time?: string;
}

/**
 * Metrics availability and retention.
 */
export interface ResourceMetricAvailability {
  /**
   * Time grain .
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeGrain?: string;
  /**
   * Retention period for the current time grain.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly retention?: string;
}

/**
 * Metadata for the metrics.
 */
export interface ResourceMetricDefinition extends ProxyOnlyResource {
  /**
   * Unit of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * Primary aggregation type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly primaryAggregationType?: string;
  /**
   * List of time grains supported for the metric together with retention period.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricAvailabilities?: ResourceMetricAvailability[];
  /**
   * Resource URI.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceUri?: string;
  /**
   * Resource metric definition properties.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: { [propertyName: string]: string };
}

/**
 * Push settings for the App.
 */
export interface PushSettings extends ProxyOnlyResource {
  /**
   * Gets or sets a flag indicating whether the Push endpoint is enabled.
   */
  isPushEnabled: boolean;
  /**
   * Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push
   * registration endpoint.
   */
  tagWhitelistJson?: string;
  /**
   * Gets or sets a JSON string containing a list of tags that require user authentication to be
   * used in the push registration endpoint.
   * Tags can consist of alphanumeric characters and the following:
   * '_', '@', '#', '.', ':', '-'.
   * Validation should be performed at the PushRequestHandler.
   */
  tagsRequiringAuth?: string;
  /**
   * Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user
   * claims in the push registration endpoint.
   */
  dynamicTagsJson?: string;
}

/**
 * A domain specific resource identifier.
 */
export interface Identifier extends ProxyOnlyResource {
  /**
   * String representation of the identity.
   */
  identifierId?: string;
}

/**
 * Hybrid Connection key contract. This has the send key name and value for a Hybrid Connection.
 */
export interface HybridConnectionKey extends ProxyOnlyResource {
  /**
   * The name of the send key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sendKeyName?: string;
  /**
   * The value of the send key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sendKeyValue?: string;
}

/**
 * Hybrid Connection contract. This is used to configure a Hybrid Connection.
 */
export interface HybridConnection extends ProxyOnlyResource {
  /**
   * The name of the Service Bus namespace.
   */
  serviceBusNamespace?: string;
  /**
   * The name of the Service Bus relay.
   */
  relayName?: string;
  /**
   * The ARM URI to the Service Bus relay.
   */
  relayArmUri?: string;
  /**
   * The hostname of the endpoint.
   */
  hostname?: string;
  /**
   * The port of the endpoint.
   */
  port?: number;
  /**
   * The name of the Service Bus key which has Send permissions. This is used to authenticate to
   * Service Bus.
   */
  sendKeyName?: string;
  /**
   * The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key
   * will not be returned
   * normally, use the POST /listKeys API instead.
   */
  sendKeyValue?: string;
  /**
   * The suffix for the service bus endpoint. By default this is .servicebus.windows.net
   */
  serviceBusSuffix?: string;
}

/**
 * A deleted app.
 */
export interface DeletedSite extends ProxyOnlyResource {
  /**
   * Numeric id for the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deletedSiteId?: number;
  /**
   * Time in UTC when the app was deleted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deletedTimestamp?: string;
  /**
   * Subscription containing the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscription?: string;
  /**
   * ResourceGroup that contained the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * Name of the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deletedSiteName?: string;
  /**
   * Slot of the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly slot?: string;
  /**
   * Kind of site that was deleted
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deletedSiteKind?: string;
  /**
   * Geo Region of the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly geoRegionName?: string;
}

/**
 * An interface representing ManagedServiceIdentityUserAssignedIdentitiesValue.
 */
export interface ManagedServiceIdentityUserAssignedIdentitiesValue {
  /**
   * Principal Id of user assigned identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * Client Id of user assigned identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
}

/**
 * Managed service identity.
 */
export interface ManagedServiceIdentity {
  /**
   * Type of managed service identity. Possible values include: 'SystemAssigned', 'UserAssigned',
   * 'SystemAssigned, UserAssigned', 'None'
   */
  type?: ManagedServiceIdentityType;
  /**
   * Tenant of managed service identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * Principal Id of managed service identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The list of user assigned identities associated with the resource. The user identity
   * dictionary key references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
   */
  userAssignedIdentities?: { [propertyName: string]: ManagedServiceIdentityUserAssignedIdentitiesValue };
}

/**
 * A global distribution definition.
 */
export interface GeoDistribution {
  /**
   * Location.
   */
  location?: string;
  /**
   * NumberOfWorkers.
   */
  numberOfWorkers?: number;
}

/**
 * The status of the last successful slot swap operation.
 */
export interface SlotSwapStatus {
  /**
   * The time the last successful slot swap completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timestampUtc?: Date;
  /**
   * The source slot of the last swap operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceSlotName?: string;
  /**
   * The destination slot of the last swap operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly destinationSlotName?: string;
}

/**
 * Information needed for cloning operation.
 */
export interface CloningInfo {
  /**
   * Correlation ID of cloning operation. This ID ties multiple cloning operations
   * together to use the same snapshot.
   */
  correlationId?: string;
  /**
   * <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
   */
  overwrite?: boolean;
  /**
   * <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
   */
  cloneCustomHostNames?: boolean;
  /**
   * <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
   */
  cloneSourceControl?: boolean;
  /**
   * ARM resource ID of the source app. App resource ID is of the form
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
   * for production slots and
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
   * for other slots.
   */
  sourceWebAppId: string;
  /**
   * Location of source app ex: West US or North Europe
   */
  sourceWebAppLocation?: string;
  /**
   * App Service Environment.
   */
  hostingEnvironment?: string;
  /**
   * Application setting overrides for cloned app. If specified, these settings override the
   * settings cloned
   * from source app. Otherwise, application settings from source app are retained.
   */
  appSettingsOverrides?: { [propertyName: string]: string };
  /**
   * <code>true</code> to configure load balancing for source and destination app.
   */
  configureLoadBalancing?: boolean;
  /**
   * ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource
   * ID is of the form
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
   */
  trafficManagerProfileId?: string;
  /**
   * Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does
   * not already exist.
   */
  trafficManagerProfileName?: string;
}

/**
 * IP security restriction on an app.
 */
export interface IpSecurityRestriction {
  /**
   * IP address the security restriction is valid for.
   * It can be in form of pure ipv4 address (required SubnetMask property) or
   * CIDR notation such as ipv4/mask (leading bit match). For CIDR,
   * SubnetMask property must not be specified.
   */
  ipAddress?: string;
  /**
   * Subnet mask for the range of IP addresses the restriction is valid for.
   */
  subnetMask?: string;
  /**
   * Virtual network resource id
   */
  vnetSubnetResourceId?: string;
  /**
   * (internal) Vnet traffic tag
   */
  vnetTrafficTag?: number;
  /**
   * (internal) Subnet traffic tag
   */
  subnetTrafficTag?: number;
  /**
   * Allow or Deny access for this IP range.
   */
  action?: string;
  /**
   * Defines what this IP filter will be used for. This is to support IP filtering on proxies.
   * Possible values include: 'Default', 'XffProxy'
   */
  tag?: IpFilterTag;
  /**
   * Priority of IP restriction rule.
   */
  priority?: number;
  /**
   * IP restriction rule name.
   */
  name?: string;
  /**
   * IP restriction rule description.
   */
  description?: string;
}

/**
 * Information about the formal API definition for the app.
 */
export interface ApiDefinitionInfo {
  /**
   * The URL of the API definition.
   */
  url?: string;
}

/**
 * Cross-Origin Resource Sharing (CORS) settings for the app.
 */
export interface CorsSettings {
  /**
   * Gets or sets the list of origins that should be allowed to make cross-origin
   * calls (for example: http://example.com:12345). Use "*" to allow all.
   */
  allowedOrigins?: string[];
  /**
   * Gets or sets whether CORS requests with credentials are allowed. See
   * https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
   * for more details.
   */
  supportCredentials?: boolean;
}

/**
 * Custom action to be executed
 * when an auto heal rule is triggered.
 */
export interface AutoHealCustomAction {
  /**
   * Executable to be run.
   */
  exe?: string;
  /**
   * Parameters for the executable.
   */
  parameters?: string;
}

/**
 * Actions which to take by the auto-heal module when a rule is triggered.
 */
export interface AutoHealActions {
  /**
   * Predefined action to be taken. Possible values include: 'Recycle', 'LogEvent', 'CustomAction'
   */
  actionType?: AutoHealActionType;
  /**
   * Custom action to be taken.
   */
  customAction?: AutoHealCustomAction;
  /**
   * Minimum time the process must execute
   * before taking the action
   */
  minProcessExecutionTime?: string;
}

/**
 * Trigger based on request execution time.
 */
export interface SlowRequestsBasedTrigger {
  /**
   * Time taken.
   */
  timeTaken?: string;
  /**
   * Request Count.
   */
  count?: number;
  /**
   * Time interval.
   */
  timeInterval?: string;
}

/**
 * Trigger based on status code.
 */
export interface StatusCodesBasedTrigger {
  /**
   * HTTP status code.
   */
  status?: number;
  /**
   * Request Sub Status.
   */
  subStatus?: number;
  /**
   * Win32 error code.
   */
  win32Status?: number;
  /**
   * Request Count.
   */
  count?: number;
  /**
   * Time interval.
   */
  timeInterval?: string;
}

/**
 * Trigger based on total requests.
 */
export interface RequestsBasedTrigger {
  /**
   * Request Count.
   */
  count?: number;
  /**
   * Time interval.
   */
  timeInterval?: string;
}

/**
 * Triggers for auto-heal.
 */
export interface AutoHealTriggers {
  /**
   * A rule based on total requests.
   */
  requests?: RequestsBasedTrigger;
  /**
   * A rule based on private bytes.
   */
  privateBytesInKB?: number;
  /**
   * A rule based on status codes.
   */
  statusCodes?: StatusCodesBasedTrigger[];
  /**
   * A rule based on request execution time.
   */
  slowRequests?: SlowRequestsBasedTrigger;
}

/**
 * Rules that can be defined for auto-heal.
 */
export interface AutoHealRules {
  /**
   * Conditions that describe when to execute the auto-heal actions.
   */
  triggers?: AutoHealTriggers;
  /**
   * Actions to be executed when a rule is triggered.
   */
  actions?: AutoHealActions;
}

/**
 * Metric limits set on an app.
 */
export interface SiteLimits {
  /**
   * Maximum allowed CPU usage percentage.
   */
  maxPercentageCpu?: number;
  /**
   * Maximum allowed memory usage in MB.
   */
  maxMemoryInMb?: number;
  /**
   * Maximum allowed disk size usage in MB.
   */
  maxDiskSizeInMb?: number;
}

/**
 * Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to
 * gradually change routing % based on performance.
 */
export interface RampUpRule {
  /**
   * Hostname of a slot to which the traffic will be redirected if decided to. E.g.
   * myapp-stage.azurewebsites.net.
   */
  actionHostName?: string;
  /**
   * Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
   */
  reroutePercentage?: number;
  /**
   * In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code>
   * until it reaches
   * <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are
   * checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.
   * Custom decision algorithm can be provided in TiPCallback site extension which URL can be
   * specified in <code>ChangeDecisionCallbackUrl</code>.
   */
  changeStep?: number;
  /**
   * Specifies interval in minutes to reevaluate ReroutePercentage.
   */
  changeIntervalInMinutes?: number;
  /**
   * Specifies lower boundary above which ReroutePercentage will stay.
   */
  minReroutePercentage?: number;
  /**
   * Specifies upper boundary below which ReroutePercentage will stay.
   */
  maxReroutePercentage?: number;
  /**
   * Custom decision algorithm can be provided in TiPCallback site extension which URL can be
   * specified. See TiPCallback site extension for the scaffold and contracts.
   * https://www.siteextensions.net/packages/TiPCallback/
   */
  changeDecisionCallbackUrl?: string;
  /**
   * Name of the routing rule. The recommended name would be to point to the slot which will
   * receive the traffic in the experiment.
   */
  name?: string;
}

/**
 * Routing rules in production experiments.
 */
export interface Experiments {
  /**
   * List of ramp-up rules.
   */
  rampUpRules?: RampUpRule[];
}

/**
 * Directory for virtual application.
 */
export interface VirtualDirectory {
  /**
   * Path to virtual application.
   */
  virtualPath?: string;
  /**
   * Physical path.
   */
  physicalPath?: string;
}

/**
 * Virtual application in an app.
 */
export interface VirtualApplication {
  /**
   * Virtual path.
   */
  virtualPath?: string;
  /**
   * Physical path.
   */
  physicalPath?: string;
  /**
   * <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
   */
  preloadEnabled?: boolean;
  /**
   * Virtual directories for virtual application.
   */
  virtualDirectories?: VirtualDirectory[];
}

/**
 * The IIS handler mappings used to define which handler processes HTTP requests with certain
 * extension.
 * For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php
 * extension.
 */
export interface HandlerMapping {
  /**
   * Requests with this extension will be handled using the specified FastCGI application.
   */
  extension?: string;
  /**
   * The absolute path to the FastCGI application.
   */
  scriptProcessor?: string;
  /**
   * Command-line arguments to be passed to the script processor.
   */
  argumentsProperty?: string;
}

/**
 * MachineKey of an app.
 */
export interface SiteMachineKey {
  /**
   * MachineKey validation.
   */
  validation?: string;
  /**
   * Validation key.
   */
  validationKey?: string;
  /**
   * Algorithm used for decryption.
   */
  decryption?: string;
  /**
   * Decryption key.
   */
  decryptionKey?: string;
}

/**
 * Database connection string information.
 */
export interface ConnStringInfo {
  /**
   * Name of connection string.
   */
  name?: string;
  /**
   * Connection string value.
   */
  connectionString?: string;
  /**
   * Type of database. Possible values include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom',
   * 'NotificationHub', 'ServiceBus', 'EventHub', 'ApiHub', 'DocDb', 'RedisCache', 'PostgreSQL'
   */
  type?: ConnectionStringType;
}

/**
 * Azure Files or Blob Storage access information value for dictionary storage.
 */
export interface AzureStorageInfoValue {
  /**
   * Type of storage. Possible values include: 'AzureFiles', 'AzureBlob'
   */
  type?: AzureStorageType;
  /**
   * Name of the storage account.
   */
  accountName?: string;
  /**
   * Name of the file share (container name, for Blob storage).
   */
  shareName?: string;
  /**
   * Access key for the storage account.
   */
  accessKey?: string;
  /**
   * Path to mount the storage within the site's runtime environment.
   */
  mountPath?: string;
  /**
   * State of the storage account. Possible values include: 'Ok', 'InvalidCredentials',
   * 'InvalidShare'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: AzureStorageState;
}

/**
 * Name value pair.
 */
export interface NameValuePair {
  /**
   * Pair name.
   */
  name?: string;
  /**
   * Pair value.
   */
  value?: string;
}

/**
 * Configuration of an App Service app.
 */
export interface SiteConfig {
  /**
   * Number of workers.
   */
  numberOfWorkers?: number;
  /**
   * Default documents.
   */
  defaultDocuments?: string[];
  /**
   * .NET Framework version. Default value: 'v4.6'.
   */
  netFrameworkVersion?: string;
  /**
   * Version of PHP.
   */
  phpVersion?: string;
  /**
   * Version of Python.
   */
  pythonVersion?: string;
  /**
   * Version of Node.js.
   */
  nodeVersion?: string;
  /**
   * Linux App Framework and version
   */
  linuxFxVersion?: string;
  /**
   * Xenon App Framework and version
   */
  windowsFxVersion?: string;
  /**
   * <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
   */
  requestTracingEnabled?: boolean;
  /**
   * Request tracing expiration time.
   */
  requestTracingExpirationTime?: Date;
  /**
   * <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
   */
  remoteDebuggingEnabled?: boolean;
  /**
   * Remote debugging version.
   */
  remoteDebuggingVersion?: string;
  /**
   * <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
   */
  httpLoggingEnabled?: boolean;
  /**
   * HTTP logs directory size limit.
   */
  logsDirectorySizeLimit?: number;
  /**
   * <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
   */
  detailedErrorLoggingEnabled?: boolean;
  /**
   * Publishing user name.
   */
  publishingUsername?: string;
  /**
   * Application settings.
   */
  appSettings?: NameValuePair[];
  /**
   * User-provided Azure storage accounts.
   */
  azureStorageAccounts?: { [propertyName: string]: AzureStorageInfoValue };
  /**
   * Connection strings.
   */
  connectionStrings?: ConnStringInfo[];
  /**
   * Site MachineKey.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly machineKey?: SiteMachineKey;
  /**
   * Handler mappings.
   */
  handlerMappings?: HandlerMapping[];
  /**
   * Document root.
   */
  documentRoot?: string;
  /**
   * SCM type. Possible values include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
   * 'CodePlexGit', 'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
   * 'OneDrive', 'VSO'
   */
  scmType?: ScmType;
  /**
   * <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
   */
  use32BitWorkerProcess?: boolean;
  /**
   * <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
   */
  webSocketsEnabled?: boolean;
  /**
   * <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
   */
  alwaysOn?: boolean;
  /**
   * Java version.
   */
  javaVersion?: string;
  /**
   * Java container.
   */
  javaContainer?: string;
  /**
   * Java container version.
   */
  javaContainerVersion?: string;
  /**
   * App command line to launch.
   */
  appCommandLine?: string;
  /**
   * Managed pipeline mode. Possible values include: 'Integrated', 'Classic'
   */
  managedPipelineMode?: ManagedPipelineMode;
  /**
   * Virtual applications.
   */
  virtualApplications?: VirtualApplication[];
  /**
   * Site load balancing. Possible values include: 'WeightedRoundRobin', 'LeastRequests',
   * 'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
   */
  loadBalancing?: SiteLoadBalancing;
  /**
   * This is work around for polymorphic types.
   */
  experiments?: Experiments;
  /**
   * Site limits.
   */
  limits?: SiteLimits;
  /**
   * <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
   */
  autoHealEnabled?: boolean;
  /**
   * Auto Heal rules.
   */
  autoHealRules?: AutoHealRules;
  /**
   * Tracing options.
   */
  tracingOptions?: string;
  /**
   * Virtual Network name.
   */
  vnetName?: string;
  /**
   * Cross-Origin Resource Sharing (CORS) settings.
   */
  cors?: CorsSettings;
  /**
   * Push endpoint settings.
   */
  push?: PushSettings;
  /**
   * Information about the formal API definition for the app.
   */
  apiDefinition?: ApiDefinitionInfo;
  /**
   * Auto-swap slot name.
   */
  autoSwapSlotName?: string;
  /**
   * <code>true</code> to enable local MySQL; otherwise, <code>false</code>. Default value: false.
   */
  localMySqlEnabled?: boolean;
  /**
   * Managed Service Identity Id
   */
  managedServiceIdentityId?: number;
  /**
   * Explicit Managed Service Identity Id
   */
  xManagedServiceIdentityId?: number;
  /**
   * IP security restrictions for main.
   */
  ipSecurityRestrictions?: IpSecurityRestriction[];
  /**
   * IP security restrictions for scm.
   */
  scmIpSecurityRestrictions?: IpSecurityRestriction[];
  /**
   * IP security restrictions for scm to use main.
   */
  scmIpSecurityRestrictionsUseMain?: boolean;
  /**
   * Http20Enabled: configures a web site to allow clients to connect over http2.0. Default value:
   * true.
   */
  http20Enabled?: boolean;
  /**
   * MinTlsVersion: configures the minimum version of TLS required for SSL requests. Possible
   * values include: '1.0', '1.1', '1.2'
   */
  minTlsVersion?: SupportedTlsVersions;
  /**
   * State of FTP / FTPS service. Possible values include: 'AllAllowed', 'FtpsOnly', 'Disabled'
   */
  ftpsState?: FtpsState;
  /**
   * Number of reserved instances.
   * This setting only applies to the Consumption Plan
   */
  reservedInstanceCount?: number;
}

/**
 * SSL-enabled hostname.
 */
export interface HostNameSslState {
  /**
   * Hostname.
   */
  name?: string;
  /**
   * SSL type. Possible values include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
   */
  sslState?: SslState;
  /**
   * Virtual IP address assigned to the hostname if IP based SSL is enabled.
   */
  virtualIP?: string;
  /**
   * SSL certificate thumbprint.
   */
  thumbprint?: string;
  /**
   * Set to <code>true</code> to update existing hostname.
   */
  toUpdate?: boolean;
  /**
   * Indicates whether the hostname is a standard or repository hostname. Possible values include:
   * 'Standard', 'Repository'
   */
  hostType?: HostType;
}

/**
 * A web app, a mobile app backend, or an API app.
 */
export interface Site extends Resource {
  /**
   * Current state of the app.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * Hostnames associated with the app.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostNames?: string[];
  /**
   * Name of the repository site.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly repositorySiteName?: string;
  /**
   * State indicating whether the app has exceeded its quota usage. Read-only. Possible values
   * include: 'Normal', 'Exceeded'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usageState?: UsageState;
  /**
   * <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to
   * false disables the app (takes the app offline).
   */
  enabled?: boolean;
  /**
   * Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled.
   * Otherwise,
   * the app is not served on those hostnames.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enabledHostNames?: string[];
  /**
   * Management information availability state for the app. Possible values include: 'Normal',
   * 'Limited', 'DisasterRecoveryMode'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availabilityState?: SiteAvailabilityState;
  /**
   * Hostname SSL states are used to manage the SSL bindings for app's hostnames.
   */
  hostNameSslStates?: HostNameSslState[];
  /**
   * Resource ID of the associated App Service plan, formatted as:
   * "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
   */
  serverFarmId?: string;
  /**
   * <code>true</code> if reserved; otherwise, <code>false</code>. Default value: false.
   */
  reserved?: boolean;
  /**
   * Obsolete: Hyper-V sandbox. Default value: false.
   */
  isXenon?: boolean;
  /**
   * Hyper-V sandbox. Default value: false.
   */
  hyperV?: boolean;
  /**
   * Last time the app was modified, in UTC. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTimeUtc?: Date;
  /**
   * Configuration of the app.
   */
  siteConfig?: SiteConfig;
  /**
   * Azure Traffic Manager hostnames associated with the app. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trafficManagerHostNames?: string[];
  /**
   * <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise,
   * <code>false</code>. The default is <code>false</code>. Default value: false.
   */
  scmSiteAlsoStopped?: boolean;
  /**
   * Specifies which deployment slot this app will swap into. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetSwapSlot?: string;
  /**
   * App Service Environment to use for the app.
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * <code>true</code> to enable client affinity; <code>false</code> to stop sending session
   * affinity cookies, which route client requests in the same session to the same instance.
   * Default is <code>true</code>.
   */
  clientAffinityEnabled?: boolean;
  /**
   * <code>true</code> to enable client certificate authentication (TLS mutual authentication);
   * otherwise, <code>false</code>. Default is <code>false</code>.
   */
  clientCertEnabled?: boolean;
  /**
   * client certificate authentication comma-separated exclusion paths
   */
  clientCertExclusionPaths?: string;
  /**
   * <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
   * If <code>true</code>, the app is only accessible via API management process.
   */
  hostNamesDisabled?: boolean;
  /**
   * List of IP addresses that the app uses for outbound connections (e.g. database access).
   * Includes VIPs from tenants that site can be hosted with current settings. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly outboundIpAddresses?: string;
  /**
   * List of IP addresses that the app uses for outbound connections (e.g. database access).
   * Includes VIPs from all tenants. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly possibleOutboundIpAddresses?: string;
  /**
   * Size of the function container.
   */
  containerSize?: number;
  /**
   * Maximum allowed daily memory-time quota (applicable on dynamic apps only).
   */
  dailyMemoryTimeQuota?: number;
  /**
   * App suspended till in case memory-time quota is exceeded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly suspendedTill?: Date;
  /**
   * Maximum number of workers.
   * This only applies to Functions container.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxNumberOfWorkers?: number;
  /**
   * If specified during app creation, the app is cloned from a source app.
   */
  cloningInfo?: CloningInfo;
  /**
   * Name of the resource group the app belongs to. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * <code>true</code> if the app is a default container; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDefaultContainer?: boolean;
  /**
   * Default hostname of the app. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultHostName?: string;
  /**
   * Status of the last deployment slot swap operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly slotSwapStatus?: SlotSwapStatus;
  /**
   * HttpsOnly: configures a web site to accept only https requests. Issues redirect for
   * http requests
   */
  httpsOnly?: boolean;
  /**
   * Site redundancy mode. Possible values include: 'None', 'Manual', 'Failover', 'ActiveActive',
   * 'GeoRedundant'
   */
  redundancyMode?: RedundancyMode;
  /**
   * Specifies an operation id if this site has a pending operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly inProgressOperationId?: string;
  /**
   * GeoDistributions for this site
   */
  geoDistributions?: GeoDistribution[];
  identity?: ManagedServiceIdentity;
}

/**
 * Describes the capabilities/features allowed for a specific SKU.
 */
export interface Capability {
  /**
   * Name of the SKU capability.
   */
  name?: string;
  /**
   * Value of the SKU capability.
   */
  value?: string;
  /**
   * Reason of the SKU capability.
   */
  reason?: string;
}

/**
 * Description of the App Service plan scale options.
 */
export interface SkuCapacity {
  /**
   * Minimum number of workers for this App Service plan SKU.
   */
  minimum?: number;
  /**
   * Maximum number of workers for this App Service plan SKU.
   */
  maximum?: number;
  /**
   * Default number of workers for this App Service plan SKU.
   */
  default?: number;
  /**
   * Available scale configurations for an App Service plan.
   */
  scaleType?: string;
}

/**
 * Description of a SKU for a scalable resource.
 */
export interface SkuDescription {
  /**
   * Name of the resource SKU.
   */
  name?: string;
  /**
   * Service tier of the resource SKU.
   */
  tier?: string;
  /**
   * Size specifier of the resource SKU.
   */
  size?: string;
  /**
   * Family code of the resource SKU.
   */
  family?: string;
  /**
   * Current number of instances assigned to the resource.
   */
  capacity?: number;
  /**
   * Min, max, and default scale values of the SKU.
   */
  skuCapacity?: SkuCapacity;
  /**
   * Locations of the SKU.
   */
  locations?: string[];
  /**
   * Capabilities of the SKU, e.g., is traffic manager enabled?
   */
  capabilities?: Capability[];
}

/**
 * App Service plan.
 */
export interface AppServicePlan extends Resource {
  /**
   * Target worker tier assigned to the App Service plan.
   */
  workerTierName?: string;
  /**
   * App Service plan status. Possible values include: 'Ready', 'Pending', 'Creating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: StatusOptions;
  /**
   * App Service plan subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscription?: string;
  /**
   * Specification for the App Service Environment to use for the App Service plan.
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * Maximum number of instances that can be assigned to this App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximumNumberOfWorkers?: number;
  /**
   * Geographical location for the App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly geoRegion?: string;
  /**
   * If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
   * If <code>false</code>, apps assigned to this App Service plan will scale to all instances of
   * the plan. Default value: false.
   */
  perSiteScaling?: boolean;
  /**
   * Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan
   */
  maximumElasticWorkerCount?: number;
  /**
   * Number of apps assigned to this App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfSites?: number;
  /**
   * If <code>true</code>, this App Service Plan owns spot instances.
   */
  isSpot?: boolean;
  /**
   * The time when the server farm expires. Valid only if it is a spot server farm.
   */
  spotExpirationTime?: Date;
  /**
   * The time when the server farm free offer expires.
   */
  freeOfferExpirationTime?: Date;
  /**
   * Resource group of the App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * If Linux app service plan <code>true</code>, <code>false</code> otherwise. Default value:
   * false.
   */
  reserved?: boolean;
  /**
   * Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code>
   * otherwise. Default value: false.
   */
  isXenon?: boolean;
  /**
   * If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise. Default
   * value: false.
   */
  hyperV?: boolean;
  /**
   * Scaling worker count.
   */
  targetWorkerCount?: number;
  /**
   * Scaling worker size ID.
   */
  targetWorkerSizeId?: number;
  /**
   * Provisioning state of the App Service Environment. Possible values include: 'Succeeded',
   * 'Failed', 'Canceled', 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  sku?: SkuDescription;
}

/**
 * Detailed errors.
 */
export interface DefaultErrorResponseErrorDetailsItem {
  /**
   * Standardized string to programmatically identify the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Detailed error description and debugging information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Detailed error description and debugging information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
}

/**
 * Error model.
 */
export interface DefaultErrorResponseError {
  /**
   * Standardized string to programmatically identify the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Detailed error description and debugging information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Detailed error description and debugging information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  details?: DefaultErrorResponseErrorDetailsItem[];
  /**
   * More information to debug error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly innererror?: string;
}

/**
 * App Service error response.
 */
export interface DefaultErrorResponse {
  /**
   * Error model.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: DefaultErrorResponseError;
}

/**
 * Specification for using a Virtual Network.
 */
export interface VirtualNetworkProfile {
  /**
   * Resource id of the Virtual Network.
   */
  id?: string;
  /**
   * Name of the Virtual Network (read-only).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type of the Virtual Network (read-only).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Subnet within the Virtual Network.
   */
  subnet?: string;
}

/**
 * Worker pool of an App Service Environment.
 */
export interface WorkerPool {
  /**
   * Worker size ID for referencing this worker pool.
   */
  workerSizeId?: number;
  /**
   * Shared or dedicated app hosting. Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   */
  computeMode?: ComputeModeOptions;
  /**
   * VM size of the worker pool instances.
   */
  workerSize?: string;
  /**
   * Number of instances in the worker pool.
   */
  workerCount?: number;
  /**
   * Names of all instances in the worker pool (read only).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceNames?: string[];
}

/**
 * Virtual IP mapping.
 */
export interface VirtualIPMapping {
  /**
   * Virtual IP address.
   */
  virtualIP?: string;
  /**
   * Internal HTTP port.
   */
  internalHttpPort?: number;
  /**
   * Internal HTTPS port.
   */
  internalHttpsPort?: number;
  /**
   * Is virtual IP mapping in use.
   */
  inUse?: boolean;
}

/**
 * Stamp capacity information.
 */
export interface StampCapacity {
  /**
   * Name of the stamp.
   */
  name?: string;
  /**
   * Available capacity (# of machines, bytes of storage etc...).
   */
  availableCapacity?: number;
  /**
   * Total capacity (# of machines, bytes of storage etc...).
   */
  totalCapacity?: number;
  /**
   * Name of the unit.
   */
  unit?: string;
  /**
   * Shared/dedicated workers. Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   */
  computeMode?: ComputeModeOptions;
  /**
   * Size of the machines. Possible values include: 'Small', 'Medium', 'Large', 'D1', 'D2', 'D3',
   * 'Default'
   */
  workerSize?: WorkerSizeOptions;
  /**
   * Size ID of machines:
   * 0 - Small
   * 1 - Medium
   * 2 - Large
   */
  workerSizeId?: number;
  /**
   * If <code>true</code>, it includes basic apps.
   * Basic apps are not used for capacity allocation.
   */
  excludeFromCapacityAllocation?: boolean;
  /**
   * <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
   */
  isApplicableForAllComputeModes?: boolean;
  /**
   * Shared or Dedicated.
   */
  siteMode?: string;
  /**
   * Is this a linux stamp capacity
   */
  isLinux?: boolean;
}

/**
 * Network access control entry.
 */
export interface NetworkAccessControlEntry {
  /**
   * Action object. Possible values include: 'Permit', 'Deny'
   */
  action?: AccessControlEntryAction;
  /**
   * Description of network access control entry.
   */
  description?: string;
  /**
   * Order of precedence.
   */
  order?: number;
  /**
   * Remote subnet.
   */
  remoteSubnet?: string;
}

/**
 * Description of an App Service Environment.
 */
export interface AppServiceEnvironment {
  /**
   * Name of the App Service Environment.
   */
  name: string;
  /**
   * Location of the App Service Environment, e.g. "West US".
   */
  location: string;
  /**
   * Provisioning state of the App Service Environment. Possible values include: 'Succeeded',
   * 'Failed', 'Canceled', 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Current status of the App Service Environment. Possible values include: 'Preparing', 'Ready',
   * 'Scaling', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: HostingEnvironmentStatus;
  /**
   * Name of the Virtual Network for the App Service Environment.
   */
  vnetName?: string;
  /**
   * Resource group of the Virtual Network.
   */
  vnetResourceGroupName?: string;
  /**
   * Subnet of the Virtual Network.
   */
  vnetSubnetName?: string;
  /**
   * Description of the Virtual Network.
   */
  virtualNetwork: VirtualNetworkProfile;
  /**
   * Specifies which endpoints to serve internally in the Virtual Network for the App Service
   * Environment. Possible values include: 'None', 'Web', 'Publishing'
   */
  internalLoadBalancingMode?: InternalLoadBalancingMode;
  /**
   * Front-end VM size, e.g. "Medium", "Large".
   */
  multiSize?: string;
  /**
   * Number of front-end instances.
   */
  multiRoleCount?: number;
  /**
   * Description of worker pools with worker size IDs, VM sizes, and number of workers in each
   * pool.
   */
  workerPools: WorkerPool[];
  /**
   * Number of IP SSL addresses reserved for the App Service Environment.
   */
  ipsslAddressCount?: number;
  /**
   * Edition of the metadata database for the App Service Environment, e.g. "Standard".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseEdition?: string;
  /**
   * Service objective of the metadata database for the App Service Environment, e.g. "S0".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseServiceObjective?: string;
  /**
   * Number of upgrade domains of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly upgradeDomains?: number;
  /**
   * Subscription of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * DNS suffix of the App Service Environment.
   */
  dnsSuffix?: string;
  /**
   * Last deployment action on the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastAction?: string;
  /**
   * Result of the last deployment action on the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastActionResult?: string;
  /**
   * List of comma separated strings describing which VM sizes are allowed for front-ends.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowedMultiSizes?: string;
  /**
   * List of comma separated strings describing which VM sizes are allowed for workers.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowedWorkerSizes?: string;
  /**
   * Maximum number of VMs in the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximumNumberOfMachines?: number;
  /**
   * Description of IP SSL mapping for the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vipMappings?: VirtualIPMapping[];
  /**
   * Current total, used, and available worker capacities.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly environmentCapacities?: StampCapacity[];
  /**
   * Access control list for controlling traffic to the App Service Environment.
   */
  networkAccessControlList?: NetworkAccessControlEntry[];
  /**
   * True/false indicating whether the App Service Environment is healthy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly environmentIsHealthy?: boolean;
  /**
   * Detailed message about with results of the last check of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly environmentStatus?: string;
  /**
   * Resource group of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * Scale factor for front-ends.
   */
  frontEndScaleFactor?: number;
  /**
   * Default Scale Factor for FrontEnds.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultFrontEndScaleFactor?: number;
  /**
   * API Management Account associated with the App Service Environment.
   */
  apiManagementAccountId?: string;
  /**
   * <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>.
   * The environment can be suspended, e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic).
   */
  suspended?: boolean;
  /**
   * True/false indicating whether the App Service Environment is suspended. The environment can be
   * suspended e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic).
   */
  dynamicCacheEnabled?: boolean;
  /**
   * Custom settings for changing the behavior of the App Service Environment.
   */
  clusterSettings?: NameValuePair[];
  /**
   * User added ip ranges to whitelist on ASE db
   */
  userWhitelistedIpRanges?: string[];
  /**
   * Flag that displays whether an ASE has linux workers or not
   */
  hasLinuxWorkers?: boolean;
  /**
   * Key Vault ID for ILB App Service Environment default SSL certificate
   */
  sslCertKeyVaultId?: string;
  /**
   * Key Vault Secret Name for ILB App Service Environment default SSL certificate
   */
  sslCertKeyVaultSecretName?: string;
}

/**
 * Meta data about operation used for display in portal.
 */
export interface CsmOperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * Dimension of a resource metric. For e.g. instance specific HTTP requests for a web app,
 * where instance name is dimension of the metric HTTP request
 */
export interface Dimension {
  name?: string;
  displayName?: string;
  internalName?: string;
  toBeExportedForShoebox?: boolean;
}

/**
 * Retention policy of a resource metric.
 */
export interface MetricAvailability {
  timeGrain?: string;
  blobDuration?: string;
}

/**
 * Definition of a single resource metric.
 */
export interface MetricSpecification {
  name?: string;
  displayName?: string;
  displayDescription?: string;
  unit?: string;
  aggregationType?: string;
  supportsInstanceLevelAggregation?: boolean;
  enableRegionalMdmAccount?: boolean;
  sourceMdmAccount?: string;
  sourceMdmNamespace?: string;
  metricFilterPattern?: string;
  fillGapWithZero?: boolean;
  isInternal?: boolean;
  dimensions?: Dimension[];
  category?: string;
  availabilities?: MetricAvailability[];
}

/**
 * Log Definition of a single resource metric.
 */
export interface LogSpecification {
  name?: string;
  displayName?: string;
  blobDuration?: string;
}

/**
 * Resource metrics service provided by Microsoft.Insights resource provider.
 */
export interface ServiceSpecification {
  metricSpecifications?: MetricSpecification[];
  logSpecifications?: LogSpecification[];
}

/**
 * Properties available for a Microsoft.Web resource provider operation.
 */
export interface CsmOperationDescriptionProperties {
  serviceSpecification?: ServiceSpecification;
}

/**
 * Description of an operation available for Microsoft.Web resource provider.
 */
export interface CsmOperationDescription {
  name?: string;
  display?: CsmOperationDisplay;
  origin?: string;
  properties?: CsmOperationDescriptionProperties;
}

/**
 * Localizable string object containing the name and a localized value.
 */
export interface LocalizableString {
  /**
   * Non-localized name.
   */
  value?: string;
  /**
   * Localized name.
   */
  localizedValue?: string;
}

/**
 * Usage of the quota resource.
 */
export interface CsmUsageQuota {
  /**
   * Units of measurement for the quota resource.
   */
  unit?: string;
  /**
   * Next reset time for the resource counter.
   */
  nextResetTime?: Date;
  /**
   * The current value of the resource counter.
   */
  currentValue?: number;
  /**
   * The resource limit.
   */
  limit?: number;
  /**
   * Quota name.
   */
  name?: LocalizableString;
}

/**
 * Body of the error response returned from the API.
 */
export interface ErrorEntity {
  /**
   * Type of error.
   */
  extendedCode?: string;
  /**
   * Message template.
   */
  messageTemplate?: string;
  /**
   * Parameters for the template.
   */
  parameters?: string[];
  /**
   * Inner errors.
   */
  innerErrors?: ErrorEntity[];
  /**
   * Basic error code.
   */
  code?: string;
  /**
   * Any details of the error.
   */
  message?: string;
}

/**
 * Identifies an object.
 */
export interface NameIdentifier {
  /**
   * Name of the object.
   */
  name?: string;
}

/**
 * An operation on a resource.
 */
export interface Operation {
  /**
   * Operation ID.
   */
  id?: string;
  /**
   * Operation name.
   */
  name?: string;
  /**
   * The current status of the operation. Possible values include: 'InProgress', 'Failed',
   * 'Succeeded', 'TimedOut', 'Created'
   */
  status?: OperationStatus;
  /**
   * Any errors associate with the operation.
   */
  errors?: ErrorEntity[];
  /**
   * Time when operation has started.
   */
  createdTime?: Date;
  /**
   * Time when operation has been updated.
   */
  modifiedTime?: Date;
  /**
   * Time when operation will expire.
   */
  expirationTime?: Date;
  /**
   * Applicable only for stamp operation ids.
   */
  geoMasterOperationId?: string;
}

/**
 * Name of a metric for any resource .
 */
export interface ResourceMetricName {
  /**
   * metric name value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
  /**
   * Localized metric name value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localizedValue?: string;
}

/**
 * Resource metric property.
 */
export interface ResourceMetricProperty {
  /**
   * Key for resource metric property.
   */
  key?: string;
  /**
   * Value of pair.
   */
  value?: string;
}

/**
 * Value of resource metric.
 */
export interface ResourceMetricValue {
  /**
   * Value timestamp.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timestamp?: string;
  /**
   * Value average.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly average?: number;
  /**
   * Value minimum.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minimum?: number;
  /**
   * Value maximum.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximum?: number;
  /**
   * Value total.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly total?: number;
  /**
   * Value count.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly count?: number;
  /**
   * Resource metric properties collection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: ResourceMetricProperty[];
}

/**
 * Object representing a metric for any resource .
 */
export interface ResourceMetric {
  /**
   * Name of metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: ResourceMetricName;
  /**
   * Metric unit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * Metric granularity. E.g PT1H, PT5M, P1D
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeGrain?: string;
  /**
   * Metric start time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * Metric end time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * Metric resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceId?: string;
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Metric values.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricValues?: ResourceMetricValue[];
  /**
   * Resource metric properties collection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: ResourceMetricProperty[];
}

/**
 * Application logs to file system configuration.
 */
export interface FileSystemApplicationLogsConfig {
  /**
   * Log level. Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'.
   * Default value: 'Off'.
   */
  level?: LogLevel;
}

/**
 * Application logs to Azure table storage configuration.
 */
export interface AzureTableStorageApplicationLogsConfig {
  /**
   * Log level. Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
   */
  level?: LogLevel;
  /**
   * SAS URL to an Azure table with add/query/delete permissions.
   */
  sasUrl: string;
}

/**
 * Application logs azure blob storage configuration.
 */
export interface AzureBlobStorageApplicationLogsConfig {
  /**
   * Log level. Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
   */
  level?: LogLevel;
  /**
   * SAS url to a azure blob container with read/write/list/delete permissions.
   */
  sasUrl?: string;
  /**
   * Retention in days.
   * Remove blobs older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
}

/**
 * Application logs configuration.
 */
export interface ApplicationLogsConfig {
  /**
   * Application logs to file system configuration.
   */
  fileSystem?: FileSystemApplicationLogsConfig;
  /**
   * Application logs to azure table storage configuration.
   */
  azureTableStorage?: AzureTableStorageApplicationLogsConfig;
  /**
   * Application logs to blob storage configuration.
   */
  azureBlobStorage?: AzureBlobStorageApplicationLogsConfig;
}

/**
 * Http logs to azure blob storage configuration.
 */
export interface AzureBlobStorageHttpLogsConfig {
  /**
   * SAS url to a azure blob container with read/write/list/delete permissions.
   */
  sasUrl?: string;
  /**
   * Retention in days.
   * Remove blobs older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
  /**
   * True if configuration is enabled, false if it is disabled and null if configuration is not
   * set.
   */
  enabled?: boolean;
}

/**
 * AzureStorageInfo dictionary resource.
 */
export interface AzureStoragePropertyDictionaryResource extends ProxyOnlyResource {
  /**
   * Azure storage accounts.
   */
  properties?: { [propertyName: string]: AzureStorageInfoValue };
}

/**
 * Database backup settings.
 */
export interface DatabaseBackupSetting {
  /**
   * Database type (e.g. SqlAzure / MySql). Possible values include: 'SqlAzure', 'MySql',
   * 'LocalMySql', 'PostgreSql'
   */
  databaseType: DatabaseType;
  name?: string;
  /**
   * Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
   * This is used during restore with overwrite connection strings options.
   */
  connectionStringName?: string;
  /**
   * Contains a connection string to a database which is being backed up or restored. If the
   * restore should happen to a new database, the database name inside is the new one.
   */
  connectionString?: string;
}

/**
 * Backup description.
 */
export interface BackupItem extends ProxyOnlyResource {
  /**
   * Id of the backup.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupId?: number;
  /**
   * SAS URL for the storage account container which contains this backup.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageAccountUrl?: string;
  /**
   * Name of the blob which contains data for this backup.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly blobName?: string;
  /**
   * Name of this backup.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupItemName?: string;
  /**
   * Backup status. Possible values include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut',
   * 'Created', 'Skipped', 'PartiallySucceeded', 'DeleteInProgress', 'DeleteFailed', 'Deleted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: BackupItemStatus;
  /**
   * Size of the backup in bytes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sizeInBytes?: number;
  /**
   * Timestamp of the backup creation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly created?: Date;
  /**
   * Details regarding this backup. Might contain an error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly log?: string;
  /**
   * List of databases included in the backup.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databases?: DatabaseBackupSetting[];
  /**
   * True if this backup has been created due to a schedule being triggered.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scheduled?: boolean;
  /**
   * Timestamp of a last restore operation which used this backup.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastRestoreTimeStamp?: Date;
  /**
   * Timestamp when this backup finished.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly finishedTimeStamp?: Date;
  /**
   * Unique correlation identifier. Please use this along with the timestamp while communicating
   * with Azure support.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly correlationId?: string;
  /**
   * Size of the original web app which has been backed up.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly websiteSizeInBytes?: number;
}

/**
 * Description of a backup schedule. Describes how often should be the backup performed and what
 * should be the retention policy.
 */
export interface BackupSchedule {
  /**
   * How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and
   * FrequencyUnit should be set to Day). Default value: 7.
   */
  frequencyInterval: number;
  /**
   * The unit of time for how often the backup should be executed (e.g. for weekly backup, this
   * should be set to Day and FrequencyInterval should be set to 7). Possible values include:
   * 'Day', 'Hour'. Default value: 'Day'.
   */
  frequencyUnit: FrequencyUnit;
  /**
   * True if the retention policy should always keep at least one backup in the storage account,
   * regardless how old it is; false otherwise. Default value: true.
   */
  keepAtLeastOneBackup: boolean;
  /**
   * After how many days backups should be deleted. Default value: 30.
   */
  retentionPeriodInDays: number;
  /**
   * When the schedule should start working.
   */
  startTime?: Date;
  /**
   * Last time when this schedule was triggered.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastExecutionTime?: Date;
}

/**
 * Description of a backup which will be performed.
 */
export interface BackupRequest extends ProxyOnlyResource {
  /**
   * Name of the backup.
   */
  backupName?: string;
  /**
   * True if the backup schedule is enabled (must be included in that case), false if the backup
   * schedule should be disabled.
   */
  enabled?: boolean;
  /**
   * SAS URL to the container.
   */
  storageAccountUrl: string;
  /**
   * Schedule for the backup if it is executed periodically.
   */
  backupSchedule?: BackupSchedule;
  /**
   * Databases included in the backup.
   */
  databases?: DatabaseBackupSetting[];
}

/**
 * Database connection string value to type pair.
 */
export interface ConnStringValueTypePair {
  /**
   * Value of pair.
   */
  value: string;
  /**
   * Type of database. Possible values include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom',
   * 'NotificationHub', 'ServiceBus', 'EventHub', 'ApiHub', 'DocDb', 'RedisCache', 'PostgreSQL'
   */
  type: ConnectionStringType;
}

/**
 * String dictionary resource.
 */
export interface ConnectionStringDictionary extends ProxyOnlyResource {
  /**
   * Connection strings.
   */
  properties?: { [propertyName: string]: ConnStringValueTypePair };
}

/**
 * Continuous Web Job Information.
 */
export interface ContinuousWebJob extends ProxyOnlyResource {
  /**
   * Job status. Possible values include: 'Initializing', 'Starting', 'Running', 'PendingRestart',
   * 'Stopped'
   */
  status?: ContinuousWebJobStatus;
  /**
   * Detailed status.
   */
  detailedStatus?: string;
  /**
   * Log URL.
   */
  logUrl?: string;
  /**
   * Run command.
   */
  runCommand?: string;
  /**
   * Job URL.
   */
  url?: string;
  /**
   * Extra Info URL.
   */
  extraInfoUrl?: string;
  /**
   * Job type. Possible values include: 'Continuous', 'Triggered'
   */
  webJobType?: WebJobType;
  /**
   * Error information.
   */
  error?: string;
  /**
   * Using SDK?
   */
  usingSdk?: boolean;
  /**
   * Job settings.
   */
  settings?: { [propertyName: string]: any };
}

/**
 * Publishing options for requested profile.
 */
export interface CsmPublishingProfileOptions {
  /**
   * Name of the format. Valid values are:
   * FileZilla3
   * WebDeploy -- default
   * Ftp. Possible values include: 'FileZilla3', 'WebDeploy', 'Ftp'
   */
  format?: PublishingProfileFormat;
  /**
   * Include the DisasterRecover endpoint if true
   */
  includeDisasterRecoveryEndpoints?: boolean;
}

/**
 * Deployment slot parameters.
 */
export interface CsmSlotEntity {
  /**
   * Destination deployment slot during swap operation.
   */
  targetSlot: string;
  /**
   * <code>true</code> to preserve Virtual Network to the slot during swap; otherwise,
   * <code>false</code>.
   */
  preserveVnet: boolean;
}

/**
 * Custom domain analysis.
 */
export interface CustomHostnameAnalysisResult extends ProxyOnlyResource {
  /**
   * <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isHostnameAlreadyVerified?: boolean;
  /**
   * DNS verification test result. Possible values include: 'Passed', 'Failed', 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customDomainVerificationTest?: DnsVerificationTestResult;
  /**
   * Raw failure information if DNS verification fails.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customDomainVerificationFailureInfo?: ErrorEntity;
  /**
   * <code>true</code> if there is a conflict on a scale unit; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasConflictOnScaleUnit?: boolean;
  /**
   * <code>true</code> if there is a conflict across subscriptions; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasConflictAcrossSubscription?: boolean;
  /**
   * Name of the conflicting app on scale unit if it's within the same subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly conflictingAppResourceId?: string;
  /**
   * CName records controller can see for this hostname.
   */
  cNameRecords?: string[];
  /**
   * TXT records controller can see for this hostname.
   */
  txtRecords?: string[];
  /**
   * A records controller can see for this hostname.
   */
  aRecords?: string[];
  /**
   * Alternate CName records controller can see for this hostname.
   */
  alternateCNameRecords?: string[];
  /**
   * Alternate TXT records controller can see for this hostname.
   */
  alternateTxtRecords?: string[];
}

/**
 * Details about restoring a deleted app.
 */
export interface DeletedAppRestoreRequest extends ProxyOnlyResource {
  /**
   * ARM resource ID of the deleted app. Example:
   * /subscriptions/{subId}/providers/Microsoft.Web/deletedSites/{deletedSiteId}
   */
  deletedSiteId?: string;
  /**
   * If true, deleted site configuration, in addition to content, will be restored.
   */
  recoverConfiguration?: boolean;
  /**
   * Point in time to restore the deleted app from, formatted as a DateTime string.
   * If unspecified, default value is the time that the app was deleted.
   */
  snapshotTime?: string;
  /**
   * If true, the snapshot is retrieved from DRSecondary endpoint.
   */
  useDRSecondary?: boolean;
}

/**
 * User credentials used for publishing activity.
 */
export interface Deployment extends ProxyOnlyResource {
  /**
   * Deployment status.
   */
  status?: number;
  /**
   * Details about deployment status.
   */
  message?: string;
  /**
   * Who authored the deployment.
   */
  author?: string;
  /**
   * Who performed the deployment.
   */
  deployer?: string;
  /**
   * Author email.
   */
  authorEmail?: string;
  /**
   * Start time.
   */
  startTime?: Date;
  /**
   * End time.
   */
  endTime?: Date;
  /**
   * True if deployment is currently active, false if completed and null if not started.
   */
  active?: boolean;
  /**
   * Details on deployment.
   */
  details?: string;
}

/**
 * Enabled configuration.
 */
export interface EnabledConfig {
  /**
   * True if configuration is enabled, false if it is disabled and null if configuration is not
   * set.
   */
  enabled?: boolean;
}

/**
 * Http logs to file system configuration.
 */
export interface FileSystemHttpLogsConfig {
  /**
   * Maximum size in megabytes that http log files can use.
   * When reached old log files will be removed to make space for new ones.
   * Value can range between 25 and 100.
   */
  retentionInMb?: number;
  /**
   * Retention in days.
   * Remove files older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
  /**
   * True if configuration is enabled, false if it is disabled and null if configuration is not
   * set.
   */
  enabled?: boolean;
}

/**
 * Web Job Information.
 */
export interface FunctionEnvelope extends ProxyOnlyResource {
  /**
   * Function App ID.
   */
  functionAppId?: string;
  /**
   * Script root path URI.
   */
  scriptRootPathHref?: string;
  /**
   * Script URI.
   */
  scriptHref?: string;
  /**
   * Config URI.
   */
  configHref?: string;
  /**
   * Secrets file URI.
   */
  secretsFileHref?: string;
  /**
   * Function URI.
   */
  href?: string;
  /**
   * Config information.
   */
  config?: any;
  /**
   * File list.
   */
  files?: { [propertyName: string]: string };
  /**
   * Test data used when testing via the Azure Portal.
   */
  testData?: string;
}

/**
 * Function secrets.
 */
export interface FunctionSecrets extends ProxyOnlyResource {
  /**
   * Secret key.
   */
  key?: string;
  /**
   * Trigger URL.
   */
  triggerUrl?: string;
}

/**
 * A hostname binding object.
 */
export interface HostNameBinding extends ProxyOnlyResource {
  /**
   * App Service app name.
   */
  siteName?: string;
  /**
   * Fully qualified ARM domain resource URI.
   */
  domainId?: string;
  /**
   * Azure resource name.
   */
  azureResourceName?: string;
  /**
   * Azure resource type. Possible values include: 'Website', 'TrafficManager'
   */
  azureResourceType?: AzureResourceType;
  /**
   * Custom DNS record type. Possible values include: 'CName', 'A'
   */
  customHostNameDnsRecordType?: CustomHostNameDnsRecordType;
  /**
   * Hostname type. Possible values include: 'Verified', 'Managed'
   */
  hostNameType?: HostNameType;
  /**
   * SSL type. Possible values include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
   */
  sslState?: SslState;
  /**
   * SSL certificate thumbprint
   */
  thumbprint?: string;
  /**
   * Virtual IP address assigned to the hostname if IP based SSL is enabled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualIP?: string;
}

/**
 * Http logs configuration.
 */
export interface HttpLogsConfig {
  /**
   * Http logs to file system configuration.
   */
  fileSystem?: FileSystemHttpLogsConfig;
  /**
   * Http logs to azure blob storage configuration.
   */
  azureBlobStorage?: AzureBlobStorageHttpLogsConfig;
}

/**
 * MSDeploy ARM PUT information
 */
export interface MSDeploy extends ProxyOnlyResource {
  /**
   * Package URI
   */
  packageUri?: string;
  /**
   * SQL Connection String
   */
  connectionString?: string;
  /**
   * Database Type
   */
  dbType?: string;
  /**
   * URI of MSDeploy Parameters file. Must not be set if SetParameters is used.
   */
  setParametersXmlFileUri?: string;
  /**
   * MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.
   */
  setParameters?: { [propertyName: string]: string };
  /**
   * Controls whether the MSDeploy operation skips the App_Data directory.
   * If set to <code>true</code>, the existing App_Data directory on the destination
   * will not be deleted, and any App_Data directory in the source will be ignored.
   * Setting is <code>false</code> by default.
   */
  skipAppData?: boolean;
  /**
   * Sets the AppOffline rule while the MSDeploy operation executes.
   * Setting is <code>false</code> by default.
   */
  appOffline?: boolean;
}

/**
 * MSDeploy log entry
 */
export interface MSDeployLogEntry {
  /**
   * Timestamp of log entry
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly time?: Date;
  /**
   * Log entry type. Possible values include: 'Message', 'Warning', 'Error'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: MSDeployLogEntryType;
  /**
   * Log entry message
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * MSDeploy log
 */
export interface MSDeployLog extends ProxyOnlyResource {
  /**
   * List of log entry messages
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entries?: MSDeployLogEntry[];
}

/**
 * MSDeploy ARM response
 */
export interface MSDeployStatus extends ProxyOnlyResource {
  /**
   * Username of deployer
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deployer?: string;
  /**
   * Provisioning state. Possible values include: 'accepted', 'running', 'succeeded', 'failed',
   * 'canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: MSDeployProvisioningState;
  /**
   * Start time of deploy operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * End time of deploy operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * Whether the deployment operation has completed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly complete?: boolean;
}

/**
 * MySQL migration request.
 */
export interface MigrateMySqlRequest extends ProxyOnlyResource {
  /**
   * Connection string to the remote MySQL database.
   */
  connectionString: string;
  /**
   * The type of migration operation to be done. Possible values include: 'LocalToRemote',
   * 'RemoteToLocal'
   */
  migrationType: MySqlMigrationType;
}

/**
 * MySQL migration status.
 */
export interface MigrateMySqlStatus extends ProxyOnlyResource {
  /**
   * Status of the migration task. Possible values include: 'InProgress', 'Failed', 'Succeeded',
   * 'TimedOut', 'Created'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly migrationOperationStatus?: OperationStatus;
  /**
   * Operation ID for the migration task.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationId?: string;
  /**
   * True if the web app has in app MySql enabled
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localMySqlEnabled?: boolean;
}

/**
 * Hybrid Connection for an App Service app.
 */
export interface RelayServiceConnectionEntity extends ProxyOnlyResource {
  entityName?: string;
  entityConnectionString?: string;
  resourceType?: string;
  resourceConnectionString?: string;
  hostname?: string;
  port?: number;
  biztalkUri?: string;
}

/**
 * Full view of network features for an app (presently VNET integration and Hybrid Connections).
 */
export interface NetworkFeatures extends ProxyOnlyResource {
  /**
   * The Virtual Network name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualNetworkName?: string;
  /**
   * The Virtual Network summary view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualNetworkConnection?: VnetInfo;
  /**
   * The Hybrid Connections summary view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hybridConnections?: RelayServiceConnectionEntity[];
  /**
   * The Hybrid Connection V2 (Service Bus) view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hybridConnectionsV2?: HybridConnection[];
}

/**
 * Network trace
 */
export interface NetworkTrace {
  /**
   * Local file path for the captured network trace file.
   */
  path?: string;
  /**
   * Current status of the network trace operation, same as Operation.Status
   * (InProgress/Succeeded/Failed).
   */
  status?: string;
  /**
   * Detailed message of a network trace operation, e.g. error message in case of failure.
   */
  message?: string;
}

/**
 * Performance monitor sample in a set.
 */
export interface PerfMonSample {
  /**
   * Point in time for which counter was measured.
   */
  time?: Date;
  /**
   * Name of the server on which the measurement is made.
   */
  instanceName?: string;
  /**
   * Value of counter at a certain time.
   */
  value?: number;
}

/**
 * Metric information.
 */
export interface PerfMonSet {
  /**
   * Unique key name of the counter.
   */
  name?: string;
  /**
   * Start time of the period.
   */
  startTime?: Date;
  /**
   * End time of the period.
   */
  endTime?: Date;
  /**
   * Presented time grain.
   */
  timeGrain?: string;
  /**
   * Collection of workers that are active during this time.
   */
  values?: PerfMonSample[];
}

/**
 * Performance monitor API response.
 */
export interface PerfMonResponse {
  /**
   * The response code.
   */
  code?: string;
  /**
   * The message.
   */
  message?: string;
  /**
   * The performance monitor counters.
   */
  data?: PerfMonSet;
}

/**
 * Premier add-on.
 */
export interface PremierAddOn extends Resource {
  /**
   * Premier add on SKU.
   */
  sku?: string;
  /**
   * Premier add on Product.
   */
  product?: string;
  /**
   * Premier add on Vendor.
   */
  vendor?: string;
  /**
   * Premier add on Marketplace publisher.
   */
  marketplacePublisher?: string;
  /**
   * Premier add on Marketplace offer.
   */
  marketplaceOffer?: string;
}

/**
 * ARM resource for a PremierAddOn.
 */
export interface PremierAddOnPatchResource extends ProxyOnlyResource {
  /**
   * Premier add on SKU.
   */
  sku?: string;
  /**
   * Premier add on Product.
   */
  product?: string;
  /**
   * Premier add on Vendor.
   */
  vendor?: string;
  /**
   * Premier add on Marketplace publisher.
   */
  marketplacePublisher?: string;
  /**
   * Premier add on Marketplace offer.
   */
  marketplaceOffer?: string;
}

/**
 * Description of a Virtual Network subnet that is useable for private site access.
 */
export interface PrivateAccessSubnet {
  /**
   * The name of the subnet.
   */
  name?: string;
  /**
   * The key (ID) of the subnet.
   */
  key?: number;
}

/**
 * Description of a Virtual Network that is useable for private site access.
 */
export interface PrivateAccessVirtualNetwork {
  /**
   * The name of the Virtual Network.
   */
  name?: string;
  /**
   * The key (ID) of the Virtual Network.
   */
  key?: number;
  /**
   * The ARM uri of the Virtual Network
   */
  resourceId?: string;
  /**
   * A List of subnets that access is allowed to on this Virtual Network. An empty array (but not
   * null) is interpreted to mean that all subnets are allowed within this Virtual Network.
   */
  subnets?: PrivateAccessSubnet[];
}

/**
 * Description of the parameters of Private Access for a Web Site.
 */
export interface PrivateAccess extends ProxyOnlyResource {
  /**
   * Whether private access is enabled or not.
   */
  enabled?: boolean;
  /**
   * The Virtual Networks (and subnets) allowed to access the site privately.
   */
  virtualNetworks?: PrivateAccessVirtualNetwork[];
}

/**
 * Process Thread Information.
 */
export interface ProcessThreadInfo extends ProxyOnlyResource {
  /**
   * Site extension ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly identifier?: number;
  /**
   * HRef URI.
   */
  href?: string;
  /**
   * Process URI.
   */
  process?: string;
  /**
   * Start address.
   */
  startAddress?: string;
  /**
   * Current thread priority.
   */
  currentPriority?: number;
  /**
   * Thread priority level.
   */
  priorityLevel?: string;
  /**
   * Base priority.
   */
  basePriority?: number;
  /**
   * Start time.
   */
  startTime?: Date;
  /**
   * Total processor time.
   */
  totalProcessorTime?: string;
  /**
   * User processor time.
   */
  userProcessorTime?: string;
  /**
   * Privileged processor time.
   */
  priviledgedProcessorTime?: string;
  /**
   * Thread state.
   */
  state?: string;
  /**
   * Wait reason.
   */
  waitReason?: string;
}

/**
 * Process Module Information.
 */
export interface ProcessModuleInfo extends ProxyOnlyResource {
  /**
   * Base address. Used as module identifier in ARM resource URI.
   */
  baseAddress?: string;
  /**
   * File name.
   */
  fileName?: string;
  /**
   * HRef URI.
   */
  href?: string;
  /**
   * File path.
   */
  filePath?: string;
  /**
   * Module memory size.
   */
  moduleMemorySize?: number;
  /**
   * File version.
   */
  fileVersion?: string;
  /**
   * File description.
   */
  fileDescription?: string;
  /**
   * Product name.
   */
  product?: string;
  /**
   * Product version.
   */
  productVersion?: string;
  /**
   * Is debug?
   */
  isDebug?: boolean;
  /**
   * Module language (locale).
   */
  language?: string;
}

/**
 * Process Information.
 */
export interface ProcessInfo extends ProxyOnlyResource {
  /**
   * ARM Identifier for deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly identifier?: number;
  /**
   * Deployment name.
   */
  deploymentName?: string;
  /**
   * HRef URI.
   */
  href?: string;
  /**
   * Minidump URI.
   */
  minidump?: string;
  /**
   * Is profile running?
   */
  isProfileRunning?: boolean;
  /**
   * Is the IIS Profile running?
   */
  isIisProfileRunning?: boolean;
  /**
   * IIS Profile timeout (seconds).
   */
  iisProfileTimeoutInSeconds?: number;
  /**
   * Parent process.
   */
  parent?: string;
  /**
   * Child process list.
   */
  children?: string[];
  /**
   * Thread list.
   */
  threads?: ProcessThreadInfo[];
  /**
   * List of open files.
   */
  openFileHandles?: string[];
  /**
   * List of modules.
   */
  modules?: ProcessModuleInfo[];
  /**
   * File name of this process.
   */
  fileName?: string;
  /**
   * Command line.
   */
  commandLine?: string;
  /**
   * User name.
   */
  userName?: string;
  /**
   * Handle count.
   */
  handleCount?: number;
  /**
   * Module count.
   */
  moduleCount?: number;
  /**
   * Thread count.
   */
  threadCount?: number;
  /**
   * Start time.
   */
  startTime?: Date;
  /**
   * Total CPU time.
   */
  totalCpuTime?: string;
  /**
   * User CPU time.
   */
  userCpuTime?: string;
  /**
   * Privileged CPU time.
   */
  privilegedCpuTime?: string;
  /**
   * Working set.
   */
  workingSet?: number;
  /**
   * Peak working set.
   */
  peakWorkingSet?: number;
  /**
   * Private memory size.
   */
  privateMemory?: number;
  /**
   * Virtual memory size.
   */
  virtualMemory?: number;
  /**
   * Peak virtual memory usage.
   */
  peakVirtualMemory?: number;
  /**
   * Paged system memory.
   */
  pagedSystemMemory?: number;
  /**
   * Non-paged system memory.
   */
  nonPagedSystemMemory?: number;
  /**
   * Paged memory.
   */
  pagedMemory?: number;
  /**
   * Peak paged memory.
   */
  peakPagedMemory?: number;
  /**
   * Time stamp.
   */
  timeStamp?: Date;
  /**
   * List of environment variables.
   */
  environmentVariables?: { [propertyName: string]: string };
  /**
   * Is this the SCM site?
   */
  isScmSite?: boolean;
  /**
   * Is this a Web Job?
   */
  isWebjob?: boolean;
  /**
   * Description of process.
   */
  description?: string;
}

/**
 * Public certificate object
 */
export interface PublicCertificate extends ProxyOnlyResource {
  /**
   * Public Certificate byte array
   */
  blob?: Uint8Array;
  /**
   * Public Certificate Location. Possible values include: 'CurrentUserMy', 'LocalMachineMy',
   * 'Unknown'
   */
  publicCertificateLocation?: PublicCertificateLocation;
  /**
   * Certificate Thumbprint
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
}

/**
 * Description of a restore request.
 */
export interface RestoreRequest extends ProxyOnlyResource {
  /**
   * SAS URL to the container.
   */
  storageAccountUrl: string;
  /**
   * Name of a blob which contains the backup.
   */
  blobName?: string;
  /**
   * <code>true</code> if the restore operation can overwrite target app; otherwise,
   * <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.
   */
  overwrite: boolean;
  /**
   * Name of an app.
   */
  siteName?: string;
  /**
   * Collection of databases which should be restored. This list has to match the list of databases
   * included in the backup.
   */
  databases?: DatabaseBackupSetting[];
  /**
   * Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom
   * domains automatically. If <code>false</code>, custom domains are added to
   * the app's object when it is being restored, but that might fail due to conflicts during the
   * operation. Default value: false.
   */
  ignoreConflictingHostNames?: boolean;
  /**
   * Ignore the databases and only restore the site content. Default value: false.
   */
  ignoreDatabases?: boolean;
  /**
   * Specify app service plan that will own restored site.
   */
  appServicePlan?: string;
  /**
   * Operation type. Possible values include: 'Default', 'Clone', 'Relocation', 'Snapshot',
   * 'CloudFS'. Default value: 'Default'.
   */
  operationType?: BackupRestoreOperationType;
  /**
   * <code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise,
   * <code>false</code>.
   */
  adjustConnectionStrings?: boolean;
  /**
   * App Service Environment name, if needed (only when restoring an app to an App Service
   * Environment).
   */
  hostingEnvironment?: string;
}

/**
 * Configuration settings for the Azure App Service Authentication / Authorization feature.
 */
export interface SiteAuthSettings extends ProxyOnlyResource {
  /**
   * <code>true</code> if the Authentication / Authorization feature is enabled for the current
   * app; otherwise, <code>false</code>.
   */
  enabled?: boolean;
  /**
   * The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
   * The setting in this value can control the behavior of certain features in the Authentication /
   * Authorization module.
   */
  runtimeVersion?: string;
  /**
   * The action to take when an unauthenticated client attempts to access the app. Possible values
   * include: 'RedirectToLoginPage', 'AllowAnonymous'
   */
  unauthenticatedClientAction?: UnauthenticatedClientAction;
  /**
   * <code>true</code> to durably store platform-specific security tokens that are obtained during
   * login flows; otherwise, <code>false</code>.
   * The default is <code>false</code>.
   */
  tokenStoreEnabled?: boolean;
  /**
   * External URLs that can be redirected to as part of logging in or logging out of the app. Note
   * that the query string part of the URL is ignored.
   * This is an advanced setting typically only needed by Windows Store application backends.
   * Note that URLs within the current domain are always implicitly allowed.
   */
  allowedExternalRedirectUrls?: string[];
  /**
   * The default authentication provider to use when multiple providers are configured.
   * This setting is only needed if multiple providers are configured and the unauthenticated
   * client
   * action is set to "RedirectToLoginPage". Possible values include: 'AzureActiveDirectory',
   * 'Facebook', 'Google', 'MicrosoftAccount', 'Twitter'
   */
  defaultProvider?: BuiltInAuthenticationProvider;
  /**
   * The number of hours after session token expiration that a session token can be used to
   * call the token refresh API. The default is 72 hours.
   */
  tokenRefreshExtensionHours?: number;
  /**
   * The Client ID of this relying party application, known as the client_id.
   * This setting is required for enabling OpenID Connection authentication with Azure Active
   * Directory or
   * other 3rd party OpenID Connect providers.
   * More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
   */
  clientId?: string;
  /**
   * The Client Secret of this relying party application (in Azure Active Directory, this is also
   * referred to as the Key).
   * This setting is optional. If no client secret is configured, the OpenID Connect implicit auth
   * flow is used to authenticate end users.
   * Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
   * More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
   */
  clientSecret?: string;
  /**
   * An alternative to the client secret, that is the thumbprint of a certificate used for signing
   * purposes. This property acts as
   * a replacement for the Client Secret. It is also optional.
   */
  clientSecretCertificateThumbprint?: string;
  /**
   * The OpenID Connect Issuer URI that represents the entity which issues access tokens for this
   * application.
   * When using Azure Active Directory, this value is the URI of the directory tenant, e.g.
   * https://sts.windows.net/{tenant-guid}/.
   * This URI is a case-sensitive identifier for the token issuer.
   * More information on OpenID Connect Discovery:
   * http://openid.net/specs/openid-connect-discovery-1_0.html
   */
  issuer?: string;
  /**
   * Gets a value indicating whether the issuer should be a valid HTTPS url and be validated as
   * such.
   */
  validateIssuer?: boolean;
  /**
   * Allowed audience values to consider when validating JWTs issued by
   * Azure Active Directory. Note that the <code>ClientID</code> value is always considered an
   * allowed audience, regardless of this setting.
   */
  allowedAudiences?: string[];
  /**
   * Login parameters to send to the OpenID Connect authorization endpoint when
   * a user logs in. Each parameter must be in the form "key=value".
   */
  additionalLoginParams?: string[];
  /**
   * The OpenID Connect Client ID for the Google web application.
   * This setting is required for enabling Google Sign-In.
   * Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
   */
  googleClientId?: string;
  /**
   * The client secret associated with the Google web application.
   * This setting is required for enabling Google Sign-In.
   * Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
   */
  googleClientSecret?: string;
  /**
   * The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
   * This setting is optional. If not specified, "openid", "profile", and "email" are used as
   * default scopes.
   * Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
   */
  googleOAuthScopes?: string[];
  /**
   * The App ID of the Facebook app used for login.
   * This setting is required for enabling Facebook Login.
   * Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
   */
  facebookAppId?: string;
  /**
   * The App Secret of the Facebook app used for Facebook Login.
   * This setting is required for enabling Facebook Login.
   * Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
   */
  facebookAppSecret?: string;
  /**
   * The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
   * This setting is optional.
   * Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
   */
  facebookOAuthScopes?: string[];
  /**
   * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
   * This setting is required for enabling Twitter Sign-In.
   * Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
   */
  twitterConsumerKey?: string;
  /**
   * The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
   * This setting is required for enabling Twitter Sign-In.
   * Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
   */
  twitterConsumerSecret?: string;
  /**
   * The OAuth 2.0 client ID that was created for the app used for authentication.
   * This setting is required for enabling Microsoft Account authentication.
   * Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
   */
  microsoftAccountClientId?: string;
  /**
   * The OAuth 2.0 client secret that was created for the app used for authentication.
   * This setting is required for enabling Microsoft Account authentication.
   * Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
   */
  microsoftAccountClientSecret?: string;
  /**
   * The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
   * This setting is optional. If not specified, "wl.basic" is used as the default scope.
   * Microsoft Account Scopes and permissions documentation:
   * https://msdn.microsoft.com/en-us/library/dn631845.aspx
   */
  microsoftAccountOAuthScopes?: string[];
}

/**
 * An app cloneability criterion.
 */
export interface SiteCloneabilityCriterion {
  /**
   * Name of criterion.
   */
  name?: string;
  /**
   * Description of criterion.
   */
  description?: string;
}

/**
 * Represents whether or not an app is cloneable.
 */
export interface SiteCloneability {
  /**
   * Name of app. Possible values include: 'Cloneable', 'PartiallyCloneable', 'NotCloneable'
   */
  result?: CloneAbilityResult;
  /**
   * List of features enabled on app that prevent cloning.
   */
  blockingFeatures?: SiteCloneabilityCriterion[];
  /**
   * List of features enabled on app that are non-blocking but cannot be cloned. The app can still
   * be cloned
   * but the features in this list will not be set up on cloned app.
   */
  unsupportedFeatures?: SiteCloneabilityCriterion[];
  /**
   * List of blocking application characteristics.
   */
  blockingCharacteristics?: SiteCloneabilityCriterion[];
}

/**
 * Web app configuration ARM resource.
 */
export interface SiteConfigResource extends ProxyOnlyResource {
  /**
   * Number of workers.
   */
  numberOfWorkers?: number;
  /**
   * Default documents.
   */
  defaultDocuments?: string[];
  /**
   * .NET Framework version. Default value: 'v4.6'.
   */
  netFrameworkVersion?: string;
  /**
   * Version of PHP.
   */
  phpVersion?: string;
  /**
   * Version of Python.
   */
  pythonVersion?: string;
  /**
   * Version of Node.js.
   */
  nodeVersion?: string;
  /**
   * Linux App Framework and version
   */
  linuxFxVersion?: string;
  /**
   * Xenon App Framework and version
   */
  windowsFxVersion?: string;
  /**
   * <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
   */
  requestTracingEnabled?: boolean;
  /**
   * Request tracing expiration time.
   */
  requestTracingExpirationTime?: Date;
  /**
   * <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
   */
  remoteDebuggingEnabled?: boolean;
  /**
   * Remote debugging version.
   */
  remoteDebuggingVersion?: string;
  /**
   * <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
   */
  httpLoggingEnabled?: boolean;
  /**
   * HTTP logs directory size limit.
   */
  logsDirectorySizeLimit?: number;
  /**
   * <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
   */
  detailedErrorLoggingEnabled?: boolean;
  /**
   * Publishing user name.
   */
  publishingUsername?: string;
  /**
   * Application settings.
   */
  appSettings?: NameValuePair[];
  /**
   * User-provided Azure storage accounts.
   */
  azureStorageAccounts?: { [propertyName: string]: AzureStorageInfoValue };
  /**
   * Connection strings.
   */
  connectionStrings?: ConnStringInfo[];
  /**
   * Site MachineKey.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly machineKey?: SiteMachineKey;
  /**
   * Handler mappings.
   */
  handlerMappings?: HandlerMapping[];
  /**
   * Document root.
   */
  documentRoot?: string;
  /**
   * SCM type. Possible values include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
   * 'CodePlexGit', 'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg',
   * 'OneDrive', 'VSO'
   */
  scmType?: ScmType;
  /**
   * <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
   */
  use32BitWorkerProcess?: boolean;
  /**
   * <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
   */
  webSocketsEnabled?: boolean;
  /**
   * <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
   */
  alwaysOn?: boolean;
  /**
   * Java version.
   */
  javaVersion?: string;
  /**
   * Java container.
   */
  javaContainer?: string;
  /**
   * Java container version.
   */
  javaContainerVersion?: string;
  /**
   * App command line to launch.
   */
  appCommandLine?: string;
  /**
   * Managed pipeline mode. Possible values include: 'Integrated', 'Classic'
   */
  managedPipelineMode?: ManagedPipelineMode;
  /**
   * Virtual applications.
   */
  virtualApplications?: VirtualApplication[];
  /**
   * Site load balancing. Possible values include: 'WeightedRoundRobin', 'LeastRequests',
   * 'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
   */
  loadBalancing?: SiteLoadBalancing;
  /**
   * This is work around for polymorphic types.
   */
  experiments?: Experiments;
  /**
   * Site limits.
   */
  limits?: SiteLimits;
  /**
   * <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
   */
  autoHealEnabled?: boolean;
  /**
   * Auto Heal rules.
   */
  autoHealRules?: AutoHealRules;
  /**
   * Tracing options.
   */
  tracingOptions?: string;
  /**
   * Virtual Network name.
   */
  vnetName?: string;
  /**
   * Cross-Origin Resource Sharing (CORS) settings.
   */
  cors?: CorsSettings;
  /**
   * Push endpoint settings.
   */
  push?: PushSettings;
  /**
   * Information about the formal API definition for the app.
   */
  apiDefinition?: ApiDefinitionInfo;
  /**
   * Auto-swap slot name.
   */
  autoSwapSlotName?: string;
  /**
   * <code>true</code> to enable local MySQL; otherwise, <code>false</code>. Default value: false.
   */
  localMySqlEnabled?: boolean;
  /**
   * Managed Service Identity Id
   */
  managedServiceIdentityId?: number;
  /**
   * Explicit Managed Service Identity Id
   */
  xManagedServiceIdentityId?: number;
  /**
   * IP security restrictions for main.
   */
  ipSecurityRestrictions?: IpSecurityRestriction[];
  /**
   * IP security restrictions for scm.
   */
  scmIpSecurityRestrictions?: IpSecurityRestriction[];
  /**
   * IP security restrictions for scm to use main.
   */
  scmIpSecurityRestrictionsUseMain?: boolean;
  /**
   * Http20Enabled: configures a web site to allow clients to connect over http2.0. Default value:
   * true.
   */
  http20Enabled?: boolean;
  /**
   * MinTlsVersion: configures the minimum version of TLS required for SSL requests. Possible
   * values include: '1.0', '1.1', '1.2'
   */
  minTlsVersion?: SupportedTlsVersions;
  /**
   * State of FTP / FTPS service. Possible values include: 'AllAllowed', 'FtpsOnly', 'Disabled'
   */
  ftpsState?: FtpsState;
  /**
   * Number of reserved instances.
   * This setting only applies to the Consumption Plan
   */
  reservedInstanceCount?: number;
}

/**
 * A snapshot of a web app configuration.
 */
export interface SiteConfigurationSnapshotInfo extends ProxyOnlyResource {
  /**
   * The time the snapshot was taken.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly time?: Date;
  /**
   * The id of the snapshot
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly snapshotId?: number;
}

/**
 * Site Extension Information.
 */
export interface SiteExtensionInfo extends ProxyOnlyResource {
  /**
   * Site extension ID.
   */
  extensionId?: string;
  title?: string;
  /**
   * Site extension type. Possible values include: 'Gallery', 'WebRoot'
   */
  extensionType?: SiteExtensionType;
  /**
   * Summary description.
   */
  summary?: string;
  /**
   * Detailed description.
   */
  description?: string;
  /**
   * Version information.
   */
  version?: string;
  /**
   * Extension URL.
   */
  extensionUrl?: string;
  /**
   * Project URL.
   */
  projectUrl?: string;
  /**
   * Icon URL.
   */
  iconUrl?: string;
  /**
   * License URL.
   */
  licenseUrl?: string;
  /**
   * Feed URL.
   */
  feedUrl?: string;
  /**
   * List of authors.
   */
  authors?: string[];
  /**
   * Installer command line parameters.
   */
  installerCommandLineParams?: string;
  /**
   * Published timestamp.
   */
  publishedDateTime?: Date;
  /**
   * Count of downloads.
   */
  downloadCount?: number;
  /**
   * <code>true</code> if the local version is the latest version; <code>false</code> otherwise.
   */
  localIsLatestVersion?: boolean;
  /**
   * Local path.
   */
  localPath?: string;
  /**
   * Installed timestamp.
   */
  installedDateTime?: Date;
  /**
   * Provisioning state.
   */
  provisioningState?: string;
  /**
   * Site Extension comment.
   */
  comment?: string;
}

/**
 * Instance of an app.
 */
export interface SiteInstance extends ProxyOnlyResource {
  /**
   * Name of instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly siteInstanceName?: string;
}

/**
 * Configuration of App Service site logs.
 */
export interface SiteLogsConfig extends ProxyOnlyResource {
  /**
   * Application logs configuration.
   */
  applicationLogs?: ApplicationLogsConfig;
  /**
   * HTTP logs configuration.
   */
  httpLogs?: HttpLogsConfig;
  /**
   * Failed requests tracing configuration.
   */
  failedRequestsTracing?: EnabledConfig;
  /**
   * Detailed error messages configuration.
   */
  detailedErrorMessages?: EnabledConfig;
}

/**
 * ARM resource for a site.
 */
export interface SitePatchResource extends ProxyOnlyResource {
  /**
   * Current state of the app.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * Hostnames associated with the app.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostNames?: string[];
  /**
   * Name of the repository site.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly repositorySiteName?: string;
  /**
   * State indicating whether the app has exceeded its quota usage. Read-only. Possible values
   * include: 'Normal', 'Exceeded'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usageState?: UsageState;
  /**
   * <code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to
   * false disables the app (takes the app offline).
   */
  enabled?: boolean;
  /**
   * Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled.
   * Otherwise,
   * the app is not served on those hostnames.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enabledHostNames?: string[];
  /**
   * Management information availability state for the app. Possible values include: 'Normal',
   * 'Limited', 'DisasterRecoveryMode'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availabilityState?: SiteAvailabilityState;
  /**
   * Hostname SSL states are used to manage the SSL bindings for app's hostnames.
   */
  hostNameSslStates?: HostNameSslState[];
  /**
   * Resource ID of the associated App Service plan, formatted as:
   * "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
   */
  serverFarmId?: string;
  /**
   * <code>true</code> if reserved; otherwise, <code>false</code>. Default value: false.
   */
  reserved?: boolean;
  /**
   * Obsolete: Hyper-V sandbox. Default value: false.
   */
  isXenon?: boolean;
  /**
   * Hyper-V sandbox. Default value: false.
   */
  hyperV?: boolean;
  /**
   * Last time the app was modified, in UTC. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTimeUtc?: Date;
  /**
   * Configuration of the app.
   */
  siteConfig?: SiteConfig;
  /**
   * Azure Traffic Manager hostnames associated with the app. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trafficManagerHostNames?: string[];
  /**
   * <code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise,
   * <code>false</code>. The default is <code>false</code>. Default value: false.
   */
  scmSiteAlsoStopped?: boolean;
  /**
   * Specifies which deployment slot this app will swap into. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetSwapSlot?: string;
  /**
   * App Service Environment to use for the app.
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * <code>true</code> to enable client affinity; <code>false</code> to stop sending session
   * affinity cookies, which route client requests in the same session to the same instance.
   * Default is <code>true</code>.
   */
  clientAffinityEnabled?: boolean;
  /**
   * <code>true</code> to enable client certificate authentication (TLS mutual authentication);
   * otherwise, <code>false</code>. Default is <code>false</code>.
   */
  clientCertEnabled?: boolean;
  /**
   * client certificate authentication comma-separated exclusion paths
   */
  clientCertExclusionPaths?: string;
  /**
   * <code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.
   * If <code>true</code>, the app is only accessible via API management process.
   */
  hostNamesDisabled?: boolean;
  /**
   * List of IP addresses that the app uses for outbound connections (e.g. database access).
   * Includes VIPs from tenants that site can be hosted with current settings. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly outboundIpAddresses?: string;
  /**
   * List of IP addresses that the app uses for outbound connections (e.g. database access).
   * Includes VIPs from all tenants. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly possibleOutboundIpAddresses?: string;
  /**
   * Size of the function container.
   */
  containerSize?: number;
  /**
   * Maximum allowed daily memory-time quota (applicable on dynamic apps only).
   */
  dailyMemoryTimeQuota?: number;
  /**
   * App suspended till in case memory-time quota is exceeded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly suspendedTill?: Date;
  /**
   * Maximum number of workers.
   * This only applies to Functions container.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxNumberOfWorkers?: number;
  /**
   * If specified during app creation, the app is cloned from a source app.
   */
  cloningInfo?: CloningInfo;
  /**
   * Name of the resource group the app belongs to. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * <code>true</code> if the app is a default container; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDefaultContainer?: boolean;
  /**
   * Default hostname of the app. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultHostName?: string;
  /**
   * Status of the last deployment slot swap operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly slotSwapStatus?: SlotSwapStatus;
  /**
   * HttpsOnly: configures a web site to accept only https requests. Issues redirect for
   * http requests
   */
  httpsOnly?: boolean;
  /**
   * Site redundancy mode. Possible values include: 'None', 'Manual', 'Failover', 'ActiveActive',
   * 'GeoRedundant'
   */
  redundancyMode?: RedundancyMode;
  /**
   * Specifies an operation id if this site has a pending operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly inProgressOperationId?: string;
  /**
   * GeoDistributions for this site
   */
  geoDistributions?: GeoDistribution[];
  identity?: ManagedServiceIdentity;
}

/**
 * Used for getting PHP error logging flag.
 */
export interface SitePhpErrorLogFlag extends ProxyOnlyResource {
  /**
   * Local log_errors setting.
   */
  localLogErrors?: string;
  /**
   * Master log_errors setting.
   */
  masterLogErrors?: string;
  /**
   * Local log_errors_max_len setting.
   */
  localLogErrorsMaxLength?: string;
  /**
   * Master log_errors_max_len setting.
   */
  masterLogErrorsMaxLength?: string;
}

/**
 * Source control configuration for an app.
 */
export interface SiteSourceControl extends ProxyOnlyResource {
  /**
   * Repository or source control URL.
   */
  repoUrl?: string;
  /**
   * Name of branch to use for deployment.
   */
  branch?: string;
  /**
   * <code>true</code> to limit to manual integration; <code>false</code> to enable continuous
   * integration (which configures webhooks into online repos like GitHub).
   */
  isManualIntegration?: boolean;
  /**
   * <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.
   */
  deploymentRollbackEnabled?: boolean;
  /**
   * <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.
   */
  isMercurial?: boolean;
}

/**
 * Slot Config names azure resource.
 */
export interface SlotConfigNamesResource extends ProxyOnlyResource {
  /**
   * List of connection string names.
   */
  connectionStringNames?: string[];
  /**
   * List of application settings names.
   */
  appSettingNames?: string[];
  /**
   * List of external Azure storage account identifiers.
   */
  azureStorageConfigNames?: string[];
}

/**
 * A setting difference between two deployment slots of an app.
 */
export interface SlotDifference extends ProxyOnlyResource {
  /**
   * Level of the difference: Information, Warning or Error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly level?: string;
  /**
   * The type of the setting: General, AppSetting or ConnectionString.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly settingType?: string;
  /**
   * Rule that describes how to process the setting difference during a slot swap.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diffRule?: string;
  /**
   * Name of the setting.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly settingName?: string;
  /**
   * Value of the setting in the current slot.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly valueInCurrentSlot?: string;
  /**
   * Value of the setting in the target slot.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly valueInTargetSlot?: string;
  /**
   * Description of the setting difference.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * Specifies the web app that snapshot contents will be retrieved from.
 */
export interface SnapshotRecoverySource {
  /**
   * Geographical location of the source web app, e.g. SouthEastAsia, SouthCentralUS
   */
  location?: string;
  /**
   * ARM resource ID of the source app.
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
   * for production slots and
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
   * for other slots.
   */
  id?: string;
}

/**
 * Details about app recovery operation.
 */
export interface SnapshotRestoreRequest extends ProxyOnlyResource {
  /**
   * Point in time in which the app restore should be done, formatted as a DateTime string.
   */
  snapshotTime?: string;
  /**
   * Optional. Specifies the web app that snapshot contents will be retrieved from.
   * If empty, the targeted web app will be used as the source.
   */
  recoverySource?: SnapshotRecoverySource;
  /**
   * If <code>true</code> the restore operation can overwrite source app; otherwise,
   * <code>false</code>.
   */
  overwrite: boolean;
  /**
   * If true, site configuration, in addition to content, will be reverted.
   */
  recoverConfiguration?: boolean;
  /**
   * If true, custom hostname conflicts will be ignored when recovering to a target web app.
   * This setting is only necessary when RecoverConfiguration is enabled.
   */
  ignoreConflictingHostNames?: boolean;
  /**
   * If true, the snapshot is retrieved from DRSecondary endpoint.
   */
  useDRSecondary?: boolean;
}

/**
 * Options for app content migration.
 */
export interface StorageMigrationOptions extends ProxyOnlyResource {
  /**
   * AzureFiles connection string.
   */
  azurefilesConnectionString: string;
  /**
   * AzureFiles share.
   */
  azurefilesShare: string;
  /**
   * <code>true</code>if the app should be switched over; otherwise, <code>false</code>. Default
   * value: false.
   */
  switchSiteAfterMigration?: boolean;
  /**
   * <code>true</code> if the app should be read only during copy operation; otherwise,
   * <code>false</code>. Default value: false.
   */
  blockWriteAccessToSite?: boolean;
}

/**
 * Response for a migration of app content request.
 */
export interface StorageMigrationResponse extends ProxyOnlyResource {
  /**
   * When server starts the migration process, it will return an operation ID identifying that
   * particular migration operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationId?: string;
}

/**
 * String dictionary resource.
 */
export interface StringDictionary extends ProxyOnlyResource {
  /**
   * Settings.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * Swift Virtual Network Contract. This is used to enable the new Swift way of doing virtual
 * network integration.
 */
export interface SwiftVirtualNetwork extends ProxyOnlyResource {
  /**
   * The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This
   * subnet must have a delegation to Microsoft.Web/serverFarms defined first.
   */
  subnetResourceId?: string;
  /**
   * A flag that specifies if the scale unit this Web App is on supports Swift integration.
   */
  swiftSupported?: boolean;
}

/**
 * Triggered Web Job Run Information.
 */
export interface TriggeredJobRun extends ProxyOnlyResource {
  /**
   * Job ID.
   */
  webJobId?: string;
  /**
   * Job name.
   */
  webJobName?: string;
  /**
   * Job status. Possible values include: 'Success', 'Failed', 'Error'
   */
  status?: TriggeredWebJobStatus;
  /**
   * Start time.
   */
  startTime?: Date;
  /**
   * End time.
   */
  endTime?: Date;
  /**
   * Job duration.
   */
  duration?: string;
  /**
   * Output URL.
   */
  outputUrl?: string;
  /**
   * Error URL.
   */
  errorUrl?: string;
  /**
   * Job URL.
   */
  url?: string;
  /**
   * Job name.
   */
  jobName?: string;
  /**
   * Job trigger.
   */
  trigger?: string;
}

/**
 * Triggered Web Job History. List of Triggered Web Job Run Information elements.
 */
export interface TriggeredJobHistory extends ProxyOnlyResource {
  /**
   * List of triggered web job runs.
   */
  runs?: TriggeredJobRun[];
}

/**
 * Triggered Web Job Information.
 */
export interface TriggeredWebJob extends ProxyOnlyResource {
  /**
   * Latest job run information.
   */
  latestRun?: TriggeredJobRun;
  /**
   * History URL.
   */
  historyUrl?: string;
  /**
   * Scheduler Logs URL.
   */
  schedulerLogsUrl?: string;
  /**
   * Run command.
   */
  runCommand?: string;
  /**
   * Job URL.
   */
  url?: string;
  /**
   * Extra Info URL.
   */
  extraInfoUrl?: string;
  /**
   * Job type. Possible values include: 'Continuous', 'Triggered'
   */
  webJobType?: WebJobType;
  /**
   * Error information.
   */
  error?: string;
  /**
   * Using SDK?
   */
  usingSdk?: boolean;
  /**
   * Job settings.
   */
  settings?: { [propertyName: string]: any };
}

/**
 * Web Job Information.
 */
export interface WebJob extends ProxyOnlyResource {
  /**
   * Run command.
   */
  runCommand?: string;
  /**
   * Job URL.
   */
  url?: string;
  /**
   * Extra Info URL.
   */
  extraInfoUrl?: string;
  /**
   * Job type. Possible values include: 'Continuous', 'Triggered'
   */
  webJobType?: WebJobType;
  /**
   * Error information.
   */
  error?: string;
  /**
   * Using SDK?
   */
  usingSdk?: boolean;
  /**
   * Job settings.
   */
  settings?: { [propertyName: string]: any };
}

/**
 * App Service billing entity that contains information about meter which the Azure billing system
 * utilizes to charge users for services.
 */
export interface BillingMeter extends ProxyOnlyResource {
  /**
   * Meter GUID onboarded in Commerce
   */
  meterId?: string;
  /**
   * Azure Location of billable resource
   */
  billingLocation?: string;
  /**
   * Short Name from App Service Azure pricing Page
   */
  shortName?: string;
  /**
   * Friendly name of the meter
   */
  friendlyName?: string;
  /**
   * App Service ResourceType meter used for
   */
  resourceType?: string;
  /**
   * App Service OS type meter used for
   */
  osType?: string;
}

/**
 * Object with a list of the resources that need to be moved and the resource group they should be
 * moved to.
 */
export interface CsmMoveResourceEnvelope {
  targetResourceGroup?: string;
  resources?: string[];
}

/**
 * Geographical region.
 */
export interface GeoRegion extends ProxyOnlyResource {
  /**
   * Region description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Display name for region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
}

/**
 * Information needed to create resources on an App Service Environment.
 */
export interface HostingEnvironmentDeploymentInfo {
  /**
   * Name of the App Service Environment.
   */
  name?: string;
  /**
   * Location of the App Service Environment.
   */
  location?: string;
}

/**
 * List of available locations (regions or App Service Environments) for
 * deployment of App Service resources.
 */
export interface DeploymentLocations {
  /**
   * Available regions.
   */
  locations?: GeoRegion[];
  /**
   * Available App Service Environments with full descriptions of the environments.
   */
  hostingEnvironments?: AppServiceEnvironment[];
  /**
   * Available App Service Environments with basic information.
   */
  hostingEnvironmentDeploymentInfos?: HostingEnvironmentDeploymentInfo[];
}

/**
 * A Global SKU Description.
 */
export interface GlobalCsmSkuDescription {
  /**
   * Name of the resource SKU.
   */
  name?: string;
  /**
   * Service Tier of the resource SKU.
   */
  tier?: string;
  /**
   * Size specifier of the resource SKU.
   */
  size?: string;
  /**
   * Family code of the resource SKU.
   */
  family?: string;
  /**
   * Min, max, and default scale values of the SKU.
   */
  capacity?: SkuCapacity;
  /**
   * Locations of the SKU.
   */
  locations?: string[];
  /**
   * Capabilities of the SKU, e.g., is traffic manager enabled?
   */
  capabilities?: Capability[];
}

/**
 * Premier add-on offer.
 */
export interface PremierAddOnOffer extends ProxyOnlyResource {
  /**
   * Premier add on SKU.
   */
  sku?: string;
  /**
   * Premier add on offer Product.
   */
  product?: string;
  /**
   * Premier add on offer Vendor.
   */
  vendor?: string;
  /**
   * <code>true</code> if promotion code is required; otherwise, <code>false</code>.
   */
  promoCodeRequired?: boolean;
  /**
   * Premier add on offer Quota.
   */
  quota?: number;
  /**
   * App Service plans this offer is restricted to. Possible values include: 'None', 'Free',
   * 'Shared', 'Basic', 'Standard', 'Premium'
   */
  webHostingPlanRestrictions?: AppServicePlanRestrictions;
  /**
   * Privacy policy URL.
   */
  privacyPolicyUrl?: string;
  /**
   * Legal terms URL.
   */
  legalTermsUrl?: string;
  /**
   * Marketplace publisher.
   */
  marketplacePublisher?: string;
  /**
   * Marketplace offer.
   */
  marketplaceOffer?: string;
}

/**
 * Information regarding availability of a resource name.
 */
export interface ResourceNameAvailability {
  /**
   * <code>true</code> indicates name is valid and available. <code>false</code> indicates the name
   * is invalid, unavailable, or both.
   */
  nameAvailable?: boolean;
  /**
   * <code>Invalid</code> indicates the name provided does not match Azure App Service naming
   * requirements. <code>AlreadyExists</code> indicates that the name is already in use and is
   * therefore unavailable. Possible values include: 'Invalid', 'AlreadyExists'
   */
  reason?: InAvailabilityReasonType;
  /**
   * If reason == invalid, provide the user with the reason why the given name is invalid, and
   * provide the resource naming requirements so that the user can select a valid name. If reason
   * == AlreadyExists, explain that resource name is already in use, and direct them to select a
   * different name.
   */
  message?: string;
}

/**
 * Resource name availability request content.
 */
export interface ResourceNameAvailabilityRequest {
  /**
   * Resource name to verify.
   */
  name: string;
  /**
   * Resource type used for verification. Possible values include: 'Site', 'Slot',
   * 'HostingEnvironment', 'PublishingUser', 'Microsoft.Web/sites', 'Microsoft.Web/sites/slots',
   * 'Microsoft.Web/hostingEnvironments', 'Microsoft.Web/publishingUsers'
   */
  type: CheckNameResourceTypes;
  /**
   * Is fully qualified domain name.
   */
  isFqdn?: boolean;
}

/**
 * Collection of SKU information.
 */
export interface SkuInfos {
  /**
   * Resource type that this SKU applies to.
   */
  resourceType?: string;
  /**
   * List of SKUs the subscription is able to use.
   */
  skus?: GlobalCsmSkuDescription[];
}

/**
 * The source control OAuth token.
 */
export interface SourceControl extends ProxyOnlyResource {
  /**
   * OAuth access token.
   */
  token?: string;
  /**
   * OAuth access token secret.
   */
  tokenSecret?: string;
  /**
   * OAuth refresh token.
   */
  refreshToken?: string;
  /**
   * OAuth token expiration.
   */
  expirationTime?: Date;
}

/**
 * Container settings validation request context
 */
export interface ValidateContainerSettingsRequest {
  /**
   * Base URL of the container registry
   */
  baseUrl?: string;
  /**
   * Username for to access the container registry
   */
  username?: string;
  /**
   * Password for to access the container registry
   */
  password?: string;
  /**
   * Repository name (image name)
   */
  repository?: string;
  /**
   * Image tag
   */
  tag?: string;
  /**
   * Platform (windows or linux)
   */
  platform?: string;
}

/**
 * Resource validation request content.
 */
export interface ValidateRequest {
  /**
   * Resource name to verify.
   */
  name: string;
  /**
   * Resource type used for verification. Possible values include: 'ServerFarm', 'Site'
   */
  type: ValidateResourceTypes;
  /**
   * Expected location of the resource.
   */
  location: string;
  /**
   * ARM resource ID of an App Service plan that would host the app.
   */
  serverFarmId?: string;
  /**
   * Name of the target SKU for the App Service plan.
   */
  skuName?: string;
  /**
   * <code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>.
   */
  needLinuxWorkers?: boolean;
  /**
   * <code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>.
   */
  isSpot?: boolean;
  /**
   * Target capacity of the App Service plan (number of VMs).
   */
  capacity?: number;
  /**
   * Name of App Service Environment where app or App Service plan should be created.
   */
  hostingEnvironment?: string;
  /**
   * <code>true</code> if App Service plan is running as a windows container
   */
  isXenon?: boolean;
}

/**
 * Error details for when validation fails.
 */
export interface ValidateResponseError {
  /**
   * Validation error code.
   */
  code?: string;
  /**
   * Validation error message.
   */
  message?: string;
}

/**
 * Describes the result of resource validation.
 */
export interface ValidateResponse {
  /**
   * Result of validation.
   */
  status?: string;
  /**
   * Error details for the case when validation fails.
   */
  error?: ValidateResponseError;
}

/**
 * The required set of inputs to validate a VNET
 */
export interface VnetParameters extends ProxyOnlyResource {
  /**
   * The Resource Group of the VNET to be validated
   */
  vnetResourceGroup?: string;
  /**
   * The name of the VNET to be validated
   */
  vnetName?: string;
  /**
   * The subnet name to be validated
   */
  vnetSubnetName?: string;
}

/**
 * A class that describes a test that failed during NSG and UDR validation.
 */
export interface VnetValidationTestFailure extends ProxyOnlyResource {
  /**
   * The name of the test that failed.
   */
  testName?: string;
  /**
   * The details of what caused the failure, e.g. the blocking rule name, etc.
   */
  details?: string;
}

/**
 * A class that describes the reason for a validation failure.
 */
export interface VnetValidationFailureDetails extends ProxyOnlyResource {
  /**
   * A flag describing whether or not validation failed.
   */
  failed?: boolean;
  /**
   * A list of tests that failed in the validation.
   */
  failedTests?: VnetValidationTestFailure[];
}

/**
 * ARM resource for a app service plan.
 */
export interface AppServicePlanPatchResource extends ProxyOnlyResource {
  /**
   * Target worker tier assigned to the App Service plan.
   */
  workerTierName?: string;
  /**
   * App Service plan status. Possible values include: 'Ready', 'Pending', 'Creating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: StatusOptions;
  /**
   * App Service plan subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscription?: string;
  /**
   * Specification for the App Service Environment to use for the App Service plan.
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * Maximum number of instances that can be assigned to this App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximumNumberOfWorkers?: number;
  /**
   * Geographical location for the App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly geoRegion?: string;
  /**
   * If <code>true</code>, apps assigned to this App Service plan can be scaled independently.
   * If <code>false</code>, apps assigned to this App Service plan will scale to all instances of
   * the plan. Default value: false.
   */
  perSiteScaling?: boolean;
  /**
   * Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan
   */
  maximumElasticWorkerCount?: number;
  /**
   * Number of apps assigned to this App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfSites?: number;
  /**
   * If <code>true</code>, this App Service Plan owns spot instances.
   */
  isSpot?: boolean;
  /**
   * The time when the server farm expires. Valid only if it is a spot server farm.
   */
  spotExpirationTime?: Date;
  /**
   * The time when the server farm free offer expires.
   */
  freeOfferExpirationTime?: Date;
  /**
   * Resource group of the App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * If Linux app service plan <code>true</code>, <code>false</code> otherwise. Default value:
   * false.
   */
  reserved?: boolean;
  /**
   * Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code>
   * otherwise. Default value: false.
   */
  isXenon?: boolean;
  /**
   * If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise. Default
   * value: false.
   */
  hyperV?: boolean;
  /**
   * Scaling worker count.
   */
  targetWorkerCount?: number;
  /**
   * Scaling worker size ID.
   */
  targetWorkerSizeId?: number;
  /**
   * Provisioning state of the App Service Environment. Possible values include: 'Succeeded',
   * 'Failed', 'Canceled', 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * Hybrid Connection limits contract. This is used to return the plan limits of Hybrid Connections.
 */
export interface HybridConnectionLimits extends ProxyOnlyResource {
  /**
   * The current number of Hybrid Connections.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly current?: number;
  /**
   * The maximum number of Hybrid Connections allowed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximum?: number;
}

/**
 * Application stack minor version.
 */
export interface StackMinorVersion {
  /**
   * Application stack minor version (display only).
   */
  displayVersion?: string;
  /**
   * Application stack minor version (runtime only).
   */
  runtimeVersion?: string;
  /**
   * <code>true</code> if this is the default minor version; otherwise, <code>false</code>.
   */
  isDefault?: boolean;
  /**
   * <code>true</code> if this supports Remote Debugging, otherwise <code>false</code>.
   */
  isRemoteDebuggingEnabled?: boolean;
}

/**
 * Application stack major version.
 */
export interface StackMajorVersion {
  /**
   * Application stack major version (display only).
   */
  displayVersion?: string;
  /**
   * Application stack major version (runtime only).
   */
  runtimeVersion?: string;
  /**
   * <code>true</code> if this is the default major version; otherwise, <code>false</code>.
   */
  isDefault?: boolean;
  /**
   * Minor versions associated with the major version.
   */
  minorVersions?: StackMinorVersion[];
  /**
   * <code>true</code> if this supports Application Insights; otherwise, <code>false</code>.
   */
  applicationInsights?: boolean;
}

/**
 * Application stack.
 */
export interface ApplicationStack {
  /**
   * Application stack name.
   */
  name?: string;
  /**
   * Application stack display name.
   */
  display?: string;
  /**
   * Application stack dependency.
   */
  dependency?: string;
  /**
   * List of major versions available.
   */
  majorVersions?: StackMajorVersion[];
  /**
   * List of frameworks associated with application stack.
   */
  frameworks?: ApplicationStack[];
}

/**
 * Represents a recommendation result generated by the recommendation engine.
 */
export interface Recommendation extends ProxyOnlyResource {
  /**
   * Timestamp when this instance was created.
   */
  creationTime?: Date;
  /**
   * A GUID value that each recommendation object is associated with.
   */
  recommendationId?: string;
  /**
   * Full ARM resource ID string that this recommendation object is associated with.
   */
  resourceId?: string;
  /**
   * Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.
   * Possible values include: 'ServerFarm', 'Subscription', 'WebSite'
   */
  resourceScope?: ResourceScopeType;
  /**
   * Unique name of the rule.
   */
  ruleName?: string;
  /**
   * UI friendly name of the rule (may not be unique).
   */
  displayName?: string;
  /**
   * Recommendation text.
   */
  message?: string;
  /**
   * Level indicating how critical this recommendation can impact. Possible values include:
   * 'Critical', 'Warning', 'Information', 'NonUrgentSuggestion'
   */
  level?: NotificationLevel;
  /**
   * List of channels that this recommendation can apply. Possible values include: 'Notification',
   * 'Api', 'Email', 'Webhook', 'All'
   */
  channels?: Channels;
  /**
   * The list of category tags that this recommendation belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly categoryTags?: string[];
  /**
   * Name of action recommended by this object.
   */
  actionName?: string;
  /**
   * True if this recommendation is still valid (i.e. "actionable"). False if it is invalid.
   */
  enabled?: number;
  /**
   * The list of states of this recommendation. If it's null then it should be considered "Active".
   */
  states?: string[];
  /**
   * The beginning time in UTC of a range that the recommendation refers to.
   */
  startTime?: Date;
  /**
   * The end time in UTC of a range that the recommendation refers to.
   */
  endTime?: Date;
  /**
   * When to notify this recommendation next in UTC. Null means that this will never be notified
   * anymore.
   */
  nextNotificationTime?: Date;
  /**
   * Date and time in UTC when this notification expires.
   */
  notificationExpirationTime?: Date;
  /**
   * Last timestamp in UTC this instance was actually notified. Null means that this recommendation
   * hasn't been notified yet.
   */
  notifiedTime?: Date;
  /**
   * A metric value measured by the rule.
   */
  score?: number;
  /**
   * True if this is associated with a dynamically added rule
   */
  isDynamic?: boolean;
  /**
   * Extension name of the portal if exists.
   */
  extensionName?: string;
  /**
   * Deep link to a blade on the portal.
   */
  bladeName?: string;
  /**
   * Forward link to an external document associated with the rule.
   */
  forwardLink?: string;
}

/**
 * Represents a recommendation rule that the recommendation engine can perform.
 */
export interface RecommendationRule extends ProxyOnlyResource {
  /**
   * Unique name of the rule.
   */
  recommendationName?: string;
  /**
   * UI friendly name of the rule.
   */
  displayName?: string;
  /**
   * Localized name of the rule (Good for UI).
   */
  message?: string;
  /**
   * Recommendation ID of an associated recommendation object tied to the rule, if exists.
   * If such an object doesn't exist, it is set to null.
   */
  recommendationId?: string;
  /**
   * Localized detailed description of the rule.
   */
  description?: string;
  /**
   * Name of action that is recommended by this rule in string.
   */
  actionName?: string;
  /**
   * Level of impact indicating how critical this rule is. Possible values include: 'Critical',
   * 'Warning', 'Information', 'NonUrgentSuggestion'
   */
  level?: NotificationLevel;
  /**
   * List of available channels that this rule applies. Possible values include: 'Notification',
   * 'Api', 'Email', 'Webhook', 'All'
   */
  channels?: Channels;
  /**
   * The list of category tags that this recommendation rule belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly categoryTags?: string[];
  /**
   * True if this is associated with a dynamically added rule
   */
  isDynamic?: boolean;
  /**
   * Extension name of the portal if exists. Applicable to dynamic rule only.
   */
  extensionName?: string;
  /**
   * Deep link to a blade on the portal. Applicable to dynamic rule only.
   */
  bladeName?: string;
  /**
   * Forward link to an external document associated with the rule. Applicable to dynamic rule
   * only.
   */
  forwardLink?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <strong>true</strong> to include deployment slots in results. The default is false,
   * which only gives you the production slot of all apps.
   */
  includeSlots?: boolean;
}

/**
 * Optional Parameters.
 */
export interface WebAppsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, web app metrics are also deleted.
   */
  deleteMetrics?: boolean;
  /**
   * Specify true if the App Service plan will be empty after app deletion and you want to delete
   * the empty App Service plan. By default, the empty App Service plan is not deleted.
   */
  deleteEmptyServerFarm?: boolean;
}

/**
 * Optional Parameters.
 */
export interface WebAppsAnalyzeCustomHostnameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Custom hostname.
   */
  hostName?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsListMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify "true" to include metric details in the response. It is "false" by default.
   */
  details?: boolean;
  /**
   * Return only metrics specified in the filter (using OData syntax). For example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsStartWebSiteNetworkTraceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsStartWebSiteNetworkTraceOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsListPerfMonCountersOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain
   * eq duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsRestartOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify true to apply the configuration settings and restarts the app only if necessary. By
   * default, the API always restarts and reprovisions the app.
   */
  softRestart?: boolean;
  /**
   * Specify true to block until the app is restarted. By default, it is set to false, and the API
   * responds immediately (asynchronous).
   */
  synchronous?: boolean;
}

/**
 * Optional Parameters.
 */
export interface WebAppsDeleteSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, web app metrics are also deleted.
   */
  deleteMetrics?: boolean;
  /**
   * Specify true if the App Service plan will be empty after app deletion and you want to delete
   * the empty App Service plan. By default, the empty App Service plan is not deleted.
   */
  deleteEmptyServerFarm?: boolean;
}

/**
 * Optional Parameters.
 */
export interface WebAppsAnalyzeCustomHostnameSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Custom hostname.
   */
  hostName?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsListMetricsSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify "true" to include metric details in the response. It is "false" by default.
   */
  details?: boolean;
  /**
   * Return only metrics specified in the filter (using OData syntax). For example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsStartWebSiteNetworkTraceSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsListPerfMonCountersSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain
   * eq duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsRestartSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify true to apply the configuration settings and restarts the app only if necessary. By
   * default, the API always restarts and reprovisions the app.
   */
  softRestart?: boolean;
  /**
   * Specify true to block until the app is restarted. By default, it is set to false, and the API
   * responds immediately (asynchronous).
   */
  synchronous?: boolean;
}

/**
 * Optional Parameters.
 */
export interface WebAppsStartNetworkTraceSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsListUsagesSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only information specified in the filter (using OData syntax). For example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsStartNetworkTraceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only information specified in the filter (using OData syntax). For example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsBeginStartNetworkTraceSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebAppsBeginStartNetworkTraceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The duration to keep capturing in seconds.
   */
  durationInSeconds?: number;
  /**
   * The maximum frame length in bytes (Optional).
   */
  maxFrameLength?: number;
  /**
   * The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * Optional Parameters.
 */
export interface WebSiteManagementClientListBillingMetersOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Azure Location of billable resource
   */
  billingLocation?: string;
  /**
   * App Service OS type meters used for
   */
  osType?: string;
}

/**
 * Optional Parameters.
 */
export interface WebSiteManagementClientCheckNameAvailabilityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Is fully qualified domain name.
   */
  isFqdn?: boolean;
}

/**
 * Optional Parameters.
 */
export interface WebSiteManagementClientListGeoRegionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Name of SKU used to filter the regions. Possible values include: 'Free', 'Shared', 'Basic',
   * 'Standard', 'Premium', 'Dynamic', 'Isolated', 'PremiumV2', 'ElasticPremium', 'ElasticIsolated'
   */
  sku?: SkuName;
  /**
   * Specify <code>true</code> if you want to filter to only regions that support Linux workers.
   */
  linuxWorkersEnabled?: boolean;
  /**
   * Specify <code>true</code> if you want to filter to only regions that support Xenon workers.
   */
  xenonWorkersEnabled?: boolean;
  /**
   * Specify <code>true</code> if you want to filter to only regions that support Linux Consumption
   * Workers.
   */
  linuxDynamicWorkersEnabled?: boolean;
}

/**
 * Optional Parameters.
 */
export interface WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Name of the object.
   */
  name?: string;
}

/**
 * Optional Parameters.
 */
export interface AppServicePlansListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>true</code> to return all App Service plan properties. The default is
   * <code>false</code>, which returns a subset of the properties.
   * Retrieval of all properties may increase the API latency.
   */
  detailed?: boolean;
}

/**
 * Optional Parameters.
 */
export interface AppServicePlansListMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>true</code> to include instance details. The default is <code>false</code>.
   */
  details?: boolean;
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface AppServicePlansRestartWebAppsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>true</code> to perform a soft restart, applies the configuration settings and
   * restarts the apps if necessary. The default is <code>false</code>, which always restarts and
   * reprovisions the apps
   */
  softRestart?: boolean;
}

/**
 * Optional Parameters.
 */
export interface AppServicePlansListWebAppsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Skip to a web app in the list of webapps associated with app service plan. If specified, the
   * resulting list will contain web apps starting from (including) the skipToken. Otherwise, the
   * resulting list contains web apps from the start of the list
   */
  skipToken?: string;
  /**
   * Supported filter: $filter=state eq running. Returns only web apps that are currently running
   */
  filter?: string;
  /**
   * List page size. If specified, results are paged.
   */
  top?: string;
}

/**
 * Optional Parameters.
 */
export interface AppServicePlansListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
   * $filter=(name.value eq 'Metric1' or name.value eq 'Metric2').
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ProviderGetAvailableStacksOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Possible values include: 'Windows', 'Linux', 'WindowsFunctions', 'LinuxFunctions'
   */
  osTypeSelected?: OsTypeSelected;
}

/**
 * Optional Parameters.
 */
export interface ProviderGetAvailableStacksOnPremOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Possible values include: 'Windows', 'Linux', 'WindowsFunctions', 'LinuxFunctions'
   */
  osTypeSelected?: OsTypeSelected1;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>true</code> to return only the most critical recommendations. The default is
   * <code>false</code>, which returns all recommendations.
   */
  featured?: boolean;
  /**
   * Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq
   * 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and
   * timeGrain eq duration'[PT1H|PT1M|P1D]
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsListHistoryForHostingEnvironmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>false</code> to return all recommendations. The default is <code>true</code>,
   * which returns only expired recommendations.
   */
  expiredOnly?: boolean;
  /**
   * Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq
   * 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and
   * timeGrain eq duration'[PT1H|PT1M|P1D]
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsListRecommendedRulesForHostingEnvironmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>true</code> to return only the most critical recommendations. The default is
   * <code>false</code>, which returns all recommendations.
   */
  featured?: boolean;
  /**
   * Return only channels specified in the filter. Filter is specified by using OData syntax.
   * Example: $filter=channel eq 'Api' or channel eq 'Notification'
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsGetRuleDetailsByHostingEnvironmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>true</code> to update the last-seen timestamp of the recommendation object.
   */
  updateSeen?: boolean;
  /**
   * The GUID of the recommendation object if you query an expired one. You don't need to specify
   * it to query an active entry.
   */
  recommendationId?: string;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsListHistoryForWebAppOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>false</code> to return all recommendations. The default is <code>true</code>,
   * which returns only expired recommendations.
   */
  expiredOnly?: boolean;
  /**
   * Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq
   * 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and
   * timeGrain eq duration'[PT1H|PT1M|P1D]
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsListRecommendedRulesForWebAppOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>true</code> to return only the most critical recommendations. The default is
   * <code>false</code>, which returns all recommendations.
   */
  featured?: boolean;
  /**
   * Return only channels specified in the filter. Filter is specified by using OData syntax.
   * Example: $filter=channel eq 'Api' or channel eq 'Notification'
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RecommendationsGetRuleDetailsByWebAppOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify <code>true</code> to update the last-seen timestamp of the recommendation object.
   */
  updateSeen?: boolean;
  /**
   * The GUID of the recommendation object if you query an expired one. You don't need to specify
   * it to query an active entry.
   */
  recommendationId?: string;
}

/**
 * An interface representing WebSiteManagementClientOptions.
 */
export interface WebSiteManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Collection of certificates.
 * @extends Array<Certificate>
 */
export interface CertificateCollection extends Array<Certificate> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of App Service apps.
 * @extends Array<Site>
 */
export interface WebAppCollection extends Array<Site> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of backup items.
 * @extends Array<BackupItem>
 */
export interface BackupItemCollection extends Array<BackupItem> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of site configurations.
 * @extends Array<SiteConfigResource>
 */
export interface SiteConfigResourceCollection extends Array<SiteConfigResource> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of metadata for the app configuration snapshots that can be restored.
 * @extends Array<SiteConfigurationSnapshotInfo>
 */
export interface SiteConfigurationSnapshotInfoCollection extends Array<SiteConfigurationSnapshotInfo> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu continuous web job information elements.
 * @extends Array<ContinuousWebJob>
 */
export interface ContinuousWebJobCollection extends Array<ContinuousWebJob> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of app deployments.
 * @extends Array<Deployment>
 */
export interface DeploymentCollection extends Array<Deployment> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of identifiers.
 * @extends Array<Identifier>
 */
export interface IdentifierCollection extends Array<Identifier> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu function information elements.
 * @extends Array<FunctionEnvelope>
 */
export interface FunctionEnvelopeCollection extends Array<FunctionEnvelope> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of hostname bindings.
 * @extends Array<HostNameBinding>
 */
export interface HostNameBindingCollection extends Array<HostNameBinding> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of app instances.
 * @extends Array<SiteInstance>
 */
export interface WebAppInstanceCollection extends Array<SiteInstance> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu process information elements.
 * @extends Array<ProcessInfo>
 */
export interface ProcessInfoCollection extends Array<ProcessInfo> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu thread information elements.
 * @extends Array<ProcessModuleInfo>
 */
export interface ProcessModuleInfoCollection extends Array<ProcessModuleInfo> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu thread information elements.
 * @extends Array<ProcessThreadInfo>
 */
export interface ProcessThreadInfoCollection extends Array<ProcessThreadInfo> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of metric definitions.
 * @extends Array<ResourceMetricDefinition>
 */
export interface ResourceMetricDefinitionCollection extends Array<ResourceMetricDefinition> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of metric responses.
 * @extends Array<ResourceMetric>
 */
export interface ResourceMetricCollection extends Array<ResourceMetric> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of performance monitor counters.
 * @extends Array<PerfMonResponse>
 */
export interface PerfMonCounterCollection extends Array<PerfMonResponse> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of public certificates
 * @extends Array<PublicCertificate>
 */
export interface PublicCertificateCollection extends Array<PublicCertificate> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu site extension information elements.
 * @extends Array<SiteExtensionInfo>
 */
export interface SiteExtensionInfoCollection extends Array<SiteExtensionInfo> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of slot differences.
 * @extends Array<SlotDifference>
 */
export interface SlotDifferenceCollection extends Array<SlotDifference> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of snapshots which can be used to revert an app to a previous time.
 * @extends Array<Snapshot>
 */
export interface SnapshotCollection extends Array<Snapshot> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu continuous web job information elements.
 * @extends Array<TriggeredWebJob>
 */
export interface TriggeredWebJobCollection extends Array<TriggeredWebJob> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu continuous web job information elements.
 * @extends Array<TriggeredJobHistory>
 */
export interface TriggeredJobHistoryCollection extends Array<TriggeredJobHistory> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of CSM usage quotas.
 * @extends Array<CsmUsageQuota>
 */
export interface CsmUsageQuotaCollection extends Array<CsmUsageQuota> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Kudu web job information elements.
 * @extends Array<WebJob>
 */
export interface WebJobCollection extends Array<WebJob> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of source controls.
 * @extends Array<SourceControl>
 */
export interface SourceControlCollection extends Array<SourceControl> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Billing Meters
 * @extends Array<BillingMeter>
 */
export interface BillingMeterCollection extends Array<BillingMeter> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of geographical regions.
 * @extends Array<GeoRegion>
 */
export interface GeoRegionCollection extends Array<GeoRegion> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of premier add-on offers.
 * @extends Array<PremierAddOnOffer>
 */
export interface PremierAddOnOfferCollection extends Array<PremierAddOnOffer> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of App Service plans.
 * @extends Array<AppServicePlan>
 */
export interface AppServicePlanCollection extends Array<AppServicePlan> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of resources.
 * @extends Array<string>
 */
export interface ResourceCollection extends Array<string> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of hostname bindings.
 * @extends Array<HybridConnection>
 */
export interface HybridConnectionCollection extends Array<HybridConnection> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Application Stacks
 * @extends Array<ApplicationStack>
 */
export interface ApplicationStackCollection extends Array<ApplicationStack> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Azure resource manager operation metadata.
 * @extends Array<CsmOperationDescription>
 */
export interface CsmOperationCollection extends Array<CsmOperationDescription> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of recommendations.
 * @extends Array<Recommendation>
 */
export interface RecommendationCollection extends Array<Recommendation> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for KeyVaultSecretStatus.
 * Possible values include: 'Initialized', 'WaitingOnCertificateOrder', 'Succeeded',
 * 'CertificateOrderFailed', 'OperationNotPermittedOnKeyVault',
 * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
 * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type KeyVaultSecretStatus = 'Initialized' | 'WaitingOnCertificateOrder' | 'Succeeded' | 'CertificateOrderFailed' | 'OperationNotPermittedOnKeyVault' | 'AzureServiceUnauthorizedToAccessKeyVault' | 'KeyVaultDoesNotExist' | 'KeyVaultSecretDoesNotExist' | 'UnknownError' | 'ExternalPrivateKey' | 'Unknown';

/**
 * Defines values for RouteType.
 * Possible values include: 'DEFAULT', 'INHERITED', 'STATIC'
 * @readonly
 * @enum {string}
 */
export type RouteType = 'DEFAULT' | 'INHERITED' | 'STATIC';

/**
 * Defines values for ManagedServiceIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
 * 'None'
 * @readonly
 * @enum {string}
 */
export type ManagedServiceIdentityType = 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned, UserAssigned' | 'None';

/**
 * Defines values for IpFilterTag.
 * Possible values include: 'Default', 'XffProxy'
 * @readonly
 * @enum {string}
 */
export type IpFilterTag = 'Default' | 'XffProxy';

/**
 * Defines values for AutoHealActionType.
 * Possible values include: 'Recycle', 'LogEvent', 'CustomAction'
 * @readonly
 * @enum {string}
 */
export type AutoHealActionType = 'Recycle' | 'LogEvent' | 'CustomAction';

/**
 * Defines values for ConnectionStringType.
 * Possible values include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom', 'NotificationHub',
 * 'ServiceBus', 'EventHub', 'ApiHub', 'DocDb', 'RedisCache', 'PostgreSQL'
 * @readonly
 * @enum {string}
 */
export type ConnectionStringType = 'MySql' | 'SQLServer' | 'SQLAzure' | 'Custom' | 'NotificationHub' | 'ServiceBus' | 'EventHub' | 'ApiHub' | 'DocDb' | 'RedisCache' | 'PostgreSQL';

/**
 * Defines values for AzureStorageType.
 * Possible values include: 'AzureFiles', 'AzureBlob'
 * @readonly
 * @enum {string}
 */
export type AzureStorageType = 'AzureFiles' | 'AzureBlob';

/**
 * Defines values for AzureStorageState.
 * Possible values include: 'Ok', 'InvalidCredentials', 'InvalidShare'
 * @readonly
 * @enum {string}
 */
export type AzureStorageState = 'Ok' | 'InvalidCredentials' | 'InvalidShare';

/**
 * Defines values for ScmType.
 * Possible values include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit',
 * 'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg', 'OneDrive', 'VSO'
 * @readonly
 * @enum {string}
 */
export type ScmType = 'None' | 'Dropbox' | 'Tfs' | 'LocalGit' | 'GitHub' | 'CodePlexGit' | 'CodePlexHg' | 'BitbucketGit' | 'BitbucketHg' | 'ExternalGit' | 'ExternalHg' | 'OneDrive' | 'VSO';

/**
 * Defines values for ManagedPipelineMode.
 * Possible values include: 'Integrated', 'Classic'
 * @readonly
 * @enum {string}
 */
export type ManagedPipelineMode = 'Integrated' | 'Classic';

/**
 * Defines values for SiteLoadBalancing.
 * Possible values include: 'WeightedRoundRobin', 'LeastRequests', 'LeastResponseTime',
 * 'WeightedTotalTraffic', 'RequestHash'
 * @readonly
 * @enum {string}
 */
export type SiteLoadBalancing = 'WeightedRoundRobin' | 'LeastRequests' | 'LeastResponseTime' | 'WeightedTotalTraffic' | 'RequestHash';

/**
 * Defines values for SupportedTlsVersions.
 * Possible values include: '1.0', '1.1', '1.2'
 * @readonly
 * @enum {string}
 */
export type SupportedTlsVersions = '1.0' | '1.1' | '1.2';

/**
 * Defines values for FtpsState.
 * Possible values include: 'AllAllowed', 'FtpsOnly', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type FtpsState = 'AllAllowed' | 'FtpsOnly' | 'Disabled';

/**
 * Defines values for SslState.
 * Possible values include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
 * @readonly
 * @enum {string}
 */
export type SslState = 'Disabled' | 'SniEnabled' | 'IpBasedEnabled';

/**
 * Defines values for HostType.
 * Possible values include: 'Standard', 'Repository'
 * @readonly
 * @enum {string}
 */
export type HostType = 'Standard' | 'Repository';

/**
 * Defines values for UsageState.
 * Possible values include: 'Normal', 'Exceeded'
 * @readonly
 * @enum {string}
 */
export type UsageState = 'Normal' | 'Exceeded';

/**
 * Defines values for SiteAvailabilityState.
 * Possible values include: 'Normal', 'Limited', 'DisasterRecoveryMode'
 * @readonly
 * @enum {string}
 */
export type SiteAvailabilityState = 'Normal' | 'Limited' | 'DisasterRecoveryMode';

/**
 * Defines values for RedundancyMode.
 * Possible values include: 'None', 'Manual', 'Failover', 'ActiveActive', 'GeoRedundant'
 * @readonly
 * @enum {string}
 */
export type RedundancyMode = 'None' | 'Manual' | 'Failover' | 'ActiveActive' | 'GeoRedundant';

/**
 * Defines values for StatusOptions.
 * Possible values include: 'Ready', 'Pending', 'Creating'
 * @readonly
 * @enum {string}
 */
export type StatusOptions = 'Ready' | 'Pending' | 'Creating';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Canceled', 'InProgress', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Failed' | 'Canceled' | 'InProgress' | 'Deleting';

/**
 * Defines values for HostingEnvironmentStatus.
 * Possible values include: 'Preparing', 'Ready', 'Scaling', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type HostingEnvironmentStatus = 'Preparing' | 'Ready' | 'Scaling' | 'Deleting';

/**
 * Defines values for InternalLoadBalancingMode.
 * Possible values include: 'None', 'Web', 'Publishing'
 * @readonly
 * @enum {string}
 */
export type InternalLoadBalancingMode = 'None' | 'Web' | 'Publishing';

/**
 * Defines values for ComputeModeOptions.
 * Possible values include: 'Shared', 'Dedicated', 'Dynamic'
 * @readonly
 * @enum {string}
 */
export type ComputeModeOptions = 'Shared' | 'Dedicated' | 'Dynamic';

/**
 * Defines values for WorkerSizeOptions.
 * Possible values include: 'Small', 'Medium', 'Large', 'D1', 'D2', 'D3', 'Default'
 * @readonly
 * @enum {string}
 */
export type WorkerSizeOptions = 'Small' | 'Medium' | 'Large' | 'D1' | 'D2' | 'D3' | 'Default';

/**
 * Defines values for AccessControlEntryAction.
 * Possible values include: 'Permit', 'Deny'
 * @readonly
 * @enum {string}
 */
export type AccessControlEntryAction = 'Permit' | 'Deny';

/**
 * Defines values for OperationStatus.
 * Possible values include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut', 'Created'
 * @readonly
 * @enum {string}
 */
export type OperationStatus = 'InProgress' | 'Failed' | 'Succeeded' | 'TimedOut' | 'Created';

/**
 * Defines values for LogLevel.
 * Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * @readonly
 * @enum {string}
 */
export type LogLevel = 'Off' | 'Verbose' | 'Information' | 'Warning' | 'Error';

/**
 * Defines values for BackupItemStatus.
 * Possible values include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut', 'Created', 'Skipped',
 * 'PartiallySucceeded', 'DeleteInProgress', 'DeleteFailed', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type BackupItemStatus = 'InProgress' | 'Failed' | 'Succeeded' | 'TimedOut' | 'Created' | 'Skipped' | 'PartiallySucceeded' | 'DeleteInProgress' | 'DeleteFailed' | 'Deleted';

/**
 * Defines values for DatabaseType.
 * Possible values include: 'SqlAzure', 'MySql', 'LocalMySql', 'PostgreSql'
 * @readonly
 * @enum {string}
 */
export type DatabaseType = 'SqlAzure' | 'MySql' | 'LocalMySql' | 'PostgreSql';

/**
 * Defines values for FrequencyUnit.
 * Possible values include: 'Day', 'Hour'
 * @readonly
 * @enum {string}
 */
export type FrequencyUnit = 'Day' | 'Hour';

/**
 * Defines values for ContinuousWebJobStatus.
 * Possible values include: 'Initializing', 'Starting', 'Running', 'PendingRestart', 'Stopped'
 * @readonly
 * @enum {string}
 */
export type ContinuousWebJobStatus = 'Initializing' | 'Starting' | 'Running' | 'PendingRestart' | 'Stopped';

/**
 * Defines values for WebJobType.
 * Possible values include: 'Continuous', 'Triggered'
 * @readonly
 * @enum {string}
 */
export type WebJobType = 'Continuous' | 'Triggered';

/**
 * Defines values for PublishingProfileFormat.
 * Possible values include: 'FileZilla3', 'WebDeploy', 'Ftp'
 * @readonly
 * @enum {string}
 */
export type PublishingProfileFormat = 'FileZilla3' | 'WebDeploy' | 'Ftp';

/**
 * Defines values for DnsVerificationTestResult.
 * Possible values include: 'Passed', 'Failed', 'Skipped'
 * @readonly
 * @enum {string}
 */
export type DnsVerificationTestResult = 'Passed' | 'Failed' | 'Skipped';

/**
 * Defines values for AzureResourceType.
 * Possible values include: 'Website', 'TrafficManager'
 * @readonly
 * @enum {string}
 */
export type AzureResourceType = 'Website' | 'TrafficManager';

/**
 * Defines values for CustomHostNameDnsRecordType.
 * Possible values include: 'CName', 'A'
 * @readonly
 * @enum {string}
 */
export type CustomHostNameDnsRecordType = 'CName' | 'A';

/**
 * Defines values for HostNameType.
 * Possible values include: 'Verified', 'Managed'
 * @readonly
 * @enum {string}
 */
export type HostNameType = 'Verified' | 'Managed';

/**
 * Defines values for MSDeployLogEntryType.
 * Possible values include: 'Message', 'Warning', 'Error'
 * @readonly
 * @enum {string}
 */
export type MSDeployLogEntryType = 'Message' | 'Warning' | 'Error';

/**
 * Defines values for MSDeployProvisioningState.
 * Possible values include: 'accepted', 'running', 'succeeded', 'failed', 'canceled'
 * @readonly
 * @enum {string}
 */
export type MSDeployProvisioningState = 'accepted' | 'running' | 'succeeded' | 'failed' | 'canceled';

/**
 * Defines values for MySqlMigrationType.
 * Possible values include: 'LocalToRemote', 'RemoteToLocal'
 * @readonly
 * @enum {string}
 */
export type MySqlMigrationType = 'LocalToRemote' | 'RemoteToLocal';

/**
 * Defines values for PublicCertificateLocation.
 * Possible values include: 'CurrentUserMy', 'LocalMachineMy', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type PublicCertificateLocation = 'CurrentUserMy' | 'LocalMachineMy' | 'Unknown';

/**
 * Defines values for BackupRestoreOperationType.
 * Possible values include: 'Default', 'Clone', 'Relocation', 'Snapshot', 'CloudFS'
 * @readonly
 * @enum {string}
 */
export type BackupRestoreOperationType = 'Default' | 'Clone' | 'Relocation' | 'Snapshot' | 'CloudFS';

/**
 * Defines values for UnauthenticatedClientAction.
 * Possible values include: 'RedirectToLoginPage', 'AllowAnonymous'
 * @readonly
 * @enum {string}
 */
export type UnauthenticatedClientAction = 'RedirectToLoginPage' | 'AllowAnonymous';

/**
 * Defines values for BuiltInAuthenticationProvider.
 * Possible values include: 'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',
 * 'Twitter'
 * @readonly
 * @enum {string}
 */
export type BuiltInAuthenticationProvider = 'AzureActiveDirectory' | 'Facebook' | 'Google' | 'MicrosoftAccount' | 'Twitter';

/**
 * Defines values for CloneAbilityResult.
 * Possible values include: 'Cloneable', 'PartiallyCloneable', 'NotCloneable'
 * @readonly
 * @enum {string}
 */
export type CloneAbilityResult = 'Cloneable' | 'PartiallyCloneable' | 'NotCloneable';

/**
 * Defines values for SiteExtensionType.
 * Possible values include: 'Gallery', 'WebRoot'
 * @readonly
 * @enum {string}
 */
export type SiteExtensionType = 'Gallery' | 'WebRoot';

/**
 * Defines values for TriggeredWebJobStatus.
 * Possible values include: 'Success', 'Failed', 'Error'
 * @readonly
 * @enum {string}
 */
export type TriggeredWebJobStatus = 'Success' | 'Failed' | 'Error';

/**
 * Defines values for AppServicePlanRestrictions.
 * Possible values include: 'None', 'Free', 'Shared', 'Basic', 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export type AppServicePlanRestrictions = 'None' | 'Free' | 'Shared' | 'Basic' | 'Standard' | 'Premium';

/**
 * Defines values for InAvailabilityReasonType.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type InAvailabilityReasonType = 'Invalid' | 'AlreadyExists';

/**
 * Defines values for CheckNameResourceTypes.
 * Possible values include: 'Site', 'Slot', 'HostingEnvironment', 'PublishingUser',
 * 'Microsoft.Web/sites', 'Microsoft.Web/sites/slots', 'Microsoft.Web/hostingEnvironments',
 * 'Microsoft.Web/publishingUsers'
 * @readonly
 * @enum {string}
 */
export type CheckNameResourceTypes = 'Site' | 'Slot' | 'HostingEnvironment' | 'PublishingUser' | 'Microsoft.Web/sites' | 'Microsoft.Web/sites/slots' | 'Microsoft.Web/hostingEnvironments' | 'Microsoft.Web/publishingUsers';

/**
 * Defines values for ValidateResourceTypes.
 * Possible values include: 'ServerFarm', 'Site'
 * @readonly
 * @enum {string}
 */
export type ValidateResourceTypes = 'ServerFarm' | 'Site';

/**
 * Defines values for ResourceScopeType.
 * Possible values include: 'ServerFarm', 'Subscription', 'WebSite'
 * @readonly
 * @enum {string}
 */
export type ResourceScopeType = 'ServerFarm' | 'Subscription' | 'WebSite';

/**
 * Defines values for NotificationLevel.
 * Possible values include: 'Critical', 'Warning', 'Information', 'NonUrgentSuggestion'
 * @readonly
 * @enum {string}
 */
export type NotificationLevel = 'Critical' | 'Warning' | 'Information' | 'NonUrgentSuggestion';

/**
 * Defines values for Channels.
 * Possible values include: 'Notification', 'Api', 'Email', 'Webhook', 'All'
 * @readonly
 * @enum {string}
 */
export type Channels = 'Notification' | 'Api' | 'Email' | 'Webhook' | 'All';

/**
 * Defines values for SkuName.
 * Possible values include: 'Free', 'Shared', 'Basic', 'Standard', 'Premium', 'Dynamic',
 * 'Isolated', 'PremiumV2', 'ElasticPremium', 'ElasticIsolated'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'Free' | 'Shared' | 'Basic' | 'Standard' | 'Premium' | 'Dynamic' | 'Isolated' | 'PremiumV2' | 'ElasticPremium' | 'ElasticIsolated';

/**
 * Defines values for OsTypeSelected.
 * Possible values include: 'Windows', 'Linux', 'WindowsFunctions', 'LinuxFunctions'
 * @readonly
 * @enum {string}
 */
export type OsTypeSelected = 'Windows' | 'Linux' | 'WindowsFunctions' | 'LinuxFunctions';

/**
 * Defines values for OsTypeSelected1.
 * Possible values include: 'Windows', 'Linux', 'WindowsFunctions', 'LinuxFunctions'
 * @readonly
 * @enum {string}
 */
export type OsTypeSelected1 = 'Windows' | 'Linux' | 'WindowsFunctions' | 'LinuxFunctions';

/**
 * Contains response data for the list operation.
 */
export type CertificatesListResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type CertificatesListByResourceGroupResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CertificatesGetResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CertificatesCreateOrUpdateResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the update operation.
 */
export type CertificatesUpdateResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CertificatesListNextResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type CertificatesListByResourceGroupNextResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WebAppsListResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WebAppsListByResourceGroupResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WebAppsGetResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WebAppsCreateOrUpdateResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WebAppsUpdateResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the analyzeCustomHostname operation.
 */
export type WebAppsAnalyzeCustomHostnameResponse = CustomHostnameAnalysisResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomHostnameAnalysisResult;
    };
};

/**
 * Contains response data for the backup operation.
 */
export type WebAppsBackupResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listBackups operation.
 */
export type WebAppsListBackupsResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the getBackupStatus operation.
 */
export type WebAppsGetBackupStatusResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listBackupStatusSecrets operation.
 */
export type WebAppsListBackupStatusSecretsResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listConfigurations operation.
 */
export type WebAppsListConfigurationsResponse = SiteConfigResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResourceCollection;
    };
};

/**
 * Contains response data for the updateApplicationSettings operation.
 */
export type WebAppsUpdateApplicationSettingsResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listApplicationSettings operation.
 */
export type WebAppsListApplicationSettingsResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the updateAuthSettings operation.
 */
export type WebAppsUpdateAuthSettingsResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the getAuthSettings operation.
 */
export type WebAppsGetAuthSettingsResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the updateAzureStorageAccounts operation.
 */
export type WebAppsUpdateAzureStorageAccountsResponse = AzureStoragePropertyDictionaryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureStoragePropertyDictionaryResource;
    };
};

/**
 * Contains response data for the listAzureStorageAccounts operation.
 */
export type WebAppsListAzureStorageAccountsResponse = AzureStoragePropertyDictionaryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureStoragePropertyDictionaryResource;
    };
};

/**
 * Contains response data for the updateBackupConfiguration operation.
 */
export type WebAppsUpdateBackupConfigurationResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the getBackupConfiguration operation.
 */
export type WebAppsGetBackupConfigurationResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the updateConnectionStrings operation.
 */
export type WebAppsUpdateConnectionStringsResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the listConnectionStrings operation.
 */
export type WebAppsListConnectionStringsResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the getDiagnosticLogsConfiguration operation.
 */
export type WebAppsGetDiagnosticLogsConfigurationResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateDiagnosticLogsConfig operation.
 */
export type WebAppsUpdateDiagnosticLogsConfigResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateMetadata operation.
 */
export type WebAppsUpdateMetadataResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listMetadata operation.
 */
export type WebAppsListMetadataResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listPublishingCredentials operation.
 */
export type WebAppsListPublishingCredentialsResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the updateSitePushSettings operation.
 */
export type WebAppsUpdateSitePushSettingsResponse = PushSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PushSettings;
    };
};

/**
 * Contains response data for the listSitePushSettings operation.
 */
export type WebAppsListSitePushSettingsResponse = PushSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PushSettings;
    };
};

/**
 * Contains response data for the listSlotConfigurationNames operation.
 */
export type WebAppsListSlotConfigurationNamesResponse = SlotConfigNamesResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotConfigNamesResource;
    };
};

/**
 * Contains response data for the updateSlotConfigurationNames operation.
 */
export type WebAppsUpdateSlotConfigurationNamesResponse = SlotConfigNamesResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotConfigNamesResource;
    };
};

/**
 * Contains response data for the getConfiguration operation.
 */
export type WebAppsGetConfigurationResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the createOrUpdateConfiguration operation.
 */
export type WebAppsCreateOrUpdateConfigurationResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the updateConfiguration operation.
 */
export type WebAppsUpdateConfigurationResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the listConfigurationSnapshotInfo operation.
 */
export type WebAppsListConfigurationSnapshotInfoResponse = SiteConfigurationSnapshotInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigurationSnapshotInfoCollection;
    };
};

/**
 * Contains response data for the getConfigurationSnapshot operation.
 */
export type WebAppsGetConfigurationSnapshotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the getWebSiteContainerLogs operation.
 */
export type WebAppsGetWebSiteContainerLogsResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the getContainerLogsZip operation.
 */
export type WebAppsGetContainerLogsZipResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listContinuousWebJobs operation.
 */
export type WebAppsListContinuousWebJobsResponse = ContinuousWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJobCollection;
    };
};

/**
 * Contains response data for the getContinuousWebJob operation.
 */
export type WebAppsGetContinuousWebJobResponse = ContinuousWebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJob;
    };
};

/**
 * Contains response data for the listDeployments operation.
 */
export type WebAppsListDeploymentsResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getDeployment operation.
 */
export type WebAppsGetDeploymentResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the createDeployment operation.
 */
export type WebAppsCreateDeploymentResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the listDeploymentLog operation.
 */
export type WebAppsListDeploymentLogResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the discoverBackup operation.
 */
export type WebAppsDiscoverBackupResponse = RestoreRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreRequest;
    };
};

/**
 * Contains response data for the listDomainOwnershipIdentifiers operation.
 */
export type WebAppsListDomainOwnershipIdentifiersResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the getDomainOwnershipIdentifier operation.
 */
export type WebAppsGetDomainOwnershipIdentifierResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the createOrUpdateDomainOwnershipIdentifier operation.
 */
export type WebAppsCreateOrUpdateDomainOwnershipIdentifierResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the updateDomainOwnershipIdentifier operation.
 */
export type WebAppsUpdateDomainOwnershipIdentifierResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the getMSDeployStatus operation.
 */
export type WebAppsGetMSDeployStatusResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the createMSDeployOperation operation.
 */
export type WebAppsCreateMSDeployOperationResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the getMSDeployLog operation.
 */
export type WebAppsGetMSDeployLogResponse = MSDeployLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployLog;
    };
};

/**
 * Contains response data for the listFunctions operation.
 */
export type WebAppsListFunctionsResponse = FunctionEnvelopeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelopeCollection;
    };
};

/**
 * Contains response data for the getFunctionsAdminToken operation.
 */
export type WebAppsGetFunctionsAdminTokenResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getFunction operation.
 */
export type WebAppsGetFunctionResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the createFunction operation.
 */
export type WebAppsCreateFunctionResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the listFunctionSecrets operation.
 */
export type WebAppsListFunctionSecretsResponse = FunctionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionSecrets;
    };
};

/**
 * Contains response data for the listHostNameBindings operation.
 */
export type WebAppsListHostNameBindingsResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the getHostNameBinding operation.
 */
export type WebAppsGetHostNameBindingResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the createOrUpdateHostNameBinding operation.
 */
export type WebAppsCreateOrUpdateHostNameBindingResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the getHybridConnection operation.
 */
export type WebAppsGetHybridConnectionResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the createOrUpdateHybridConnection operation.
 */
export type WebAppsCreateOrUpdateHybridConnectionResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the updateHybridConnection operation.
 */
export type WebAppsUpdateHybridConnectionResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listHybridConnectionKeys operation.
 */
export type WebAppsListHybridConnectionKeysResponse = HybridConnectionKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionKey;
    };
};

/**
 * Contains response data for the listHybridConnections operation.
 */
export type WebAppsListHybridConnectionsResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listRelayServiceConnections operation.
 */
export type WebAppsListRelayServiceConnectionsResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the getRelayServiceConnection operation.
 */
export type WebAppsGetRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the createOrUpdateRelayServiceConnection operation.
 */
export type WebAppsCreateOrUpdateRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the updateRelayServiceConnection operation.
 */
export type WebAppsUpdateRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the listInstanceIdentifiers operation.
 */
export type WebAppsListInstanceIdentifiersResponse = WebAppInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppInstanceCollection;
    };
};

/**
 * Contains response data for the getInstanceMsDeployStatus operation.
 */
export type WebAppsGetInstanceMsDeployStatusResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the createInstanceMSDeployOperation operation.
 */
export type WebAppsCreateInstanceMSDeployOperationResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the getInstanceMSDeployLog operation.
 */
export type WebAppsGetInstanceMSDeployLogResponse = MSDeployLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployLog;
    };
};

/**
 * Contains response data for the listInstanceProcesses operation.
 */
export type WebAppsListInstanceProcessesResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcess operation.
 */
export type WebAppsGetInstanceProcessResponse = ProcessInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfo;
    };
};

/**
 * Contains response data for the getInstanceProcessDump operation.
 */
export type WebAppsGetInstanceProcessDumpResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listInstanceProcessModules operation.
 */
export type WebAppsListInstanceProcessModulesResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessModule operation.
 */
export type WebAppsGetInstanceProcessModuleResponse = ProcessModuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfo;
    };
};

/**
 * Contains response data for the listInstanceProcessThreads operation.
 */
export type WebAppsListInstanceProcessThreadsResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessThread operation.
 */
export type WebAppsGetInstanceProcessThreadResponse = ProcessThreadInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfo;
    };
};

/**
 * Contains response data for the isCloneable operation.
 */
export type WebAppsIsCloneableResponse = SiteCloneability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCloneability;
    };
};

/**
 * Contains response data for the listSyncFunctionTriggers operation.
 */
export type WebAppsListSyncFunctionTriggersResponse = FunctionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionSecrets;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type WebAppsListMetricDefinitionsResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type WebAppsListMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the migrateStorage operation.
 */
export type WebAppsMigrateStorageResponse = StorageMigrationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageMigrationResponse;
    };
};

/**
 * Contains response data for the migrateMySql operation.
 */
export type WebAppsMigrateMySqlResponse = Operation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Operation;
    };
};

/**
 * Contains response data for the getMigrateMySqlStatus operation.
 */
export type WebAppsGetMigrateMySqlStatusResponse = MigrateMySqlStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrateMySqlStatus;
    };
};

/**
 * Contains response data for the getSwiftVirtualNetworkConnection operation.
 */
export type WebAppsGetSwiftVirtualNetworkConnectionResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the createOrUpdateSwiftVirtualNetworkConnection operation.
 */
export type WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the updateSwiftVirtualNetworkConnection operation.
 */
export type WebAppsUpdateSwiftVirtualNetworkConnectionResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the listNetworkFeatures operation.
 */
export type WebAppsListNetworkFeaturesResponse = NetworkFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkFeatures;
    };
};

/**
 * Contains response data for the getNetworkTraceOperation operation.
 */
export type WebAppsGetNetworkTraceOperationResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the startWebSiteNetworkTrace operation.
 */
export type WebAppsStartWebSiteNetworkTraceResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the startWebSiteNetworkTraceOperation operation.
 */
export type WebAppsStartWebSiteNetworkTraceOperationResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the getNetworkTraces operation.
 */
export type WebAppsGetNetworkTracesResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the getNetworkTraceOperationV2 operation.
 */
export type WebAppsGetNetworkTraceOperationV2Response = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the getNetworkTracesV2 operation.
 */
export type WebAppsGetNetworkTracesV2Response = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the listPerfMonCounters operation.
 */
export type WebAppsListPerfMonCountersResponse = PerfMonCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerfMonCounterCollection;
    };
};

/**
 * Contains response data for the getSitePhpErrorLogFlag operation.
 */
export type WebAppsGetSitePhpErrorLogFlagResponse = SitePhpErrorLogFlag & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SitePhpErrorLogFlag;
    };
};

/**
 * Contains response data for the listPremierAddOns operation.
 */
export type WebAppsListPremierAddOnsResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the getPremierAddOn operation.
 */
export type WebAppsGetPremierAddOnResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the addPremierAddOn operation.
 */
export type WebAppsAddPremierAddOnResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the updatePremierAddOn operation.
 */
export type WebAppsUpdatePremierAddOnResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the getPrivateAccess operation.
 */
export type WebAppsGetPrivateAccessResponse = PrivateAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateAccess;
    };
};

/**
 * Contains response data for the putPrivateAccessVnet operation.
 */
export type WebAppsPutPrivateAccessVnetResponse = PrivateAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateAccess;
    };
};

/**
 * Contains response data for the listProcesses operation.
 */
export type WebAppsListProcessesResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the getProcess operation.
 */
export type WebAppsGetProcessResponse = ProcessInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfo;
    };
};

/**
 * Contains response data for the getProcessDump operation.
 */
export type WebAppsGetProcessDumpResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listProcessModules operation.
 */
export type WebAppsListProcessModulesResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the getProcessModule operation.
 */
export type WebAppsGetProcessModuleResponse = ProcessModuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfo;
    };
};

/**
 * Contains response data for the listProcessThreads operation.
 */
export type WebAppsListProcessThreadsResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the getProcessThread operation.
 */
export type WebAppsGetProcessThreadResponse = ProcessThreadInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfo;
    };
};

/**
 * Contains response data for the listPublicCertificates operation.
 */
export type WebAppsListPublicCertificatesResponse = PublicCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificateCollection;
    };
};

/**
 * Contains response data for the getPublicCertificate operation.
 */
export type WebAppsGetPublicCertificateResponse = PublicCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificate;
    };
};

/**
 * Contains response data for the createOrUpdatePublicCertificate operation.
 */
export type WebAppsCreateOrUpdatePublicCertificateResponse = PublicCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificate;
    };
};

/**
 * Contains response data for the listPublishingProfileXmlWithSecrets operation.
 */
export type WebAppsListPublishingProfileXmlWithSecretsResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listSiteExtensions operation.
 */
export type WebAppsListSiteExtensionsResponse = SiteExtensionInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfoCollection;
    };
};

/**
 * Contains response data for the getSiteExtension operation.
 */
export type WebAppsGetSiteExtensionResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the installSiteExtension operation.
 */
export type WebAppsInstallSiteExtensionResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the listSlots operation.
 */
export type WebAppsListSlotsResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the getSlot operation.
 */
export type WebAppsGetSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the createOrUpdateSlot operation.
 */
export type WebAppsCreateOrUpdateSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the updateSlot operation.
 */
export type WebAppsUpdateSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the analyzeCustomHostnameSlot operation.
 */
export type WebAppsAnalyzeCustomHostnameSlotResponse = CustomHostnameAnalysisResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomHostnameAnalysisResult;
    };
};

/**
 * Contains response data for the backupSlot operation.
 */
export type WebAppsBackupSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listBackupsSlot operation.
 */
export type WebAppsListBackupsSlotResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the getBackupStatusSlot operation.
 */
export type WebAppsGetBackupStatusSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listBackupStatusSecretsSlot operation.
 */
export type WebAppsListBackupStatusSecretsSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listConfigurationsSlot operation.
 */
export type WebAppsListConfigurationsSlotResponse = SiteConfigResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResourceCollection;
    };
};

/**
 * Contains response data for the updateApplicationSettingsSlot operation.
 */
export type WebAppsUpdateApplicationSettingsSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listApplicationSettingsSlot operation.
 */
export type WebAppsListApplicationSettingsSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the updateAuthSettingsSlot operation.
 */
export type WebAppsUpdateAuthSettingsSlotResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the getAuthSettingsSlot operation.
 */
export type WebAppsGetAuthSettingsSlotResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the updateAzureStorageAccountsSlot operation.
 */
export type WebAppsUpdateAzureStorageAccountsSlotResponse = AzureStoragePropertyDictionaryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureStoragePropertyDictionaryResource;
    };
};

/**
 * Contains response data for the listAzureStorageAccountsSlot operation.
 */
export type WebAppsListAzureStorageAccountsSlotResponse = AzureStoragePropertyDictionaryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureStoragePropertyDictionaryResource;
    };
};

/**
 * Contains response data for the updateBackupConfigurationSlot operation.
 */
export type WebAppsUpdateBackupConfigurationSlotResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the getBackupConfigurationSlot operation.
 */
export type WebAppsGetBackupConfigurationSlotResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the updateConnectionStringsSlot operation.
 */
export type WebAppsUpdateConnectionStringsSlotResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the listConnectionStringsSlot operation.
 */
export type WebAppsListConnectionStringsSlotResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the getDiagnosticLogsConfigurationSlot operation.
 */
export type WebAppsGetDiagnosticLogsConfigurationSlotResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateDiagnosticLogsConfigSlot operation.
 */
export type WebAppsUpdateDiagnosticLogsConfigSlotResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateMetadataSlot operation.
 */
export type WebAppsUpdateMetadataSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listMetadataSlot operation.
 */
export type WebAppsListMetadataSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listPublishingCredentialsSlot operation.
 */
export type WebAppsListPublishingCredentialsSlotResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the updateSitePushSettingsSlot operation.
 */
export type WebAppsUpdateSitePushSettingsSlotResponse = PushSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PushSettings;
    };
};

/**
 * Contains response data for the listSitePushSettingsSlot operation.
 */
export type WebAppsListSitePushSettingsSlotResponse = PushSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PushSettings;
    };
};

/**
 * Contains response data for the getConfigurationSlot operation.
 */
export type WebAppsGetConfigurationSlotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the createOrUpdateConfigurationSlot operation.
 */
export type WebAppsCreateOrUpdateConfigurationSlotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the updateConfigurationSlot operation.
 */
export type WebAppsUpdateConfigurationSlotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the listConfigurationSnapshotInfoSlot operation.
 */
export type WebAppsListConfigurationSnapshotInfoSlotResponse = SiteConfigurationSnapshotInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigurationSnapshotInfoCollection;
    };
};

/**
 * Contains response data for the getConfigurationSnapshotSlot operation.
 */
export type WebAppsGetConfigurationSnapshotSlotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the getWebSiteContainerLogsSlot operation.
 */
export type WebAppsGetWebSiteContainerLogsSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the getContainerLogsZipSlot operation.
 */
export type WebAppsGetContainerLogsZipSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listContinuousWebJobsSlot operation.
 */
export type WebAppsListContinuousWebJobsSlotResponse = ContinuousWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJobCollection;
    };
};

/**
 * Contains response data for the getContinuousWebJobSlot operation.
 */
export type WebAppsGetContinuousWebJobSlotResponse = ContinuousWebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJob;
    };
};

/**
 * Contains response data for the listDeploymentsSlot operation.
 */
export type WebAppsListDeploymentsSlotResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getDeploymentSlot operation.
 */
export type WebAppsGetDeploymentSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the createDeploymentSlot operation.
 */
export type WebAppsCreateDeploymentSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the listDeploymentLogSlot operation.
 */
export type WebAppsListDeploymentLogSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the discoverBackupSlot operation.
 */
export type WebAppsDiscoverBackupSlotResponse = RestoreRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreRequest;
    };
};

/**
 * Contains response data for the listDomainOwnershipIdentifiersSlot operation.
 */
export type WebAppsListDomainOwnershipIdentifiersSlotResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the getDomainOwnershipIdentifierSlot operation.
 */
export type WebAppsGetDomainOwnershipIdentifierSlotResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the createOrUpdateDomainOwnershipIdentifierSlot operation.
 */
export type WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the updateDomainOwnershipIdentifierSlot operation.
 */
export type WebAppsUpdateDomainOwnershipIdentifierSlotResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the getMSDeployStatusSlot operation.
 */
export type WebAppsGetMSDeployStatusSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the createMSDeployOperationSlot operation.
 */
export type WebAppsCreateMSDeployOperationSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the getMSDeployLogSlot operation.
 */
export type WebAppsGetMSDeployLogSlotResponse = MSDeployLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployLog;
    };
};

/**
 * Contains response data for the listInstanceFunctionsSlot operation.
 */
export type WebAppsListInstanceFunctionsSlotResponse = FunctionEnvelopeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelopeCollection;
    };
};

/**
 * Contains response data for the getFunctionsAdminTokenSlot operation.
 */
export type WebAppsGetFunctionsAdminTokenSlotResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getInstanceFunctionSlot operation.
 */
export type WebAppsGetInstanceFunctionSlotResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the createInstanceFunctionSlot operation.
 */
export type WebAppsCreateInstanceFunctionSlotResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the listFunctionSecretsSlot operation.
 */
export type WebAppsListFunctionSecretsSlotResponse = FunctionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionSecrets;
    };
};

/**
 * Contains response data for the listHostNameBindingsSlot operation.
 */
export type WebAppsListHostNameBindingsSlotResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the getHostNameBindingSlot operation.
 */
export type WebAppsGetHostNameBindingSlotResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the createOrUpdateHostNameBindingSlot operation.
 */
export type WebAppsCreateOrUpdateHostNameBindingSlotResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the getHybridConnectionSlot operation.
 */
export type WebAppsGetHybridConnectionSlotResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the createOrUpdateHybridConnectionSlot operation.
 */
export type WebAppsCreateOrUpdateHybridConnectionSlotResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the updateHybridConnectionSlot operation.
 */
export type WebAppsUpdateHybridConnectionSlotResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listHybridConnectionKeysSlot operation.
 */
export type WebAppsListHybridConnectionKeysSlotResponse = HybridConnectionKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionKey;
    };
};

/**
 * Contains response data for the listHybridConnectionsSlot operation.
 */
export type WebAppsListHybridConnectionsSlotResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listRelayServiceConnectionsSlot operation.
 */
export type WebAppsListRelayServiceConnectionsSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the getRelayServiceConnectionSlot operation.
 */
export type WebAppsGetRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the createOrUpdateRelayServiceConnectionSlot operation.
 */
export type WebAppsCreateOrUpdateRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the updateRelayServiceConnectionSlot operation.
 */
export type WebAppsUpdateRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the listInstanceIdentifiersSlot operation.
 */
export type WebAppsListInstanceIdentifiersSlotResponse = WebAppInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppInstanceCollection;
    };
};

/**
 * Contains response data for the getInstanceMsDeployStatusSlot operation.
 */
export type WebAppsGetInstanceMsDeployStatusSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the createInstanceMSDeployOperationSlot operation.
 */
export type WebAppsCreateInstanceMSDeployOperationSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the getInstanceMSDeployLogSlot operation.
 */
export type WebAppsGetInstanceMSDeployLogSlotResponse = MSDeployLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployLog;
    };
};

/**
 * Contains response data for the listInstanceProcessesSlot operation.
 */
export type WebAppsListInstanceProcessesSlotResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessSlot operation.
 */
export type WebAppsGetInstanceProcessSlotResponse = ProcessInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfo;
    };
};

/**
 * Contains response data for the getInstanceProcessDumpSlot operation.
 */
export type WebAppsGetInstanceProcessDumpSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listInstanceProcessModulesSlot operation.
 */
export type WebAppsListInstanceProcessModulesSlotResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessModuleSlot operation.
 */
export type WebAppsGetInstanceProcessModuleSlotResponse = ProcessModuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfo;
    };
};

/**
 * Contains response data for the listInstanceProcessThreadsSlot operation.
 */
export type WebAppsListInstanceProcessThreadsSlotResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessThreadSlot operation.
 */
export type WebAppsGetInstanceProcessThreadSlotResponse = ProcessThreadInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfo;
    };
};

/**
 * Contains response data for the isCloneableSlot operation.
 */
export type WebAppsIsCloneableSlotResponse = SiteCloneability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCloneability;
    };
};

/**
 * Contains response data for the listSyncFunctionTriggersSlot operation.
 */
export type WebAppsListSyncFunctionTriggersSlotResponse = FunctionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionSecrets;
    };
};

/**
 * Contains response data for the listMetricDefinitionsSlot operation.
 */
export type WebAppsListMetricDefinitionsSlotResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetricsSlot operation.
 */
export type WebAppsListMetricsSlotResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getMigrateMySqlStatusSlot operation.
 */
export type WebAppsGetMigrateMySqlStatusSlotResponse = MigrateMySqlStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrateMySqlStatus;
    };
};

/**
 * Contains response data for the getSwiftVirtualNetworkConnectionSlot operation.
 */
export type WebAppsGetSwiftVirtualNetworkConnectionSlotResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the createOrUpdateSwiftVirtualNetworkConnectionSlot operation.
 */
export type WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionSlotResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the updateSwiftVirtualNetworkConnectionSlot operation.
 */
export type WebAppsUpdateSwiftVirtualNetworkConnectionSlotResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the listNetworkFeaturesSlot operation.
 */
export type WebAppsListNetworkFeaturesSlotResponse = NetworkFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkFeatures;
    };
};

/**
 * Contains response data for the getNetworkTraceOperationSlot operation.
 */
export type WebAppsGetNetworkTraceOperationSlotResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the startWebSiteNetworkTraceSlot operation.
 */
export type WebAppsStartWebSiteNetworkTraceSlotResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the startWebSiteNetworkTraceOperationSlot operation.
 */
export type WebAppsStartWebSiteNetworkTraceOperationSlotResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the getNetworkTracesSlot operation.
 */
export type WebAppsGetNetworkTracesSlotResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the getNetworkTraceOperationSlotV2 operation.
 */
export type WebAppsGetNetworkTraceOperationSlotV2Response = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the getNetworkTracesSlotV2 operation.
 */
export type WebAppsGetNetworkTracesSlotV2Response = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the listPerfMonCountersSlot operation.
 */
export type WebAppsListPerfMonCountersSlotResponse = PerfMonCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerfMonCounterCollection;
    };
};

/**
 * Contains response data for the getSitePhpErrorLogFlagSlot operation.
 */
export type WebAppsGetSitePhpErrorLogFlagSlotResponse = SitePhpErrorLogFlag & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SitePhpErrorLogFlag;
    };
};

/**
 * Contains response data for the listPremierAddOnsSlot operation.
 */
export type WebAppsListPremierAddOnsSlotResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the getPremierAddOnSlot operation.
 */
export type WebAppsGetPremierAddOnSlotResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the addPremierAddOnSlot operation.
 */
export type WebAppsAddPremierAddOnSlotResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the updatePremierAddOnSlot operation.
 */
export type WebAppsUpdatePremierAddOnSlotResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the getPrivateAccessSlot operation.
 */
export type WebAppsGetPrivateAccessSlotResponse = PrivateAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateAccess;
    };
};

/**
 * Contains response data for the putPrivateAccessVnetSlot operation.
 */
export type WebAppsPutPrivateAccessVnetSlotResponse = PrivateAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateAccess;
    };
};

/**
 * Contains response data for the listProcessesSlot operation.
 */
export type WebAppsListProcessesSlotResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the getProcessSlot operation.
 */
export type WebAppsGetProcessSlotResponse = ProcessInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfo;
    };
};

/**
 * Contains response data for the getProcessDumpSlot operation.
 */
export type WebAppsGetProcessDumpSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listProcessModulesSlot operation.
 */
export type WebAppsListProcessModulesSlotResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the getProcessModuleSlot operation.
 */
export type WebAppsGetProcessModuleSlotResponse = ProcessModuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfo;
    };
};

/**
 * Contains response data for the listProcessThreadsSlot operation.
 */
export type WebAppsListProcessThreadsSlotResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the getProcessThreadSlot operation.
 */
export type WebAppsGetProcessThreadSlotResponse = ProcessThreadInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfo;
    };
};

/**
 * Contains response data for the listPublicCertificatesSlot operation.
 */
export type WebAppsListPublicCertificatesSlotResponse = PublicCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificateCollection;
    };
};

/**
 * Contains response data for the getPublicCertificateSlot operation.
 */
export type WebAppsGetPublicCertificateSlotResponse = PublicCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificate;
    };
};

/**
 * Contains response data for the createOrUpdatePublicCertificateSlot operation.
 */
export type WebAppsCreateOrUpdatePublicCertificateSlotResponse = PublicCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificate;
    };
};

/**
 * Contains response data for the listPublishingProfileXmlWithSecretsSlot operation.
 */
export type WebAppsListPublishingProfileXmlWithSecretsSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listSiteExtensionsSlot operation.
 */
export type WebAppsListSiteExtensionsSlotResponse = SiteExtensionInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfoCollection;
    };
};

/**
 * Contains response data for the getSiteExtensionSlot operation.
 */
export type WebAppsGetSiteExtensionSlotResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the installSiteExtensionSlot operation.
 */
export type WebAppsInstallSiteExtensionSlotResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the listSlotDifferencesSlot operation.
 */
export type WebAppsListSlotDifferencesSlotResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the listSnapshotsSlot operation.
 */
export type WebAppsListSnapshotsSlotResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the listSnapshotsFromDRSecondarySlot operation.
 */
export type WebAppsListSnapshotsFromDRSecondarySlotResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the getSourceControlSlot operation.
 */
export type WebAppsGetSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the createOrUpdateSourceControlSlot operation.
 */
export type WebAppsCreateOrUpdateSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the updateSourceControlSlot operation.
 */
export type WebAppsUpdateSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the startNetworkTraceSlot operation.
 */
export type WebAppsStartNetworkTraceSlotResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the listTriggeredWebJobsSlot operation.
 */
export type WebAppsListTriggeredWebJobsSlotResponse = TriggeredWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJobCollection;
    };
};

/**
 * Contains response data for the getTriggeredWebJobSlot operation.
 */
export type WebAppsGetTriggeredWebJobSlotResponse = TriggeredWebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJob;
    };
};

/**
 * Contains response data for the listTriggeredWebJobHistorySlot operation.
 */
export type WebAppsListTriggeredWebJobHistorySlotResponse = TriggeredJobHistoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistoryCollection;
    };
};

/**
 * Contains response data for the getTriggeredWebJobHistorySlot operation.
 */
export type WebAppsGetTriggeredWebJobHistorySlotResponse = TriggeredJobHistory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistory;
    };
};

/**
 * Contains response data for the listUsagesSlot operation.
 */
export type WebAppsListUsagesSlotResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listVnetConnectionsSlot operation.
 */
export type WebAppsListVnetConnectionsSlotResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the getVnetConnectionSlot operation.
 */
export type WebAppsGetVnetConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the createOrUpdateVnetConnectionSlot operation.
 */
export type WebAppsCreateOrUpdateVnetConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the updateVnetConnectionSlot operation.
 */
export type WebAppsUpdateVnetConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getVnetConnectionGatewaySlot operation.
 */
export type WebAppsGetVnetConnectionGatewaySlotResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the createOrUpdateVnetConnectionGatewaySlot operation.
 */
export type WebAppsCreateOrUpdateVnetConnectionGatewaySlotResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateVnetConnectionGatewaySlot operation.
 */
export type WebAppsUpdateVnetConnectionGatewaySlotResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the listWebJobsSlot operation.
 */
export type WebAppsListWebJobsSlotResponse = WebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJobCollection;
    };
};

/**
 * Contains response data for the getWebJobSlot operation.
 */
export type WebAppsGetWebJobSlotResponse = WebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJob;
    };
};

/**
 * Contains response data for the listSlotDifferencesFromProduction operation.
 */
export type WebAppsListSlotDifferencesFromProductionResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the listSnapshots operation.
 */
export type WebAppsListSnapshotsResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the listSnapshotsFromDRSecondary operation.
 */
export type WebAppsListSnapshotsFromDRSecondaryResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the getSourceControl operation.
 */
export type WebAppsGetSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the createOrUpdateSourceControl operation.
 */
export type WebAppsCreateOrUpdateSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the updateSourceControl operation.
 */
export type WebAppsUpdateSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the startNetworkTrace operation.
 */
export type WebAppsStartNetworkTraceResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the listTriggeredWebJobs operation.
 */
export type WebAppsListTriggeredWebJobsResponse = TriggeredWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJobCollection;
    };
};

/**
 * Contains response data for the getTriggeredWebJob operation.
 */
export type WebAppsGetTriggeredWebJobResponse = TriggeredWebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJob;
    };
};

/**
 * Contains response data for the listTriggeredWebJobHistory operation.
 */
export type WebAppsListTriggeredWebJobHistoryResponse = TriggeredJobHistoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistoryCollection;
    };
};

/**
 * Contains response data for the getTriggeredWebJobHistory operation.
 */
export type WebAppsGetTriggeredWebJobHistoryResponse = TriggeredJobHistory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistory;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type WebAppsListUsagesResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listVnetConnections operation.
 */
export type WebAppsListVnetConnectionsResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the getVnetConnection operation.
 */
export type WebAppsGetVnetConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the createOrUpdateVnetConnection operation.
 */
export type WebAppsCreateOrUpdateVnetConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the updateVnetConnection operation.
 */
export type WebAppsUpdateVnetConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getVnetConnectionGateway operation.
 */
export type WebAppsGetVnetConnectionGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the createOrUpdateVnetConnectionGateway operation.
 */
export type WebAppsCreateOrUpdateVnetConnectionGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateVnetConnectionGateway operation.
 */
export type WebAppsUpdateVnetConnectionGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the listWebJobs operation.
 */
export type WebAppsListWebJobsResponse = WebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJobCollection;
    };
};

/**
 * Contains response data for the getWebJob operation.
 */
export type WebAppsGetWebJobResponse = WebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJob;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type WebAppsBeginCreateOrUpdateResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the beginListPublishingCredentials operation.
 */
export type WebAppsBeginListPublishingCredentialsResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the beginCreateMSDeployOperation operation.
 */
export type WebAppsBeginCreateMSDeployOperationResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the beginCreateFunction operation.
 */
export type WebAppsBeginCreateFunctionResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the beginCreateInstanceMSDeployOperation operation.
 */
export type WebAppsBeginCreateInstanceMSDeployOperationResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the beginMigrateStorage operation.
 */
export type WebAppsBeginMigrateStorageResponse = StorageMigrationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageMigrationResponse;
    };
};

/**
 * Contains response data for the beginMigrateMySql operation.
 */
export type WebAppsBeginMigrateMySqlResponse = Operation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Operation;
    };
};

/**
 * Contains response data for the beginStartWebSiteNetworkTraceOperation operation.
 */
export type WebAppsBeginStartWebSiteNetworkTraceOperationResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the beginInstallSiteExtension operation.
 */
export type WebAppsBeginInstallSiteExtensionResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateSlot operation.
 */
export type WebAppsBeginCreateOrUpdateSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the beginListPublishingCredentialsSlot operation.
 */
export type WebAppsBeginListPublishingCredentialsSlotResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the beginCreateMSDeployOperationSlot operation.
 */
export type WebAppsBeginCreateMSDeployOperationSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the beginCreateInstanceFunctionSlot operation.
 */
export type WebAppsBeginCreateInstanceFunctionSlotResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the beginCreateInstanceMSDeployOperationSlot operation.
 */
export type WebAppsBeginCreateInstanceMSDeployOperationSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the beginStartWebSiteNetworkTraceOperationSlot operation.
 */
export type WebAppsBeginStartWebSiteNetworkTraceOperationSlotResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the beginInstallSiteExtensionSlot operation.
 */
export type WebAppsBeginInstallSiteExtensionSlotResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateSourceControlSlot operation.
 */
export type WebAppsBeginCreateOrUpdateSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the beginStartNetworkTraceSlot operation.
 */
export type WebAppsBeginStartNetworkTraceSlotResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the beginCreateOrUpdateSourceControl operation.
 */
export type WebAppsBeginCreateOrUpdateSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the beginStartNetworkTrace operation.
 */
export type WebAppsBeginStartNetworkTraceResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WebAppsListNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WebAppsListByResourceGroupNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listBackupsNext operation.
 */
export type WebAppsListBackupsNextResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the listConfigurationsNext operation.
 */
export type WebAppsListConfigurationsNextResponse = SiteConfigResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResourceCollection;
    };
};

/**
 * Contains response data for the listConfigurationSnapshotInfoNext operation.
 */
export type WebAppsListConfigurationSnapshotInfoNextResponse = SiteConfigurationSnapshotInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigurationSnapshotInfoCollection;
    };
};

/**
 * Contains response data for the listContinuousWebJobsNext operation.
 */
export type WebAppsListContinuousWebJobsNextResponse = ContinuousWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJobCollection;
    };
};

/**
 * Contains response data for the listDeploymentsNext operation.
 */
export type WebAppsListDeploymentsNextResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the listDomainOwnershipIdentifiersNext operation.
 */
export type WebAppsListDomainOwnershipIdentifiersNextResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the listFunctionsNext operation.
 */
export type WebAppsListFunctionsNextResponse = FunctionEnvelopeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelopeCollection;
    };
};

/**
 * Contains response data for the listHostNameBindingsNext operation.
 */
export type WebAppsListHostNameBindingsNextResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the listInstanceIdentifiersNext operation.
 */
export type WebAppsListInstanceIdentifiersNextResponse = WebAppInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppInstanceCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessesNext operation.
 */
export type WebAppsListInstanceProcessesNextResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessModulesNext operation.
 */
export type WebAppsListInstanceProcessModulesNextResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessThreadsNext operation.
 */
export type WebAppsListInstanceProcessThreadsNextResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the listMetricDefinitionsNext operation.
 */
export type WebAppsListMetricDefinitionsNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetricsNext operation.
 */
export type WebAppsListMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listPerfMonCountersNext operation.
 */
export type WebAppsListPerfMonCountersNextResponse = PerfMonCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerfMonCounterCollection;
    };
};

/**
 * Contains response data for the listProcessesNext operation.
 */
export type WebAppsListProcessesNextResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the listProcessModulesNext operation.
 */
export type WebAppsListProcessModulesNextResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the listProcessThreadsNext operation.
 */
export type WebAppsListProcessThreadsNextResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the listPublicCertificatesNext operation.
 */
export type WebAppsListPublicCertificatesNextResponse = PublicCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificateCollection;
    };
};

/**
 * Contains response data for the listSiteExtensionsNext operation.
 */
export type WebAppsListSiteExtensionsNextResponse = SiteExtensionInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfoCollection;
    };
};

/**
 * Contains response data for the listSlotsNext operation.
 */
export type WebAppsListSlotsNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listBackupsSlotNext operation.
 */
export type WebAppsListBackupsSlotNextResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the listConfigurationsSlotNext operation.
 */
export type WebAppsListConfigurationsSlotNextResponse = SiteConfigResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResourceCollection;
    };
};

/**
 * Contains response data for the listConfigurationSnapshotInfoSlotNext operation.
 */
export type WebAppsListConfigurationSnapshotInfoSlotNextResponse = SiteConfigurationSnapshotInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigurationSnapshotInfoCollection;
    };
};

/**
 * Contains response data for the listContinuousWebJobsSlotNext operation.
 */
export type WebAppsListContinuousWebJobsSlotNextResponse = ContinuousWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJobCollection;
    };
};

/**
 * Contains response data for the listDeploymentsSlotNext operation.
 */
export type WebAppsListDeploymentsSlotNextResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the listDomainOwnershipIdentifiersSlotNext operation.
 */
export type WebAppsListDomainOwnershipIdentifiersSlotNextResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the listInstanceFunctionsSlotNext operation.
 */
export type WebAppsListInstanceFunctionsSlotNextResponse = FunctionEnvelopeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelopeCollection;
    };
};

/**
 * Contains response data for the listHostNameBindingsSlotNext operation.
 */
export type WebAppsListHostNameBindingsSlotNextResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the listInstanceIdentifiersSlotNext operation.
 */
export type WebAppsListInstanceIdentifiersSlotNextResponse = WebAppInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppInstanceCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessesSlotNext operation.
 */
export type WebAppsListInstanceProcessesSlotNextResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessModulesSlotNext operation.
 */
export type WebAppsListInstanceProcessModulesSlotNextResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessThreadsSlotNext operation.
 */
export type WebAppsListInstanceProcessThreadsSlotNextResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the listMetricDefinitionsSlotNext operation.
 */
export type WebAppsListMetricDefinitionsSlotNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetricsSlotNext operation.
 */
export type WebAppsListMetricsSlotNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listPerfMonCountersSlotNext operation.
 */
export type WebAppsListPerfMonCountersSlotNextResponse = PerfMonCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerfMonCounterCollection;
    };
};

/**
 * Contains response data for the listProcessesSlotNext operation.
 */
export type WebAppsListProcessesSlotNextResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the listProcessModulesSlotNext operation.
 */
export type WebAppsListProcessModulesSlotNextResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the listProcessThreadsSlotNext operation.
 */
export type WebAppsListProcessThreadsSlotNextResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the listPublicCertificatesSlotNext operation.
 */
export type WebAppsListPublicCertificatesSlotNextResponse = PublicCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificateCollection;
    };
};

/**
 * Contains response data for the listSiteExtensionsSlotNext operation.
 */
export type WebAppsListSiteExtensionsSlotNextResponse = SiteExtensionInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfoCollection;
    };
};

/**
 * Contains response data for the listSlotDifferencesSlotNext operation.
 */
export type WebAppsListSlotDifferencesSlotNextResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the listSnapshotsSlotNext operation.
 */
export type WebAppsListSnapshotsSlotNextResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the listSnapshotsFromDRSecondarySlotNext operation.
 */
export type WebAppsListSnapshotsFromDRSecondarySlotNextResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the listTriggeredWebJobsSlotNext operation.
 */
export type WebAppsListTriggeredWebJobsSlotNextResponse = TriggeredWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJobCollection;
    };
};

/**
 * Contains response data for the listTriggeredWebJobHistorySlotNext operation.
 */
export type WebAppsListTriggeredWebJobHistorySlotNextResponse = TriggeredJobHistoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistoryCollection;
    };
};

/**
 * Contains response data for the listUsagesSlotNext operation.
 */
export type WebAppsListUsagesSlotNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listWebJobsSlotNext operation.
 */
export type WebAppsListWebJobsSlotNextResponse = WebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJobCollection;
    };
};

/**
 * Contains response data for the listSlotDifferencesFromProductionNext operation.
 */
export type WebAppsListSlotDifferencesFromProductionNextResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the listSnapshotsNext operation.
 */
export type WebAppsListSnapshotsNextResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the listSnapshotsFromDRSecondaryNext operation.
 */
export type WebAppsListSnapshotsFromDRSecondaryNextResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the listTriggeredWebJobsNext operation.
 */
export type WebAppsListTriggeredWebJobsNextResponse = TriggeredWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJobCollection;
    };
};

/**
 * Contains response data for the listTriggeredWebJobHistoryNext operation.
 */
export type WebAppsListTriggeredWebJobHistoryNextResponse = TriggeredJobHistoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistoryCollection;
    };
};

/**
 * Contains response data for the listUsagesNext operation.
 */
export type WebAppsListUsagesNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listWebJobsNext operation.
 */
export type WebAppsListWebJobsNextResponse = WebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJobCollection;
    };
};

/**
 * Contains response data for the getPublishingUser operation.
 */
export type GetPublishingUserResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the updatePublishingUser operation.
 */
export type UpdatePublishingUserResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the listSourceControls operation.
 */
export type ListSourceControlsResponse = SourceControlCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControlCollection;
    };
};

/**
 * Contains response data for the getSourceControl operation.
 */
export type GetSourceControlResponse = SourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControl;
    };
};

/**
 * Contains response data for the updateSourceControl operation.
 */
export type UpdateSourceControlResponse = SourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControl;
    };
};

/**
 * Contains response data for the listBillingMeters operation.
 */
export type ListBillingMetersResponse = BillingMeterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingMeterCollection;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type CheckNameAvailabilityResponse = ResourceNameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceNameAvailability;
    };
};

/**
 * Contains response data for the getSubscriptionDeploymentLocations operation.
 */
export type GetSubscriptionDeploymentLocationsResponse = DeploymentLocations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentLocations;
    };
};

/**
 * Contains response data for the listGeoRegions operation.
 */
export type ListGeoRegionsResponse = GeoRegionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoRegionCollection;
    };
};

/**
 * Contains response data for the listSiteIdentifiersAssignedToHostName operation.
 */
export type ListSiteIdentifiersAssignedToHostNameResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the listPremierAddOnOffers operation.
 */
export type ListPremierAddOnOffersResponse = PremierAddOnOfferCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOnOfferCollection;
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type ListSkusResponse = SkuInfos & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfos;
    };
};

/**
 * Contains response data for the verifyHostingEnvironmentVnet operation.
 */
export type VerifyHostingEnvironmentVnetResponse = VnetValidationFailureDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetValidationFailureDetails;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type ValidateResponse2 = ValidateResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateResponse;
    };
};

/**
 * Contains response data for the validateContainerSettings operation.
 */
export type ValidateContainerSettingsResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listSourceControlsNext operation.
 */
export type ListSourceControlsNextResponse = SourceControlCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControlCollection;
    };
};

/**
 * Contains response data for the listBillingMetersNext operation.
 */
export type ListBillingMetersNextResponse = BillingMeterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingMeterCollection;
    };
};

/**
 * Contains response data for the listGeoRegionsNext operation.
 */
export type ListGeoRegionsNextResponse = GeoRegionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoRegionCollection;
    };
};

/**
 * Contains response data for the listSiteIdentifiersAssignedToHostNameNext operation.
 */
export type ListSiteIdentifiersAssignedToHostNameNextResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the listPremierAddOnOffersNext operation.
 */
export type ListPremierAddOnOffersNextResponse = PremierAddOnOfferCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOnOfferCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AppServicePlansListResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AppServicePlansListByResourceGroupResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AppServicePlansGetResponse = AppServicePlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlan;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AppServicePlansCreateOrUpdateResponse = AppServicePlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlan;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AppServicePlansUpdateResponse = AppServicePlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlan;
    };
};

/**
 * Contains response data for the listCapabilities operation.
 */
export type AppServicePlansListCapabilitiesResponse = Array<Capability> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Capability[];
    };
};

/**
 * Contains response data for the getHybridConnection operation.
 */
export type AppServicePlansGetHybridConnectionResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listHybridConnectionKeys operation.
 */
export type AppServicePlansListHybridConnectionKeysResponse = HybridConnectionKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionKey;
    };
};

/**
 * Contains response data for the listWebAppsByHybridConnection operation.
 */
export type AppServicePlansListWebAppsByHybridConnectionResponse = ResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceCollection;
    };
};

/**
 * Contains response data for the getHybridConnectionPlanLimit operation.
 */
export type AppServicePlansGetHybridConnectionPlanLimitResponse = HybridConnectionLimits & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionLimits;
    };
};

/**
 * Contains response data for the listHybridConnections operation.
 */
export type AppServicePlansListHybridConnectionsResponse = HybridConnectionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionCollection;
    };
};

/**
 * Contains response data for the listMetricDefintions operation.
 */
export type AppServicePlansListMetricDefintionsResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type AppServicePlansListMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listWebApps operation.
 */
export type AppServicePlansListWebAppsResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the getServerFarmSkus operation.
 */
export type AppServicePlansGetServerFarmSkusResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type AppServicePlansListUsagesResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listVnets operation.
 */
export type AppServicePlansListVnetsResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the getVnetFromServerFarm operation.
 */
export type AppServicePlansGetVnetFromServerFarmResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getVnetGateway operation.
 */
export type AppServicePlansGetVnetGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateVnetGateway operation.
 */
export type AppServicePlansUpdateVnetGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the listRoutesForVnet operation.
 */
export type AppServicePlansListRoutesForVnetResponse = Array<VnetRoute> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute[];
    };
};

/**
 * Contains response data for the getRouteForVnet operation.
 */
export type AppServicePlansGetRouteForVnetResponse = Array<VnetRoute> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute[];
    };
};

/**
 * Contains response data for the createOrUpdateVnetRoute operation.
 */
export type AppServicePlansCreateOrUpdateVnetRouteResponse = VnetRoute & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute;
    };
};

/**
 * Contains response data for the updateVnetRoute operation.
 */
export type AppServicePlansUpdateVnetRouteResponse = VnetRoute & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AppServicePlansBeginCreateOrUpdateResponse = AppServicePlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlan;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AppServicePlansListNextResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AppServicePlansListByResourceGroupNextResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the listWebAppsByHybridConnectionNext operation.
 */
export type AppServicePlansListWebAppsByHybridConnectionNextResponse = ResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceCollection;
    };
};

/**
 * Contains response data for the listHybridConnectionsNext operation.
 */
export type AppServicePlansListHybridConnectionsNextResponse = HybridConnectionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionCollection;
    };
};

/**
 * Contains response data for the listMetricDefintionsNext operation.
 */
export type AppServicePlansListMetricDefintionsNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetricsNext operation.
 */
export type AppServicePlansListMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listWebAppsNext operation.
 */
export type AppServicePlansListWebAppsNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listUsagesNext operation.
 */
export type AppServicePlansListUsagesNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the getAvailableStacks operation.
 */
export type ProviderGetAvailableStacksResponse = ApplicationStackCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationStackCollection;
    };
};

/**
 * Contains response data for the listOperations operation.
 */
export type ProviderListOperationsResponse = CsmOperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmOperationCollection;
    };
};

/**
 * Contains response data for the getAvailableStacksOnPrem operation.
 */
export type ProviderGetAvailableStacksOnPremResponse = ApplicationStackCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationStackCollection;
    };
};

/**
 * Contains response data for the getAvailableStacksNext operation.
 */
export type ProviderGetAvailableStacksNextResponse = ApplicationStackCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationStackCollection;
    };
};

/**
 * Contains response data for the listOperationsNext operation.
 */
export type ProviderListOperationsNextResponse = CsmOperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmOperationCollection;
    };
};

/**
 * Contains response data for the getAvailableStacksOnPremNext operation.
 */
export type ProviderGetAvailableStacksOnPremNextResponse = ApplicationStackCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationStackCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RecommendationsListResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listHistoryForHostingEnvironment operation.
 */
export type RecommendationsListHistoryForHostingEnvironmentResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listRecommendedRulesForHostingEnvironment operation.
 */
export type RecommendationsListRecommendedRulesForHostingEnvironmentResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the getRuleDetailsByHostingEnvironment operation.
 */
export type RecommendationsGetRuleDetailsByHostingEnvironmentResponse = RecommendationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationRule;
    };
};

/**
 * Contains response data for the listHistoryForWebApp operation.
 */
export type RecommendationsListHistoryForWebAppResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listRecommendedRulesForWebApp operation.
 */
export type RecommendationsListRecommendedRulesForWebAppResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the getRuleDetailsByWebApp operation.
 */
export type RecommendationsGetRuleDetailsByWebAppResponse = RecommendationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationRule;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RecommendationsListNextResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listHistoryForHostingEnvironmentNext operation.
 */
export type RecommendationsListHistoryForHostingEnvironmentNextResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listRecommendedRulesForHostingEnvironmentNext operation.
 */
export type RecommendationsListRecommendedRulesForHostingEnvironmentNextResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listHistoryForWebAppNext operation.
 */
export type RecommendationsListHistoryForWebAppNextResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listRecommendedRulesForWebAppNext operation.
 */
export type RecommendationsListRecommendedRulesForWebAppNextResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};
