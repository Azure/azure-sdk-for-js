{"version":3,"file":"modelsRepositoryServiceClient.js","sourceRoot":"","sources":["../../src/modelsRepositoryServiceClient.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,mBAAmB,EAAE,MAAM,sBAAsB,CAAC;AAS3D;;GAEG;AACH,MAAM,OAAO,gCAAiC,SAAQ,aAAa;IAIjE;;;;;OAKG;IACH,YAAY,GAAW,EAAE,UAAmD,EAAE;QAC5E,MAAM,QAAQ,GAA4C;YACxD,OAAO,EAAE,GAAG,GAAG,EAAE;YACjB,kBAAkB,EAAE,iCAAiC;SACtD,CAAC;QAEF,MAAM,mBAAmB,mCACpB,QAAQ,GACR,OAAO,CACX,CAAC;QAEF,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAE3B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,mBAAmB,CAAC;IACxD,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ServiceClientOptions } from \"@azure/core-client\";\nimport { ServiceClient } from \"@azure/core-client\";\nimport { DEFAULT_API_VERSION } from \"./utils/constants.js\";\n\ninterface IoTModelsRepositoryServiceClientOptions extends ServiceClientOptions {\n  // API Version to be used during HTTP Calls.\n  version?: string;\n  // Endpoint that will be base of URLs for HTTP calls.\n  endpoint?: string;\n}\n\n/**\n * @internal\n */\nexport class IoTModelsRepositoryServiceClient extends ServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the IoTModelsRepositoryServiceClient class.\n   *\n   * @param url - The URL of the service account or table that is the target of the desired operation.\n   * @param options - The parameter options\n   */\n  constructor(url: string, options: IoTModelsRepositoryServiceClientOptions = {}) {\n    const defaults: IoTModelsRepositoryServiceClientOptions = {\n      baseUri: `${url}`,\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n    };\n\n    super(optionsWithDefaults);\n\n    this.url = url;\n    this.version = options.version || DEFAULT_API_VERSION;\n  }\n}\n"]}