/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  EnvironmentCreateOrUpdateParametersUnion,
  EnvironmentsCreateOrUpdateOptionalParams,
  EnvironmentsCreateOrUpdateResponse,
  EnvironmentsGetOptionalParams,
  EnvironmentsGetResponse,
  EnvironmentUpdateParametersUnion,
  EnvironmentsUpdateOptionalParams,
  EnvironmentsUpdateResponse,
  EnvironmentsDeleteOptionalParams,
  EnvironmentsListByResourceGroupOptionalParams,
  EnvironmentsListByResourceGroupResponse,
  EnvironmentsListBySubscriptionOptionalParams,
  EnvironmentsListBySubscriptionResponse
} from "../models";

/** Interface representing a Environments. */
export interface Environments {
  /**
   * Create or update an environment in the specified subscription and resource group.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param environmentName Name of the environment
   * @param parameters Parameters for creating an environment resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    environmentName: string,
    parameters: EnvironmentCreateOrUpdateParametersUnion,
    options?: EnvironmentsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<EnvironmentsCreateOrUpdateResponse>,
      EnvironmentsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update an environment in the specified subscription and resource group.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param environmentName Name of the environment
   * @param parameters Parameters for creating an environment resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    environmentName: string,
    parameters: EnvironmentCreateOrUpdateParametersUnion,
    options?: EnvironmentsCreateOrUpdateOptionalParams
  ): Promise<EnvironmentsCreateOrUpdateResponse>;
  /**
   * Gets the environment with the specified name in the specified subscription and resource group.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param environmentName The name of the Time Series Insights environment associated with the
   *                        specified resource group.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    environmentName: string,
    options?: EnvironmentsGetOptionalParams
  ): Promise<EnvironmentsGetResponse>;
  /**
   * Updates the environment with the specified name in the specified subscription and resource group.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param environmentName The name of the Time Series Insights environment associated with the
   *                        specified resource group.
   * @param environmentUpdateParameters Request object that contains the updated information for the
   *                                    environment.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    environmentName: string,
    environmentUpdateParameters: EnvironmentUpdateParametersUnion,
    options?: EnvironmentsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<EnvironmentsUpdateResponse>,
      EnvironmentsUpdateResponse
    >
  >;
  /**
   * Updates the environment with the specified name in the specified subscription and resource group.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param environmentName The name of the Time Series Insights environment associated with the
   *                        specified resource group.
   * @param environmentUpdateParameters Request object that contains the updated information for the
   *                                    environment.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    environmentName: string,
    environmentUpdateParameters: EnvironmentUpdateParametersUnion,
    options?: EnvironmentsUpdateOptionalParams
  ): Promise<EnvironmentsUpdateResponse>;
  /**
   * Deletes the environment with the specified name in the specified subscription and resource group.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param environmentName The name of the Time Series Insights environment associated with the
   *                        specified resource group.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    environmentName: string,
    options?: EnvironmentsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Lists all the available environments associated with the subscription and within the specified
   * resource group.
   * @param resourceGroupName Name of an Azure Resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: EnvironmentsListByResourceGroupOptionalParams
  ): Promise<EnvironmentsListByResourceGroupResponse>;
  /**
   * Lists all the available environments within a subscription, irrespective of the resource groups.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: EnvironmentsListBySubscriptionOptionalParams
  ): Promise<EnvironmentsListBySubscriptionResponse>;
}
