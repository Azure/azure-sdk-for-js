/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Contains the localized display information for this particular operation / action.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * A Time Series Insights REST API operation
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Contains the localized display information for this particular operation / action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly display?: OperationDisplay;
}

/**
 * Time Series Insights resource
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Time Series Insights resource that is tracked by Azure Resource Manager.
 */
export interface TrackedResource extends Resource {
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Properties that are common to all tracked resources.
 */
export interface ResourceProperties {
  /**
   * Provisioning state of the resource. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Succeeded', 'Failed', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * The sku determines the capacity of the environment, the SLA (in queries-per-minute and total
 * capacity), and the billing rate.
 */
export interface Sku {
  /**
   * The name of this SKU. Possible values include: 'S1', 'S2'
   */
  name: SkuName;
  /**
   * The capacity of the sku. This value can be changed to support scale out of environments after
   * they have been created.
   */
  capacity: number;
}

/**
 * Properties required to create any resource tracked by Azure Resource Manager.
 */
export interface CreateOrUpdateTrackedResourceProperties {
  /**
   * The location of the resource.
   */
  location: string;
  /**
   * Key-value pairs of additional properties for the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The structure of the property that a partition key can have. An environment can have multiple
 * such properties.
 */
export interface PartitionKeyProperty {
  /**
   * The name of the property.
   */
  name?: string;
  /**
   * The type of the property. Possible values include: 'String'
   */
  type?: PropertyType;
}

/**
 * Parameters supplied to the CreateOrUpdate Environment operation.
 */
export interface EnvironmentCreateOrUpdateParameters extends CreateOrUpdateTrackedResourceProperties {
  /**
   * The sku determines the capacity of the environment, the SLA (in queries-per-minute and total
   * capacity), and the billing rate.
   */
  sku: Sku;
  /**
   * ISO8601 timespan specifying the minimum number of days the environment's events will be
   * available for query.
   */
  dataRetentionTime: string;
  /**
   * The behavior the Time Series Insights service should take when the environment's capacity has
   * been exceeded. If "PauseIngress" is specified, new events will not be read from the event
   * source. If "PurgeOldData" is specified, new events will continue to be read and old events
   * will be deleted from the environment. The default behavior is PurgeOldData. Possible values
   * include: 'PurgeOldData', 'PauseIngress'
   */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /**
   * The list of partition keys according to which the data in the environment will be ordered.
   */
  partitionKeyProperties?: PartitionKeyProperty[];
}

/**
 * Parameters supplied to the Update Environment operation.
 */
export interface EnvironmentUpdateParameters {
  /**
   * The sku of the environment.
   */
  sku?: Sku;
  /**
   * Key-value pairs of additional properties for the environment.
   */
  tags?: { [propertyName: string]: string };
  /**
   * ISO8601 timespan specifying the minimum number of days the environment's events will be
   * available for query.
   */
  dataRetentionTime?: string;
  /**
   * The behavior the Time Series Insights service should take when the environment's capacity has
   * been exceeded. If "PauseIngress" is specified, new events will not be read from the event
   * source. If "PurgeOldData" is specified, new events will continue to be read and old events
   * will be deleted from the environment. The default behavior is PurgeOldData. Possible values
   * include: 'PurgeOldData', 'PauseIngress'
   */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /**
   * The list of event properties which will be used to partition data in the environment.
   */
  partitionKeyProperties?: PartitionKeyProperty[];
}

/**
 * An object that contains the details about an environment's state.
 */
export interface EnvironmentStateDetails {
  /**
   * Contains the code that represents the reason of an environment being in a particular state.
   * Can be used to programmatically handle specific cases.
   */
  code?: string;
  /**
   * A message that describes the state in detail.
   */
  message?: string;
}

/**
 * An object that represents the status of ingress on an environment.
 */
export interface IngressEnvironmentStatus {
  /**
   * This string represents the state of ingress operations on an environment. It can be
   * "Disabled", "Ready", "Running", "Paused" or "Unknown". Possible values include: 'Disabled',
   * 'Ready', 'Running', 'Paused', 'Unknown'
   */
  state?: IngressState;
  /**
   * An object that contains the details about an environment's state.
   */
  stateDetails?: EnvironmentStateDetails;
}

/**
 * An object that represents the status of the environment, and its internal state in the Time
 * Series Insights service.
 */
export interface EnvironmentStatus {
  /**
   * An object that represents the status of ingress on an environment.
   */
  ingress?: IngressEnvironmentStatus;
}

/**
 * An environment is a set of time-series data available for query, and is the top level Azure Time
 * Series Insights resource.
 */
export interface EnvironmentResource extends TrackedResource {
  /**
   * The sku determines the capacity of the environment, the SLA (in queries-per-minute and total
   * capacity), and the billing rate.
   */
  sku?: Sku;
  /**
   * ISO8601 timespan specifying the minimum number of days the environment's events will be
   * available for query.
   */
  dataRetentionTime: string;
  /**
   * The behavior the Time Series Insights service should take when the environment's capacity has
   * been exceeded. If "PauseIngress" is specified, new events will not be read from the event
   * source. If "PurgeOldData" is specified, new events will continue to be read and old events
   * will be deleted from the environment. The default behavior is PurgeOldData. Possible values
   * include: 'PurgeOldData', 'PauseIngress'
   */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /**
   * The list of partition keys according to which the data in the environment will be ordered.
   */
  partitionKeyProperties?: PartitionKeyProperty[];
  /**
   * Provisioning state of the resource. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Succeeded', 'Failed', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
  /**
   * An id used to access the environment data, e.g. to query the environment's events or upload
   * reference data for the environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataAccessId?: string;
  /**
   * The fully qualified domain name used to access the environment data, e.g. to query the
   * environment's events or upload reference data for the environment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataAccessFqdn?: string;
  /**
   * An object that represents the status of the environment, and its internal state in the Time
   * Series Insights service.
   */
  status?: EnvironmentStatus;
}

/**
 * The response of the List Environments operation.
 */
export interface EnvironmentListResponse {
  /**
   * Result of the List Environments operation.
   */
  value?: EnvironmentResource[];
}

/**
 * Contains the possible cases for EventSourceCreateOrUpdateParameters.
 */
export type EventSourceCreateOrUpdateParametersUnion = EventSourceCreateOrUpdateParameters | EventHubEventSourceCreateOrUpdateParameters | IoTHubEventSourceCreateOrUpdateParameters;

/**
 * Parameters supplied to the Create or Update Event Source operation.
 */
export interface EventSourceCreateOrUpdateParameters {
  /**
   * Polymorphic Discriminator
   */
  kind: "EventSourceCreateOrUpdateParameters";
  /**
   * The location of the resource.
   */
  location: string;
  /**
   * Key-value pairs of additional properties for the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Parameters supplied to the Create or Update Event Source operation for an EventHub event source.
 */
export interface EventHubEventSourceCreateOrUpdateParameters {
  /**
   * Polymorphic Discriminator
   */
  kind: "Microsoft.EventHub";
  /**
   * The location of the resource.
   */
  location: string;
  /**
   * Key-value pairs of additional properties for the resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Provisioning state of the resource. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Succeeded', 'Failed', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't
   * specified for timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
  /**
   * The name of the service bus that contains the event hub.
   */
  serviceBusNamespace: string;
  /**
   * The name of the event hub.
   */
  eventHubName: string;
  /**
   * The name of the event hub's consumer group that holds the partitions from which events will be
   * read.
   */
  consumerGroupName: string;
  /**
   * The name of the SAS key that grants the Time Series Insights service access to the event hub.
   * The shared access policies for this key must grant 'Listen' permissions to the event hub.
   */
  keyName: string;
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to
   * the event hub. This property is not shown in event source responses.
   */
  sharedAccessKey: string;
}

/**
 * Parameters supplied to the Create or Update Event Source operation for an IoTHub event source.
 */
export interface IoTHubEventSourceCreateOrUpdateParameters {
  /**
   * Polymorphic Discriminator
   */
  kind: "Microsoft.IoTHub";
  /**
   * The location of the resource.
   */
  location: string;
  /**
   * Key-value pairs of additional properties for the resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Provisioning state of the resource. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Succeeded', 'Failed', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't
   * specified for timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
  /**
   * The name of the iot hub.
   */
  iotHubName: string;
  /**
   * The name of the iot hub's consumer group that holds the partitions from which events will be
   * read.
   */
  consumerGroupName: string;
  /**
   * The name of the Shared Access Policy key that grants the Time Series Insights service access
   * to the iot hub. This shared access policy key must grant 'service connect' permissions to the
   * iot hub.
   */
  keyName: string;
  /**
   * The value of the Shared Access Policy key that grants the Time Series Insights service read
   * access to the iot hub. This property is not shown in event source responses.
   */
  sharedAccessKey: string;
}

/**
 * Parameters supplied to the Update Event Source operation.
 */
export interface EventSourceUpdateParameters {
  /**
   * Key-value pairs of additional properties for the event source.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Parameters supplied to the Update Event Source operation to update an EventHub event source.
 */
export interface EventHubEventSourceUpdateParameters extends EventSourceUpdateParameters {
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't
   * specified for timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * An object that represents the local timestamp property. It contains the format of local
   * timestamp that needs to be used and the corresponding timezone offset information. If a value
   * isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed
   * with the events.
   */
  localTimestamp?: LocalTimestamp;
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to
   * the event hub. This property is not shown in event source responses.
   */
  sharedAccessKey?: string;
}

/**
 * Parameters supplied to the Update Event Source operation to update an IoTHub event source.
 */
export interface IoTHubEventSourceUpdateParameters extends EventSourceUpdateParameters {
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't
   * specified for timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * An object that represents the local timestamp property. It contains the format of local
   * timestamp that needs to be used and the corresponding timezone offset information. If a value
   * isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed
   * with the events.
   */
  localTimestamp?: LocalTimestamp;
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to
   * the iot hub. This property is not shown in event source responses.
   */
  sharedAccessKey?: string;
}

/**
 * Contains the possible cases for EventSourceResource.
 */
export type EventSourceResourceUnion = EventSourceResource | EventHubEventSourceResource | IoTHubEventSourceResource;

/**
 * An environment receives data from one or more event sources. Each event source has associated
 * connection info that allows the Time Series Insights ingress pipeline to connect to and pull
 * data from the event source
 */
export interface EventSourceResource {
  /**
   * Polymorphic Discriminator
   */
  kind: "EventSourceResource";
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The response of the List EventSources operation.
 */
export interface EventSourceListResponse {
  /**
   * Result of the List EventSources operation.
   */
  value?: EventSourceResourceUnion[];
}

/**
 * An event source that receives its data from an Azure EventHub.
 */
export interface EventHubEventSourceResource {
  /**
   * Polymorphic Discriminator
   */
  kind: "Microsoft.EventHub";
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * Provisioning state of the resource. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Succeeded', 'Failed', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't
   * specified for timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
  /**
   * The name of the service bus that contains the event hub.
   */
  serviceBusNamespace: string;
  /**
   * The name of the event hub.
   */
  eventHubName: string;
  /**
   * The name of the event hub's consumer group that holds the partitions from which events will be
   * read.
   */
  consumerGroupName: string;
  /**
   * The name of the SAS key that grants the Time Series Insights service access to the event hub.
   * The shared access policies for this key must grant 'Listen' permissions to the event hub.
   */
  keyName: string;
}

/**
 * An event source that receives its data from an Azure IoTHub.
 */
export interface IoTHubEventSourceResource {
  /**
   * Polymorphic Discriminator
   */
  kind: "Microsoft.IotHub";
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * Provisioning state of the resource. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Succeeded', 'Failed', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't
   * specified for timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
  /**
   * The name of the iot hub.
   */
  iotHubName: string;
  /**
   * The name of the iot hub's consumer group that holds the partitions from which events will be
   * read.
   */
  consumerGroupName: string;
  /**
   * The name of the Shared Access Policy key that grants the Time Series Insights service access
   * to the iot hub. This shared access policy key must grant 'service connect' permissions to the
   * iot hub.
   */
  keyName: string;
}

/**
 * Properties of the event source.
 */
export interface EventSourceCommonProperties extends ResourceProperties {
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't
   * specified for timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   */
  timestampPropertyName?: string;
}

/**
 * Properties of an event source that reads events from an event broker in Azure.
 */
export interface AzureEventSourceProperties extends EventSourceCommonProperties {
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
}

/**
 * Properties of the EventHub event source.
 */
export interface EventHubEventSourceCommonProperties extends AzureEventSourceProperties {
  /**
   * The name of the service bus that contains the event hub.
   */
  serviceBusNamespace: string;
  /**
   * The name of the event hub.
   */
  eventHubName: string;
  /**
   * The name of the event hub's consumer group that holds the partitions from which events will be
   * read.
   */
  consumerGroupName: string;
  /**
   * The name of the SAS key that grants the Time Series Insights service access to the event hub.
   * The shared access policies for this key must grant 'Listen' permissions to the event hub.
   */
  keyName: string;
}

/**
 * Properties of the IoTHub event source.
 */
export interface IoTHubEventSourceCommonProperties extends AzureEventSourceProperties {
  /**
   * The name of the iot hub.
   */
  iotHubName: string;
  /**
   * The name of the iot hub's consumer group that holds the partitions from which events will be
   * read.
   */
  consumerGroupName: string;
  /**
   * The name of the Shared Access Policy key that grants the Time Series Insights service access
   * to the iot hub. This shared access policy key must grant 'service connect' permissions to the
   * iot hub.
   */
  keyName: string;
}

/**
 * An object that represents the offset information for the local timestamp format specified.
 * Should not be specified for LocalTimestampFormat - Embedded.
 */
export interface LocalTimestampTimeZoneOffset {
  /**
   * The event property that will be contain the offset information to calculate the local
   * timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of
   * the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When
   * LocalTimestampFormat is Timespan, it contains the name of property which contains values
   * representing the offset (eg: P1D or 1.00:00:00)
   */
  propertyName?: string;
}

/**
 * An object that represents the local timestamp property. It contains the format of local
 * timestamp that needs to be used and the corresponding timezone offset information. If a value
 * isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed
 * with the events.
 */
export interface LocalTimestamp {
  /**
   * An enum that represents the format of the local timestamp property that needs to be set.
   * Possible values include: 'Embedded', 'Iana', 'TimeSpan'
   */
  format?: LocalTimestampFormat;
  /**
   * An object that represents the offset information for the local timestamp format specified.
   * Should not be specified for LocalTimestampFormat - Embedded.
   */
  timeZoneOffset?: LocalTimestampTimeZoneOffset;
}

/**
 * An object that represents a set of mutable event source resource properties.
 */
export interface EventSourceMutableProperties {
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't
   * specified for timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * An object that represents the local timestamp property. It contains the format of local
   * timestamp that needs to be used and the corresponding timezone offset information. If a value
   * isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed
   * with the events.
   */
  localTimestamp?: LocalTimestamp;
}

/**
 * A key property for the reference data set. A reference data set can have multiple key
 * properties.
 */
export interface ReferenceDataSetKeyProperty {
  /**
   * The name of the key property.
   */
  name?: string;
  /**
   * The type of the key property. Possible values include: 'String', 'Double', 'Bool', 'DateTime'
   */
  type?: ReferenceDataKeyPropertyType;
}

/**
 * An interface representing ReferenceDataSetCreateOrUpdateParameters.
 */
export interface ReferenceDataSetCreateOrUpdateParameters extends CreateOrUpdateTrackedResourceProperties {
  /**
   * The list of key properties for the reference data set.
   */
  keyProperties: ReferenceDataSetKeyProperty[];
  /**
   * The reference data set key comparison behavior can be set using this property. By default, the
   * value is 'Ordinal' - which means case sensitive key comparison will be performed while joining
   * reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is
   * set, case insensitive comparison will be used. Possible values include: 'Ordinal',
   * 'OrdinalIgnoreCase'
   */
  dataStringComparisonBehavior?: DataStringComparisonBehavior;
}

/**
 * Parameters supplied to the Update Reference Data Set operation.
 */
export interface ReferenceDataSetUpdateParameters {
  /**
   * Key-value pairs of additional properties for the reference data set.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A reference data set provides metadata about the events in an environment. Metadata in the
 * reference data set will be joined with events as they are read from event sources. The metadata
 * that makes up the reference data set is uploaded or modified through the Time Series Insights
 * data plane APIs.
 */
export interface ReferenceDataSetResource extends TrackedResource {
  /**
   * The list of key properties for the reference data set.
   */
  keyProperties: ReferenceDataSetKeyProperty[];
  /**
   * The reference data set key comparison behavior can be set using this property. By default, the
   * value is 'Ordinal' - which means case sensitive key comparison will be performed while joining
   * reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is
   * set, case insensitive comparison will be used. Possible values include: 'Ordinal',
   * 'OrdinalIgnoreCase'
   */
  dataStringComparisonBehavior?: DataStringComparisonBehavior;
  /**
   * Provisioning state of the resource. Possible values include: 'Accepted', 'Creating',
   * 'Updating', 'Succeeded', 'Failed', 'Deleting'
   */
  provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * The response of the List Reference Data Sets operation.
 */
export interface ReferenceDataSetListResponse {
  /**
   * Result of the List Reference Data Sets operation.
   */
  value?: ReferenceDataSetResource[];
}

/**
 * An interface representing AccessPolicyCreateOrUpdateParameters.
 */
export interface AccessPolicyCreateOrUpdateParameters {
  /**
   * The objectId of the principal in Azure Active Directory.
   */
  principalObjectId?: string;
  /**
   * An description of the access policy.
   */
  description?: string;
  /**
   * The list of roles the principal is assigned on the environment.
   */
  roles?: AccessPolicyRole[];
}

/**
 * An interface representing AccessPolicyUpdateParameters.
 */
export interface AccessPolicyUpdateParameters {
  /**
   * An description of the access policy.
   */
  description?: string;
  /**
   * The list of roles the principal is assigned on the environment.
   */
  roles?: AccessPolicyRole[];
}

/**
 * An access policy is used to grant users and applications access to the environment. Roles are
 * assigned to service principals in Azure Active Directory. These roles define the actions the
 * principal can perform through the Time Series Insights data plane APIs.
 */
export interface AccessPolicyResource extends Resource {
  /**
   * The objectId of the principal in Azure Active Directory.
   */
  principalObjectId?: string;
  /**
   * An description of the access policy.
   */
  description?: string;
  /**
   * The list of roles the principal is assigned on the environment.
   */
  roles?: AccessPolicyRole[];
}

/**
 * The response of the List access policies operation.
 */
export interface AccessPolicyListResponse {
  /**
   * Result of the List access policies operation.
   */
  value?: AccessPolicyResource[];
}

/**
 * Optional Parameters.
 */
export interface EnvironmentsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Setting $expand=status will include the status of the internal services of the environment in
   * the Time Series Insights service.
   */
  expand?: string;
}

/**
 * An interface representing TimeSeriesInsightsClientOptions.
 */
export interface TimeSeriesInsightsClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the request to list Time Series Insights operations. It contains a list of operations
 * and a URL link to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Accepted', 'Creating', 'Updating', 'Succeeded', 'Failed', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Accepted' | 'Creating' | 'Updating' | 'Succeeded' | 'Failed' | 'Deleting';

/**
 * Defines values for SkuName.
 * Possible values include: 'S1', 'S2'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'S1' | 'S2';

/**
 * Defines values for StorageLimitExceededBehavior.
 * Possible values include: 'PurgeOldData', 'PauseIngress'
 * @readonly
 * @enum {string}
 */
export type StorageLimitExceededBehavior = 'PurgeOldData' | 'PauseIngress';

/**
 * Defines values for PropertyType.
 * Possible values include: 'String'
 * @readonly
 * @enum {string}
 */
export type PropertyType = 'String';

/**
 * Defines values for IngressState.
 * Possible values include: 'Disabled', 'Ready', 'Running', 'Paused', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type IngressState = 'Disabled' | 'Ready' | 'Running' | 'Paused' | 'Unknown';

/**
 * Defines values for LocalTimestampFormat.
 * Possible values include: 'Embedded', 'Iana', 'TimeSpan'
 * @readonly
 * @enum {string}
 */
export type LocalTimestampFormat = 'Embedded' | 'Iana' | 'TimeSpan';

/**
 * Defines values for ReferenceDataKeyPropertyType.
 * Possible values include: 'String', 'Double', 'Bool', 'DateTime'
 * @readonly
 * @enum {string}
 */
export type ReferenceDataKeyPropertyType = 'String' | 'Double' | 'Bool' | 'DateTime';

/**
 * Defines values for DataStringComparisonBehavior.
 * Possible values include: 'Ordinal', 'OrdinalIgnoreCase'
 * @readonly
 * @enum {string}
 */
export type DataStringComparisonBehavior = 'Ordinal' | 'OrdinalIgnoreCase';

/**
 * Defines values for AccessPolicyRole.
 * Possible values include: 'Reader', 'Contributor'
 * @readonly
 * @enum {string}
 */
export type AccessPolicyRole = 'Reader' | 'Contributor';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EnvironmentsCreateOrUpdateResponse = EnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EnvironmentsGetResponse = EnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EnvironmentsUpdateResponse = EnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentResource;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type EnvironmentsListByResourceGroupResponse = EnvironmentListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentListResponse;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type EnvironmentsListBySubscriptionResponse = EnvironmentListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentListResponse;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type EnvironmentsBeginCreateOrUpdateResponse = EnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type EnvironmentsBeginUpdateResponse = EnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EventSourcesCreateOrUpdateResponse = EventSourceResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSourceResourceUnion;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EventSourcesGetResponse = EventSourceResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSourceResourceUnion;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EventSourcesUpdateResponse = EventSourceResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSourceResourceUnion;
    };
};

/**
 * Contains response data for the listByEnvironment operation.
 */
export type EventSourcesListByEnvironmentResponse = EventSourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventSourceListResponse;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ReferenceDataSetsCreateOrUpdateResponse = ReferenceDataSetResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReferenceDataSetResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReferenceDataSetsGetResponse = ReferenceDataSetResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReferenceDataSetResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReferenceDataSetsUpdateResponse = ReferenceDataSetResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReferenceDataSetResource;
    };
};

/**
 * Contains response data for the listByEnvironment operation.
 */
export type ReferenceDataSetsListByEnvironmentResponse = ReferenceDataSetListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReferenceDataSetListResponse;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AccessPoliciesCreateOrUpdateResponse = AccessPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AccessPoliciesGetResponse = AccessPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccessPoliciesUpdateResponse = AccessPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyResource;
    };
};

/**
 * Contains response data for the listByEnvironment operation.
 */
export type AccessPoliciesListByEnvironmentResponse = AccessPolicyListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyListResponse;
    };
};
