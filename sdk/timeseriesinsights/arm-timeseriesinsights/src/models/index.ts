/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type EnvironmentUpdateParametersUnion =
  | EnvironmentUpdateParameters
  | Gen1EnvironmentUpdateParameters
  | Gen2EnvironmentUpdateParameters;
export type EventSourceUpdateParametersUnion =
  | EventSourceUpdateParameters
  | EventHubEventSourceUpdateParameters
  | IoTHubEventSourceUpdateParameters;
export type EnvironmentCreateOrUpdateParametersUnion =
  | EnvironmentCreateOrUpdateParameters
  | Gen1EnvironmentCreateOrUpdateParameters
  | Gen2EnvironmentCreateOrUpdateParameters;
export type EventSourceCreateOrUpdateParametersUnion =
  | EventSourceCreateOrUpdateParameters
  | EventHubEventSourceCreateOrUpdateParameters
  | IoTHubEventSourceCreateOrUpdateParameters;
export type EnvironmentResourceUnion =
  | EnvironmentResource
  | Gen1EnvironmentResource
  | Gen2EnvironmentResource;
export type EventSourceResourceUnion =
  | EventSourceResource
  | EventHubEventSourceResource
  | IoTHubEventSourceResource;

/** Result of the request to list Time Series Insights operations. It contains a list of operations and a URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of Time Series Insights operations supported by the Microsoft.TimeSeriesInsights resource provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A Time Series Insights REST API operation */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Contains the localized display information for this particular operation / action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly display?: OperationDisplay;
  /** The intended executor of the operation. */
  origin?: string;
  /** One property of operation, include metric specifications. */
  serviceSpecification?: ServiceSpecification;
}

/** Contains the localized display information for this particular operation / action. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** One property of operation, include metric specifications. */
export interface ServiceSpecification {
  /** Metric specifications of operation. */
  metricSpecifications?: MetricSpecification[];
  /** A list of Azure Monitoring log definitions. */
  logSpecifications?: LogSpecification[];
}

/** Metric specification of operation. */
export interface MetricSpecification {
  /** Name of metric specification. */
  name?: string;
  /** Display name of metric specification. */
  displayName?: string;
  /** Display description of metric specification. */
  displayDescription?: string;
  /** Unit could be Bytes or Count. */
  unit?: string;
  /** Dimensions of blobs, including blob type and access tier. */
  dimensions?: Dimension[];
  /** Aggregation type could be Average. */
  aggregationType?: string;
  /** Retention policies of a resource metric. */
  availabilities?: MetricAvailability[];
  /** The category this metric specification belong to, could be Capacity. */
  category?: string;
  /** Account Resource Id. */
  resourceIdDimensionNameOverride?: string;
}

/** Dimension of blobs, possibly be blob type or access tier. */
export interface Dimension {
  /** Display name of dimension. */
  name?: string;
  /** Display name of dimension. */
  displayName?: string;
}

/** Retention policy of a resource metric. */
export interface MetricAvailability {
  timeGrain?: string;
  blobDuration?: string;
}

/** The specification of an Azure Monitoring log. */
export interface LogSpecification {
  /** Log name. */
  name?: string;
  /** Log display name. */
  displayName?: string;
}

/** Contains information about an API error. */
export interface CloudError {
  /** Describes a particular API error with an error code and a message. */
  error?: CloudErrorBody;
}

/** Describes a particular API error with an error code and a message. */
export interface CloudErrorBody {
  /** An error code that describes the error condition more precisely than an HTTP status code. Can be used to programmatically handle specific error cases. */
  code?: string;
  /** A message that describes the error in detail and provides debugging information. */
  message?: string;
  /** The target of the particular error (for example, the name of the property in error). */
  target?: string;
  /** Contains nested errors that are related to this error. */
  details?: CloudErrorBody[];
}

/** The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate. */
export interface Sku {
  /** The name of this SKU. */
  name: SkuName;
  /** The capacity of the sku. For Gen1 environments, this value can be changed to support scale out of environments after they have been created. */
  capacity: number;
}

/** Properties required to create any resource tracked by Azure Resource Manager. */
export interface CreateOrUpdateTrackedResourceProperties {
  /** The location of the resource. */
  location: string;
  /** Key-value pairs of additional properties for the resource. */
  tags?: { [propertyName: string]: string };
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Parameters supplied to the Update Environment operation. */
export interface EnvironmentUpdateParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Gen1" | "Gen2";
  /** Key-value pairs of additional properties for the environment. */
  tags?: { [propertyName: string]: string };
}

/** The response of the List Environments operation. */
export interface EnvironmentListResponse {
  /** Result of the List Environments operation. */
  value?: EnvironmentResourceUnion[];
}

/** An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events. */
export interface LocalTimestamp {
  /** An enum that represents the format of the local timestamp property that needs to be set. */
  format?: LocalTimestampFormat;
  /** An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded. */
  timeZoneOffset?: LocalTimestampTimeZoneOffset;
}

/** An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded. */
export interface LocalTimestampTimeZoneOffset {
  /** The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00) */
  propertyName?: string;
}

/** Parameters supplied to the Update Event Source operation. */
export interface EventSourceUpdateParameters {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Microsoft.EventHub" | "Microsoft.IoTHub";
  /** Key-value pairs of additional properties for the event source. */
  tags?: { [propertyName: string]: string };
}

/** The response of the List EventSources operation. */
export interface EventSourceListResponse {
  /** Result of the List EventSources operation. */
  value?: EventSourceResourceUnion[];
}

/** Properties used to create a reference data set. */
export interface ReferenceDataSetCreationProperties {
  /** The list of key properties for the reference data set. */
  keyProperties: ReferenceDataSetKeyProperty[];
  /** The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used. */
  dataStringComparisonBehavior?: DataStringComparisonBehavior;
}

/** A key property for the reference data set. A reference data set can have multiple key properties. */
export interface ReferenceDataSetKeyProperty {
  /** The name of the key property. */
  name?: string;
  /** The type of the key property. */
  type?: ReferenceDataKeyPropertyType;
}

/** Properties that are common to all tracked resources. */
export interface ResourceProperties {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
}

/** Parameters supplied to the Update Reference Data Set operation. */
export interface ReferenceDataSetUpdateParameters {
  /** Key-value pairs of additional properties for the reference data set. */
  tags?: { [propertyName: string]: string };
}

/** The response of the List Reference Data Sets operation. */
export interface ReferenceDataSetListResponse {
  /** Result of the List Reference Data Sets operation. */
  value?: ReferenceDataSetResource[];
}

export interface AccessPolicyCreateOrUpdateParameters {
  /** The objectId of the principal in Azure Active Directory. */
  principalObjectId?: string;
  /** An description of the access policy. */
  description?: string;
  /** The list of roles the principal is assigned on the environment. */
  roles?: AccessPolicyRole[];
}

export interface AccessPolicyUpdateParameters {
  /** An description of the access policy. */
  description?: string;
  /** The list of roles the principal is assigned on the environment. */
  roles?: AccessPolicyRole[];
}

/** The response of the List access policies operation. */
export interface AccessPolicyListResponse {
  /** Result of the List access policies operation. */
  value?: AccessPolicyResource[];
}

/** The Private Endpoint resource. */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** A collection of information about the state of the connection between service consumer and provider. */
export interface PrivateLinkServiceConnectionState {
  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
  status?: PrivateEndpointServiceConnectionStatus;
  /** The reason for approval/rejection of the connection. */
  description?: string;
  /** A message indicating if changes on the service provider require any updates on the consumer. */
  actionsRequired?: string;
}

/** List of private endpoint connection associated with the specified storage account */
export interface PrivateEndpointConnectionListResult {
  /** Array of private endpoint connections */
  value?: PrivateEndpointConnection[];
}

/** A list of private link resources */
export interface PrivateLinkResourceListResult {
  /** Array of private link resources */
  value?: PrivateLinkResource[];
}

/** The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query. */
export interface WarmStoreConfigurationProperties {
  /** ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store. */
  dataRetention: string;
}

/** The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data. */
export interface Gen2StorageConfigurationInput {
  /** The name of the storage account that will hold the environment's Gen2 data. */
  accountName: string;
  /** The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses. */
  managementKey: string;
}

/** The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data. */
export interface Gen2StorageConfigurationOutput {
  /** The name of the storage account that will hold the environment's Gen2 data. */
  accountName: string;
}

/** The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data. */
export interface Gen2StorageConfigurationMutableProperties {
  /** The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses. */
  managementKey: string;
}

/** Properties used to create a Gen1 environment. */
export interface Gen1EnvironmentCreationProperties {
  /** ISO8601 timespan specifying the minimum number of days the environment's events will be available for query. */
  dataRetentionTime: string;
  /** The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData. */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /** The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported. */
  partitionKeyProperties?: TimeSeriesIdProperty[];
}

/** The structure of the property that a time series id can have. An environment can have multiple such properties. */
export interface TimeSeriesIdProperty {
  /** The name of the property. */
  name?: string;
  /** The type of the property. */
  type?: PropertyType;
}

/** An object that represents the status of the environment, and its internal state in the Time Series Insights service. */
export interface EnvironmentStatus {
  /**
   * An object that represents the status of ingress on an environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ingress?: IngressEnvironmentStatus;
  /**
   * An object that represents the status of warm storage on an environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly warmStorage?: WarmStorageEnvironmentStatus;
}

/** An object that represents the status of ingress on an environment. */
export interface IngressEnvironmentStatus {
  /** This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown" */
  state?: IngressState;
  /**
   * An object that contains the details about an environment's state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly stateDetails?: EnvironmentStateDetails;
}

/** An object that contains the details about an environment's state. */
export interface EnvironmentStateDetails {
  /** Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases. */
  code?: string;
  /** A message that describes the state in detail. */
  message?: string;
}

/** An object that represents the status of warm storage on an environment. */
export interface WarmStorageEnvironmentStatus {
  /** This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown". */
  state?: WarmStoragePropertiesState;
  /** A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU */
  currentCount?: number;
  /** A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU. */
  maxCount?: number;
}

/** An object that represents a set of mutable event source resource properties. */
export interface EventSourceMutableProperties {
  /** The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used. */
  timestampPropertyName?: string;
}

/** Parameters supplied to the CreateOrUpdate Environment operation. */
export type EnvironmentCreateOrUpdateParameters = CreateOrUpdateTrackedResourceProperties & {
  /** The kind of the environment. */
  kind: EnvironmentKind;
  /** The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate. */
  sku: Sku;
};

/** Parameters supplied to the Create or Update Event Source operation. */
export type EventSourceCreateOrUpdateParameters = CreateOrUpdateTrackedResourceProperties & {
  /** The kind of the event source. */
  kind: EventSourceKind;
  /** An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events. */
  localTimestamp?: LocalTimestamp;
};

export type ReferenceDataSetCreateOrUpdateParameters = CreateOrUpdateTrackedResourceProperties & {
  /** The list of key properties for the reference data set. */
  keyProperties: ReferenceDataSetKeyProperty[];
  /** The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used. */
  dataStringComparisonBehavior?: DataStringComparisonBehavior;
};

/** Time Series Insights resource that is tracked by Azure Resource Manager. */
export type TrackedResource = Resource & {
  /** Resource location */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
};

/** An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs. */
export type AccessPolicyResource = Resource & {
  /** The objectId of the principal in Azure Active Directory. */
  principalObjectId?: string;
  /** An description of the access policy. */
  description?: string;
  /** The list of roles the principal is assigned on the environment. */
  roles?: AccessPolicyRole[];
};

/** The Private Endpoint Connection resource. */
export type PrivateEndpointConnection = Resource & {
  /**
   * Provisioning state of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
  /** The resource of private end point. */
  privateEndpoint?: PrivateEndpoint;
  /** The provisioning state of the private endpoint connection resource. */
  groupIds?: string[];
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
};

/** A private link resource */
export type PrivateLinkResource = Resource & {
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /** The private link resource Private link DNS zone name. */
  requiredZoneNames?: string[];
};

/** Parameters supplied to the Update Environment operation to update a Gen1 environment. */
export type Gen1EnvironmentUpdateParameters = EnvironmentUpdateParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Gen1";
  /** The sku of the environment. */
  sku?: Sku;
  /** ISO8601 timespan specifying the minimum number of days the environment's events will be available for query. */
  dataRetentionTime?: string;
  /** The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData. */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
};

/** Parameters supplied to the Update Environment operation to update a Gen2 environment. */
export type Gen2EnvironmentUpdateParameters = EnvironmentUpdateParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Gen2";
  /** The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data. */
  storageConfiguration?: Gen2StorageConfigurationMutableProperties;
  /** The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query. */
  warmStoreConfiguration?: WarmStoreConfigurationProperties;
};

/** Parameters supplied to the Update Event Source operation to update an EventHub event source. */
export type EventHubEventSourceUpdateParameters = EventSourceUpdateParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Microsoft.EventHub";
  /** The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used. */
  timestampPropertyName?: string;
  /** The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses. */
  sharedAccessKey?: string;
};

/** Parameters supplied to the Update Event Source operation to update an IoTHub event source. */
export type IoTHubEventSourceUpdateParameters = EventSourceUpdateParameters & {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Microsoft.IoTHub";
  /** The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used. */
  timestampPropertyName?: string;
  /** The value of the shared access key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses. */
  sharedAccessKey?: string;
};

/** Properties of the reference data set. */
export type ReferenceDataSetResourceProperties = ReferenceDataSetCreationProperties &
  ResourceProperties & {};

/** Properties of the environment. */
export type EnvironmentResourceProperties = ResourceProperties & {
  /**
   * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataAccessId?: string;
  /**
   * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataAccessFqdn?: string;
  /**
   * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: EnvironmentStatus;
};

/** Properties of the event source. */
export type EventSourceCommonProperties = ResourceProperties & {
  /** The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used. */
  timestampPropertyName?: string;
  /** An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events. */
  localTimestamp?: LocalTimestamp;
  /** The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime". */
  type?: IngressStartAtType;
  /** ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed. */
  time?: string;
};

/** Properties of the Gen1 environment. */
export type Gen1EnvironmentResourceProperties = Gen1EnvironmentCreationProperties &
  EnvironmentResourceProperties & {};

/** An object that represents a set of mutable EventHub event source resource properties. */
export type EventHubEventSourceMutableProperties = EventSourceMutableProperties & {
  /** The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses. */
  sharedAccessKey?: string;
};

/** An object that represents a set of mutable IoTHub event source resource properties. */
export type IoTHubEventSourceMutableProperties = EventSourceMutableProperties & {
  /** The value of the shared access key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses. */
  sharedAccessKey?: string;
};

/** Parameters supplied to the Create or Update Environment operation for a Gen1 environment. */
export type Gen1EnvironmentCreateOrUpdateParameters = EnvironmentCreateOrUpdateParameters & {
  /** ISO8601 timespan specifying the minimum number of days the environment's events will be available for query. */
  dataRetentionTime: string;
  /** The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData. */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /** The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported. */
  partitionKeyProperties?: TimeSeriesIdProperty[];
};

/** Parameters supplied to the Create or Update Environment operation for a Gen2 environment. */
export type Gen2EnvironmentCreateOrUpdateParameters = EnvironmentCreateOrUpdateParameters & {
  /** The list of event properties which will be used to define the environment's time series id. */
  timeSeriesIdProperties: TimeSeriesIdProperty[];
  /** The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data. */
  storageConfiguration: Gen2StorageConfigurationInput;
  /** The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query. */
  warmStoreConfiguration?: WarmStoreConfigurationProperties;
  /** This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method. */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * The list of private endpoint connections to the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
};

/** Parameters supplied to the Create or Update Event Source operation for an EventHub event source. */
export type EventHubEventSourceCreateOrUpdateParameters = EventSourceCreateOrUpdateParameters & {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /** The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used. */
  timestampPropertyName?: string;
  /** An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events. */
  localTimestampPropertiesLocalTimestamp?: LocalTimestamp;
  /** The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime". */
  type?: IngressStartAtType;
  /** ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed. */
  time?: string;
  /** The resource id of the event source in Azure Resource Manager. */
  eventSourceResourceId: string;
  /** The name of the service bus that contains the event hub. */
  serviceBusNamespace: string;
  /** The name of the event hub. */
  eventHubName: string;
  /** The name of the event hub's consumer group that holds the partitions from which events will be read. */
  consumerGroupName: string;
  /** The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub. */
  keyName: string;
  /** The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses. */
  sharedAccessKey: string;
};

/** Parameters supplied to the Create or Update Event Source operation for an IoTHub event source. */
export type IoTHubEventSourceCreateOrUpdateParameters = EventSourceCreateOrUpdateParameters & {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /** The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used. */
  timestampPropertyName?: string;
  /** An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events. */
  localTimestampPropertiesLocalTimestamp?: LocalTimestamp;
  /** The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime". */
  type?: IngressStartAtType;
  /** ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed. */
  time?: string;
  /** The resource id of the event source in Azure Resource Manager. */
  eventSourceResourceId: string;
  /** The name of the iot hub. */
  iotHubName: string;
  /** The name of the iot hub's consumer group that holds the partitions from which events will be read. */
  consumerGroupName: string;
  /** The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub. */
  keyName: string;
  /** The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses. */
  sharedAccessKey: string;
};

/** An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. */
export type EnvironmentResource = TrackedResource & {
  /** The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate. */
  sku: Sku;
  /** The kind of the environment. */
  kind: EnvironmentResourceKind;
};

/** An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source */
export type EventSourceResource = TrackedResource & {
  /** The kind of the event source. */
  kind: EventSourceResourceKind;
};

/** A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs. */
export type ReferenceDataSetResource = TrackedResource & {
  /** The list of key properties for the reference data set. */
  keyProperties?: ReferenceDataSetKeyProperty[];
  /** The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used. */
  dataStringComparisonBehavior?: DataStringComparisonBehavior;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
};

/** Properties of the Gen2 environment. */
export type Gen2EnvironmentResourceProperties = EnvironmentResourceProperties & {
  /** The list of event properties which will be used to define the environment's time series id. */
  timeSeriesIdProperties: TimeSeriesIdProperty[];
  /** The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data. */
  storageConfiguration: Gen2StorageConfigurationOutput;
  /** The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query. */
  warmStoreConfiguration?: WarmStoreConfigurationProperties;
  /** If 'enabled', public network access is allowed. If 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method. */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * The list of private endpoint connections to the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
};

/** Properties of an event source that reads events from an event broker in Azure. */
export type AzureEventSourceProperties = EventSourceCommonProperties & {
  /** The resource id of the event source in Azure Resource Manager. */
  eventSourceResourceId: string;
};

/** An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. Gen1 environments have data retention limits. */
export type Gen1EnvironmentResource = EnvironmentResource & {
  /** ISO8601 timespan specifying the minimum number of days the environment's events will be available for query. */
  dataRetentionTime: string;
  /** The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData. */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /** The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported. */
  partitionKeyProperties?: TimeSeriesIdProperty[];
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataAccessId?: string;
  /**
   * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataAccessFqdn?: string;
  /**
   * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: EnvironmentStatus;
};

/** An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. Gen2 environments do not have set data retention limits. */
export type Gen2EnvironmentResource = EnvironmentResource & {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataAccessId?: string;
  /**
   * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataAccessFqdn?: string;
  /**
   * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: EnvironmentStatus;
  /** The list of event properties which will be used to define the environment's time series id. */
  timeSeriesIdProperties: TimeSeriesIdProperty[];
  /** The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data. */
  storageConfiguration: Gen2StorageConfigurationOutput;
  /** The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query. */
  warmStoreConfiguration?: WarmStoreConfigurationProperties;
  /** If 'enabled', public network access is allowed. If 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method. */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * The list of private endpoint connections to the environment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
};

/** An event source that receives its data from an Azure EventHub. */
export type EventHubEventSourceResource = EventSourceResource & {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /** The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used. */
  timestampPropertyName?: string;
  /** An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events. */
  localTimestamp?: LocalTimestamp;
  /** The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime". */
  typePropertiesIngressStartAtType?: IngressStartAtType;
  /** ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed. */
  time?: string;
  /** The resource id of the event source in Azure Resource Manager. */
  eventSourceResourceId: string;
  /** The name of the service bus that contains the event hub. */
  serviceBusNamespace: string;
  /** The name of the event hub. */
  eventHubName: string;
  /** The name of the event hub's consumer group that holds the partitions from which events will be read. */
  consumerGroupName: string;
  /** The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub. */
  keyName: string;
};

/** An event source that receives its data from an Azure IoTHub. */
export type IoTHubEventSourceResource = EventSourceResource & {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /** The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used. */
  timestampPropertyName?: string;
  /** An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events. */
  localTimestamp?: LocalTimestamp;
  /** The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime". */
  typePropertiesIngressStartAtType?: IngressStartAtType;
  /** ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed. */
  time?: string;
  /** The resource id of the event source in Azure Resource Manager. */
  eventSourceResourceId: string;
  /** The name of the iot hub. */
  iotHubName: string;
  /** The name of the iot hub's consumer group that holds the partitions from which events will be read. */
  consumerGroupName: string;
  /** The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub. */
  keyName: string;
};

/** Properties of the EventHub event source. */
export type EventHubEventSourceCommonProperties = AzureEventSourceProperties & {
  /** The name of the service bus that contains the event hub. */
  serviceBusNamespace: string;
  /** The name of the event hub. */
  eventHubName: string;
  /** The name of the event hub's consumer group that holds the partitions from which events will be read. */
  consumerGroupName: string;
  /** The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub. */
  keyName: string;
};

/** Properties of the IoTHub event source. */
export type IoTHubEventSourceCommonProperties = AzureEventSourceProperties & {
  /** The name of the iot hub. */
  iotHubName: string;
  /** The name of the iot hub's consumer group that holds the partitions from which events will be read. */
  consumerGroupName: string;
  /** The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub. */
  keyName: string;
};

/** Properties of the EventHub event source that are required on create or update requests. */
export type EventHubEventSourceCreationProperties = EventHubEventSourceCommonProperties & {
  /** The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses. */
  sharedAccessKey: string;
};

/** Properties of the EventHub event source resource. */
export type EventHubEventSourceResourceProperties = EventHubEventSourceCommonProperties & {};

/** Properties of the IoTHub event source that are required on create or update requests. */
export type IoTHubEventSourceCreationProperties = IoTHubEventSourceCommonProperties & {
  /** The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses. */
  sharedAccessKey: string;
};

/** Properties of the IoTHub event source resource. */
export type IoTHubEventSourceResourceProperties = IoTHubEventSourceCommonProperties & {};

/** Known values of {@link EnvironmentKind} that the service accepts. */
export enum KnownEnvironmentKind {
  Gen1 = "Gen1",
  Gen2 = "Gen2"
}

/**
 * Defines values for EnvironmentKind. \
 * {@link KnownEnvironmentKind} can be used interchangeably with EnvironmentKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Gen1** \
 * **Gen2**
 */
export type EnvironmentKind = string;

/** Known values of {@link SkuName} that the service accepts. */
export enum KnownSkuName {
  S1 = "S1",
  S2 = "S2",
  P1 = "P1",
  L1 = "L1"
}

/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **S1** \
 * **S2** \
 * **P1** \
 * **L1**
 */
export type SkuName = string;

/** Known values of {@link EnvironmentResourceKind} that the service accepts. */
export enum KnownEnvironmentResourceKind {
  Gen1 = "Gen1",
  Gen2 = "Gen2"
}

/**
 * Defines values for EnvironmentResourceKind. \
 * {@link KnownEnvironmentResourceKind} can be used interchangeably with EnvironmentResourceKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Gen1** \
 * **Gen2**
 */
export type EnvironmentResourceKind = string;

/** Known values of {@link EventSourceKind} that the service accepts. */
export enum KnownEventSourceKind {
  MicrosoftEventHub = "Microsoft.EventHub",
  MicrosoftIoTHub = "Microsoft.IoTHub"
}

/**
 * Defines values for EventSourceKind. \
 * {@link KnownEventSourceKind} can be used interchangeably with EventSourceKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.EventHub** \
 * **Microsoft.IoTHub**
 */
export type EventSourceKind = string;

/** Known values of {@link LocalTimestampFormat} that the service accepts. */
export enum KnownLocalTimestampFormat {
  Embedded = "Embedded"
}

/**
 * Defines values for LocalTimestampFormat. \
 * {@link KnownLocalTimestampFormat} can be used interchangeably with LocalTimestampFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Embedded**
 */
export type LocalTimestampFormat = string;

/** Known values of {@link EventSourceResourceKind} that the service accepts. */
export enum KnownEventSourceResourceKind {
  MicrosoftEventHub = "Microsoft.EventHub",
  MicrosoftIoTHub = "Microsoft.IoTHub"
}

/**
 * Defines values for EventSourceResourceKind. \
 * {@link KnownEventSourceResourceKind} can be used interchangeably with EventSourceResourceKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.EventHub** \
 * **Microsoft.IoTHub**
 */
export type EventSourceResourceKind = string;

/** Known values of {@link ReferenceDataKeyPropertyType} that the service accepts. */
export enum KnownReferenceDataKeyPropertyType {
  String = "String",
  Double = "Double",
  Bool = "Bool",
  DateTime = "DateTime"
}

/**
 * Defines values for ReferenceDataKeyPropertyType. \
 * {@link KnownReferenceDataKeyPropertyType} can be used interchangeably with ReferenceDataKeyPropertyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **String** \
 * **Double** \
 * **Bool** \
 * **DateTime**
 */
export type ReferenceDataKeyPropertyType = string;

/** Known values of {@link DataStringComparisonBehavior} that the service accepts. */
export enum KnownDataStringComparisonBehavior {
  Ordinal = "Ordinal",
  OrdinalIgnoreCase = "OrdinalIgnoreCase"
}

/**
 * Defines values for DataStringComparisonBehavior. \
 * {@link KnownDataStringComparisonBehavior} can be used interchangeably with DataStringComparisonBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Ordinal** \
 * **OrdinalIgnoreCase**
 */
export type DataStringComparisonBehavior = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Accepted = "Accepted",
  Creating = "Creating",
  Updating = "Updating",
  Succeeded = "Succeeded",
  Failed = "Failed",
  Deleting = "Deleting"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Succeeded** \
 * **Failed** \
 * **Deleting**
 */
export type ProvisioningState = string;

/** Known values of {@link AccessPolicyRole} that the service accepts. */
export enum KnownAccessPolicyRole {
  Reader = "Reader",
  Contributor = "Contributor"
}

/**
 * Defines values for AccessPolicyRole. \
 * {@link KnownAccessPolicyRole} can be used interchangeably with AccessPolicyRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Reader** \
 * **Contributor**
 */
export type AccessPolicyRole = string;

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export enum KnownPrivateEndpointConnectionProvisioningState {
  Succeeded = "Succeeded",
  Creating = "Creating",
  Deleting = "Deleting",
  Failed = "Failed"
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export type PrivateEndpointConnectionProvisioningState = string;

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export enum KnownPrivateEndpointServiceConnectionStatus {
  Pending = "Pending",
  Approved = "Approved",
  Rejected = "Rejected"
}

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected**
 */
export type PrivateEndpointServiceConnectionStatus = string;

/** Known values of {@link StorageLimitExceededBehavior} that the service accepts. */
export enum KnownStorageLimitExceededBehavior {
  PurgeOldData = "PurgeOldData",
  PauseIngress = "PauseIngress"
}

/**
 * Defines values for StorageLimitExceededBehavior. \
 * {@link KnownStorageLimitExceededBehavior} can be used interchangeably with StorageLimitExceededBehavior,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PurgeOldData** \
 * **PauseIngress**
 */
export type StorageLimitExceededBehavior = string;

/** Known values of {@link PropertyType} that the service accepts. */
export enum KnownPropertyType {
  String = "String"
}

/**
 * Defines values for PropertyType. \
 * {@link KnownPropertyType} can be used interchangeably with PropertyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **String**
 */
export type PropertyType = string;

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export enum KnownPublicNetworkAccess {
  Enabled = "enabled",
  Disabled = "disabled"
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **enabled** \
 * **disabled**
 */
export type PublicNetworkAccess = string;

/** Known values of {@link IngressState} that the service accepts. */
export enum KnownIngressState {
  Disabled = "Disabled",
  Ready = "Ready",
  Running = "Running",
  Paused = "Paused",
  Unknown = "Unknown"
}

/**
 * Defines values for IngressState. \
 * {@link KnownIngressState} can be used interchangeably with IngressState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Ready** \
 * **Running** \
 * **Paused** \
 * **Unknown**
 */
export type IngressState = string;

/** Known values of {@link WarmStoragePropertiesState} that the service accepts. */
export enum KnownWarmStoragePropertiesState {
  Ok = "Ok",
  Error = "Error",
  Unknown = "Unknown"
}

/**
 * Defines values for WarmStoragePropertiesState. \
 * {@link KnownWarmStoragePropertiesState} can be used interchangeably with WarmStoragePropertiesState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Ok** \
 * **Error** \
 * **Unknown**
 */
export type WarmStoragePropertiesState = string;

/** Known values of {@link IngressStartAtType} that the service accepts. */
export enum KnownIngressStartAtType {
  EarliestAvailable = "EarliestAvailable",
  EventSourceCreationTime = "EventSourceCreationTime",
  CustomEnqueuedTime = "CustomEnqueuedTime"
}

/**
 * Defines values for IngressStartAtType. \
 * {@link KnownIngressStartAtType} can be used interchangeably with IngressStartAtType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EarliestAvailable** \
 * **EventSourceCreationTime** \
 * **CustomEnqueuedTime**
 */
export type IngressStartAtType = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface EnvironmentsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type EnvironmentsCreateOrUpdateResponse = EnvironmentResourceUnion;

/** Optional parameters. */
export interface EnvironmentsGetOptionalParams
  extends coreClient.OperationOptions {
  /** Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type EnvironmentsGetResponse = EnvironmentResourceUnion;

/** Optional parameters. */
export interface EnvironmentsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type EnvironmentsUpdateResponse = EnvironmentResourceUnion;

/** Optional parameters. */
export interface EnvironmentsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EnvironmentsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type EnvironmentsListByResourceGroupResponse = EnvironmentListResponse;

/** Optional parameters. */
export interface EnvironmentsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type EnvironmentsListBySubscriptionResponse = EnvironmentListResponse;

/** Optional parameters. */
export interface EventSourcesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type EventSourcesCreateOrUpdateResponse = EventSourceResourceUnion;

/** Optional parameters. */
export interface EventSourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EventSourcesGetResponse = EventSourceResourceUnion;

/** Optional parameters. */
export interface EventSourcesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type EventSourcesUpdateResponse = EventSourceResourceUnion;

/** Optional parameters. */
export interface EventSourcesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EventSourcesListByEnvironmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnvironment operation. */
export type EventSourcesListByEnvironmentResponse = EventSourceListResponse;

/** Optional parameters. */
export interface ReferenceDataSetsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ReferenceDataSetsCreateOrUpdateResponse = ReferenceDataSetResource;

/** Optional parameters. */
export interface ReferenceDataSetsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReferenceDataSetsGetResponse = ReferenceDataSetResource;

/** Optional parameters. */
export interface ReferenceDataSetsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ReferenceDataSetsUpdateResponse = ReferenceDataSetResource;

/** Optional parameters. */
export interface ReferenceDataSetsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ReferenceDataSetsListByEnvironmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnvironment operation. */
export type ReferenceDataSetsListByEnvironmentResponse = ReferenceDataSetListResponse;

/** Optional parameters. */
export interface AccessPoliciesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type AccessPoliciesCreateOrUpdateResponse = AccessPolicyResource;

/** Optional parameters. */
export interface AccessPoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AccessPoliciesGetResponse = AccessPolicyResource;

/** Optional parameters. */
export interface AccessPoliciesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type AccessPoliciesUpdateResponse = AccessPolicyResource;

/** Optional parameters. */
export interface AccessPoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AccessPoliciesListByEnvironmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnvironment operation. */
export type AccessPoliciesListByEnvironmentResponse = AccessPolicyListResponse;

/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PrivateEndpointConnectionsListByEnvironmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnvironment operation. */
export type PrivateEndpointConnectionsListByEnvironmentResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesListSupportedOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSupported operation. */
export type PrivateLinkResourcesListSupportedResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface TimeSeriesInsightsClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
