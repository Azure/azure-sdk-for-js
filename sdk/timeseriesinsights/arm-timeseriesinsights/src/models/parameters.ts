/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  EnvironmentCreateOrUpdateParameters as EnvironmentCreateOrUpdateParametersMapper,
  EnvironmentUpdateParameters as EnvironmentUpdateParametersMapper,
  EventSourceCreateOrUpdateParameters as EventSourceCreateOrUpdateParametersMapper,
  EventSourceUpdateParameters as EventSourceUpdateParametersMapper,
  ReferenceDataSetCreateOrUpdateParameters as ReferenceDataSetCreateOrUpdateParametersMapper,
  ReferenceDataSetUpdateParameters as ReferenceDataSetUpdateParametersMapper,
  AccessPolicyCreateOrUpdateParameters as AccessPolicyCreateOrUpdateParametersMapper,
  AccessPolicyUpdateParameters as AccessPolicyUpdateParametersMapper,
  PrivateEndpointConnection as PrivateEndpointConnectionMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2021-03-31-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: EnvironmentCreateOrUpdateParametersMapper
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const environmentName: OperationURLParameter = {
  parameterPath: "environmentName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\._\\(\\)]+$"),
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "environmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const environmentName1: OperationURLParameter = {
  parameterPath: "environmentName",
  mapper: {
    serializedName: "environmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const expand: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const environmentUpdateParameters: OperationParameter = {
  parameterPath: "environmentUpdateParameters",
  mapper: EnvironmentUpdateParametersMapper
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: EventSourceCreateOrUpdateParametersMapper
};

export const eventSourceName: OperationURLParameter = {
  parameterPath: "eventSourceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\._\\(\\)]+$"),
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "eventSourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const eventSourceName1: OperationURLParameter = {
  parameterPath: "eventSourceName",
  mapper: {
    serializedName: "eventSourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const eventSourceUpdateParameters: OperationParameter = {
  parameterPath: "eventSourceUpdateParameters",
  mapper: EventSourceUpdateParametersMapper
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: ReferenceDataSetCreateOrUpdateParametersMapper
};

export const referenceDataSetName: OperationURLParameter = {
  parameterPath: "referenceDataSetName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[A-Za-z0-9]"),
      MaxLength: 63,
      MinLength: 3
    },
    serializedName: "referenceDataSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const referenceDataSetName1: OperationURLParameter = {
  parameterPath: "referenceDataSetName",
  mapper: {
    serializedName: "referenceDataSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const referenceDataSetUpdateParameters: OperationParameter = {
  parameterPath: "referenceDataSetUpdateParameters",
  mapper: ReferenceDataSetUpdateParametersMapper
};

export const parameters3: OperationParameter = {
  parameterPath: "parameters",
  mapper: AccessPolicyCreateOrUpdateParametersMapper
};

export const accessPolicyName: OperationURLParameter = {
  parameterPath: "accessPolicyName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\._\\(\\)]+$"),
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "accessPolicyName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accessPolicyName1: OperationURLParameter = {
  parameterPath: "accessPolicyName",
  mapper: {
    serializedName: "accessPolicyName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accessPolicyUpdateParameters: OperationParameter = {
  parameterPath: "accessPolicyUpdateParameters",
  mapper: AccessPolicyUpdateParametersMapper
};

export const privateEndpointConnection: OperationParameter = {
  parameterPath: "privateEndpointConnection",
  mapper: PrivateEndpointConnectionMapper
};

export const privateEndpointConnectionName: OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    serializedName: "privateEndpointConnectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};
