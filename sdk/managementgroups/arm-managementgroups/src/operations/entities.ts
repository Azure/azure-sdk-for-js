/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/entitiesMappers";
import * as Parameters from "../models/parameters";
import { ManagementGroupsAPIContext } from "../managementGroupsAPIContext";

/** Class representing a Entities. */
export class Entities {
  private readonly client: ManagementGroupsAPIContext;

  /**
   * Create a Entities.
   * @param {ManagementGroupsAPIContext} client Reference to the service client.
   */
  constructor(client: ManagementGroupsAPIContext) {
    this.client = client;
  }

  /**
   * List all entities (Management Groups, Subscriptions, etc.) for the authenticated user.
   * @param [options] The optional parameters
   * @returns Promise<Models.EntitiesListResponse>
   */
  list(options?: Models.EntitiesListOptionalParams): Promise<Models.EntitiesListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.EntityListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: Models.EntitiesListOptionalParams, callback: msRest.ServiceCallback<Models.EntityListResult>): void;
  list(options?: Models.EntitiesListOptionalParams | msRest.ServiceCallback<Models.EntityListResult>, callback?: msRest.ServiceCallback<Models.EntityListResult>): Promise<Models.EntitiesListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.EntitiesListResponse>;
  }

  /**
   * List all entities (Management Groups, Subscriptions, etc.) for the authenticated user.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.EntitiesListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.EntitiesListNextOptionalParams): Promise<Models.EntitiesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.EntityListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.EntitiesListNextOptionalParams, callback: msRest.ServiceCallback<Models.EntityListResult>): void;
  listNext(nextPageLink: string, options?: Models.EntitiesListNextOptionalParams | msRest.ServiceCallback<Models.EntityListResult>, callback?: msRest.ServiceCallback<Models.EntityListResult>): Promise<Models.EntitiesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.EntitiesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Management/getEntities",
  queryParameters: [
    Parameters.apiVersion,
    Parameters.skiptoken,
    Parameters.skip,
    Parameters.top,
    Parameters.select,
    Parameters.search,
    Parameters.filter,
    Parameters.view,
    Parameters.groupName
  ],
  headerParameters: [
    Parameters.cacheControl,
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EntityListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.cacheControl,
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EntityListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
