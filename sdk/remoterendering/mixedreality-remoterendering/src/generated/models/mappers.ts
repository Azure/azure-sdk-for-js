/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const CreateConversionSettings: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateConversionSettings",
    modelProperties: {
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "AssetConversionOptions"
        }
      }
    }
  }
};

export const AssetConversionOptions: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssetConversionOptions",
    modelProperties: {
      inputOptions: {
        serializedName: "inputLocation",
        type: {
          name: "Composite",
          className: "AssetConversionInputOptions"
        }
      },
      outputOptions: {
        serializedName: "outputLocation",
        type: {
          name: "Composite",
          className: "AssetConversionOutputOptions"
        }
      }
    }
  }
};

export const AssetConversionInputOptions: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssetConversionInputOptions",
    modelProperties: {
      storageContainerUrl: {
        serializedName: "storageContainerUri",
        required: true,
        type: {
          name: "String"
        }
      },
      storageContainerReadListSas: {
        serializedName: "storageContainerReadListSas",
        type: {
          name: "String"
        }
      },
      blobPrefix: {
        serializedName: "blobPrefix",
        type: {
          name: "String"
        }
      },
      relativeInputAssetPath: {
        serializedName: "relativeInputAssetPath",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssetConversionOutputOptions: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssetConversionOutputOptions",
    modelProperties: {
      storageContainerUrl: {
        serializedName: "storageContainerUri",
        required: true,
        type: {
          name: "String"
        }
      },
      storageContainerWriteSas: {
        serializedName: "storageContainerWriteSas",
        type: {
          name: "String"
        }
      },
      blobPrefix: {
        serializedName: "blobPrefix",
        type: {
          name: "String"
        }
      },
      outputAssetFilename: {
        serializedName: "outputAssetFilename",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssetConversion: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssetConversion",
    modelProperties: {
      conversionId: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      options: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "AssetConversionOptions"
        }
      },
      output: {
        serializedName: "output",
        type: {
          name: "Composite",
          className: "AssetConversionOutput"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "RemoteRenderingServiceError"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "creationTime",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AssetConversionOutput: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssetConversionOutput",
    modelProperties: {
      outputAssetUrl: {
        serializedName: "outputAssetUri",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingServiceError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingServiceError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RemoteRenderingServiceError"
            }
          }
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      innerError: {
        serializedName: "innerError",
        type: {
          name: "Composite",
          className: "RemoteRenderingServiceError"
        }
      }
    }
  }
};

export const ErrorResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "RemoteRenderingServiceError"
        }
      }
    }
  }
};

export const ConversionList: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConversionList",
    modelProperties: {
      conversions: {
        serializedName: "conversions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetConversion"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RenderingSessionOptions: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RenderingSessionOptions",
    modelProperties: {
      maxLeaseTimeInMinutes: {
        serializedName: "maxLeaseTimeMinutes",
        required: true,
        type: {
          name: "Number"
        }
      },
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RenderingSession: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RenderingSession",
    modelProperties: {
      sessionId: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      arrInspectorPort: {
        constraints: {
          InclusiveMaximum: 65534,
          InclusiveMinimum: 49152
        },
        serializedName: "arrInspectorPort",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      handshakePort: {
        constraints: {
          InclusiveMaximum: 65534,
          InclusiveMinimum: 49152
        },
        serializedName: "handshakePort",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      elapsedTimeInMinutes: {
        serializedName: "elapsedTimeMinutes",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      host: {
        serializedName: "hostname",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      maxLeaseTimeInMinutes: {
        serializedName: "maxLeaseTimeMinutes",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      size: {
        serializedName: "size",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      teraflops: {
        serializedName: "teraflops",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "RemoteRenderingServiceError"
        }
      },
      createdOn: {
        serializedName: "creationTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const UpdateSessionOptions: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateSessionOptions",
    modelProperties: {
      maxLeaseTimeInMinutes: {
        serializedName: "maxLeaseTimeMinutes",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SessionsList: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionsList",
    modelProperties: {
      sessions: {
        serializedName: "sessions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RenderingSession"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingCreateConversionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingCreateConversionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingCreateConversionExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingCreateConversionExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingGetConversionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingGetConversionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RemoteRenderingGetConversionExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingGetConversionExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      wWWAuthenticate: {
        serializedName: "www-authenticate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingListConversionsHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingListConversionsHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingListConversionsExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingListConversionsExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      wWWAuthenticate: {
        serializedName: "www-authenticate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingCreateSessionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingCreateSessionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingCreateSessionExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingCreateSessionExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingGetSessionExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingGetSessionExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      wWWAuthenticate: {
        serializedName: "www-authenticate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingUpdateSessionExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingUpdateSessionExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      wWWAuthenticate: {
        serializedName: "www-authenticate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingStopSessionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingStopSessionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingStopSessionExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingStopSessionExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      wWWAuthenticate: {
        serializedName: "www-authenticate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingListSessionsExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingListSessionsExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      wWWAuthenticate: {
        serializedName: "www-authenticate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingListConversionsNextHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingListConversionsNextHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingListConversionsNextExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingListConversionsNextExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      wWWAuthenticate: {
        serializedName: "www-authenticate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteRenderingListSessionsNextExceptionHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteRenderingListSessionsNextExceptionHeaders",
    modelProperties: {
      mscv: {
        serializedName: "ms-cv",
        type: {
          name: "String"
        }
      },
      wWWAuthenticate: {
        serializedName: "www-authenticate",
        type: {
          name: "String"
        }
      }
    }
  }
};
