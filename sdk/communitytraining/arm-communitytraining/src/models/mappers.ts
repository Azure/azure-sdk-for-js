/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const CommunityTrainingListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityTrainingListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunityTraining"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentityConfigurationProperties",
    modelProperties: {
      identityType: {
        serializedName: "identityType",
        required: true,
        type: {
          name: "String"
        }
      },
      teamsEnabled: {
        defaultValue: false,
        serializedName: "teamsEnabled",
        type: {
          name: "Boolean"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      domainName: {
        serializedName: "domainName",
        required: true,
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        required: true,
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        required: true,
        type: {
          name: "String"
        }
      },
      b2CAuthenticationPolicy: {
        serializedName: "b2cAuthenticationPolicy",
        type: {
          name: "String"
        }
      },
      b2CPasswordResetPolicy: {
        serializedName: "b2cPasswordResetPolicy",
        type: {
          name: "String"
        }
      },
      customLoginParameters: {
        serializedName: "customLoginParameters",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Enum",
          allowedValues: ["Free", "Basic", "Standard", "Premium"]
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CommunityTrainingUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityTrainingUpdate",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      identityConfiguration: {
        serializedName: "properties.identityConfiguration",
        type: {
          name: "Composite",
          className: "IdentityConfigurationPropertiesUpdate"
        }
      }
    }
  }
};

export const IdentityConfigurationPropertiesUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentityConfigurationPropertiesUpdate",
    modelProperties: {
      identityType: {
        serializedName: "identityType",
        type: {
          name: "String"
        }
      },
      teamsEnabled: {
        defaultValue: false,
        serializedName: "teamsEnabled",
        type: {
          name: "Boolean"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String"
        }
      },
      b2CAuthenticationPolicy: {
        serializedName: "b2cAuthenticationPolicy",
        type: {
          name: "String"
        }
      },
      b2CPasswordResetPolicy: {
        serializedName: "b2cPasswordResetPolicy",
        type: {
          name: "String"
        }
      },
      customLoginParameters: {
        serializedName: "customLoginParameters",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunityTraining: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityTraining",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      portalName: {
        serializedName: "properties.portalName",
        type: {
          name: "String"
        }
      },
      portalAdminEmailAddress: {
        serializedName: "properties.portalAdminEmailAddress",
        type: {
          name: "String"
        }
      },
      portalOwnerOrganizationName: {
        serializedName: "properties.portalOwnerOrganizationName",
        type: {
          name: "String"
        }
      },
      portalOwnerEmailAddress: {
        serializedName: "properties.portalOwnerEmailAddress",
        type: {
          name: "String"
        }
      },
      identityConfiguration: {
        serializedName: "properties.identityConfiguration",
        type: {
          name: "Composite",
          className: "IdentityConfigurationProperties"
        }
      },
      zoneRedundancyEnabled: {
        serializedName: "properties.zoneRedundancyEnabled",
        type: {
          name: "Boolean"
        }
      },
      disasterRecoveryEnabled: {
        serializedName: "properties.disasterRecoveryEnabled",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunityTrainingsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityTrainingsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CommunityTrainingsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityTrainingsUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunityTrainingsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityTrainingsDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};
