/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  QuantumWorkspace,
  WorkspacesListBySubscriptionOptionalParams,
  WorkspacesListByResourceGroupOptionalParams,
  WorkspacesGetOptionalParams,
  WorkspacesGetResponse,
  WorkspacesCreateOrUpdateOptionalParams,
  WorkspacesCreateOrUpdateResponse,
  TagsObject,
  WorkspacesUpdateTagsOptionalParams,
  WorkspacesUpdateTagsResponse,
  WorkspacesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Workspaces. */
export interface Workspaces {
  /**
   * Gets the list of Workspaces within a Subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: WorkspacesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<QuantumWorkspace>;
  /**
   * Gets the list of Workspaces within a resource group.
   * @param resourceGroupName The name of the resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: WorkspacesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<QuantumWorkspace>;
  /**
   * Returns the Workspace resource associated with the given name.
   * @param resourceGroupName The name of the resource group.
   * @param workspaceName The name of the quantum workspace resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    options?: WorkspacesGetOptionalParams
  ): Promise<WorkspacesGetResponse>;
  /**
   * Creates or updates a workspace resource.
   * @param resourceGroupName The name of the resource group.
   * @param workspaceName The name of the quantum workspace resource.
   * @param quantumWorkspace Workspace details.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    quantumWorkspace: QuantumWorkspace,
    options?: WorkspacesCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<WorkspacesCreateOrUpdateResponse>,
      WorkspacesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a workspace resource.
   * @param resourceGroupName The name of the resource group.
   * @param workspaceName The name of the quantum workspace resource.
   * @param quantumWorkspace Workspace details.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    workspaceName: string,
    quantumWorkspace: QuantumWorkspace,
    options?: WorkspacesCreateOrUpdateOptionalParams
  ): Promise<WorkspacesCreateOrUpdateResponse>;
  /**
   * Updates an existing workspace's tags.
   * @param resourceGroupName The name of the resource group.
   * @param workspaceName The name of the quantum workspace resource.
   * @param workspaceTags Parameters supplied to update tags.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    workspaceName: string,
    workspaceTags: TagsObject,
    options?: WorkspacesUpdateTagsOptionalParams
  ): Promise<WorkspacesUpdateTagsResponse>;
  /**
   * Deletes a Workspace resource.
   * @param resourceGroupName The name of the resource group.
   * @param workspaceName The name of the quantum workspace resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    workspaceName: string,
    options?: WorkspacesDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes a Workspace resource.
   * @param resourceGroupName The name of the resource group.
   * @param workspaceName The name of the quantum workspace resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    workspaceName: string,
    options?: WorkspacesDeleteOptionalParams
  ): Promise<void>;
}
