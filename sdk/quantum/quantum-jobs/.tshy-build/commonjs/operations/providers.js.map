{"version":3,"file":"providers.js","sourceRoot":"","sources":["../../../src/operations/providers.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport type { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport type { Providers } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport type { QuantumJobClient } from \"../quantumJobClient.js\";\nimport type {\n  ProviderStatus,\n  ProvidersGetStatusNextOptionalParams,\n  ProvidersGetStatusOptionalParams,\n  ProvidersGetStatusResponse,\n  ProvidersGetStatusNextResponse,\n} from \"../models/index.js\";\n\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderStatusList,\n    },\n    default: {\n      bodyMapper: Mappers.RestError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatusNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderStatusList,\n    },\n    default: {\n      bodyMapper: Mappers.RestError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n\n/** Class containing Providers operations. */\nexport class ProvidersImpl implements Providers {\n  private readonly client: QuantumJobClient;\n\n  /**\n   * Initialize a new instance of the class Providers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: QuantumJobClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get provider status.\n   * @param options The options parameters.\n   */\n  public listStatus(\n    options?: ProvidersGetStatusOptionalParams,\n  ): PagedAsyncIterableIterator<ProviderStatus> {\n    const iter = this.getStatusPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getStatusPagingPage(options);\n      },\n    };\n  }\n\n  private async *getStatusPagingPage(\n    options?: ProvidersGetStatusOptionalParams,\n  ): AsyncIterableIterator<ProviderStatus[]> {\n    let result = await this._getStatus(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getStatusNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getStatusPagingAll(\n    options?: ProvidersGetStatusOptionalParams,\n  ): AsyncIterableIterator<ProviderStatus> {\n    for await (const page of this.getStatusPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get provider status.\n   * @param options The options parameters.\n   */\n  private async _getStatus(\n    options?: ProvidersGetStatusOptionalParams,\n  ): Promise<ProvidersGetStatusResponse> {\n    return tracingClient.withSpan(\n      \"QuantumJobClient._getStatus\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { updatedOptions },\n          getStatusOperationSpec,\n        ) as Promise<ProvidersGetStatusResponse>;\n      },\n    );\n  }\n\n  /**\n   * GetStatusNext\n   * @param nextLink The nextLink from the previous successful call to the GetStatus method.\n   * @param options The options parameters.\n   */\n  private async _getStatusNext(\n    nextLink: string,\n    options?: ProvidersGetStatusNextOptionalParams,\n  ): Promise<ProvidersGetStatusNextResponse> {\n    return tracingClient.withSpan(\n      \"QuantumJobClient._getStatusNext\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { nextLink, updatedOptions },\n          getStatusNextOperationSpec,\n        ) as Promise<ProvidersGetStatusNextResponse>;\n      },\n    );\n  }\n}\n"]}