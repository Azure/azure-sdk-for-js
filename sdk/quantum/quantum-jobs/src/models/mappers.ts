/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const JobDetailsList: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JobDetailsList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobDetails"
            }
          }
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JobDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      containerUri: {
        serializedName: "containerUri",
        required: true,
        type: {
          name: "String"
        }
      },
      inputDataUri: {
        serializedName: "inputDataUri",
        type: {
          name: "String"
        }
      },
      inputDataFormat: {
        serializedName: "inputDataFormat",
        required: true,
        type: {
          name: "String"
        }
      },
      inputParams: {
        serializedName: "inputParams",
        type: {
          name: "any"
        }
      },
      providerId: {
        serializedName: "providerId",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        required: true,
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      outputDataUri: {
        serializedName: "outputDataUri",
        type: {
          name: "String"
        }
      },
      outputDataFormat: {
        serializedName: "outputDataFormat",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      creationTime: {
        serializedName: "creationTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      beginExecutionTime: {
        serializedName: "beginExecutionTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      endExecutionTime: {
        serializedName: "endExecutionTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      cancellationTime: {
        serializedName: "cancellationTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      errorData: {
        serializedName: "errorData",
        type: {
          name: "Composite",
          className: "ErrorData"
        }
      }
    }
  }
};

export const ErrorData: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorData",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorData"
        }
      }
    }
  }
};

export const ProviderStatusList: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderStatusList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProviderStatus"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderStatus: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      currentAvailability: {
        serializedName: "currentAvailability",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      targets: {
        serializedName: "targets",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetStatus"
            }
          }
        }
      }
    }
  }
};

export const TargetStatus: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      currentAvailability: {
        serializedName: "currentAvailability",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      averageQueueTime: {
        serializedName: "averageQueueTime",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      statusPage: {
        serializedName: "statusPage",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BlobDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BlobDetails",
    modelProperties: {
      containerName: {
        serializedName: "containerName",
        required: true,
        type: {
          name: "String"
        }
      },
      blobName: {
        serializedName: "blobName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SasUriResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SasUriResponse",
    modelProperties: {
      sasUri: {
        serializedName: "sasUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaList: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Quota"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Quota: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Quota",
    modelProperties: {
      dimension: {
        serializedName: "dimension",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      providerId: {
        serializedName: "providerId",
        type: {
          name: "String"
        }
      },
      utilization: {
        serializedName: "utilization",
        type: {
          name: "Number"
        }
      },
      holds: {
        serializedName: "holds",
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      period: {
        serializedName: "period",
        type: {
          name: "String"
        }
      }
    }
  }
};
