/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const category: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "category"
  ],
  mapper: {
    serializedName: "category",
    type: {
      name: "String"
    }
  }
};
export const computeName: msRest.OperationURLParameter = {
  parameterPath: "computeName",
  mapper: {
    required: true,
    serializedName: "computeName",
    type: {
      name: "String"
    }
  }
};
export const computeType: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeType"
  ],
  mapper: {
    serializedName: "compute-type",
    type: {
      name: "String"
    }
  }
};
export const connectionName: msRest.OperationURLParameter = {
  parameterPath: "connectionName",
  mapper: {
    required: true,
    serializedName: "connectionName",
    type: {
      name: "String"
    }
  }
};
export const location: msRest.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    required: true,
    serializedName: "location",
    constraints: {
      Pattern: /^[-\w\._]+$/
    },
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const privateEndpointConnectionName: msRest.OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    required: true,
    serializedName: "privateEndpointConnectionName",
    type: {
      name: "String"
    }
  }
};
export const recommended: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "recommended"
  ],
  mapper: {
    serializedName: "recommended",
    type: {
      name: "Boolean"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const skiptoken: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skiptoken"
  ],
  mapper: {
    serializedName: "$skiptoken",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const target: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "target"
  ],
  mapper: {
    serializedName: "target",
    type: {
      name: "String"
    }
  }
};
export const underlyingResourceAction: msRest.OperationQueryParameter = {
  parameterPath: "underlyingResourceAction",
  mapper: {
    required: true,
    serializedName: "underlyingResourceAction",
    type: {
      name: "String"
    }
  }
};
export const workspaceName: msRest.OperationURLParameter = {
  parameterPath: "workspaceName",
  mapper: {
    required: true,
    serializedName: "workspaceName",
    type: {
      name: "String"
    }
  }
};
