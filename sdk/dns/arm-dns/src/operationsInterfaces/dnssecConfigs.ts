/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DnssecConfig,
  DnssecConfigsListByDnsZoneOptionalParams,
  DnssecConfigsCreateOrUpdateOptionalParams,
  DnssecConfigsCreateOrUpdateResponse,
  DnssecConfigsDeleteOptionalParams,
  DnssecConfigsGetOptionalParams,
  DnssecConfigsGetResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DnssecConfigs. */
export interface DnssecConfigs {
  /**
   * Lists the DNSSEC configurations in a DNS zone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param zoneName The name of the DNS zone (without a terminating dot).
   * @param options The options parameters.
   */
  listByDnsZone(
    resourceGroupName: string,
    zoneName: string,
    options?: DnssecConfigsListByDnsZoneOptionalParams,
  ): PagedAsyncIterableIterator<DnssecConfig>;
  /**
   * Creates or updates the DNSSEC configuration on a DNS zone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param zoneName The name of the DNS zone (without a terminating dot).
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    zoneName: string,
    options?: DnssecConfigsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DnssecConfigsCreateOrUpdateResponse>,
      DnssecConfigsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the DNSSEC configuration on a DNS zone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param zoneName The name of the DNS zone (without a terminating dot).
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    zoneName: string,
    options?: DnssecConfigsCreateOrUpdateOptionalParams,
  ): Promise<DnssecConfigsCreateOrUpdateResponse>;
  /**
   * Deletes the DNSSEC configuration on a DNS zone. This operation cannot be undone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param zoneName The name of the DNS zone (without a terminating dot).
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    zoneName: string,
    options?: DnssecConfigsDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes the DNSSEC configuration on a DNS zone. This operation cannot be undone.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param zoneName The name of the DNS zone (without a terminating dot).
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    zoneName: string,
    options?: DnssecConfigsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Gets the DNSSEC configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param zoneName The name of the DNS zone (without a terminating dot).
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    zoneName: string,
    options?: DnssecConfigsGetOptionalParams,
  ): Promise<DnssecConfigsGetResponse>;
}
