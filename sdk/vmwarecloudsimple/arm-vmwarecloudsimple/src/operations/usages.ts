/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/usagesMappers";
import * as Parameters from "../models/parameters";
import { VMwareCloudSimpleClientContext } from "../vMwareCloudSimpleClientContext";

/** Class representing a Usages. */
export class Usages {
  private readonly client: VMwareCloudSimpleClientContext;

  /**
   * Create a Usages.
   * @param {VMwareCloudSimpleClientContext} client Reference to the service client.
   */
  constructor(client: VMwareCloudSimpleClientContext) {
    this.client = client;
  }

  /**
   * Returns list of usage in region
   * @summary Implements Usages List method
   * @param regionId The region Id (westus, eastus)
   * @param [options] The optional parameters
   * @returns Promise<Models.UsagesListResponse>
   */
  list(regionId: string, options?: Models.UsagesListOptionalParams): Promise<Models.UsagesListResponse>;
  /**
   * @param regionId The region Id (westus, eastus)
   * @param callback The callback
   */
  list(regionId: string, callback: msRest.ServiceCallback<Models.UsageListResponse>): void;
  /**
   * @param regionId The region Id (westus, eastus)
   * @param options The optional parameters
   * @param callback The callback
   */
  list(regionId: string, options: Models.UsagesListOptionalParams, callback: msRest.ServiceCallback<Models.UsageListResponse>): void;
  list(regionId: string, options?: Models.UsagesListOptionalParams | msRest.ServiceCallback<Models.UsageListResponse>, callback?: msRest.ServiceCallback<Models.UsageListResponse>): Promise<Models.UsagesListResponse> {
    return this.client.sendOperationRequest(
      {
        regionId,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.UsagesListResponse>;
  }

  /**
   * Returns list of usage in region
   * @summary Implements Usages List method
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.UsagesListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.UsagesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.UsageListResponse>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageListResponse>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsageListResponse>, callback?: msRest.ServiceCallback<Models.UsageListResponse>): Promise<Models.UsagesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.UsagesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/usages",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.regionId
  ],
  queryParameters: [
    Parameters.filter,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsageListResponse
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsageListResponse
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};
