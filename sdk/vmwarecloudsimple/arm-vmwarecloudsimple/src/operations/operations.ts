/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/operationsMappers";
import * as Parameters from "../models/parameters";
import { VMwareCloudSimpleClientContext } from "../vMwareCloudSimpleClientContext";

/** Class representing a Operations. */
export class Operations {
  private readonly client: VMwareCloudSimpleClientContext;

  /**
   * Create a Operations.
   * @param {VMwareCloudSimpleClientContext} client Reference to the service client.
   */
  constructor(client: VMwareCloudSimpleClientContext) {
    this.client = client;
  }

  /**
   * Return list of operations
   * @summary Implements list of available operations
   * @param [options] The optional parameters
   * @returns Promise<Models.OperationsListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.AvailableOperationsListResponse>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AvailableOperationsListResponse>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AvailableOperationsListResponse>, callback?: msRest.ServiceCallback<Models.AvailableOperationsListResponse>): Promise<Models.OperationsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.OperationsListResponse>;
  }

  /**
   * Return an async operation
   * @summary Implements get of async operation
   * @param regionId The region Id (westus, eastus)
   * @param operationId operation id
   * @param [options] The optional parameters
   * @returns Promise<Models.OperationsGetResponse>
   */
  get(regionId: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationsGetResponse>;
  /**
   * @param regionId The region Id (westus, eastus)
   * @param operationId operation id
   * @param callback The callback
   */
  get(regionId: string, operationId: string, callback: msRest.ServiceCallback<Models.OperationResource>): void;
  /**
   * @param regionId The region Id (westus, eastus)
   * @param operationId operation id
   * @param options The optional parameters
   * @param callback The callback
   */
  get(regionId: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationResource>): void;
  get(regionId: string, operationId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationResource>, callback?: msRest.ServiceCallback<Models.OperationResource>): Promise<Models.OperationsGetResponse> {
    return this.client.sendOperationRequest(
      {
        regionId,
        operationId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.OperationsGetResponse>;
  }

  /**
   * Return list of operations
   * @summary Implements list of available operations
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.OperationsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AvailableOperationsListResponse>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AvailableOperationsListResponse>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AvailableOperationsListResponse>, callback?: msRest.ServiceCallback<Models.AvailableOperationsListResponse>): Promise<Models.OperationsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.OperationsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.VMwareCloudSimple/operations",
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AvailableOperationsListResponse
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/operationResults/{operationId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.regionId,
    Parameters.operationId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.referer,
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OperationResource,
      headersMapper: Mappers.OperationsGetHeaders
    },
    202: {
      headersMapper: Mappers.OperationsGetHeaders
    },
    204: {
      headersMapper: Mappers.OperationsGetHeaders
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AvailableOperationsListResponse
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};
