/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/dedicatedCloudServicesMappers";
import * as Parameters from "../models/parameters";
import { VMwareCloudSimpleClientContext } from "../vMwareCloudSimpleClientContext";

/** Class representing a DedicatedCloudServices. */
export class DedicatedCloudServices {
  private readonly client: VMwareCloudSimpleClientContext;

  /**
   * Create a DedicatedCloudServices.
   * @param {VMwareCloudSimpleClientContext} client Reference to the service client.
   */
  constructor(client: VMwareCloudSimpleClientContext) {
    this.client = client;
  }

  /**
   * Returns list of dedicated cloud services within a subscription
   * @summary Implements list of dedicatedCloudService objects within subscription method
   * @param [options] The optional parameters
   * @returns Promise<Models.DedicatedCloudServicesListBySubscriptionResponse>
   */
  listBySubscription(options?: Models.DedicatedCloudServicesListBySubscriptionOptionalParams): Promise<Models.DedicatedCloudServicesListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: Models.DedicatedCloudServicesListBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): void;
  listBySubscription(options?: Models.DedicatedCloudServicesListBySubscriptionOptionalParams | msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>, callback?: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): Promise<Models.DedicatedCloudServicesListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.DedicatedCloudServicesListBySubscriptionResponse>;
  }

  /**
   * Returns list of dedicated cloud services within a resource group
   * @summary Implements list of dedicatedCloudService objects within RG method
   * @param resourceGroupName The name of the resource group
   * @param [options] The optional parameters
   * @returns Promise<Models.DedicatedCloudServicesListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: Models.DedicatedCloudServicesListByResourceGroupOptionalParams): Promise<Models.DedicatedCloudServicesListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): void;
  /**
   * @param resourceGroupName The name of the resource group
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: Models.DedicatedCloudServicesListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): void;
  listByResourceGroup(resourceGroupName: string, options?: Models.DedicatedCloudServicesListByResourceGroupOptionalParams | msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>, callback?: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): Promise<Models.DedicatedCloudServicesListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.DedicatedCloudServicesListByResourceGroupResponse>;
  }

  /**
   * Returns Dedicate Cloud Service
   * @summary Implements dedicatedCloudService GET method
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud Service name
   * @param [options] The optional parameters
   * @returns Promise<Models.DedicatedCloudServicesGetResponse>
   */
  get(resourceGroupName: string, dedicatedCloudServiceName: string, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedCloudServicesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud Service name
   * @param callback The callback
   */
  get(resourceGroupName: string, dedicatedCloudServiceName: string, callback: msRest.ServiceCallback<Models.DedicatedCloudService>): void;
  /**
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud Service name
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, dedicatedCloudServiceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DedicatedCloudService>): void;
  get(resourceGroupName: string, dedicatedCloudServiceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DedicatedCloudService>, callback?: msRest.ServiceCallback<Models.DedicatedCloudService>): Promise<Models.DedicatedCloudServicesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dedicatedCloudServiceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.DedicatedCloudServicesGetResponse>;
  }

  /**
   * Create dedicate cloud service
   * @summary Implements dedicated cloud service PUT method
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud Service name
   * @param dedicatedCloudServiceRequest Create Dedicated Cloud Service request
   * @param [options] The optional parameters
   * @returns Promise<Models.DedicatedCloudServicesCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, dedicatedCloudServiceName: string, dedicatedCloudServiceRequest: Models.DedicatedCloudService, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedCloudServicesCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud Service name
   * @param dedicatedCloudServiceRequest Create Dedicated Cloud Service request
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, dedicatedCloudServiceName: string, dedicatedCloudServiceRequest: Models.DedicatedCloudService, callback: msRest.ServiceCallback<Models.DedicatedCloudService>): void;
  /**
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud Service name
   * @param dedicatedCloudServiceRequest Create Dedicated Cloud Service request
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, dedicatedCloudServiceName: string, dedicatedCloudServiceRequest: Models.DedicatedCloudService, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DedicatedCloudService>): void;
  createOrUpdate(resourceGroupName: string, dedicatedCloudServiceName: string, dedicatedCloudServiceRequest: Models.DedicatedCloudService, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DedicatedCloudService>, callback?: msRest.ServiceCallback<Models.DedicatedCloudService>): Promise<Models.DedicatedCloudServicesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dedicatedCloudServiceName,
        dedicatedCloudServiceRequest,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.DedicatedCloudServicesCreateOrUpdateResponse>;
  }

  /**
   * Delete dedicate cloud service
   * @summary Implements dedicatedCloudService DELETE method
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud service name
   * @param [options] The optional parameters
   * @returns Promise<Models.DedicatedCloudServicesDeleteResponse>
   */
  deleteMethod(resourceGroupName: string, dedicatedCloudServiceName: string, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedCloudServicesDeleteResponse> {
    return this.beginDeleteMethod(resourceGroupName,dedicatedCloudServiceName,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.DedicatedCloudServicesDeleteResponse>;
  }

  /**
   * Patch dedicated cloud service's properties
   * @summary Implements dedicatedCloudService PATCH method
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud service name
   * @param [options] The optional parameters
   * @returns Promise<Models.DedicatedCloudServicesUpdateResponse>
   */
  update(resourceGroupName: string, dedicatedCloudServiceName: string, options?: Models.DedicatedCloudServicesUpdateOptionalParams): Promise<Models.DedicatedCloudServicesUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud service name
   * @param callback The callback
   */
  update(resourceGroupName: string, dedicatedCloudServiceName: string, callback: msRest.ServiceCallback<Models.DedicatedCloudService>): void;
  /**
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud service name
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, dedicatedCloudServiceName: string, options: Models.DedicatedCloudServicesUpdateOptionalParams, callback: msRest.ServiceCallback<Models.DedicatedCloudService>): void;
  update(resourceGroupName: string, dedicatedCloudServiceName: string, options?: Models.DedicatedCloudServicesUpdateOptionalParams | msRest.ServiceCallback<Models.DedicatedCloudService>, callback?: msRest.ServiceCallback<Models.DedicatedCloudService>): Promise<Models.DedicatedCloudServicesUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dedicatedCloudServiceName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.DedicatedCloudServicesUpdateResponse>;
  }

  /**
   * Delete dedicate cloud service
   * @summary Implements dedicatedCloudService DELETE method
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud service name
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, dedicatedCloudServiceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        dedicatedCloudServiceName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Returns list of dedicated cloud services within a subscription
   * @summary Implements list of dedicatedCloudService objects within subscription method
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.DedicatedCloudServicesListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedCloudServicesListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>, callback?: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): Promise<Models.DedicatedCloudServicesListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.DedicatedCloudServicesListBySubscriptionNextResponse>;
  }

  /**
   * Returns list of dedicated cloud services within a resource group
   * @summary Implements list of dedicatedCloudService objects within RG method
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.DedicatedCloudServicesListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DedicatedCloudServicesListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>, callback?: msRest.ServiceCallback<Models.DedicatedCloudServiceListResponse>): Promise<Models.DedicatedCloudServicesListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.DedicatedCloudServicesListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter,
    Parameters.top,
    Parameters.skipToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DedicatedCloudServiceListResponse
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter,
    Parameters.top,
    Parameters.skipToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DedicatedCloudServiceListResponse
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices/{dedicatedCloudServiceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dedicatedCloudServiceName0
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DedicatedCloudService
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices/{dedicatedCloudServiceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dedicatedCloudServiceName1
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "dedicatedCloudServiceRequest",
    mapper: {
      ...Mappers.DedicatedCloudService,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.DedicatedCloudService
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices/{dedicatedCloudServiceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dedicatedCloudServiceName0
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      tags: [
        "options",
        "tags"
      ]
    },
    mapper: {
      ...Mappers.PatchPayload,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.DedicatedCloudService
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices/{dedicatedCloudServiceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dedicatedCloudServiceName0
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    204: {
      headersMapper: Mappers.DedicatedCloudServicesDeleteHeaders
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DedicatedCloudServiceListResponse
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DedicatedCloudServiceListResponse
    },
    default: {
      bodyMapper: Mappers.CSRPError
    }
  },
  serializer
};
