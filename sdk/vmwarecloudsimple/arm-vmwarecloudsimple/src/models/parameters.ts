/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const dedicatedCloudNodeName: msRest.OperationURLParameter = {
  parameterPath: "dedicatedCloudNodeName",
  mapper: {
    required: true,
    serializedName: "dedicatedCloudNodeName",
    constraints: {
      Pattern: /^[-a-zA-Z0-9]+$/
    },
    type: {
      name: "String"
    }
  }
};
export const dedicatedCloudServiceName0: msRest.OperationURLParameter = {
  parameterPath: "dedicatedCloudServiceName",
  mapper: {
    required: true,
    serializedName: "dedicatedCloudServiceName",
    type: {
      name: "String"
    }
  }
};
export const dedicatedCloudServiceName1: msRest.OperationURLParameter = {
  parameterPath: "dedicatedCloudServiceName",
  mapper: {
    required: true,
    serializedName: "dedicatedCloudServiceName",
    constraints: {
      Pattern: /^[-a-zA-Z0-9]+$/
    },
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const mode: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "mode"
  ],
  mapper: {
    serializedName: "mode",
    type: {
      name: "Enum",
      allowedValues: [
        "reboot",
        "suspend",
        "shutdown",
        "poweroff"
      ]
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const operationId: msRest.OperationURLParameter = {
  parameterPath: "operationId",
  mapper: {
    required: true,
    serializedName: "operationId",
    type: {
      name: "String"
    }
  }
};
export const pcName: msRest.OperationURLParameter = {
  parameterPath: "pcName",
  mapper: {
    required: true,
    serializedName: "pcName",
    type: {
      name: "String"
    }
  }
};
export const referer: msRest.OperationParameter = {
  parameterPath: "referer",
  mapper: {
    required: true,
    serializedName: "Referer",
    type: {
      name: "String"
    }
  }
};
export const regionId: msRest.OperationURLParameter = {
  parameterPath: "regionId",
  mapper: {
    required: true,
    serializedName: "regionId",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const resourcePoolName: msRest.OperationURLParameter = {
  parameterPath: "resourcePoolName",
  mapper: {
    required: true,
    serializedName: "resourcePoolName",
    type: {
      name: "String"
    }
  }
};
export const skipToken: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipToken"
  ],
  mapper: {
    serializedName: "$skipToken",
    type: {
      name: "String"
    }
  }
};
export const skuId: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skuId"
  ],
  mapper: {
    serializedName: "skuId",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const top: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "top"
  ],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};
export const virtualMachineName0: msRest.OperationURLParameter = {
  parameterPath: "virtualMachineName",
  mapper: {
    required: true,
    serializedName: "virtualMachineName",
    type: {
      name: "String"
    }
  }
};
export const virtualMachineName1: msRest.OperationURLParameter = {
  parameterPath: "virtualMachineName",
  mapper: {
    required: true,
    serializedName: "virtualMachineName",
    constraints: {
      Pattern: /^[-a-zA-Z0-9]+$/
    },
    type: {
      name: "String"
    }
  }
};
export const virtualMachineTemplateName: msRest.OperationURLParameter = {
  parameterPath: "virtualMachineTemplateName",
  mapper: {
    required: true,
    serializedName: "virtualMachineTemplateName",
    type: {
      name: "String"
    }
  }
};
export const virtualNetworkName: msRest.OperationURLParameter = {
  parameterPath: "virtualNetworkName",
  mapper: {
    required: true,
    serializedName: "virtualNetworkName",
    type: {
      name: "String"
    }
  }
};
