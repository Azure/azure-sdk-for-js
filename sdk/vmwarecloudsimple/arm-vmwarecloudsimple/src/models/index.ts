/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Resource provider available operation display model
 */
export interface AvailableOperationDisplay {
  /**
   * Description of the operation for display purposes
   */
  description?: string;
  /**
   * Name of the operation for display purposes
   */
  operation?: string;
  /**
   * Name of the provider for display purposes
   */
  provider?: string;
  /**
   * Name of the resource type for display purposes
   */
  resource?: string;
}

/**
 * Available operation display property service specification metrics item
 */
export interface AvailableOperationDisplayPropertyServiceSpecificationMetricsItem {
  /**
   * Metric's aggregation type for e.g. (Average, Total). Possible values include: 'Average',
   * 'Total'
   */
  aggregationType: AggregationType;
  /**
   * Metric's description
   */
  displayDescription: string;
  /**
   * Human readable metric's name
   */
  displayName: string;
  /**
   * Metric's name/id
   */
  name: string;
  /**
   * Metric's unit
   */
  unit: string;
}

/**
 * List of available operation display property service specification metrics
 */
export interface AvailableOperationDisplayPropertyServiceSpecificationMetricsList {
  /**
   * Metric specifications of operation
   */
  metricSpecifications?: AvailableOperationDisplayPropertyServiceSpecificationMetricsItem[];
}

/**
 * Resource provider available operation model
 */
export interface AvailableOperation {
  /**
   * The list of operations
   */
  display?: AvailableOperationDisplay;
  /**
   * Indicating whether the operation is a data action or not. Default value: false.
   */
  isDataAction?: boolean;
  /**
   * {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}
   */
  name?: string;
  /**
   * The origin of operation. Possible values include: 'user', 'system', 'user,system'
   */
  origin?: OperationOrigin;
  /**
   * The list of specification's service metrics
   */
  serviceSpecification?: AvailableOperationDisplayPropertyServiceSpecificationMetricsList;
}

/**
 * Error properties
 */
export interface CSRPErrorBody {
  /**
   * Error's code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error's details
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: CSRPErrorBody[];
  /**
   * Error's message
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Error's target
   */
  target?: string;
}

/**
 * General error model
 */
export interface CSRPError {
  /**
   * Error's body
   */
  error?: CSRPErrorBody;
}

/**
 * The purchase SKU for CloudSimple paid resources
 */
export interface Sku {
  /**
   * The capacity of the SKU
   */
  capacity?: string;
  /**
   * dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache
   * (90W); 12 x 64GB PC4-19200 2400MHz DDR4 ECC Registered DIMM, ...
   */
  description?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here
   */
  family?: string;
  /**
   * The name of the SKU for VMWare CloudSimple Node
   */
  name: string;
  /**
   * The tier of the SKU
   */
  tier?: string;
}

/**
 * Dedicated cloud node model
 */
export interface DedicatedCloudNode extends BaseResource {
  /**
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure region
   */
  location: string;
  /**
   * {dedicatedCloudNodeName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Availability Zone id, e.g. "az1"
   */
  availabilityZoneId: string;
  /**
   * Availability Zone name, e.g. "Availability Zone 1"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availabilityZoneName?: string;
  /**
   * VMWare Cloud Rack Name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cloudRackName?: string;
  /**
   * date time the resource was created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly created?: any;
  /**
   * count of nodes to create
   */
  nodesCount: number;
  /**
   * Placement Group id, e.g. "n1"
   */
  placementGroupId: string;
  /**
   * Placement Name, e.g. "Placement Group 1"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly placementGroupName?: string;
  /**
   * Private Cloud Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateCloudId?: string;
  /**
   * Resource Pool Name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateCloudName?: string;
  /**
   * The provisioning status of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * purchase id
   */
  purchaseId: string;
  /**
   * SKU's id
   */
  id1: string;
  /**
   * SKU's name
   */
  name1: string;
  /**
   * Node status, indicates is private cloud set up on this node or not. Possible values include:
   * 'unused', 'used'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: NodeStatus;
  /**
   * VMWare Cluster Name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmwareClusterName?: string;
  /**
   * Dedicated Cloud Nodes SKU
   */
  sku?: Sku;
  /**
   * Dedicated Cloud Nodes tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * {resourceProviderNamespace}/{resourceType}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Dedicated cloud service model
 */
export interface DedicatedCloudService extends BaseResource {
  /**
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure region
   */
  location: string;
  /**
   * {dedicatedCloudServiceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * gateway Subnet for the account. It will collect the subnet address and always treat it as /28
   */
  gatewaySubnet: string;
  /**
   * indicates whether account onboarded or not in a given region. Possible values include:
   * 'notOnBoarded', 'onBoarded', 'onBoardingFailed', 'onBoarding'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAccountOnboarded?: OnboardingStatus;
  /**
   * total nodes purchased
   */
  nodes?: number;
  /**
   * link to a service management web portal
   */
  serviceURL?: string;
  /**
   * The list of tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * {resourceProviderNamespace}/{resourceType}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Operation error model
 */
export interface OperationError {
  /**
   * Error's code
   */
  code?: string;
  /**
   * Error's message
   */
  message?: string;
}

/**
 * Operation status response
 */
export interface OperationResource {
  /**
   * End time of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * Error Message if operation failed
   */
  error?: OperationError;
  /**
   * Operation Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Operation ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Start time of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * Operation status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
}

/**
 * General patch payload modal
 */
export interface PatchPayload {
  /**
   * The tags key:value pairs
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Resource pool model
 */
export interface ResourcePool {
  /**
   * resource pool id (privateCloudId:vsphereId)
   */
  id: string;
  /**
   * Azure region
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * {ResourcePoolName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The Private Cloud Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateCloudId?: string;
  /**
   * Hierarchical resource pool name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullName?: string;
  /**
   * {resourceProviderNamespace}/{resourceType}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Virtual disk controller model
 */
export interface VirtualDiskController {
  /**
   * Controller's id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The display name of Controller
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * dik controller subtype (VMWARE_PARAVIRTUAL, BUS_PARALLEL, LSI_PARALLEL, LSI_SAS)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subType?: string;
  /**
   * disk controller type (SCSI)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Virtual disk model
 */
export interface VirtualDisk {
  /**
   * Disk's Controller id
   */
  controllerId: string;
  /**
   * Disk's independence mode type. Possible values include: 'persistent',
   * 'independent_persistent', 'independent_nonpersistent'
   */
  independenceMode: DiskIndependenceMode;
  /**
   * Disk's total size
   */
  totalSize: number;
  /**
   * Disk's id
   */
  virtualDiskId?: string;
  /**
   * Disk's display name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualDiskName?: string;
}

/**
 * Virtual network model
 */
export interface VirtualNetwork {
  /**
   * can be used in vm creation/deletion
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly assignable?: boolean;
  /**
   * virtual network id (privateCloudId:vsphereId)
   */
  id: string;
  /**
   * Azure region
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * {VirtualNetworkName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The Private Cloud id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateCloudId?: string;
  /**
   * {resourceProviderNamespace}/{resourceType}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Virtual NIC model
 */
export interface VirtualNic {
  /**
   * NIC ip address
   */
  ipAddresses?: string[];
  /**
   * NIC MAC address
   */
  macAddress?: string;
  /**
   * Virtual Network
   */
  network: VirtualNetwork;
  /**
   * NIC type. Possible values include: 'E1000', 'E1000E', 'PCNET32', 'VMXNET', 'VMXNET2',
   * 'VMXNET3'
   */
  nicType: NICType;
  /**
   * Is NIC powered on/off on boot
   */
  powerOnBoot?: boolean;
  /**
   * NIC id
   */
  virtualNicId?: string;
  /**
   * NIC name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualNicName?: string;
}

/**
 * Virtual machine template model
 */
export interface VirtualMachineTemplate {
  /**
   * virtual machine template id (privateCloudId:vsphereId)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure region
   */
  location?: string;
  /**
   * {virtualMachineTemplateName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The amount of memory
   */
  amountOfRam?: number;
  /**
   * The list of Virtual Disk Controllers
   */
  controllers?: VirtualDiskController[];
  /**
   * The description of Virtual Machine Template
   */
  description?: string;
  /**
   * The list of Virtual Disks
   */
  disks?: VirtualDisk[];
  /**
   * Expose Guest OS or not
   */
  exposeToGuestVM?: boolean;
  /**
   * The Guest OS
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly guestOS?: string;
  /**
   * The Guest OS types
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly guestOSType?: string;
  /**
   * The list of Virtual NICs
   */
  nics?: VirtualNic[];
  /**
   * The number of CPU cores
   */
  numberOfCores?: number;
  /**
   * path to folder
   */
  path?: string;
  /**
   * The Private Cloud Id
   */
  privateCloudId: string;
  /**
   * The list of VSphere networks
   */
  vSphereNetworks?: string[];
  /**
   * The tags from VSphere
   */
  vSphereTags?: string[];
  /**
   * The VMware tools version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmwaretools?: string;
  /**
   * {resourceProviderNamespace}/{resourceType}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Private cloud model
 */
export interface PrivateCloud {
  /**
   * Azure Id, e.g.
   * "/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123"
   */
  id?: string;
  /**
   * Location where private cloud created, e.g "westus"
   */
  location?: string;
  /**
   * Private cloud name
   */
  name?: string;
  /**
   * Availability Zone id, e.g. "az1"
   */
  availabilityZoneId?: string;
  /**
   * Availability Zone name, e.g. "Availability Zone 1"
   */
  availabilityZoneName?: string;
  /**
   * Number of clusters
   */
  clustersNumber?: number;
  /**
   * User's emails who created cloud
   */
  createdBy?: string;
  /**
   * When private cloud was created
   */
  createdOn?: Date;
  /**
   * Array of DNS servers
   */
  dnsServers?: string[];
  /**
   * Expiration date of PC
   */
  expires?: string;
  /**
   * Nsx Type, e.g. "Advanced"
   */
  nsxType?: string;
  /**
   * Placement Group id, e.g. "n1"
   */
  placementGroupId?: string;
  /**
   * Placement Group name
   */
  placementGroupName?: string;
  /**
   * Id of a private cloud
   */
  privateCloudId?: string;
  /**
   * The list of Resource Pools
   */
  resourcePools?: ResourcePool[];
  /**
   * Private Cloud state, e.g. "operational"
   */
  state?: string;
  /**
   * Number of cores
   */
  totalCpuCores?: number;
  /**
   * Number of nodes
   */
  totalNodes?: number;
  /**
   * Memory size
   */
  totalRam?: number;
  /**
   * Disk space in TB
   */
  totalStorage?: number;
  /**
   * Virtualization type e.g. "vSphere"
   */
  privateCloudPropertiesType?: string;
  /**
   * e.g. "6.5u2"
   */
  vSphereVersion?: string;
  /**
   * FQDN for vcenter access
   */
  vcenterFqdn?: string;
  /**
   * Vcenter ip address
   */
  vcenterRefid?: string;
  /**
   * The list of Virtual Machine Templates
   */
  virtualMachineTemplates?: VirtualMachineTemplate[];
  /**
   * The list of Virtual Networks
   */
  virtualNetworks?: VirtualNetwork[];
  /**
   * Is Vrops enabled/disabled
   */
  vrOpsEnabled?: boolean;
  /**
   * Azure Resource type. Possible values include: 'Microsoft.VMwareCloudSimple/privateClouds'
   */
  type?: PrivateCloudResourceType;
}

/**
 * SKU availability model
 */
export interface SkuAvailability {
  /**
   * CloudSimple Availability Zone id
   */
  dedicatedAvailabilityZoneId?: string;
  /**
   * CloudSimple Availability Zone Name
   */
  dedicatedAvailabilityZoneName?: string;
  /**
   * CloudSimple Placement Group Id
   */
  dedicatedPlacementGroupId?: string;
  /**
   * CloudSimple Placement Group name
   */
  dedicatedPlacementGroupName?: string;
  /**
   * indicates how many resources of a given SKU is available in a AZ->PG
   */
  limit: number;
  /**
   * resource type e.g. DedicatedCloudNodes
   */
  resourceType?: string;
  /**
   * sku id
   */
  skuId?: string;
  /**
   * sku name
   */
  skuName?: string;
}

/**
 * User name model
 */
export interface UsageName {
  /**
   * e.g. "Virtual Machines"
   */
  localizedValue?: string;
  /**
   * resource type or resource type sku name, e.g. virtualMachines
   */
  value?: string;
}

/**
 * Usage model
 */
export interface Usage {
  /**
   * The current usage value. Default value: 0.
   */
  currentValue: number;
  /**
   * limit of a given sku in a region for a subscription. The maximum permitted value for the usage
   * quota. If there is no limit, this value will be -1. Default value: 0.
   */
  limit: number;
  /**
   * Usage name value and localized name
   */
  name?: UsageName;
  /**
   * The usages' unit. Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
   * 'CountPerSecond', 'BytesPerSecond'
   */
  unit?: UsageCount;
}

/**
 * Virtual machine model
 */
export interface VirtualMachine extends BaseResource {
  /**
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/virtualMachines/{virtualMachineName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure region
   */
  location: string;
  /**
   * {virtualMachineName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The amount of memory
   */
  amountOfRam: number;
  /**
   * The list of Virtual Disks' Controllers
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly controllers?: VirtualDiskController[];
  /**
   * The list of Virtual Disks
   */
  disks?: VirtualDisk[];
  /**
   * The DNS name of Virtual Machine in VCenter
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dnsname?: string;
  /**
   * Expose Guest OS or not
   */
  exposeToGuestVM?: boolean;
  /**
   * The path to virtual machine folder in VCenter
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly folder?: string;
  /**
   * The name of Guest OS
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly guestOS?: string;
  /**
   * The Guest OS type. Possible values include: 'linux', 'windows', 'other'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly guestOSType?: GuestOSType;
  /**
   * The list of Virtual NICs
   */
  nics?: VirtualNic[];
  /**
   * The number of CPU cores
   */
  numberOfCores: number;
  /**
   * Password for login
   */
  password?: string;
  /**
   * Private Cloud Id
   */
  privateCloudId: string;
  /**
   * The provisioning status of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The public ip of Virtual Machine
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIP?: string;
  /**
   * Virtual Machines Resource Pool
   */
  resourcePool?: ResourcePool;
  /**
   * The status of Virtual machine. Possible values include: 'running', 'suspended', 'poweredoff',
   * 'updating', 'deallocating', 'deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: VirtualMachineStatus;
  /**
   * Virtual Machine Template Id
   */
  templateId?: string;
  /**
   * Username for login
   */
  username?: string;
  /**
   * The list of Virtual VSphere Networks
   */
  vSphereNetworks?: string[];
  /**
   * The internal id of Virtual Machine in VCenter
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmId?: string;
  /**
   * VMware tools version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmwaretools?: string;
  /**
   * The list of tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * {resourceProviderNamespace}/{resourceType}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * List of virtual machine stop modes
 */
export interface VirtualMachineStopMode {
  /**
   * mode indicates a type of stop operation - reboot, suspend, shutdown or power-off. Possible
   * values include: 'reboot', 'suspend', 'shutdown', 'poweroff'
   */
  mode?: StopMode;
}

/**
 * Optional Parameters.
 */
export interface DedicatedCloudNodesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface DedicatedCloudNodesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface DedicatedCloudNodesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The tags key:value pairs
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface DedicatedCloudServicesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface DedicatedCloudServicesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface DedicatedCloudServicesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The tags key:value pairs
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface SkusAvailabilityListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * sku id, if no sku is passed availability for all skus will be returned
   */
  skuId?: string;
}

/**
 * Optional Parameters.
 */
export interface UsagesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the list operation. only name.value is allowed here as a filter e.g.
   * $filter=name.value eq 'xxxx'
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The tags key:value pairs
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesStopOptionalParams extends msRest.RequestOptionsBase {
  /**
   * query stop mode parameter (reboot, shutdown, etc...). Possible values include: 'reboot',
   * 'suspend', 'shutdown', 'poweroff'
   */
  mode?: StopMode;
  /**
   * mode indicates a type of stop operation - reboot, suspend, shutdown or power-off. Possible
   * values include: 'reboot', 'suspend', 'shutdown', 'poweroff'
   */
  mode1?: StopMode;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The tags key:value pairs
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesBeginStopOptionalParams extends msRest.RequestOptionsBase {
  /**
   * query stop mode parameter (reboot, shutdown, etc...). Possible values include: 'reboot',
   * 'suspend', 'shutdown', 'poweroff'
   */
  mode?: StopMode;
  /**
   * mode indicates a type of stop operation - reboot, suspend, shutdown or power-off. Possible
   * values include: 'reboot', 'suspend', 'shutdown', 'poweroff'
   */
  mode1?: StopMode;
}

/**
 * An interface representing VMwareCloudSimpleClientOptions.
 */
export interface VMwareCloudSimpleClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for Get operation.
 */
export interface OperationsGetHeaders {
  location: string;
  retryAfter: number;
  contentType: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface DedicatedCloudNodesCreateOrUpdateHeaders {
  azureAsyncOperation: string;
  locationHeader: string;
  retryAfter: number;
}

/**
 * Defines headers for Delete operation.
 */
export interface DedicatedCloudNodesDeleteHeaders {
  contentType: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface DedicatedCloudServicesDeleteHeaders {
  contentType: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface VirtualMachinesCreateOrUpdateHeaders {
  azureAsyncOperation: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface VirtualMachinesDeleteHeaders {
  azureAsyncOperation: string;
  location: string;
  retryAfter: number;
  contentType: string;
}

/**
 * Defines headers for Start operation.
 */
export interface VirtualMachinesStartHeaders {
  azureAsyncOperation: string;
  location: string;
  retryAfter: number;
  contentType: string;
}

/**
 * Defines headers for Stop operation.
 */
export interface VirtualMachinesStopHeaders {
  azureAsyncOperation: string;
  location: string;
  retryAfter: number;
  contentType: string;
}

/**
 * @interface
 * List of available operations
 * @extends Array<AvailableOperation>
 */
export interface AvailableOperationsListResponse extends Array<AvailableOperation> {
  /**
   * Link for next list of available operations
   */
  nextLink?: string;
}

/**
 * @interface
 * List of dedicated nodes response model
 * @extends Array<DedicatedCloudNode>
 */
export interface DedicatedCloudNodeListResponse extends Array<DedicatedCloudNode> {
  /**
   * Link for next list of DedicatedCloudNode
   */
  nextLink?: string;
}

/**
 * @interface
 * List of dedicated cloud services
 * @extends Array<DedicatedCloudService>
 */
export interface DedicatedCloudServiceListResponse extends Array<DedicatedCloudService> {
  /**
   * Link for next list of DedicatedCloudNode
   */
  nextLink?: string;
}

/**
 * @interface
 * List of SKU availabilities
 * @extends Array<SkuAvailability>
 */
export interface SkuAvailabilityListResponse extends Array<SkuAvailability> {
  /**
   * Link for next list of DedicatedCloudNode
   */
  nextLink?: string;
}

/**
 * @interface
 * List of private clouds
 * @extends Array<PrivateCloud>
 */
export interface PrivateCloudList extends Array<PrivateCloud> {
  /**
   * Link for next list of Private Clouds
   */
  nextLink?: string;
}

/**
 * @interface
 * List of resource pools response model
 * @extends Array<ResourcePool>
 */
export interface ResourcePoolsListResponse extends Array<ResourcePool> {
  /**
   * Link for next list of ResourcePoolsList
   */
  nextLink?: string;
}

/**
 * @interface
 * List of virtual machine templates
 * @extends Array<VirtualMachineTemplate>
 */
export interface VirtualMachineTemplateListResponse extends Array<VirtualMachineTemplate> {
  /**
   * Link for next list of VirtualMachineTemplate
   */
  nextLink?: string;
}

/**
 * @interface
 * List of virtual networks
 * @extends Array<VirtualNetwork>
 */
export interface VirtualNetworkListResponse extends Array<VirtualNetwork> {
  /**
   * Link for next list of VirtualNetwork
   */
  nextLink?: string;
}

/**
 * @interface
 * List of usages
 * @extends Array<Usage>
 */
export interface UsageListResponse extends Array<Usage> {
  /**
   * Link for next list of DedicatedCloudNode
   */
  nextLink?: string;
}

/**
 * @interface
 * List of virtual machines
 * @extends Array<VirtualMachine>
 */
export interface VirtualMachineListResponse extends Array<VirtualMachine> {
  /**
   * Link for next list of VirtualMachines
   */
  nextLink?: string;
}

/**
 * Defines values for OperationOrigin.
 * Possible values include: 'user', 'system', 'user,system'
 * @readonly
 * @enum {string}
 */
export type OperationOrigin = 'user' | 'system' | 'user,system';

/**
 * Defines values for AggregationType.
 * Possible values include: 'Average', 'Total'
 * @readonly
 * @enum {string}
 */
export type AggregationType = 'Average' | 'Total';

/**
 * Defines values for NodeStatus.
 * Possible values include: 'unused', 'used'
 * @readonly
 * @enum {string}
 */
export type NodeStatus = 'unused' | 'used';

/**
 * Defines values for OnboardingStatus.
 * Possible values include: 'notOnBoarded', 'onBoarded', 'onBoardingFailed', 'onBoarding'
 * @readonly
 * @enum {string}
 */
export type OnboardingStatus = 'notOnBoarded' | 'onBoarded' | 'onBoardingFailed' | 'onBoarding';

/**
 * Defines values for DiskIndependenceMode.
 * Possible values include: 'persistent', 'independent_persistent', 'independent_nonpersistent'
 * @readonly
 * @enum {string}
 */
export type DiskIndependenceMode = 'persistent' | 'independent_persistent' | 'independent_nonpersistent';

/**
 * Defines values for NICType.
 * Possible values include: 'E1000', 'E1000E', 'PCNET32', 'VMXNET', 'VMXNET2', 'VMXNET3'
 * @readonly
 * @enum {string}
 */
export type NICType = 'E1000' | 'E1000E' | 'PCNET32' | 'VMXNET' | 'VMXNET2' | 'VMXNET3';

/**
 * Defines values for PrivateCloudResourceType.
 * Possible values include: 'Microsoft.VMwareCloudSimple/privateClouds'
 * @readonly
 * @enum {string}
 */
export type PrivateCloudResourceType = 'Microsoft.VMwareCloudSimple/privateClouds';

/**
 * Defines values for UsageCount.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
 * 'BytesPerSecond'
 * @readonly
 * @enum {string}
 */
export type UsageCount = 'Count' | 'Bytes' | 'Seconds' | 'Percent' | 'CountPerSecond' | 'BytesPerSecond';

/**
 * Defines values for GuestOSType.
 * Possible values include: 'linux', 'windows', 'other'
 * @readonly
 * @enum {string}
 */
export type GuestOSType = 'linux' | 'windows' | 'other';

/**
 * Defines values for VirtualMachineStatus.
 * Possible values include: 'running', 'suspended', 'poweredoff', 'updating', 'deallocating',
 * 'deleting'
 * @readonly
 * @enum {string}
 */
export type VirtualMachineStatus = 'running' | 'suspended' | 'poweredoff' | 'updating' | 'deallocating' | 'deleting';

/**
 * Defines values for StopMode.
 * Possible values include: 'reboot', 'suspend', 'shutdown', 'poweroff'
 * @readonly
 * @enum {string}
 */
export type StopMode = 'reboot' | 'suspend' | 'shutdown' | 'poweroff';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = AvailableOperationsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableOperationsListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OperationsGetResponse = OperationResource & OperationsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OperationsGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = AvailableOperationsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableOperationsListResponse;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DedicatedCloudNodesListBySubscriptionResponse = DedicatedCloudNodeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudNodeListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DedicatedCloudNodesListByResourceGroupResponse = DedicatedCloudNodeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudNodeListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DedicatedCloudNodesGetResponse = DedicatedCloudNode & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudNode;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DedicatedCloudNodesCreateOrUpdateResponse = DedicatedCloudNode & DedicatedCloudNodesCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DedicatedCloudNodesCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudNode;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type DedicatedCloudNodesDeleteResponse = DedicatedCloudNodesDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DedicatedCloudNodesDeleteHeaders;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DedicatedCloudNodesUpdateResponse = DedicatedCloudNode & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudNode;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DedicatedCloudNodesListBySubscriptionNextResponse = DedicatedCloudNodeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudNodeListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DedicatedCloudNodesListByResourceGroupNextResponse = DedicatedCloudNodeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudNodeListResponse;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DedicatedCloudServicesListBySubscriptionResponse = DedicatedCloudServiceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudServiceListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DedicatedCloudServicesListByResourceGroupResponse = DedicatedCloudServiceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudServiceListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DedicatedCloudServicesGetResponse = DedicatedCloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudService;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DedicatedCloudServicesCreateOrUpdateResponse = DedicatedCloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudService;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type DedicatedCloudServicesDeleteResponse = DedicatedCloudServicesDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DedicatedCloudServicesDeleteHeaders;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DedicatedCloudServicesUpdateResponse = DedicatedCloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudService;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DedicatedCloudServicesListBySubscriptionNextResponse = DedicatedCloudServiceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudServiceListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DedicatedCloudServicesListByResourceGroupNextResponse = DedicatedCloudServiceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudServiceListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SkusAvailabilityListResponse = SkuAvailabilityListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuAvailabilityListResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SkusAvailabilityListNextResponse = SkuAvailabilityListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuAvailabilityListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateCloudsListResponse = PrivateCloudList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloudList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateCloudsGetResponse = PrivateCloud & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloud;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PrivateCloudsListNextResponse = PrivateCloudList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateCloudList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ResourcePoolsListResponse2 = ResourcePoolsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourcePoolsListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ResourcePoolsGetResponse = ResourcePool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourcePool;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ResourcePoolsListNextResponse = ResourcePoolsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourcePoolsListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineTemplatesListResponse = VirtualMachineTemplateListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineTemplateListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineTemplatesGetResponse = VirtualMachineTemplate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineTemplate;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachineTemplatesListNextResponse = VirtualMachineTemplateListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineTemplateListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualNetworksListResponse = VirtualNetworkListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualNetworksGetResponse = VirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetwork;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualNetworksListNextResponse = VirtualNetworkListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UsagesListResponse = UsageListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageListResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsagesListNextResponse = UsageListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageListResponse;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type VirtualMachinesListBySubscriptionResponse = VirtualMachineListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type VirtualMachinesListByResourceGroupResponse = VirtualMachineListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachinesGetResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachinesCreateOrUpdateResponse = VirtualMachine & VirtualMachinesCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VirtualMachinesCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type VirtualMachinesDeleteResponse = VirtualMachinesDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VirtualMachinesDeleteHeaders;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachinesUpdateResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the start operation.
 */
export type VirtualMachinesStartResponse = VirtualMachinesStartHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VirtualMachinesStartHeaders;
    };
};

/**
 * Contains response data for the stop operation.
 */
export type VirtualMachinesStopResponse = VirtualMachinesStopHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VirtualMachinesStopHeaders;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachinesBeginUpdateResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type VirtualMachinesListBySubscriptionNextResponse = VirtualMachineListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type VirtualMachinesListByResourceGroupNextResponse = VirtualMachineListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResponse;
    };
};
