/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  DedicatedCloudService,
  DedicatedCloudServicesListBySubscriptionOptionalParams,
  DedicatedCloudServicesListByResourceGroupOptionalParams,
  DedicatedCloudServicesGetOptionalParams,
  DedicatedCloudServicesGetResponse,
  DedicatedCloudServicesCreateOrUpdateOptionalParams,
  DedicatedCloudServicesCreateOrUpdateResponse,
  DedicatedCloudServicesDeleteOptionalParams,
  PatchPayload,
  DedicatedCloudServicesUpdateOptionalParams,
  DedicatedCloudServicesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DedicatedCloudServices. */
export interface DedicatedCloudServices {
  /**
   * Returns list of dedicated cloud services within a subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: DedicatedCloudServicesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<DedicatedCloudService>;
  /**
   * Returns list of dedicated cloud services within a resource group
   * @param resourceGroupName The name of the resource group
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: DedicatedCloudServicesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<DedicatedCloudService>;
  /**
   * Returns Dedicate Cloud Service
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud Service name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    dedicatedCloudServiceName: string,
    options?: DedicatedCloudServicesGetOptionalParams
  ): Promise<DedicatedCloudServicesGetResponse>;
  /**
   * Create dedicate cloud service
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud Service name
   * @param dedicatedCloudServiceRequest Create Dedicated Cloud Service request
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    dedicatedCloudServiceName: string,
    dedicatedCloudServiceRequest: DedicatedCloudService,
    options?: DedicatedCloudServicesCreateOrUpdateOptionalParams
  ): Promise<DedicatedCloudServicesCreateOrUpdateResponse>;
  /**
   * Delete dedicate cloud service
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud service name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    dedicatedCloudServiceName: string,
    options?: DedicatedCloudServicesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete dedicate cloud service
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud service name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    dedicatedCloudServiceName: string,
    options?: DedicatedCloudServicesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Patch dedicated cloud service's properties
   * @param resourceGroupName The name of the resource group
   * @param dedicatedCloudServiceName dedicated cloud service name
   * @param dedicatedCloudServiceRequest Patch Dedicated Cloud Service request
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    dedicatedCloudServiceName: string,
    dedicatedCloudServiceRequest: PatchPayload,
    options?: DedicatedCloudServicesUpdateOptionalParams
  ): Promise<DedicatedCloudServicesUpdateResponse>;
}
