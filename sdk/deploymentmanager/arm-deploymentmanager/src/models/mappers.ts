/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Identity: msRest.CompositeMapper = {
  serializedName: "Identity",
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      identityIds: {
        required: true,
        serializedName: "identityIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PrePostStep: msRest.CompositeMapper = {
  serializedName: "PrePostStep",
  type: {
    name: "Composite",
    className: "PrePostStep",
    modelProperties: {
      stepId: {
        required: true,
        serializedName: "stepId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StepGroup: msRest.CompositeMapper = {
  serializedName: "StepGroup",
  type: {
    name: "Composite",
    className: "StepGroup",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      dependsOnStepGroups: {
        serializedName: "dependsOnStepGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      preDeploymentSteps: {
        serializedName: "preDeploymentSteps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrePostStep"
            }
          }
        }
      },
      deploymentTargetId: {
        required: true,
        serializedName: "deploymentTargetId",
        type: {
          name: "String"
        }
      },
      postDeploymentSteps: {
        serializedName: "postDeploymentSteps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrePostStep"
            }
          }
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RolloutRequest: msRest.CompositeMapper = {
  serializedName: "RolloutRequest",
  type: {
    name: "Composite",
    className: "RolloutRequest",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        required: true,
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      },
      buildVersion: {
        required: true,
        serializedName: "properties.buildVersion",
        type: {
          name: "String"
        }
      },
      artifactSourceId: {
        serializedName: "properties.artifactSourceId",
        type: {
          name: "String"
        }
      },
      targetServiceTopologyId: {
        required: true,
        serializedName: "properties.targetServiceTopologyId",
        type: {
          name: "String"
        }
      },
      stepGroups: {
        required: true,
        serializedName: "properties.stepGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StepGroup"
            }
          }
        }
      }
    }
  }
};

export const ArtifactSource: msRest.CompositeMapper = {
  serializedName: "ArtifactSource",
  type: {
    name: "Composite",
    className: "ArtifactSource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sourceType: {
        required: true,
        serializedName: "properties.sourceType",
        type: {
          name: "String"
        }
      },
      artifactRoot: {
        serializedName: "properties.artifactRoot",
        type: {
          name: "String"
        }
      },
      authentication: {
        required: true,
        serializedName: "properties.authentication",
        type: {
          name: "Composite",
          className: "Authentication"
        }
      }
    }
  }
};

export const Authentication: msRest.CompositeMapper = {
  serializedName: "Authentication",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "Authentication",
    className: "Authentication",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArtifactSourcePropertiesModel: msRest.CompositeMapper = {
  serializedName: "ArtifactSourceProperties",
  type: {
    name: "Composite",
    className: "ArtifactSourcePropertiesModel",
    modelProperties: {
      sourceType: {
        required: true,
        serializedName: "sourceType",
        type: {
          name: "String"
        }
      },
      artifactRoot: {
        serializedName: "artifactRoot",
        type: {
          name: "String"
        }
      },
      authentication: {
        required: true,
        serializedName: "authentication",
        type: {
          name: "Composite",
          className: "Authentication"
        }
      }
    }
  }
};

export const SasAuthentication: msRest.CompositeMapper = {
  serializedName: "Sas",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Authentication.type.polymorphicDiscriminator,
    uberParent: "Authentication",
    className: "SasAuthentication",
    modelProperties: {
      ...Authentication.type.modelProperties,
      sasUri: {
        required: true,
        serializedName: "properties.sasUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudErrorBody: msRest.CompositeMapper = {
  serializedName: "CloudErrorBody",
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      }
    }
  }
};

export const RolloutOperationInfo: msRest.CompositeMapper = {
  serializedName: "RolloutOperationInfo",
  type: {
    name: "Composite",
    className: "RolloutOperationInfo",
    modelProperties: {
      retryAttempt: {
        readOnly: true,
        serializedName: "retryAttempt",
        type: {
          name: "Number"
        }
      },
      skipSucceededOnRetry: {
        readOnly: true,
        serializedName: "skipSucceededOnRetry",
        type: {
          name: "Boolean"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const StepOperationInfo: msRest.CompositeMapper = {
  serializedName: "StepOperationInfo",
  type: {
    name: "Composite",
    className: "StepOperationInfo",
    modelProperties: {
      deploymentName: {
        readOnly: true,
        serializedName: "deploymentName",
        type: {
          name: "String"
        }
      },
      correlationId: {
        readOnly: true,
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedTime: {
        readOnly: true,
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const ResourceOperation: msRest.CompositeMapper = {
  serializedName: "ResourceOperation",
  type: {
    name: "Composite",
    className: "ResourceOperation",
    modelProperties: {
      resourceName: {
        serializedName: "resourceName",
        type: {
          name: "String"
        }
      },
      operationId: {
        readOnly: true,
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      statusMessage: {
        readOnly: true,
        serializedName: "statusMessage",
        type: {
          name: "String"
        }
      },
      statusCode: {
        readOnly: true,
        serializedName: "statusCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Message: msRest.CompositeMapper = {
  serializedName: "Message",
  type: {
    name: "Composite",
    className: "Message",
    modelProperties: {
      timeStamp: {
        readOnly: true,
        serializedName: "timeStamp",
        type: {
          name: "DateTime"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RolloutStep: msRest.CompositeMapper = {
  serializedName: "RolloutStep",
  type: {
    name: "Composite",
    className: "RolloutStep",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      stepGroup: {
        serializedName: "stepGroup",
        type: {
          name: "String"
        }
      },
      operationInfo: {
        readOnly: true,
        serializedName: "operationInfo",
        type: {
          name: "Composite",
          className: "StepOperationInfo"
        }
      },
      resourceOperations: {
        readOnly: true,
        serializedName: "resourceOperations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceOperation"
            }
          }
        }
      },
      messages: {
        readOnly: true,
        serializedName: "messages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Message"
            }
          }
        }
      }
    }
  }
};

export const ServiceUnitProperties: msRest.CompositeMapper = {
  serializedName: "ServiceUnitProperties",
  type: {
    name: "Composite",
    className: "ServiceUnitProperties",
    modelProperties: {
      targetResourceGroup: {
        required: true,
        serializedName: "targetResourceGroup",
        type: {
          name: "String"
        }
      },
      deploymentMode: {
        required: true,
        serializedName: "deploymentMode",
        type: {
          name: "Enum",
          allowedValues: [
            "Incremental",
            "Complete"
          ]
        }
      },
      artifacts: {
        serializedName: "artifacts",
        type: {
          name: "Composite",
          className: "ServiceUnitArtifacts"
        }
      }
    }
  }
};

export const ServiceUnit: msRest.CompositeMapper = {
  serializedName: "ServiceUnit",
  type: {
    name: "Composite",
    className: "ServiceUnit",
    modelProperties: {
      ...ServiceUnitProperties.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      steps: {
        serializedName: "steps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RolloutStep"
            }
          }
        }
      }
    }
  }
};

export const ServiceProperties: msRest.CompositeMapper = {
  serializedName: "ServiceProperties",
  type: {
    name: "Composite",
    className: "ServiceProperties",
    modelProperties: {
      targetLocation: {
        required: true,
        serializedName: "targetLocation",
        type: {
          name: "String"
        }
      },
      targetSubscriptionId: {
        required: true,
        serializedName: "targetSubscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Service: msRest.CompositeMapper = {
  serializedName: "Service",
  type: {
    name: "Composite",
    className: "Service",
    modelProperties: {
      ...ServiceProperties.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      serviceUnits: {
        serializedName: "serviceUnits",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceUnit"
            }
          }
        }
      }
    }
  }
};

export const Rollout: msRest.CompositeMapper = {
  serializedName: "Rollout",
  type: {
    name: "Composite",
    className: "Rollout",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      },
      buildVersion: {
        required: true,
        serializedName: "properties.buildVersion",
        type: {
          name: "String"
        }
      },
      artifactSourceId: {
        serializedName: "properties.artifactSourceId",
        type: {
          name: "String"
        }
      },
      targetServiceTopologyId: {
        required: true,
        serializedName: "properties.targetServiceTopologyId",
        type: {
          name: "String"
        }
      },
      stepGroups: {
        required: true,
        serializedName: "properties.stepGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StepGroup"
            }
          }
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      totalRetryAttempts: {
        readOnly: true,
        serializedName: "properties.totalRetryAttempts",
        type: {
          name: "Number"
        }
      },
      operationInfo: {
        readOnly: true,
        serializedName: "properties.operationInfo",
        type: {
          name: "Composite",
          className: "RolloutOperationInfo"
        }
      },
      services: {
        readOnly: true,
        serializedName: "properties.services",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Service"
            }
          }
        }
      }
    }
  }
};

export const RolloutPropertiesModel: msRest.CompositeMapper = {
  serializedName: "RolloutProperties",
  type: {
    name: "Composite",
    className: "RolloutPropertiesModel",
    modelProperties: {
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      totalRetryAttempts: {
        readOnly: true,
        serializedName: "totalRetryAttempts",
        type: {
          name: "Number"
        }
      },
      operationInfo: {
        readOnly: true,
        serializedName: "operationInfo",
        type: {
          name: "Composite",
          className: "RolloutOperationInfo"
        }
      },
      services: {
        readOnly: true,
        serializedName: "services",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Service"
            }
          }
        }
      }
    }
  }
};

export const ServiceTopologyResource: msRest.CompositeMapper = {
  serializedName: "ServiceTopologyResource",
  type: {
    name: "Composite",
    className: "ServiceTopologyResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      artifactSourceId: {
        serializedName: "properties.artifactSourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceTopologyProperties: msRest.CompositeMapper = {
  serializedName: "ServiceTopologyProperties",
  type: {
    name: "Composite",
    className: "ServiceTopologyProperties",
    modelProperties: {
      artifactSourceId: {
        serializedName: "artifactSourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResource: msRest.CompositeMapper = {
  serializedName: "ServiceResource",
  type: {
    name: "Composite",
    className: "ServiceResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      targetLocation: {
        required: true,
        serializedName: "properties.targetLocation",
        type: {
          name: "String"
        }
      },
      targetSubscriptionId: {
        required: true,
        serializedName: "properties.targetSubscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceUnitResource: msRest.CompositeMapper = {
  serializedName: "ServiceUnitResource",
  type: {
    name: "Composite",
    className: "ServiceUnitResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      targetResourceGroup: {
        required: true,
        serializedName: "properties.targetResourceGroup",
        type: {
          name: "String"
        }
      },
      deploymentMode: {
        required: true,
        serializedName: "properties.deploymentMode",
        type: {
          name: "Enum",
          allowedValues: [
            "Incremental",
            "Complete"
          ]
        }
      },
      artifacts: {
        serializedName: "properties.artifacts",
        type: {
          name: "Composite",
          className: "ServiceUnitArtifacts"
        }
      }
    }
  }
};

export const ServiceUnitArtifacts: msRest.CompositeMapper = {
  serializedName: "ServiceUnitArtifacts",
  type: {
    name: "Composite",
    className: "ServiceUnitArtifacts",
    modelProperties: {
      templateUri: {
        serializedName: "templateUri",
        type: {
          name: "String"
        }
      },
      parametersUri: {
        serializedName: "parametersUri",
        type: {
          name: "String"
        }
      },
      templateArtifactSourceRelativePath: {
        serializedName: "templateArtifactSourceRelativePath",
        type: {
          name: "String"
        }
      },
      parametersArtifactSourceRelativePath: {
        serializedName: "parametersArtifactSourceRelativePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDetail: msRest.CompositeMapper = {
  serializedName: "OperationDetail",
  type: {
    name: "Composite",
    className: "OperationDetail",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDetail"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const OperationsList: msRest.CompositeMapper = {
  serializedName: "OperationsList",
  type: {
    name: "Composite",
    className: "OperationsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "Operation"
        }
      }
    }
  }
};

export const StepProperties: msRest.CompositeMapper = {
  serializedName: "StepProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "stepType",
      clientName: "stepType"
    },
    uberParent: "StepProperties",
    className: "StepProperties",
    modelProperties: {
      stepType: {
        required: true,
        serializedName: "stepType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StepResource: msRest.CompositeMapper = {
  serializedName: "StepResource",
  type: {
    name: "Composite",
    className: "StepResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        required: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "StepProperties"
        }
      }
    }
  }
};

export const HealthCheckStepAttributes: msRest.CompositeMapper = {
  serializedName: "HealthCheckStepAttributes",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "HealthCheckStepAttributes",
    className: "HealthCheckStepAttributes",
    modelProperties: {
      waitDuration: {
        serializedName: "waitDuration",
        type: {
          name: "String"
        }
      },
      maxElasticDuration: {
        serializedName: "maxElasticDuration",
        type: {
          name: "String"
        }
      },
      healthyStateDuration: {
        required: true,
        serializedName: "healthyStateDuration",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HealthCheckStepProperties: msRest.CompositeMapper = {
  serializedName: "HealthCheck",
  type: {
    name: "Composite",
    polymorphicDiscriminator: StepProperties.type.polymorphicDiscriminator,
    uberParent: "StepProperties",
    className: "HealthCheckStepProperties",
    modelProperties: {
      ...StepProperties.type.modelProperties,
      attributes: {
        required: true,
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "HealthCheckStepAttributes"
        }
      }
    }
  }
};

export const RestRequestAuthentication: msRest.CompositeMapper = {
  serializedName: "RestRequestAuthentication",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "RestRequestAuthentication",
    className: "RestRequestAuthentication",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestRequest: msRest.CompositeMapper = {
  serializedName: "RestRequest",
  type: {
    name: "Composite",
    className: "RestRequest",
    modelProperties: {
      method: {
        required: true,
        serializedName: "method",
        type: {
          name: "Enum",
          allowedValues: [
            "GET",
            "POST"
          ]
        }
      },
      uri: {
        required: true,
        serializedName: "uri",
        type: {
          name: "String"
        }
      },
      authentication: {
        required: true,
        serializedName: "authentication",
        type: {
          name: "Composite",
          className: "RestRequestAuthentication"
        }
      }
    }
  }
};

export const RestResponseRegex: msRest.CompositeMapper = {
  serializedName: "RestResponse_regex",
  type: {
    name: "Composite",
    className: "RestResponseRegex",
    modelProperties: {
      matches: {
        serializedName: "matches",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      matchQuantifier: {
        serializedName: "matchQuantifier",
        type: {
          name: "Enum",
          allowedValues: [
            "All",
            "Any"
          ]
        }
      }
    }
  }
};

export const RestResponse: msRest.CompositeMapper = {
  serializedName: "RestResponse",
  type: {
    name: "Composite",
    className: "RestResponse",
    modelProperties: {
      successStatusCodes: {
        serializedName: "successStatusCodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      regex: {
        serializedName: "regex",
        type: {
          name: "Composite",
          className: "RestResponseRegex"
        }
      }
    }
  }
};

export const RestHealthCheck: msRest.CompositeMapper = {
  serializedName: "RestHealthCheck",
  type: {
    name: "Composite",
    className: "RestHealthCheck",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      request: {
        required: true,
        serializedName: "request",
        type: {
          name: "Composite",
          className: "RestRequest"
        }
      },
      response: {
        serializedName: "response",
        type: {
          name: "Composite",
          className: "RestResponse"
        }
      }
    }
  }
};

export const RestHealthCheckStepAttributes: msRest.CompositeMapper = {
  serializedName: "REST",
  type: {
    name: "Composite",
    polymorphicDiscriminator: HealthCheckStepAttributes.type.polymorphicDiscriminator,
    uberParent: "HealthCheckStepAttributes",
    className: "RestHealthCheckStepAttributes",
    modelProperties: {
      ...HealthCheckStepAttributes.type.modelProperties,
      healthChecks: {
        required: true,
        serializedName: "properties.healthChecks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RestHealthCheck"
            }
          }
        }
      }
    }
  }
};

export const RolloutIdentityAuthentication: msRest.CompositeMapper = {
  serializedName: "RolloutIdentity",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestRequestAuthentication.type.polymorphicDiscriminator,
    uberParent: "RestRequestAuthentication",
    className: "RolloutIdentityAuthentication",
    modelProperties: {
      ...RestRequestAuthentication.type.modelProperties
    }
  }
};

export const ApiKeyAuthentication: msRest.CompositeMapper = {
  serializedName: "ApiKey",
  type: {
    name: "Composite",
    polymorphicDiscriminator: RestRequestAuthentication.type.polymorphicDiscriminator,
    uberParent: "RestRequestAuthentication",
    className: "ApiKeyAuthentication",
    modelProperties: {
      ...RestRequestAuthentication.type.modelProperties,
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      inProperty: {
        required: true,
        serializedName: "in",
        type: {
          name: "Enum",
          allowedValues: [
            "Query",
            "Header"
          ]
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WaitStepAttributes: msRest.CompositeMapper = {
  serializedName: "WaitStepAttributes",
  type: {
    name: "Composite",
    className: "WaitStepAttributes",
    modelProperties: {
      duration: {
        required: true,
        serializedName: "duration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WaitStepProperties: msRest.CompositeMapper = {
  serializedName: "Wait",
  type: {
    name: "Composite",
    polymorphicDiscriminator: StepProperties.type.polymorphicDiscriminator,
    uberParent: "StepProperties",
    className: "WaitStepProperties",
    modelProperties: {
      ...StepProperties.type.modelProperties,
      attributes: {
        required: true,
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "WaitStepAttributes"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceUnitsCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "serviceunits-createorupdate-headers",
  type: {
    name: "Composite",
    className: "ServiceUnitsCreateOrUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RolloutsCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "rollouts-createorupdate-headers",
  type: {
    name: "Composite",
    className: "RolloutsCreateOrUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'Authentication' : Authentication,
  'Authentication.Sas' : SasAuthentication,
  'StepProperties' : StepProperties,
  'HealthCheckStepAttributes' : HealthCheckStepAttributes,
  'StepProperties.HealthCheck' : HealthCheckStepProperties,
  'RestRequestAuthentication' : RestRequestAuthentication,
  'HealthCheckStepAttributes.REST' : RestHealthCheckStepAttributes,
  'RestRequestAuthentication.RolloutIdentity' : RolloutIdentityAuthentication,
  'RestRequestAuthentication.ApiKey' : ApiKeyAuthentication,
  'StepProperties.Wait' : WaitStepProperties

};
