/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const StoragePoolOperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoragePoolOperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StoragePoolRPOperation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StoragePoolRPOperation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoragePoolRPOperation",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      actionType: {
        serializedName: "actionType",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "StoragePoolOperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StoragePoolOperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoragePoolOperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        required: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        required: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const DiskPoolListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskPoolListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskPool"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Disk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemMetadata",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskPoolCreate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskPoolCreate",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      managedBy: {
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      managedByExtended: {
        serializedName: "managedByExtended",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      availabilityZones: {
        serializedName: "properties.availabilityZones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      disks: {
        serializedName: "properties.disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      },
      subnetId: {
        serializedName: "properties.subnetId",
        required: true,
        type: {
          name: "String"
        }
      },
      additionalCapabilities: {
        serializedName: "properties.additionalCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DiskPoolUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskPoolUpdate",
    modelProperties: {
      managedBy: {
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      managedByExtended: {
        serializedName: "managedByExtended",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      disks: {
        serializedName: "properties.disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      }
    }
  }
};

export const DiskPoolZoneListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskPoolZoneListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskPoolZoneInfo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskPoolZoneInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskPoolZoneInfo",
    modelProperties: {
      availabilityZones: {
        serializedName: "availabilityZones",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      additionalCapabilities: {
        serializedName: "additionalCapabilities",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const ResourceSkuListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuInfo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuInfo",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuCapability"
            }
          }
        }
      },
      locationInfo: {
        serializedName: "locationInfo",
        type: {
          name: "Composite",
          className: "ResourceSkuLocationInfo"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      restrictions: {
        serializedName: "restrictions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuRestrictions"
            }
          }
        }
      }
    }
  }
};

export const ResourceSkuCapability: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuCapability",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuLocationInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuLocationInfo",
    modelProperties: {
      location: {
        serializedName: "location",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      zones: {
        serializedName: "zones",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      zoneDetails: {
        serializedName: "zoneDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuZoneDetails"
            }
          }
        }
      }
    }
  }
};

export const ResourceSkuZoneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuZoneDetails",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      capabilities: {
        serializedName: "capabilities",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuCapability"
            }
          }
        }
      }
    }
  }
};

export const ResourceSkuRestrictions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuRestrictions",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["Location", "Zone"]
        }
      },
      values: {
        serializedName: "values",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      restrictionInfo: {
        serializedName: "restrictionInfo",
        type: {
          name: "Composite",
          className: "ResourceSkuRestrictionInfo"
        }
      },
      reasonCode: {
        serializedName: "reasonCode",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["QuotaId", "NotAvailableForSubscription"]
        }
      }
    }
  }
};

export const ResourceSkuRestrictionInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuRestrictionInfo",
    modelProperties: {
      locations: {
        serializedName: "locations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      zones: {
        serializedName: "zones",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OutboundEnvironmentEndpointList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OutboundEnvironmentEndpointList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OutboundEnvironmentEndpoint"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OutboundEnvironmentEndpoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OutboundEnvironmentEndpoint",
    modelProperties: {
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      endpoints: {
        serializedName: "endpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EndpointDependency"
            }
          }
        }
      }
    }
  }
};

export const EndpointDependency: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointDependency",
    modelProperties: {
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String"
        }
      },
      endpointDetails: {
        serializedName: "endpointDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EndpointDetail"
            }
          }
        }
      }
    }
  }
};

export const EndpointDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointDetail",
    modelProperties: {
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "port",
        type: {
          name: "Number"
        }
      },
      latency: {
        serializedName: "latency",
        type: {
          name: "Number"
        }
      },
      isAccessible: {
        serializedName: "isAccessible",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const IscsiTargetList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IscsiTargetList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IscsiTarget"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Acl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Acl",
    modelProperties: {
      initiatorIqn: {
        serializedName: "initiatorIqn",
        required: true,
        type: {
          name: "String"
        }
      },
      mappedLuns: {
        serializedName: "mappedLuns",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IscsiLun: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IscsiLun",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      managedDiskAzureResourceId: {
        serializedName: "managedDiskAzureResourceId",
        required: true,
        type: {
          name: "String"
        }
      },
      lun: {
        serializedName: "lun",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const DiskPool: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskPool",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      managedBy: {
        serializedName: "managedBy",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      managedByExtended: {
        serializedName: "managedByExtended",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemMetadata"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      availabilityZones: {
        serializedName: "properties.availabilityZones",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        required: true,
        type: {
          name: "String"
        }
      },
      disks: {
        serializedName: "properties.disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      },
      subnetId: {
        serializedName: "properties.subnetId",
        required: true,
        type: {
          name: "String"
        }
      },
      additionalCapabilities: {
        serializedName: "properties.additionalCapabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nameSkuName: {
        serializedName: "sku.name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "sku.tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IscsiTarget: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IscsiTarget",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemMetadata"
        }
      },
      managedBy: {
        serializedName: "managedBy",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      managedByExtended: {
        serializedName: "managedByExtended",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      aclMode: {
        serializedName: "properties.aclMode",
        required: true,
        type: {
          name: "String"
        }
      },
      staticAcls: {
        serializedName: "properties.staticAcls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Acl"
            }
          }
        }
      },
      luns: {
        serializedName: "properties.luns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IscsiLun"
            }
          }
        }
      },
      targetIqn: {
        serializedName: "properties.targetIqn",
        required: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        required: true,
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        required: true,
        type: {
          name: "String"
        }
      },
      endpoints: {
        serializedName: "properties.endpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      port: {
        serializedName: "properties.port",
        type: {
          name: "Number"
        }
      },
      sessions: {
        serializedName: "properties.sessions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IscsiTargetCreate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IscsiTargetCreate",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      managedBy: {
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      managedByExtended: {
        serializedName: "managedByExtended",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      aclMode: {
        serializedName: "properties.aclMode",
        required: true,
        type: {
          name: "String"
        }
      },
      targetIqn: {
        serializedName: "properties.targetIqn",
        type: {
          name: "String"
        }
      },
      staticAcls: {
        serializedName: "properties.staticAcls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Acl"
            }
          }
        }
      },
      luns: {
        serializedName: "properties.luns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IscsiLun"
            }
          }
        }
      }
    }
  }
};

export const IscsiTargetUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IscsiTargetUpdate",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      managedBy: {
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      managedByExtended: {
        serializedName: "managedByExtended",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      staticAcls: {
        serializedName: "properties.staticAcls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Acl"
            }
          }
        }
      },
      luns: {
        serializedName: "properties.luns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IscsiLun"
            }
          }
        }
      }
    }
  }
};
