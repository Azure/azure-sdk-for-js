/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const StoragePoolOperationDisplay: msRest.CompositeMapper = {
  serializedName: "StoragePoolOperationDisplay",
  type: {
    name: "Composite",
    className: "StoragePoolOperationDisplay",
    modelProperties: {
      provider: {
        required: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        required: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        required: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StoragePoolRPOperation: msRest.CompositeMapper = {
  serializedName: "StoragePoolRPOperation",
  type: {
    name: "Composite",
    className: "StoragePoolRPOperation",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        required: true,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      actionType: {
        serializedName: "actionType",
        type: {
          name: "String"
        }
      },
      display: {
        required: true,
        serializedName: "display",
        type: {
          name: "Composite",
          className: "StoragePoolOperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Disk: msRest.CompositeMapper = {
  serializedName: "Disk",
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Enum",
          allowedValues: [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ]
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SystemMetadata: msRest.CompositeMapper = {
  serializedName: "SystemMetadata",
  type: {
    name: "Composite",
    className: "SystemMetadata",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "String"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskPool: msRest.CompositeMapper = {
  serializedName: "DiskPool",
  type: {
    name: "Composite",
    className: "DiskPool",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      availabilityZones: {
        required: true,
        serializedName: "properties.availabilityZones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      disks: {
        serializedName: "properties.disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      },
      subnetId: {
        required: true,
        serializedName: "properties.subnetId",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemMetadata"
        }
      }
    }
  }
};

export const IscsiLun: msRest.CompositeMapper = {
  serializedName: "IscsiLun",
  type: {
    name: "Composite",
    className: "IscsiLun",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      managedDiskAzureResourceId: {
        required: true,
        serializedName: "managedDiskAzureResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Acl: msRest.CompositeMapper = {
  serializedName: "Acl",
  type: {
    name: "Composite",
    className: "Acl",
    modelProperties: {
      initiatorIqn: {
        required: true,
        serializedName: "initiatorIqn",
        type: {
          name: "String"
        }
      },
      mappedLuns: {
        required: true,
        serializedName: "mappedLuns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      username: {
        required: true,
        serializedName: "credentials.username",
        constraints: {
          MaxLength: 128,
          MinLength: 7
        },
        type: {
          name: "String"
        }
      },
      password: {
        required: true,
        serializedName: "credentials.password",
        constraints: {
          MaxLength: 512,
          MinLength: 12
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Attributes: msRest.CompositeMapper = {
  serializedName: "Attributes",
  type: {
    name: "Composite",
    className: "Attributes",
    modelProperties: {
      authentication: {
        required: true,
        serializedName: "authentication",
        type: {
          name: "Boolean"
        }
      },
      prodModeWriteProtect: {
        required: true,
        serializedName: "prodModeWriteProtect",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const TargetPortalGroup: msRest.CompositeMapper = {
  serializedName: "TargetPortalGroup",
  type: {
    name: "Composite",
    className: "TargetPortalGroup",
    modelProperties: {
      luns: {
        required: true,
        serializedName: "luns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IscsiLun"
            }
          }
        }
      },
      acls: {
        required: true,
        serializedName: "acls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Acl"
            }
          }
        }
      },
      attributes: {
        required: true,
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "Attributes"
        }
      },
      endpoints: {
        readOnly: true,
        serializedName: "endpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tag: {
        readOnly: true,
        serializedName: "tag",
        type: {
          name: "Number"
        }
      },
      port: {
        readOnly: true,
        serializedName: "port",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const IscsiTarget: msRest.CompositeMapper = {
  serializedName: "IscsiTarget",
  type: {
    name: "Composite",
    className: "IscsiTarget",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      tpgs: {
        required: true,
        serializedName: "properties.tpgs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetPortalGroup"
            }
          }
        }
      },
      targetIqn: {
        required: true,
        serializedName: "properties.targetIqn",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const StoragePoolOperationListResult: msRest.CompositeMapper = {
  serializedName: "StoragePoolOperationListResult",
  type: {
    name: "Composite",
    className: "StoragePoolOperationListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StoragePoolRPOperation"
            }
          }
        }
      }
    }
  }
};

export const DiskPoolListResult: msRest.CompositeMapper = {
  serializedName: "DiskPoolListResult",
  type: {
    name: "Composite",
    className: "DiskPoolListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskPool"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IscsiTargetList: msRest.CompositeMapper = {
  serializedName: "IscsiTargetList",
  type: {
    name: "Composite",
    className: "IscsiTargetList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IscsiTarget"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
