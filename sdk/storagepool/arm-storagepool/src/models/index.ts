/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Metadata about an operation.
 */
export interface StoragePoolOperationDisplay {
  /**
   * Localized friendly form of the resource provider name.
   */
  provider: string;
  /**
   * Localized friendly form of the resource type related to this action/operation.
   */
  resource: string;
  /**
   * Localized friendly name for the operation, as it should be shown to the user.
   */
  operation: string;
  /**
   * Localized friendly description for the operation, as it should be shown to the user.
   */
  description: string;
}

/**
 * Description of a StoragePool RP Operation
 */
export interface StoragePoolRPOperation {
  /**
   * The name of the operation being performed on this particular object
   */
  name: string;
  /**
   * Indicates whether the operation applies to data-plane.
   */
  isDataAction: boolean;
  /**
   * Indicates the action type.
   */
  actionType?: string;
  /**
   * Additional metadata about RP operation.
   */
  display: StoragePoolOperationDisplay;
  /**
   * The intended executor of the operation; governs the display of the operation in the RBAC UX
   * and the audit logs UX.
   */
  origin?: string;
}

/**
 * Current TCP connectivity information from the App Service Environment to a single endpoint.
 */
export interface EndpointDetail {
  /**
   * An IP Address that Domain Name currently resolves to.
   */
  ipAddress?: string;
  /**
   * The port an endpoint is connected to.
   */
  port?: number;
  /**
   * The time in milliseconds it takes for a TCP connection to be created from the App Service
   * Environment to this IpAddress at this Port.
   */
  latency?: number;
  /**
   * Whether it is possible to create a TCP connection from the App Service Environment to this
   * IpAddress at this Port.
   */
  isAccessible?: boolean;
}

/**
 * A domain name that a service is reached at, including details of the current connection status.
 */
export interface EndpointDependency {
  /**
   * The domain name of the dependency.
   */
  domainName?: string;
  /**
   * The IP Addresses and Ports used when connecting to DomainName.
   */
  endpointDetails?: EndpointDetail[];
}

/**
 * Endpoints accessed for a common purpose that the App Service Environment requires outbound
 * network access to.
 */
export interface OutboundEnvironmentEndpoint {
  /**
   * The type of service accessed by the App Service Environment, e.g., Azure Storage, Azure SQL
   * Database, and Azure Active Directory.
   */
  category?: string;
  /**
   * The endpoints that the App Service Environment reaches the service at.
   */
  endpoints?: EndpointDependency[];
}

/**
 * Sku for ARM resource
 */
export interface Sku {
  /**
   * Sku name
   */
  name: string;
  /**
   * Sku tier
   */
  tier?: string;
}

/**
 * Azure Managed Disk to attach to the Disk Pool.
 */
export interface Disk {
  /**
   * Unique Azure Resource ID of the Managed Disk.
   */
  id: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemMetadata {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The type of identity that last modified the resource.
   */
  lastModifiedAt?: Date;
}

/**
 * ARM resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource Id for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or
   * Microsoft.Storage/storageAccounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives.
   */
  location: string;
}

/**
 * Response for Disk Pool request.
 */
export interface DiskPool extends TrackedResource {
  /**
   * Sku name
   */
  diskPoolName: string;
  /**
   * Sku tier
   */
  tier?: string;
  /**
   * State of the operation on the resource. Possible values include: 'Invalid', 'Succeeded',
   * 'Failed', 'Canceled', 'Pending', 'Creating', 'Updating', 'Deleting'
   */
  provisioningState: ProvisioningStates;
  /**
   * Logical zone for Disk Pool resource; example: ["1"].
   */
  availabilityZones: string[];
  /**
   * Operational status of the Disk Pool. Possible values include: 'Invalid', 'Unknown', 'Healthy',
   * 'Unhealthy', 'Updating', 'Running', 'Stopped', 'Stopped (deallocated)'
   */
  status: OperationalStatus;
  /**
   * List of Azure Managed Disks to attach to a Disk Pool.
   */
  disks?: Disk[];
  /**
   * Azure Resource ID of a Subnet for the Disk Pool.
   */
  subnetId: string;
  /**
   * List of additional capabilities for Disk Pool.
   */
  additionalCapabilities?: string[];
  /**
   * Resource metadata required by ARM RPC
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemMetadata;
}

/**
 * Disk Pool Sku Details
 */
export interface DiskPoolZoneInfo {
  /**
   * Logical zone for Disk Pool resource; example: ["1"].
   */
  availabilityZones?: string[];
  /**
   * List of additional capabilities for Disk Pool.
   */
  additionalCapabilities?: string[];
  /**
   * Determines the SKU of VM deployed for Disk Pool
   */
  sku?: Sku;
}

/**
 * Request payload for create or update Disk Pool request.
 */
export interface DiskPoolCreate extends BaseResource {
  /**
   * Determines the SKU of the Disk Pool
   */
  sku: Sku;
  /**
   * Logical zone for Disk Pool resource; example: ["1"].
   */
  availabilityZones?: string[];
  /**
   * List of Azure Managed Disks to attach to a Disk Pool.
   */
  disks?: Disk[];
  /**
   * Azure Resource ID of a Subnet for the Disk Pool.
   */
  subnetId: string;
  /**
   * List of additional capabilities for a Disk Pool.
   */
  additionalCapabilities?: string[];
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives.
   */
  location: string;
  /**
   * Fully qualified resource Id for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or
   * Microsoft.Storage/storageAccounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Request payload for Update Disk Pool request.
 */
export interface DiskPoolUpdate {
  /**
   * List of Azure Managed Disks to attach to a Disk Pool.
   */
  disks?: Disk[];
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
 */
export interface Acl {
  /**
   * iSCSI initiator IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:client".
   */
  initiatorIqn: string;
  /**
   * List of LUN names mapped to the ACL.
   */
  mappedLuns: string[];
}

/**
 * LUN to expose the Azure Managed Disk.
 */
export interface IscsiLun {
  /**
   * User defined name for iSCSI LUN; example: "lun0"
   */
  name: string;
  /**
   * Azure Resource ID of the Managed Disk.
   */
  managedDiskAzureResourceId: string;
  /**
   * Specifies the Logical Unit Number of the iSCSI LUN.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lun?: number;
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than
 * required location and tags
 */
export interface ProxyResource extends Resource {
}

/**
 * Response for iSCSI Target requests.
 */
export interface IscsiTarget extends ProxyResource {
  /**
   * Mode for Target connectivity. Possible values include: 'Dynamic', 'Static'
   */
  aclMode: IscsiTargetAclMode;
  /**
   * Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
   */
  staticAcls?: Acl[];
  /**
   * List of LUNs to be exposed through iSCSI Target.
   */
  luns?: IscsiLun[];
  /**
   * iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
   */
  targetIqn: string;
  /**
   * State of the operation on the resource. Possible values include: 'Invalid', 'Succeeded',
   * 'Failed', 'Canceled', 'Pending', 'Creating', 'Updating', 'Deleting'
   */
  provisioningState: ProvisioningStates;
  /**
   * Operational status of the iSCSI Target. Possible values include: 'Invalid', 'Unknown',
   * 'Healthy', 'Unhealthy', 'Updating', 'Running', 'Stopped', 'Stopped (deallocated)'
   */
  status: OperationalStatus;
  /**
   * List of private IPv4 addresses to connect to the iSCSI Target.
   */
  endpoints?: string[];
  /**
   * The port used by iSCSI Target portal group.
   */
  port?: number;
  /**
   * Resource metadata required by ARM RPC
   */
  systemData?: SystemMetadata;
}

/**
 * Payload for iSCSI Target create or update requests.
 */
export interface IscsiTargetCreate extends ProxyResource {
  /**
   * Mode for Target connectivity. Possible values include: 'Dynamic', 'Static'
   */
  aclMode: IscsiTargetAclMode;
  /**
   * iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
   */
  targetIqn?: string;
  /**
   * Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
   */
  staticAcls?: Acl[];
  /**
   * List of LUNs to be exposed through iSCSI Target.
   */
  luns?: IscsiLun[];
}

/**
 * Payload for iSCSI Target update requests.
 */
export interface IscsiTargetUpdate extends ProxyResource {
  /**
   * Access Control List (ACL) for an iSCSI Target; defines LUN masking policy
   */
  staticAcls?: Acl[];
  /**
   * List of LUNs to be exposed through iSCSI Target.
   */
  luns?: IscsiLun[];
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The resource management error response.
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * The resource management error response.
 */
export interface ErrorModel {
  /**
   * RP error response.
   */
  error?: ErrorResponse;
}

/**
 * An interface representing StoragePoolManagementOptions.
 */
export interface StoragePoolManagementOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * List of operations supported by the RP.
 * @extends Array<StoragePoolRPOperation>
 */
export interface StoragePoolOperationListResult extends Array<StoragePoolRPOperation> {
  /**
   * URI to fetch the next section of the paginated response.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of Disk Pools
 * @extends Array<DiskPool>
 */
export interface DiskPoolListResult extends Array<DiskPool> {
  /**
   * URI to fetch the next section of the paginated response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Outbound Environment Endpoints
 * @extends Array<OutboundEnvironmentEndpoint>
 */
export interface OutboundEnvironmentEndpointList extends Array<OutboundEnvironmentEndpoint> {
  /**
   * Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List Disk Pool skus operation response.
 * @extends Array<DiskPoolZoneInfo>
 */
export interface DiskPoolZoneListResult extends Array<DiskPoolZoneInfo> {
  /**
   * URI to fetch the next section of the paginated response.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of iSCSI Targets.
 * @extends Array<IscsiTarget>
 */
export interface IscsiTargetList extends Array<IscsiTarget> {
  /**
   * URI to fetch the next section of the paginated response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for ProvisioningStates.
 * Possible values include: 'Invalid', 'Succeeded', 'Failed', 'Canceled', 'Pending', 'Creating',
 * 'Updating', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type ProvisioningStates = 'Invalid' | 'Succeeded' | 'Failed' | 'Canceled' | 'Pending' | 'Creating' | 'Updating' | 'Deleting';

/**
 * Defines values for OperationalStatus.
 * Possible values include: 'Invalid', 'Unknown', 'Healthy', 'Unhealthy', 'Updating', 'Running',
 * 'Stopped', 'Stopped (deallocated)'
 * @readonly
 * @enum {string}
 */
export type OperationalStatus = 'Invalid' | 'Unknown' | 'Healthy' | 'Unhealthy' | 'Updating' | 'Running' | 'Stopped' | 'Stopped (deallocated)';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for IscsiTargetAclMode.
 * Possible values include: 'Dynamic', 'Static'
 * @readonly
 * @enum {string}
 */
export type IscsiTargetAclMode = 'Dynamic' | 'Static';

/**
 * Defines values for DiskPoolTier.
 * Possible values include: 'Basic', 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export type DiskPoolTier = 'Basic' | 'Standard' | 'Premium';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = StoragePoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StoragePoolOperationListResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DiskPoolsListBySubscriptionResponse = DiskPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPoolListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DiskPoolsListByResourceGroupResponse = DiskPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPoolListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiskPoolsCreateOrUpdateResponse = DiskPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPool;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DiskPoolsUpdateResponse = DiskPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPool;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiskPoolsGetResponse = DiskPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPool;
    };
};

/**
 * Contains response data for the listOutboundNetworkDependenciesEndpoints operation.
 */
export type DiskPoolsListOutboundNetworkDependenciesEndpointsResponse = OutboundEnvironmentEndpointList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OutboundEnvironmentEndpointList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DiskPoolsBeginCreateOrUpdateResponse = DiskPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPool;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DiskPoolsBeginUpdateResponse = DiskPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPool;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DiskPoolsListBySubscriptionNextResponse = DiskPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPoolListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DiskPoolsListByResourceGroupNextResponse = DiskPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPoolListResult;
    };
};

/**
 * Contains response data for the listOutboundNetworkDependenciesEndpointsNext operation.
 */
export type DiskPoolsListOutboundNetworkDependenciesEndpointsNextResponse = OutboundEnvironmentEndpointList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OutboundEnvironmentEndpointList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiskPoolZonesListResponse = DiskPoolZoneListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPoolZoneListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DiskPoolZonesListNextResponse = DiskPoolZoneListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskPoolZoneListResult;
    };
};

/**
 * Contains response data for the listByDiskPool operation.
 */
export type IscsiTargetsListByDiskPoolResponse = IscsiTargetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IscsiTargetList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IscsiTargetsCreateOrUpdateResponse = IscsiTarget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IscsiTarget;
    };
};

/**
 * Contains response data for the update operation.
 */
export type IscsiTargetsUpdateResponse = IscsiTarget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IscsiTarget;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IscsiTargetsGetResponse = IscsiTarget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IscsiTarget;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type IscsiTargetsBeginCreateOrUpdateResponse = IscsiTarget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IscsiTarget;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type IscsiTargetsBeginUpdateResponse = IscsiTarget & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IscsiTarget;
    };
};

/**
 * Contains response data for the listByDiskPoolNext operation.
 */
export type IscsiTargetsListByDiskPoolNextResponse = IscsiTargetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IscsiTargetList;
    };
};
