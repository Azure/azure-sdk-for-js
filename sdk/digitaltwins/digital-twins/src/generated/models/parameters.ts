/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
  QueryCollectionFormat
} from "@azure/core-http";
import {
  QuerySpecification as QuerySpecificationMapper,
  EventRoute as EventRouteMapper
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const models: OperationParameter = {
  parameterPath: ["options", "models"],
  mapper: {
    constraints: {
      MinItems: 1,
      UniqueItems: true
    },
    serializedName: "models",
    type: {
      name: "Sequence",
      element: { type: { name: "any" } }
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const traceparent: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsAddOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsAddOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2020-10-31",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const traceparent1: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsListOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate1: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsListOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const dependenciesFor: OperationQueryParameter = {
  parameterPath: ["options", "dependenciesFor"],
  mapper: {
    serializedName: "dependenciesFor",
    type: {
      name: "Sequence",
      element: { type: { name: "String" } }
    }
  },
  collectionFormat: QueryCollectionFormat.Csv
};

export const includeModelDefinition: OperationQueryParameter = {
  parameterPath: ["options", "includeModelDefinition"],
  mapper: {
    serializedName: "includeModelDefinition",
    type: {
      name: "Boolean"
    }
  }
};

export const maxItemsPerPage: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsListOptions", "maxItemsPerPage"],
  mapper: {
    serializedName: "max-items-per-page",
    type: {
      name: "Number"
    }
  }
};

export const traceparent2: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsGetByIdOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate2: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsGetByIdOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const id: OperationURLParameter = {
  parameterPath: "id",
  mapper: {
    serializedName: "id",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType1: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json-patch+json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const updateModel: OperationParameter = {
  parameterPath: "updateModel",
  mapper: {
    serializedName: "updateModel",
    required: true,
    type: {
      name: "Sequence",
      element: { type: { name: "any" } }
    }
  }
};

export const traceparent3: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsUpdateOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate3: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsUpdateOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const traceparent4: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsDeleteOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate4: OperationParameter = {
  parameterPath: ["options", "digitalTwinModelsDeleteOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const querySpecification: OperationParameter = {
  parameterPath: "querySpecification",
  mapper: QuerySpecificationMapper
};

export const traceparent5: OperationParameter = {
  parameterPath: ["options", "queryTwinsOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate5: OperationParameter = {
  parameterPath: ["options", "queryTwinsOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const maxItemsPerPage1: OperationParameter = {
  parameterPath: ["options", "queryTwinsOptions", "maxItemsPerPage"],
  mapper: {
    serializedName: "max-items-per-page",
    type: {
      name: "Number"
    }
  }
};

export const traceparent6: OperationParameter = {
  parameterPath: ["options", "digitalTwinsGetByIdOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate6: OperationParameter = {
  parameterPath: ["options", "digitalTwinsGetByIdOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const twin: OperationParameter = {
  parameterPath: "twin",
  mapper: {
    serializedName: "twin",
    required: true,
    type: {
      name: "any"
    }
  }
};

export const traceparent7: OperationParameter = {
  parameterPath: ["options", "digitalTwinsAddOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate7: OperationParameter = {
  parameterPath: ["options", "digitalTwinsAddOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch: OperationParameter = {
  parameterPath: ["options", "ifNoneMatch"],
  mapper: {
    defaultValue: "*",
    isConstant: true,
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const traceparent8: OperationParameter = {
  parameterPath: ["options", "digitalTwinsDeleteOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate8: OperationParameter = {
  parameterPath: ["options", "digitalTwinsDeleteOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const ifMatch: OperationParameter = {
  parameterPath: ["options", "digitalTwinsDeleteOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const patchDocument: OperationParameter = {
  parameterPath: "patchDocument",
  mapper: {
    serializedName: "patchDocument",
    required: true,
    type: {
      name: "Sequence",
      element: { type: { name: "any" } }
    }
  }
};

export const traceparent9: OperationParameter = {
  parameterPath: ["options", "digitalTwinsUpdateOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate9: OperationParameter = {
  parameterPath: ["options", "digitalTwinsUpdateOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const ifMatch1: OperationParameter = {
  parameterPath: ["options", "digitalTwinsUpdateOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const traceparent10: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsGetRelationshipByIdOptions",
    "traceparent"
  ],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate10: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsGetRelationshipByIdOptions",
    "tracestate"
  ],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const relationshipId: OperationURLParameter = {
  parameterPath: "relationshipId",
  mapper: {
    serializedName: "relationshipId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const relationship: OperationParameter = {
  parameterPath: "relationship",
  mapper: {
    serializedName: "relationship",
    required: true,
    type: {
      name: "any"
    }
  }
};

export const traceparent11: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsAddRelationshipOptions",
    "traceparent"
  ],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate11: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsAddRelationshipOptions",
    "tracestate"
  ],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const traceparent12: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsDeleteRelationshipOptions",
    "traceparent"
  ],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate12: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsDeleteRelationshipOptions",
    "tracestate"
  ],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const ifMatch2: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsDeleteRelationshipOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const traceparent13: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsUpdateRelationshipOptions",
    "traceparent"
  ],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate13: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsUpdateRelationshipOptions",
    "tracestate"
  ],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const ifMatch3: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsUpdateRelationshipOptions",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const traceparent14: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsListRelationshipsOptions",
    "traceparent"
  ],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate14: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsListRelationshipsOptions",
    "tracestate"
  ],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const relationshipName: OperationQueryParameter = {
  parameterPath: ["options", "relationshipName"],
  mapper: {
    serializedName: "relationshipName",
    type: {
      name: "String"
    }
  }
};

export const traceparent15: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsListIncomingRelationshipsOptions",
    "traceparent"
  ],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate15: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsListIncomingRelationshipsOptions",
    "tracestate"
  ],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const telemetry: OperationParameter = {
  parameterPath: "telemetry",
  mapper: {
    serializedName: "telemetry",
    required: true,
    type: {
      name: "any"
    }
  }
};

export const traceparent16: OperationParameter = {
  parameterPath: ["options", "digitalTwinsSendTelemetryOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate16: OperationParameter = {
  parameterPath: ["options", "digitalTwinsSendTelemetryOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const messageId: OperationParameter = {
  parameterPath: "messageId",
  mapper: {
    serializedName: "Message-Id",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const telemetrySourceTime: OperationParameter = {
  parameterPath: ["options", "telemetrySourceTime"],
  mapper: {
    serializedName: "Telemetry-Source-Time",
    type: {
      name: "String"
    }
  }
};

export const traceparent17: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsSendComponentTelemetryOptions",
    "traceparent"
  ],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate17: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsSendComponentTelemetryOptions",
    "tracestate"
  ],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const componentPath: OperationURLParameter = {
  parameterPath: "componentPath",
  mapper: {
    serializedName: "componentPath",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const traceparent18: OperationParameter = {
  parameterPath: ["options", "digitalTwinsGetComponentOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate18: OperationParameter = {
  parameterPath: ["options", "digitalTwinsGetComponentOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const traceparent19: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsUpdateComponentOptions",
    "traceparent"
  ],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate19: OperationParameter = {
  parameterPath: [
    "options",
    "digitalTwinsUpdateComponentOptions",
    "tracestate"
  ],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const ifMatch4: OperationParameter = {
  parameterPath: ["options", "digitalTwinsUpdateComponentOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const traceparent20: OperationParameter = {
  parameterPath: ["options", "eventRoutesListOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate20: OperationParameter = {
  parameterPath: ["options", "eventRoutesListOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const maxItemsPerPage2: OperationParameter = {
  parameterPath: ["options", "eventRoutesListOptions", "maxItemsPerPage"],
  mapper: {
    serializedName: "max-items-per-page",
    type: {
      name: "Number"
    }
  }
};

export const traceparent21: OperationParameter = {
  parameterPath: ["options", "eventRoutesGetByIdOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate21: OperationParameter = {
  parameterPath: ["options", "eventRoutesGetByIdOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const eventRoute: OperationParameter = {
  parameterPath: ["options", "eventRoute"],
  mapper: EventRouteMapper
};

export const traceparent22: OperationParameter = {
  parameterPath: ["options", "eventRoutesAddOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate22: OperationParameter = {
  parameterPath: ["options", "eventRoutesAddOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};

export const traceparent23: OperationParameter = {
  parameterPath: ["options", "eventRoutesDeleteOptions", "traceparent"],
  mapper: {
    serializedName: "traceparent",
    type: {
      name: "String"
    }
  }
};

export const tracestate23: OperationParameter = {
  parameterPath: ["options", "eventRoutesDeleteOptions", "tracestate"],
  mapper: {
    serializedName: "tracestate",
    type: {
      name: "String"
    }
  }
};
