/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const DigitalTwinsSkuInfo: msRest.CompositeMapper = {
  serializedName: "DigitalTwinsSkuInfo",
  type: {
    name: "Composite",
    className: "DigitalTwinsSkuInfo",
    modelProperties: {
      name: {
        required: true,
        isConstant: true,
        serializedName: "name",
        defaultValue: 'F1',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinsResource: msRest.CompositeMapper = {
  serializedName: "DigitalTwinsResource",
  type: {
    name: "Composite",
    className: "DigitalTwinsResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        constraints: {
          Pattern: /^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$/
        },
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        isConstant: true,
        serializedName: "sku",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "DigitalTwinsSkuInfo"
        }
      }
    }
  }
};

export const DigitalTwinsDescription: msRest.CompositeMapper = {
  serializedName: "DigitalTwinsDescription",
  type: {
    name: "Composite",
    className: "DigitalTwinsDescription",
    modelProperties: {
      ...DigitalTwinsResource.type.modelProperties,
      createdTime: {
        readOnly: true,
        serializedName: "properties.createdTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedTime: {
        readOnly: true,
        serializedName: "properties.lastUpdatedTime",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      hostName: {
        readOnly: true,
        serializedName: "properties.hostName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinsPatchDescription: msRest.CompositeMapper = {
  serializedName: "DigitalTwinsPatchDescription",
  type: {
    name: "Composite",
    className: "DigitalTwinsPatchDescription",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorDefinition: msRest.CompositeMapper = {
  serializedName: "ErrorDefinition",
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDefinition"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDefinition"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const CheckNameRequest: msRest.CompositeMapper = {
  serializedName: "CheckNameRequest",
  type: {
    name: "Composite",
    className: "CheckNameRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'Microsoft.DigitalTwins/digitalTwinsInstances',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameResult: msRest.CompositeMapper = {
  serializedName: "CheckNameResult",
  type: {
    name: "Composite",
    className: "CheckNameResult",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalResource: msRest.CompositeMapper = {
  serializedName: "ExternalResource",
  type: {
    name: "Composite",
    className: "ExternalResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        constraints: {
          Pattern: /^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$/
        },
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinsEndpointResourceProperties: msRest.CompositeMapper = {
  serializedName: "DigitalTwinsEndpointResourceProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "endpointType",
      clientName: "endpointType"
    },
    uberParent: "DigitalTwinsEndpointResourceProperties",
    className: "DigitalTwinsEndpointResourceProperties",
    modelProperties: {
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      createdTime: {
        readOnly: true,
        serializedName: "createdTime",
        type: {
          name: "DateTime"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      endpointType: {
        required: true,
        serializedName: "endpointType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinsEndpointResource: msRest.CompositeMapper = {
  serializedName: "DigitalTwinsEndpointResource",
  type: {
    name: "Composite",
    className: "DigitalTwinsEndpointResource",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DigitalTwinsEndpointResourceProperties"
        }
      }
    }
  }
};

export const ServiceBus: msRest.CompositeMapper = {
  serializedName: "ServiceBus",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DigitalTwinsEndpointResourceProperties.type.polymorphicDiscriminator,
    uberParent: "DigitalTwinsEndpointResourceProperties",
    className: "ServiceBus",
    modelProperties: {
      ...DigitalTwinsEndpointResourceProperties.type.modelProperties,
      primaryConnectionString: {
        required: true,
        serializedName: "primaryConnectionString",
        type: {
          name: "String"
        }
      },
      secondaryConnectionString: {
        required: true,
        serializedName: "secondaryConnectionString",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventHub: msRest.CompositeMapper = {
  serializedName: "EventHub",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DigitalTwinsEndpointResourceProperties.type.polymorphicDiscriminator,
    uberParent: "DigitalTwinsEndpointResourceProperties",
    className: "EventHub",
    modelProperties: {
      ...DigitalTwinsEndpointResourceProperties.type.modelProperties,
      connectionStringPrimaryKey: {
        required: true,
        serializedName: "connectionString-PrimaryKey",
        type: {
          name: "String"
        }
      },
      connectionStringSecondaryKey: {
        required: true,
        serializedName: "connectionString-SecondaryKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventGrid: msRest.CompositeMapper = {
  serializedName: "EventGrid",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DigitalTwinsEndpointResourceProperties.type.polymorphicDiscriminator,
    uberParent: "DigitalTwinsEndpointResourceProperties",
    className: "EventGrid",
    modelProperties: {
      ...DigitalTwinsEndpointResourceProperties.type.modelProperties,
      topicEndpoint: {
        serializedName: "TopicEndpoint",
        type: {
          name: "String"
        }
      },
      accessKey1: {
        required: true,
        serializedName: "accessKey1",
        type: {
          name: "String"
        }
      },
      accessKey2: {
        required: true,
        serializedName: "accessKey2",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinsDescriptionListResult: msRest.CompositeMapper = {
  serializedName: "DigitalTwinsDescriptionListResult",
  type: {
    name: "Composite",
    className: "DigitalTwinsDescriptionListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DigitalTwinsDescription"
            }
          }
        }
      }
    }
  }
};

export const DigitalTwinsEndpointResourceListResult: msRest.CompositeMapper = {
  serializedName: "DigitalTwinsEndpointResourceListResult",
  type: {
    name: "Composite",
    className: "DigitalTwinsEndpointResourceListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DigitalTwinsEndpointResource"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const discriminators = {
  'DigitalTwinsEndpointResourceProperties' : DigitalTwinsEndpointResourceProperties,
  'DigitalTwinsEndpointResourceProperties.ServiceBus' : ServiceBus,
  'DigitalTwinsEndpointResourceProperties.EventHub' : EventHub,
  'DigitalTwinsEndpointResourceProperties.EventGrid' : EventGrid

};
