/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A model definition and metadata for that model. */
export interface DigitalTwinsModelData {
  /** A language map that contains the localized display names as specified in the model definition. */
  displayName?: { [propertyName: string]: string };
  /** A language map that contains the localized descriptions as specified in the model definition. */
  description?: { [propertyName: string]: string };
  /** The id of the model as specified in the model definition. */
  id: string;
  /** The time the model was uploaded to the service. */
  uploadTime?: Date;
  /** Indicates if the model is decommissioned. Decommissioned models cannot be referenced by newly created digital twins. */
  decommissioned?: boolean;
  /** The model definition. */
  model?: Record<string, unknown>;
}

/** Error response. */
export interface ErrorResponse {
  /** The error details. */
  error: ErrorModel;
}

/** Error definition. */
export interface ErrorModel {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * A human-readable representation of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorModel[];
  /** An object containing more specific information than the current object about the error. */
  innererror?: InnerError;
}

/** A more specific error description than was provided by the containing error. */
export interface InnerError {
  /** A more specific error code than was provided by the containing error. */
  code?: string;
  /** An object containing more specific information than the current object about the error. */
  innererror?: InnerError;
}

/** A collection of DigitalTwinsModelData objects. */
export interface PagedDigitalTwinsModelDataCollection {
  /** The DigitalTwinsModelData objects. */
  value: DigitalTwinsModelData[];
  /** A URI to retrieve the next page of objects. */
  nextLink?: string;
}

/** A query specification containing either a query statement or a continuation token from a previous query result. */
export interface QuerySpecification {
  /** The query to execute. This value is ignored if a continuation token is provided. */
  query?: string;
  /** A token which is used to retrieve the next set of results from a previous query. */
  continuationToken?: string;
}

/** The results of a query operation and an optional continuation token. */
export interface QueryResult {
  /** The query results. */
  value: Record<string, unknown>[];
  /** A token which can be used to construct a new QuerySpecification to retrieve the next set of results. */
  continuationToken?: string;
}

/** A collection of relationships which relate digital twins together. */
export interface RelationshipCollection {
  /** The relationship objects. */
  value: Record<string, unknown>[];
  /** A URI to retrieve the next page of objects. */
  nextLink?: string;
}

/** A collection of incoming relationships which relate digital twins together. */
export interface IncomingRelationshipCollection {
  value: IncomingRelationship[];
  /** A URI to retrieve the next page of objects. */
  nextLink?: string;
}

/** An incoming relationship. */
export interface IncomingRelationship {
  /** A user-provided string representing the id of this relationship, unique in the context of the source digital twin, i.e. sourceId + relationshipId is unique in the context of the service. */
  relationshipId?: string;
  /** The id of the source digital twin. */
  sourceId?: string;
  /** The name of the relationship. */
  relationshipName?: string;
  /** Link to the relationship, to be used for deletion. */
  relationshipLink?: string;
}

/** A collection of EventRoute objects. */
export interface EventRouteCollection {
  /** The EventRoute objects. */
  value: EventRoute[];
  /** A URI to retrieve the next page of results. */
  nextLink?: string;
}

/** A route which directs notification and telemetry events to an endpoint. Endpoints are a destination outside of Azure Digital Twins such as an EventHub. */
export interface EventRoute {
  /**
   * The id of the event route.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** The name of the endpoint this event route is bound to. */
  endpointName: string;
  /** An expression which describes the events which are routed to the endpoint. */
  filter: string;
}

/** A collection of import job objects. */
export interface ImportJobCollection {
  /** The list of import job objects. */
  value: ImportJob[];
  /** A URI to retrieve the next page of results. */
  nextLink?: string;
}

/** A job which contains a reference to the operations to perform, results, and execution metadata. */
export interface ImportJob {
  /**
   * The identifier of the import job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** The path to the input Azure storage blob that contains file(s) describing the operations to perform in the job. */
  inputBlobUri: string;
  /** The path to the output Azure storage blob that will contain the errors and progress logs of import job. */
  outputBlobUri: string;
  /**
   * Status of the job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: Status;
  /**
   * Start time of the job. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDateTime?: Date;
  /**
   * Last time service performed any action from the job. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastActionDateTime?: Date;
  /**
   * End time of the job. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly finishedDateTime?: Date;
  /**
   * Time at which job will be purged by the service from the system. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purgeDateTime?: Date;
  /** Details of the error(s) that occurred executing the import job. */
  error?: ErrorModel;
}

/** A job which contains a reference to the operations to perform, results, and execution metadata. */
export interface DeleteJob {
  /**
   * The identifier of the delete job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Status of the job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: DeleteJobStatus;
  /**
   * Start time of the job. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDateTime?: Date;
  /**
   * End time of the job. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly finishedDateTime?: Date;
  /**
   * Time at which job will be purged by the service from the system. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purgeDateTime?: Date;
  /** Details of the error(s) that occurred executing the import job. */
  error?: ErrorModel;
}

/** A collection of delete job objects. */
export interface DeleteJobCollection {
  /** The list of delete job objects. */
  value: DeleteJob[];
  /** A URI to retrieve the next page of results. */
  nextLink?: string;
}

/** Defines headers for DigitalTwinModels_add operation. */
export interface DigitalTwinModelsAddExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwinModels_list operation. */
export interface DigitalTwinModelsListExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwinModels_getById operation. */
export interface DigitalTwinModelsGetByIdExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwinModels_update operation. */
export interface DigitalTwinModelsUpdateExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwinModels_delete operation. */
export interface DigitalTwinModelsDeleteExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwinModels_listNext operation. */
export interface DigitalTwinModelsListNextExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for Query_queryTwins operation. */
export interface QueryQueryTwinsHeaders {
  /** The query charge. */
  queryCharge?: number;
}

/** Defines headers for Query_queryTwins operation. */
export interface QueryQueryTwinsExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_getById operation. */
export interface DigitalTwinsGetByIdHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_getById operation. */
export interface DigitalTwinsGetByIdExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_add operation. */
export interface DigitalTwinsAddHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_add operation. */
export interface DigitalTwinsAddExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_delete operation. */
export interface DigitalTwinsDeleteExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_update operation. */
export interface DigitalTwinsUpdateHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_update operation. */
export interface DigitalTwinsUpdateExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_getRelationshipById operation. */
export interface DigitalTwinsGetRelationshipByIdHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_getRelationshipById operation. */
export interface DigitalTwinsGetRelationshipByIdExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_addRelationship operation. */
export interface DigitalTwinsAddRelationshipHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_addRelationship operation. */
export interface DigitalTwinsAddRelationshipExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_deleteRelationship operation. */
export interface DigitalTwinsDeleteRelationshipExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_updateRelationship operation. */
export interface DigitalTwinsUpdateRelationshipHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_updateRelationship operation. */
export interface DigitalTwinsUpdateRelationshipExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_listRelationships operation. */
export interface DigitalTwinsListRelationshipsExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_listIncomingRelationships operation. */
export interface DigitalTwinsListIncomingRelationshipsExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_sendTelemetry operation. */
export interface DigitalTwinsSendTelemetryExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_sendComponentTelemetry operation. */
export interface DigitalTwinsSendComponentTelemetryExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_getComponent operation. */
export interface DigitalTwinsGetComponentHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_getComponent operation. */
export interface DigitalTwinsGetComponentExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_updateComponent operation. */
export interface DigitalTwinsUpdateComponentHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_updateComponent operation. */
export interface DigitalTwinsUpdateComponentExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_listRelationshipsNext operation. */
export interface DigitalTwinsListRelationshipsNextExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DigitalTwins_listIncomingRelationshipsNext operation. */
export interface DigitalTwinsListIncomingRelationshipsNextExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for EventRoutes_list operation. */
export interface EventRoutesListExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for EventRoutes_getById operation. */
export interface EventRoutesGetByIdExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for EventRoutes_add operation. */
export interface EventRoutesAddExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for EventRoutes_delete operation. */
export interface EventRoutesDeleteExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for EventRoutes_listNext operation. */
export interface EventRoutesListNextExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for ImportJobs_list operation. */
export interface ImportJobsListExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for ImportJobs_add operation. */
export interface ImportJobsAddExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for ImportJobs_getById operation. */
export interface ImportJobsGetByIdExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for ImportJobs_delete operation. */
export interface ImportJobsDeleteExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for ImportJobs_cancel operation. */
export interface ImportJobsCancelExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for ImportJobs_listNext operation. */
export interface ImportJobsListNextExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DeleteJobs_add operation. */
export interface DeleteJobsAddHeaders {
  /** The URL to track the status of the long running operation. */
  operationLocation?: string;
}

/** Defines headers for DeleteJobs_add operation. */
export interface DeleteJobsAddExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DeleteJobs_list operation. */
export interface DeleteJobsListExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DeleteJobs_getById operation. */
export interface DeleteJobsGetByIdExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines headers for DeleteJobs_listNext operation. */
export interface DeleteJobsListNextExceptionHeaders {
  /** Error code for specific error that occurred. */
  xMsErrorCode?: string;
}

/** Defines values for Status. */
export type Status =
  | "notstarted"
  | "running"
  | "failed"
  | "succeeded"
  | "cancelling"
  | "cancelled";
/** Defines values for DeleteJobStatus. */
export type DeleteJobStatus = "notstarted" | "running" | "failed" | "succeeded";

/** Optional parameters. */
export interface DigitalTwinModelsAddOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the add operation. */
export type DigitalTwinModelsAddResponse = DigitalTwinsModelData[];

/** Optional parameters. */
export interface DigitalTwinModelsListOptionalParams
  extends coreClient.OperationOptions {
  /** If specified, only return the set of the specified models along with their dependencies. If omitted, all models are retrieved. */
  dependenciesFor?: string[];
  /** When true the model definition will be returned as part of the result. */
  includeModelDefinition?: boolean;
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the list operation. */
export type DigitalTwinModelsListResponse =
  PagedDigitalTwinsModelDataCollection;

/** Optional parameters. */
export interface DigitalTwinModelsGetByIdOptionalParams
  extends coreClient.OperationOptions {
  /** When true the model definition will be returned as part of the result. */
  includeModelDefinition?: boolean;
}

/** Contains response data for the getById operation. */
export type DigitalTwinModelsGetByIdResponse = DigitalTwinsModelData;

/** Optional parameters. */
export interface DigitalTwinModelsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DigitalTwinModelsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DigitalTwinModelsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the listNext operation. */
export type DigitalTwinModelsListNextResponse =
  PagedDigitalTwinsModelDataCollection;

/** Optional parameters. */
export interface QueryQueryTwinsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the queryTwins operation. */
export type QueryQueryTwinsResponse = QueryQueryTwinsHeaders & QueryResult;

/** Optional parameters. */
export interface DigitalTwinsGetByIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getById operation. */
export type DigitalTwinsGetByIdResponse = DigitalTwinsGetByIdHeaders & {
  [propertyName: string]: any;
};

/** Optional parameters. */
export interface DigitalTwinsAddOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity does not already exist. */
  ifNoneMatch?: string;
}

/** Contains response data for the add operation. */
export type DigitalTwinsAddResponse = DigitalTwinsAddHeaders & {
  [propertyName: string]: any;
};

/** Optional parameters. */
export interface DigitalTwinsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Optional parameters. */
export interface DigitalTwinsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Contains response data for the update operation. */
export type DigitalTwinsUpdateResponse = DigitalTwinsUpdateHeaders;

/** Optional parameters. */
export interface DigitalTwinsGetRelationshipByIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRelationshipById operation. */
export type DigitalTwinsGetRelationshipByIdResponse =
  DigitalTwinsGetRelationshipByIdHeaders & { [propertyName: string]: any };

/** Optional parameters. */
export interface DigitalTwinsAddRelationshipOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity does not already exist. */
  ifNoneMatch?: string;
}

/** Contains response data for the addRelationship operation. */
export type DigitalTwinsAddRelationshipResponse =
  DigitalTwinsAddRelationshipHeaders & { [propertyName: string]: any };

/** Optional parameters. */
export interface DigitalTwinsDeleteRelationshipOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Optional parameters. */
export interface DigitalTwinsUpdateRelationshipOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Contains response data for the updateRelationship operation. */
export type DigitalTwinsUpdateRelationshipResponse =
  DigitalTwinsUpdateRelationshipHeaders;

/** Optional parameters. */
export interface DigitalTwinsListRelationshipsOptionalParams
  extends coreClient.OperationOptions {
  /** The name of the relationship. */
  relationshipName?: string;
}

/** Contains response data for the listRelationships operation. */
export type DigitalTwinsListRelationshipsResponse = RelationshipCollection;

/** Optional parameters. */
export interface DigitalTwinsListIncomingRelationshipsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listIncomingRelationships operation. */
export type DigitalTwinsListIncomingRelationshipsResponse =
  IncomingRelationshipCollection;

/** Optional parameters. */
export interface DigitalTwinsSendTelemetryOptionalParams
  extends coreClient.OperationOptions {
  /** An RFC 3339 timestamp that identifies the time the telemetry was measured. */
  telemetrySourceTime?: string;
}

/** Optional parameters. */
export interface DigitalTwinsSendComponentTelemetryOptionalParams
  extends coreClient.OperationOptions {
  /** An RFC 3339 timestamp that identifies the time the telemetry was measured. */
  telemetrySourceTime?: string;
}

/** Optional parameters. */
export interface DigitalTwinsGetComponentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getComponent operation. */
export type DigitalTwinsGetComponentResponse =
  DigitalTwinsGetComponentHeaders & { [propertyName: string]: any };

/** Optional parameters. */
export interface DigitalTwinsUpdateComponentOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Contains response data for the updateComponent operation. */
export type DigitalTwinsUpdateComponentResponse =
  DigitalTwinsUpdateComponentHeaders;

/** Optional parameters. */
export interface DigitalTwinsListRelationshipsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listRelationshipsNext operation. */
export type DigitalTwinsListRelationshipsNextResponse = RelationshipCollection;

/** Optional parameters. */
export interface DigitalTwinsListIncomingRelationshipsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listIncomingRelationshipsNext operation. */
export type DigitalTwinsListIncomingRelationshipsNextResponse =
  IncomingRelationshipCollection;

/** Optional parameters. */
export interface EventRoutesListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the list operation. */
export type EventRoutesListResponse = EventRouteCollection;

/** Optional parameters. */
export interface EventRoutesGetByIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getById operation. */
export type EventRoutesGetByIdResponse = EventRoute;

/** Optional parameters. */
export interface EventRoutesAddOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EventRoutesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EventRoutesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the listNext operation. */
export type EventRoutesListNextResponse = EventRouteCollection;

/** Optional parameters. */
export interface ImportJobsListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the list operation. */
export type ImportJobsListResponse = ImportJobCollection;

/** Optional parameters. */
export interface ImportJobsAddOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the add operation. */
export type ImportJobsAddResponse = ImportJob;

/** Optional parameters. */
export interface ImportJobsGetByIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getById operation. */
export type ImportJobsGetByIdResponse = ImportJob;

/** Optional parameters. */
export interface ImportJobsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ImportJobsCancelOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancel operation. */
export type ImportJobsCancelResponse = ImportJob;

/** Optional parameters. */
export interface ImportJobsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the listNext operation. */
export type ImportJobsListNextResponse = ImportJobCollection;

/** Optional parameters. */
export interface DeleteJobsAddOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the add operation. */
export type DeleteJobsAddResponse = DeleteJobsAddHeaders & DeleteJob;

/** Optional parameters. */
export interface DeleteJobsListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the list operation. */
export type DeleteJobsListResponse = DeleteJobCollection;

/** Optional parameters. */
export interface DeleteJobsGetByIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getById operation. */
export type DeleteJobsGetByIdResponse = DeleteJob;

/** Optional parameters. */
export interface DeleteJobsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the listNext operation. */
export type DeleteJobsListNextResponse = DeleteJobCollection;

/** Optional parameters. */
export interface AzureDigitalTwinsAPIOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** ID for the operation's status monitor. The ID is generated if header was not passed by the client. */
  operationId?: string;
  /** Desired timeout for the delete job. Once the specified timeout is reached, service will stop any delete operations triggered by the current delete job that are in progress, and go to a failed state. Please note that this will leave your instance in an unknown state as there won't be any rollback operation. */
  timeoutInMinutes?: number;
  /** Overrides client endpoint. */
  endpoint?: string;
}
