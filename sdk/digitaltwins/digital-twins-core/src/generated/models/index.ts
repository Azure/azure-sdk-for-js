/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A model definition and metadata for that model. */
export interface DigitalTwinsModelData {
  /** A language map that contains the localized display names as specified in the model definition. */
  displayName?: { [propertyName: string]: string };
  /** A language map that contains the localized descriptions as specified in the model definition. */
  description?: { [propertyName: string]: string };
  /** The id of the model as specified in the model definition. */
  id: string;
  /** The time the model was uploaded to the service. */
  uploadTime?: Date;
  /** Indicates if the model is decommissioned. Decommissioned models cannot be referenced by newly created digital twins. */
  decommissioned?: boolean;
  /** The model definition. */
  model?: Record<string, unknown>;
}

/** Error response. */
export interface ErrorResponse {
  /** The error details. */
  error?: ErrorModel;
}

/** Error definition. */
export interface ErrorModel {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * A human-readable representation of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorModel[];
  /** An object containing more specific information than the current object about the error. */
  innererror?: InnerError;
}

/** A more specific error description than was provided by the containing error. */
export interface InnerError {
  /** A more specific error code than was provided by the containing error. */
  code?: string;
  /** An object containing more specific information than the current object about the error. */
  innererror?: InnerError;
}

/** A collection of DigitalTwinsModelData objects. */
export interface PagedDigitalTwinsModelDataCollection {
  /** The DigitalTwinsModelData objects. */
  value?: DigitalTwinsModelData[];
  /** A URI to retrieve the next page of objects. */
  nextLink?: string;
}

/** A query specification containing either a query statement or a continuation token from a previous query result. */
export interface QuerySpecification {
  /** The query to execute. This value is ignored if a continuation token is provided. */
  query?: string;
  /** A token which is used to retrieve the next set of results from a previous query. */
  continuationToken?: string;
}

/** The results of a query operation and an optional continuation token. */
export interface QueryResult {
  /** The query results. */
  value?: Record<string, unknown>[];
  /** A token which can be used to construct a new QuerySpecification to retrieve the next set of results. */
  continuationToken?: string;
}

/** A collection of relationships which relate digital twins together. */
export interface RelationshipCollection {
  /** The relationship objects. */
  value?: Record<string, unknown>[];
  /** A URI to retrieve the next page of objects. */
  nextLink?: string;
}

/** A collection of incoming relationships which relate digital twins together. */
export interface IncomingRelationshipCollection {
  value?: IncomingRelationship[];
  /** A URI to retrieve the next page of objects. */
  nextLink?: string;
}

/** An incoming relationship. */
export interface IncomingRelationship {
  /** A user-provided string representing the id of this relationship, unique in the context of the source digital twin, i.e. sourceId + relationshipId is unique in the context of the service. */
  relationshipId?: string;
  /** The id of the source digital twin. */
  sourceId?: string;
  /** The name of the relationship. */
  relationshipName?: string;
  /** Link to the relationship, to be used for deletion. */
  relationshipLink?: string;
}

/** A collection of EventRoute objects. */
export interface EventRouteCollection {
  /** The EventRoute objects. */
  value?: EventRoute[];
  /** A URI to retrieve the next page of results. */
  nextLink?: string;
}

/** A route which directs notification and telemetry events to an endpoint. Endpoints are a destination outside of Azure Digital Twins such as an EventHub. */
export interface EventRoute {
  /**
   * The id of the event route.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** The name of the endpoint this event route is bound to. */
  endpointName: string;
  /** An expression which describes the events which are routed to the endpoint. */
  filter: string;
}

/** Defines headers for Query_queryTwins operation. */
export interface QueryQueryTwinsHeaders {
  /** The query charge. */
  queryCharge?: number;
}

/** Defines headers for DigitalTwins_getById operation. */
export interface DigitalTwinsGetByIdHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_add operation. */
export interface DigitalTwinsAddHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_update operation. */
export interface DigitalTwinsUpdateHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_getRelationshipById operation. */
export interface DigitalTwinsGetRelationshipByIdHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_addRelationship operation. */
export interface DigitalTwinsAddRelationshipHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_updateRelationship operation. */
export interface DigitalTwinsUpdateRelationshipHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_getComponent operation. */
export interface DigitalTwinsGetComponentHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Defines headers for DigitalTwins_updateComponent operation. */
export interface DigitalTwinsUpdateComponentHeaders {
  /** Weak Etag. */
  etag?: string;
}

/** Optional parameters. */
export interface DigitalTwinModelsAddOptionalParams
  extends coreClient.OperationOptions {
  /** An array of models to add. */
  models?: Record<string, unknown>[];
}

/** Contains response data for the add operation. */
export type DigitalTwinModelsAddResponse = DigitalTwinsModelData[];

/** Optional parameters. */
export interface DigitalTwinModelsListOptionalParams
  extends coreClient.OperationOptions {
  /** The set of the models which will have their dependencies retrieved. If omitted, all models are retrieved. */
  dependenciesFor?: string[];
  /** When true the model definition will be returned as part of the result. */
  includeModelDefinition?: boolean;
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the list operation. */
export type DigitalTwinModelsListResponse = PagedDigitalTwinsModelDataCollection;

/** Optional parameters. */
export interface DigitalTwinModelsGetByIdOptionalParams
  extends coreClient.OperationOptions {
  /** When true the model definition will be returned as part of the result. */
  includeModelDefinition?: boolean;
}

/** Contains response data for the getById operation. */
export type DigitalTwinModelsGetByIdResponse = DigitalTwinsModelData;

/** Optional parameters. */
export interface DigitalTwinModelsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DigitalTwinModelsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DigitalTwinModelsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the listNext operation. */
export type DigitalTwinModelsListNextResponse = PagedDigitalTwinsModelDataCollection;

/** Optional parameters. */
export interface QueryQueryTwinsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the queryTwins operation. */
export type QueryQueryTwinsResponse = QueryQueryTwinsHeaders & QueryResult;

/** Optional parameters. */
export interface DigitalTwinsGetByIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getById operation. */
export type DigitalTwinsGetByIdResponse = DigitalTwinsGetByIdHeaders &
  Record<string, unknown>;

/** Optional parameters. */
export interface DigitalTwinsAddOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity does not already exist. */
  ifNoneMatch?: string;
}

/** Contains response data for the add operation. */
export type DigitalTwinsAddResponse = DigitalTwinsAddHeaders &
  Record<string, unknown>;

/** Optional parameters. */
export interface DigitalTwinsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Optional parameters. */
export interface DigitalTwinsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Contains response data for the update operation. */
export type DigitalTwinsUpdateResponse = DigitalTwinsUpdateHeaders;

/** Optional parameters. */
export interface DigitalTwinsGetRelationshipByIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRelationshipById operation. */
export type DigitalTwinsGetRelationshipByIdResponse = DigitalTwinsGetRelationshipByIdHeaders &
  Record<string, unknown>;

/** Optional parameters. */
export interface DigitalTwinsAddRelationshipOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity does not already exist. */
  ifNoneMatch?: string;
}

/** Contains response data for the addRelationship operation. */
export type DigitalTwinsAddRelationshipResponse = DigitalTwinsAddRelationshipHeaders &
  Record<string, unknown>;

/** Optional parameters. */
export interface DigitalTwinsDeleteRelationshipOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Optional parameters. */
export interface DigitalTwinsUpdateRelationshipOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Contains response data for the updateRelationship operation. */
export type DigitalTwinsUpdateRelationshipResponse = DigitalTwinsUpdateRelationshipHeaders;

/** Optional parameters. */
export interface DigitalTwinsListRelationshipsOptionalParams
  extends coreClient.OperationOptions {
  /** The name of the relationship. */
  relationshipName?: string;
}

/** Contains response data for the listRelationships operation. */
export type DigitalTwinsListRelationshipsResponse = RelationshipCollection;

/** Optional parameters. */
export interface DigitalTwinsListIncomingRelationshipsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listIncomingRelationships operation. */
export type DigitalTwinsListIncomingRelationshipsResponse = IncomingRelationshipCollection;

/** Optional parameters. */
export interface DigitalTwinsSendTelemetryOptionalParams
  extends coreClient.OperationOptions {
  /** An RFC 3339 timestamp that identifies the time the telemetry was measured. */
  telemetrySourceTime?: string;
}

/** Optional parameters. */
export interface DigitalTwinsSendComponentTelemetryOptionalParams
  extends coreClient.OperationOptions {
  /** An RFC 3339 timestamp that identifies the time the telemetry was measured. */
  telemetrySourceTime?: string;
}

/** Optional parameters. */
export interface DigitalTwinsGetComponentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getComponent operation. */
export type DigitalTwinsGetComponentResponse = DigitalTwinsGetComponentHeaders &
  Record<string, unknown>;

/** Optional parameters. */
export interface DigitalTwinsUpdateComponentOptionalParams
  extends coreClient.OperationOptions {
  /** Only perform the operation if the entity's etag matches one of the etags provided or * is provided. */
  ifMatch?: string;
}

/** Contains response data for the updateComponent operation. */
export type DigitalTwinsUpdateComponentResponse = DigitalTwinsUpdateComponentHeaders;

/** Optional parameters. */
export interface DigitalTwinsListRelationshipsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listRelationshipsNext operation. */
export type DigitalTwinsListRelationshipsNextResponse = RelationshipCollection;

/** Optional parameters. */
export interface DigitalTwinsListIncomingRelationshipsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listIncomingRelationshipsNext operation. */
export type DigitalTwinsListIncomingRelationshipsNextResponse = IncomingRelationshipCollection;

/** Optional parameters. */
export interface EventRoutesListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the list operation. */
export type EventRoutesListResponse = EventRouteCollection;

/** Optional parameters. */
export interface EventRoutesGetByIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getById operation. */
export type EventRoutesGetByIdResponse = EventRoute;

/** Optional parameters. */
export interface EventRoutesAddOptionalParams
  extends coreClient.OperationOptions {
  /** The event route data */
  eventRoute?: EventRoute;
}

/** Optional parameters. */
export interface EventRoutesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EventRoutesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of items to retrieve per request. The server may choose to return less than the requested number. */
  resultsPerPage?: number;
}

/** Contains response data for the listNext operation. */
export type EventRoutesListNextResponse = EventRouteCollection;

/** Optional parameters. */
export interface AzureDigitalTwinsAPIOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
