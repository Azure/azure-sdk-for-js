"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventRoutesGetByIdExceptionHeaders = exports.EventRoutesListExceptionHeaders = exports.DigitalTwinsListIncomingRelationshipsNextExceptionHeaders = exports.DigitalTwinsListRelationshipsNextExceptionHeaders = exports.DigitalTwinsUpdateComponentExceptionHeaders = exports.DigitalTwinsUpdateComponentHeaders = exports.DigitalTwinsGetComponentExceptionHeaders = exports.DigitalTwinsGetComponentHeaders = exports.DigitalTwinsSendComponentTelemetryExceptionHeaders = exports.DigitalTwinsSendTelemetryExceptionHeaders = exports.DigitalTwinsListIncomingRelationshipsExceptionHeaders = exports.DigitalTwinsListRelationshipsExceptionHeaders = exports.DigitalTwinsUpdateRelationshipExceptionHeaders = exports.DigitalTwinsUpdateRelationshipHeaders = exports.DigitalTwinsDeleteRelationshipExceptionHeaders = exports.DigitalTwinsAddRelationshipExceptionHeaders = exports.DigitalTwinsAddRelationshipHeaders = exports.DigitalTwinsGetRelationshipByIdExceptionHeaders = exports.DigitalTwinsGetRelationshipByIdHeaders = exports.DigitalTwinsUpdateExceptionHeaders = exports.DigitalTwinsUpdateHeaders = exports.DigitalTwinsDeleteExceptionHeaders = exports.DigitalTwinsAddExceptionHeaders = exports.DigitalTwinsAddHeaders = exports.DigitalTwinsGetByIdExceptionHeaders = exports.DigitalTwinsGetByIdHeaders = exports.QueryQueryTwinsExceptionHeaders = exports.QueryQueryTwinsHeaders = exports.DigitalTwinModelsListNextExceptionHeaders = exports.DigitalTwinModelsDeleteExceptionHeaders = exports.DigitalTwinModelsUpdateExceptionHeaders = exports.DigitalTwinModelsGetByIdExceptionHeaders = exports.DigitalTwinModelsListExceptionHeaders = exports.DigitalTwinModelsAddExceptionHeaders = exports.DeleteJobCollection = exports.DeleteJob = exports.ImportJob = exports.ImportJobCollection = exports.EventRoute = exports.EventRouteCollection = exports.IncomingRelationship = exports.IncomingRelationshipCollection = exports.RelationshipCollection = exports.QueryResult = exports.QuerySpecification = exports.PagedDigitalTwinsModelDataCollection = exports.InnerError = exports.ErrorModel = exports.ErrorResponse = exports.DigitalTwinsModelData = void 0;
exports.DeleteJobsListNextExceptionHeaders = exports.DeleteJobsGetByIdExceptionHeaders = exports.DeleteJobsListExceptionHeaders = exports.DeleteJobsAddExceptionHeaders = exports.DeleteJobsAddHeaders = exports.ImportJobsListNextExceptionHeaders = exports.ImportJobsCancelExceptionHeaders = exports.ImportJobsDeleteExceptionHeaders = exports.ImportJobsGetByIdExceptionHeaders = exports.ImportJobsAddExceptionHeaders = exports.ImportJobsListExceptionHeaders = exports.EventRoutesListNextExceptionHeaders = exports.EventRoutesDeleteExceptionHeaders = exports.EventRoutesAddExceptionHeaders = void 0;
exports.DigitalTwinsModelData = {
    type: {
        name: "Composite",
        className: "DigitalTwinsModelData",
        modelProperties: {
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
            description: {
                serializedName: "description",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            },
            uploadTime: {
                serializedName: "uploadTime",
                type: {
                    name: "DateTime",
                },
            },
            decommissioned: {
                defaultValue: false,
                serializedName: "decommissioned",
                type: {
                    name: "Boolean",
                },
            },
            model: {
                serializedName: "model",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } },
                },
            },
        },
    },
};
exports.ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorModel",
                },
            },
        },
    },
};
exports.ErrorModel = {
    type: {
        name: "Composite",
        className: "ErrorModel",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorModel",
                        },
                    },
                },
            },
            innererror: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerError",
                },
            },
        },
    },
};
exports.InnerError = {
    type: {
        name: "Composite",
        className: "InnerError",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String",
                },
            },
            innererror: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerError",
                },
            },
        },
    },
};
exports.PagedDigitalTwinsModelDataCollection = {
    type: {
        name: "Composite",
        className: "PagedDigitalTwinsModelDataCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DigitalTwinsModelData",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.QuerySpecification = {
    type: {
        name: "Composite",
        className: "QuerySpecification",
        modelProperties: {
            query: {
                serializedName: "query",
                type: {
                    name: "String",
                },
            },
            continuationToken: {
                serializedName: "continuationToken",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.QueryResult = {
    type: {
        name: "Composite",
        className: "QueryResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Dictionary",
                            value: { type: { name: "any" } },
                        },
                    },
                },
            },
            continuationToken: {
                serializedName: "continuationToken",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.RelationshipCollection = {
    type: {
        name: "Composite",
        className: "RelationshipCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Dictionary",
                            value: { type: { name: "any" } },
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.IncomingRelationshipCollection = {
    type: {
        name: "Composite",
        className: "IncomingRelationshipCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IncomingRelationship",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.IncomingRelationship = {
    type: {
        name: "Composite",
        className: "IncomingRelationship",
        modelProperties: {
            relationshipId: {
                serializedName: "$relationshipId",
                type: {
                    name: "String",
                },
            },
            sourceId: {
                serializedName: "$sourceId",
                type: {
                    name: "String",
                },
            },
            relationshipName: {
                serializedName: "$relationshipName",
                type: {
                    name: "String",
                },
            },
            relationshipLink: {
                serializedName: "$relationshipLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.EventRouteCollection = {
    type: {
        name: "Composite",
        className: "EventRouteCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EventRoute",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.EventRoute = {
    type: {
        name: "Composite",
        className: "EventRoute",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            endpointName: {
                serializedName: "endpointName",
                required: true,
                type: {
                    name: "String",
                },
            },
            filter: {
                serializedName: "filter",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ImportJobCollection = {
    type: {
        name: "Composite",
        className: "ImportJobCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ImportJob",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ImportJob = {
    type: {
        name: "Composite",
        className: "ImportJob",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            inputBlobUri: {
                serializedName: "inputBlobUri",
                required: true,
                type: {
                    name: "String",
                },
            },
            outputBlobUri: {
                serializedName: "outputBlobUri",
                required: true,
                type: {
                    name: "String",
                },
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "notstarted",
                        "running",
                        "failed",
                        "succeeded",
                        "cancelling",
                        "cancelled",
                    ],
                },
            },
            createdDateTime: {
                serializedName: "createdDateTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            lastActionDateTime: {
                serializedName: "lastActionDateTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            finishedDateTime: {
                serializedName: "finishedDateTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            purgeDateTime: {
                serializedName: "purgeDateTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorModel",
                },
            },
        },
    },
};
exports.DeleteJob = {
    type: {
        name: "Composite",
        className: "DeleteJob",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["notstarted", "running", "failed", "succeeded"],
                },
            },
            createdDateTime: {
                serializedName: "createdDateTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            finishedDateTime: {
                serializedName: "finishedDateTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            purgeDateTime: {
                serializedName: "purgeDateTime",
                readOnly: true,
                type: {
                    name: "DateTime",
                },
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorModel",
                },
            },
        },
    },
};
exports.DeleteJobCollection = {
    type: {
        name: "Composite",
        className: "DeleteJobCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DeleteJob",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinModelsAddExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinModelsAddExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinModelsListExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinModelsListExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinModelsGetByIdExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinModelsGetByIdExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinModelsUpdateExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinModelsUpdateExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinModelsDeleteExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinModelsDeleteExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinModelsListNextExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinModelsListNextExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.QueryQueryTwinsHeaders = {
    type: {
        name: "Composite",
        className: "QueryQueryTwinsHeaders",
        modelProperties: {
            queryCharge: {
                serializedName: "query-charge",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.QueryQueryTwinsExceptionHeaders = {
    type: {
        name: "Composite",
        className: "QueryQueryTwinsExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsGetByIdHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsGetByIdHeaders",
        modelProperties: {
            etag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsGetByIdExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsGetByIdExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsAddHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsAddHeaders",
        modelProperties: {
            etag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsAddExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsAddExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsDeleteExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsDeleteExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsUpdateHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsUpdateHeaders",
        modelProperties: {
            etag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsUpdateExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsUpdateExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsGetRelationshipByIdHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsGetRelationshipByIdHeaders",
        modelProperties: {
            etag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsGetRelationshipByIdExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsGetRelationshipByIdExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsAddRelationshipHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsAddRelationshipHeaders",
        modelProperties: {
            etag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsAddRelationshipExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsAddRelationshipExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsDeleteRelationshipExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsDeleteRelationshipExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsUpdateRelationshipHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsUpdateRelationshipHeaders",
        modelProperties: {
            etag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsUpdateRelationshipExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsUpdateRelationshipExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsListRelationshipsExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsListRelationshipsExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsListIncomingRelationshipsExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsListIncomingRelationshipsExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsSendTelemetryExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsSendTelemetryExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsSendComponentTelemetryExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsSendComponentTelemetryExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsGetComponentHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsGetComponentHeaders",
        modelProperties: {
            etag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsGetComponentExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsGetComponentExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsUpdateComponentHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsUpdateComponentHeaders",
        modelProperties: {
            etag: {
                serializedName: "etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsUpdateComponentExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsUpdateComponentExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsListRelationshipsNextExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsListRelationshipsNextExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DigitalTwinsListIncomingRelationshipsNextExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DigitalTwinsListIncomingRelationshipsNextExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.EventRoutesListExceptionHeaders = {
    type: {
        name: "Composite",
        className: "EventRoutesListExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.EventRoutesGetByIdExceptionHeaders = {
    type: {
        name: "Composite",
        className: "EventRoutesGetByIdExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.EventRoutesAddExceptionHeaders = {
    type: {
        name: "Composite",
        className: "EventRoutesAddExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.EventRoutesDeleteExceptionHeaders = {
    type: {
        name: "Composite",
        className: "EventRoutesDeleteExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.EventRoutesListNextExceptionHeaders = {
    type: {
        name: "Composite",
        className: "EventRoutesListNextExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ImportJobsListExceptionHeaders = {
    type: {
        name: "Composite",
        className: "ImportJobsListExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ImportJobsAddExceptionHeaders = {
    type: {
        name: "Composite",
        className: "ImportJobsAddExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ImportJobsGetByIdExceptionHeaders = {
    type: {
        name: "Composite",
        className: "ImportJobsGetByIdExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ImportJobsDeleteExceptionHeaders = {
    type: {
        name: "Composite",
        className: "ImportJobsDeleteExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ImportJobsCancelExceptionHeaders = {
    type: {
        name: "Composite",
        className: "ImportJobsCancelExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ImportJobsListNextExceptionHeaders = {
    type: {
        name: "Composite",
        className: "ImportJobsListNextExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DeleteJobsAddHeaders = {
    type: {
        name: "Composite",
        className: "DeleteJobsAddHeaders",
        modelProperties: {
            operationLocation: {
                serializedName: "operation-location",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DeleteJobsAddExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DeleteJobsAddExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DeleteJobsListExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DeleteJobsListExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DeleteJobsGetByIdExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DeleteJobsGetByIdExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DeleteJobsListNextExceptionHeaders = {
    type: {
        name: "Composite",
        className: "DeleteJobsListNextExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String",
                },
            },
        },
    },
};
//# sourceMappingURL=mappers.js.map