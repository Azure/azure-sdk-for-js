{"version":3,"file":"query.js","sourceRoot":"","sources":["../../../../src/generated/operations/query.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAGH,uEAAiD;AACjD,sEAAgD;AAChD,4EAAsD;AAQtD,yCAAyC;AACzC,MAAa,SAAS;IAGpB;;;OAGG;IACH,YAAY,MAA4B;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;;;;;;;;OAaG;IACH,UAAU,CACR,kBAAsC,EACtC,OAAuC;QAEvC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAC/B,uBAAuB,CACxB,CAAC;IACJ,CAAC;CACF;AAlCD,8BAkCC;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;YAC/B,aAAa,EAAE,OAAO,CAAC,sBAAsB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;YACjC,aAAa,EAAE,OAAO,CAAC,+BAA+B;SACvD;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;IACjC,gBAAgB,EAAE;QAChB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,cAAc;KAC1B;IACD,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Query } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { AzureDigitalTwinsAPI } from \"../azureDigitalTwinsAPI.js\";\nimport {\n  QuerySpecification,\n  QueryQueryTwinsOptionalParams,\n  QueryQueryTwinsResponse,\n} from \"../models/index.js\";\n\n/** Class containing Query operations. */\nexport class QueryImpl implements Query {\n  private readonly client: AzureDigitalTwinsAPI;\n\n  /**\n   * Initialize a new instance of the class Query class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureDigitalTwinsAPI) {\n    this.client = client;\n  }\n\n  /**\n   * Executes a query that allows traversing relationships and filtering by property values.\n   * Status codes:\n   * * 200 OK\n   * * 400 Bad Request\n   *   * BadRequest - The continuation token is invalid.\n   *   * SqlQueryError - The query contains some errors.\n   *   * TimeoutError - The query execution timed out after 60 seconds. Try simplifying the query or\n   * adding conditions to reduce the result size.\n   *  * 429 Too Many Requests\n   *   * QuotaReachedError - The maximum query rate limit has been reached.\n   * @param querySpecification The query specification to execute.\n   * @param options The options parameters.\n   */\n  queryTwins(\n    querySpecification: QuerySpecification,\n    options?: QueryQueryTwinsOptionalParams,\n  ): Promise<QueryQueryTwinsResponse> {\n    return this.client.sendOperationRequest(\n      { querySpecification, options },\n      queryTwinsOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst queryTwinsOperationSpec: coreClient.OperationSpec = {\n  path: \"/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResult,\n      headersMapper: Mappers.QueryQueryTwinsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.QueryQueryTwinsExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.querySpecification,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.resultsPerPage,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\n"]}