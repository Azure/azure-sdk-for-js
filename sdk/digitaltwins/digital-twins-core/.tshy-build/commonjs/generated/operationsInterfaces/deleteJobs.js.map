{"version":3,"file":"deleteJobs.js","sourceRoot":"","sources":["../../../../src/generated/operationsInterfaces/deleteJobs.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  DeleteJob,\n  DeleteJobsListOptionalParams,\n  DeleteJobsAddOptionalParams,\n  DeleteJobsAddResponse,\n  DeleteJobsGetByIdOptionalParams,\n  DeleteJobsGetByIdResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a DeleteJobs. */\nexport interface DeleteJobs {\n  /**\n   * Retrieves all deletion jobs. This may be useful to find a delete job that was previously requested,\n   * or to view a history of delete jobs that have run or are currently running on the instance.\n   * Status codes:\n   * * 200 OK\n   * @param options The options parameters.\n   */\n  list(\n    options?: DeleteJobsListOptionalParams,\n  ): PagedAsyncIterableIterator<DeleteJob>;\n  /**\n   * Initiates a job which deletes all models, twins, and relationships on the instance. Does not delete\n   * any other types of entities.\n   * Status codes:\n   * * 202 Created\n   * * 400 Bad Request\n   *   * JobLimitReached - The maximum number of delete jobs allowed has been reached.\n   *   * ValidationFailed - Operation-Id already exists.\n   * @param options The options parameters.\n   */\n  beginAdd(\n    options?: DeleteJobsAddOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeleteJobsAddResponse>,\n      DeleteJobsAddResponse\n    >\n  >;\n  /**\n   * Initiates a job which deletes all models, twins, and relationships on the instance. Does not delete\n   * any other types of entities.\n   * Status codes:\n   * * 202 Created\n   * * 400 Bad Request\n   *   * JobLimitReached - The maximum number of delete jobs allowed has been reached.\n   *   * ValidationFailed - Operation-Id already exists.\n   * @param options The options parameters.\n   */\n  beginAddAndWait(\n    options?: DeleteJobsAddOptionalParams,\n  ): Promise<DeleteJobsAddResponse>;\n  /**\n   * Retrieves a delete job.\n   * Status codes:\n   * * 200 OK\n   * * 404 Not Found\n   *   * DeleteJobNotFound - The delete job was not found.\n   * @param id The id for the delete job. The id is unique within the service and case sensitive.\n   * @param options The options parameters.\n   */\n  getById(\n    id: string,\n    options?: DeleteJobsGetByIdOptionalParams,\n  ): Promise<DeleteJobsGetByIdResponse>;\n}\n"]}