/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  EndpointResource,
  EndpointsListOptionalParams,
  EndpointsGetOptionalParams,
  EndpointsGetResponse,
  EndpointsCreateOrUpdateOptionalParams,
  EndpointsCreateOrUpdateResponse,
  EndpointsUpdateOptionalParams,
  EndpointsUpdateResponse,
  EndpointsDeleteOptionalParams,
  EndpointsListCredentialsOptionalParams,
  EndpointsListCredentialsResponse,
  EndpointsListIngressGatewayCredentialsOptionalParams,
  EndpointsListIngressGatewayCredentialsResponse,
  ManagedProxyRequest,
  EndpointsListManagedProxyDetailsOptionalParams,
  EndpointsListManagedProxyDetailsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Endpoints. */
export interface Endpoints {
  /**
   * List of endpoints to the target resource.
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param options The options parameters.
   */
  list(
    resourceUri: string,
    options?: EndpointsListOptionalParams
  ): PagedAsyncIterableIterator<EndpointResource>;
  /**
   * Gets the endpoint to the resource.
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param endpointName The endpoint name.
   * @param options The options parameters.
   */
  get(
    resourceUri: string,
    endpointName: string,
    options?: EndpointsGetOptionalParams
  ): Promise<EndpointsGetResponse>;
  /**
   * Create or update the endpoint to the target resource.
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param endpointName The endpoint name.
   * @param endpointResource Endpoint details
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceUri: string,
    endpointName: string,
    endpointResource: EndpointResource,
    options?: EndpointsCreateOrUpdateOptionalParams
  ): Promise<EndpointsCreateOrUpdateResponse>;
  /**
   * Update the endpoint to the target resource.
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param endpointName The endpoint name.
   * @param endpointResource Endpoint details
   * @param options The options parameters.
   */
  update(
    resourceUri: string,
    endpointName: string,
    endpointResource: EndpointResource,
    options?: EndpointsUpdateOptionalParams
  ): Promise<EndpointsUpdateResponse>;
  /**
   * Deletes the endpoint access to the target resource.
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param endpointName The endpoint name.
   * @param options The options parameters.
   */
  delete(
    resourceUri: string,
    endpointName: string,
    options?: EndpointsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets the endpoint access credentials to the resource.
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param endpointName The endpoint name.
   * @param options The options parameters.
   */
  listCredentials(
    resourceUri: string,
    endpointName: string,
    options?: EndpointsListCredentialsOptionalParams
  ): Promise<EndpointsListCredentialsResponse>;
  /**
   * Gets the ingress gateway endpoint credentials
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param endpointName The endpoint name.
   * @param options The options parameters.
   */
  listIngressGatewayCredentials(
    resourceUri: string,
    endpointName: string,
    options?: EndpointsListIngressGatewayCredentialsOptionalParams
  ): Promise<EndpointsListIngressGatewayCredentialsResponse>;
  /**
   * Fetches the managed proxy details
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param endpointName The endpoint name.
   * @param managedProxyRequest Object of type ManagedProxyRequest
   * @param options The options parameters.
   */
  listManagedProxyDetails(
    resourceUri: string,
    endpointName: string,
    managedProxyRequest: ManagedProxyRequest,
    options?: EndpointsListManagedProxyDetailsOptionalParams
  ): Promise<EndpointsListManagedProxyDetailsResponse>;
}
