/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SolutionTypeResource,
  SolutionTypesListBySubscriptionOptionalParams,
  SolutionTypesListByResourceGroupOptionalParams,
  SolutionTypesGetOptionalParams,
  SolutionTypesGetResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SolutionTypes. */
export interface SolutionTypes {
  /**
   * List SolutionTypeResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: SolutionTypesListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<SolutionTypeResource>;
  /**
   * List SolutionTypeResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SolutionTypesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<SolutionTypeResource>;
  /**
   * Get a SolutionTypeResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param solutionType Solution Type resource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    solutionType: string,
    options?: SolutionTypesGetOptionalParams,
  ): Promise<SolutionTypesGetResponse>;
}
