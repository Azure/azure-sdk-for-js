/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const SolutionConfigurationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SolutionConfiguration",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SolutionConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionConfigurationProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      solutionType: {
        serializedName: "solutionType",
        required: true,
        type: {
          name: "String",
        },
      },
      solutionSettings: {
        serializedName: "solutionSettings",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      statusDetails: {
        serializedName: "statusDetails",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      lastSyncTime: {
        serializedName: "lastSyncTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const SolutionConfigurationPropertiesUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SolutionConfigurationPropertiesUpdate",
      modelProperties: {
        solutionType: {
          serializedName: "solutionType",
          type: {
            name: "String",
          },
        },
        solutionSettings: {
          serializedName: "solutionSettings",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
      },
    },
  };

export const InventoryResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InventoryResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InventoryResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InventoryProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InventoryProperties",
    modelProperties: {
      cloudNativeType: {
        serializedName: "cloudNativeType",
        type: {
          name: "String",
        },
      },
      cloudNativeResourceId: {
        serializedName: "cloudNativeResourceId",
        type: {
          name: "String",
        },
      },
      azureResourceId: {
        serializedName: "azureResourceId",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      statusDetails: {
        serializedName: "statusDetails",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationStatusResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatusResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "resourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String",
        },
      },
      percentComplete: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "percentComplete",
        type: {
          name: "Number",
        },
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
      operations: {
        serializedName: "operations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationStatusResult",
            },
          },
        },
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const GenerateAwsTemplateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenerateAwsTemplateRequest",
    modelProperties: {
      connectorId: {
        serializedName: "connectorId",
        required: true,
        type: {
          name: "String",
        },
      },
      solutionTypes: {
        serializedName: "solutionTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SolutionTypeSettings",
            },
          },
        },
      },
    },
  },
};

export const SolutionTypeSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionTypeSettings",
    modelProperties: {
      solutionType: {
        serializedName: "solutionType",
        required: true,
        type: {
          name: "String",
        },
      },
      solutionSettings: {
        serializedName: "solutionSettings",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const PublicCloudConnectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PublicCloudConnectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PublicCloudConnector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PublicCloudConnectorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PublicCloudConnectorProperties",
    modelProperties: {
      awsCloudProfile: {
        serializedName: "awsCloudProfile",
        type: {
          name: "Composite",
          className: "AwsCloudProfile",
        },
      },
      hostType: {
        serializedName: "hostType",
        required: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      connectorPrimaryIdentifier: {
        serializedName: "connectorPrimaryIdentifier",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AwsCloudProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AwsCloudProfile",
    modelProperties: {
      accountId: {
        serializedName: "accountId",
        required: true,
        type: {
          name: "String",
        },
      },
      excludedAccounts: {
        serializedName: "excludedAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      isOrganizationalAccount: {
        defaultValue: false,
        serializedName: "isOrganizationalAccount",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const SolutionTypeResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionTypeResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SolutionTypeResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SolutionTypeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionTypeProperties",
    modelProperties: {
      solutionType: {
        serializedName: "solutionType",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      supportedAzureRegions: {
        serializedName: "supportedAzureRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      solutionSettings: {
        serializedName: "solutionSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SolutionTypeSettingsProperties",
            },
          },
        },
      },
    },
  },
};

export const SolutionTypeSettingsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionTypeSettingsProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        required: true,
        type: {
          name: "String",
        },
      },
      allowedValues: {
        serializedName: "allowedValues",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      defaultValue: {
        serializedName: "defaultValue",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PublicCloudConnectorPropertiesUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PublicCloudConnectorPropertiesUpdate",
      modelProperties: {
        awsCloudProfile: {
          serializedName: "awsCloudProfile",
          type: {
            name: "Composite",
            className: "AwsCloudProfileUpdate",
          },
        },
      },
    },
  };

export const AwsCloudProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AwsCloudProfileUpdate",
    modelProperties: {
      excludedAccounts: {
        serializedName: "excludedAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EndpointsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EndpointResource",
            },
          },
        },
      },
    },
  },
};

export const EndpointProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServiceConfigurationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceConfigurationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceConfigurationResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServiceConfigurationResourcePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceConfigurationResourcePatch",
    modelProperties: {
      port: {
        serializedName: "properties.port",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ListCredentialsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListCredentialsRequest",
    modelProperties: {
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EndpointAccessResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointAccessResource",
    modelProperties: {
      namespaceName: {
        constraints: {
          MaxLength: 200,
          MinLength: 1,
        },
        serializedName: "relay.namespaceName",
        type: {
          name: "String",
        },
      },
      namespaceNameSuffix: {
        constraints: {
          MaxLength: 100,
          MinLength: 1,
        },
        serializedName: "relay.namespaceNameSuffix",
        type: {
          name: "String",
        },
      },
      hybridConnectionName: {
        serializedName: "relay.hybridConnectionName",
        type: {
          name: "String",
        },
      },
      accessKey: {
        serializedName: "relay.accessKey",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      expiresOn: {
        serializedName: "relay.expiresOn",
        type: {
          name: "Number",
        },
      },
      serviceConfigurationToken: {
        serializedName: "relay.serviceConfigurationToken",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ListIngressGatewayCredentialsRequest: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ListIngressGatewayCredentialsRequest",
      modelProperties: {
        serviceName: {
          serializedName: "serviceName",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const IngressGatewayResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IngressGatewayResource",
    modelProperties: {
      hostname: {
        serializedName: "ingress.hostname",
        type: {
          name: "String",
        },
      },
      serverId: {
        serializedName: "ingress.aadProfile.serverId",
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "ingress.aadProfile.tenantId",
        type: {
          name: "String",
        },
      },
      namespaceName: {
        constraints: {
          MaxLength: 200,
          MinLength: 1,
        },
        serializedName: "relay.namespaceName",
        type: {
          name: "String",
        },
      },
      namespaceNameSuffix: {
        constraints: {
          MaxLength: 100,
          MinLength: 1,
        },
        serializedName: "relay.namespaceNameSuffix",
        type: {
          name: "String",
        },
      },
      hybridConnectionName: {
        serializedName: "relay.hybridConnectionName",
        type: {
          name: "String",
        },
      },
      accessKey: {
        serializedName: "relay.accessKey",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      expiresOn: {
        serializedName: "relay.expiresOn",
        type: {
          name: "Number",
        },
      },
      serviceConfigurationToken: {
        serializedName: "relay.serviceConfigurationToken",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedProxyRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedProxyRequest",
    modelProperties: {
      service: {
        serializedName: "service",
        required: true,
        type: {
          name: "String",
        },
      },
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String",
        },
      },
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedProxyResource",
    modelProperties: {
      proxy: {
        serializedName: "proxy",
        required: true,
        type: {
          name: "String",
        },
      },
      expiresOn: {
        serializedName: "expiresOn",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SolutionTypePermissions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionTypePermissions",
    modelProperties: {
      solutionType: {
        serializedName: "solutionType",
        required: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String",
        },
      },
      statusDetails: {
        serializedName: "statusDetails",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TestPermissionResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestPermissionResult",
    modelProperties: {
      solutionTypes: {
        serializedName: "solutionTypes",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SolutionTypePermissions",
            },
          },
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureResourceManagerCommonTypesTrackedResourceUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureResourceManagerCommonTypesTrackedResourceUpdate",
      modelProperties: {
        ...Resource.type.modelProperties,
        tags: {
          serializedName: "tags",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
      },
    },
  };

export const SolutionConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionConfiguration",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SolutionConfigurationProperties",
        },
      },
    },
  },
};

export const SolutionConfigurationUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionConfigurationUpdate",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SolutionConfigurationPropertiesUpdate",
        },
      },
    },
  },
};

export const InventoryResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InventoryResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "InventoryProperties",
        },
      },
    },
  },
};

export const SolutionTypeResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionTypeResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SolutionTypeProperties",
        },
      },
    },
  },
};

export const EndpointResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "EndpointProperties",
        },
      },
    },
  },
};

export const ServiceConfigurationResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceConfigurationResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      serviceName: {
        serializedName: "properties.serviceName",
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String",
        },
      },
      port: {
        serializedName: "properties.port",
        type: {
          name: "Number",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PublicCloudConnector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PublicCloudConnector",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PublicCloudConnectorProperties",
        },
      },
    },
  },
};

export const PublicCloudConnectorUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PublicCloudConnectorUpdate",
    modelProperties: {
      ...AzureResourceManagerCommonTypesTrackedResourceUpdate.type
        .modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PublicCloudConnectorPropertiesUpdate",
        },
      },
    },
  },
};

export const SolutionConfigurationsSyncNowHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SolutionConfigurationsSyncNowHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const PublicCloudConnectorsCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PublicCloudConnectorsCreateOrUpdateHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const PublicCloudConnectorsTestPermissionsHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PublicCloudConnectorsTestPermissionsHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };
