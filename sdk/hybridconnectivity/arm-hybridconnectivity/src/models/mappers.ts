/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const EndpointsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EndpointResource"
            }
          }
        }
      }
    }
  }
};

export const EndpointProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ServiceConfigurationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceConfigurationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceConfigurationResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceConfigurationResourcePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceConfigurationResourcePatch",
    modelProperties: {
      port: {
        serializedName: "properties.port",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ListCredentialsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListCredentialsRequest",
    modelProperties: {
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EndpointAccessResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointAccessResource",
    modelProperties: {
      namespaceName: {
        constraints: {
          MaxLength: 200,
          MinLength: 1
        },
        serializedName: "relay.namespaceName",
        type: {
          name: "String"
        }
      },
      namespaceNameSuffix: {
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        serializedName: "relay.namespaceNameSuffix",
        type: {
          name: "String"
        }
      },
      hybridConnectionName: {
        serializedName: "relay.hybridConnectionName",
        type: {
          name: "String"
        }
      },
      accessKey: {
        serializedName: "relay.accessKey",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expiresOn: {
        serializedName: "relay.expiresOn",
        type: {
          name: "Number"
        }
      },
      serviceConfigurationToken: {
        serializedName: "relay.serviceConfigurationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ListIngressGatewayCredentialsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListIngressGatewayCredentialsRequest",
    modelProperties: {
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IngressGatewayResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IngressGatewayResource",
    modelProperties: {
      hostname: {
        serializedName: "ingress.hostname",
        type: {
          name: "String"
        }
      },
      serverId: {
        serializedName: "ingress.aadProfile.serverId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "ingress.aadProfile.tenantId",
        type: {
          name: "String"
        }
      },
      namespaceName: {
        constraints: {
          MaxLength: 200,
          MinLength: 1
        },
        serializedName: "relay.namespaceName",
        type: {
          name: "String"
        }
      },
      namespaceNameSuffix: {
        constraints: {
          MaxLength: 100,
          MinLength: 1
        },
        serializedName: "relay.namespaceNameSuffix",
        type: {
          name: "String"
        }
      },
      hybridConnectionName: {
        serializedName: "relay.hybridConnectionName",
        type: {
          name: "String"
        }
      },
      accessKey: {
        serializedName: "relay.accessKey",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expiresOn: {
        serializedName: "relay.expiresOn",
        type: {
          name: "Number"
        }
      },
      serviceConfigurationToken: {
        serializedName: "relay.serviceConfigurationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedProxyRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedProxyRequest",
    modelProperties: {
      service: {
        serializedName: "service",
        required: true,
        type: {
          name: "String"
        }
      },
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedProxyResource",
    modelProperties: {
      proxy: {
        serializedName: "proxy",
        required: true,
        type: {
          name: "String"
        }
      },
      expiresOn: {
        serializedName: "expiresOn",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const EndpointResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "EndpointProperties"
        }
      }
    }
  }
};

export const ServiceConfigurationResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceConfigurationResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      serviceName: {
        serializedName: "properties.serviceName",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "properties.port",
        type: {
          name: "Number"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};
