/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion0: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "api-version",
    defaultValue: '2020-03-01',
    type: {
      name: "String"
    }
  }
};
export const apiVersion1: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const apiVersion2: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "api-version",
    defaultValue: '2020-01-01-preview',
    type: {
      name: "String"
    }
  }
};
export const applicationName: msRest.OperationURLParameter = {
  parameterPath: "applicationName",
  mapper: {
    required: true,
    serializedName: "applicationName",
    type: {
      name: "String"
    }
  }
};
export const applicationTypeName: msRest.OperationURLParameter = {
  parameterPath: "applicationTypeName",
  mapper: {
    required: true,
    serializedName: "applicationTypeName",
    type: {
      name: "String"
    }
  }
};
export const clusterName: msRest.OperationURLParameter = {
  parameterPath: "clusterName",
  mapper: {
    required: true,
    serializedName: "clusterName",
    type: {
      name: "String"
    }
  }
};
export const clusterVersion: msRest.OperationURLParameter = {
  parameterPath: "clusterVersion",
  mapper: {
    required: true,
    serializedName: "clusterVersion",
    type: {
      name: "String"
    }
  }
};
export const environment: msRest.OperationURLParameter = {
  parameterPath: "environment",
  mapper: {
    required: true,
    serializedName: "environment",
    type: {
      name: "String"
    }
  }
};
export const location: msRest.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    required: true,
    serializedName: "location",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const nodeTypeName: msRest.OperationURLParameter = {
  parameterPath: "nodeTypeName",
  mapper: {
    required: true,
    serializedName: "nodeTypeName",
    type: {
      name: "String"
    }
  }
};
export const osType: msRest.OperationURLParameter = {
  parameterPath: "osType",
  mapper: {
    required: true,
    serializedName: "osType",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const serviceName: msRest.OperationURLParameter = {
  parameterPath: "serviceName",
  mapper: {
    required: true,
    serializedName: "serviceName",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const version: msRest.OperationURLParameter = {
  parameterPath: "version",
  mapper: {
    required: true,
    serializedName: "version",
    type: {
      name: "String"
    }
  }
};
