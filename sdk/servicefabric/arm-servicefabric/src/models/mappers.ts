/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ApplicationTypeVersionsCleanupPolicy: msRest.CompositeMapper = {
  serializedName: "ApplicationTypeVersionsCleanupPolicy",
  type: {
    name: "Composite",
    className: "ApplicationTypeVersionsCleanupPolicy",
    modelProperties: {
      maxUnusedVersionsToKeep: {
        required: true,
        serializedName: "maxUnusedVersionsToKeep",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServiceTypeDeltaHealthPolicy: msRest.CompositeMapper = {
  serializedName: "ServiceTypeDeltaHealthPolicy",
  type: {
    name: "Composite",
    className: "ServiceTypeDeltaHealthPolicy",
    modelProperties: {
      maxPercentDeltaUnhealthyServices: {
        serializedName: "maxPercentDeltaUnhealthyServices",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationDeltaHealthPolicy: msRest.CompositeMapper = {
  serializedName: "ApplicationDeltaHealthPolicy",
  type: {
    name: "Composite",
    className: "ApplicationDeltaHealthPolicy",
    modelProperties: {
      defaultServiceTypeDeltaHealthPolicy: {
        serializedName: "defaultServiceTypeDeltaHealthPolicy",
        type: {
          name: "Composite",
          className: "ServiceTypeDeltaHealthPolicy"
        }
      },
      serviceTypeDeltaHealthPolicies: {
        serializedName: "serviceTypeDeltaHealthPolicies",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ServiceTypeDeltaHealthPolicy"
            }
          }
        }
      }
    }
  }
};

export const ServiceTypeHealthPolicy: msRest.CompositeMapper = {
  serializedName: "ServiceTypeHealthPolicy",
  type: {
    name: "Composite",
    className: "ServiceTypeHealthPolicy",
    modelProperties: {
      maxPercentUnhealthyServices: {
        serializedName: "maxPercentUnhealthyServices",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationHealthPolicy: msRest.CompositeMapper = {
  serializedName: "ApplicationHealthPolicy",
  type: {
    name: "Composite",
    className: "ApplicationHealthPolicy",
    modelProperties: {
      defaultServiceTypeHealthPolicy: {
        serializedName: "defaultServiceTypeHealthPolicy",
        type: {
          name: "Composite",
          className: "ServiceTypeHealthPolicy"
        }
      },
      serviceTypeHealthPolicies: {
        serializedName: "serviceTypeHealthPolicies",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ServiceTypeHealthPolicy"
            }
          }
        }
      }
    }
  }
};

export const AvailableOperationDisplay: msRest.CompositeMapper = {
  serializedName: "AvailableOperationDisplay",
  type: {
    name: "Composite",
    className: "AvailableOperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureActiveDirectory: msRest.CompositeMapper = {
  serializedName: "AzureActiveDirectory",
  type: {
    name: "Composite",
    className: "AzureActiveDirectory",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      clusterApplication: {
        serializedName: "clusterApplication",
        type: {
          name: "String"
        }
      },
      clientApplication: {
        serializedName: "clientApplication",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateDescription: msRest.CompositeMapper = {
  serializedName: "CertificateDescription",
  type: {
    name: "Composite",
    className: "CertificateDescription",
    modelProperties: {
      thumbprint: {
        required: true,
        serializedName: "thumbprint",
        type: {
          name: "String"
        }
      },
      thumbprintSecondary: {
        serializedName: "thumbprintSecondary",
        type: {
          name: "String"
        }
      },
      x509StoreName: {
        serializedName: "x509StoreName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientCertificateCommonName: msRest.CompositeMapper = {
  serializedName: "ClientCertificateCommonName",
  type: {
    name: "Composite",
    className: "ClientCertificateCommonName",
    modelProperties: {
      isAdmin: {
        required: true,
        serializedName: "isAdmin",
        type: {
          name: "Boolean"
        }
      },
      certificateCommonName: {
        required: true,
        serializedName: "certificateCommonName",
        type: {
          name: "String"
        }
      },
      certificateIssuerThumbprint: {
        required: true,
        serializedName: "certificateIssuerThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientCertificateThumbprint: msRest.CompositeMapper = {
  serializedName: "ClientCertificateThumbprint",
  type: {
    name: "Composite",
    className: "ClientCertificateThumbprint",
    modelProperties: {
      isAdmin: {
        required: true,
        serializedName: "isAdmin",
        type: {
          name: "Boolean"
        }
      },
      certificateThumbprint: {
        required: true,
        serializedName: "certificateThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterVersionDetails: msRest.CompositeMapper = {
  serializedName: "ClusterVersionDetails",
  type: {
    name: "Composite",
    className: "ClusterVersionDetails",
    modelProperties: {
      codeVersion: {
        serializedName: "codeVersion",
        type: {
          name: "String"
        }
      },
      supportExpiryUtc: {
        serializedName: "supportExpiryUtc",
        type: {
          name: "String"
        }
      },
      environment: {
        serializedName: "environment",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerCertificateCommonName: msRest.CompositeMapper = {
  serializedName: "ServerCertificateCommonName",
  type: {
    name: "Composite",
    className: "ServerCertificateCommonName",
    modelProperties: {
      certificateCommonName: {
        required: true,
        serializedName: "certificateCommonName",
        type: {
          name: "String"
        }
      },
      certificateIssuerThumbprint: {
        required: true,
        serializedName: "certificateIssuerThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerCertificateCommonNames: msRest.CompositeMapper = {
  serializedName: "ServerCertificateCommonNames",
  type: {
    name: "Composite",
    className: "ServerCertificateCommonNames",
    modelProperties: {
      commonNames: {
        serializedName: "commonNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerCertificateCommonName"
            }
          }
        }
      },
      x509StoreName: {
        serializedName: "x509StoreName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsStorageAccountConfig: msRest.CompositeMapper = {
  serializedName: "DiagnosticsStorageAccountConfig",
  type: {
    name: "Composite",
    className: "DiagnosticsStorageAccountConfig",
    modelProperties: {
      storageAccountName: {
        required: true,
        serializedName: "storageAccountName",
        type: {
          name: "String"
        }
      },
      protectedAccountKeyName: {
        required: true,
        serializedName: "protectedAccountKeyName",
        type: {
          name: "String"
        }
      },
      protectedAccountKeyName2: {
        serializedName: "protectedAccountKeyName2",
        type: {
          name: "String"
        }
      },
      blobEndpoint: {
        required: true,
        serializedName: "blobEndpoint",
        type: {
          name: "String"
        }
      },
      queueEndpoint: {
        required: true,
        serializedName: "queueEndpoint",
        type: {
          name: "String"
        }
      },
      tableEndpoint: {
        required: true,
        serializedName: "tableEndpoint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SettingsParameterDescription: msRest.CompositeMapper = {
  serializedName: "SettingsParameterDescription",
  type: {
    name: "Composite",
    className: "SettingsParameterDescription",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SettingsSectionDescription: msRest.CompositeMapper = {
  serializedName: "SettingsSectionDescription",
  type: {
    name: "Composite",
    className: "SettingsSectionDescription",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      parameters: {
        required: true,
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SettingsParameterDescription"
            }
          }
        }
      }
    }
  }
};

export const EndpointRangeDescription: msRest.CompositeMapper = {
  serializedName: "EndpointRangeDescription",
  type: {
    name: "Composite",
    className: "EndpointRangeDescription",
    modelProperties: {
      startPort: {
        required: true,
        serializedName: "startPort",
        type: {
          name: "Number"
        }
      },
      endPort: {
        required: true,
        serializedName: "endPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const NodeTypeDescription: msRest.CompositeMapper = {
  serializedName: "NodeTypeDescription",
  type: {
    name: "Composite",
    className: "NodeTypeDescription",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      placementProperties: {
        serializedName: "placementProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      capacities: {
        serializedName: "capacities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      clientConnectionEndpointPort: {
        required: true,
        serializedName: "clientConnectionEndpointPort",
        type: {
          name: "Number"
        }
      },
      httpGatewayEndpointPort: {
        required: true,
        serializedName: "httpGatewayEndpointPort",
        type: {
          name: "Number"
        }
      },
      durabilityLevel: {
        serializedName: "durabilityLevel",
        type: {
          name: "String"
        }
      },
      applicationPorts: {
        serializedName: "applicationPorts",
        type: {
          name: "Composite",
          className: "EndpointRangeDescription"
        }
      },
      ephemeralPorts: {
        serializedName: "ephemeralPorts",
        type: {
          name: "Composite",
          className: "EndpointRangeDescription"
        }
      },
      isPrimary: {
        required: true,
        serializedName: "isPrimary",
        type: {
          name: "Boolean"
        }
      },
      vmInstanceCount: {
        required: true,
        serializedName: "vmInstanceCount",
        constraints: {
          InclusiveMaximum: 2147483647,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      reverseProxyEndpointPort: {
        serializedName: "reverseProxyEndpointPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ClusterHealthPolicy: msRest.CompositeMapper = {
  serializedName: "ClusterHealthPolicy",
  type: {
    name: "Composite",
    className: "ClusterHealthPolicy",
    modelProperties: {
      maxPercentUnhealthyNodes: {
        serializedName: "maxPercentUnhealthyNodes",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      maxPercentUnhealthyApplications: {
        serializedName: "maxPercentUnhealthyApplications",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      applicationHealthPolicies: {
        serializedName: "applicationHealthPolicies",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ApplicationHealthPolicy"
            }
          }
        }
      }
    }
  }
};

export const ClusterUpgradeDeltaHealthPolicy: msRest.CompositeMapper = {
  serializedName: "ClusterUpgradeDeltaHealthPolicy",
  type: {
    name: "Composite",
    className: "ClusterUpgradeDeltaHealthPolicy",
    modelProperties: {
      maxPercentDeltaUnhealthyNodes: {
        required: true,
        serializedName: "maxPercentDeltaUnhealthyNodes",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      maxPercentUpgradeDomainDeltaUnhealthyNodes: {
        required: true,
        serializedName: "maxPercentUpgradeDomainDeltaUnhealthyNodes",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      maxPercentDeltaUnhealthyApplications: {
        required: true,
        serializedName: "maxPercentDeltaUnhealthyApplications",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      applicationDeltaHealthPolicies: {
        serializedName: "applicationDeltaHealthPolicies",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ApplicationDeltaHealthPolicy"
            }
          }
        }
      }
    }
  }
};

export const ClusterUpgradePolicy: msRest.CompositeMapper = {
  serializedName: "ClusterUpgradePolicy",
  type: {
    name: "Composite",
    className: "ClusterUpgradePolicy",
    modelProperties: {
      forceRestart: {
        serializedName: "forceRestart",
        type: {
          name: "Boolean"
        }
      },
      upgradeReplicaSetCheckTimeout: {
        required: true,
        serializedName: "upgradeReplicaSetCheckTimeout",
        type: {
          name: "String"
        }
      },
      healthCheckWaitDuration: {
        required: true,
        serializedName: "healthCheckWaitDuration",
        type: {
          name: "String"
        }
      },
      healthCheckStableDuration: {
        required: true,
        serializedName: "healthCheckStableDuration",
        type: {
          name: "String"
        }
      },
      healthCheckRetryTimeout: {
        required: true,
        serializedName: "healthCheckRetryTimeout",
        type: {
          name: "String"
        }
      },
      upgradeTimeout: {
        required: true,
        serializedName: "upgradeTimeout",
        type: {
          name: "String"
        }
      },
      upgradeDomainTimeout: {
        required: true,
        serializedName: "upgradeDomainTimeout",
        type: {
          name: "String"
        }
      },
      healthPolicy: {
        required: true,
        serializedName: "healthPolicy",
        type: {
          name: "Composite",
          className: "ClusterHealthPolicy"
        }
      },
      deltaHealthPolicy: {
        serializedName: "deltaHealthPolicy",
        type: {
          name: "Composite",
          className: "ClusterUpgradeDeltaHealthPolicy"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Cluster: msRest.CompositeMapper = {
  serializedName: "Cluster",
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      ...Resource.type.modelProperties,
      addOnFeatures: {
        serializedName: "properties.addOnFeatures",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      availableClusterVersions: {
        readOnly: true,
        serializedName: "properties.availableClusterVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClusterVersionDetails"
            }
          }
        }
      },
      azureActiveDirectory: {
        serializedName: "properties.azureActiveDirectory",
        type: {
          name: "Composite",
          className: "AzureActiveDirectory"
        }
      },
      certificate: {
        serializedName: "properties.certificate",
        type: {
          name: "Composite",
          className: "CertificateDescription"
        }
      },
      certificateCommonNames: {
        serializedName: "properties.certificateCommonNames",
        type: {
          name: "Composite",
          className: "ServerCertificateCommonNames"
        }
      },
      clientCertificateCommonNames: {
        serializedName: "properties.clientCertificateCommonNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientCertificateCommonName"
            }
          }
        }
      },
      clientCertificateThumbprints: {
        serializedName: "properties.clientCertificateThumbprints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientCertificateThumbprint"
            }
          }
        }
      },
      clusterCodeVersion: {
        serializedName: "properties.clusterCodeVersion",
        type: {
          name: "String"
        }
      },
      clusterEndpoint: {
        readOnly: true,
        serializedName: "properties.clusterEndpoint",
        type: {
          name: "String"
        }
      },
      clusterId: {
        readOnly: true,
        serializedName: "properties.clusterId",
        type: {
          name: "String"
        }
      },
      clusterState: {
        readOnly: true,
        serializedName: "properties.clusterState",
        type: {
          name: "String"
        }
      },
      diagnosticsStorageAccountConfig: {
        serializedName: "properties.diagnosticsStorageAccountConfig",
        type: {
          name: "Composite",
          className: "DiagnosticsStorageAccountConfig"
        }
      },
      eventStoreServiceEnabled: {
        serializedName: "properties.eventStoreServiceEnabled",
        type: {
          name: "Boolean"
        }
      },
      fabricSettings: {
        serializedName: "properties.fabricSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SettingsSectionDescription"
            }
          }
        }
      },
      managementEndpoint: {
        required: true,
        serializedName: "properties.managementEndpoint",
        type: {
          name: "String"
        }
      },
      nodeTypes: {
        required: true,
        serializedName: "properties.nodeTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NodeTypeDescription"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      reliabilityLevel: {
        serializedName: "properties.reliabilityLevel",
        type: {
          name: "String"
        }
      },
      reverseProxyCertificate: {
        serializedName: "properties.reverseProxyCertificate",
        type: {
          name: "Composite",
          className: "CertificateDescription"
        }
      },
      reverseProxyCertificateCommonNames: {
        serializedName: "properties.reverseProxyCertificateCommonNames",
        type: {
          name: "Composite",
          className: "ServerCertificateCommonNames"
        }
      },
      upgradeDescription: {
        serializedName: "properties.upgradeDescription",
        type: {
          name: "Composite",
          className: "ClusterUpgradePolicy"
        }
      },
      upgradeMode: {
        serializedName: "properties.upgradeMode",
        type: {
          name: "String"
        }
      },
      applicationTypeVersionsCleanupPolicy: {
        serializedName: "properties.applicationTypeVersionsCleanupPolicy",
        type: {
          name: "Composite",
          className: "ApplicationTypeVersionsCleanupPolicy"
        }
      },
      vmImage: {
        serializedName: "properties.vmImage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterCodeVersionsResult: msRest.CompositeMapper = {
  serializedName: "ClusterCodeVersionsResult",
  type: {
    name: "Composite",
    className: "ClusterCodeVersionsResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      codeVersion: {
        serializedName: "properties.codeVersion",
        type: {
          name: "String"
        }
      },
      supportExpiryUtc: {
        serializedName: "properties.supportExpiryUtc",
        type: {
          name: "String"
        }
      },
      environment: {
        serializedName: "properties.environment",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterCodeVersionsListResult: msRest.CompositeMapper = {
  serializedName: "ClusterCodeVersionsListResult",
  type: {
    name: "Composite",
    className: "ClusterCodeVersionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClusterCodeVersionsResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterListResult: msRest.CompositeMapper = {
  serializedName: "ClusterListResult",
  type: {
    name: "Composite",
    className: "ClusterListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Cluster"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ClusterUpdateParameters",
  type: {
    name: "Composite",
    className: "ClusterUpdateParameters",
    modelProperties: {
      addOnFeatures: {
        serializedName: "properties.addOnFeatures",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      certificate: {
        serializedName: "properties.certificate",
        type: {
          name: "Composite",
          className: "CertificateDescription"
        }
      },
      certificateCommonNames: {
        serializedName: "properties.certificateCommonNames",
        type: {
          name: "Composite",
          className: "ServerCertificateCommonNames"
        }
      },
      clientCertificateCommonNames: {
        serializedName: "properties.clientCertificateCommonNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientCertificateCommonName"
            }
          }
        }
      },
      clientCertificateThumbprints: {
        serializedName: "properties.clientCertificateThumbprints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientCertificateThumbprint"
            }
          }
        }
      },
      clusterCodeVersion: {
        serializedName: "properties.clusterCodeVersion",
        type: {
          name: "String"
        }
      },
      eventStoreServiceEnabled: {
        serializedName: "properties.eventStoreServiceEnabled",
        type: {
          name: "Boolean"
        }
      },
      fabricSettings: {
        serializedName: "properties.fabricSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SettingsSectionDescription"
            }
          }
        }
      },
      nodeTypes: {
        serializedName: "properties.nodeTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NodeTypeDescription"
            }
          }
        }
      },
      reliabilityLevel: {
        serializedName: "properties.reliabilityLevel",
        type: {
          name: "String"
        }
      },
      reverseProxyCertificate: {
        serializedName: "properties.reverseProxyCertificate",
        type: {
          name: "Composite",
          className: "CertificateDescription"
        }
      },
      upgradeDescription: {
        serializedName: "properties.upgradeDescription",
        type: {
          name: "Composite",
          className: "ClusterUpgradePolicy"
        }
      },
      upgradeMode: {
        serializedName: "properties.upgradeMode",
        type: {
          name: "String"
        }
      },
      applicationTypeVersionsCleanupPolicy: {
        serializedName: "properties.applicationTypeVersionsCleanupPolicy",
        type: {
          name: "Composite",
          className: "ApplicationTypeVersionsCleanupPolicy"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OperationResult: msRest.CompositeMapper = {
  serializedName: "OperationResult",
  type: {
    name: "Composite",
    className: "OperationResult",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "AvailableOperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorModelError: msRest.CompositeMapper = {
  serializedName: "ErrorModelError",
  type: {
    name: "Composite",
    className: "ErrorModelError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "ErrorModel",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModelError"
        }
      }
    }
  }
};

export const ApplicationMetricDescription: msRest.CompositeMapper = {
  serializedName: "ApplicationMetricDescription",
  type: {
    name: "Composite",
    className: "ApplicationMetricDescription",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      maximumCapacity: {
        serializedName: "maximumCapacity",
        type: {
          name: "Number"
        }
      },
      reservationCapacity: {
        serializedName: "reservationCapacity",
        type: {
          name: "Number"
        }
      },
      totalApplicationCapacity: {
        serializedName: "totalApplicationCapacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const UserAssignedIdentity: msRest.CompositeMapper = {
  serializedName: "UserAssignedIdentity",
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        readOnly: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedIdentity: msRest.CompositeMapper = {
  serializedName: "ManagedIdentity",
  type: {
    name: "Composite",
    className: "ManagedIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ]
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "UserAssignedIdentity"
            }
          }
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationResource: msRest.CompositeMapper = {
  serializedName: "ApplicationResource",
  type: {
    name: "Composite",
    className: "ApplicationResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentity"
        }
      },
      typeVersion: {
        serializedName: "properties.typeVersion",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "properties.parameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      upgradePolicy: {
        serializedName: "properties.upgradePolicy",
        type: {
          name: "Composite",
          className: "ApplicationUpgradePolicy"
        }
      },
      minimumNodes: {
        serializedName: "properties.minimumNodes",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      maximumNodes: {
        serializedName: "properties.maximumNodes",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      removeApplicationCapacity: {
        serializedName: "properties.removeApplicationCapacity",
        type: {
          name: "Boolean"
        }
      },
      metrics: {
        serializedName: "properties.metrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationMetricDescription"
            }
          }
        }
      },
      managedIdentities: {
        serializedName: "properties.managedIdentities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationUserAssignedIdentity"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      typeName: {
        serializedName: "properties.typeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationResourceList: msRest.CompositeMapper = {
  serializedName: "ApplicationResourceList",
  type: {
    name: "Composite",
    className: "ApplicationResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArmRollingUpgradeMonitoringPolicy: msRest.CompositeMapper = {
  serializedName: "ArmRollingUpgradeMonitoringPolicy",
  type: {
    name: "Composite",
    className: "ArmRollingUpgradeMonitoringPolicy",
    modelProperties: {
      failureAction: {
        serializedName: "failureAction",
        type: {
          name: "String"
        }
      },
      healthCheckWaitDuration: {
        serializedName: "healthCheckWaitDuration",
        type: {
          name: "String"
        }
      },
      healthCheckStableDuration: {
        serializedName: "healthCheckStableDuration",
        type: {
          name: "String"
        }
      },
      healthCheckRetryTimeout: {
        serializedName: "healthCheckRetryTimeout",
        type: {
          name: "String"
        }
      },
      upgradeTimeout: {
        serializedName: "upgradeTimeout",
        type: {
          name: "String"
        }
      },
      upgradeDomainTimeout: {
        serializedName: "upgradeDomainTimeout",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArmServiceTypeHealthPolicy: msRest.CompositeMapper = {
  serializedName: "ArmServiceTypeHealthPolicy",
  type: {
    name: "Composite",
    className: "ArmServiceTypeHealthPolicy",
    modelProperties: {
      maxPercentUnhealthyServices: {
        serializedName: "maxPercentUnhealthyServices",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      maxPercentUnhealthyPartitionsPerService: {
        serializedName: "maxPercentUnhealthyPartitionsPerService",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      maxPercentUnhealthyReplicasPerPartition: {
        serializedName: "maxPercentUnhealthyReplicasPerPartition",
        defaultValue: 0,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ArmApplicationHealthPolicy: msRest.CompositeMapper = {
  serializedName: "ArmApplicationHealthPolicy",
  type: {
    name: "Composite",
    className: "ArmApplicationHealthPolicy",
    modelProperties: {
      considerWarningAsError: {
        serializedName: "considerWarningAsError",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      maxPercentUnhealthyDeployedApplications: {
        serializedName: "maxPercentUnhealthyDeployedApplications",
        defaultValue: 0,
        type: {
          name: "Number"
        }
      },
      defaultServiceTypeHealthPolicy: {
        serializedName: "defaultServiceTypeHealthPolicy",
        type: {
          name: "Composite",
          className: "ArmServiceTypeHealthPolicy"
        }
      },
      serviceTypeHealthPolicyMap: {
        serializedName: "serviceTypeHealthPolicyMap",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ArmServiceTypeHealthPolicy"
            }
          }
        }
      }
    }
  }
};

export const ApplicationUpgradePolicy: msRest.CompositeMapper = {
  serializedName: "ApplicationUpgradePolicy",
  type: {
    name: "Composite",
    className: "ApplicationUpgradePolicy",
    modelProperties: {
      upgradeReplicaSetCheckTimeout: {
        serializedName: "upgradeReplicaSetCheckTimeout",
        type: {
          name: "String"
        }
      },
      forceRestart: {
        serializedName: "forceRestart",
        type: {
          name: "Boolean"
        }
      },
      rollingUpgradeMonitoringPolicy: {
        serializedName: "rollingUpgradeMonitoringPolicy",
        type: {
          name: "Composite",
          className: "ArmRollingUpgradeMonitoringPolicy"
        }
      },
      applicationHealthPolicy: {
        serializedName: "applicationHealthPolicy",
        type: {
          name: "Composite",
          className: "ArmApplicationHealthPolicy"
        }
      },
      upgradeMode: {
        serializedName: "upgradeMode",
        defaultValue: 'Monitored',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationUserAssignedIdentity: msRest.CompositeMapper = {
  serializedName: "ApplicationUserAssignedIdentity",
  type: {
    name: "Composite",
    className: "ApplicationUserAssignedIdentity",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      principalId: {
        required: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationResourceUpdate: msRest.CompositeMapper = {
  serializedName: "ApplicationResourceUpdate",
  type: {
    name: "Composite",
    className: "ApplicationResourceUpdate",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      typeVersion: {
        serializedName: "properties.typeVersion",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "properties.parameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      upgradePolicy: {
        serializedName: "properties.upgradePolicy",
        type: {
          name: "Composite",
          className: "ApplicationUpgradePolicy"
        }
      },
      minimumNodes: {
        serializedName: "properties.minimumNodes",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      maximumNodes: {
        serializedName: "properties.maximumNodes",
        defaultValue: 0,
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      removeApplicationCapacity: {
        serializedName: "properties.removeApplicationCapacity",
        type: {
          name: "Boolean"
        }
      },
      metrics: {
        serializedName: "properties.metrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationMetricDescription"
            }
          }
        }
      },
      managedIdentities: {
        serializedName: "properties.managedIdentities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationUserAssignedIdentity"
            }
          }
        }
      }
    }
  }
};

export const ApplicationTypeResource: msRest.CompositeMapper = {
  serializedName: "ApplicationTypeResource",
  type: {
    name: "Composite",
    className: "ApplicationTypeResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationTypeResourceList: msRest.CompositeMapper = {
  serializedName: "ApplicationTypeResourceList",
  type: {
    name: "Composite",
    className: "ApplicationTypeResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationTypeResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationTypeVersionResource: msRest.CompositeMapper = {
  serializedName: "ApplicationTypeVersionResource",
  type: {
    name: "Composite",
    className: "ApplicationTypeVersionResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      appPackageUrl: {
        required: true,
        serializedName: "properties.appPackageUrl",
        type: {
          name: "String"
        }
      },
      defaultParameterList: {
        readOnly: true,
        serializedName: "properties.defaultParameterList",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApplicationTypeVersionResourceList: msRest.CompositeMapper = {
  serializedName: "ApplicationTypeVersionResourceList",
  type: {
    name: "Composite",
    className: "ApplicationTypeVersionResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationTypeVersionResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceCorrelationDescription: msRest.CompositeMapper = {
  serializedName: "ServiceCorrelationDescription",
  type: {
    name: "Composite",
    className: "ServiceCorrelationDescription",
    modelProperties: {
      scheme: {
        required: true,
        serializedName: "scheme",
        type: {
          name: "String"
        }
      },
      serviceName: {
        required: true,
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PartitionSchemeDescription: msRest.CompositeMapper = {
  serializedName: "PartitionSchemeDescription",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "partitionScheme",
      clientName: "partitionScheme"
    },
    uberParent: "PartitionSchemeDescription",
    className: "PartitionSchemeDescription",
    modelProperties: {
      partitionScheme: {
        required: true,
        serializedName: "partitionScheme",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NamedPartitionSchemeDescription: msRest.CompositeMapper = {
  serializedName: "Named",
  type: {
    name: "Composite",
    polymorphicDiscriminator: PartitionSchemeDescription.type.polymorphicDiscriminator,
    uberParent: "PartitionSchemeDescription",
    className: "NamedPartitionSchemeDescription",
    modelProperties: {
      ...PartitionSchemeDescription.type.modelProperties,
      count: {
        required: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      names: {
        required: true,
        serializedName: "names",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ServiceLoadMetricDescription: msRest.CompositeMapper = {
  serializedName: "ServiceLoadMetricDescription",
  type: {
    name: "Composite",
    className: "ServiceLoadMetricDescription",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      weight: {
        serializedName: "weight",
        type: {
          name: "String"
        }
      },
      primaryDefaultLoad: {
        serializedName: "primaryDefaultLoad",
        type: {
          name: "Number"
        }
      },
      secondaryDefaultLoad: {
        serializedName: "secondaryDefaultLoad",
        type: {
          name: "Number"
        }
      },
      defaultLoad: {
        serializedName: "defaultLoad",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServicePlacementPolicyDescription: msRest.CompositeMapper = {
  serializedName: "ServicePlacementPolicyDescription",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "ServicePlacementPolicyDescription",
    className: "ServicePlacementPolicyDescription",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResourcePropertiesBase: msRest.CompositeMapper = {
  serializedName: "ServiceResourcePropertiesBase",
  type: {
    name: "Composite",
    className: "ServiceResourcePropertiesBase",
    modelProperties: {
      placementConstraints: {
        serializedName: "placementConstraints",
        type: {
          name: "String"
        }
      },
      correlationScheme: {
        serializedName: "correlationScheme",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceCorrelationDescription"
            }
          }
        }
      },
      serviceLoadMetrics: {
        serializedName: "serviceLoadMetrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceLoadMetricDescription"
            }
          }
        }
      },
      servicePlacementPolicies: {
        serializedName: "servicePlacementPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServicePlacementPolicyDescription"
            }
          }
        }
      },
      defaultMoveCost: {
        serializedName: "defaultMoveCost",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResourceProperties: msRest.CompositeMapper = {
  serializedName: "ServiceResourceProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "serviceKind",
      clientName: "serviceKind"
    },
    uberParent: "ServiceResourceProperties",
    className: "ServiceResourceProperties",
    modelProperties: {
      ...ServiceResourcePropertiesBase.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      serviceTypeName: {
        serializedName: "serviceTypeName",
        type: {
          name: "String"
        }
      },
      partitionDescription: {
        serializedName: "partitionDescription",
        type: {
          name: "Composite",
          className: "PartitionSchemeDescription"
        }
      },
      servicePackageActivationMode: {
        serializedName: "servicePackageActivationMode",
        type: {
          name: "String"
        }
      },
      serviceDnsName: {
        serializedName: "serviceDnsName",
        type: {
          name: "String"
        }
      },
      serviceKind: {
        required: true,
        serializedName: "serviceKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResource: msRest.CompositeMapper = {
  serializedName: "ServiceResource",
  type: {
    name: "Composite",
    className: "ServiceResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      placementConstraints: {
        serializedName: "properties.placementConstraints",
        type: {
          name: "String"
        }
      },
      correlationScheme: {
        serializedName: "properties.correlationScheme",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceCorrelationDescription"
            }
          }
        }
      },
      serviceLoadMetrics: {
        serializedName: "properties.serviceLoadMetrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceLoadMetricDescription"
            }
          }
        }
      },
      servicePlacementPolicies: {
        serializedName: "properties.servicePlacementPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServicePlacementPolicyDescription"
            }
          }
        }
      },
      defaultMoveCost: {
        serializedName: "properties.defaultMoveCost",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      serviceTypeName: {
        serializedName: "properties.serviceTypeName",
        type: {
          name: "String"
        }
      },
      partitionDescription: {
        serializedName: "properties.partitionDescription",
        type: {
          name: "Composite",
          className: "PartitionSchemeDescription"
        }
      },
      servicePackageActivationMode: {
        serializedName: "properties.servicePackageActivationMode",
        type: {
          name: "String"
        }
      },
      serviceDnsName: {
        serializedName: "properties.serviceDnsName",
        type: {
          name: "String"
        }
      },
      serviceKind: {
        required: true,
        serializedName: "properties.serviceKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResourceList: msRest.CompositeMapper = {
  serializedName: "ServiceResourceList",
  type: {
    name: "Composite",
    className: "ServiceResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResourceUpdateProperties: msRest.CompositeMapper = {
  serializedName: "ServiceResourceUpdateProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "serviceKind",
      clientName: "serviceKind"
    },
    uberParent: "ServiceResourceUpdateProperties",
    className: "ServiceResourceUpdateProperties",
    modelProperties: {
      ...ServiceResourcePropertiesBase.type.modelProperties,
      serviceKind: {
        required: true,
        serializedName: "serviceKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResourceUpdate: msRest.CompositeMapper = {
  serializedName: "ServiceResourceUpdate",
  type: {
    name: "Composite",
    className: "ServiceResourceUpdate",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      placementConstraints: {
        serializedName: "properties.placementConstraints",
        type: {
          name: "String"
        }
      },
      correlationScheme: {
        serializedName: "properties.correlationScheme",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceCorrelationDescription"
            }
          }
        }
      },
      serviceLoadMetrics: {
        serializedName: "properties.serviceLoadMetrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceLoadMetricDescription"
            }
          }
        }
      },
      servicePlacementPolicies: {
        serializedName: "properties.servicePlacementPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServicePlacementPolicyDescription"
            }
          }
        }
      },
      defaultMoveCost: {
        serializedName: "properties.defaultMoveCost",
        type: {
          name: "String"
        }
      },
      serviceKind: {
        required: true,
        serializedName: "properties.serviceKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SingletonPartitionSchemeDescription: msRest.CompositeMapper = {
  serializedName: "Singleton",
  type: {
    name: "Composite",
    polymorphicDiscriminator: PartitionSchemeDescription.type.polymorphicDiscriminator,
    uberParent: "PartitionSchemeDescription",
    className: "SingletonPartitionSchemeDescription",
    modelProperties: {
      ...PartitionSchemeDescription.type.modelProperties
    }
  }
};

export const StatefulServiceProperties: msRest.CompositeMapper = {
  serializedName: "Stateful",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ServiceResourceProperties.type.polymorphicDiscriminator,
    uberParent: "ServiceResourceProperties",
    className: "StatefulServiceProperties",
    modelProperties: {
      ...ServiceResourceProperties.type.modelProperties,
      hasPersistedState: {
        serializedName: "hasPersistedState",
        type: {
          name: "Boolean"
        }
      },
      targetReplicaSetSize: {
        serializedName: "targetReplicaSetSize",
        constraints: {
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      minReplicaSetSize: {
        serializedName: "minReplicaSetSize",
        constraints: {
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      replicaRestartWaitDuration: {
        serializedName: "replicaRestartWaitDuration",
        type: {
          name: "DateTime"
        }
      },
      quorumLossWaitDuration: {
        serializedName: "quorumLossWaitDuration",
        type: {
          name: "DateTime"
        }
      },
      standByReplicaKeepDuration: {
        serializedName: "standByReplicaKeepDuration",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const StatefulServiceUpdateProperties: msRest.CompositeMapper = {
  serializedName: "Stateful",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ServiceResourceUpdateProperties.type.polymorphicDiscriminator,
    uberParent: "ServiceResourceUpdateProperties",
    className: "StatefulServiceUpdateProperties",
    modelProperties: {
      ...ServiceResourceUpdateProperties.type.modelProperties,
      targetReplicaSetSize: {
        serializedName: "targetReplicaSetSize",
        constraints: {
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      minReplicaSetSize: {
        serializedName: "minReplicaSetSize",
        constraints: {
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      replicaRestartWaitDuration: {
        serializedName: "replicaRestartWaitDuration",
        type: {
          name: "DateTime"
        }
      },
      quorumLossWaitDuration: {
        serializedName: "quorumLossWaitDuration",
        type: {
          name: "DateTime"
        }
      },
      standByReplicaKeepDuration: {
        serializedName: "standByReplicaKeepDuration",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const StatelessServiceProperties: msRest.CompositeMapper = {
  serializedName: "Stateless",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ServiceResourceProperties.type.polymorphicDiscriminator,
    uberParent: "ServiceResourceProperties",
    className: "StatelessServiceProperties",
    modelProperties: {
      ...ServiceResourceProperties.type.modelProperties,
      instanceCount: {
        serializedName: "instanceCount",
        constraints: {
          InclusiveMinimum: -1
        },
        type: {
          name: "Number"
        }
      },
      instanceCloseDelayDuration: {
        serializedName: "instanceCloseDelayDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StatelessServiceUpdateProperties: msRest.CompositeMapper = {
  serializedName: "Stateless",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ServiceResourceUpdateProperties.type.polymorphicDiscriminator,
    uberParent: "ServiceResourceUpdateProperties",
    className: "StatelessServiceUpdateProperties",
    modelProperties: {
      ...ServiceResourceUpdateProperties.type.modelProperties,
      instanceCount: {
        serializedName: "instanceCount",
        constraints: {
          InclusiveMinimum: -1
        },
        type: {
          name: "Number"
        }
      },
      instanceCloseDelayDuration: {
        serializedName: "instanceCloseDelayDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UniformInt64RangePartitionSchemeDescription: msRest.CompositeMapper = {
  serializedName: "UniformInt64Range",
  type: {
    name: "Composite",
    polymorphicDiscriminator: PartitionSchemeDescription.type.polymorphicDiscriminator,
    uberParent: "PartitionSchemeDescription",
    className: "UniformInt64RangePartitionSchemeDescription",
    modelProperties: {
      ...PartitionSchemeDescription.type.modelProperties,
      count: {
        required: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      lowKey: {
        required: true,
        serializedName: "lowKey",
        type: {
          name: "String"
        }
      },
      highKey: {
        required: true,
        serializedName: "highKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientCertificate: msRest.CompositeMapper = {
  serializedName: "ClientCertificate",
  type: {
    name: "Composite",
    className: "ClientCertificate",
    modelProperties: {
      isAdmin: {
        required: true,
        serializedName: "isAdmin",
        type: {
          name: "Boolean"
        }
      },
      thumbprint: {
        serializedName: "thumbprint",
        type: {
          name: "String"
        }
      },
      commonName: {
        serializedName: "commonName",
        type: {
          name: "String"
        }
      },
      issuerThumbprint: {
        serializedName: "issuerThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedClusterVersionDetails: msRest.CompositeMapper = {
  serializedName: "ManagedClusterVersionDetails",
  type: {
    name: "Composite",
    className: "ManagedClusterVersionDetails",
    modelProperties: {
      msiVersion: {
        serializedName: "msiVersion",
        type: {
          name: "String"
        }
      },
      supportExpiryUtc: {
        serializedName: "supportExpiryUtc",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancingRule: msRest.CompositeMapper = {
  serializedName: "LoadBalancingRule",
  type: {
    name: "Composite",
    className: "LoadBalancingRule",
    modelProperties: {
      frontendPort: {
        required: true,
        serializedName: "frontendPort",
        constraints: {
          InclusiveMaximum: 65534,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      backendPort: {
        required: true,
        serializedName: "backendPort",
        constraints: {
          InclusiveMaximum: 65534,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      protocol: {
        required: true,
        serializedName: "protocol",
        type: {
          name: "String"
        }
      },
      probeProtocol: {
        required: true,
        serializedName: "probeProtocol",
        type: {
          name: "String"
        }
      },
      probeRequestPath: {
        serializedName: "probeRequestPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedCluster: msRest.CompositeMapper = {
  serializedName: "ManagedCluster",
  type: {
    name: "Composite",
    className: "ManagedCluster",
    modelProperties: {
      ...Resource.type.modelProperties,
      dnsName: {
        required: true,
        serializedName: "properties.dnsName",
        type: {
          name: "String"
        }
      },
      fqdn: {
        readOnly: true,
        serializedName: "properties.fqdn",
        type: {
          name: "String"
        }
      },
      clusterId: {
        readOnly: true,
        serializedName: "properties.clusterId",
        type: {
          name: "String"
        }
      },
      clusterState: {
        readOnly: true,
        serializedName: "properties.clusterState",
        type: {
          name: "String"
        }
      },
      clusterCertificateThumbprint: {
        readOnly: true,
        serializedName: "properties.clusterCertificateThumbprint",
        type: {
          name: "String"
        }
      },
      clientConnectionPort: {
        serializedName: "properties.clientConnectionPort",
        defaultValue: 19000,
        type: {
          name: "Number"
        }
      },
      httpGatewayConnectionPort: {
        serializedName: "properties.httpGatewayConnectionPort",
        defaultValue: 19080,
        type: {
          name: "Number"
        }
      },
      adminUserName: {
        required: true,
        serializedName: "properties.adminUserName",
        type: {
          name: "String"
        }
      },
      adminPassword: {
        serializedName: "properties.adminPassword",
        type: {
          name: "String"
        }
      },
      loadBalancingRules: {
        serializedName: "properties.loadBalancingRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LoadBalancingRule"
            }
          }
        }
      },
      clients: {
        serializedName: "properties.clients",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientCertificate"
            }
          }
        }
      },
      azureActiveDirectory: {
        serializedName: "properties.azureActiveDirectory",
        type: {
          name: "Composite",
          className: "AzureActiveDirectory"
        }
      },
      fabricSettings: {
        serializedName: "properties.fabricSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SettingsSectionDescription"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      clusterCodeVersion: {
        serializedName: "properties.clusterCodeVersion",
        type: {
          name: "String"
        }
      },
      clusterUpgradeMode: {
        serializedName: "properties.clusterUpgradeMode",
        type: {
          name: "String"
        }
      },
      clusterUpgradeDescription: {
        serializedName: "properties.clusterUpgradeDescription",
        type: {
          name: "Composite",
          className: "ClusterUpgradePolicy"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const ManagedClusterUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ManagedClusterUpdateParameters",
  type: {
    name: "Composite",
    className: "ManagedClusterUpdateParameters",
    modelProperties: {
      clientConnectionPort: {
        serializedName: "properties.clientConnectionPort",
        type: {
          name: "Number"
        }
      },
      httpGatewayConnectionPort: {
        serializedName: "properties.httpGatewayConnectionPort",
        type: {
          name: "Number"
        }
      },
      loadBalancingRules: {
        serializedName: "properties.loadBalancingRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LoadBalancingRule"
            }
          }
        }
      },
      clients: {
        serializedName: "properties.clients",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientCertificate"
            }
          }
        }
      },
      azureActiveDirectory: {
        serializedName: "properties.azureActiveDirectory",
        type: {
          name: "Composite",
          className: "AzureActiveDirectory"
        }
      },
      fabricSettings: {
        serializedName: "properties.fabricSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SettingsSectionDescription"
            }
          }
        }
      },
      clusterCodeVersion: {
        serializedName: "properties.clusterCodeVersion",
        type: {
          name: "String"
        }
      },
      clusterUpgradeMode: {
        serializedName: "properties.clusterUpgradeMode",
        type: {
          name: "String"
        }
      },
      clusterUpgradeDescription: {
        serializedName: "properties.clusterUpgradeDescription",
        type: {
          name: "Composite",
          className: "ClusterUpgradePolicy"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SubResource: msRest.CompositeMapper = {
  serializedName: "SubResource",
  type: {
    name: "Composite",
    className: "SubResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VaultCertificate: msRest.CompositeMapper = {
  serializedName: "VaultCertificate",
  type: {
    name: "Composite",
    className: "VaultCertificate",
    modelProperties: {
      certificateUrl: {
        required: true,
        serializedName: "certificateUrl",
        type: {
          name: "String"
        }
      },
      certificateStore: {
        required: true,
        serializedName: "certificateStore",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VaultSecretGroup: msRest.CompositeMapper = {
  serializedName: "VaultSecretGroup",
  type: {
    name: "Composite",
    className: "VaultSecretGroup",
    modelProperties: {
      sourceVault: {
        required: true,
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      vaultCertificates: {
        required: true,
        serializedName: "vaultCertificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VaultCertificate"
            }
          }
        }
      }
    }
  }
};

export const VMSSExtension: msRest.CompositeMapper = {
  serializedName: "VMSSExtension",
  type: {
    name: "Composite",
    className: "VMSSExtension",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        required: true,
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      provisionAfterExtensions: {
        serializedName: "properties.provisionAfterExtensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ManagedProxyResource: msRest.CompositeMapper = {
  serializedName: "ManagedProxyResource",
  type: {
    name: "Composite",
    className: "ManagedProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NodeType: msRest.CompositeMapper = {
  serializedName: "NodeType",
  type: {
    name: "Composite",
    className: "NodeType",
    modelProperties: {
      ...ManagedProxyResource.type.modelProperties,
      isPrimary: {
        required: true,
        serializedName: "properties.isPrimary",
        type: {
          name: "Boolean"
        }
      },
      vmInstanceCount: {
        required: true,
        serializedName: "properties.vmInstanceCount",
        constraints: {
          InclusiveMaximum: 2147483647,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      dataDiskSizeGB: {
        required: true,
        serializedName: "properties.dataDiskSizeGB",
        type: {
          name: "Number"
        }
      },
      placementProperties: {
        serializedName: "properties.placementProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      capacities: {
        serializedName: "properties.capacities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      applicationPorts: {
        serializedName: "properties.applicationPorts",
        type: {
          name: "Composite",
          className: "EndpointRangeDescription"
        }
      },
      ephemeralPorts: {
        serializedName: "properties.ephemeralPorts",
        type: {
          name: "Composite",
          className: "EndpointRangeDescription"
        }
      },
      vmSize: {
        serializedName: "properties.vmSize",
        type: {
          name: "String"
        }
      },
      vmImagePublisher: {
        serializedName: "properties.vmImagePublisher",
        type: {
          name: "String"
        }
      },
      vmImageOffer: {
        serializedName: "properties.vmImageOffer",
        type: {
          name: "String"
        }
      },
      vmImageSku: {
        serializedName: "properties.vmImageSku",
        type: {
          name: "String"
        }
      },
      vmImageVersion: {
        serializedName: "properties.vmImageVersion",
        type: {
          name: "String"
        }
      },
      vmSecrets: {
        serializedName: "properties.vmSecrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VaultSecretGroup"
            }
          }
        }
      },
      vmExtensions: {
        serializedName: "properties.vmExtensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMSSExtension"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NodeTypeActionParameters: msRest.CompositeMapper = {
  serializedName: "NodeTypeActionParameters",
  type: {
    name: "Composite",
    className: "NodeTypeActionParameters",
    modelProperties: {
      nodes: {
        required: true,
        serializedName: "nodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      force: {
        serializedName: "force",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const NodeTypeUpdateParameters: msRest.CompositeMapper = {
  serializedName: "NodeTypeUpdateParameters",
  type: {
    name: "Composite",
    className: "NodeTypeUpdateParameters",
    modelProperties: {
      vmInstanceCount: {
        serializedName: "properties.vmInstanceCount",
        constraints: {
          InclusiveMaximum: 2147483647,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      placementProperties: {
        serializedName: "properties.placementProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      capacities: {
        serializedName: "properties.capacities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      applicationPorts: {
        serializedName: "properties.applicationPorts",
        type: {
          name: "Composite",
          className: "EndpointRangeDescription"
        }
      },
      ephemeralPorts: {
        serializedName: "properties.ephemeralPorts",
        type: {
          name: "Composite",
          className: "EndpointRangeDescription"
        }
      },
      vmSecrets: {
        serializedName: "properties.vmSecrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VaultSecretGroup"
            }
          }
        }
      },
      vmExtensions: {
        serializedName: "properties.vmExtensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMSSExtension"
            }
          }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResult"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedClusterListResult: msRest.CompositeMapper = {
  serializedName: "ManagedClusterListResult",
  type: {
    name: "Composite",
    className: "ManagedClusterListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedCluster"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NodeTypeListResult: msRest.CompositeMapper = {
  serializedName: "NodeTypeListResult",
  type: {
    name: "Composite",
    className: "NodeTypeListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NodeType"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'PartitionSchemeDescription.Named' : NamedPartitionSchemeDescription,
  'PartitionSchemeDescription' : PartitionSchemeDescription,
  'ServicePlacementPolicyDescription' : ServicePlacementPolicyDescription,
  'ServiceResourceProperties' : ServiceResourceProperties,
  'ServiceResourceUpdateProperties' : ServiceResourceUpdateProperties,
  'PartitionSchemeDescription.Singleton' : SingletonPartitionSchemeDescription,
  'ServiceResourceProperties.Stateful' : StatefulServiceProperties,
  'ServiceResourceUpdateProperties.Stateful' : StatefulServiceUpdateProperties,
  'ServiceResourceProperties.Stateless' : StatelessServiceProperties,
  'ServiceResourceUpdateProperties.Stateless' : StatelessServiceUpdateProperties,
  'PartitionSchemeDescription.UniformInt64Range' : UniformInt64RangePartitionSchemeDescription

};
