/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/applicationTypeVersionsMappers";
import * as Parameters from "../models/parameters";
import { ServiceFabricManagementClientContext } from "../serviceFabricManagementClientContext";

/** Class representing a ApplicationTypeVersions. */
export class ApplicationTypeVersions {
  private readonly client: ServiceFabricManagementClientContext;

  /**
   * Create a ApplicationTypeVersions.
   * @param {ServiceFabricManagementClientContext} client Reference to the service client.
   */
  constructor(client: ServiceFabricManagementClientContext) {
    this.client = client;
  }

  /**
   * Get a Service Fabric application type version resource created or in the process of being
   * created in the Service Fabric application type name resource.
   * @summary Gets a Service Fabric application type version resource.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param version The application type version.
   * @param [options] The optional parameters
   * @returns Promise<Models.ApplicationTypeVersionsGetResponse>
   */
  get(resourceGroupName: string, clusterName: string, applicationTypeName: string, version: string, options?: msRest.RequestOptionsBase): Promise<Models.ApplicationTypeVersionsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param version The application type version.
   * @param callback The callback
   */
  get(resourceGroupName: string, clusterName: string, applicationTypeName: string, version: string, callback: msRest.ServiceCallback<Models.ApplicationTypeVersionResource>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param version The application type version.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, clusterName: string, applicationTypeName: string, version: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationTypeVersionResource>): void;
  get(resourceGroupName: string, clusterName: string, applicationTypeName: string, version: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ApplicationTypeVersionResource>, callback?: msRest.ServiceCallback<Models.ApplicationTypeVersionResource>): Promise<Models.ApplicationTypeVersionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        clusterName,
        applicationTypeName,
        version,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ApplicationTypeVersionsGetResponse>;
  }

  /**
   * Create or update a Service Fabric application type version resource with the specified name.
   * @summary Creates or updates a Service Fabric application type version resource.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param version The application type version.
   * @param parameters The application type version resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.ApplicationTypeVersionsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, clusterName: string, applicationTypeName: string, version: string, parameters: Models.ApplicationTypeVersionResource, options?: msRest.RequestOptionsBase): Promise<Models.ApplicationTypeVersionsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,clusterName,applicationTypeName,version,parameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ApplicationTypeVersionsCreateOrUpdateResponse>;
  }

  /**
   * Delete a Service Fabric application type version resource with the specified name.
   * @summary Deletes a Service Fabric application type version resource.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param version The application type version.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, clusterName: string, applicationTypeName: string, version: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,clusterName,applicationTypeName,version,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Gets all application type version resources created or in the process of being created in the
   * Service Fabric application type name resource.
   * @summary Gets the list of application type version resources created in the specified Service
   * Fabric application type name resource.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.ApplicationTypeVersionsListResponse>
   */
  list(resourceGroupName: string, clusterName: string, applicationTypeName: string, options?: msRest.RequestOptionsBase): Promise<Models.ApplicationTypeVersionsListResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param callback The callback
   */
  list(resourceGroupName: string, clusterName: string, applicationTypeName: string, callback: msRest.ServiceCallback<Models.ApplicationTypeVersionResourceList>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, clusterName: string, applicationTypeName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationTypeVersionResourceList>): void;
  list(resourceGroupName: string, clusterName: string, applicationTypeName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ApplicationTypeVersionResourceList>, callback?: msRest.ServiceCallback<Models.ApplicationTypeVersionResourceList>): Promise<Models.ApplicationTypeVersionsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        clusterName,
        applicationTypeName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ApplicationTypeVersionsListResponse>;
  }

  /**
   * Create or update a Service Fabric application type version resource with the specified name.
   * @summary Creates or updates a Service Fabric application type version resource.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param version The application type version.
   * @param parameters The application type version resource.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, clusterName: string, applicationTypeName: string, version: string, parameters: Models.ApplicationTypeVersionResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        clusterName,
        applicationTypeName,
        version,
        parameters,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * Delete a Service Fabric application type version resource with the specified name.
   * @summary Deletes a Service Fabric application type version resource.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param applicationTypeName The name of the application type name resource.
   * @param version The application type version.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, clusterName: string, applicationTypeName: string, version: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        clusterName,
        applicationTypeName,
        version,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.clusterName,
    Parameters.applicationTypeName,
    Parameters.version
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ApplicationTypeVersionResource
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.clusterName,
    Parameters.applicationTypeName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ApplicationTypeVersionResourceList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.clusterName,
    Parameters.applicationTypeName,
    Parameters.version
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.ApplicationTypeVersionResource,
      required: true
    }
  },
  responses: {
    202: {
      bodyMapper: Mappers.ApplicationTypeVersionResource
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.clusterName,
    Parameters.applicationTypeName,
    Parameters.version
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};
