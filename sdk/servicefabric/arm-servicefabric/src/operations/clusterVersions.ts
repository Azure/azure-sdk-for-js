/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/clusterVersionsMappers";
import * as Parameters from "../models/parameters";
import { ServiceFabricManagementClientContext } from "../serviceFabricManagementClientContext";

/** Class representing a ClusterVersions. */
export class ClusterVersions {
  private readonly client: ServiceFabricManagementClientContext;

  /**
   * Create a ClusterVersions.
   * @param {ServiceFabricManagementClientContext} client Reference to the service client.
   */
  constructor(client: ServiceFabricManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets information about an available Service Fabric cluster code version.
   * @summary Gets information about a Service Fabric cluster code version available in the specified
   * location.
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param clusterVersion The cluster code version.
   * @param [options] The optional parameters
   * @returns Promise<Models.ClusterVersionsGetResponse>
   */
  get(location: string, clusterVersion: string, options?: msRest.RequestOptionsBase): Promise<Models.ClusterVersionsGetResponse>;
  /**
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param clusterVersion The cluster code version.
   * @param callback The callback
   */
  get(location: string, clusterVersion: string, callback: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): void;
  /**
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param clusterVersion The cluster code version.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(location: string, clusterVersion: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): void;
  get(location: string, clusterVersion: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>, callback?: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): Promise<Models.ClusterVersionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        clusterVersion,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ClusterVersionsGetResponse>;
  }

  /**
   * Gets information about an available Service Fabric cluster code version by environment.
   * @summary Gets information about a Service Fabric cluster code version available for the
   * specified environment.
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param environment The operating system of the cluster. The default means all. Possible values
   * include: 'Windows', 'Linux'
   * @param clusterVersion The cluster code version.
   * @param [options] The optional parameters
   * @returns Promise<Models.ClusterVersionsGetByEnvironmentResponse>
   */
  getByEnvironment(location: string, environment: Models.Environment1, clusterVersion: string, options?: msRest.RequestOptionsBase): Promise<Models.ClusterVersionsGetByEnvironmentResponse>;
  /**
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param environment The operating system of the cluster. The default means all. Possible values
   * include: 'Windows', 'Linux'
   * @param clusterVersion The cluster code version.
   * @param callback The callback
   */
  getByEnvironment(location: string, environment: Models.Environment1, clusterVersion: string, callback: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): void;
  /**
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param environment The operating system of the cluster. The default means all. Possible values
   * include: 'Windows', 'Linux'
   * @param clusterVersion The cluster code version.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByEnvironment(location: string, environment: Models.Environment1, clusterVersion: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): void;
  getByEnvironment(location: string, environment: Models.Environment1, clusterVersion: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>, callback?: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): Promise<Models.ClusterVersionsGetByEnvironmentResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        environment,
        clusterVersion,
        options
      },
      getByEnvironmentOperationSpec,
      callback) as Promise<Models.ClusterVersionsGetByEnvironmentResponse>;
  }

  /**
   * Gets all available code versions for Service Fabric cluster resources by location.
   * @summary Gets the list of Service Fabric cluster code versions available for the specified
   * location.
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param [options] The optional parameters
   * @returns Promise<Models.ClusterVersionsListResponse>
   */
  list(location: string, options?: msRest.RequestOptionsBase): Promise<Models.ClusterVersionsListResponse>;
  /**
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param callback The callback
   */
  list(location: string, callback: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): void;
  /**
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): void;
  list(location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>, callback?: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): Promise<Models.ClusterVersionsListResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ClusterVersionsListResponse>;
  }

  /**
   * Gets all available code versions for Service Fabric cluster resources by environment.
   * @summary Gets the list of Service Fabric cluster code versions available for the specified
   * environment.
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param environment The operating system of the cluster. The default means all. Possible values
   * include: 'Windows', 'Linux'
   * @param [options] The optional parameters
   * @returns Promise<Models.ClusterVersionsListByEnvironmentResponse>
   */
  listByEnvironment(location: string, environment: Models.Environment2, options?: msRest.RequestOptionsBase): Promise<Models.ClusterVersionsListByEnvironmentResponse>;
  /**
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param environment The operating system of the cluster. The default means all. Possible values
   * include: 'Windows', 'Linux'
   * @param callback The callback
   */
  listByEnvironment(location: string, environment: Models.Environment2, callback: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): void;
  /**
   * @param location The location for the cluster code versions. This is different from cluster
   * location.
   * @param environment The operating system of the cluster. The default means all. Possible values
   * include: 'Windows', 'Linux'
   * @param options The optional parameters
   * @param callback The callback
   */
  listByEnvironment(location: string, environment: Models.Environment2, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): void;
  listByEnvironment(location: string, environment: Models.Environment2, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>, callback?: msRest.ServiceCallback<Models.ClusterCodeVersionsListResult>): Promise<Models.ClusterVersionsListByEnvironmentResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        environment,
        options
      },
      listByEnvironmentOperationSpec,
      callback) as Promise<Models.ClusterVersionsListByEnvironmentResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}",
  urlParameters: [
    Parameters.location,
    Parameters.subscriptionId,
    Parameters.clusterVersion
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ClusterCodeVersionsListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getByEnvironmentOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}",
  urlParameters: [
    Parameters.location,
    Parameters.environment,
    Parameters.subscriptionId,
    Parameters.clusterVersion
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ClusterCodeVersionsListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions",
  urlParameters: [
    Parameters.location,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ClusterCodeVersionsListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByEnvironmentOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions",
  urlParameters: [
    Parameters.location,
    Parameters.environment,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ClusterCodeVersionsListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
