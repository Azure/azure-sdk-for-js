/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  ClustersImpl,
  ClusterVersionsImpl,
  OperationsImpl,
  ApplicationTypesImpl,
  ApplicationTypeVersionsImpl,
  ApplicationsImpl,
  ServicesImpl
} from "./operations";
import {
  Clusters,
  ClusterVersions,
  Operations,
  ApplicationTypes,
  ApplicationTypeVersions,
  Applications,
  Services
} from "./operationsInterfaces";
import { ServiceFabricManagementClientContext } from "./serviceFabricManagementClientContext";
import { ServiceFabricManagementClientOptionalParams } from "./models";

export class ServiceFabricManagementClient extends ServiceFabricManagementClientContext {
  /**
   * Initializes a new instance of the ServiceFabricManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The customer subscription identifier.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    subscriptionId: string,
    options?: ServiceFabricManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.clusters = new ClustersImpl(this);
    this.clusterVersions = new ClusterVersionsImpl(this);
    this.operations = new OperationsImpl(this);
    this.applicationTypes = new ApplicationTypesImpl(this);
    this.applicationTypeVersions = new ApplicationTypeVersionsImpl(this);
    this.applications = new ApplicationsImpl(this);
    this.services = new ServicesImpl(this);
  }

  clusters: Clusters;
  clusterVersions: ClusterVersions;
  operations: Operations;
  applicationTypes: ApplicationTypes;
  applicationTypeVersions: ApplicationTypeVersions;
  applications: Applications;
  services: Services;
}
