/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/meshSecretValueMappers";
import * as Parameters from "../models/parameters";
import { ServiceFabricClientContext } from "../serviceFabricClientContext";

/** Class representing a MeshSecretValue. */
export class MeshSecretValue {
  private readonly client: ServiceFabricClientContext;

  /**
   * Create a MeshSecretValue.
   * @param {ServiceFabricClientContext} client Reference to the service client.
   */
  constructor(client: ServiceFabricClientContext) {
    this.client = client;
  }

  /**
   * Creates a new value of the specified secret resource. The name of the value is typically the
   * version identifier. Once created the value cannot be changed.
   * @summary Adds the specified value as a new version of the specified secret resource.
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param secretValueResourceDescription Description for creating a value of a secret resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.MeshSecretValueAddValueResponse>
   */
  addValue(secretResourceName: string, secretValueResourceName: string, secretValueResourceDescription: Models.SecretValueResourceDescription, options?: msRest.RequestOptionsBase): Promise<Models.MeshSecretValueAddValueResponse>;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param secretValueResourceDescription Description for creating a value of a secret resource.
   * @param callback The callback
   */
  addValue(secretResourceName: string, secretValueResourceName: string, secretValueResourceDescription: Models.SecretValueResourceDescription, callback: msRest.ServiceCallback<Models.SecretValueResourceDescription>): void;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param secretValueResourceDescription Description for creating a value of a secret resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  addValue(secretResourceName: string, secretValueResourceName: string, secretValueResourceDescription: Models.SecretValueResourceDescription, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretValueResourceDescription>): void;
  addValue(secretResourceName: string, secretValueResourceName: string, secretValueResourceDescription: Models.SecretValueResourceDescription, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SecretValueResourceDescription>, callback?: msRest.ServiceCallback<Models.SecretValueResourceDescription>): Promise<Models.MeshSecretValueAddValueResponse> {
    return this.client.sendOperationRequest(
      {
        secretResourceName,
        secretValueResourceName,
        secretValueResourceDescription,
        options
      },
      addValueOperationSpec,
      callback) as Promise<Models.MeshSecretValueAddValueResponse>;
  }

  /**
   * Get the information about the specified named secret value resources. The information does not
   * include the actual value of the secret.
   * @summary Gets the specified secret value resource.
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param [options] The optional parameters
   * @returns Promise<Models.MeshSecretValueGetResponse>
   */
  get(secretResourceName: string, secretValueResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.MeshSecretValueGetResponse>;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param callback The callback
   */
  get(secretResourceName: string, secretValueResourceName: string, callback: msRest.ServiceCallback<Models.SecretValueResourceDescription>): void;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(secretResourceName: string, secretValueResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretValueResourceDescription>): void;
  get(secretResourceName: string, secretValueResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SecretValueResourceDescription>, callback?: msRest.ServiceCallback<Models.SecretValueResourceDescription>): Promise<Models.MeshSecretValueGetResponse> {
    return this.client.sendOperationRequest(
      {
        secretResourceName,
        secretValueResourceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.MeshSecretValueGetResponse>;
  }

  /**
   * Deletes the secret value resource identified by the name. The name of the resource is typically
   * the version associated with that value. Deletion will fail if the specified value is in use.
   * @summary Deletes the specified  value of the named secret resource.
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(secretResourceName: string, secretValueResourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param callback The callback
   */
  deleteMethod(secretResourceName: string, secretValueResourceName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(secretResourceName: string, secretValueResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(secretResourceName: string, secretValueResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        secretResourceName,
        secretValueResourceName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Gets information about all secret value resources of the specified secret resource. The
   * information includes the names of the secret value resources, but not the actual values.
   * @summary List names of all values of the specified secret resource.
   * @param secretResourceName The name of the secret resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.MeshSecretValueListResponse>
   */
  list(secretResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.MeshSecretValueListResponse>;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param callback The callback
   */
  list(secretResourceName: string, callback: msRest.ServiceCallback<Models.PagedSecretValueResourceDescriptionList>): void;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(secretResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PagedSecretValueResourceDescriptionList>): void;
  list(secretResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PagedSecretValueResourceDescriptionList>, callback?: msRest.ServiceCallback<Models.PagedSecretValueResourceDescriptionList>): Promise<Models.MeshSecretValueListResponse> {
    return this.client.sendOperationRequest(
      {
        secretResourceName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.MeshSecretValueListResponse>;
  }

  /**
   * Lists the decrypted value of the specified named value of the secret resource. This is a
   * privileged operation.
   * @summary Lists the specified value of the secret resource.
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param [options] The optional parameters
   * @returns Promise<Models.MeshSecretValueShowResponse>
   */
  show(secretResourceName: string, secretValueResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.MeshSecretValueShowResponse>;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param callback The callback
   */
  show(secretResourceName: string, secretValueResourceName: string, callback: msRest.ServiceCallback<Models.SecretValue>): void;
  /**
   * @param secretResourceName The name of the secret resource.
   * @param secretValueResourceName The name of the secret resource value which is typically the
   * version identifier for the value.
   * @param options The optional parameters
   * @param callback The callback
   */
  show(secretResourceName: string, secretValueResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SecretValue>): void;
  show(secretResourceName: string, secretValueResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SecretValue>, callback?: msRest.ServiceCallback<Models.SecretValue>): Promise<Models.MeshSecretValueShowResponse> {
    return this.client.sendOperationRequest(
      {
        secretResourceName,
        secretValueResourceName,
        options
      },
      showOperationSpec,
      callback) as Promise<Models.MeshSecretValueShowResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const addValueOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "Resources/Secrets/{secretResourceName}/values/{secretValueResourceName}",
  urlParameters: [
    Parameters.secretResourceName,
    Parameters.secretValueResourceName
  ],
  queryParameters: [
    Parameters.apiVersion8
  ],
  requestBody: {
    parameterPath: "secretValueResourceDescription",
    mapper: {
      ...Mappers.SecretValueResourceDescription,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SecretValueResourceDescription
    },
    201: {
      bodyMapper: Mappers.SecretValueResourceDescription
    },
    202: {},
    default: {
      bodyMapper: Mappers.FabricError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Resources/Secrets/{secretResourceName}/values/{secretValueResourceName}",
  urlParameters: [
    Parameters.secretResourceName,
    Parameters.secretValueResourceName
  ],
  queryParameters: [
    Parameters.apiVersion8
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SecretValueResourceDescription
    },
    default: {
      bodyMapper: Mappers.FabricError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "Resources/Secrets/{secretResourceName}/values/{secretValueResourceName}",
  urlParameters: [
    Parameters.secretResourceName,
    Parameters.secretValueResourceName
  ],
  queryParameters: [
    Parameters.apiVersion8
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.FabricError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Resources/Secrets/{secretResourceName}/values",
  urlParameters: [
    Parameters.secretResourceName
  ],
  queryParameters: [
    Parameters.apiVersion8
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PagedSecretValueResourceDescriptionList
    },
    default: {
      bodyMapper: Mappers.FabricError
    }
  },
  serializer
};

const showOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Resources/Secrets/{secretResourceName}/values/{secretValueResourceName}/list_value",
  urlParameters: [
    Parameters.secretResourceName,
    Parameters.secretValueResourceName
  ],
  queryParameters: [
    Parameters.apiVersion8
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SecretValue
    },
    default: {
      bodyMapper: Mappers.FabricError
    }
  },
  serializer
};
