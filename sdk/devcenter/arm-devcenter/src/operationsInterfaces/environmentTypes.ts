/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  EnvironmentType,
  EnvironmentTypesListByDevCenterOptionalParams,
  EnvironmentTypesGetOptionalParams,
  EnvironmentTypesGetResponse,
  EnvironmentTypesCreateOrUpdateOptionalParams,
  EnvironmentTypesCreateOrUpdateResponse,
  EnvironmentTypeUpdate,
  EnvironmentTypesUpdateOptionalParams,
  EnvironmentTypesUpdateResponse,
  EnvironmentTypesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a EnvironmentTypes. */
export interface EnvironmentTypes {
  /**
   * Lists environment types for the devcenter.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param options The options parameters.
   */
  listByDevCenter(
    resourceGroupName: string,
    devCenterName: string,
    options?: EnvironmentTypesListByDevCenterOptionalParams
  ): PagedAsyncIterableIterator<EnvironmentType>;
  /**
   * Gets an environment type.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param environmentTypeName The name of the environment type.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    devCenterName: string,
    environmentTypeName: string,
    options?: EnvironmentTypesGetOptionalParams
  ): Promise<EnvironmentTypesGetResponse>;
  /**
   * Creates or updates an environment type.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param environmentTypeName The name of the environment type.
   * @param body Represents an Environment Type.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    devCenterName: string,
    environmentTypeName: string,
    body: EnvironmentType,
    options?: EnvironmentTypesCreateOrUpdateOptionalParams
  ): Promise<EnvironmentTypesCreateOrUpdateResponse>;
  /**
   * Partially updates an environment type.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param environmentTypeName The name of the environment type.
   * @param body Updatable environment type properties.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    devCenterName: string,
    environmentTypeName: string,
    body: EnvironmentTypeUpdate,
    options?: EnvironmentTypesUpdateOptionalParams
  ): Promise<EnvironmentTypesUpdateResponse>;
  /**
   * Deletes an environment type.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param environmentTypeName The name of the environment type.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    devCenterName: string,
    environmentTypeName: string,
    options?: EnvironmentTypesDeleteOptionalParams
  ): Promise<void>;
}
