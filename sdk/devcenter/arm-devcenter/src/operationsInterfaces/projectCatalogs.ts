/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Catalog,
  ProjectCatalogsListOptionalParams,
  ProjectCatalogsGetOptionalParams,
  ProjectCatalogsGetResponse,
  ProjectCatalogsCreateOrUpdateOptionalParams,
  ProjectCatalogsCreateOrUpdateResponse,
  CatalogUpdate,
  ProjectCatalogsPatchOptionalParams,
  ProjectCatalogsPatchResponse,
  ProjectCatalogsDeleteOptionalParams,
  ProjectCatalogsDeleteResponse,
  ProjectCatalogsGetSyncErrorDetailsOptionalParams,
  ProjectCatalogsGetSyncErrorDetailsResponse,
  ProjectCatalogsSyncOptionalParams,
  ProjectCatalogsSyncResponse,
  ProjectCatalogsConnectOptionalParams,
  ProjectCatalogsConnectResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProjectCatalogs. */
export interface ProjectCatalogs {
  /**
   * Lists the catalogs associated with a project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    projectName: string,
    options?: ProjectCatalogsListOptionalParams,
  ): PagedAsyncIterableIterator<Catalog>;
  /**
   * Gets an associated project catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    options?: ProjectCatalogsGetOptionalParams,
  ): Promise<ProjectCatalogsGetResponse>;
  /**
   * Creates or updates a project catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param body Represents a catalog.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    body: Catalog,
    options?: ProjectCatalogsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProjectCatalogsCreateOrUpdateResponse>,
      ProjectCatalogsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a project catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param body Represents a catalog.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    body: Catalog,
    options?: ProjectCatalogsCreateOrUpdateOptionalParams,
  ): Promise<ProjectCatalogsCreateOrUpdateResponse>;
  /**
   * Partially updates a project catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param body Updatable project catalog properties.
   * @param options The options parameters.
   */
  beginPatch(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    body: CatalogUpdate,
    options?: ProjectCatalogsPatchOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProjectCatalogsPatchResponse>,
      ProjectCatalogsPatchResponse
    >
  >;
  /**
   * Partially updates a project catalog.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param body Updatable project catalog properties.
   * @param options The options parameters.
   */
  beginPatchAndWait(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    body: CatalogUpdate,
    options?: ProjectCatalogsPatchOptionalParams,
  ): Promise<ProjectCatalogsPatchResponse>;
  /**
   * Deletes a project catalog resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    options?: ProjectCatalogsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProjectCatalogsDeleteResponse>,
      ProjectCatalogsDeleteResponse
    >
  >;
  /**
   * Deletes a project catalog resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    options?: ProjectCatalogsDeleteOptionalParams,
  ): Promise<ProjectCatalogsDeleteResponse>;
  /**
   * Gets project catalog synchronization error details
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param options The options parameters.
   */
  getSyncErrorDetails(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    options?: ProjectCatalogsGetSyncErrorDetailsOptionalParams,
  ): Promise<ProjectCatalogsGetSyncErrorDetailsResponse>;
  /**
   * Syncs templates for a template source.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param options The options parameters.
   */
  beginSync(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    options?: ProjectCatalogsSyncOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProjectCatalogsSyncResponse>,
      ProjectCatalogsSyncResponse
    >
  >;
  /**
   * Syncs templates for a template source.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param options The options parameters.
   */
  beginSyncAndWait(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    options?: ProjectCatalogsSyncOptionalParams,
  ): Promise<ProjectCatalogsSyncResponse>;
  /**
   * Connects a project catalog to enable syncing.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param options The options parameters.
   */
  beginConnect(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    options?: ProjectCatalogsConnectOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProjectCatalogsConnectResponse>,
      ProjectCatalogsConnectResponse
    >
  >;
  /**
   * Connects a project catalog to enable syncing.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param options The options parameters.
   */
  beginConnectAndWait(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    options?: ProjectCatalogsConnectOptionalParams,
  ): Promise<ProjectCatalogsConnectResponse>;
}
