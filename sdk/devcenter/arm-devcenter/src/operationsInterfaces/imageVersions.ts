/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ImageVersion,
  ImageVersionsListByImageOptionalParams,
  ImageVersionsGetOptionalParams,
  ImageVersionsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ImageVersions. */
export interface ImageVersions {
  /**
   * Lists versions for an image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param galleryName The name of the gallery.
   * @param imageName The name of the image.
   * @param options The options parameters.
   */
  listByImage(
    resourceGroupName: string,
    devCenterName: string,
    galleryName: string,
    imageName: string,
    options?: ImageVersionsListByImageOptionalParams
  ): PagedAsyncIterableIterator<ImageVersion>;
  /**
   * Gets an image version.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param galleryName The name of the gallery.
   * @param imageName The name of the image.
   * @param versionName The version of the image.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    devCenterName: string,
    galleryName: string,
    imageName: string,
    versionName: string,
    options?: ImageVersionsGetOptionalParams
  ): Promise<ImageVersionsGetResponse>;
}
