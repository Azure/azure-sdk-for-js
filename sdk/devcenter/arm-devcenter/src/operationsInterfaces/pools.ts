/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Pool,
  PoolsListByProjectOptionalParams,
  PoolsGetOptionalParams,
  PoolsGetResponse,
  PoolsCreateOrUpdateOptionalParams,
  PoolsCreateOrUpdateResponse,
  PoolUpdate,
  PoolsUpdateOptionalParams,
  PoolsUpdateResponse,
  PoolsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Pools. */
export interface Pools {
  /**
   * Lists pools for a project
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param options The options parameters.
   */
  listByProject(
    resourceGroupName: string,
    projectName: string,
    options?: PoolsListByProjectOptionalParams
  ): PagedAsyncIterableIterator<Pool>;
  /**
   * Gets a machine pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param poolName Name of the pool.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    projectName: string,
    poolName: string,
    options?: PoolsGetOptionalParams
  ): Promise<PoolsGetResponse>;
  /**
   * Creates or updates a machine pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param poolName Name of the pool.
   * @param body Represents a machine pool
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    projectName: string,
    poolName: string,
    body: Pool,
    options?: PoolsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<PoolsCreateOrUpdateResponse>,
      PoolsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a machine pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param poolName Name of the pool.
   * @param body Represents a machine pool
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    projectName: string,
    poolName: string,
    body: Pool,
    options?: PoolsCreateOrUpdateOptionalParams
  ): Promise<PoolsCreateOrUpdateResponse>;
  /**
   * Partially updates a machine pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param poolName Name of the pool.
   * @param body Represents a machine pool
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    projectName: string,
    poolName: string,
    body: PoolUpdate,
    options?: PoolsUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<PoolsUpdateResponse>, PoolsUpdateResponse>
  >;
  /**
   * Partially updates a machine pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param poolName Name of the pool.
   * @param body Represents a machine pool
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    projectName: string,
    poolName: string,
    body: PoolUpdate,
    options?: PoolsUpdateOptionalParams
  ): Promise<PoolsUpdateResponse>;
  /**
   * Deletes a machine pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param poolName Name of the pool.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    projectName: string,
    poolName: string,
    options?: PoolsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a machine pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param poolName Name of the pool.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    projectName: string,
    poolName: string,
    options?: PoolsDeleteOptionalParams
  ): Promise<void>;
}
