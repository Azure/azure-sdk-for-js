/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ProjectEnvironmentType,
  ProjectEnvironmentTypesListOptionalParams,
  ProjectEnvironmentTypesGetOptionalParams,
  ProjectEnvironmentTypesGetResponse,
  ProjectEnvironmentTypesCreateOrUpdateOptionalParams,
  ProjectEnvironmentTypesCreateOrUpdateResponse,
  ProjectEnvironmentTypeUpdate,
  ProjectEnvironmentTypesUpdateOptionalParams,
  ProjectEnvironmentTypesUpdateResponse,
  ProjectEnvironmentTypesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProjectEnvironmentTypes. */
export interface ProjectEnvironmentTypes {
  /**
   * Lists environment types for a project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    projectName: string,
    options?: ProjectEnvironmentTypesListOptionalParams
  ): PagedAsyncIterableIterator<ProjectEnvironmentType>;
  /**
   * Gets a project environment type.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param environmentTypeName The name of the environment type.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    projectName: string,
    environmentTypeName: string,
    options?: ProjectEnvironmentTypesGetOptionalParams
  ): Promise<ProjectEnvironmentTypesGetResponse>;
  /**
   * Creates or updates a project environment type.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param environmentTypeName The name of the environment type.
   * @param body Represents a Project Environment Type.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    projectName: string,
    environmentTypeName: string,
    body: ProjectEnvironmentType,
    options?: ProjectEnvironmentTypesCreateOrUpdateOptionalParams
  ): Promise<ProjectEnvironmentTypesCreateOrUpdateResponse>;
  /**
   * Partially updates a project environment type.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param environmentTypeName The name of the environment type.
   * @param body Updatable project environment type properties.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    projectName: string,
    environmentTypeName: string,
    body: ProjectEnvironmentTypeUpdate,
    options?: ProjectEnvironmentTypesUpdateOptionalParams
  ): Promise<ProjectEnvironmentTypesUpdateResponse>;
  /**
   * Deletes a project environment type.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param environmentTypeName The name of the environment type.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    projectName: string,
    environmentTypeName: string,
    options?: ProjectEnvironmentTypesDeleteOptionalParams
  ): Promise<void>;
}
