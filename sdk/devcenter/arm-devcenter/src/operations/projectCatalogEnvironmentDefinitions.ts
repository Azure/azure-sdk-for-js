/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ProjectCatalogEnvironmentDefinitions } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { DevCenterClient } from "../devCenterClient";
import {
  ProjectCatalogEnvironmentDefinitionsGetErrorDetailsOptionalParams,
  ProjectCatalogEnvironmentDefinitionsGetErrorDetailsResponse,
} from "../models";

/** Class containing ProjectCatalogEnvironmentDefinitions operations. */
export class ProjectCatalogEnvironmentDefinitionsImpl
  implements ProjectCatalogEnvironmentDefinitions
{
  private readonly client: DevCenterClient;

  /**
   * Initialize a new instance of the class ProjectCatalogEnvironmentDefinitions class.
   * @param client Reference to the service client
   */
  constructor(client: DevCenterClient) {
    this.client = client;
  }

  /**
   * Gets Environment Definition error details
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName The name of the project.
   * @param catalogName The name of the Catalog.
   * @param environmentDefinitionName The name of the Environment Definition.
   * @param options The options parameters.
   */
  getErrorDetails(
    resourceGroupName: string,
    projectName: string,
    catalogName: string,
    environmentDefinitionName: string,
    options?: ProjectCatalogEnvironmentDefinitionsGetErrorDetailsOptionalParams,
  ): Promise<ProjectCatalogEnvironmentDefinitionsGetErrorDetailsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        projectName,
        catalogName,
        environmentDefinitionName,
        options,
      },
      getErrorDetailsOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getErrorDetailsOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions/{environmentDefinitionName}/getErrorDetails",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.CatalogResourceValidationErrorDetails,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.projectName,
    Parameters.catalogName,
    Parameters.environmentDefinitionName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
