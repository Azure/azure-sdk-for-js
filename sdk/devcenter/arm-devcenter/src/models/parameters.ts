/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  DevCenter as DevCenterMapper,
  DevCenterUpdate as DevCenterUpdateMapper,
  Project as ProjectMapper,
  ProjectUpdate as ProjectUpdateMapper,
  AttachedNetworkConnection as AttachedNetworkConnectionMapper,
  Gallery as GalleryMapper,
  Catalog as CatalogMapper,
  CatalogUpdate as CatalogUpdateMapper,
  EnvironmentType as EnvironmentTypeMapper,
  EnvironmentTypeUpdate as EnvironmentTypeUpdateMapper,
  ProjectEnvironmentType as ProjectEnvironmentTypeMapper,
  ProjectEnvironmentTypeUpdate as ProjectEnvironmentTypeUpdateMapper,
  DevBoxDefinition as DevBoxDefinitionMapper,
  DevBoxDefinitionUpdate as DevBoxDefinitionUpdateMapper,
  CheckNameAvailabilityRequest as CheckNameAvailabilityRequestMapper,
  Pool as PoolMapper,
  PoolUpdate as PoolUpdateMapper,
  Schedule as ScheduleMapper,
  ScheduleUpdate as ScheduleUpdateMapper,
  NetworkConnection as NetworkConnectionMapper,
  NetworkConnectionUpdate as NetworkConnectionUpdateMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-11-11-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const devCenterName: OperationURLParameter = {
  parameterPath: "devCenterName",
  mapper: {
    serializedName: "devCenterName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const body: OperationParameter = {
  parameterPath: "body",
  mapper: DevCenterMapper
};

export const body1: OperationParameter = {
  parameterPath: "body",
  mapper: DevCenterUpdateMapper
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const projectName: OperationURLParameter = {
  parameterPath: "projectName",
  mapper: {
    serializedName: "projectName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body2: OperationParameter = {
  parameterPath: "body",
  mapper: ProjectMapper
};

export const body3: OperationParameter = {
  parameterPath: "body",
  mapper: ProjectUpdateMapper
};

export const attachedNetworkConnectionName: OperationURLParameter = {
  parameterPath: "attachedNetworkConnectionName",
  mapper: {
    serializedName: "attachedNetworkConnectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body4: OperationParameter = {
  parameterPath: "body",
  mapper: AttachedNetworkConnectionMapper
};

export const galleryName: OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body5: OperationParameter = {
  parameterPath: "body",
  mapper: GalleryMapper
};

export const imageName: OperationURLParameter = {
  parameterPath: "imageName",
  mapper: {
    serializedName: "imageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const versionName: OperationURLParameter = {
  parameterPath: "versionName",
  mapper: {
    serializedName: "versionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const catalogName: OperationURLParameter = {
  parameterPath: "catalogName",
  mapper: {
    serializedName: "catalogName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body6: OperationParameter = {
  parameterPath: "body",
  mapper: CatalogMapper
};

export const body7: OperationParameter = {
  parameterPath: "body",
  mapper: CatalogUpdateMapper
};

export const environmentTypeName: OperationURLParameter = {
  parameterPath: "environmentTypeName",
  mapper: {
    serializedName: "environmentTypeName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body8: OperationParameter = {
  parameterPath: "body",
  mapper: EnvironmentTypeMapper
};

export const body9: OperationParameter = {
  parameterPath: "body",
  mapper: EnvironmentTypeUpdateMapper
};

export const body10: OperationParameter = {
  parameterPath: "body",
  mapper: ProjectEnvironmentTypeMapper
};

export const body11: OperationParameter = {
  parameterPath: "body",
  mapper: ProjectEnvironmentTypeUpdateMapper
};

export const devBoxDefinitionName: OperationURLParameter = {
  parameterPath: "devBoxDefinitionName",
  mapper: {
    serializedName: "devBoxDefinitionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body12: OperationParameter = {
  parameterPath: "body",
  mapper: DevBoxDefinitionMapper
};

export const body13: OperationParameter = {
  parameterPath: "body",
  mapper: DevBoxDefinitionUpdateMapper
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const operationId: OperationURLParameter = {
  parameterPath: "operationId",
  mapper: {
    serializedName: "operationId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nameAvailabilityRequest: OperationParameter = {
  parameterPath: "nameAvailabilityRequest",
  mapper: CheckNameAvailabilityRequestMapper
};

export const poolName: OperationURLParameter = {
  parameterPath: "poolName",
  mapper: {
    serializedName: "poolName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body14: OperationParameter = {
  parameterPath: "body",
  mapper: PoolMapper
};

export const body15: OperationParameter = {
  parameterPath: "body",
  mapper: PoolUpdateMapper
};

export const scheduleName: OperationURLParameter = {
  parameterPath: "scheduleName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w]+$"),
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "scheduleName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body16: OperationParameter = {
  parameterPath: "body",
  mapper: ScheduleMapper
};

export const body17: OperationParameter = {
  parameterPath: "body",
  mapper: ScheduleUpdateMapper
};

export const networkConnectionName: OperationURLParameter = {
  parameterPath: "networkConnectionName",
  mapper: {
    serializedName: "networkConnectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body18: OperationParameter = {
  parameterPath: "body",
  mapper: NetworkConnectionMapper
};

export const body19: OperationParameter = {
  parameterPath: "body",
  mapper: NetworkConnectionUpdateMapper
};
