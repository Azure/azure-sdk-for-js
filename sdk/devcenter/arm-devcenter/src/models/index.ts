/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Result of the list devcenters operation */
export interface DevCenterListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: DevCenter[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** An error response from the DevCenter service. */
export interface CloudError {
  /** Error body */
  error: CloudErrorBody;
}

/** An error response from the DevCenter service. */
export interface CloudErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: CloudErrorBody[];
}

/** Base tracked resource type for PATCH updates */
export interface TrackedResourceUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location?: string;
}

/** Results of the project list operation. */
export interface ProjectListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Project[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of a project. These properties can be updated after the resource has been created. */
export interface ProjectUpdateProperties {
  /** Resource Id of an associated DevCenter */
  devCenterId?: string;
  /** Description of the project. */
  description?: string;
}

/** Results of the Attached Networks list operation. */
export interface AttachedNetworkListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AttachedNetworkConnection[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Results of the gallery list operation. */
export interface GalleryListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Gallery[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Results of the image list operation. */
export interface ImageListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Image[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties for a recommended machine configuration. */
export interface RecommendedMachineConfiguration {
  /**
   * Recommended memory range.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memory?: ResourceRange;
  /**
   * Recommended vCPU range.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vCPUs?: ResourceRange;
}

/** Properties for a range of values. */
export interface ResourceRange {
  /**
   * Minimum value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly min?: number;
  /**
   * Maximum value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly max?: number;
}

/** Results of the image version list operation. */
export interface ImageVersionListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ImageVersion[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Results of the catalog list operation. */
export interface CatalogListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Catalog[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of a catalog. These properties can be updated after the resource has been created. */
export interface CatalogUpdateProperties {
  /** Properties for a GitHub catalog type. */
  gitHub?: GitCatalog;
  /** Properties for an Azure DevOps catalog type. */
  adoGit?: GitCatalog;
}

/** Properties for a Git repository catalog. */
export interface GitCatalog {
  /** Git URI. */
  uri?: string;
  /** Git branch. */
  branch?: string;
  /** A reference to the Key Vault secret containing a security token to authenticate to a Git repository. */
  secretIdentifier?: string;
  /** The folder where the catalog items can be found inside the repository. */
  path?: string;
}

/** The catalog's properties for partial update. Properties not provided in the update request will not be changed. */
export interface CatalogUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Properties for a GitHub catalog type. */
  gitHub?: GitCatalog;
  /** Properties for an Azure DevOps catalog type. */
  adoGit?: GitCatalog;
}

/** Result of the environment type list operation. */
export interface EnvironmentTypeListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: EnvironmentType[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The environment type for partial update. Properties not provided in the update request will not be changed. */
export interface EnvironmentTypeUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Result of the allowed environment type list operation. */
export interface AllowedEnvironmentTypeListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AllowedEnvironmentType[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Result of the project environment type list operation. */
export interface ProjectEnvironmentTypeListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ProjectEnvironmentType[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of a project environment type. These properties can be updated after the resource has been created. */
export interface ProjectEnvironmentTypeUpdateProperties {
  /** Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription. */
  deploymentTargetId?: string;
  /** Defines whether this Environment Type can be used in this Project. */
  status?: EnableStatus;
  /** The role definition assigned to the environment creator on backing resources. */
  creatorRoleAssignment?: ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
  /** Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs. */
  userRoleAssignments?: { [propertyName: string]: UserRoleAssignmentValue };
}

/** The role definition assigned to the environment creator on backing resources. */
export interface ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment {
  /** A map of roles to assign to the environment creator. */
  roles?: { [propertyName: string]: EnvironmentRole };
}

/** A role that can be assigned to a user. */
export interface EnvironmentRole {
  /**
   * The common name of the Role Assignment. This is a descriptive name such as 'AcrPush'.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly roleName?: string;
  /**
   * This is a description of the Role Assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Mapping of user object ID to role assignments. */
export interface UserRoleAssignmentValue {
  /** A map of roles to assign to the parent user. */
  roles?: { [propertyName: string]: EnvironmentRole };
}

/** The project environment type for partial update. Properties not provided in the update request will not be changed. */
export interface ProjectEnvironmentTypeUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Managed identity properties */
  identity?: ManagedServiceIdentity;
  /** Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription. */
  deploymentTargetId?: string;
  /** Defines whether this Environment Type can be used in this Project. */
  status?: EnableStatus;
  /** The role definition assigned to the environment creator on backing resources. */
  creatorRoleAssignment?: ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
  /** Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs. */
  userRoleAssignments?: { [propertyName: string]: UserRoleAssignmentValue };
}

/** Results of the Dev Box definition list operation. */
export interface DevBoxDefinitionListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: DevBoxDefinition[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Image validation error details */
export interface ImageValidationErrorDetails {
  /** An identifier for the error. */
  code?: string;
  /** A message describing the error. */
  message?: string;
}

/** Image reference information */
export interface ImageReference {
  /** Image ID, or Image version ID. When Image ID is provided, its latest version will be used. */
  id?: string;
  /**
   * The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exactVersion?: string;
  /** The image publisher. */
  publisher?: string;
  /** The image offer. */
  offer?: string;
  /** The image sku. */
  sku?: string;
}

/** Properties of a Dev Box definition. These properties can be updated after the resource has been created. */
export interface DevBoxDefinitionUpdateProperties {
  /** Image reference information. */
  imageReference?: ImageReference;
  /** The SKU for Dev Boxes created using this definition. */
  sku?: Sku;
  /** The storage type used for the Operating System disk of Dev Boxes created using this definition. */
  osStorageType?: string;
}

/** The resource model definition representing SKU */
export interface Sku {
  /** The name of the SKU. Ex - P3. It is typically a letter+number code */
  name: string;
  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
  tier?: SkuTier;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
  family?: string;
  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
  capacity?: number;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The current status of an async operation */
export interface OperationStatus {
  /**
   * Fully qualified ID for the operation status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The operation id name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /**
   * The start time of the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * The end time of the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * Percent of the operation that is complete
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly percentComplete?: number;
  /**
   * Custom operation properties, populated only for a successful operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: Record<string, unknown>;
  /** Operation Error message */
  error?: OperationStatusError;
}

/** Operation Error message */
export interface OperationStatusError {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** List of Core Usages. */
export interface ListUsagesResult {
  /**
   * The array page of Usages.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Usage[];
  /**
   * The link to get the next page of Usage result.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The core usage details. */
export interface Usage {
  /** The current usage. */
  currentValue?: number;
  /** The limit integer. */
  limit?: number;
  /** The unit details. */
  unit?: UsageUnit;
  /** The name. */
  name?: UsageName;
}

/** The Usage Names. */
export interface UsageName {
  /** The localized name of the resource. */
  localizedValue?: string;
  /** The name of the resource. */
  value?: string;
}

/** Results of the Microsoft.DevCenter SKU list operation. */
export interface SkuListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: DevCenterSku[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A name/value pair to describe a capability. */
export interface Capability {
  /**
   * Name of the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Value of the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** Results of the machine pool list operation. */
export interface PoolListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Pool[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of a Pool. These properties can be updated after the resource has been created. */
export interface PoolUpdateProperties {
  /** Name of a Dev Box definition in parent Project of this Pool */
  devBoxDefinitionName?: string;
  /** Name of a Network Connection in parent Project of this Pool */
  networkConnectionName?: string;
  /** Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created. */
  licenseType?: LicenseType;
  /** Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box. */
  localAdministrator?: LocalAdminStatus;
}

/** Result of the schedule list operation. */
export interface ScheduleListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Schedule[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Updatable properties of a Schedule. */
export interface ScheduleUpdateProperties {
  /** Supported type this scheduled task represents. */
  type?: ScheduledType;
  /** The frequency of this scheduled task. */
  frequency?: ScheduledFrequency;
  /** The target time to trigger the action. The format is HH:MM. */
  time?: string;
  /** The IANA timezone id at which the schedule should execute. */
  timeZone?: string;
  /** Indicates whether or not this scheduled task is enabled. */
  state?: EnableStatus;
}

/** Result of the network connection list operation. */
export interface NetworkConnectionListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: NetworkConnection[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties of network connection. These properties can be updated after the resource has been created. */
export interface NetworkConnectionUpdateProperties {
  /** The subnet to attach Virtual Machines to */
  subnetId?: string;
  /** Active Directory domain name */
  domainName?: string;
  /** Active Directory domain Organization Unit (OU) */
  organizationUnit?: string;
  /** The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com. */
  domainUsername?: string;
  /** The password for the account used to join domain */
  domainPassword?: string;
}

/** Result of the network health check list operation. */
export interface HealthCheckStatusDetailsListResult {
  /**
   * Current page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: HealthCheckStatusDetails[];
  /**
   * URL to get the next set of results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** An individual health check item */
export interface HealthCheck {
  /**
   * The status of the health check item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: HealthCheckStatus;
  /**
   * The display name of this health check item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Start time of health check item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startDateTime?: Date;
  /**
   * End time of the health check item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endDateTime?: Date;
  /**
   * The type of error that occurred during this health check.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorType?: string;
  /**
   * The recommended action to fix the corresponding error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendedAction?: string;
  /**
   * Additional details about the health check or the recommended action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalDetails?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Represents an attached NetworkConnection. */
export interface AttachedNetworkConnection extends Resource {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** The resource ID of the NetworkConnection you want to attach. */
  networkConnectionId?: string;
  /**
   * The geo-location where the NetworkConnection resource specified in 'networkConnectionResourceId' property lives.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkConnectionLocation?: string;
  /**
   * Health check status values
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCheckStatus?: HealthCheckStatus;
  /**
   * AAD Join type of the network. This is populated based on the referenced Network Connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domainJoinType?: DomainJoinType;
}

/** Represents a gallery. */
export interface Gallery extends Resource {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** The resource ID of the backing Azure Compute Gallery. */
  galleryResourceId?: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Represents a catalog. */
export interface Catalog extends Resource {
  /** Properties for a GitHub catalog type. */
  gitHub?: GitCatalog;
  /** Properties for an Azure DevOps catalog type. */
  adoGit?: GitCatalog;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * When the catalog was last synced.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSyncTime?: Date;
}

/** Represents an environment type. */
export interface EnvironmentType extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Represents an allowed environment type. */
export interface AllowedEnvironmentType extends Resource {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Represents an environment type. */
export interface ProjectEnvironmentType extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Managed identity properties */
  identity?: ManagedServiceIdentity;
  /** The geo-location for the environment type */
  location?: string;
  /** Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription. */
  deploymentTargetId?: string;
  /** Defines whether this Environment Type can be used in this Project. */
  status?: EnableStatus;
  /** The role definition assigned to the environment creator on backing resources. */
  creatorRoleAssignment?: ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment;
  /** Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs. */
  userRoleAssignments?: { [propertyName: string]: UserRoleAssignmentValue };
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Represents a Schedule to execute a task. */
export interface Schedule extends Resource {
  /** Supported type this scheduled task represents. */
  typePropertiesType?: ScheduledType;
  /** The frequency of this scheduled task. */
  frequency?: ScheduledFrequency;
  /** The target time to trigger the action. The format is HH:MM. */
  time?: string;
  /** The IANA timezone id at which the schedule should execute. */
  timeZone?: string;
  /** Indicates whether or not this scheduled task is enabled. */
  state?: EnableStatus;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Health Check details. */
export interface HealthCheckStatusDetails extends Resource {
  /**
   * Start time of last execution of the health checks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startDateTime?: Date;
  /**
   * End time of last execution of the health checks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endDateTime?: Date;
  /**
   * Details for each health check item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthChecks?: HealthCheck[];
}

/** The devcenter resource for partial updates. Properties not provided in the update request will not be changed. */
export interface DevCenterUpdate extends TrackedResourceUpdate {
  /** Managed identity properties */
  identity?: ManagedServiceIdentity;
}

/** The project properties for partial update. Properties not provided in the update request will not be changed. */
export interface ProjectUpdate extends TrackedResourceUpdate {
  /** Resource Id of an associated DevCenter */
  devCenterId?: string;
  /** Description of the project. */
  description?: string;
}

/** Partial update of a Dev Box definition resource. */
export interface DevBoxDefinitionUpdate extends TrackedResourceUpdate {
  /** Image reference information. */
  imageReference?: ImageReference;
  /** The SKU for Dev Boxes created using this definition. */
  sku?: Sku;
  /** The storage type used for the Operating System disk of Dev Boxes created using this definition. */
  osStorageType?: string;
}

/** The pool properties for partial update. Properties not provided in the update request will not be changed. */
export interface PoolUpdate extends TrackedResourceUpdate {
  /** Name of a Dev Box definition in parent Project of this Pool */
  devBoxDefinitionName?: string;
  /** Name of a Network Connection in parent Project of this Pool */
  networkConnectionName?: string;
  /** Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created. */
  licenseType?: LicenseType;
  /** Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box. */
  localAdministrator?: LocalAdminStatus;
}

/** The schedule properties for partial update. Properties not provided in the update request will not be changed. */
export interface ScheduleUpdate extends TrackedResourceUpdate {
  /** Supported type this scheduled task represents. */
  type?: ScheduledType;
  /** The frequency of this scheduled task. */
  frequency?: ScheduledFrequency;
  /** The target time to trigger the action. The format is HH:MM. */
  time?: string;
  /** The IANA timezone id at which the schedule should execute. */
  timeZone?: string;
  /** Indicates whether or not this scheduled task is enabled. */
  state?: EnableStatus;
}

/** The network connection properties for partial update. Properties not provided in the update request will not be changed. */
export interface NetworkConnectionUpdate extends TrackedResourceUpdate {
  /** The subnet to attach Virtual Machines to */
  subnetId?: string;
  /** Active Directory domain name */
  domainName?: string;
  /** Active Directory domain Organization Unit (OU) */
  organizationUnit?: string;
  /** The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com. */
  domainUsername?: string;
  /** The password for the account used to join domain */
  domainPassword?: string;
}

/** Properties of a project. */
export interface ProjectProperties extends ProjectUpdateProperties {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Properties of a catalog. */
export interface CatalogProperties extends CatalogUpdateProperties {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * When the catalog was last synced.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSyncTime?: Date;
}

/** Properties of a project environment type. */
export interface ProjectEnvironmentTypeProperties
  extends ProjectEnvironmentTypeUpdateProperties {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Properties of a Dev Box definition. */
export interface DevBoxDefinitionProperties
  extends DevBoxDefinitionUpdateProperties {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Validation status of the configured image.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imageValidationStatus?: ImageValidationStatus;
  /**
   * Details for image validator error. Populated when the image validation is not successful.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imageValidationErrorDetails?: ImageValidationErrorDetails;
  /**
   * Image reference information for the currently active image (only populated during updates).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activeImageReference?: ImageReference;
}

/** The resource model definition representing SKU for DevCenter resources */
export interface DevCenterSku extends Sku {
  /**
   * The name of the resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * SKU supported locations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locations?: string[];
  /**
   * Collection of name/value pairs to describe the SKU capabilities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: Capability[];
}

/** Properties of a Pool */
export interface PoolProperties extends PoolUpdateProperties {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** The Schedule properties defining when and what to execute. */
export interface ScheduleProperties extends ScheduleUpdateProperties {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Network properties */
export interface NetworkProperties extends NetworkConnectionUpdateProperties {
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCheckStatus?: HealthCheckStatus;
  /** The name for resource group where NICs will be placed. */
  networkingResourceGroupName?: string;
  /** AAD Join type. */
  domainJoinType: DomainJoinType;
}

/** Represents a devcenter resource. */
export interface DevCenter extends TrackedResource {
  /** Managed identity properties */
  identity?: ManagedServiceIdentity;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Represents a project resource. */
export interface Project extends TrackedResource {
  /** Resource Id of an associated DevCenter */
  devCenterId?: string;
  /** Description of the project. */
  description?: string;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Represents a definition for a Developer Machine. */
export interface DevBoxDefinition extends TrackedResource {
  /** Image reference information. */
  imageReference?: ImageReference;
  /** The SKU for Dev Boxes created using this definition. */
  sku?: Sku;
  /** The storage type used for the Operating System disk of Dev Boxes created using this definition. */
  osStorageType?: string;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Validation status of the configured image.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imageValidationStatus?: ImageValidationStatus;
  /**
   * Details for image validator error. Populated when the image validation is not successful.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imageValidationErrorDetails?: ImageValidationErrorDetails;
  /**
   * Image reference information for the currently active image (only populated during updates).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activeImageReference?: ImageReference;
}

/** A pool of Virtual Machines. */
export interface Pool extends TrackedResource {
  /** Name of a Dev Box definition in parent Project of this Pool */
  devBoxDefinitionName?: string;
  /** Name of a Network Connection in parent Project of this Pool */
  networkConnectionName?: string;
  /** Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created. */
  licenseType?: LicenseType;
  /** Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box. */
  localAdministrator?: LocalAdminStatus;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Network related settings */
export interface NetworkConnection extends TrackedResource {
  /** The subnet to attach Virtual Machines to */
  subnetId?: string;
  /** Active Directory domain name */
  domainName?: string;
  /** Active Directory domain Organization Unit (OU) */
  organizationUnit?: string;
  /** The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com. */
  domainUsername?: string;
  /** The password for the account used to join domain */
  domainPassword?: string;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCheckStatus?: HealthCheckStatus;
  /** The name for resource group where NICs will be placed. */
  networkingResourceGroupName?: string;
  /** AAD Join type. */
  domainJoinType?: DomainJoinType;
}

/** Represents an image. */
export interface Image extends ProxyResource {
  /**
   * The description of the image.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The publisher of the image.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisher?: string;
  /**
   * The name of the image offer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offer?: string;
  /**
   * The SKU name for the image.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sku?: string;
  /**
   * The recommended machine configuration to use with the image.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendedMachineConfiguration?: RecommendedMachineConfiguration;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Represents an image version. */
export interface ImageVersion extends ProxyResource {
  /**
   * The semantic version string.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly namePropertiesName?: string;
  /**
   * The datetime that the backing image version was published.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publishedDate?: Date;
  /**
   * If the version should be excluded from being treated as the latest version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly excludeFromLatest?: boolean;
  /**
   * The size of the OS disk image, in GB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osDiskImageSizeInGb?: number;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned, UserAssigned"
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned, UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link HealthCheckStatus} that the service accepts. */
export enum KnownHealthCheckStatus {
  /** Pending */
  Pending = "Pending",
  /** Running */
  Running = "Running",
  /** Passed */
  Passed = "Passed",
  /** Failed */
  Failed = "Failed",
  /** Warning */
  Warning = "Warning",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for HealthCheckStatus. \
 * {@link KnownHealthCheckStatus} can be used interchangeably with HealthCheckStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Running** \
 * **Passed** \
 * **Failed** \
 * **Warning** \
 * **Unknown**
 */
export type HealthCheckStatus = string;

/** Known values of {@link DomainJoinType} that the service accepts. */
export enum KnownDomainJoinType {
  /** HybridAzureADJoin */
  HybridAzureADJoin = "HybridAzureADJoin",
  /** AzureADJoin */
  AzureADJoin = "AzureADJoin"
}

/**
 * Defines values for DomainJoinType. \
 * {@link KnownDomainJoinType} can be used interchangeably with DomainJoinType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HybridAzureADJoin** \
 * **AzureADJoin**
 */
export type DomainJoinType = string;

/** Known values of {@link EnableStatus} that the service accepts. */
export enum KnownEnableStatus {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for EnableStatus. \
 * {@link KnownEnableStatus} can be used interchangeably with EnableStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type EnableStatus = string;

/** Known values of {@link ImageValidationStatus} that the service accepts. */
export enum KnownImageValidationStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Pending */
  Pending = "Pending",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** TimedOut */
  TimedOut = "TimedOut"
}

/**
 * Defines values for ImageValidationStatus. \
 * {@link KnownImageValidationStatus} can be used interchangeably with ImageValidationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Pending** \
 * **Succeeded** \
 * **Failed** \
 * **TimedOut**
 */
export type ImageValidationStatus = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link UsageUnit} that the service accepts. */
export enum KnownUsageUnit {
  /** Count */
  Count = "Count"
}

/**
 * Defines values for UsageUnit. \
 * {@link KnownUsageUnit} can be used interchangeably with UsageUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Count**
 */
export type UsageUnit = string;

/** Known values of {@link LicenseType} that the service accepts. */
export enum KnownLicenseType {
  /** WindowsClient */
  WindowsClient = "Windows_Client"
}

/**
 * Defines values for LicenseType. \
 * {@link KnownLicenseType} can be used interchangeably with LicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Windows_Client**
 */
export type LicenseType = string;

/** Known values of {@link LocalAdminStatus} that the service accepts. */
export enum KnownLocalAdminStatus {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for LocalAdminStatus. \
 * {@link KnownLocalAdminStatus} can be used interchangeably with LocalAdminStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type LocalAdminStatus = string;

/** Known values of {@link ScheduledType} that the service accepts. */
export enum KnownScheduledType {
  /** StopDevBox */
  StopDevBox = "StopDevBox"
}

/**
 * Defines values for ScheduledType. \
 * {@link KnownScheduledType} can be used interchangeably with ScheduledType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **StopDevBox**
 */
export type ScheduledType = string;

/** Known values of {@link ScheduledFrequency} that the service accepts. */
export enum KnownScheduledFrequency {
  /** Daily */
  Daily = "Daily"
}

/**
 * Defines values for ScheduledFrequency. \
 * {@link KnownScheduledFrequency} can be used interchangeably with ScheduledFrequency,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Daily**
 */
export type ScheduledFrequency = string;
/** Defines values for SkuTier. */
export type SkuTier = "Free" | "Basic" | "Standard" | "Premium";

/** Optional parameters. */
export interface DevCentersListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listBySubscription operation. */
export type DevCentersListBySubscriptionResponse = DevCenterListResult;

/** Optional parameters. */
export interface DevCentersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByResourceGroup operation. */
export type DevCentersListByResourceGroupResponse = DevCenterListResult;

/** Optional parameters. */
export interface DevCentersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DevCentersGetResponse = DevCenter;

/** Optional parameters. */
export interface DevCentersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DevCentersCreateOrUpdateResponse = DevCenter;

/** Optional parameters. */
export interface DevCentersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type DevCentersUpdateResponse = DevCenter;

/** Optional parameters. */
export interface DevCentersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DevCentersListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listBySubscriptionNext operation. */
export type DevCentersListBySubscriptionNextResponse = DevCenterListResult;

/** Optional parameters. */
export interface DevCentersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type DevCentersListByResourceGroupNextResponse = DevCenterListResult;

/** Optional parameters. */
export interface ProjectsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listBySubscription operation. */
export type ProjectsListBySubscriptionResponse = ProjectListResult;

/** Optional parameters. */
export interface ProjectsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByResourceGroup operation. */
export type ProjectsListByResourceGroupResponse = ProjectListResult;

/** Optional parameters. */
export interface ProjectsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProjectsGetResponse = Project;

/** Optional parameters. */
export interface ProjectsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ProjectsCreateOrUpdateResponse = Project;

/** Optional parameters. */
export interface ProjectsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ProjectsUpdateResponse = Project;

/** Optional parameters. */
export interface ProjectsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ProjectsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listBySubscriptionNext operation. */
export type ProjectsListBySubscriptionNextResponse = ProjectListResult;

/** Optional parameters. */
export interface ProjectsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type ProjectsListByResourceGroupNextResponse = ProjectListResult;

/** Optional parameters. */
export interface AttachedNetworksListByProjectOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByProject operation. */
export type AttachedNetworksListByProjectResponse = AttachedNetworkListResult;

/** Optional parameters. */
export interface AttachedNetworksGetByProjectOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByProject operation. */
export type AttachedNetworksGetByProjectResponse = AttachedNetworkConnection;

/** Optional parameters. */
export interface AttachedNetworksListByDevCenterOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenter operation. */
export type AttachedNetworksListByDevCenterResponse = AttachedNetworkListResult;

/** Optional parameters. */
export interface AttachedNetworksGetByDevCenterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByDevCenter operation. */
export type AttachedNetworksGetByDevCenterResponse = AttachedNetworkConnection;

/** Optional parameters. */
export interface AttachedNetworksCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AttachedNetworksCreateOrUpdateResponse = AttachedNetworkConnection;

/** Optional parameters. */
export interface AttachedNetworksDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AttachedNetworksListByProjectNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByProjectNext operation. */
export type AttachedNetworksListByProjectNextResponse = AttachedNetworkListResult;

/** Optional parameters. */
export interface AttachedNetworksListByDevCenterNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenterNext operation. */
export type AttachedNetworksListByDevCenterNextResponse = AttachedNetworkListResult;

/** Optional parameters. */
export interface GalleriesListByDevCenterOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenter operation. */
export type GalleriesListByDevCenterResponse = GalleryListResult;

/** Optional parameters. */
export interface GalleriesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GalleriesGetResponse = Gallery;

/** Optional parameters. */
export interface GalleriesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type GalleriesCreateOrUpdateResponse = Gallery;

/** Optional parameters. */
export interface GalleriesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface GalleriesListByDevCenterNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenterNext operation. */
export type GalleriesListByDevCenterNextResponse = GalleryListResult;

/** Optional parameters. */
export interface ImagesListByDevCenterOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenter operation. */
export type ImagesListByDevCenterResponse = ImageListResult;

/** Optional parameters. */
export interface ImagesListByGalleryOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByGallery operation. */
export type ImagesListByGalleryResponse = ImageListResult;

/** Optional parameters. */
export interface ImagesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ImagesGetResponse = Image;

/** Optional parameters. */
export interface ImagesListByDevCenterNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenterNext operation. */
export type ImagesListByDevCenterNextResponse = ImageListResult;

/** Optional parameters. */
export interface ImagesListByGalleryNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByGalleryNext operation. */
export type ImagesListByGalleryNextResponse = ImageListResult;

/** Optional parameters. */
export interface ImageVersionsListByImageOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByImage operation. */
export type ImageVersionsListByImageResponse = ImageVersionListResult;

/** Optional parameters. */
export interface ImageVersionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ImageVersionsGetResponse = ImageVersion;

/** Optional parameters. */
export interface ImageVersionsListByImageNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByImageNext operation. */
export type ImageVersionsListByImageNextResponse = ImageVersionListResult;

/** Optional parameters. */
export interface CatalogsListByDevCenterOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenter operation. */
export type CatalogsListByDevCenterResponse = CatalogListResult;

/** Optional parameters. */
export interface CatalogsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CatalogsGetResponse = Catalog;

/** Optional parameters. */
export interface CatalogsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CatalogsCreateOrUpdateResponse = Catalog;

/** Optional parameters. */
export interface CatalogsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type CatalogsUpdateResponse = Catalog;

/** Optional parameters. */
export interface CatalogsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CatalogsSyncOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CatalogsListByDevCenterNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenterNext operation. */
export type CatalogsListByDevCenterNextResponse = CatalogListResult;

/** Optional parameters. */
export interface EnvironmentTypesListByDevCenterOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenter operation. */
export type EnvironmentTypesListByDevCenterResponse = EnvironmentTypeListResult;

/** Optional parameters. */
export interface EnvironmentTypesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EnvironmentTypesGetResponse = EnvironmentType;

/** Optional parameters. */
export interface EnvironmentTypesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type EnvironmentTypesCreateOrUpdateResponse = EnvironmentType;

/** Optional parameters. */
export interface EnvironmentTypesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type EnvironmentTypesUpdateResponse = EnvironmentType;

/** Optional parameters. */
export interface EnvironmentTypesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EnvironmentTypesListByDevCenterNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenterNext operation. */
export type EnvironmentTypesListByDevCenterNextResponse = EnvironmentTypeListResult;

/** Optional parameters. */
export interface ProjectAllowedEnvironmentTypesListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the list operation. */
export type ProjectAllowedEnvironmentTypesListResponse = AllowedEnvironmentTypeListResult;

/** Optional parameters. */
export interface ProjectAllowedEnvironmentTypesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProjectAllowedEnvironmentTypesGetResponse = AllowedEnvironmentType;

/** Optional parameters. */
export interface ProjectAllowedEnvironmentTypesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listNext operation. */
export type ProjectAllowedEnvironmentTypesListNextResponse = AllowedEnvironmentTypeListResult;

/** Optional parameters. */
export interface ProjectEnvironmentTypesListOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the list operation. */
export type ProjectEnvironmentTypesListResponse = ProjectEnvironmentTypeListResult;

/** Optional parameters. */
export interface ProjectEnvironmentTypesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProjectEnvironmentTypesGetResponse = ProjectEnvironmentType;

/** Optional parameters. */
export interface ProjectEnvironmentTypesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ProjectEnvironmentTypesCreateOrUpdateResponse = ProjectEnvironmentType;

/** Optional parameters. */
export interface ProjectEnvironmentTypesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ProjectEnvironmentTypesUpdateResponse = ProjectEnvironmentType;

/** Optional parameters. */
export interface ProjectEnvironmentTypesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ProjectEnvironmentTypesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listNext operation. */
export type ProjectEnvironmentTypesListNextResponse = ProjectEnvironmentTypeListResult;

/** Optional parameters. */
export interface DevBoxDefinitionsListByDevCenterOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenter operation. */
export type DevBoxDefinitionsListByDevCenterResponse = DevBoxDefinitionListResult;

/** Optional parameters. */
export interface DevBoxDefinitionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DevBoxDefinitionsGetResponse = DevBoxDefinition;

/** Optional parameters. */
export interface DevBoxDefinitionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DevBoxDefinitionsCreateOrUpdateResponse = DevBoxDefinition;

/** Optional parameters. */
export interface DevBoxDefinitionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type DevBoxDefinitionsUpdateResponse = DevBoxDefinition;

/** Optional parameters. */
export interface DevBoxDefinitionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DevBoxDefinitionsListByProjectOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByProject operation. */
export type DevBoxDefinitionsListByProjectResponse = DevBoxDefinitionListResult;

/** Optional parameters. */
export interface DevBoxDefinitionsGetByProjectOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByProject operation. */
export type DevBoxDefinitionsGetByProjectResponse = DevBoxDefinition;

/** Optional parameters. */
export interface DevBoxDefinitionsListByDevCenterNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByDevCenterNext operation. */
export type DevBoxDefinitionsListByDevCenterNextResponse = DevBoxDefinitionListResult;

/** Optional parameters. */
export interface DevBoxDefinitionsListByProjectNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByProjectNext operation. */
export type DevBoxDefinitionsListByProjectNextResponse = DevBoxDefinitionListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface OperationStatusesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationStatusesGetResponse = OperationStatus;

/** Optional parameters. */
export interface UsagesListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type UsagesListByLocationResponse = ListUsagesResult;

/** Optional parameters. */
export interface UsagesListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type UsagesListByLocationNextResponse = ListUsagesResult;

/** Optional parameters. */
export interface SkusListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listBySubscription operation. */
export type SkusListBySubscriptionResponse = SkuListResult;

/** Optional parameters. */
export interface SkusListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listBySubscriptionNext operation. */
export type SkusListBySubscriptionNextResponse = SkuListResult;

/** Optional parameters. */
export interface PoolsListByProjectOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByProject operation. */
export type PoolsListByProjectResponse = PoolListResult;

/** Optional parameters. */
export interface PoolsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PoolsGetResponse = Pool;

/** Optional parameters. */
export interface PoolsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PoolsCreateOrUpdateResponse = Pool;

/** Optional parameters. */
export interface PoolsUpdateOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type PoolsUpdateResponse = Pool;

/** Optional parameters. */
export interface PoolsDeleteOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PoolsListByProjectNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByProjectNext operation. */
export type PoolsListByProjectNextResponse = PoolListResult;

/** Optional parameters. */
export interface SchedulesListByPoolOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByPool operation. */
export type SchedulesListByPoolResponse = ScheduleListResult;

/** Optional parameters. */
export interface SchedulesGetOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the get operation. */
export type SchedulesGetResponse = Schedule;

/** Optional parameters. */
export interface SchedulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SchedulesCreateOrUpdateResponse = Schedule;

/** Optional parameters. */
export interface SchedulesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SchedulesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SchedulesListByPoolNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByPoolNext operation. */
export type SchedulesListByPoolNextResponse = ScheduleListResult;

/** Optional parameters. */
export interface NetworkConnectionsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listBySubscription operation. */
export type NetworkConnectionsListBySubscriptionResponse = NetworkConnectionListResult;

/** Optional parameters. */
export interface NetworkConnectionsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByResourceGroup operation. */
export type NetworkConnectionsListByResourceGroupResponse = NetworkConnectionListResult;

/** Optional parameters. */
export interface NetworkConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NetworkConnectionsGetResponse = NetworkConnection;

/** Optional parameters. */
export interface NetworkConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NetworkConnectionsCreateOrUpdateResponse = NetworkConnection;

/** Optional parameters. */
export interface NetworkConnectionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type NetworkConnectionsUpdateResponse = NetworkConnection;

/** Optional parameters. */
export interface NetworkConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface NetworkConnectionsListHealthDetailsOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listHealthDetails operation. */
export type NetworkConnectionsListHealthDetailsResponse = HealthCheckStatusDetailsListResult;

/** Optional parameters. */
export interface NetworkConnectionsGetHealthDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getHealthDetails operation. */
export type NetworkConnectionsGetHealthDetailsResponse = HealthCheckStatusDetails;

/** Optional parameters. */
export interface NetworkConnectionsRunHealthChecksOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface NetworkConnectionsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listBySubscriptionNext operation. */
export type NetworkConnectionsListBySubscriptionNextResponse = NetworkConnectionListResult;

/** Optional parameters. */
export interface NetworkConnectionsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type NetworkConnectionsListByResourceGroupNextResponse = NetworkConnectionListResult;

/** Optional parameters. */
export interface NetworkConnectionsListHealthDetailsNextOptionalParams
  extends coreClient.OperationOptions {
  /** The maximum number of resources to return from the operation. Example: '$top=10'. */
  top?: number;
}

/** Contains response data for the listHealthDetailsNext operation. */
export type NetworkConnectionsListHealthDetailsNextResponse = HealthCheckStatusDetailsListResult;

/** Optional parameters. */
export interface DevCenterClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
