/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Maintenance window of a server.
 */
export interface MaintenanceWindow {
  /**
   * indicates whether custom window is enabled or disabled
   */
  customWindow?: string;
  /**
   * start hour for maintenance window
   */
  startHour?: number;
  /**
   * start minute for maintenance window
   */
  startMinute?: number;
  /**
   * day of week for maintenance window
   */
  dayOfWeek?: number;
}

/**
 * Storage Profile properties of a server
 */
export interface Backup {
  /**
   * Backup retention days for the server.
   */
  backupRetentionDays?: number;
  /**
   * Whether or not geo redundant backup is enabled. Possible values include: 'Enabled', 'Disabled'
   */
  geoRedundantBackup?: EnableStatusEnum;
  /**
   * Earliest restore point creation time (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
}

/**
 * Storage Profile properties of a server
 */
export interface Storage {
  /**
   * Max storage size allowed for a server.
   */
  storageSizeGB?: number;
  /**
   * Storage IOPS for a server.
   */
  iops?: number;
  /**
   * Enable Storage Auto Grow or not. Possible values include: 'Enabled', 'Disabled'
   */
  autoGrow?: EnableStatusEnum;
  /**
   * The sku name of the server storage.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageSku?: string;
}

/**
 * Billing information related properties of a server.
 */
export interface Sku {
  /**
   * The name of the sku, e.g. Standard_D32s_v3.
   */
  name: string;
  /**
   * The tier of the particular SKU, e.g. GeneralPurpose. Possible values include: 'Burstable',
   * 'GeneralPurpose', 'MemoryOptimized'
   */
  tier: SkuTier;
}

/**
 * Network related properties of a server
 */
export interface Network {
  /**
   * Whether or not public network access is allowed for this server. Value is 'Disabled' when
   * server has VNet integration. Possible values include: 'Enabled', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicNetworkAccess?: EnableStatusEnum;
  /**
   * Delegated subnet resource id used to setup vnet for a server.
   */
  delegatedSubnetResourceId?: string;
  /**
   * Private DNS zone resource id.
   */
  privateDnsZoneResourceId?: string;
}

/**
 * Network related properties of a server
 */
export interface HighAvailability {
  /**
   * High availability mode for a server. Possible values include: 'Disabled', 'ZoneRedundant',
   * 'SameZone'
   */
  mode?: HighAvailabilityMode;
  /**
   * The state of server high availability. Possible values include: 'NotEnabled',
   * 'CreatingStandby', 'Healthy', 'FailingOver', 'RemovingStandby'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: HighAvailabilityState;
  /**
   * Availability zone of the standby server.
   */
  standbyAvailabilityZone?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * Represents a server.
 */
export interface Server extends TrackedResource {
  /**
   * The SKU (pricing tier) of the server.
   */
  sku?: Sku;
  /**
   * The administrator's login name of a server. Can only be specified when the server is being
   * created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * The password of the administrator login (required for server creation).
   */
  administratorLoginPassword?: string;
  /**
   * Server version. Possible values include: '5.7', '8.0.21'
   */
  version?: ServerVersion;
  /**
   * availability Zone information of the server.
   */
  availabilityZone?: string;
  /**
   * The mode to create a new MySQL server. Possible values include: 'Default',
   * 'PointInTimeRestore', 'Replica', 'GeoRestore'
   */
  createMode?: CreateMode;
  /**
   * The source MySQL server id.
   */
  sourceServerResourceId?: string;
  /**
   * Restore point creation time (ISO8601 format), specifying the time to restore from.
   */
  restorePointInTime?: Date;
  /**
   * The replication role. Possible values include: 'None', 'Source', 'Replica'
   */
  replicationRole?: ReplicationRole;
  /**
   * The maximum number of replicas that a primary server can have.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicaCapacity?: number;
  /**
   * The state of a server. Possible values include: 'Ready', 'Dropping', 'Disabled', 'Starting',
   * 'Stopping', 'Stopped', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ServerState;
  /**
   * The fully qualified domain name of a server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * Storage related properties of a server.
   */
  storage?: Storage;
  /**
   * Backup related properties of a server.
   */
  backup?: Backup;
  /**
   * High availability related properties of a server.
   */
  highAvailability?: HighAvailability;
  /**
   * Network related properties of a server.
   */
  network?: Network;
  /**
   * Maintenance window of a server.
   */
  maintenanceWindow?: MaintenanceWindow;
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Parameters allowed to update for a server.
 */
export interface ServerForUpdate {
  /**
   * The SKU (pricing tier) of the server.
   */
  sku?: Sku;
  /**
   * The password of the administrator login.
   */
  administratorLoginPassword?: string;
  /**
   * Storage related properties of a server.
   */
  storage?: Storage;
  /**
   * Backup related properties of a server.
   */
  backup?: Backup;
  /**
   * High availability related properties of a server.
   */
  highAvailability?: HighAvailability;
  /**
   * Maintenance window of a server.
   */
  maintenanceWindow?: MaintenanceWindow;
  /**
   * The replication role of the server. Possible values include: 'None', 'Source', 'Replica'
   */
  replicationRole?: ReplicationRole;
  /**
   * Application-specific metadata in the form of key-value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Server restart parameters.
 */
export interface ServerRestartParameter {
  /**
   * Whether or not failover to standby server when restarting a server with high availability
   * enabled. Possible values include: 'Enabled', 'Disabled'
   */
  restartWithFailover?: EnableStatusEnum;
  /**
   * The maximum allowed failover time in seconds.
   */
  maxFailoverSeconds?: number;
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * Server backup properties
 */
export interface ServerBackup extends ProxyResource {
  /**
   * Backup type.
   */
  backupType?: string;
  /**
   * Backup completed time (ISO8601 format).
   */
  completedTime?: Date;
  /**
   * Backup source
   */
  source?: string;
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Represents a server firewall rule.
 */
export interface FirewallRule extends ProxyResource {
  /**
   * The start IP address of the server firewall rule. Must be IPv4 format.
   */
  startIpAddress: string;
  /**
   * The end IP address of the server firewall rule. Must be IPv4 format.
   */
  endIpAddress: string;
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Represents a Database.
 */
export interface Database extends ProxyResource {
  /**
   * The charset of the database.
   */
  charset?: string;
  /**
   * The collation of the database.
   */
  collation?: string;
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Represents a Configuration.
 */
export interface Configuration extends ProxyResource {
  /**
   * Value of the configuration.
   */
  value?: string;
  /**
   * Description of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Default value of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultValue?: string;
  /**
   * Data type of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataType?: string;
  /**
   * Allowed values of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowedValues?: string;
  /**
   * Source of the configuration. Possible values include: 'system-default', 'user-override'
   */
  source?: ConfigurationSource;
  /**
   * If is the configuration read only. Possible values include: 'True', 'False'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isReadOnly?: IsReadOnly;
  /**
   * If is the configuration pending restart or not. Possible values include: 'True', 'False'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isConfigPendingRestart?: IsConfigPendingRestart;
  /**
   * If is the configuration dynamic. Possible values include: 'True', 'False'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDynamicConfig?: IsDynamicConfig;
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Represents a Configuration.
 */
export interface ConfigurationForBatchUpdate {
  /**
   * Name of the configuration.
   */
  name?: string;
  /**
   * Value of the configuration.
   */
  value?: string;
  /**
   * Source of the configuration.
   */
  source?: string;
}

/**
 * A list of server configurations to update.
 */
export interface ConfigurationListForBatchUpdate {
  /**
   * The list of server configurations.
   */
  value?: ConfigurationForBatchUpdate[];
}

/**
 * Virtual network subnet usage parameter
 */
export interface VirtualNetworkSubnetUsageParameter {
  /**
   * Virtual network resource id.
   */
  virtualNetworkResourceId?: string;
}

/**
 * Delegated subnet usage data.
 */
export interface DelegatedSubnetUsage {
  /**
   * name of the subnet
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnetName?: string;
  /**
   * Number of used delegated subnets
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usage?: number;
}

/**
 * Virtual network subnet usage data.
 */
export interface VirtualNetworkSubnetUsageResult {
  /**
   * A list of delegated subnet usage
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly delegatedSubnetsUsage?: DelegatedSubnetUsage[];
}

/**
 * Sku capability
 */
export interface SkuCapability {
  /**
   * vCore name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * supported vCores
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vCores?: number;
  /**
   * supported IOPS
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedIops?: number;
  /**
   * supported memory per vCore in MB
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedMemoryPerVCoreMB?: number;
}

/**
 * Server version capabilities.
 */
export interface ServerVersionCapability {
  /**
   * server version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * A list of supported Skus
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedSkus?: SkuCapability[];
}

/**
 * storage edition capability
 */
export interface StorageEditionCapability {
  /**
   * storage edition name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The minimal supported storage size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minStorageSize?: number;
  /**
   * The maximum supported storage size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxStorageSize?: number;
  /**
   * Minimal backup retention days
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minBackupRetentionDays?: number;
  /**
   * Maximum backup retention days
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxBackupRetentionDays?: number;
}

/**
 * Server edition capabilities.
 */
export interface ServerEditionCapability {
  /**
   * Server edition name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * A list of supported storage editions
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedStorageEditions?: StorageEditionCapability[];
  /**
   * A list of supported server versions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedServerVersions?: ServerVersionCapability[];
}

/**
 * Location capabilities.
 */
export interface CapabilityProperties {
  /**
   * zone name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zone?: string;
  /**
   * Supported high availability mode
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedHAMode?: string[];
  /**
   * supported geo backup regions
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedGeoBackupRegions?: string[];
  /**
   * A list of supported flexible server editions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedFlexibleServerEditions?: ServerEditionCapability[];
}

/**
 * The response of get private dns zone suffix.
 */
export interface GetPrivateDnsZoneSuffixResponse {
  /**
   * Represents the private DNS zone suffix.
   */
  privateDnsZoneSuffix?: string;
}

/**
 * Request from client to check resource name availability.
 */
export interface NameAvailabilityRequest {
  /**
   * Resource name to verify.
   */
  name: string;
  /**
   * Resource type used for verification.
   */
  type?: string;
}

/**
 * Represents a resource name availability.
 */
export interface NameAvailability {
  /**
   * Error Message.
   */
  message?: string;
  /**
   * Indicates whether the resource name is available.
   */
  nameAvailable?: boolean;
  /**
   * Reason for name being unavailable.
   */
  reason?: string;
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * Operation resource provider name.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  resource?: string;
  /**
   * Localized friendly name for the operation.
   */
  operation?: string;
  /**
   * Operation description.
   */
  description?: string;
}

/**
 * REST API operation definition.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   */
  name?: string;
  /**
   * The localized display information for this particular operation or action.
   */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation.
   */
  origin?: string;
  /**
   * Additional descriptions for the operation.
   */
  properties?: { [propertyName: string]: any };
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.)
 * @summary Error Response
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * An interface representing MySQLManagementClientOptions.
 */
export interface MySQLManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * A list of servers.
 * @extends Array<Server>
 */
export interface ServerListResult extends Array<Server> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of server backups.
 * @extends Array<ServerBackup>
 */
export interface ServerBackupListResult extends Array<ServerBackup> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of firewall rules.
 * @extends Array<FirewallRule>
 */
export interface FirewallRuleListResult extends Array<FirewallRule> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * A List of databases.
 * @extends Array<Database>
 */
export interface DatabaseListResult extends Array<Database> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of server configurations.
 * @extends Array<Configuration>
 */
export interface ConfigurationListResult extends Array<Configuration> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * location capability
 * @extends Array<CapabilityProperties>
 */
export interface CapabilitiesListResult extends Array<CapabilityProperties> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of resource provider operations.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL client should use to fetch the next page (per server side paging).
   */
  nextLink?: string;
}

/**
 * Defines values for ServerVersion.
 * Possible values include: '5.7', '8.0.21'
 * @readonly
 * @enum {string}
 */
export type ServerVersion = '5.7' | '8.0.21';

/**
 * Defines values for EnableStatusEnum.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type EnableStatusEnum = 'Enabled' | 'Disabled';

/**
 * Defines values for ReplicationRole.
 * Possible values include: 'None', 'Source', 'Replica'
 * @readonly
 * @enum {string}
 */
export type ReplicationRole = 'None' | 'Source' | 'Replica';

/**
 * Defines values for SkuTier.
 * Possible values include: 'Burstable', 'GeneralPurpose', 'MemoryOptimized'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Burstable' | 'GeneralPurpose' | 'MemoryOptimized';

/**
 * Defines values for HighAvailabilityMode.
 * Possible values include: 'Disabled', 'ZoneRedundant', 'SameZone'
 * @readonly
 * @enum {string}
 */
export type HighAvailabilityMode = 'Disabled' | 'ZoneRedundant' | 'SameZone';

/**
 * Defines values for HighAvailabilityState.
 * Possible values include: 'NotEnabled', 'CreatingStandby', 'Healthy', 'FailingOver',
 * 'RemovingStandby'
 * @readonly
 * @enum {string}
 */
export type HighAvailabilityState = 'NotEnabled' | 'CreatingStandby' | 'Healthy' | 'FailingOver' | 'RemovingStandby';

/**
 * Defines values for CreateMode.
 * Possible values include: 'Default', 'PointInTimeRestore', 'Replica', 'GeoRestore'
 * @readonly
 * @enum {string}
 */
export type CreateMode = 'Default' | 'PointInTimeRestore' | 'Replica' | 'GeoRestore';

/**
 * Defines values for ServerState.
 * Possible values include: 'Ready', 'Dropping', 'Disabled', 'Starting', 'Stopping', 'Stopped',
 * 'Updating'
 * @readonly
 * @enum {string}
 */
export type ServerState = 'Ready' | 'Dropping' | 'Disabled' | 'Starting' | 'Stopping' | 'Stopped' | 'Updating';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for ConfigurationSource.
 * Possible values include: 'system-default', 'user-override'
 * @readonly
 * @enum {string}
 */
export type ConfigurationSource = 'system-default' | 'user-override';

/**
 * Defines values for IsReadOnly.
 * Possible values include: 'True', 'False'
 * @readonly
 * @enum {string}
 */
export type IsReadOnly = 'True' | 'False';

/**
 * Defines values for IsConfigPendingRestart.
 * Possible values include: 'True', 'False'
 * @readonly
 * @enum {string}
 */
export type IsConfigPendingRestart = 'True' | 'False';

/**
 * Defines values for IsDynamicConfig.
 * Possible values include: 'True', 'False'
 * @readonly
 * @enum {string}
 */
export type IsDynamicConfig = 'True' | 'False';

/**
 * Contains response data for the create operation.
 */
export type ServersCreateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServersUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServersGetResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServersListByResourceGroupResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServersListResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ServersBeginCreateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ServersBeginUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ServersListByResourceGroupNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServersListNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ReplicasListByServerResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ReplicasListByServerNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupsGetResponse = ServerBackup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBackup;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type BackupsListByServerResponse = ServerBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBackupListResult;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type BackupsListByServerNextResponse = ServerBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBackupListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FirewallRulesCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FirewallRulesGetResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FirewallRulesListByServerResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FirewallRulesBeginCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type FirewallRulesListByServerNextResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabasesCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabasesGetResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type DatabasesListByServerResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatabasesBeginCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type DatabasesListByServerNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ConfigurationsUpdateResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConfigurationsGetResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the batchUpdate operation.
 */
export type ConfigurationsBatchUpdateResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ConfigurationsListByServerResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationListResult;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ConfigurationsBeginUpdateResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the beginBatchUpdate operation.
 */
export type ConfigurationsBeginBatchUpdateResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationListResult;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ConfigurationsListByServerNextResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type LocationBasedCapabilitiesListResponse = CapabilitiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilitiesListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type LocationBasedCapabilitiesListNextResponse = CapabilitiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CapabilitiesListResult;
    };
};

/**
 * Contains response data for the execute operation.
 */
export type CheckVirtualNetworkSubnetUsageExecuteResponse = VirtualNetworkSubnetUsageResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkSubnetUsageResult;
    };
};

/**
 * Contains response data for the execute operation.
 */
export type CheckNameAvailabilityExecuteResponse = NameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameAvailability;
    };
};

/**
 * Contains response data for the execute operation.
 */
export type GetPrivateDnsZoneSuffixExecuteResponse = GetPrivateDnsZoneSuffixResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetPrivateDnsZoneSuffixResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
