/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const MaintenanceWindow: msRest.CompositeMapper = {
  serializedName: "MaintenanceWindow",
  type: {
    name: "Composite",
    className: "MaintenanceWindow",
    modelProperties: {
      customWindow: {
        serializedName: "customWindow",
        type: {
          name: "String"
        }
      },
      startHour: {
        serializedName: "startHour",
        type: {
          name: "Number"
        }
      },
      startMinute: {
        serializedName: "startMinute",
        type: {
          name: "Number"
        }
      },
      dayOfWeek: {
        serializedName: "dayOfWeek",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Backup: msRest.CompositeMapper = {
  serializedName: "Backup",
  type: {
    name: "Composite",
    className: "Backup",
    modelProperties: {
      backupRetentionDays: {
        serializedName: "backupRetentionDays",
        type: {
          name: "Number"
        }
      },
      geoRedundantBackup: {
        serializedName: "geoRedundantBackup",
        type: {
          name: "String"
        }
      },
      earliestRestoreDate: {
        readOnly: true,
        serializedName: "earliestRestoreDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Storage: msRest.CompositeMapper = {
  serializedName: "Storage",
  type: {
    name: "Composite",
    className: "Storage",
    modelProperties: {
      storageSizeGB: {
        serializedName: "storageSizeGB",
        type: {
          name: "Number"
        }
      },
      iops: {
        serializedName: "iops",
        type: {
          name: "Number"
        }
      },
      autoGrow: {
        serializedName: "autoGrow",
        type: {
          name: "String"
        }
      },
      storageSku: {
        readOnly: true,
        serializedName: "storageSku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        required: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Network: msRest.CompositeMapper = {
  serializedName: "Network",
  type: {
    name: "Composite",
    className: "Network",
    modelProperties: {
      publicNetworkAccess: {
        readOnly: true,
        serializedName: "publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      delegatedSubnetResourceId: {
        serializedName: "delegatedSubnetResourceId",
        type: {
          name: "String"
        }
      },
      privateDnsZoneResourceId: {
        serializedName: "privateDnsZoneResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HighAvailability: msRest.CompositeMapper = {
  serializedName: "HighAvailability",
  type: {
    name: "Composite",
    className: "HighAvailability",
    modelProperties: {
      mode: {
        serializedName: "mode",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      standbyAvailabilityZone: {
        serializedName: "standbyAvailabilityZone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Server: msRest.CompositeMapper = {
  serializedName: "Server",
  type: {
    name: "Composite",
    className: "Server",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      administratorLogin: {
        serializedName: "properties.administratorLogin",
        type: {
          name: "String"
        }
      },
      administratorLoginPassword: {
        serializedName: "properties.administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      availabilityZone: {
        serializedName: "properties.availabilityZone",
        type: {
          name: "String"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      sourceServerResourceId: {
        serializedName: "properties.sourceServerResourceId",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      replicationRole: {
        serializedName: "properties.replicationRole",
        type: {
          name: "String"
        }
      },
      replicaCapacity: {
        readOnly: true,
        serializedName: "properties.replicaCapacity",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      fullyQualifiedDomainName: {
        readOnly: true,
        serializedName: "properties.fullyQualifiedDomainName",
        type: {
          name: "String"
        }
      },
      storage: {
        serializedName: "properties.storage",
        type: {
          name: "Composite",
          className: "Storage"
        }
      },
      backup: {
        serializedName: "properties.backup",
        type: {
          name: "Composite",
          className: "Backup"
        }
      },
      highAvailability: {
        serializedName: "properties.highAvailability",
        type: {
          name: "Composite",
          className: "HighAvailability"
        }
      },
      network: {
        serializedName: "properties.network",
        type: {
          name: "Composite",
          className: "Network"
        }
      },
      maintenanceWindow: {
        serializedName: "properties.maintenanceWindow",
        type: {
          name: "Composite",
          className: "MaintenanceWindow"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const ServerForUpdate: msRest.CompositeMapper = {
  serializedName: "ServerForUpdate",
  type: {
    name: "Composite",
    className: "ServerForUpdate",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      administratorLoginPassword: {
        serializedName: "properties.administratorLoginPassword",
        type: {
          name: "String"
        }
      },
      storage: {
        serializedName: "properties.storage",
        type: {
          name: "Composite",
          className: "Storage"
        }
      },
      backup: {
        serializedName: "properties.backup",
        type: {
          name: "Composite",
          className: "Backup"
        }
      },
      highAvailability: {
        serializedName: "properties.highAvailability",
        type: {
          name: "Composite",
          className: "HighAvailability"
        }
      },
      maintenanceWindow: {
        serializedName: "properties.maintenanceWindow",
        type: {
          name: "Composite",
          className: "MaintenanceWindow"
        }
      },
      replicationRole: {
        serializedName: "properties.replicationRole",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ServerRestartParameter: msRest.CompositeMapper = {
  serializedName: "ServerRestartParameter",
  type: {
    name: "Composite",
    className: "ServerRestartParameter",
    modelProperties: {
      restartWithFailover: {
        serializedName: "restartWithFailover",
        type: {
          name: "String"
        }
      },
      maxFailoverSeconds: {
        serializedName: "maxFailoverSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ServerBackup: msRest.CompositeMapper = {
  serializedName: "ServerBackup",
  type: {
    name: "Composite",
    className: "ServerBackup",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      backupType: {
        serializedName: "properties.backupType",
        type: {
          name: "String"
        }
      },
      completedTime: {
        serializedName: "properties.completedTime",
        type: {
          name: "DateTime"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const FirewallRule: msRest.CompositeMapper = {
  serializedName: "FirewallRule",
  type: {
    name: "Composite",
    className: "FirewallRule",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      startIpAddress: {
        required: true,
        serializedName: "properties.startIpAddress",
        constraints: {
          Pattern: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/
        },
        type: {
          name: "String"
        }
      },
      endIpAddress: {
        required: true,
        serializedName: "properties.endIpAddress",
        constraints: {
          Pattern: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/
        },
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const Database: msRest.CompositeMapper = {
  serializedName: "Database",
  type: {
    name: "Composite",
    className: "Database",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      charset: {
        serializedName: "properties.charset",
        type: {
          name: "String"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const Configuration: msRest.CompositeMapper = {
  serializedName: "Configuration",
  type: {
    name: "Composite",
    className: "Configuration",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      value: {
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      defaultValue: {
        readOnly: true,
        serializedName: "properties.defaultValue",
        type: {
          name: "String"
        }
      },
      dataType: {
        readOnly: true,
        serializedName: "properties.dataType",
        type: {
          name: "String"
        }
      },
      allowedValues: {
        readOnly: true,
        serializedName: "properties.allowedValues",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      isReadOnly: {
        readOnly: true,
        serializedName: "properties.isReadOnly",
        type: {
          name: "String"
        }
      },
      isConfigPendingRestart: {
        readOnly: true,
        serializedName: "properties.isConfigPendingRestart",
        type: {
          name: "String"
        }
      },
      isDynamicConfig: {
        readOnly: true,
        serializedName: "properties.isDynamicConfig",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const ConfigurationForBatchUpdate: msRest.CompositeMapper = {
  serializedName: "ConfigurationForBatchUpdate",
  type: {
    name: "Composite",
    className: "ConfigurationForBatchUpdate",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationListForBatchUpdate: msRest.CompositeMapper = {
  serializedName: "ConfigurationListForBatchUpdate",
  type: {
    name: "Composite",
    className: "ConfigurationListForBatchUpdate",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationForBatchUpdate"
            }
          }
        }
      }
    }
  }
};

export const VirtualNetworkSubnetUsageParameter: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkSubnetUsageParameter",
  type: {
    name: "Composite",
    className: "VirtualNetworkSubnetUsageParameter",
    modelProperties: {
      virtualNetworkResourceId: {
        serializedName: "virtualNetworkResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DelegatedSubnetUsage: msRest.CompositeMapper = {
  serializedName: "DelegatedSubnetUsage",
  type: {
    name: "Composite",
    className: "DelegatedSubnetUsage",
    modelProperties: {
      subnetName: {
        readOnly: true,
        serializedName: "subnetName",
        type: {
          name: "String"
        }
      },
      usage: {
        readOnly: true,
        serializedName: "usage",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualNetworkSubnetUsageResult: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkSubnetUsageResult",
  type: {
    name: "Composite",
    className: "VirtualNetworkSubnetUsageResult",
    modelProperties: {
      delegatedSubnetsUsage: {
        readOnly: true,
        serializedName: "delegatedSubnetsUsage",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DelegatedSubnetUsage"
            }
          }
        }
      }
    }
  }
};

export const SkuCapability: msRest.CompositeMapper = {
  serializedName: "SkuCapability",
  type: {
    name: "Composite",
    className: "SkuCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      vCores: {
        readOnly: true,
        serializedName: "vCores",
        type: {
          name: "Number"
        }
      },
      supportedIops: {
        readOnly: true,
        serializedName: "supportedIops",
        type: {
          name: "Number"
        }
      },
      supportedMemoryPerVCoreMB: {
        readOnly: true,
        serializedName: "supportedMemoryPerVCoreMB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerVersionCapability: msRest.CompositeMapper = {
  serializedName: "ServerVersionCapability",
  type: {
    name: "Composite",
    className: "ServerVersionCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      supportedSkus: {
        readOnly: true,
        serializedName: "supportedSkus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuCapability"
            }
          }
        }
      }
    }
  }
};

export const StorageEditionCapability: msRest.CompositeMapper = {
  serializedName: "StorageEditionCapability",
  type: {
    name: "Composite",
    className: "StorageEditionCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      minStorageSize: {
        readOnly: true,
        serializedName: "minStorageSize",
        type: {
          name: "Number"
        }
      },
      maxStorageSize: {
        readOnly: true,
        serializedName: "maxStorageSize",
        type: {
          name: "Number"
        }
      },
      minBackupRetentionDays: {
        readOnly: true,
        serializedName: "minBackupRetentionDays",
        type: {
          name: "Number"
        }
      },
      maxBackupRetentionDays: {
        readOnly: true,
        serializedName: "maxBackupRetentionDays",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerEditionCapability: msRest.CompositeMapper = {
  serializedName: "ServerEditionCapability",
  type: {
    name: "Composite",
    className: "ServerEditionCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      supportedStorageEditions: {
        readOnly: true,
        serializedName: "supportedStorageEditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageEditionCapability"
            }
          }
        }
      },
      supportedServerVersions: {
        readOnly: true,
        serializedName: "supportedServerVersions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerVersionCapability"
            }
          }
        }
      }
    }
  }
};

export const CapabilityProperties: msRest.CompositeMapper = {
  serializedName: "CapabilityProperties",
  type: {
    name: "Composite",
    className: "CapabilityProperties",
    modelProperties: {
      zone: {
        readOnly: true,
        serializedName: "zone",
        type: {
          name: "String"
        }
      },
      supportedHAMode: {
        readOnly: true,
        serializedName: "supportedHAMode",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedGeoBackupRegions: {
        readOnly: true,
        serializedName: "supportedGeoBackupRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedFlexibleServerEditions: {
        readOnly: true,
        serializedName: "supportedFlexibleServerEditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerEditionCapability"
            }
          }
        }
      }
    }
  }
};

export const GetPrivateDnsZoneSuffixResponse: msRest.CompositeMapper = {
  serializedName: "GetPrivateDnsZoneSuffixResponse",
  type: {
    name: "Composite",
    className: "GetPrivateDnsZoneSuffixResponse",
    modelProperties: {
      privateDnsZoneSuffix: {
        serializedName: "privateDnsZoneSuffix",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "NameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "NameAvailabilityRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameAvailability: msRest.CompositeMapper = {
  serializedName: "NameAvailability",
  type: {
    name: "Composite",
    className: "NameAvailability",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerListResult: msRest.CompositeMapper = {
  serializedName: "ServerListResult",
  type: {
    name: "Composite",
    className: "ServerListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Server"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerBackupListResult: msRest.CompositeMapper = {
  serializedName: "ServerBackupListResult",
  type: {
    name: "Composite",
    className: "ServerBackupListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerBackup"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FirewallRuleListResult: msRest.CompositeMapper = {
  serializedName: "FirewallRuleListResult",
  type: {
    name: "Composite",
    className: "FirewallRuleListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FirewallRule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseListResult",
  type: {
    name: "Composite",
    className: "DatabaseListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Database"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationListResult: msRest.CompositeMapper = {
  serializedName: "ConfigurationListResult",
  type: {
    name: "Composite",
    className: "ConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Configuration"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CapabilitiesListResult: msRest.CompositeMapper = {
  serializedName: "CapabilitiesListResult",
  type: {
    name: "Composite",
    className: "CapabilitiesListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CapabilityProperties"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
