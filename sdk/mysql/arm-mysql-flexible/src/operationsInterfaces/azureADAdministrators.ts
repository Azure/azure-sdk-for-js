/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AzureADAdministrator,
  AzureADAdministratorsListByServerOptionalParams,
  AdministratorName,
  AzureADAdministratorsCreateOrUpdateOptionalParams,
  AzureADAdministratorsCreateOrUpdateResponse,
  AzureADAdministratorsDeleteOptionalParams,
  AzureADAdministratorsGetOptionalParams,
  AzureADAdministratorsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AzureADAdministrators. */
export interface AzureADAdministrators {
  /**
   * List all the AAD administrators in a given server.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param options The options parameters.
   */
  listByServer(
    resourceGroupName: string,
    serverName: string,
    options?: AzureADAdministratorsListByServerOptionalParams
  ): PagedAsyncIterableIterator<AzureADAdministrator>;
  /**
   * Creates or updates an existing Azure Active Directory administrator.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param administratorName The name of the Azure AD Administrator.
   * @param parameters The required parameters for creating or updating an aad administrator.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    serverName: string,
    administratorName: AdministratorName,
    parameters: AzureADAdministrator,
    options?: AzureADAdministratorsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AzureADAdministratorsCreateOrUpdateResponse>,
      AzureADAdministratorsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates an existing Azure Active Directory administrator.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param administratorName The name of the Azure AD Administrator.
   * @param parameters The required parameters for creating or updating an aad administrator.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    serverName: string,
    administratorName: AdministratorName,
    parameters: AzureADAdministrator,
    options?: AzureADAdministratorsCreateOrUpdateOptionalParams
  ): Promise<AzureADAdministratorsCreateOrUpdateResponse>;
  /**
   * Deletes an Azure AD Administrator.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param administratorName The name of the Azure AD Administrator.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    serverName: string,
    administratorName: AdministratorName,
    options?: AzureADAdministratorsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes an Azure AD Administrator.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param administratorName The name of the Azure AD Administrator.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    serverName: string,
    administratorName: AdministratorName,
    options?: AzureADAdministratorsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets information about an azure ad administrator.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serverName The name of the server.
   * @param administratorName The name of the Azure AD Administrator.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    administratorName: AdministratorName,
    options?: AzureADAdministratorsGetOptionalParams
  ): Promise<AzureADAdministratorsGetResponse>;
}
