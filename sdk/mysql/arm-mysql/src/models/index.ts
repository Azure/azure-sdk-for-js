/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Resource properties.
 */
export interface ProxyResource extends BaseResource {
  /**
   * Resource ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Resource properties including location and tags for track resources.
 */
export interface TrackedResource extends ProxyResource {
  /**
   * The location the resource resides in.
   */
  location: string;
  /**
   * Application-specific metadata in the form of key-value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Storage Profile properties of a server
 */
export interface StorageProfile {
  /**
   * Backup retention days for the server.
   */
  backupRetentionDays?: number;
  /**
   * Enable Geo-redundant or not for server backup. Possible values include: 'Enabled', 'Disabled'
   */
  geoRedundantBackup?: GeoRedundantBackup;
  /**
   * Max storage allowed for a server.
   */
  storageMB?: number;
  /**
   * Enable Storage Auto Grow. Possible values include: 'Enabled', 'Disabled'
   */
  storageAutogrow?: StorageAutogrow;
}

/**
 * Contains the possible cases for ServerPropertiesForCreate.
 */
export type ServerPropertiesForCreateUnion = ServerPropertiesForCreate | ServerPropertiesForDefaultCreate | ServerPropertiesForRestore | ServerPropertiesForGeoRestore | ServerPropertiesForReplica;

/**
 * The properties used to create a new server.
 */
export interface ServerPropertiesForCreate {
  /**
   * Polymorphic Discriminator
   */
  createMode: "ServerPropertiesForCreate";
  /**
   * Server version. Possible values include: '5.6', '5.7'
   */
  version?: ServerVersion;
  /**
   * Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled',
   * 'Disabled'
   */
  sslEnforcement?: SslEnforcementEnum;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
}

/**
 * The properties used to create a new server.
 */
export interface ServerPropertiesForDefaultCreate {
  /**
   * Polymorphic Discriminator
   */
  createMode: "Default";
  /**
   * Server version. Possible values include: '5.6', '5.7'
   */
  version?: ServerVersion;
  /**
   * Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled',
   * 'Disabled'
   */
  sslEnforcement?: SslEnforcementEnum;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
  /**
   * The administrator's login name of a server. Can only be specified when the server is being
   * created (and is required for creation).
   */
  administratorLogin: string;
  /**
   * The password of the administrator login.
   */
  administratorLoginPassword: string;
}

/**
 * The properties used to create a new server by restoring from a backup.
 */
export interface ServerPropertiesForRestore {
  /**
   * Polymorphic Discriminator
   */
  createMode: "PointInTimeRestore";
  /**
   * Server version. Possible values include: '5.6', '5.7'
   */
  version?: ServerVersion;
  /**
   * Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled',
   * 'Disabled'
   */
  sslEnforcement?: SslEnforcementEnum;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
  /**
   * The source server id to restore from.
   */
  sourceServerId: string;
  /**
   * Restore point creation time (ISO8601 format), specifying the time to restore from.
   */
  restorePointInTime: Date;
}

/**
 * The properties used to create a new server by restoring to a different region from a geo
 * replicated backup.
 */
export interface ServerPropertiesForGeoRestore {
  /**
   * Polymorphic Discriminator
   */
  createMode: "GeoRestore";
  /**
   * Server version. Possible values include: '5.6', '5.7'
   */
  version?: ServerVersion;
  /**
   * Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled',
   * 'Disabled'
   */
  sslEnforcement?: SslEnforcementEnum;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
  /**
   * The source server id to restore from.
   */
  sourceServerId: string;
}

/**
 * The properties to create a new replica.
 */
export interface ServerPropertiesForReplica {
  /**
   * Polymorphic Discriminator
   */
  createMode: "Replica";
  /**
   * Server version. Possible values include: '5.6', '5.7'
   */
  version?: ServerVersion;
  /**
   * Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled',
   * 'Disabled'
   */
  sslEnforcement?: SslEnforcementEnum;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
  /**
   * The master server id to create replica from.
   */
  sourceServerId: string;
}

/**
 * Billing information related properties of a server.
 */
export interface Sku {
  /**
   * The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
   */
  name?: string;
  /**
   * The tier of the particular SKU, e.g. Basic. Possible values include: 'Basic',
   * 'GeneralPurpose', 'MemoryOptimized'
   */
  tier?: SkuTier;
  /**
   * The scale up/out capacity, representing server's compute units.
   */
  capacity?: number;
  /**
   * The size code, to be interpreted by resource as appropriate.
   */
  size?: string;
  /**
   * The family of hardware.
   */
  family?: string;
}

/**
 * Represents a server.
 */
export interface Server extends TrackedResource {
  /**
   * The SKU (pricing tier) of the server.
   */
  sku?: Sku;
  /**
   * The administrator's login name of a server. Can only be specified when the server is being
   * created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * Server version. Possible values include: '5.6', '5.7'
   */
  version?: ServerVersion;
  /**
   * Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled',
   * 'Disabled'
   */
  sslEnforcement?: SslEnforcementEnum;
  /**
   * A state of a server that is visible to user. Possible values include: 'Ready', 'Dropping',
   * 'Disabled'
   */
  userVisibleState?: ServerState;
  /**
   * The fully qualified domain name of a server.
   */
  fullyQualifiedDomainName?: string;
  /**
   * Earliest restore point creation time (ISO8601 format)
   */
  earliestRestoreDate?: Date;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
  /**
   * The replication role of the server.
   */
  replicationRole?: string;
  /**
   * The master server id of a replica server.
   */
  masterServerId?: string;
  /**
   * The maximum number of replicas that a master server can have.
   */
  replicaCapacity?: number;
}

/**
 * Represents a server to be created.
 */
export interface ServerForCreate {
  /**
   * The SKU (pricing tier) of the server.
   */
  sku?: Sku;
  /**
   * Properties of the server.
   */
  properties: ServerPropertiesForCreateUnion;
  /**
   * The location the resource resides in.
   */
  location: string;
  /**
   * Application-specific metadata in the form of key-value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Parameters allowed to update for a server.
 */
export interface ServerUpdateParameters {
  /**
   * The SKU (pricing tier) of the server.
   */
  sku?: Sku;
  /**
   * Storage profile of a server.
   */
  storageProfile?: StorageProfile;
  /**
   * The password of the administrator login.
   */
  administratorLoginPassword?: string;
  /**
   * The version of a server. Possible values include: '5.6', '5.7'
   */
  version?: ServerVersion;
  /**
   * Enable ssl enforcement or not when connect to server. Possible values include: 'Enabled',
   * 'Disabled'
   */
  sslEnforcement?: SslEnforcementEnum;
  /**
   * The replication role of the server.
   */
  replicationRole?: string;
  /**
   * Application-specific metadata in the form of key-value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Represents a server firewall rule.
 */
export interface FirewallRule extends ProxyResource {
  /**
   * The start IP address of the server firewall rule. Must be IPv4 format.
   */
  startIpAddress: string;
  /**
   * The end IP address of the server firewall rule. Must be IPv4 format.
   */
  endIpAddress: string;
}

/**
 * A virtual network rule.
 */
export interface VirtualNetworkRule extends ProxyResource {
  /**
   * The ARM resource id of the virtual network subnet.
   */
  virtualNetworkSubnetId: string;
  /**
   * Create firewall rule before the virtual network has vnet service endpoint enabled.
   */
  ignoreMissingVnetServiceEndpoint?: boolean;
  /**
   * Virtual Network Rule State. Possible values include: 'Initializing', 'InProgress', 'Ready',
   * 'Deleting', 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: VirtualNetworkRuleState;
}

/**
 * Represents a Database.
 */
export interface Database extends ProxyResource {
  /**
   * The charset of the database.
   */
  charset?: string;
  /**
   * The collation of the database.
   */
  collation?: string;
}

/**
 * Represents a Configuration.
 */
export interface Configuration extends ProxyResource {
  /**
   * Value of the configuration.
   */
  value?: string;
  /**
   * Description of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Default value of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultValue?: string;
  /**
   * Data type of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataType?: string;
  /**
   * Allowed values of the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowedValues?: string;
  /**
   * Source of the configuration.
   */
  source?: string;
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * Operation resource provider name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Localized friendly name for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * Operation description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * REST API operation definition.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The localized display information for this particular operation or action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * The intended executor of the operation. Possible values include: 'NotSpecified', 'user',
   * 'system'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: OperationOrigin;
  /**
   * Additional descriptions for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: { [propertyName: string]: any };
}

/**
 * A list of resource provider operations.
 */
export interface OperationListResult {
  /**
   * The list of resource provider operations.
   */
  value?: Operation[];
}

/**
 * Represents a log file.
 */
export interface LogFile extends ProxyResource {
  /**
   * Size of the log file.
   */
  sizeInKB?: number;
  /**
   * Creation timestamp of the log file.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdTime?: Date;
  /**
   * Last modified timestamp of the log file.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTime?: Date;
  /**
   * Type of the log file.
   */
  logFileType?: string;
  /**
   * The url to download the log file from.
   */
  url?: string;
}

/**
 * Service level objectives for performance tier.
 */
export interface PerformanceTierServiceLevelObjectives {
  /**
   * ID for the service level objective.
   */
  id?: string;
  /**
   * Edition of the performance tier.
   */
  edition?: string;
  /**
   * vCore associated with the service level objective
   */
  vCore?: number;
  /**
   * Hardware generation associated with the service level objective
   */
  hardwareGeneration?: string;
  /**
   * Maximum Backup retention in days for the performance tier edition
   */
  maxBackupRetentionDays?: number;
  /**
   * Minimum Backup retention in days for the performance tier edition
   */
  minBackupRetentionDays?: number;
  /**
   * Max storage allowed for a server.
   */
  maxStorageMB?: number;
  /**
   * Max storage allowed for a server.
   */
  minStorageMB?: number;
}

/**
 * Performance tier properties
 */
export interface PerformanceTierProperties {
  /**
   * ID of the performance tier.
   */
  id?: string;
  /**
   * Service level objectives associated with the performance tier
   */
  serviceLevelObjectives?: PerformanceTierServiceLevelObjectives[];
}

/**
 * Request from client to check resource name availability.
 */
export interface NameAvailabilityRequest {
  /**
   * Resource name to verify.
   */
  name: string;
  /**
   * Resource type used for verification.
   */
  type?: string;
}

/**
 * Represents a resource name availability.
 */
export interface NameAvailability {
  /**
   * Error Message.
   */
  message?: string;
  /**
   * Indicates whether the resource name is available.
   */
  nameAvailable?: boolean;
  /**
   * Reason for name being unavailable.
   */
  reason?: string;
}

/**
 * A server security alert policy.
 */
export interface ServerSecurityAlertPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy, whether it is enabled or disabled. Possible values include:
   * 'Enabled', 'Disabled'
   */
  state: ServerSecurityAlertPolicyState;
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection,
   * Sql_Injection_Vulnerability, Access_Anomaly
   */
  disabledAlerts?: string[];
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
}

/**
 * An interface representing MySQLManagementClientOptions.
 */
export interface MySQLManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * A list of servers.
 * @extends Array<Server>
 */
export interface ServerListResult extends Array<Server> {
}

/**
 * @interface
 * A list of firewall rules.
 * @extends Array<FirewallRule>
 */
export interface FirewallRuleListResult extends Array<FirewallRule> {
}

/**
 * @interface
 * A list of virtual network rules.
 * @extends Array<VirtualNetworkRule>
 */
export interface VirtualNetworkRuleListResult extends Array<VirtualNetworkRule> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A List of databases.
 * @extends Array<Database>
 */
export interface DatabaseListResult extends Array<Database> {
}

/**
 * @interface
 * A list of server configurations.
 * @extends Array<Configuration>
 */
export interface ConfigurationListResult extends Array<Configuration> {
}

/**
 * @interface
 * A list of log files.
 * @extends Array<LogFile>
 */
export interface LogFileListResult extends Array<LogFile> {
}

/**
 * @interface
 * A list of performance tiers.
 * @extends Array<PerformanceTierProperties>
 */
export interface PerformanceTierListResult extends Array<PerformanceTierProperties> {
}

/**
 * Defines values for ServerVersion.
 * Possible values include: '5.6', '5.7'
 * @readonly
 * @enum {string}
 */
export type ServerVersion = '5.6' | '5.7';

/**
 * Defines values for SslEnforcementEnum.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SslEnforcementEnum = 'Enabled' | 'Disabled';

/**
 * Defines values for ServerState.
 * Possible values include: 'Ready', 'Dropping', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type ServerState = 'Ready' | 'Dropping' | 'Disabled';

/**
 * Defines values for GeoRedundantBackup.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type GeoRedundantBackup = 'Enabled' | 'Disabled';

/**
 * Defines values for StorageAutogrow.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type StorageAutogrow = 'Enabled' | 'Disabled';

/**
 * Defines values for SkuTier.
 * Possible values include: 'Basic', 'GeneralPurpose', 'MemoryOptimized'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Basic' | 'GeneralPurpose' | 'MemoryOptimized';

/**
 * Defines values for VirtualNetworkRuleState.
 * Possible values include: 'Initializing', 'InProgress', 'Ready', 'Deleting', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type VirtualNetworkRuleState = 'Initializing' | 'InProgress' | 'Ready' | 'Deleting' | 'Unknown';

/**
 * Defines values for OperationOrigin.
 * Possible values include: 'NotSpecified', 'user', 'system'
 * @readonly
 * @enum {string}
 */
export type OperationOrigin = 'NotSpecified' | 'user' | 'system';

/**
 * Defines values for ServerSecurityAlertPolicyState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type ServerSecurityAlertPolicyState = 'Enabled' | 'Disabled';

/**
 * Contains response data for the create operation.
 */
export type ServersCreateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServersUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServersGetResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServersListByResourceGroupResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServersListResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ServersBeginCreateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ServersBeginUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ReplicasListByServerResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FirewallRulesCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FirewallRulesGetResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FirewallRulesListByServerResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FirewallRulesBeginCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualNetworkRulesGetResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualNetworkRulesCreateOrUpdateResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type VirtualNetworkRulesListByServerResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualNetworkRulesBeginCreateOrUpdateResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type VirtualNetworkRulesListByServerNextResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabasesCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabasesGetResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type DatabasesListByServerResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatabasesBeginCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ConfigurationsCreateOrUpdateResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConfigurationsGetResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ConfigurationsListByServerResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConfigurationListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ConfigurationsBeginCreateOrUpdateResponse = Configuration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Configuration;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type LogFilesListByServerResponse = LogFileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogFileListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type LocationBasedPerformanceTierListResponse = PerformanceTierListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerformanceTierListResult;
    };
};

/**
 * Contains response data for the execute operation.
 */
export type CheckNameAvailabilityExecuteResponse = NameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameAvailability;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerSecurityAlertPoliciesGetResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerSecurityAlertPoliciesCreateOrUpdateResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerSecurityAlertPoliciesBeginCreateOrUpdateResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
