/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/exportsMappers";
import * as Parameters from "../models/parameters";
import { CostManagementClientContext } from "../costManagementClientContext";

/** Class representing a Exports. */
export class Exports {
  private readonly client: CostManagementClientContext;

  /**
   * Create a Exports.
   * @param {CostManagementClientContext} client Reference to the service client.
   */
  constructor(client: CostManagementClientContext) {
    this.client = client;
  }

  /**
   * The operation to list all exports at the given scope.
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportsListResponse>
   */
  list(scope: string, options?: msRest.RequestOptionsBase): Promise<Models.ExportsListResponse>;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param callback The callback
   */
  list(scope: string, callback: msRest.ServiceCallback<Models.ExportListResult>): void;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(scope: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExportListResult>): void;
  list(scope: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExportListResult>, callback?: msRest.ServiceCallback<Models.ExportListResult>): Promise<Models.ExportsListResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ExportsListResponse>;
  }

  /**
   * The operation to get the export for the defined scope by export name.
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportsGetResponse>
   */
  get(scope: string, exportName: string, options?: msRest.RequestOptionsBase): Promise<Models.ExportsGetResponse>;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param callback The callback
   */
  get(scope: string, exportName: string, callback: msRest.ServiceCallback<Models.ExportModel>): void;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(scope: string, exportName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExportModel>): void;
  get(scope: string, exportName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExportModel>, callback?: msRest.ServiceCallback<Models.ExportModel>): Promise<Models.ExportsGetResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        exportName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ExportsGetResponse>;
  }

  /**
   * The operation to create or update a export. Update operation requires latest eTag to be set in
   * the request. You may obtain the latest eTag by performing a get operation. Create operation does
   * not require eTag.
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param parameters Parameters supplied to the CreateOrUpdate Export operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportsCreateOrUpdateResponse>
   */
  createOrUpdate(scope: string, exportName: string, parameters: Models.ExportModel, options?: msRest.RequestOptionsBase): Promise<Models.ExportsCreateOrUpdateResponse>;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param parameters Parameters supplied to the CreateOrUpdate Export operation.
   * @param callback The callback
   */
  createOrUpdate(scope: string, exportName: string, parameters: Models.ExportModel, callback: msRest.ServiceCallback<Models.ExportModel>): void;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param parameters Parameters supplied to the CreateOrUpdate Export operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(scope: string, exportName: string, parameters: Models.ExportModel, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExportModel>): void;
  createOrUpdate(scope: string, exportName: string, parameters: Models.ExportModel, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExportModel>, callback?: msRest.ServiceCallback<Models.ExportModel>): Promise<Models.ExportsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        exportName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.ExportsCreateOrUpdateResponse>;
  }

  /**
   * The operation to delete a export.
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(scope: string, exportName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param callback The callback
   */
  deleteMethod(scope: string, exportName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(scope: string, exportName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(scope: string, exportName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        exportName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * The operation to execute a export.
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  execute(scope: string, exportName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param callback The callback
   */
  execute(scope: string, exportName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  execute(scope: string, exportName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  execute(scope: string, exportName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        exportName,
        options
      },
      executeOperationSpec,
      callback);
  }

  /**
   * The operation to get the execution history of an export for the defined scope by export name.
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportsGetExecutionHistoryResponse>
   */
  getExecutionHistory(scope: string, exportName: string, options?: msRest.RequestOptionsBase): Promise<Models.ExportsGetExecutionHistoryResponse>;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param callback The callback
   */
  getExecutionHistory(scope: string, exportName: string, callback: msRest.ServiceCallback<Models.ExportExecutionListResult>): void;
  /**
   * @param scope The scope associated with query and export operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}'
   * specific for partners.
   * @param exportName Export Name.
   * @param options The optional parameters
   * @param callback The callback
   */
  getExecutionHistory(scope: string, exportName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExportExecutionListResult>): void;
  getExecutionHistory(scope: string, exportName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExportExecutionListResult>, callback?: msRest.ServiceCallback<Models.ExportExecutionListResult>): Promise<Models.ExportsGetExecutionHistoryResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        exportName,
        options
      },
      getExecutionHistoryOperationSpec,
      callback) as Promise<Models.ExportsGetExecutionHistoryResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.CostManagement/exports",
  urlParameters: [
    Parameters.scope1
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ExportListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.CostManagement/exports/{exportName}",
  urlParameters: [
    Parameters.scope1,
    Parameters.exportName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ExportModel
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "{scope}/providers/Microsoft.CostManagement/exports/{exportName}",
  urlParameters: [
    Parameters.scope1,
    Parameters.exportName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.ExportModel,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ExportModel
    },
    201: {
      bodyMapper: Mappers.ExportModel
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "{scope}/providers/Microsoft.CostManagement/exports/{exportName}",
  urlParameters: [
    Parameters.scope1,
    Parameters.exportName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const executeOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "{scope}/providers/Microsoft.CostManagement/exports/{exportName}/run",
  urlParameters: [
    Parameters.scope1,
    Parameters.exportName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getExecutionHistoryOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.CostManagement/exports/{exportName}/runHistory",
  urlParameters: [
    Parameters.scope1,
    Parameters.exportName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ExportExecutionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
