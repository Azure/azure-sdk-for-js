/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/dimensionsMappers";
import * as Parameters from "../models/parameters";
import { CostManagementClientContext } from "../costManagementClientContext";

/** Class representing a Dimensions. */
export class Dimensions {
  private readonly client: CostManagementClientContext;

  /**
   * Create a Dimensions.
   * @param {CostManagementClientContext} client Reference to the service client.
   */
  constructor(client: CostManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the dimensions by the defined scope.
   * @param scope The scope associated with dimension operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific
   * for partners.
   * @param [options] The optional parameters
   * @returns Promise<Models.DimensionsListResponse>
   */
  list(scope: string, options?: Models.DimensionsListOptionalParams): Promise<Models.DimensionsListResponse>;
  /**
   * @param scope The scope associated with dimension operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific
   * for partners.
   * @param callback The callback
   */
  list(scope: string, callback: msRest.ServiceCallback<Models.DimensionsListResult>): void;
  /**
   * @param scope The scope associated with dimension operations. This includes
   * '/subscriptions/{subscriptionId}/' for subscription scope,
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
   * Department scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
   * for EnrollmentAccount scope,
   * '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group
   * scope,
   * '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   * for billingProfile scope,
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}'
   * for invoiceSection scope, and
   * 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific
   * for partners.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(scope: string, options: Models.DimensionsListOptionalParams, callback: msRest.ServiceCallback<Models.DimensionsListResult>): void;
  list(scope: string, options?: Models.DimensionsListOptionalParams | msRest.ServiceCallback<Models.DimensionsListResult>, callback?: msRest.ServiceCallback<Models.DimensionsListResult>): Promise<Models.DimensionsListResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.DimensionsListResponse>;
  }

  /**
   * Lists the dimensions by the external cloud provider type.
   * @param externalCloudProviderType The external cloud provider type associated with
   * dimension/query operations. This includes 'externalSubscriptions' for linked account and
   * 'externalBillingAccounts' for consolidated account. Possible values include:
   * 'externalSubscriptions', 'externalBillingAccounts'
   * @param externalCloudProviderId This can be '{externalSubscriptionId}' for linked account or
   * '{externalBillingAccountId}' for consolidated account used with dimension/query operations.
   * @param [options] The optional parameters
   * @returns Promise<Models.DimensionsByExternalCloudProviderTypeResponse>
   */
  byExternalCloudProviderType(externalCloudProviderType: Models.ExternalCloudProviderType, externalCloudProviderId: string, options?: Models.DimensionsByExternalCloudProviderTypeOptionalParams): Promise<Models.DimensionsByExternalCloudProviderTypeResponse>;
  /**
   * @param externalCloudProviderType The external cloud provider type associated with
   * dimension/query operations. This includes 'externalSubscriptions' for linked account and
   * 'externalBillingAccounts' for consolidated account. Possible values include:
   * 'externalSubscriptions', 'externalBillingAccounts'
   * @param externalCloudProviderId This can be '{externalSubscriptionId}' for linked account or
   * '{externalBillingAccountId}' for consolidated account used with dimension/query operations.
   * @param callback The callback
   */
  byExternalCloudProviderType(externalCloudProviderType: Models.ExternalCloudProviderType, externalCloudProviderId: string, callback: msRest.ServiceCallback<Models.DimensionsListResult>): void;
  /**
   * @param externalCloudProviderType The external cloud provider type associated with
   * dimension/query operations. This includes 'externalSubscriptions' for linked account and
   * 'externalBillingAccounts' for consolidated account. Possible values include:
   * 'externalSubscriptions', 'externalBillingAccounts'
   * @param externalCloudProviderId This can be '{externalSubscriptionId}' for linked account or
   * '{externalBillingAccountId}' for consolidated account used with dimension/query operations.
   * @param options The optional parameters
   * @param callback The callback
   */
  byExternalCloudProviderType(externalCloudProviderType: Models.ExternalCloudProviderType, externalCloudProviderId: string, options: Models.DimensionsByExternalCloudProviderTypeOptionalParams, callback: msRest.ServiceCallback<Models.DimensionsListResult>): void;
  byExternalCloudProviderType(externalCloudProviderType: Models.ExternalCloudProviderType, externalCloudProviderId: string, options?: Models.DimensionsByExternalCloudProviderTypeOptionalParams | msRest.ServiceCallback<Models.DimensionsListResult>, callback?: msRest.ServiceCallback<Models.DimensionsListResult>): Promise<Models.DimensionsByExternalCloudProviderTypeResponse> {
    return this.client.sendOperationRequest(
      {
        externalCloudProviderType,
        externalCloudProviderId,
        options
      },
      byExternalCloudProviderTypeOperationSpec,
      callback) as Promise<Models.DimensionsByExternalCloudProviderTypeResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.CostManagement/dimensions",
  urlParameters: [
    Parameters.scope1
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter,
    Parameters.expand,
    Parameters.skiptoken,
    Parameters.top
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DimensionsListResult
    },
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const byExternalCloudProviderTypeOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/dimensions",
  urlParameters: [
    Parameters.externalCloudProviderType,
    Parameters.externalCloudProviderId
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter,
    Parameters.expand,
    Parameters.skiptoken,
    Parameters.top
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DimensionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
