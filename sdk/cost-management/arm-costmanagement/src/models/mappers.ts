/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ReportConfigTimePeriod: msRest.CompositeMapper = {
  serializedName: "ReportConfigTimePeriod",
  type: {
    name: "Composite",
    className: "ReportConfigTimePeriod",
    modelProperties: {
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "DateTime"
        }
      },
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ReportConfigDatasetConfiguration: msRest.CompositeMapper = {
  serializedName: "ReportConfigDatasetConfiguration",
  type: {
    name: "Composite",
    className: "ReportConfigDatasetConfiguration",
    modelProperties: {
      columns: {
        serializedName: "columns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ReportConfigAggregation: msRest.CompositeMapper = {
  serializedName: "ReportConfigAggregation",
  type: {
    name: "Composite",
    className: "ReportConfigAggregation",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      functionProperty: {
        required: true,
        serializedName: "function",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReportConfigGrouping: msRest.CompositeMapper = {
  serializedName: "ReportConfigGrouping",
  type: {
    name: "Composite",
    className: "ReportConfigGrouping",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReportConfigSorting: msRest.CompositeMapper = {
  serializedName: "ReportConfigSorting",
  type: {
    name: "Composite",
    className: "ReportConfigSorting",
    modelProperties: {
      direction: {
        serializedName: "direction",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReportConfigComparisonExpression: msRest.CompositeMapper = {
  serializedName: "ReportConfigComparisonExpression",
  type: {
    name: "Composite",
    className: "ReportConfigComparisonExpression",
    modelProperties: {
      name: {
        required: true,
        nullable: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      operator: {
        required: true,
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      values: {
        required: true,
        serializedName: "values",
        constraints: {
          MinItems: 1
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ReportConfigFilter: msRest.CompositeMapper = {
  serializedName: "ReportConfigFilter",
  type: {
    name: "Composite",
    className: "ReportConfigFilter",
    modelProperties: {
      and: {
        serializedName: "and",
        constraints: {
          MinItems: 2
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReportConfigFilter"
            }
          }
        }
      },
      or: {
        serializedName: "or",
        constraints: {
          MinItems: 2
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReportConfigFilter"
            }
          }
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Composite",
          className: "ReportConfigComparisonExpression"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Composite",
          className: "ReportConfigComparisonExpression"
        }
      },
      tagKey: {
        serializedName: "tagKey",
        type: {
          name: "Composite",
          className: "ReportConfigComparisonExpression"
        }
      },
      tagValue: {
        serializedName: "tagValue",
        type: {
          name: "Composite",
          className: "ReportConfigComparisonExpression"
        }
      }
    }
  }
};

export const ReportConfigDataset: msRest.CompositeMapper = {
  serializedName: "ReportConfigDataset",
  type: {
    name: "Composite",
    className: "ReportConfigDataset",
    modelProperties: {
      granularity: {
        serializedName: "granularity",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "Composite",
          className: "ReportConfigDatasetConfiguration"
        }
      },
      aggregation: {
        serializedName: "aggregation",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ReportConfigAggregation"
            }
          }
        }
      },
      grouping: {
        serializedName: "grouping",
        constraints: {
          MaxItems: 2
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReportConfigGrouping"
            }
          }
        }
      },
      sorting: {
        serializedName: "sorting",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReportConfigSorting"
            }
          }
        }
      },
      filter: {
        serializedName: "filter",
        type: {
          name: "Composite",
          className: "ReportConfigFilter"
        }
      }
    }
  }
};

export const CacheItem: msRest.CompositeMapper = {
  serializedName: "CacheItem",
  type: {
    name: "Composite",
    className: "CacheItem",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      channel: {
        required: true,
        serializedName: "channel",
        type: {
          name: "String"
        }
      },
      subchannel: {
        required: true,
        serializedName: "subchannel",
        type: {
          name: "String"
        }
      },
      parent: {
        nullable: true,
        serializedName: "parent",
        type: {
          name: "String"
        }
      },
      status: {
        nullable: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxySettingResource: msRest.CompositeMapper = {
  serializedName: "ProxySettingResource",
  type: {
    name: "Composite",
    className: "ProxySettingResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      kind: {
        readOnly: true,
        serializedName: "kind",
        constraints: {
          MaxLength: 10
        },
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Setting: msRest.CompositeMapper = {
  serializedName: "Setting",
  type: {
    name: "Composite",
    className: "Setting",
    modelProperties: {
      ...ProxySettingResource.type.modelProperties,
      scope: {
        required: true,
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      startOn: {
        nullable: true,
        serializedName: "properties.startOn",
        type: {
          name: "String"
        }
      },
      cache: {
        serializedName: "properties.cache",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CacheItem"
            }
          }
        }
      }
    }
  }
};

export const KpiProperties: msRest.CompositeMapper = {
  serializedName: "KpiProperties",
  type: {
    name: "Composite",
    className: "KpiProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PivotProperties: msRest.CompositeMapper = {
  serializedName: "PivotProperties",
  type: {
    name: "Composite",
    className: "PivotProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const View: msRest.CompositeMapper = {
  serializedName: "View",
  type: {
    name: "Composite",
    className: "View",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      createdOn: {
        readOnly: true,
        serializedName: "properties.createdOn",
        type: {
          name: "DateTime"
        }
      },
      modifiedOn: {
        readOnly: true,
        serializedName: "properties.modifiedOn",
        type: {
          name: "DateTime"
        }
      },
      dateRange: {
        readOnly: true,
        serializedName: "properties.dateRange",
        type: {
          name: "String"
        }
      },
      currency: {
        readOnly: true,
        serializedName: "properties.currency",
        type: {
          name: "String"
        }
      },
      viewType: {
        required: true,
        isConstant: true,
        serializedName: "properties.query.type",
        defaultValue: 'Usage',
        type: {
          name: "String"
        }
      },
      timeframe: {
        required: true,
        serializedName: "properties.query.timeframe",
        type: {
          name: "String"
        }
      },
      timePeriod: {
        serializedName: "properties.query.timePeriod",
        type: {
          name: "Composite",
          className: "ReportConfigTimePeriod"
        }
      },
      dataSet: {
        serializedName: "properties.query.dataSet",
        type: {
          name: "Composite",
          className: "ReportConfigDataset"
        }
      },
      includeMonetaryCommitment: {
        readOnly: true,
        serializedName: "properties.query.includeMonetaryCommitment",
        type: {
          name: "Boolean"
        }
      },
      chart: {
        serializedName: "properties.chart",
        type: {
          name: "String"
        }
      },
      accumulated: {
        serializedName: "properties.accumulated",
        type: {
          name: "String"
        }
      },
      metric: {
        serializedName: "properties.metric",
        type: {
          name: "String"
        }
      },
      kpis: {
        serializedName: "properties.kpis",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiProperties"
            }
          }
        }
      },
      pivots: {
        serializedName: "properties.pivots",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PivotProperties"
            }
          }
        }
      }
    }
  }
};

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetails"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Dimension: msRest.CompositeMapper = {
  serializedName: "Dimension",
  type: {
    name: "Composite",
    className: "Dimension",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      filterEnabled: {
        readOnly: true,
        serializedName: "properties.filterEnabled",
        type: {
          name: "Boolean"
        }
      },
      groupingEnabled: {
        readOnly: true,
        serializedName: "properties.groupingEnabled",
        type: {
          name: "Boolean"
        }
      },
      data: {
        serializedName: "properties.data",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      total: {
        readOnly: true,
        serializedName: "properties.total",
        type: {
          name: "Number"
        }
      },
      category: {
        readOnly: true,
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      usageStart: {
        readOnly: true,
        serializedName: "properties.usageStart",
        type: {
          name: "DateTime"
        }
      },
      usageEnd: {
        readOnly: true,
        serializedName: "properties.usageEnd",
        type: {
          name: "DateTime"
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "properties.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertPropertiesDefinition: msRest.CompositeMapper = {
  serializedName: "AlertProperties_definition",
  type: {
    name: "Composite",
    className: "AlertPropertiesDefinition",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      criteria: {
        serializedName: "criteria",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertPropertiesDetails: msRest.CompositeMapper = {
  serializedName: "AlertProperties_details",
  type: {
    name: "Composite",
    className: "AlertPropertiesDetails",
    modelProperties: {
      timeGrainType: {
        serializedName: "timeGrainType",
        type: {
          name: "String"
        }
      },
      periodStartDate: {
        serializedName: "periodStartDate",
        type: {
          name: "String"
        }
      },
      triggeredBy: {
        serializedName: "triggeredBy",
        type: {
          name: "String"
        }
      },
      resourceGroupFilter: {
        serializedName: "resourceGroupFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      },
      resourceFilter: {
        serializedName: "resourceFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      },
      meterFilter: {
        serializedName: "meterFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      },
      tagFilter: {
        serializedName: "tagFilter",
        type: {
          name: "Object"
        }
      },
      threshold: {
        serializedName: "threshold",
        type: {
          name: "Number"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      amount: {
        serializedName: "amount",
        type: {
          name: "Number"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      currentSpend: {
        serializedName: "currentSpend",
        type: {
          name: "Number"
        }
      },
      contactEmails: {
        serializedName: "contactEmails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contactGroups: {
        serializedName: "contactGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contactRoles: {
        serializedName: "contactRoles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      overridingAlert: {
        serializedName: "overridingAlert",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Alert: msRest.CompositeMapper = {
  serializedName: "Alert",
  type: {
    name: "Composite",
    className: "Alert",
    modelProperties: {
      ...Resource.type.modelProperties,
      definition: {
        serializedName: "properties.definition",
        type: {
          name: "Composite",
          className: "AlertPropertiesDefinition"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "properties.details",
        type: {
          name: "Composite",
          className: "AlertPropertiesDetails"
        }
      },
      costEntityId: {
        serializedName: "properties.costEntityId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      creationTime: {
        serializedName: "properties.creationTime",
        type: {
          name: "String"
        }
      },
      closeTime: {
        serializedName: "properties.closeTime",
        type: {
          name: "String"
        }
      },
      modificationTime: {
        serializedName: "properties.modificationTime",
        type: {
          name: "String"
        }
      },
      statusModificationUserName: {
        serializedName: "properties.statusModificationUserName",
        type: {
          name: "String"
        }
      },
      statusModificationTime: {
        serializedName: "properties.statusModificationTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertsResult: msRest.CompositeMapper = {
  serializedName: "AlertsResult",
  type: {
    name: "Composite",
    className: "AlertsResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Alert"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DismissAlertPayload: msRest.CompositeMapper = {
  serializedName: "DismissAlertPayload",
  type: {
    name: "Composite",
    className: "DismissAlertPayload",
    modelProperties: {
      definition: {
        serializedName: "properties.definition",
        type: {
          name: "Composite",
          className: "AlertPropertiesDefinition"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "properties.details",
        type: {
          name: "Composite",
          className: "AlertPropertiesDetails"
        }
      },
      costEntityId: {
        serializedName: "properties.costEntityId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      creationTime: {
        serializedName: "properties.creationTime",
        type: {
          name: "String"
        }
      },
      closeTime: {
        serializedName: "properties.closeTime",
        type: {
          name: "String"
        }
      },
      modificationTime: {
        serializedName: "properties.modificationTime",
        type: {
          name: "String"
        }
      },
      statusModificationUserName: {
        serializedName: "properties.statusModificationUserName",
        type: {
          name: "String"
        }
      },
      statusModificationTime: {
        serializedName: "properties.statusModificationTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QueryColumn: msRest.CompositeMapper = {
  serializedName: "QueryColumn",
  type: {
    name: "Composite",
    className: "QueryColumn",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QueryResult: msRest.CompositeMapper = {
  serializedName: "QueryResult",
  type: {
    name: "Composite",
    className: "QueryResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      sku: {
        readOnly: true,
        serializedName: "sku",
        type: {
          name: "String"
        }
      },
      nextLink: {
        serializedName: "properties.nextLink",
        type: {
          name: "String"
        }
      },
      columns: {
        serializedName: "properties.columns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QueryColumn"
            }
          }
        }
      },
      rows: {
        serializedName: "properties.rows",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Object"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const QueryTimePeriod: msRest.CompositeMapper = {
  serializedName: "QueryTimePeriod",
  type: {
    name: "Composite",
    className: "QueryTimePeriod",
    modelProperties: {
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "DateTime"
        }
      },
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const QueryDatasetConfiguration: msRest.CompositeMapper = {
  serializedName: "QueryDatasetConfiguration",
  type: {
    name: "Composite",
    className: "QueryDatasetConfiguration",
    modelProperties: {
      columns: {
        serializedName: "columns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const QueryAggregation: msRest.CompositeMapper = {
  serializedName: "QueryAggregation",
  type: {
    name: "Composite",
    className: "QueryAggregation",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      functionProperty: {
        required: true,
        serializedName: "function",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QueryGrouping: msRest.CompositeMapper = {
  serializedName: "QueryGrouping",
  type: {
    name: "Composite",
    className: "QueryGrouping",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QueryComparisonExpression: msRest.CompositeMapper = {
  serializedName: "QueryComparisonExpression",
  type: {
    name: "Composite",
    className: "QueryComparisonExpression",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      operator: {
        required: true,
        isConstant: true,
        serializedName: "operator",
        defaultValue: 'In',
        type: {
          name: "String"
        }
      },
      values: {
        required: true,
        serializedName: "values",
        constraints: {
          MinItems: 1
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const QueryFilter: msRest.CompositeMapper = {
  serializedName: "QueryFilter",
  type: {
    name: "Composite",
    className: "QueryFilter",
    modelProperties: {
      and: {
        serializedName: "and",
        constraints: {
          MinItems: 2
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QueryFilter"
            }
          }
        }
      },
      or: {
        serializedName: "or",
        constraints: {
          MinItems: 2
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QueryFilter"
            }
          }
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Composite",
          className: "QueryComparisonExpression"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Composite",
          className: "QueryComparisonExpression"
        }
      }
    }
  }
};

export const QueryDataset: msRest.CompositeMapper = {
  serializedName: "QueryDataset",
  type: {
    name: "Composite",
    className: "QueryDataset",
    modelProperties: {
      granularity: {
        serializedName: "granularity",
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "Composite",
          className: "QueryDatasetConfiguration"
        }
      },
      aggregation: {
        serializedName: "aggregation",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "QueryAggregation"
            }
          }
        }
      },
      grouping: {
        serializedName: "grouping",
        constraints: {
          MaxItems: 2
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QueryGrouping"
            }
          }
        }
      },
      filter: {
        serializedName: "filter",
        type: {
          name: "Composite",
          className: "QueryFilter"
        }
      }
    }
  }
};

export const ForecastDefinition: msRest.CompositeMapper = {
  serializedName: "ForecastDefinition",
  type: {
    name: "Composite",
    className: "ForecastDefinition",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      timeframe: {
        required: true,
        serializedName: "timeframe",
        type: {
          name: "String"
        }
      },
      timePeriod: {
        serializedName: "timePeriod",
        type: {
          name: "Composite",
          className: "QueryTimePeriod"
        }
      },
      dataset: {
        required: true,
        serializedName: "dataset",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "QueryDataset"
        }
      },
      includeActualCost: {
        serializedName: "includeActualCost",
        type: {
          name: "Boolean"
        }
      },
      includeFreshPartialCost: {
        serializedName: "includeFreshPartialCost",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const QueryDefinition: msRest.CompositeMapper = {
  serializedName: "QueryDefinition",
  type: {
    name: "Composite",
    className: "QueryDefinition",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      timeframe: {
        required: true,
        serializedName: "timeframe",
        type: {
          name: "String"
        }
      },
      timePeriod: {
        serializedName: "timePeriod",
        type: {
          name: "Composite",
          className: "QueryTimePeriod"
        }
      },
      dataset: {
        required: true,
        serializedName: "dataset",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "QueryDataset"
        }
      }
    }
  }
};

export const Status: msRest.CompositeMapper = {
  serializedName: "Status",
  type: {
    name: "Composite",
    className: "Status",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatus: msRest.CompositeMapper = {
  serializedName: "OperationStatus",
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Status"
        }
      },
      reportUrl: {
        serializedName: "properties.reportUrl",
        type: {
          name: "String"
        }
      },
      validUntil: {
        serializedName: "properties.validUntil",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ExportDefinition: msRest.CompositeMapper = {
  serializedName: "ExportDefinition",
  type: {
    name: "Composite",
    className: "ExportDefinition",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      timeframe: {
        required: true,
        serializedName: "timeframe",
        type: {
          name: "String"
        }
      },
      timePeriod: {
        serializedName: "timePeriod",
        type: {
          name: "Composite",
          className: "QueryTimePeriod"
        }
      },
      dataSet: {
        serializedName: "dataSet",
        type: {
          name: "Composite",
          className: "QueryDataset"
        }
      }
    }
  }
};

export const ExportRecurrencePeriod: msRest.CompositeMapper = {
  serializedName: "ExportRecurrencePeriod",
  type: {
    name: "Composite",
    className: "ExportRecurrencePeriod",
    modelProperties: {
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "DateTime"
        }
      },
      to: {
        serializedName: "to",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ExportSchedule: msRest.CompositeMapper = {
  serializedName: "ExportSchedule",
  type: {
    name: "Composite",
    className: "ExportSchedule",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      recurrence: {
        required: true,
        serializedName: "recurrence",
        type: {
          name: "String"
        }
      },
      recurrencePeriod: {
        serializedName: "recurrencePeriod",
        type: {
          name: "Composite",
          className: "ExportRecurrencePeriod"
        }
      }
    }
  }
};

export const ExportModel: msRest.CompositeMapper = {
  serializedName: "Export",
  type: {
    name: "Composite",
    className: "ExportModel",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      format: {
        serializedName: "properties.format",
        type: {
          name: "String"
        }
      },
      deliveryInfo: {
        required: true,
        serializedName: "properties.deliveryInfo",
        type: {
          name: "Composite",
          className: "ExportDeliveryInfo"
        }
      },
      definition: {
        required: true,
        serializedName: "properties.definition",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "ExportDefinition"
        }
      },
      schedule: {
        serializedName: "properties.schedule",
        type: {
          name: "Composite",
          className: "ExportSchedule"
        }
      }
    }
  }
};

export const ExportListResult: msRest.CompositeMapper = {
  serializedName: "ExportListResult",
  type: {
    name: "Composite",
    className: "ExportListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExportModel"
            }
          }
        }
      }
    }
  }
};

export const ExportDeliveryDestination: msRest.CompositeMapper = {
  serializedName: "ExportDeliveryDestination",
  type: {
    name: "Composite",
    className: "ExportDeliveryDestination",
    modelProperties: {
      resourceId: {
        required: true,
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      container: {
        required: true,
        serializedName: "container",
        type: {
          name: "String"
        }
      },
      rootFolderPath: {
        serializedName: "rootFolderPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportDeliveryInfo: msRest.CompositeMapper = {
  serializedName: "ExportDeliveryInfo",
  type: {
    name: "Composite",
    className: "ExportDeliveryInfo",
    modelProperties: {
      destination: {
        required: true,
        serializedName: "destination",
        type: {
          name: "Composite",
          className: "ExportDeliveryDestination"
        }
      }
    }
  }
};

export const CommonExportProperties: msRest.CompositeMapper = {
  serializedName: "CommonExportProperties",
  type: {
    name: "Composite",
    className: "CommonExportProperties",
    modelProperties: {
      format: {
        serializedName: "format",
        type: {
          name: "String"
        }
      },
      deliveryInfo: {
        required: true,
        serializedName: "deliveryInfo",
        type: {
          name: "Composite",
          className: "ExportDeliveryInfo"
        }
      },
      definition: {
        required: true,
        serializedName: "definition",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "ExportDefinition"
        }
      }
    }
  }
};

export const ExportExecution: msRest.CompositeMapper = {
  serializedName: "ExportExecution",
  type: {
    name: "Composite",
    className: "ExportExecution",
    modelProperties: {
      ...Resource.type.modelProperties,
      executionType: {
        serializedName: "properties.executionType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      submittedBy: {
        serializedName: "properties.submittedBy",
        type: {
          name: "String"
        }
      },
      submittedTime: {
        serializedName: "properties.submittedTime",
        type: {
          name: "DateTime"
        }
      },
      processingStartTime: {
        serializedName: "properties.processingStartTime",
        type: {
          name: "DateTime"
        }
      },
      processingEndTime: {
        serializedName: "properties.processingEndTime",
        type: {
          name: "DateTime"
        }
      },
      fileName: {
        serializedName: "properties.fileName",
        type: {
          name: "String"
        }
      },
      runSettings: {
        serializedName: "properties.runSettings",
        type: {
          name: "Composite",
          className: "CommonExportProperties"
        }
      }
    }
  }
};

export const ExportExecutionListResult: msRest.CompositeMapper = {
  serializedName: "ExportExecutionListResult",
  type: {
    name: "Composite",
    className: "ExportExecutionListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExportExecution"
            }
          }
        }
      }
    }
  }
};

export const GenerateReservationDetailsReportByBillingAccountIdHeaders: msRest.CompositeMapper = {
  serializedName: "generatereservationdetailsreport-bybillingaccountid-headers",
  type: {
    name: "Composite",
    className: "GenerateReservationDetailsReportByBillingAccountIdHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GenerateReservationDetailsReportByBillingProfileIdHeaders: msRest.CompositeMapper = {
  serializedName: "generatereservationdetailsreport-bybillingprofileid-headers",
  type: {
    name: "Composite",
    className: "GenerateReservationDetailsReportByBillingProfileIdHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SettingsListResult: msRest.CompositeMapper = {
  serializedName: "SettingsListResult",
  type: {
    name: "Composite",
    className: "SettingsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        constraints: {
          MaxItems: 10
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Setting"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ViewListResult: msRest.CompositeMapper = {
  serializedName: "ViewListResult",
  type: {
    name: "Composite",
    className: "ViewListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "View"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DimensionsListResult: msRest.CompositeMapper = {
  serializedName: "DimensionsListResult",
  type: {
    name: "Composite",
    className: "DimensionsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Dimension"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
