/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { CostManagementClientContext } from "./costManagementClientContext";


class CostManagementClient extends CostManagementClientContext {
  // Operation groups
  settings: operations.Settings;
  views: operations.Views;
  alerts: operations.Alerts;
  forecast: operations.Forecast;
  dimensions: operations.Dimensions;
  query: operations.Query;
  generateReservationDetailsReport: operations.GenerateReservationDetailsReport;
  operations: operations.Operations;
  exports: operations.Exports;

  /**
   * Initializes a new instance of the CostManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure. Credentials
   * implementing the TokenCredential interface from the @azure/identity package are recommended. For
   * more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param subscriptionId Azure Subscription ID.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.CostManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.settings = new operations.Settings(this);
    this.views = new operations.Views(this);
    this.alerts = new operations.Alerts(this);
    this.forecast = new operations.Forecast(this);
    this.dimensions = new operations.Dimensions(this);
    this.query = new operations.Query(this);
    this.generateReservationDetailsReport = new operations.GenerateReservationDetailsReport(this);
    this.operations = new operations.Operations(this);
    this.exports = new operations.Exports(this);
  }
}

// Operation Specifications

export {
  CostManagementClient,
  CostManagementClientContext,
  Models as CostManagementModels,
  Mappers as CostManagementMappers
};
export * from "./operations";
