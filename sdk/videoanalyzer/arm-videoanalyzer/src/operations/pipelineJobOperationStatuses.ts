/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PipelineJobOperationStatuses } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { VideoAnalyzerManagementClient } from "../videoAnalyzerManagementClient";
import {
  PipelineJobOperationStatusesGetOptionalParams,
  PipelineJobOperationStatusesGetResponse
} from "../models";

/** Class containing PipelineJobOperationStatuses operations. */
export class PipelineJobOperationStatusesImpl
  implements PipelineJobOperationStatuses {
  private readonly client: VideoAnalyzerManagementClient;

  /**
   * Initialize a new instance of the class PipelineJobOperationStatuses class.
   * @param client Reference to the service client
   */
  constructor(client: VideoAnalyzerManagementClient) {
    this.client = client;
  }

  /**
   * Get the operation status of a pipeline job with the given operationId.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param pipelineJobName The pipeline job name.
   * @param operationId The operation ID.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    pipelineJobName: string,
    operationId: string,
    options?: PipelineJobOperationStatusesGetOptionalParams
  ): Promise<PipelineJobOperationStatusesGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, accountName, pipelineJobName, operationId, options },
      getOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}/operationStatuses/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.PipelineJobOperationStatus
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.pipelineJobName,
    Parameters.operationId
  ],
  headerParameters: [Parameters.accept],
  serializer
};
