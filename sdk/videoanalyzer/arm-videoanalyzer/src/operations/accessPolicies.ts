/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/accessPoliciesMappers";
import * as Parameters from "../models/parameters";
import { VideoAnalyzerContext } from "../videoAnalyzerContext";

/** Class representing a AccessPolicies. */
export class AccessPolicies {
  private readonly client: VideoAnalyzerContext;

  /**
   * Create a AccessPolicies.
   * @param {VideoAnalyzerContext} client Reference to the service client.
   */
  constructor(client: VideoAnalyzerContext) {
    this.client = client;
  }

  /**
   * Retrieves all existing access policy resources, along with their JSON representations.
   * @summary List all existing access policy resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessPoliciesListResponse>
   */
  list(resourceGroupName: string, accountName: string, options?: Models.AccessPoliciesListOptionalParams): Promise<Models.AccessPoliciesListResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param callback The callback
   */
  list(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.AccessPolicyEntityCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, accountName: string, options: Models.AccessPoliciesListOptionalParams, callback: msRest.ServiceCallback<Models.AccessPolicyEntityCollection>): void;
  list(resourceGroupName: string, accountName: string, options?: Models.AccessPoliciesListOptionalParams | msRest.ServiceCallback<Models.AccessPolicyEntityCollection>, callback?: msRest.ServiceCallback<Models.AccessPolicyEntityCollection>): Promise<Models.AccessPoliciesListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.AccessPoliciesListResponse>;
  }

  /**
   * Retrieves an existing access policy resource with the given name.
   * @summary Retrieves an existing access policy resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessPoliciesGetResponse>
   */
  get(resourceGroupName: string, accountName: string, accessPolicyName: string, options?: msRest.RequestOptionsBase): Promise<Models.AccessPoliciesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param callback The callback
   */
  get(resourceGroupName: string, accountName: string, accessPolicyName: string, callback: msRest.ServiceCallback<Models.AccessPolicyEntity>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, accountName: string, accessPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessPolicyEntity>): void;
  get(resourceGroupName: string, accountName: string, accessPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessPolicyEntity>, callback?: msRest.ServiceCallback<Models.AccessPolicyEntity>): Promise<Models.AccessPoliciesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        accessPolicyName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.AccessPoliciesGetResponse>;
  }

  /**
   * Creates a new access policy resource or updates an existing one with the given name.
   * @summary Creates a new access policy resource or updates an existing one.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param parameters The request parameters
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessPoliciesCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, accountName: string, accessPolicyName: string, parameters: Models.AccessPolicyEntity, options?: msRest.RequestOptionsBase): Promise<Models.AccessPoliciesCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param parameters The request parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, accountName: string, accessPolicyName: string, parameters: Models.AccessPolicyEntity, callback: msRest.ServiceCallback<Models.AccessPolicyEntity>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param parameters The request parameters
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, accountName: string, accessPolicyName: string, parameters: Models.AccessPolicyEntity, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessPolicyEntity>): void;
  createOrUpdate(resourceGroupName: string, accountName: string, accessPolicyName: string, parameters: Models.AccessPolicyEntity, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessPolicyEntity>, callback?: msRest.ServiceCallback<Models.AccessPolicyEntity>): Promise<Models.AccessPoliciesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        accessPolicyName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.AccessPoliciesCreateOrUpdateResponse>;
  }

  /**
   * Deletes an existing access policy resource with the given name.
   * @summary Deletes an existing access policy resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, accountName: string, accessPolicyName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, accountName: string, accessPolicyName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, accountName: string, accessPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, accountName: string, accessPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        accessPolicyName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Updates individual properties of an existing access policy resource with the given name.
   * @summary Updates individual properties of an existing access policy resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param parameters The request parameters
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessPoliciesUpdateResponse>
   */
  update(resourceGroupName: string, accountName: string, accessPolicyName: string, parameters: Models.AccessPolicyEntity, options?: msRest.RequestOptionsBase): Promise<Models.AccessPoliciesUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param parameters The request parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, accountName: string, accessPolicyName: string, parameters: Models.AccessPolicyEntity, callback: msRest.ServiceCallback<Models.AccessPolicyEntity>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param accessPolicyName The Access Policy name.
   * @param parameters The request parameters
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, accountName: string, accessPolicyName: string, parameters: Models.AccessPolicyEntity, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AccessPolicyEntity>): void;
  update(resourceGroupName: string, accountName: string, accessPolicyName: string, parameters: Models.AccessPolicyEntity, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AccessPolicyEntity>, callback?: msRest.ServiceCallback<Models.AccessPolicyEntity>): Promise<Models.AccessPoliciesUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        accessPolicyName,
        parameters,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.AccessPoliciesUpdateResponse>;
  }

  /**
   * Retrieves all existing access policy resources, along with their JSON representations.
   * @summary List all existing access policy resources.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccessPoliciesListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.AccessPoliciesListNextOptionalParams): Promise<Models.AccessPoliciesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AccessPolicyEntityCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.AccessPoliciesListNextOptionalParams, callback: msRest.ServiceCallback<Models.AccessPolicyEntityCollection>): void;
  listNext(nextPageLink: string, options?: Models.AccessPoliciesListNextOptionalParams | msRest.ServiceCallback<Models.AccessPolicyEntityCollection>, callback?: msRest.ServiceCallback<Models.AccessPolicyEntityCollection>): Promise<Models.AccessPoliciesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.AccessPoliciesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.top
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccessPolicyEntityCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies/{accessPolicyName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.accessPolicyName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccessPolicyEntity
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies/{accessPolicyName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.accessPolicyName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.AccessPolicyEntity,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.AccessPolicyEntity
    },
    201: {
      bodyMapper: Mappers.AccessPolicyEntity
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies/{accessPolicyName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.accessPolicyName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies/{accessPolicyName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.accessPolicyName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.AccessPolicyEntity,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.AccessPolicyEntity
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.top
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccessPolicyEntityCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
