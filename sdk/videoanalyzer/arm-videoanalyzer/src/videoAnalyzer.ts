/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { VideoAnalyzerContext } from "./videoAnalyzerContext";


class VideoAnalyzer extends VideoAnalyzerContext {
  // Operation groups
  edgeModules: operations.EdgeModules;
  pipelineTopologies: operations.PipelineTopologies;
  livePipelines: operations.LivePipelines;
  pipelineJobs: operations.PipelineJobs;
  livePipelineOperationStatuses: operations.LivePipelineOperationStatuses;
  pipelineJobOperationStatuses: operations.PipelineJobOperationStatuses;
  operations: operations.Operations;
  videoAnalyzers: operations.VideoAnalyzers;
  privateLinkResources: operations.PrivateLinkResources;
  privateEndpointConnections: operations.PrivateEndpointConnections;
  operationStatuses: operations.OperationStatuses;
  operationResults: operations.OperationResults;
  videoAnalyzerOperationStatuses: operations.VideoAnalyzerOperationStatuses;
  videoAnalyzerOperationResults: operations.VideoAnalyzerOperationResults;
  locations: operations.Locations;
  videos: operations.Videos;
  accessPolicies: operations.AccessPolicies;

  /**
   * Initializes a new instance of the VideoAnalyzer class.
   * @param credentials Credentials needed for the client to connect to Azure. Credentials
   * implementing the TokenCredential interface from the @azure/identity package are recommended. For
   * more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param subscriptionId The ID of the target subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.VideoAnalyzerOptions) {
    super(credentials, subscriptionId, options);
    this.edgeModules = new operations.EdgeModules(this);
    this.pipelineTopologies = new operations.PipelineTopologies(this);
    this.livePipelines = new operations.LivePipelines(this);
    this.pipelineJobs = new operations.PipelineJobs(this);
    this.livePipelineOperationStatuses = new operations.LivePipelineOperationStatuses(this);
    this.pipelineJobOperationStatuses = new operations.PipelineJobOperationStatuses(this);
    this.operations = new operations.Operations(this);
    this.videoAnalyzers = new operations.VideoAnalyzers(this);
    this.privateLinkResources = new operations.PrivateLinkResources(this);
    this.privateEndpointConnections = new operations.PrivateEndpointConnections(this);
    this.operationStatuses = new operations.OperationStatuses(this);
    this.operationResults = new operations.OperationResults(this);
    this.videoAnalyzerOperationStatuses = new operations.VideoAnalyzerOperationStatuses(this);
    this.videoAnalyzerOperationResults = new operations.VideoAnalyzerOperationResults(this);
    this.locations = new operations.Locations(this);
    this.videos = new operations.Videos(this);
    this.accessPolicies = new operations.AccessPolicies(this);
  }
}

// Operation Specifications

export {
  VideoAnalyzer,
  VideoAnalyzerContext,
  Models as VideoAnalyzerModels,
  Mappers as VideoAnalyzerMappers
};
export * from "./operations";
