/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  VideoAnalyzersListOptionalParams,
  VideoAnalyzersListResponse,
  VideoAnalyzersGetOptionalParams,
  VideoAnalyzersGetResponse,
  VideoAnalyzer,
  VideoAnalyzersCreateOrUpdateOptionalParams,
  VideoAnalyzersCreateOrUpdateResponse,
  VideoAnalyzersDeleteOptionalParams,
  VideoAnalyzerUpdate,
  VideoAnalyzersUpdateOptionalParams,
  VideoAnalyzersUpdateResponse,
  VideoAnalyzersListBySubscriptionOptionalParams,
  VideoAnalyzersListBySubscriptionResponse
} from "../models";

/** Interface representing a VideoAnalyzers. */
export interface VideoAnalyzers {
  /**
   * Lists the Video Analyzer accounts in the specified resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: VideoAnalyzersListOptionalParams
  ): Promise<VideoAnalyzersListResponse>;
  /**
   * Get the details of the specified Video Analyzer account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Video Analyzer account name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    options?: VideoAnalyzersGetOptionalParams
  ): Promise<VideoAnalyzersGetResponse>;
  /**
   * Create or update an instance of a Video Analyzer account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Video Analyzer account name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    parameters: VideoAnalyzer,
    options?: VideoAnalyzersCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VideoAnalyzersCreateOrUpdateResponse>,
      VideoAnalyzersCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update an instance of a Video Analyzer account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Video Analyzer account name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    parameters: VideoAnalyzer,
    options?: VideoAnalyzersCreateOrUpdateOptionalParams
  ): Promise<VideoAnalyzersCreateOrUpdateResponse>;
  /**
   * Delete the specified Video Analyzer account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Video Analyzer account name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    options?: VideoAnalyzersDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates an existing instance of Video Analyzer account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Video Analyzer account name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    parameters: VideoAnalyzerUpdate,
    options?: VideoAnalyzersUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VideoAnalyzersUpdateResponse>,
      VideoAnalyzersUpdateResponse
    >
  >;
  /**
   * Updates an existing instance of Video Analyzer account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Video Analyzer account name.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    parameters: VideoAnalyzerUpdate,
    options?: VideoAnalyzersUpdateOptionalParams
  ): Promise<VideoAnalyzersUpdateResponse>;
  /**
   * List all Video Analyzer accounts in the specified subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: VideoAnalyzersListBySubscriptionOptionalParams
  ): Promise<VideoAnalyzersListBySubscriptionResponse>;
}
