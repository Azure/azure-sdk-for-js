/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  PipelineTopology,
  PipelineTopologiesListOptionalParams,
  PipelineTopologiesGetOptionalParams,
  PipelineTopologiesGetResponse,
  PipelineTopologiesCreateOrUpdateOptionalParams,
  PipelineTopologiesCreateOrUpdateResponse,
  PipelineTopologiesDeleteOptionalParams,
  PipelineTopologyUpdate,
  PipelineTopologiesUpdateOptionalParams,
  PipelineTopologiesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PipelineTopologies. */
export interface PipelineTopologies {
  /**
   * Retrieves a list of pipeline topologies that have been added to the account, if any, along with
   * their JSON representation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: PipelineTopologiesListOptionalParams
  ): PagedAsyncIterableIterator<PipelineTopology>;
  /**
   * Retrieves a specific pipeline topology by name. If a topology with that name has been previously
   * created, the call will return the JSON representation of that topology.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param pipelineTopologyName Pipeline topology unique identifier.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    pipelineTopologyName: string,
    options?: PipelineTopologiesGetOptionalParams
  ): Promise<PipelineTopologiesGetResponse>;
  /**
   * Creates a new pipeline topology or updates an existing one, with the given name. A pipeline topology
   * describes the processing steps to be applied when processing content for a particular outcome. The
   * topology should be defined according to the scenario to be achieved and can be reused across many
   * pipeline instances which share the same processing characteristics.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param pipelineTopologyName Pipeline topology unique identifier.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    pipelineTopologyName: string,
    parameters: PipelineTopology,
    options?: PipelineTopologiesCreateOrUpdateOptionalParams
  ): Promise<PipelineTopologiesCreateOrUpdateResponse>;
  /**
   * Deletes a pipeline topology with the given name. This method should be called after all instances of
   * the topology have been stopped and deleted.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param pipelineTopologyName Pipeline topology unique identifier.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    pipelineTopologyName: string,
    options?: PipelineTopologiesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates an existing pipeline topology with the given name. If the associated live pipelines or
   * pipeline jobs are in active or processing state, respectively, then only the description can be
   * updated. Else, the properties that can be updated include: description, parameter declarations,
   * sources, processors, and sinks.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The Azure Video Analyzer account name.
   * @param pipelineTopologyName Pipeline topology unique identifier.
   * @param parameters The request parameters
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    pipelineTopologyName: string,
    parameters: PipelineTopologyUpdate,
    options?: PipelineTopologiesUpdateOptionalParams
  ): Promise<PipelineTopologiesUpdateResponse>;
}
