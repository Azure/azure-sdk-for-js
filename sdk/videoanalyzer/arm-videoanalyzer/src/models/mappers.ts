/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricDimension: msRest.CompositeMapper = {
  serializedName: "MetricDimension",
  type: {
    name: "Composite",
    className: "MetricDimension",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      toBeExportedForShoebox: {
        nullable: false,
        readOnly: true,
        serializedName: "toBeExportedForShoebox",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MetricSpecification: msRest.CompositeMapper = {
  serializedName: "MetricSpecification",
  type: {
    name: "Composite",
    className: "MetricSpecification",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      displayDescription: {
        readOnly: true,
        serializedName: "displayDescription",
        type: {
          name: "String"
        }
      },
      unit: {
        nullable: false,
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      aggregationType: {
        nullable: false,
        readOnly: true,
        serializedName: "aggregationType",
        type: {
          name: "String"
        }
      },
      lockAggregationType: {
        nullable: true,
        readOnly: true,
        serializedName: "lockAggregationType",
        type: {
          name: "String"
        }
      },
      supportedAggregationTypes: {
        serializedName: "supportedAggregationTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dimensions: {
        readOnly: true,
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricDimension"
            }
          }
        }
      },
      enableRegionalMdmAccount: {
        nullable: false,
        readOnly: true,
        serializedName: "enableRegionalMdmAccount",
        type: {
          name: "Boolean"
        }
      },
      sourceMdmAccount: {
        readOnly: true,
        serializedName: "sourceMdmAccount",
        type: {
          name: "String"
        }
      },
      sourceMdmNamespace: {
        readOnly: true,
        serializedName: "sourceMdmNamespace",
        type: {
          name: "String"
        }
      },
      supportedTimeGrainTypes: {
        readOnly: true,
        serializedName: "supportedTimeGrainTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const LogSpecification: msRest.CompositeMapper = {
  serializedName: "LogSpecification",
  type: {
    name: "Composite",
    className: "LogSpecification",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      blobDuration: {
        readOnly: true,
        serializedName: "blobDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceSpecification: msRest.CompositeMapper = {
  serializedName: "ServiceSpecification",
  type: {
    name: "Composite",
    className: "ServiceSpecification",
    modelProperties: {
      logSpecifications: {
        readOnly: true,
        serializedName: "logSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogSpecification"
            }
          }
        }
      },
      metricSpecifications: {
        readOnly: true,
        serializedName: "metricSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricSpecification"
            }
          }
        }
      }
    }
  }
};

export const Properties: msRest.CompositeMapper = {
  serializedName: "Properties",
  type: {
    name: "Composite",
    className: "Properties",
    modelProperties: {
      serviceSpecification: {
        readOnly: true,
        serializedName: "serviceSpecification",
        type: {
          name: "Composite",
          className: "ServiceSpecification"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "Properties"
        }
      },
      isDataAction: {
        nullable: true,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      actionType: {
        nullable: true,
        serializedName: "actionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceIdentity: msRest.CompositeMapper = {
  serializedName: "ResourceIdentity",
  type: {
    name: "Composite",
    className: "ResourceIdentity",
    modelProperties: {
      userAssignedIdentity: {
        required: true,
        serializedName: "userAssignedIdentity",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageAccount: msRest.CompositeMapper = {
  serializedName: "StorageAccount",
  type: {
    name: "Composite",
    className: "StorageAccount",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceIdentity"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncStorageKeysInput: msRest.CompositeMapper = {
  serializedName: "SyncStorageKeysInput",
  type: {
    name: "Composite",
    className: "SyncStorageKeysInput",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Endpoint: msRest.CompositeMapper = {
  serializedName: "Endpoint",
  type: {
    name: "Composite",
    className: "Endpoint",
    modelProperties: {
      endpointUrl: {
        serializedName: "endpointUrl",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'ClientApi',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultProperties: msRest.CompositeMapper = {
  serializedName: "KeyVaultProperties",
  type: {
    name: "Composite",
    className: "KeyVaultProperties",
    modelProperties: {
      keyIdentifier: {
        required: true,
        serializedName: "keyIdentifier",
        type: {
          name: "String"
        }
      },
      currentKeyIdentifier: {
        readOnly: true,
        serializedName: "currentKeyIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccountEncryption: msRest.CompositeMapper = {
  serializedName: "AccountEncryption",
  type: {
    name: "Composite",
    className: "AccountEncryption",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      keyVaultProperties: {
        serializedName: "keyVaultProperties",
        type: {
          name: "Composite",
          className: "KeyVaultProperties"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceIdentity"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const UserAssignedManagedIdentity: msRest.CompositeMapper = {
  serializedName: "UserAssignedManagedIdentity",
  type: {
    name: "Composite",
    className: "UserAssignedManagedIdentity",
    modelProperties: {
      clientId: {
        readOnly: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VideoAnalyzerIdentity: msRest.CompositeMapper = {
  serializedName: "VideoAnalyzerIdentity",
  type: {
    name: "Composite",
    className: "VideoAnalyzerIdentity",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "UserAssignedManagedIdentity"
            }
          }
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VideoAnalyzer: msRest.CompositeMapper = {
  serializedName: "VideoAnalyzer",
  type: {
    name: "Composite",
    className: "VideoAnalyzer",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      storageAccounts: {
        serializedName: "properties.storageAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageAccount"
            }
          }
        }
      },
      endpoints: {
        readOnly: true,
        serializedName: "properties.endpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Endpoint"
            }
          }
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "AccountEncryption"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "VideoAnalyzerIdentity"
        }
      }
    }
  }
};

export const VideoAnalyzerUpdate: msRest.CompositeMapper = {
  serializedName: "VideoAnalyzerUpdate",
  type: {
    name: "Composite",
    className: "VideoAnalyzerUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      storageAccounts: {
        serializedName: "properties.storageAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageAccount"
            }
          }
        }
      },
      endpoints: {
        readOnly: true,
        serializedName: "properties.endpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Endpoint"
            }
          }
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "AccountEncryption"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "VideoAnalyzerIdentity"
        }
      }
    }
  }
};

export const OperationCollection: msRest.CompositeMapper = {
  serializedName: "OperationCollection",
  type: {
    name: "Composite",
    className: "OperationCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const VideoAnalyzerCollection: msRest.CompositeMapper = {
  serializedName: "VideoAnalyzerCollection",
  type: {
    name: "Composite",
    className: "VideoAnalyzerCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VideoAnalyzer"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const CheckNameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResponse: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityResponse",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResponse",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ListProvisioningTokenInput: msRest.CompositeMapper = {
  serializedName: "ListProvisioningTokenInput",
  type: {
    name: "Composite",
    className: "ListProvisioningTokenInput",
    modelProperties: {
      expirationDate: {
        required: true,
        serializedName: "expirationDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const EdgeModuleProvisioningToken: msRest.CompositeMapper = {
  serializedName: "EdgeModuleProvisioningToken",
  type: {
    name: "Composite",
    className: "EdgeModuleProvisioningToken",
    modelProperties: {
      expirationDate: {
        nullable: false,
        readOnly: true,
        serializedName: "expirationDate",
        type: {
          name: "DateTime"
        }
      },
      token: {
        readOnly: true,
        serializedName: "token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EdgeModuleEntity: msRest.CompositeMapper = {
  serializedName: "EdgeModuleEntity",
  type: {
    name: "Composite",
    className: "EdgeModuleEntity",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      edgeModuleId: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.edgeModuleId",
        type: {
          name: "Uuid"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const VideoStreaming: msRest.CompositeMapper = {
  serializedName: "VideoStreaming",
  type: {
    name: "Composite",
    className: "VideoStreaming",
    modelProperties: {
      archiveBaseUrl: {
        serializedName: "archiveBaseUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VideoFlags: msRest.CompositeMapper = {
  serializedName: "VideoFlags",
  type: {
    name: "Composite",
    className: "VideoFlags",
    modelProperties: {
      canStream: {
        required: true,
        serializedName: "canStream",
        type: {
          name: "Boolean"
        }
      },
      hasData: {
        required: true,
        serializedName: "hasData",
        type: {
          name: "Boolean"
        }
      },
      isRecording: {
        required: true,
        serializedName: "isRecording",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VideoMediaInfo: msRest.CompositeMapper = {
  serializedName: "VideoMediaInfo",
  type: {
    name: "Composite",
    className: "VideoMediaInfo",
    modelProperties: {
      segmentLength: {
        readOnly: true,
        serializedName: "segmentLength",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VideoStreamingToken: msRest.CompositeMapper = {
  serializedName: "VideoStreamingToken",
  type: {
    name: "Composite",
    className: "VideoStreamingToken",
    modelProperties: {
      expirationDate: {
        nullable: false,
        readOnly: true,
        serializedName: "expirationDate",
        type: {
          name: "DateTime"
        }
      },
      token: {
        readOnly: true,
        serializedName: "token",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthenticationBase: msRest.CompositeMapper = {
  serializedName: "AuthenticationBase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "@type",
      clientName: "type"
    },
    uberParent: "AuthenticationBase",
    className: "AuthenticationBase",
    modelProperties: {
      type: {
        required: true,
        serializedName: "@type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TokenClaim: msRest.CompositeMapper = {
  serializedName: "TokenClaim",
  type: {
    name: "Composite",
    className: "TokenClaim",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TokenKey: msRest.CompositeMapper = {
  serializedName: "TokenKey",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "@type",
      clientName: "type"
    },
    uberParent: "TokenKey",
    className: "TokenKey",
    modelProperties: {
      kid: {
        required: true,
        serializedName: "kid",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "@type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JwtAuthentication: msRest.CompositeMapper = {
  serializedName: "#Microsoft.VideoAnalyzer.JwtAuthentication",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthenticationBase.type.polymorphicDiscriminator,
    uberParent: "AuthenticationBase",
    className: "JwtAuthentication",
    modelProperties: {
      ...AuthenticationBase.type.modelProperties,
      issuers: {
        serializedName: "issuers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      audiences: {
        serializedName: "audiences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TokenClaim"
            }
          }
        }
      },
      keys: {
        serializedName: "keys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TokenKey"
            }
          }
        }
      }
    }
  }
};

export const RsaTokenKey: msRest.CompositeMapper = {
  serializedName: "#Microsoft.VideoAnalyzer.RsaTokenKey",
  type: {
    name: "Composite",
    polymorphicDiscriminator: TokenKey.type.polymorphicDiscriminator,
    uberParent: "TokenKey",
    className: "RsaTokenKey",
    modelProperties: {
      ...TokenKey.type.modelProperties,
      alg: {
        required: true,
        serializedName: "alg",
        type: {
          name: "String"
        }
      },
      n: {
        required: true,
        serializedName: "n",
        type: {
          name: "String"
        }
      },
      e: {
        required: true,
        serializedName: "e",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EccTokenKey: msRest.CompositeMapper = {
  serializedName: "#Microsoft.VideoAnalyzer.EccTokenKey",
  type: {
    name: "Composite",
    polymorphicDiscriminator: TokenKey.type.polymorphicDiscriminator,
    uberParent: "TokenKey",
    className: "EccTokenKey",
    modelProperties: {
      ...TokenKey.type.modelProperties,
      alg: {
        required: true,
        serializedName: "alg",
        type: {
          name: "String"
        }
      },
      x: {
        required: true,
        serializedName: "x",
        type: {
          name: "String"
        }
      },
      y: {
        required: true,
        serializedName: "y",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VideoEntity: msRest.CompositeMapper = {
  serializedName: "VideoEntity",
  type: {
    name: "Composite",
    className: "VideoEntity",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      title: {
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      videoEntityType: {
        nullable: false,
        readOnly: true,
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      flags: {
        readOnly: true,
        serializedName: "properties.flags",
        type: {
          name: "Composite",
          className: "VideoFlags"
        }
      },
      streaming: {
        readOnly: true,
        serializedName: "properties.streaming",
        type: {
          name: "Composite",
          className: "VideoStreaming"
        }
      },
      mediaInfo: {
        readOnly: true,
        serializedName: "properties.mediaInfo",
        type: {
          name: "Composite",
          className: "VideoMediaInfo"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const AccessPolicyEntity: msRest.CompositeMapper = {
  serializedName: "AccessPolicyEntity",
  type: {
    name: "Composite",
    className: "AccessPolicyEntity",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      role: {
        nullable: true,
        serializedName: "properties.role",
        type: {
          name: "String"
        }
      },
      authentication: {
        serializedName: "properties.authentication",
        type: {
          name: "Composite",
          className: "AuthenticationBase"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const EdgeModuleEntityCollection: msRest.CompositeMapper = {
  serializedName: "EdgeModuleEntityCollection",
  type: {
    name: "Composite",
    className: "EdgeModuleEntityCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EdgeModuleEntity"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VideoEntityCollection: msRest.CompositeMapper = {
  serializedName: "VideoEntityCollection",
  type: {
    name: "Composite",
    className: "VideoEntityCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VideoEntity"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessPolicyEntityCollection: msRest.CompositeMapper = {
  serializedName: "AccessPolicyEntityCollection",
  type: {
    name: "Composite",
    className: "AccessPolicyEntityCollection",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessPolicyEntity"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'AuthenticationBase' : AuthenticationBase,
  'TokenKey' : TokenKey,
  'AuthenticationBase.#Microsoft.VideoAnalyzer.JwtAuthentication' : JwtAuthentication,
  'TokenKey.#Microsoft.VideoAnalyzer.RsaTokenKey' : RsaTokenKey,
  'TokenKey.#Microsoft.VideoAnalyzer.EccTokenKey' : EccTokenKey

};
