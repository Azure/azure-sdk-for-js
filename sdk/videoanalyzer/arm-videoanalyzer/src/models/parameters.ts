/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  EdgeModuleEntity as EdgeModuleEntityMapper,
  ListProvisioningTokenInput as ListProvisioningTokenInputMapper,
  PipelineTopology as PipelineTopologyMapper,
  PipelineTopologyUpdate as PipelineTopologyUpdateMapper,
  LivePipeline as LivePipelineMapper,
  LivePipelineUpdate as LivePipelineUpdateMapper,
  PipelineJob as PipelineJobMapper,
  PipelineJobUpdate as PipelineJobUpdateMapper,
  VideoAnalyzer as VideoAnalyzerMapper,
  VideoAnalyzerUpdate as VideoAnalyzerUpdateMapper,
  PrivateEndpointConnection as PrivateEndpointConnectionMapper,
  CheckNameAvailabilityRequest as CheckNameAvailabilityRequestMapper,
  VideoEntity as VideoEntityMapper,
  AccessPolicyEntity as AccessPolicyEntityMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accountName: OperationURLParameter = {
  parameterPath: "accountName",
  mapper: {
    serializedName: "accountName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2021-11-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};

export const edgeModuleName: OperationURLParameter = {
  parameterPath: "edgeModuleName",
  mapper: {
    serializedName: "edgeModuleName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: EdgeModuleEntityMapper
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: ListProvisioningTokenInputMapper
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const pipelineTopologyName: OperationURLParameter = {
  parameterPath: "pipelineTopologyName",
  mapper: {
    serializedName: "pipelineTopologyName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: PipelineTopologyMapper
};

export const parameters3: OperationParameter = {
  parameterPath: "parameters",
  mapper: PipelineTopologyUpdateMapper
};

export const livePipelineName: OperationURLParameter = {
  parameterPath: "livePipelineName",
  mapper: {
    serializedName: "livePipelineName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters4: OperationParameter = {
  parameterPath: "parameters",
  mapper: LivePipelineMapper
};

export const parameters5: OperationParameter = {
  parameterPath: "parameters",
  mapper: LivePipelineUpdateMapper
};

export const pipelineJobName: OperationURLParameter = {
  parameterPath: "pipelineJobName",
  mapper: {
    serializedName: "pipelineJobName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters6: OperationParameter = {
  parameterPath: "parameters",
  mapper: PipelineJobMapper
};

export const parameters7: OperationParameter = {
  parameterPath: "parameters",
  mapper: PipelineJobUpdateMapper
};

export const operationId: OperationURLParameter = {
  parameterPath: "operationId",
  mapper: {
    serializedName: "operationId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters8: OperationParameter = {
  parameterPath: "parameters",
  mapper: VideoAnalyzerMapper
};

export const parameters9: OperationParameter = {
  parameterPath: "parameters",
  mapper: VideoAnalyzerUpdateMapper
};

export const name: OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    serializedName: "name",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters10: OperationParameter = {
  parameterPath: "parameters",
  mapper: PrivateEndpointConnectionMapper
};

export const locationName: OperationURLParameter = {
  parameterPath: "locationName",
  mapper: {
    serializedName: "locationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters11: OperationParameter = {
  parameterPath: "parameters",
  mapper: CheckNameAvailabilityRequestMapper
};

export const videoName: OperationURLParameter = {
  parameterPath: "videoName",
  mapper: {
    serializedName: "videoName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters12: OperationParameter = {
  parameterPath: "parameters",
  mapper: VideoEntityMapper
};

export const accessPolicyName: OperationURLParameter = {
  parameterPath: "accessPolicyName",
  mapper: {
    serializedName: "accessPolicyName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters13: OperationParameter = {
  parameterPath: "parameters",
  mapper: AccessPolicyEntityMapper
};
