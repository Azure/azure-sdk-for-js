/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Operation details.
 */
export interface OperationDisplay {
  /**
   * The service provider.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  resource?: string;
  /**
   * The operation type.
   */
  operation?: string;
  /**
   * The operation description.
   */
  description?: string;
}

/**
 * A metric dimension.
 */
export interface MetricDimension {
  /**
   * The metric dimension name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The display name for the dimension.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Whether to export metric to shoebox.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly toBeExportedForShoebox?: boolean;
}

/**
 * A metric emitted by service.
 */
export interface MetricSpecification {
  /**
   * The metric name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The metric display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The metric display description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayDescription?: string;
  /**
   * The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: MetricUnit;
  /**
   * The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aggregationType?: MetricAggregationType;
  /**
   * The metric lock aggregation type. Possible values include: 'Average', 'Count', 'Total'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lockAggregationType?: MetricAggregationType;
  /**
   * Supported aggregation types.
   */
  supportedAggregationTypes?: string[];
  /**
   * The metric dimensions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dimensions?: MetricDimension[];
  /**
   * Indicates whether regional MDM account is enabled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enableRegionalMdmAccount?: boolean;
  /**
   * The source MDM account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceMdmAccount?: string;
  /**
   * The source MDM namespace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceMdmNamespace?: string;
  /**
   * The supported time grain types.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedTimeGrainTypes?: string[];
}

/**
 * A diagnostic log emitted by service.
 */
export interface LogSpecification {
  /**
   * The diagnostic log category name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The diagnostic log category display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The time range for requests in each blob.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly blobDuration?: string;
}

/**
 * The service metric specifications.
 */
export interface ServiceSpecification {
  /**
   * List of log specifications.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly logSpecifications?: LogSpecification[];
  /**
   * List of metric specifications.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricSpecifications?: MetricSpecification[];
}

/**
 * Metric properties.
 */
export interface Properties {
  /**
   * The service specifications.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceSpecification?: ServiceSpecification;
}

/**
 * An operation.
 */
export interface Operation {
  /**
   * The operation name.
   */
  name: string;
  /**
   * The operation display name.
   */
  display?: OperationDisplay;
  /**
   * Origin of the operation.
   */
  origin?: string;
  /**
   * Operation properties format.
   */
  properties?: Properties;
  /**
   * Whether the operation applies to data-plane.
   */
  isDataAction?: boolean;
  /**
   * Indicates the action type. Possible values include: 'Internal'
   */
  actionType?: ActionType;
}

/**
 * The user assigned managed identity to use when accessing a resource.
 */
export interface ResourceIdentity {
  /**
   * The user assigned managed identity's resource identifier to use when accessing a resource.
   */
  userAssignedIdentity: string;
}

/**
 * The details about the associated storage account.
 */
export interface StorageAccount {
  /**
   * The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs.
   * The primary storage account must be a Standard Storage account (either
   * Microsoft.ClassicStorage or Microsoft.Storage).
   */
  id?: string;
  /**
   * A managed identity that Video Analyzer will use to access the storage account.
   */
  identity?: ResourceIdentity;
  /**
   * The current status of the storage account mapping.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
}

/**
 * The input to the sync storage keys request.
 */
export interface SyncStorageKeysInput {
  /**
   * The ID of the storage account resource.
   */
  id?: string;
}

/**
 * The endpoint details.
 */
export interface Endpoint {
  /**
   * The URL of the endpoint.
   */
  endpointUrl?: string;
}

/**
 * The details for accessing the encryption keys in Key Vault.
 */
export interface KeyVaultProperties {
  /**
   * The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for
   * example https://vault/keys/mykey/version1) or reference a key without a version (for example
   * https://vault/keys/mykey).
   */
  keyIdentifier: string;
  /**
   * The current key used to encrypt Video Analyzer account, including the key version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentKeyIdentifier?: string;
}

/**
 * Defines how the Video Analyzer account is (optionally) encrypted.
 */
export interface AccountEncryption {
  /**
   * The type of key used to encrypt the Account Key. Possible values include: 'SystemKey',
   * 'CustomerKey'
   */
  type: AccountEncryptionKeyType;
  /**
   * The properties of the key used to encrypt the account.
   */
  keyVaultProperties?: KeyVaultProperties;
  /**
   * The Key Vault identity.
   */
  identity?: ResourceIdentity;
  /**
   * The current status of the Key Vault mapping.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * The details of the user assigned managed identity used by the Video Analyzer resource.
 */
export interface UserAssignedManagedIdentity {
  /**
   * The client ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
  /**
   * The principal ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
}

/**
 * The managed identity for the Video Analyzer resource.
 */
export interface VideoAnalyzerIdentity {
  /**
   * The identity type.
   */
  type: string;
  /**
   * The User Assigned Managed Identities.
   */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedManagedIdentity };
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * A Video Analyzer account.
 */
export interface VideoAnalyzer extends TrackedResource {
  /**
   * The storage accounts for this resource.
   */
  storageAccounts?: StorageAccount[];
  /**
   * The list of endpoints associated with this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoints?: Endpoint[];
  /**
   * The account encryption properties.
   */
  encryption?: AccountEncryption;
  /**
   * The system data of the Video Analyzer account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
  /**
   * The set of managed identities associated with the Video Analyzer resource.
   */
  identity?: VideoAnalyzerIdentity;
}

/**
 * The update operation for a Video Analyzer account.
 */
export interface VideoAnalyzerUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The storage accounts for this resource.
   */
  storageAccounts?: StorageAccount[];
  /**
   * The list of endpoints associated with this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoints?: Endpoint[];
  /**
   * The account encryption properties.
   */
  encryption?: AccountEncryption;
  /**
   * The identities associated to the Video Analyzer resource.
   */
  identity?: VideoAnalyzerIdentity;
}

/**
 * A collection of Operation items.
 */
export interface OperationCollection {
  /**
   * A collection of Operation items.
   */
  value?: Operation[];
}

/**
 * A collection of VideoAnalyzer items.
 */
export interface VideoAnalyzerCollection {
  /**
   * A collection of VideoAnalyzer items.
   */
  value?: VideoAnalyzer[];
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The error detail.
 */
export interface ErrorDetail {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.).
 * @summary Error response
 */
export interface ErrorResponse {
  /**
   * The error object.
   */
  error?: ErrorDetail;
}

/**
 * The check availability request body.
 */
export interface CheckNameAvailabilityRequest {
  /**
   * The name of the resource for which availability needs to be checked.
   */
  name?: string;
  /**
   * The resource type.
   */
  type?: string;
}

/**
 * The check availability result.
 */
export interface CheckNameAvailabilityResponse {
  /**
   * Indicates if the resource name is available.
   */
  nameAvailable?: boolean;
  /**
   * The reason why the given name is not available. Possible values include: 'Invalid',
   * 'AlreadyExists'
   */
  reason?: CheckNameAvailabilityReason;
  /**
   * Detailed reason why the given name is available.
   */
  message?: string;
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * The input parameters to generate registration token for the Azure Video Analyzer IoT edge
 * module.
 */
export interface ListProvisioningTokenInput {
  /**
   * The desired expiration date of the registration token. The Azure Video Analyzer IoT edge
   * module must be initialized and connected to the Internet prior to the token expiration date.
   */
  expirationDate: Date;
}

/**
 * Provisioning token properties. A provisioning token allows for a single instance of Azure Video
 * analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning
 * token itself is short lived and it is only used for the initial handshake between IoT edge
 * module and the cloud. After the initial handshake, the IoT edge module will agree on a set of
 * authentication keys which will be auto-rotated as long as the module is able to periodically
 * connect to the cloud. A new provisioning token can be generated for the same IoT edge module in
 * case the module state lost or reset.
 */
export interface EdgeModuleProvisioningToken {
  /**
   * The expiration date of the registration token. The Azure Video Analyzer IoT edge module must
   * be initialized and connected to the Internet prior to the token expiration date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expirationDate?: Date;
  /**
   * The token blob to be provided to the Azure Video Analyzer IoT edge module through the Azure
   * IoT Edge module twin properties.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly token?: string;
}

/**
 * The representation of an edge module.
 */
export interface EdgeModuleEntity extends ProxyResource {
  /**
   * Internal ID generated for the instance of the Video Analyzer edge module.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly edgeModuleId?: string;
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Video streaming holds information about video streaming URLs.
 */
export interface VideoStreaming {
  /**
   * Video streaming base URL for the video archive. When present, archived video can be played
   * through the Azure Video Analyzer player. Alternatively, this URL can be used with compatible
   * DASH or HLS players by appending the following to the base URL:
   *
   * - HLSv4:     /manifest(format=m3u8-aapl).m3u8
   * - HLS CMAF:  /manifest(format=m3u8-cmaf)
   * - DASH CMAF: /manifest(format=mpd-time-cmaf)
   *
   * Moreover, an ongoing video recording can be played in "live mode" with latencies which are
   * approximately double of the chosen video segment length.
   */
  archiveBaseUrl?: string;
}

/**
 * Video flags contain information about the available video actions and its dynamic properties
 * based on the current video state.
 */
export interface VideoFlags {
  /**
   * Value indicating whether or not the video can be streamed. Only "archive" type videos can be
   * streamed.
   */
  canStream: boolean;
  /**
   * Value indicating whether or not there has ever been data recorded or uploaded into the video.
   * Newly created videos have this value set to false.
   */
  hasData: boolean;
  /**
   * Value indicating whether or not the video is currently being referenced be an active live
   * pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being
   * received. For example, video recording may be gated on events or camera may not be accessible
   * at the time.
   */
  isRecording: boolean;
}

/**
 * Contains information about the video and audio content.
 */
export interface VideoMediaInfo {
  /**
   * Video segment length indicates the length of individual video files (segments) which are
   * persisted to storage. Smaller segments provide lower archive playback latency but generate
   * larger volume of storage transactions. Larger segments reduce the amount of storage
   * transactions while increasing the archive playback latency. Value must be specified in ISO8601
   * duration format (i.e. "PT30S" equals 30 seconds) and can vary between 30 seconds to 5 minutes,
   * in 30 seconds increments.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly segmentLength?: string;
}

/**
 * Video streaming token grants access to the video streaming URLs which can be used by an
 * compatible HLS or DASH player.
 */
export interface VideoStreamingToken {
  /**
   * The streaming token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expirationDate?: Date;
  /**
   * The streaming token value to be added to the video streaming URL as the value for a "token"
   * query string parameter. The token is specific to a single video.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly token?: string;
}

/**
 * Contains the possible cases for AuthenticationBase.
 */
export type AuthenticationBaseUnion = AuthenticationBase | JwtAuthentication;

/**
 * Base class for access policies authentication methods.
 */
export interface AuthenticationBase {
  /**
   * Polymorphic Discriminator
   */
  type: "AuthenticationBase";
}

/**
 * Properties for expected token claims.
 */
export interface TokenClaim {
  /**
   * Name of the claim which must be present on the token.
   */
  name: string;
  /**
   * Expected value of the claim to be present on the token.
   */
  value: string;
}

/**
 * Contains the possible cases for TokenKey.
 */
export type TokenKeyUnion = TokenKey | RsaTokenKey | EccTokenKey;

/**
 * Key properties for JWT token validation.
 */
export interface TokenKey {
  /**
   * Polymorphic Discriminator
   */
  type: "TokenKey";
  /**
   * JWT token key id. Validation keys are looked up based on the key id present on the JWT token
   * header.
   */
  kid: string;
}

/**
 * Properties for access validation based on JSON Web Tokens (JWT).
 */
export interface JwtAuthentication {
  /**
   * Polymorphic Discriminator
   */
  type: "#Microsoft.VideoAnalyzer.JwtAuthentication";
  /**
   * List of expected token issuers. Token issuer is valid if it matches at least one of the given
   * values.
   */
  issuers?: string[];
  /**
   * List of expected token audiences. Token audience is valid if it matches at least one of the
   * given values.
   */
  audiences?: string[];
  /**
   * List of additional token claims to be validated. Token must contains all claims and respective
   * values for it to be valid.
   */
  claims?: TokenClaim[];
  /**
   * List of keys which can be used to validate access tokens. Having multiple keys allow for
   * seamless key rotation of the token signing key. Token signature must match exactly one key.
   */
  keys?: TokenKeyUnion[];
}

/**
 * Required validation properties for tokens generated with RSA algorithm.
 */
export interface RsaTokenKey {
  /**
   * Polymorphic Discriminator
   */
  type: "#Microsoft.VideoAnalyzer.RsaTokenKey";
  /**
   * JWT token key id. Validation keys are looked up based on the key id present on the JWT token
   * header.
   */
  kid: string;
  /**
   * RSA algorithm to be used: RS256, RS384 or RS512. Possible values include: 'RS256', 'RS384',
   * 'RS512'
   */
  alg: AccessPolicyRsaAlgo;
  /**
   * RSA public key modulus.
   */
  n: string;
  /**
   * RSA public key exponent.
   */
  e: string;
}

/**
 * Required validation properties for tokens generated with Elliptical Curve algorithm.
 */
export interface EccTokenKey {
  /**
   * Polymorphic Discriminator
   */
  type: "#Microsoft.VideoAnalyzer.EccTokenKey";
  /**
   * JWT token key id. Validation keys are looked up based on the key id present on the JWT token
   * header.
   */
  kid: string;
  /**
   * Elliptical curve algorithm to be used: ES256, ES384 or ES512. Possible values include:
   * 'ES256', 'ES384', 'ES512'
   */
  alg: AccessPolicyEccAlgo;
  /**
   * X coordinate.
   */
  x: string;
  /**
   * Y coordinate.
   */
  y: string;
}

/**
 * The representation of a single video in a Video Analyzer account.
 */
export interface VideoEntity extends ProxyResource {
  /**
   * Optional video title provided by the user. Value can be up to 256 characters long.
   */
  title?: string;
  /**
   * Optional video description provided by the user. Value can be up to 2048 characters long.
   */
  description?: string;
  /**
   * Type of the video archive. Different archive formats provide different capabilities. Possible
   * values include: 'Archive'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly videoEntityType?: VideoType;
  /**
   * Video flags contain information about the available video actions and its dynamic properties
   * based on the current video state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly flags?: VideoFlags;
  /**
   * Video streaming holds information about video streaming URLs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly streaming?: VideoStreaming;
  /**
   * Contains information about the video and audio content.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mediaInfo?: VideoMediaInfo;
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Policy that determines how a video can be accessed.
 */
export interface AccessPolicyEntity extends ProxyResource {
  /**
   * Defines the access level granted by this policy. Possible values include: 'Reader'
   */
  role?: AccessPolicyRole;
  /**
   * Authentication method to be used when validating client API access.
   */
  authentication?: AuthenticationBaseUnion;
  /**
   * The system metadata relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Optional Parameters.
 */
export interface VideoAnalyzersSyncStorageKeysOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The ID of the storage account resource.
   */
  id?: string;
}

/**
 * Optional Parameters.
 */
export interface EdgeModulesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Restricts the set of items returned.
   */
  filter?: string;
  /**
   * Specifies a non-negative integer n that limits the number of items returned from a collection.
   * The service returns the number of available items up to but not greater than the specified
   * value n.
   */
  top?: number;
  /**
   * Specifies the key by which the result collection should be ordered.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface EdgeModulesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Restricts the set of items returned.
   */
  filter?: string;
  /**
   * Specifies a non-negative integer n that limits the number of items returned from a collection.
   * The service returns the number of available items up to but not greater than the specified
   * value n.
   */
  top?: number;
  /**
   * Specifies the key by which the result collection should be ordered.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface VideosListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies a non-negative integer n that limits the number of items returned from a collection.
   * The service returns the number of available items up to but not greater than the specified
   * value n.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface VideosListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies a non-negative integer n that limits the number of items returned from a collection.
   * The service returns the number of available items up to but not greater than the specified
   * value n.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface AccessPoliciesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies a non-negative integer n that limits the number of items returned from a collection.
   * The service returns the number of available items up to but not greater than the specified
   * value n.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface AccessPoliciesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies a non-negative integer n that limits the number of items returned from a collection.
   * The service returns the number of available items up to but not greater than the specified
   * value n.
   */
  top?: number;
}

/**
 * An interface representing AzureVideoAnalyzerOptions.
 */
export interface AzureVideoAnalyzerOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * A collection of EdgeModuleEntity items.
 * @extends Array<EdgeModuleEntity>
 */
export interface EdgeModuleEntityCollection extends Array<EdgeModuleEntity> {
  /**
   * A link to the next page of the collection (when the collection contains too many results to
   * return in one response).
   */
  nextLink?: string;
}

/**
 * @interface
 * A collection of VideoEntity items.
 * @extends Array<VideoEntity>
 */
export interface VideoEntityCollection extends Array<VideoEntity> {
  /**
   * A link to the next page of the collection (when the collection contains too many results to
   * return in one response).
   */
  nextLink?: string;
}

/**
 * @interface
 * A collection of AccessPolicyEntity items.
 * @extends Array<AccessPolicyEntity>
 */
export interface AccessPolicyEntityCollection extends Array<AccessPolicyEntity> {
  /**
   * A link to the next page of the collection (when the collection contains too many results to
   * return in one response).
   */
  nextLink?: string;
}

/**
 * Defines values for MetricUnit.
 * Possible values include: 'Bytes', 'Count', 'Milliseconds'
 * @readonly
 * @enum {string}
 */
export type MetricUnit = 'Bytes' | 'Count' | 'Milliseconds';

/**
 * Defines values for MetricAggregationType.
 * Possible values include: 'Average', 'Count', 'Total'
 * @readonly
 * @enum {string}
 */
export type MetricAggregationType = 'Average' | 'Count' | 'Total';

/**
 * Defines values for ActionType.
 * Possible values include: 'Internal'
 * @readonly
 * @enum {string}
 */
export type ActionType = 'Internal';

/**
 * Defines values for AccountEncryptionKeyType.
 * Possible values include: 'SystemKey', 'CustomerKey'
 * @readonly
 * @enum {string}
 */
export type AccountEncryptionKeyType = 'SystemKey' | 'CustomerKey';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for CheckNameAvailabilityReason.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type CheckNameAvailabilityReason = 'Invalid' | 'AlreadyExists';

/**
 * Defines values for VideoType.
 * Possible values include: 'Archive'
 * @readonly
 * @enum {string}
 */
export type VideoType = 'Archive';

/**
 * Defines values for AccessPolicyRsaAlgo.
 * Possible values include: 'RS256', 'RS384', 'RS512'
 * @readonly
 * @enum {string}
 */
export type AccessPolicyRsaAlgo = 'RS256' | 'RS384' | 'RS512';

/**
 * Defines values for AccessPolicyEccAlgo.
 * Possible values include: 'ES256', 'ES384', 'ES512'
 * @readonly
 * @enum {string}
 */
export type AccessPolicyEccAlgo = 'ES256' | 'ES384' | 'ES512';

/**
 * Defines values for AccessPolicyRole.
 * Possible values include: 'Reader'
 * @readonly
 * @enum {string}
 */
export type AccessPolicyRole = 'Reader';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VideoAnalyzersListResponse = VideoAnalyzerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoAnalyzerCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VideoAnalyzersGetResponse = VideoAnalyzer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoAnalyzer;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VideoAnalyzersCreateOrUpdateResponse = VideoAnalyzer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoAnalyzer;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VideoAnalyzersUpdateResponse = VideoAnalyzer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoAnalyzer;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type VideoAnalyzersListBySubscriptionResponse = VideoAnalyzerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoAnalyzerCollection;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type LocationsCheckNameAvailabilityResponse = CheckNameAvailabilityResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EdgeModulesListResponse = EdgeModuleEntityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EdgeModuleEntityCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EdgeModulesGetResponse = EdgeModuleEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EdgeModuleEntity;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EdgeModulesCreateOrUpdateResponse = EdgeModuleEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EdgeModuleEntity;
    };
};

/**
 * Contains response data for the listProvisioningToken operation.
 */
export type EdgeModulesListProvisioningTokenResponse = EdgeModuleProvisioningToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EdgeModuleProvisioningToken;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type EdgeModulesListNextResponse = EdgeModuleEntityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EdgeModuleEntityCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VideosListResponse = VideoEntityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoEntityCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VideosGetResponse = VideoEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoEntity;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VideosCreateOrUpdateResponse = VideoEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoEntity;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VideosUpdateResponse = VideoEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoEntity;
    };
};

/**
 * Contains response data for the listStreamingToken operation.
 */
export type VideosListStreamingTokenResponse = VideoStreamingToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoStreamingToken;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VideosListNextResponse = VideoEntityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoEntityCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AccessPoliciesListResponse = AccessPolicyEntityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyEntityCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AccessPoliciesGetResponse = AccessPolicyEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyEntity;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AccessPoliciesCreateOrUpdateResponse = AccessPolicyEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyEntity;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccessPoliciesUpdateResponse = AccessPolicyEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyEntity;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AccessPoliciesListNextResponse = AccessPolicyEntityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessPolicyEntityCollection;
    };
};
