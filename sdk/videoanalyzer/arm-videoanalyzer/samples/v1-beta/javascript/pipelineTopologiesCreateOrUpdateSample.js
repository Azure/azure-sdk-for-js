/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { VideoAnalyzerManagementClient } = require("@azure/arm-videoanalyzer");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Creates a new pipeline topology or updates an existing one, with the given name. A pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics.
 *
 * @summary Creates a new pipeline topology or updates an existing one, with the given name. A pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics.
 * x-ms-original-file: specification/videoanalyzer/resource-manager/Microsoft.Media/preview/2021-11-01-preview/examples/pipeline-topology-create.json
 */
async function createOrUpdateAPipelineTopologyWithAnRtspSourceAndVideoSink() {
  const subscriptionId =
    process.env["VIDEOANALYZER_SUBSCRIPTION_ID"] || "591e76c3-3e97-44db-879c-3e2b12961b62";
  const resourceGroupName = process.env["VIDEOANALYZER_RESOURCE_GROUP"] || "testrg";
  const accountName = "testaccount2";
  const pipelineTopologyName = "pipelineTopology1";
  const parameters = {
    description: "Pipeline Topology 1 Description",
    kind: "Live",
    parameters: [
      {
        name: "rtspUrlParameter",
        type: "String",
        description: "rtsp source url parameter",
        default: "rtsp://microsoft.com/video.mp4",
      },
      {
        name: "rtspPasswordParameter",
        type: "SecretString",
        description: "rtsp source password parameter",
        default: "password",
      },
    ],
    sinks: [
      {
        name: "videoSink",
        type: "#Microsoft.VideoAnalyzer.VideoSink",
        inputs: [{ nodeName: "rtspSource" }],
        videoCreationProperties: {
          description: "Parking lot south entrance",
          segmentLength: "PT30S",
          title: "Parking Lot (Camera 1)",
        },
        videoName: "camera001",
        videoPublishingOptions: {
          disableArchive: "false",
          disableRtspPublishing: "true",
        },
      },
    ],
    sku: { name: "Live_S1" },
    sources: [
      {
        name: "rtspSource",
        type: "#Microsoft.VideoAnalyzer.RtspSource",
        endpoint: {
          type: "#Microsoft.VideoAnalyzer.UnsecuredEndpoint",
          credentials: {
            type: "#Microsoft.VideoAnalyzer.UsernamePasswordCredentials",
            password: "${rtspPasswordParameter}",
            username: "username",
          },
          url: "${rtspUrlParameter}",
        },
        transport: "Http",
      },
    ],
  };
  const credential = new DefaultAzureCredential();
  const client = new VideoAnalyzerManagementClient(credential, subscriptionId);
  const result = await client.pipelineTopologies.createOrUpdate(
    resourceGroupName,
    accountName,
    pipelineTopologyName,
    parameters
  );
  console.log(result);
}

async function main() {
  createOrUpdateAPipelineTopologyWithAnRtspSourceAndVideoSink();
}

main().catch(console.error);
