/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const SAPDiscoverySiteListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPDiscoverySiteListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SAPDiscoverySite",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SAPDiscoverySiteProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPDiscoverySiteProperties",
    modelProperties: {
      masterSiteId: {
        serializedName: "masterSiteId",
        type: {
          name: "String",
        },
      },
      migrateProjectId: {
        serializedName: "migrateProjectId",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Composite",
          className: "SAPMigrateError",
        },
      },
    },
  },
};

export const SAPMigrateError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPMigrateError",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ErrorDefinition",
        },
      },
    },
  },
};

export const ErrorDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendation: {
        serializedName: "recommendation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDefinition",
            },
          },
        },
      },
    },
  },
};

export const ExtendedLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtendedLocation",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const SAPDiscoverySiteTagsUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPDiscoverySiteTagsUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const OperationStatusResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatusResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String",
        },
      },
      percentComplete: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "percentComplete",
        type: {
          name: "Number",
        },
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
      operations: {
        serializedName: "operations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationStatusResult",
            },
          },
        },
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const SAPInstanceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SAPInstance",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SAPInstanceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPInstanceProperties",
    modelProperties: {
      systemSid: {
        serializedName: "systemSid",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      environment: {
        serializedName: "environment",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      landscapeSid: {
        serializedName: "landscapeSid",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      application: {
        serializedName: "application",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Composite",
          className: "SAPMigrateError",
        },
      },
    },
  },
};

export const SAPInstanceTagsUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPInstanceTagsUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const ServerInstanceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerInstance",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServerInstanceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerInstanceProperties",
    modelProperties: {
      serverName: {
        serializedName: "serverName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sapInstanceType: {
        serializedName: "sapInstanceType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      instanceSid: {
        serializedName: "instanceSid",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sapProduct: {
        serializedName: "sapProduct",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sapProductVersion: {
        serializedName: "sapProductVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystem: {
        serializedName: "operatingSystem",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      configurationData: {
        serializedName: "configurationData",
        type: {
          name: "Composite",
          className: "ConfigurationData",
        },
      },
      performanceData: {
        serializedName: "performanceData",
        type: {
          name: "Composite",
          className: "PerformanceData",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Composite",
          className: "SAPMigrateError",
        },
      },
    },
  },
};

export const ConfigurationData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationData",
    modelProperties: {
      saps: {
        serializedName: "saps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cpuType: {
        serializedName: "cpuType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cpuInMhz: {
        serializedName: "cpuInMhz",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      ram: {
        serializedName: "ram",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hardwareManufacturer: {
        serializedName: "hardwareManufacturer",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      model: {
        serializedName: "model",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      totalDiskSizeGB: {
        serializedName: "totalDiskSizeGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalDiskIops: {
        serializedName: "totalDiskIops",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      databaseType: {
        serializedName: "databaseType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      targetHanaRamSizeGB: {
        serializedName: "targetHanaRamSizeGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PerformanceData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerformanceData",
    uberParent: "PerformanceData",
    polymorphicDiscriminator: {
      serializedName: "dataSource",
      clientName: "dataSource",
    },
    modelProperties: {
      dataSource: {
        serializedName: "dataSource",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpdateServerInstanceRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateServerInstanceRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServerInstanceProperties",
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const ExcelPerformanceData: coreClient.CompositeMapper = {
  serializedName: "Excel",
  type: {
    name: "Composite",
    className: "ExcelPerformanceData",
    uberParent: "PerformanceData",
    polymorphicDiscriminator: PerformanceData.type.polymorphicDiscriminator,
    modelProperties: {
      ...PerformanceData.type.modelProperties,
      maxCpuLoad: {
        serializedName: "maxCpuLoad",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalSourceDbSizeGB: {
        serializedName: "totalSourceDbSizeGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const NativePerformanceData: coreClient.CompositeMapper = {
  serializedName: "Native",
  type: {
    name: "Composite",
    className: "NativePerformanceData",
    uberParent: "PerformanceData",
    polymorphicDiscriminator: PerformanceData.type.polymorphicDiscriminator,
    modelProperties: {
      ...PerformanceData.type.modelProperties,
    },
  },
};

export const SAPDiscoverySite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPDiscoverySite",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SAPDiscoverySiteProperties",
        },
      },
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
    },
  },
};

export const SAPInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SAPInstance",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SAPInstanceProperties",
        },
      },
    },
  },
};

export const ServerInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerInstance",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServerInstanceProperties",
        },
      },
    },
  },
};

export const SapDiscoverySitesCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SapDiscoverySitesCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SapDiscoverySitesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SapDiscoverySitesDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SapDiscoverySitesImportEntitiesHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SapDiscoverySitesImportEntitiesHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const SapInstancesCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SapInstancesCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SapInstancesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SapInstancesDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServerInstancesCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerInstancesCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ServerInstancesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerInstancesDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export let discriminators = {
  PerformanceData: PerformanceData,
  "PerformanceData.Excel": ExcelPerformanceData,
  "PerformanceData.Native": NativePerformanceData,
};
