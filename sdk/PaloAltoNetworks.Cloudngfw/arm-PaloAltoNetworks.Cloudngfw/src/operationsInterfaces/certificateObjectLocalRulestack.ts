/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  CertificateObjectLocalRulestackResource,
  CertificateObjectLocalRulestackListByLocalRulestacksOptionalParams,
  CertificateObjectLocalRulestackGetOptionalParams,
  CertificateObjectLocalRulestackGetResponse,
  CertificateObjectLocalRulestackCreateOrUpdateOptionalParams,
  CertificateObjectLocalRulestackCreateOrUpdateResponse,
  CertificateObjectLocalRulestackDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CertificateObjectLocalRulestack. */
export interface CertificateObjectLocalRulestack {
  /**
   * List CertificateObjectLocalRulestackResource resources by LocalRulestacks
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  listByLocalRulestacks(
    resourceGroupName: string,
    localRulestackName: string,
    options?: CertificateObjectLocalRulestackListByLocalRulestacksOptionalParams
  ): PagedAsyncIterableIterator<CertificateObjectLocalRulestackResource>;
  /**
   * Get a CertificateObjectLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name certificate name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: CertificateObjectLocalRulestackGetOptionalParams
  ): Promise<CertificateObjectLocalRulestackGetResponse>;
  /**
   * Create a CertificateObjectLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name certificate name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    resource: CertificateObjectLocalRulestackResource,
    options?: CertificateObjectLocalRulestackCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<CertificateObjectLocalRulestackCreateOrUpdateResponse>,
      CertificateObjectLocalRulestackCreateOrUpdateResponse
    >
  >;
  /**
   * Create a CertificateObjectLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name certificate name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    resource: CertificateObjectLocalRulestackResource,
    options?: CertificateObjectLocalRulestackCreateOrUpdateOptionalParams
  ): Promise<CertificateObjectLocalRulestackCreateOrUpdateResponse>;
  /**
   * Delete a CertificateObjectLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name certificate name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: CertificateObjectLocalRulestackDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a CertificateObjectLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name certificate name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: CertificateObjectLocalRulestackDeleteOptionalParams
  ): Promise<void>;
}
