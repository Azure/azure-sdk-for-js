/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Deployment filter.
 */
export interface DeploymentExtendedFilter {
  /**
   * The provisioning state.
   */
  provisioningState?: string;
}

/**
 * Resource filter.
 */
export interface GenericResourceFilter {
  /**
   * The resource type.
   */
  resourceType?: string;
  /**
   * The tag name.
   */
  tagname?: string;
  /**
   * The tag value.
   */
  tagvalue?: string;
}

/**
 * Resource group filter.
 */
export interface ResourceGroupFilter {
  /**
   * The tag name.
   */
  tagName?: string;
  /**
   * The tag value.
   */
  tagValue?: string;
}

/**
 * Entity representing the reference to the template.
 */
export interface TemplateLink {
  /**
   * The URI of the template to deploy. Use either the uri or id property, but not both.
   */
  uri?: string;
  /**
   * The resource id of a Template Spec. Use either the id or uri property, but not both.
   */
  id?: string;
  /**
   * The relativePath property can be used to deploy a linked template at a location relative to
   * the parent. If the parent template was linked with a TemplateSpec, this will reference an
   * artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will
   * be a combination of the parent and relativePath URIs
   */
  relativePath?: string;
  /**
   * If included, must match the ContentVersion in the template.
   */
  contentVersion?: string;
  /**
   * The query string (for example, a SAS token) to be used with the templateLink URI.
   */
  queryString?: string;
}

/**
 * Entity representing the reference to the deployment parameters.
 */
export interface ParametersLink {
  /**
   * The URI of the parameters file.
   */
  uri: string;
  /**
   * If included, must match the ContentVersion in the template.
   */
  contentVersion?: string;
}

/**
 * The debug setting.
 */
export interface DebugSetting {
  /**
   * Specifies the type of information to log for debugging. The permitted values are none,
   * requestContent, responseContent, or both requestContent and responseContent separated by a
   * comma. The default is none. When setting this value, carefully consider the type of
   * information you are passing in during deployment. By logging information about the request or
   * response, you could potentially expose sensitive data that is retrieved through the deployment
   * operations.
   */
  detailLevel?: string;
}

/**
 * Deployment on error behavior.
 */
export interface OnErrorDeployment {
  /**
   * The deployment on error behavior type. Possible values are LastSuccessful and
   * SpecificDeployment. Possible values include: 'LastSuccessful', 'SpecificDeployment'
   */
  type?: OnErrorDeploymentType;
  /**
   * The deployment to be used on error case.
   */
  deploymentName?: string;
}

/**
 * Specifies whether template expressions are evaluated within the scope of the parent template or
 * nested template.
 */
export interface ExpressionEvaluationOptions {
  /**
   * The scope to be used for evaluation of parameters, variables and functions in a nested
   * template. Possible values include: 'NotSpecified', 'Outer', 'Inner'
   */
  scope?: ExpressionEvaluationOptionsScopeType;
}

/**
 * Deployment properties.
 */
export interface DeploymentProperties {
  /**
   * The template content. You use this element when you want to pass the template syntax directly
   * in the request rather than link to an existing template. It can be a JObject or well-formed
   * JSON string. Use either the templateLink property or the template property, but not both.
   */
  template?: any;
  /**
   * The URI of the template. Use either the templateLink property or the template property, but
   * not both.
   */
  templateLink?: TemplateLink;
  /**
   * Name and value pairs that define the deployment parameters for the template. You use this
   * element when you want to provide the parameter values directly in the request rather than link
   * to an existing parameter file. Use either the parametersLink property or the parameters
   * property, but not both. It can be a JObject or a well formed JSON string.
   */
  parameters?: any;
  /**
   * The URI of parameters file. You use this element to link to an existing parameters file. Use
   * either the parametersLink property or the parameters property, but not both.
   */
  parametersLink?: ParametersLink;
  /**
   * The mode that is used to deploy resources. This value can be either Incremental or Complete.
   * In Incremental mode, resources are deployed without deleting existing resources that are not
   * included in the template. In Complete mode, resources are deployed and existing resources in
   * the resource group that are not included in the template are deleted. Be careful when using
   * Complete mode as you may unintentionally delete resources. Possible values include:
   * 'Incremental', 'Complete'
   */
  mode: DeploymentMode;
  /**
   * The debug setting of the deployment.
   */
  debugSetting?: DebugSetting;
  /**
   * The deployment on error behavior.
   */
  onErrorDeployment?: OnErrorDeployment;
  /**
   * Specifies whether template expressions are evaluated within the scope of the parent template
   * or nested template. Only applicable to nested templates. If not specified, default value is
   * outer.
   */
  expressionEvaluationOptions?: ExpressionEvaluationOptions;
}

/**
 * Deployment operation parameters.
 */
export interface Deployment {
  /**
   * The location to store the deployment data.
   */
  location?: string;
  /**
   * The deployment properties.
   */
  properties: DeploymentProperties;
  /**
   * Deployment tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Deployment operation parameters.
 */
export interface ScopedDeployment {
  /**
   * The location to store the deployment data.
   */
  location: string;
  /**
   * The deployment properties.
   */
  properties: DeploymentProperties;
  /**
   * Deployment tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The deployment export result.
 */
export interface DeploymentExportResult {
  /**
   * The template content.
   */
  template?: any;
}

/**
 * Deployment What-If operation settings.
 */
export interface DeploymentWhatIfSettings {
  /**
   * The format of the What-If results. Possible values include: 'ResourceIdOnly',
   * 'FullResourcePayloads'
   */
  resultFormat?: WhatIfResultFormat;
}

/**
 * Deployment What-if properties.
 */
export interface DeploymentWhatIfProperties extends DeploymentProperties {
  /**
   * Optional What-If operation settings.
   */
  whatIfSettings?: DeploymentWhatIfSettings;
}

/**
 * Deployment What-if operation parameters.
 */
export interface DeploymentWhatIf {
  /**
   * The location to store the deployment data.
   */
  location?: string;
  /**
   * The deployment properties.
   */
  properties: DeploymentWhatIfProperties;
}

/**
 * Deployment What-if operation parameters.
 */
export interface ScopedDeploymentWhatIf {
  /**
   * The location to store the deployment data.
   */
  location: string;
  /**
   * The deployment properties.
   */
  properties: DeploymentWhatIfProperties;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.)
 * @summary Error Response
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * An interface representing ApiProfile.
 */
export interface ApiProfile {
  /**
   * The profile version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly profileVersion?: string;
  /**
   * The API version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiVersion?: string;
}

/**
 * An interface representing AliasPathMetadata.
 */
export interface AliasPathMetadata {
  /**
   * The type of the token that the alias path is referring to. Possible values include:
   * 'NotSpecified', 'Any', 'String', 'Object', 'Array', 'Integer', 'Number', 'Boolean'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: AliasPathTokenType;
  /**
   * The attributes of the token that the alias path is referring to. Possible values include:
   * 'None', 'Modifiable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly attributes?: AliasPathAttributes;
}

/**
 * The type of the pattern for an alias path.
 */
export interface AliasPattern {
  /**
   * The alias pattern phrase.
   */
  phrase?: string;
  /**
   * The alias pattern variable.
   */
  variable?: string;
  /**
   * The type of alias pattern. Possible values include: 'NotSpecified', 'Extract'
   */
  type?: AliasPatternType;
}

/**
 * The type of the paths for alias.
 */
export interface AliasPath {
  /**
   * The path of an alias.
   */
  path?: string;
  /**
   * The API versions.
   */
  apiVersions?: string[];
  /**
   * The pattern for an alias path.
   */
  pattern?: AliasPattern;
  /**
   * The metadata of the alias path. If missing, fall back to the default metadata of the alias.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metadata?: AliasPathMetadata;
}

/**
 * The alias type.
 */
export interface Alias {
  /**
   * The alias name.
   */
  name?: string;
  /**
   * The paths for an alias.
   */
  paths?: AliasPath[];
  /**
   * The type of the alias. Possible values include: 'NotSpecified', 'PlainText', 'Mask'
   */
  type?: AliasType;
  /**
   * The default path for an alias.
   */
  defaultPath?: string;
  /**
   * The default pattern for an alias.
   */
  defaultPattern?: AliasPattern;
  /**
   * The default alias path metadata. Applies to the default path and to any alias path that
   * doesn't have metadata
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultMetadata?: AliasPathMetadata;
}

/**
 * The provider extended location.
 */
export interface ProviderExtendedLocation {
  /**
   * The azure location.
   */
  location?: string;
  /**
   * The extended location type.
   */
  type?: string;
  /**
   * The extended locations for the azure location.
   */
  extendedLocations?: string[];
}

/**
 * Resource type managed by the resource provider.
 */
export interface ProviderResourceType {
  /**
   * The resource type.
   */
  resourceType?: string;
  /**
   * The collection of locations where this resource type can be created.
   */
  locations?: string[];
  /**
   * The location mappings that are supported by this resource type.
   */
  locationMappings?: ProviderExtendedLocation[];
  /**
   * The aliases that are supported by this resource type.
   */
  aliases?: Alias[];
  /**
   * The API version.
   */
  apiVersions?: string[];
  /**
   * The default API version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultApiVersion?: string;
  /**
   * The API profiles for the resource provider.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiProfiles?: ApiProfile[];
  /**
   * The additional capabilities offered by this resource type.
   */
  capabilities?: string;
  /**
   * The properties.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * Resource provider information.
 */
export interface Provider {
  /**
   * The provider ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The namespace of the resource provider.
   */
  namespace?: string;
  /**
   * The registration state of the resource provider.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly registrationState?: string;
  /**
   * The registration policy of the resource provider.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly registrationPolicy?: string;
  /**
   * The collection of provider resource types.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceTypes?: ProviderResourceType[];
}

/**
 * Deployment dependency information.
 */
export interface BasicDependency {
  /**
   * The ID of the dependency.
   */
  id?: string;
  /**
   * The dependency resource type.
   */
  resourceType?: string;
  /**
   * The dependency resource name.
   */
  resourceName?: string;
}

/**
 * Deployment dependency information.
 */
export interface Dependency {
  /**
   * The list of dependencies.
   */
  dependsOn?: BasicDependency[];
  /**
   * The ID of the dependency.
   */
  id?: string;
  /**
   * The dependency resource type.
   */
  resourceType?: string;
  /**
   * The dependency resource name.
   */
  resourceName?: string;
}

/**
 * Deployment on error behavior with additional details.
 */
export interface OnErrorDeploymentExtended {
  /**
   * The state of the provisioning for the on error deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The deployment on error behavior type. Possible values are LastSuccessful and
   * SpecificDeployment. Possible values include: 'LastSuccessful', 'SpecificDeployment'
   */
  type?: OnErrorDeploymentType;
  /**
   * The deployment to be used on error case.
   */
  deploymentName?: string;
}

/**
 * The resource Id model.
 */
export interface ResourceReference {
  /**
   * The fully qualified resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Deployment properties with additional details.
 */
export interface DeploymentPropertiesExtended {
  /**
   * Denotes the state of provisioning. Possible values include: 'NotSpecified', 'Accepted',
   * 'Running', 'Ready', 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
   * 'Succeeded', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The correlation ID of the deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly correlationId?: string;
  /**
   * The timestamp of the template deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timestamp?: Date;
  /**
   * The duration of the template deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly duration?: string;
  /**
   * Key/value pairs that represent deployment output.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly outputs?: any;
  /**
   * The list of resource providers needed for the deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providers?: Provider[];
  /**
   * The list of deployment dependencies.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dependencies?: Dependency[];
  /**
   * The URI referencing the template.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly templateLink?: TemplateLink;
  /**
   * Deployment parameters.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parameters?: any;
  /**
   * The URI referencing the parameters.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parametersLink?: ParametersLink;
  /**
   * The deployment mode. Possible values are Incremental and Complete. Possible values include:
   * 'Incremental', 'Complete'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mode?: DeploymentMode;
  /**
   * The debug setting of the deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly debugSetting?: DebugSetting;
  /**
   * The deployment on error behavior.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly onErrorDeployment?: OnErrorDeploymentExtended;
  /**
   * The hash produced for the template.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly templateHash?: string;
  /**
   * Array of provisioned resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly outputResources?: ResourceReference[];
  /**
   * Array of validated resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly validatedResources?: ResourceReference[];
  /**
   * The deployment error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ErrorResponse;
}

/**
 * Information from validate template deployment response.
 */
export interface DeploymentValidateResult {
  /**
   * The deployment validation error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ErrorResponse;
  /**
   * The template deployment properties.
   */
  properties?: DeploymentPropertiesExtended;
}

/**
 * Deployment information.
 */
export interface DeploymentExtended extends BaseResource {
  /**
   * The ID of the deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the deployment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * the location of the deployment.
   */
  location?: string;
  /**
   * Deployment properties.
   */
  properties?: DeploymentPropertiesExtended;
  /**
   * Deployment tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * List of resource types of a resource provider.
 */
export interface ProviderResourceTypeListResult {
  /**
   * An array of resource types.
   */
  value?: ProviderResourceType[];
  /**
   * The URL to use for getting the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Plan for the resource.
 */
export interface Plan {
  /**
   * The plan ID.
   */
  name?: string;
  /**
   * The publisher ID.
   */
  publisher?: string;
  /**
   * The offer ID.
   */
  product?: string;
  /**
   * The promotion code.
   */
  promotionCode?: string;
  /**
   * The plan's version.
   */
  version?: string;
}

/**
 * SKU for the resource.
 */
export interface Sku {
  /**
   * The SKU name.
   */
  name?: string;
  /**
   * The SKU tier.
   */
  tier?: string;
  /**
   * The SKU size.
   */
  size?: string;
  /**
   * The SKU family.
   */
  family?: string;
  /**
   * The SKU model.
   */
  model?: string;
  /**
   * The SKU capacity.
   */
  capacity?: number;
}

/**
 * An interface representing IdentityUserAssignedIdentitiesValue.
 */
export interface IdentityUserAssignedIdentitiesValue {
  /**
   * The principal id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The identity type. Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned,
   * UserAssigned', 'None'
   */
  type?: ResourceIdentityType;
  /**
   * The list of user identities associated with the resource. The user identity dictionary key
   * references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  userAssignedIdentities?: { [propertyName: string]: IdentityUserAssignedIdentitiesValue };
}

/**
 * Specified resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location?: string;
  /**
   * Resource extended location.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Resource information.
 */
export interface GenericResource extends Resource {
  /**
   * The plan of the resource.
   */
  plan?: Plan;
  /**
   * The resource properties.
   */
  properties?: any;
  /**
   * The kind of the resource.
   */
  kind?: string;
  /**
   * ID of the resource that manages this resource.
   */
  managedBy?: string;
  /**
   * The SKU of the resource.
   */
  sku?: Sku;
  /**
   * The identity of the resource.
   */
  identity?: Identity;
}

/**
 * Resource extended location.
 */
export interface ExtendedLocation {
  /**
   * The extended location type. Possible values include: 'EdgeZone'
   */
  type?: ExtendedLocationType;
  /**
   * The extended location name.
   */
  name?: string;
}

/**
 * Resource information.
 */
export interface GenericResourceExpanded extends GenericResource {
  /**
   * The created time of the resource. This is only present if requested via the $expand query
   * parameter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdTime?: Date;
  /**
   * The changed time of the resource. This is only present if requested via the $expand query
   * parameter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly changedTime?: Date;
  /**
   * The provisioning state of the resource. This is only present if requested via the $expand
   * query parameter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * The resource group properties.
 */
export interface ResourceGroupProperties {
  /**
   * The provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * Resource group information.
 */
export interface ResourceGroup extends BaseResource {
  /**
   * The ID of the resource group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The resource group properties.
   */
  properties?: ResourceGroupProperties;
  /**
   * The location of the resource group. It cannot be changed after the resource group has been
   * created. It must be one of the supported Azure locations.
   */
  location: string;
  /**
   * The ID of the resource that manages this resource group.
   */
  managedBy?: string;
  /**
   * The tags attached to the resource group.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Resource group information.
 */
export interface ResourceGroupPatchable {
  /**
   * The name of the resource group.
   */
  name?: string;
  /**
   * The resource group properties.
   */
  properties?: ResourceGroupProperties;
  /**
   * The ID of the resource that manages this resource group.
   */
  managedBy?: string;
  /**
   * The tags attached to the resource group.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Parameters of move resources.
 */
export interface ResourcesMoveInfo {
  /**
   * The IDs of the resources.
   */
  resources?: string[];
  /**
   * The target resource group.
   */
  targetResourceGroup?: string;
}

/**
 * Export resource group template request parameters.
 */
export interface ExportTemplateRequest {
  /**
   * The IDs of the resources to filter the export by. To export all resources, supply an array
   * with single entry '*'.
   */
  resources?: string[];
  /**
   * The export template options. A CSV-formatted list containing zero or more of the following:
   * 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization',
   * 'SkipAllParameterization'
   */
  options?: string;
}

/**
 * Tag count.
 */
export interface TagCount {
  /**
   * Type of count.
   */
  type?: string;
  /**
   * Value of count.
   */
  value?: number;
}

/**
 * Tag information.
 */
export interface TagValue extends BaseResource {
  /**
   * The tag value ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The tag value.
   */
  tagValue?: string;
  /**
   * The tag value count.
   */
  count?: TagCount;
}

/**
 * Tag details.
 */
export interface TagDetails extends BaseResource {
  /**
   * The tag name ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The tag name.
   */
  tagName?: string;
  /**
   * The total number of resources that use the resource tag. When a tag is initially created and
   * has no associated resources, the value is 0.
   */
  count?: TagCount;
  /**
   * The list of tag values.
   */
  values?: TagValue[];
}

/**
 * Target resource.
 */
export interface TargetResource {
  /**
   * The ID of the resource.
   */
  id?: string;
  /**
   * The name of the resource.
   */
  resourceName?: string;
  /**
   * The type of the resource.
   */
  resourceType?: string;
}

/**
 * HTTP message.
 */
export interface HttpMessage {
  /**
   * HTTP message content.
   */
  content?: any;
}

/**
 * Operation status message object.
 */
export interface StatusMessage {
  /**
   * Status of the deployment operation.
   */
  status?: string;
  /**
   * The error reported by the operation.
   */
  error?: ErrorResponse;
}

/**
 * Deployment operation properties.
 */
export interface DeploymentOperationProperties {
  /**
   * The name of the current provisioning operation. Possible values include: 'NotSpecified',
   * 'Create', 'Delete', 'Waiting', 'AzureAsyncOperationWaiting', 'ResourceCacheWaiting', 'Action',
   * 'Read', 'EvaluateDeploymentOutput', 'DeploymentCleanup'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningOperation?: ProvisioningOperation;
  /**
   * The state of the provisioning.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The date and time of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timestamp?: Date;
  /**
   * The duration of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly duration?: string;
  /**
   * Deployment operation service request id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceRequestId?: string;
  /**
   * Operation status code from the resource provider. This property may not be set if a response
   * has not yet been received.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusCode?: string;
  /**
   * Operation status message from the resource provider. This property is optional.  It will only
   * be provided if an error was received from the resource provider.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusMessage?: StatusMessage;
  /**
   * The target resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetResource?: TargetResource;
  /**
   * The HTTP request message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly request?: HttpMessage;
  /**
   * The HTTP response message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly response?: HttpMessage;
}

/**
 * Deployment operation information.
 */
export interface DeploymentOperation {
  /**
   * Full deployment operation ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Deployment operation ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationId?: string;
  /**
   * Deployment properties.
   */
  properties?: DeploymentOperationProperties;
}

/**
 * Resource provider operation's display properties.
 */
export interface ResourceProviderOperationDisplayProperties {
  /**
   * Operation description.
   */
  publisher?: string;
  /**
   * Operation provider.
   */
  provider?: string;
  /**
   * Operation resource.
   */
  resource?: string;
  /**
   * Resource provider operation.
   */
  operation?: string;
  /**
   * Operation description.
   */
  description?: string;
}

/**
 * Sub-resource.
 */
export interface SubResource extends BaseResource {
  /**
   * Resource ID
   */
  id?: string;
}

/**
 * Resource group export result.
 */
export interface ResourceGroupExportResult {
  /**
   * The template content.
   */
  template?: any;
  /**
   * The template export error.
   */
  error?: ErrorResponse;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Resources
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  operation?: string;
  /**
   * Description of the operation.
   */
  description?: string;
}

/**
 * Microsoft.Resources operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Result of the request to calculate template hash. It contains a string of minified template and
 * its hash.
 */
export interface TemplateHashResult {
  /**
   * The minified template string.
   */
  minifiedTemplate?: string;
  /**
   * The template hash.
   */
  templateHash?: string;
}

/**
 * The predicted change to the resource property.
 */
export interface WhatIfPropertyChange {
  /**
   * The path of the property.
   */
  path: string;
  /**
   * The type of property change. Possible values include: 'Create', 'Delete', 'Modify', 'Array',
   * 'NoEffect'
   */
  propertyChangeType: PropertyChangeType;
  /**
   * The value of the property before the deployment is executed.
   */
  before?: any;
  /**
   * The value of the property after the deployment is executed.
   */
  after?: any;
  /**
   * Nested property changes.
   */
  children?: WhatIfPropertyChange[];
}

/**
 * Information about a single resource change predicted by What-If operation.
 */
export interface WhatIfChange {
  /**
   * Resource ID
   */
  resourceId: string;
  /**
   * Type of change that will be made to the resource when the deployment is executed. Possible
   * values include: 'Create', 'Delete', 'Ignore', 'Deploy', 'NoChange', 'Modify', 'Unsupported'
   */
  changeType: ChangeType;
  /**
   * The explanation about why the resource is unsupported by What-If.
   */
  unsupportedReason?: string;
  /**
   * The snapshot of the resource before the deployment is executed.
   */
  before?: any;
  /**
   * The predicted snapshot of the resource after the deployment is executed.
   */
  after?: any;
  /**
   * The predicted changes to resource properties.
   */
  delta?: WhatIfPropertyChange[];
}

/**
 * Result of the What-If operation. Contains a list of predicted changes and a URL link to get to
 * the next set of results.
 */
export interface WhatIfOperationResult {
  /**
   * Status of the What-If operation.
   */
  status?: string;
  /**
   * List of resource changes predicted by What-If operation.
   */
  changes?: WhatIfChange[];
  /**
   * Error when What-If operation fails.
   */
  error?: ErrorResponse;
}

/**
 * A dictionary of name and value pairs.
 */
export interface Tags {
  tags?: { [propertyName: string]: string };
}

/**
 * Wrapper resource for tags patch API request only.
 */
export interface TagsPatchResource {
  /**
   * The operation type for the patch API. Possible values include: 'Replace', 'Merge', 'Delete'
   */
  operation?: TagsPatchOperation;
  /**
   * The set of tags.
   */
  properties?: Tags;
}

/**
 * Wrapper resource for tags API requests and responses.
 */
export interface TagsResource extends BaseResource {
  /**
   * The ID of the tags wrapper resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the tags wrapper resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the tags wrapper resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The set of tags.
   */
  properties: Tags;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListAtScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListAtTenantScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListAtManagementGroupScopeOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListAtSubscriptionScopeOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListAtScopeNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListAtTenantScopeNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListAtManagementGroupScopeNextOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListAtSubscriptionScopeNextOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentsListByResourceGroupNextOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq
   * '{state}'.
   */
  filter?: string;
  /**
   * The number of results to get. If null is passed, returns all deployments.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface ProvidersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of results to return. If null is passed returns all deployments.
   */
  top?: number;
  /**
   * The properties to include in the results. For example, use &$expand=metadata in the query
   * string to retrieve resource provider metadata. To include property aliases in response, use
   * $expand=resourceTypes/aliases.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ProvidersListAtTenantScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of results to return. If null is passed returns all providers.
   */
  top?: number;
  /**
   * The properties to include in the results. For example, use &$expand=metadata in the query
   * string to retrieve resource provider metadata. To include property aliases in response, use
   * $expand=resourceTypes/aliases.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ProvidersGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The $expand query parameter. For example, to include property aliases in response, use
   * $expand=resourceTypes/aliases.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ProvidersGetAtTenantScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The $expand query parameter. For example, to include property aliases in response, use
   * $expand=resourceTypes/aliases.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ProvidersListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of results to return. If null is passed returns all deployments.
   */
  top?: number;
  /**
   * The properties to include in the results. For example, use &$expand=metadata in the query
   * string to retrieve resource provider metadata. To include property aliases in response, use
   * $expand=resourceTypes/aliases.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ProvidersListAtTenantScopeNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of results to return. If null is passed returns all providers.
   */
  top?: number;
  /**
   * The properties to include in the results. For example, use &$expand=metadata in the query
   * string to retrieve resource provider metadata. To include property aliases in response, use
   * $expand=resourceTypes/aliases.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ProviderResourceTypesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The $expand query parameter. For example, to include property aliases in response, use
   * $expand=resourceTypes/aliases.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ResourcesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne
   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,
   * plan, plan/publisher, plan/product, plan/name, plan/version, and
   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:
   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use
   * substringof(value, property) in the filter. The properties you can use for substring are: name
   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,
   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together
   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to
   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When
   * you filter by a tag name and value, the tags for each resource are not returned in the
   * results.<br><br>You can use some properties together when filtering. The combinations you can
   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and
   * identity/principalId.
   */
  filter?: string;
  /**
   * Comma-separated list of additional properties to be included in the response. Valid values
   * include `createdTime`, `changedTime` and `provisioningState`. For example,
   * `$expand=createdTime,changedTime`.
   */
  expand?: string;
  /**
   * The number of results to return. If null is passed, returns all resources.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface ResourcesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne
   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,
   * plan, plan/publisher, plan/product, plan/name, plan/version, and
   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:
   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use
   * substringof(value, property) in the filter. The properties you can use for substring are: name
   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,
   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together
   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to
   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When
   * you filter by a tag name and value, the tags for each resource are not returned in the
   * results.<br><br>You can use some properties together when filtering. The combinations you can
   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and
   * identity/principalId.
   */
  filter?: string;
  /**
   * Comma-separated list of additional properties to be included in the response. Valid values
   * include `createdTime`, `changedTime` and `provisioningState`. For example,
   * `$expand=createdTime,changedTime`.
   */
  expand?: string;
  /**
   * The number of results to return. If null is passed, returns all resource groups.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface ResourcesListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne
   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,
   * plan, plan/publisher, plan/product, plan/name, plan/version, and
   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:
   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use
   * substringof(value, property) in the filter. The properties you can use for substring are: name
   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,
   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together
   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to
   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When
   * you filter by a tag name and value, the tags for each resource are not returned in the
   * results.<br><br>You can use some properties together when filtering. The combinations you can
   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and
   * identity/principalId.
   */
  filter?: string;
  /**
   * Comma-separated list of additional properties to be included in the response. Valid values
   * include `createdTime`, `changedTime` and `provisioningState`. For example,
   * `$expand=createdTime,changedTime`.
   */
  expand?: string;
  /**
   * The number of results to return. If null is passed, returns all resources.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface ResourcesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne
   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,
   * plan, plan/publisher, plan/product, plan/name, plan/version, and
   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:
   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use
   * substringof(value, property) in the filter. The properties you can use for substring are: name
   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,
   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together
   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to
   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When
   * you filter by a tag name and value, the tags for each resource are not returned in the
   * results.<br><br>You can use some properties together when filtering. The combinations you can
   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and
   * identity/principalId.
   */
  filter?: string;
  /**
   * Comma-separated list of additional properties to be included in the response. Valid values
   * include `createdTime`, `changedTime` and `provisioningState`. For example,
   * `$expand=createdTime,changedTime`.
   */
  expand?: string;
  /**
   * The number of results to return. If null is passed, returns all resource groups.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface ResourceGroupsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.<br><br>You can filter by tag names and values. For
   * example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq
   * 'Value1'
   */
  filter?: string;
  /**
   * The number of results to return. If null is passed, returns all resource groups.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface ResourceGroupsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.<br><br>You can filter by tag names and values. For
   * example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq
   * 'Value1'
   */
  filter?: string;
  /**
   * The number of results to return. If null is passed, returns all resource groups.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListAtScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListAtTenantScopeOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListAtManagementGroupScopeOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListAtSubscriptionScopeOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListAtScopeNextOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListAtTenantScopeNextOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListAtManagementGroupScopeNextOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListAtSubscriptionScopeNextOptionalParams
  extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface DeploymentOperationsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of results to return.
   */
  top?: number;
}

/**
 * An interface representing ResourceManagementClientOptions.
 */
export interface ResourceManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for WhatIfAtTenantScope operation.
 */
export interface DeploymentsWhatIfAtTenantScopeHeaders {
  /**
   * URL to get status of this long-running operation.
   */
  location: string;
  /**
   * Number of seconds to wait before polling for status.
   */
  retryAfter: string;
}

/**
 * Defines headers for WhatIfAtManagementGroupScope operation.
 */
export interface DeploymentsWhatIfAtManagementGroupScopeHeaders {
  /**
   * URL to get status of this long-running operation.
   */
  location: string;
  /**
   * Number of seconds to wait before polling for status.
   */
  retryAfter: string;
}

/**
 * Defines headers for WhatIfAtSubscriptionScope operation.
 */
export interface DeploymentsWhatIfAtSubscriptionScopeHeaders {
  /**
   * URL to get status of this long-running operation.
   */
  location: string;
  /**
   * Number of seconds to wait before polling for status.
   */
  retryAfter: string;
}

/**
 * Defines headers for WhatIf operation.
 */
export interface DeploymentsWhatIfHeaders {
  /**
   * URL to get status of this long-running operation.
   */
  location: string;
  /**
   * Number of seconds to wait before polling for status.
   */
  retryAfter: string;
}

/**
 * @interface
 * Result of the request to list Microsoft.Resources operations. It contains a list of operations
 * and a URL link to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of deployments.
 * @extends Array<DeploymentExtended>
 */
export interface DeploymentListResult extends Array<DeploymentExtended> {
  /**
   * The URL to use for getting the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of resource providers.
 * @extends Array<Provider>
 */
export interface ProviderListResult extends Array<Provider> {
  /**
   * The URL to use for getting the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of resource groups.
 * @extends Array<GenericResourceExpanded>
 */
export interface ResourceListResult extends Array<GenericResourceExpanded> {
  /**
   * The URL to use for getting the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of resource groups.
 * @extends Array<ResourceGroup>
 */
export interface ResourceGroupListResult extends Array<ResourceGroup> {
  /**
   * The URL to use for getting the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of subscription tags.
 * @extends Array<TagDetails>
 */
export interface TagsListResult extends Array<TagDetails> {
  /**
   * The URL to use for getting the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of deployment operations.
 * @extends Array<DeploymentOperation>
 */
export interface DeploymentOperationsListResult extends Array<DeploymentOperation> {
  /**
   * The URL to use for getting the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for DeploymentMode.
 * Possible values include: 'Incremental', 'Complete'
 * @readonly
 * @enum {string}
 */
export type DeploymentMode = "Incremental" | "Complete";

/**
 * Defines values for OnErrorDeploymentType.
 * Possible values include: 'LastSuccessful', 'SpecificDeployment'
 * @readonly
 * @enum {string}
 */
export type OnErrorDeploymentType = "LastSuccessful" | "SpecificDeployment";

/**
 * Defines values for ExpressionEvaluationOptionsScopeType.
 * Possible values include: 'NotSpecified', 'Outer', 'Inner'
 * @readonly
 * @enum {string}
 */
export type ExpressionEvaluationOptionsScopeType = "NotSpecified" | "Outer" | "Inner";

/**
 * Defines values for WhatIfResultFormat.
 * Possible values include: 'ResourceIdOnly', 'FullResourcePayloads'
 * @readonly
 * @enum {string}
 */
export type WhatIfResultFormat = "ResourceIdOnly" | "FullResourcePayloads";

/**
 * Defines values for AliasPathTokenType.
 * Possible values include: 'NotSpecified', 'Any', 'String', 'Object', 'Array', 'Integer',
 * 'Number', 'Boolean'
 * @readonly
 * @enum {string}
 */
export type AliasPathTokenType =
  | "NotSpecified"
  | "Any"
  | "String"
  | "Object"
  | "Array"
  | "Integer"
  | "Number"
  | "Boolean";

/**
 * Defines values for AliasPathAttributes.
 * Possible values include: 'None', 'Modifiable'
 * @readonly
 * @enum {string}
 */
export type AliasPathAttributes = "None" | "Modifiable";

/**
 * Defines values for AliasPatternType.
 * Possible values include: 'NotSpecified', 'Extract'
 * @readonly
 * @enum {string}
 */
export type AliasPatternType = "NotSpecified" | "Extract";

/**
 * Defines values for AliasType.
 * Possible values include: 'NotSpecified', 'PlainText', 'Mask'
 * @readonly
 * @enum {string}
 */
export type AliasType = "NotSpecified" | "PlainText" | "Mask";

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating', 'Created',
 * 'Deleting', 'Deleted', 'Canceled', 'Failed', 'Succeeded', 'Updating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState =
  | "NotSpecified"
  | "Accepted"
  | "Running"
  | "Ready"
  | "Creating"
  | "Created"
  | "Deleting"
  | "Deleted"
  | "Canceled"
  | "Failed"
  | "Succeeded"
  | "Updating";

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
 * 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType =
  | "SystemAssigned"
  | "UserAssigned"
  | "SystemAssigned, UserAssigned"
  | "None";

/**
 * Defines values for ExtendedLocationType.
 * Possible values include: 'EdgeZone'
 * @readonly
 * @enum {string}
 */
export type ExtendedLocationType = "EdgeZone";

/**
 * Defines values for ProvisioningOperation.
 * Possible values include: 'NotSpecified', 'Create', 'Delete', 'Waiting',
 * 'AzureAsyncOperationWaiting', 'ResourceCacheWaiting', 'Action', 'Read',
 * 'EvaluateDeploymentOutput', 'DeploymentCleanup'
 * @readonly
 * @enum {string}
 */
export type ProvisioningOperation =
  | "NotSpecified"
  | "Create"
  | "Delete"
  | "Waiting"
  | "AzureAsyncOperationWaiting"
  | "ResourceCacheWaiting"
  | "Action"
  | "Read"
  | "EvaluateDeploymentOutput"
  | "DeploymentCleanup";

/**
 * Defines values for PropertyChangeType.
 * Possible values include: 'Create', 'Delete', 'Modify', 'Array', 'NoEffect'
 * @readonly
 * @enum {string}
 */
export type PropertyChangeType = "Create" | "Delete" | "Modify" | "Array" | "NoEffect";

/**
 * Defines values for ChangeType.
 * Possible values include: 'Create', 'Delete', 'Ignore', 'Deploy', 'NoChange', 'Modify',
 * 'Unsupported'
 * @readonly
 * @enum {string}
 */
export type ChangeType =
  | "Create"
  | "Delete"
  | "Ignore"
  | "Deploy"
  | "NoChange"
  | "Modify"
  | "Unsupported";

/**
 * Defines values for TagsPatchOperation.
 * Possible values include: 'Replace', 'Merge', 'Delete'
 * @readonly
 * @enum {string}
 */
export type TagsPatchOperation = "Replace" | "Merge" | "Delete";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the checkExistenceAtScope operation.
 */
export type DeploymentsCheckExistenceAtScopeResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: boolean;
  };
};

/**
 * Contains response data for the createOrUpdateAtScope operation.
 */
export type DeploymentsCreateOrUpdateAtScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the getAtScope operation.
 */
export type DeploymentsGetAtScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the validateAtScope operation.
 */
export type DeploymentsValidateAtScopeResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the exportTemplateAtScope operation.
 */
export type DeploymentsExportTemplateAtScopeResponse = DeploymentExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExportResult;
  };
};

/**
 * Contains response data for the listAtScope operation.
 */
export type DeploymentsListAtScopeResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the checkExistenceAtTenantScope operation.
 */
export type DeploymentsCheckExistenceAtTenantScopeResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: boolean;
  };
};

/**
 * Contains response data for the createOrUpdateAtTenantScope operation.
 */
export type DeploymentsCreateOrUpdateAtTenantScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the getAtTenantScope operation.
 */
export type DeploymentsGetAtTenantScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the validateAtTenantScope operation.
 */
export type DeploymentsValidateAtTenantScopeResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the whatIfAtTenantScope operation.
 */
export type DeploymentsWhatIfAtTenantScopeResponse = WhatIfOperationResult &
  DeploymentsWhatIfAtTenantScopeHeaders & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeploymentsWhatIfAtTenantScopeHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WhatIfOperationResult;
    };
  };

/**
 * Contains response data for the exportTemplateAtTenantScope operation.
 */
export type DeploymentsExportTemplateAtTenantScopeResponse = DeploymentExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExportResult;
  };
};

/**
 * Contains response data for the listAtTenantScope operation.
 */
export type DeploymentsListAtTenantScopeResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the checkExistenceAtManagementGroupScope operation.
 */
export type DeploymentsCheckExistenceAtManagementGroupScopeResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: boolean;
  };
};

/**
 * Contains response data for the createOrUpdateAtManagementGroupScope operation.
 */
export type DeploymentsCreateOrUpdateAtManagementGroupScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the getAtManagementGroupScope operation.
 */
export type DeploymentsGetAtManagementGroupScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the validateAtManagementGroupScope operation.
 */
export type DeploymentsValidateAtManagementGroupScopeResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the whatIfAtManagementGroupScope operation.
 */
export type DeploymentsWhatIfAtManagementGroupScopeResponse = WhatIfOperationResult &
  DeploymentsWhatIfAtManagementGroupScopeHeaders & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeploymentsWhatIfAtManagementGroupScopeHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WhatIfOperationResult;
    };
  };

/**
 * Contains response data for the exportTemplateAtManagementGroupScope operation.
 */
export type DeploymentsExportTemplateAtManagementGroupScopeResponse = DeploymentExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExportResult;
  };
};

/**
 * Contains response data for the listAtManagementGroupScope operation.
 */
export type DeploymentsListAtManagementGroupScopeResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the checkExistenceAtSubscriptionScope operation.
 */
export type DeploymentsCheckExistenceAtSubscriptionScopeResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: boolean;
  };
};

/**
 * Contains response data for the createOrUpdateAtSubscriptionScope operation.
 */
export type DeploymentsCreateOrUpdateAtSubscriptionScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the getAtSubscriptionScope operation.
 */
export type DeploymentsGetAtSubscriptionScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the validateAtSubscriptionScope operation.
 */
export type DeploymentsValidateAtSubscriptionScopeResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the whatIfAtSubscriptionScope operation.
 */
export type DeploymentsWhatIfAtSubscriptionScopeResponse = WhatIfOperationResult &
  DeploymentsWhatIfAtSubscriptionScopeHeaders & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeploymentsWhatIfAtSubscriptionScopeHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WhatIfOperationResult;
    };
  };

/**
 * Contains response data for the exportTemplateAtSubscriptionScope operation.
 */
export type DeploymentsExportTemplateAtSubscriptionScopeResponse = DeploymentExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExportResult;
  };
};

/**
 * Contains response data for the listAtSubscriptionScope operation.
 */
export type DeploymentsListAtSubscriptionScopeResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the checkExistence operation.
 */
export type DeploymentsCheckExistenceResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: boolean;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DeploymentsCreateOrUpdateResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the get operation.
 */
export type DeploymentsGetResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the validate operation.
 */
export type DeploymentsValidateResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the whatIf operation.
 */
export type DeploymentsWhatIfResponse = WhatIfOperationResult &
  DeploymentsWhatIfHeaders & {
    /**
     * The underlying HTTP response.
     */
    _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeploymentsWhatIfHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WhatIfOperationResult;
    };
  };

/**
 * Contains response data for the exportTemplate operation.
 */
export type DeploymentsExportTemplateResponse = DeploymentExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExportResult;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DeploymentsListByResourceGroupResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the calculateTemplateHash operation.
 */
export type DeploymentsCalculateTemplateHashResponse = TemplateHashResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TemplateHashResult;
  };
};

/**
 * Contains response data for the beginCreateOrUpdateAtScope operation.
 */
export type DeploymentsBeginCreateOrUpdateAtScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the beginValidateAtScope operation.
 */
export type DeploymentsBeginValidateAtScopeResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the beginCreateOrUpdateAtTenantScope operation.
 */
export type DeploymentsBeginCreateOrUpdateAtTenantScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the beginValidateAtTenantScope operation.
 */
export type DeploymentsBeginValidateAtTenantScopeResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the beginCreateOrUpdateAtManagementGroupScope operation.
 */
export type DeploymentsBeginCreateOrUpdateAtManagementGroupScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the beginValidateAtManagementGroupScope operation.
 */
export type DeploymentsBeginValidateAtManagementGroupScopeResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the beginCreateOrUpdateAtSubscriptionScope operation.
 */
export type DeploymentsBeginCreateOrUpdateAtSubscriptionScopeResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the beginValidateAtSubscriptionScope operation.
 */
export type DeploymentsBeginValidateAtSubscriptionScopeResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DeploymentsBeginCreateOrUpdateResponse = DeploymentExtended & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentExtended;
  };
};

/**
 * Contains response data for the beginValidate operation.
 */
export type DeploymentsBeginValidateResponse = DeploymentValidateResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentValidateResult;
  };
};

/**
 * Contains response data for the listAtScopeNext operation.
 */
export type DeploymentsListAtScopeNextResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the listAtTenantScopeNext operation.
 */
export type DeploymentsListAtTenantScopeNextResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the listAtManagementGroupScopeNext operation.
 */
export type DeploymentsListAtManagementGroupScopeNextResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the listAtSubscriptionScopeNext operation.
 */
export type DeploymentsListAtSubscriptionScopeNextResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DeploymentsListByResourceGroupNextResponse = DeploymentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentListResult;
  };
};

/**
 * Contains response data for the unregister operation.
 */
export type ProvidersUnregisterResponse = Provider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Provider;
  };
};

/**
 * Contains response data for the register operation.
 */
export type ProvidersRegisterResponse = Provider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Provider;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ProvidersListResponse = ProviderListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProviderListResult;
  };
};

/**
 * Contains response data for the listAtTenantScope operation.
 */
export type ProvidersListAtTenantScopeResponse = ProviderListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProviderListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ProvidersGetResponse = Provider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Provider;
  };
};

/**
 * Contains response data for the getAtTenantScope operation.
 */
export type ProvidersGetAtTenantScopeResponse = Provider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Provider;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProvidersListNextResponse = ProviderListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProviderListResult;
  };
};

/**
 * Contains response data for the listAtTenantScopeNext operation.
 */
export type ProvidersListAtTenantScopeNextResponse = ProviderListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProviderListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ProviderResourceTypesListResponse = ProviderResourceTypeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProviderResourceTypeListResult;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ResourcesListByResourceGroupResponse = ResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ResourcesListResponse = ResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceListResult;
  };
};

/**
 * Contains response data for the checkExistence operation.
 */
export type ResourcesCheckExistenceResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: boolean;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ResourcesCreateOrUpdateResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the update operation.
 */
export type ResourcesUpdateResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ResourcesGetResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the checkExistenceById operation.
 */
export type ResourcesCheckExistenceByIdResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: boolean;
  };
};

/**
 * Contains response data for the createOrUpdateById operation.
 */
export type ResourcesCreateOrUpdateByIdResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the updateById operation.
 */
export type ResourcesUpdateByIdResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the getById operation.
 */
export type ResourcesGetByIdResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ResourcesBeginCreateOrUpdateResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ResourcesBeginUpdateResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the beginCreateOrUpdateById operation.
 */
export type ResourcesBeginCreateOrUpdateByIdResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the beginUpdateById operation.
 */
export type ResourcesBeginUpdateByIdResponse = GenericResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: GenericResource;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ResourcesListByResourceGroupNextResponse = ResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ResourcesListNextResponse = ResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceListResult;
  };
};

/**
 * Contains response data for the checkExistence operation.
 */
export type ResourceGroupsCheckExistenceResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: boolean;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ResourceGroupsCreateOrUpdateResponse = ResourceGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceGroup;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ResourceGroupsGetResponse = ResourceGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceGroup;
  };
};

/**
 * Contains response data for the update operation.
 */
export type ResourceGroupsUpdateResponse = ResourceGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceGroup;
  };
};

/**
 * Contains response data for the exportTemplate operation.
 */
export type ResourceGroupsExportTemplateResponse = ResourceGroupExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceGroupExportResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ResourceGroupsListResponse = ResourceGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceGroupListResult;
  };
};

/**
 * Contains response data for the beginExportTemplate operation.
 */
export type ResourceGroupsBeginExportTemplateResponse = ResourceGroupExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceGroupExportResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ResourceGroupsListNextResponse = ResourceGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceGroupListResult;
  };
};

/**
 * Contains response data for the createOrUpdateValue operation.
 */
export type TagsCreateOrUpdateValueResponse = TagValue & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TagValue;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TagsCreateOrUpdateResponse = TagDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TagDetails;
  };
};

/**
 * Contains response data for the list operation.
 */
export type TagsListResponse = TagsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TagsListResult;
  };
};

/**
 * Contains response data for the createOrUpdateAtScope operation.
 */
export type TagsCreateOrUpdateAtScopeResponse = TagsResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TagsResource;
  };
};

/**
 * Contains response data for the updateAtScope operation.
 */
export type TagsUpdateAtScopeResponse = TagsResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TagsResource;
  };
};

/**
 * Contains response data for the getAtScope operation.
 */
export type TagsGetAtScopeResponse = TagsResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TagsResource;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type TagsListNextResponse = TagsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TagsListResult;
  };
};

/**
 * Contains response data for the getAtScope operation.
 */
export type DeploymentOperationsGetAtScopeResponse = DeploymentOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperation;
  };
};

/**
 * Contains response data for the listAtScope operation.
 */
export type DeploymentOperationsListAtScopeResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the getAtTenantScope operation.
 */
export type DeploymentOperationsGetAtTenantScopeResponse = DeploymentOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperation;
  };
};

/**
 * Contains response data for the listAtTenantScope operation.
 */
export type DeploymentOperationsListAtTenantScopeResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the getAtManagementGroupScope operation.
 */
export type DeploymentOperationsGetAtManagementGroupScopeResponse = DeploymentOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperation;
  };
};

/**
 * Contains response data for the listAtManagementGroupScope operation.
 */
export type DeploymentOperationsListAtManagementGroupScopeResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the getAtSubscriptionScope operation.
 */
export type DeploymentOperationsGetAtSubscriptionScopeResponse = DeploymentOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperation;
  };
};

/**
 * Contains response data for the listAtSubscriptionScope operation.
 */
export type DeploymentOperationsListAtSubscriptionScopeResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type DeploymentOperationsGetResponse = DeploymentOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperation;
  };
};

/**
 * Contains response data for the list operation.
 */
export type DeploymentOperationsListResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the listAtScopeNext operation.
 */
export type DeploymentOperationsListAtScopeNextResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the listAtTenantScopeNext operation.
 */
export type DeploymentOperationsListAtTenantScopeNextResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the listAtManagementGroupScopeNext operation.
 */
export type DeploymentOperationsListAtManagementGroupScopeNextResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the listAtSubscriptionScopeNext operation.
 */
export type DeploymentOperationsListAtSubscriptionScopeNextResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type DeploymentOperationsListNextResponse = DeploymentOperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeploymentOperationsListResult;
  };
};
