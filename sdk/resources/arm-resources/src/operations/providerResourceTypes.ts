/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/providerResourceTypesMappers";
import * as Parameters from "../models/parameters";
import { ResourceManagementClientContext } from "../resourceManagementClientContext";

/** Class representing a ProviderResourceTypes. */
export class ProviderResourceTypes {
  private readonly client: ResourceManagementClientContext;

  /**
   * Create a ProviderResourceTypes.
   * @param {ResourceManagementClientContext} client Reference to the service client.
   */
  constructor(client: ResourceManagementClientContext) {
    this.client = client;
  }

  /**
   * List the resource types for a specified resource provider.
   * @param resourceProviderNamespace The namespace of the resource provider.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProviderResourceTypesListResponse>
   */
  list(
    resourceProviderNamespace: string,
    options?: Models.ProviderResourceTypesListOptionalParams
  ): Promise<Models.ProviderResourceTypesListResponse>;
  /**
   * @param resourceProviderNamespace The namespace of the resource provider.
   * @param callback The callback
   */
  list(
    resourceProviderNamespace: string,
    callback: msRest.ServiceCallback<Models.ProviderResourceTypeListResult>
  ): void;
  /**
   * @param resourceProviderNamespace The namespace of the resource provider.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(
    resourceProviderNamespace: string,
    options: Models.ProviderResourceTypesListOptionalParams,
    callback: msRest.ServiceCallback<Models.ProviderResourceTypeListResult>
  ): void;
  list(
    resourceProviderNamespace: string,
    options?:
      | Models.ProviderResourceTypesListOptionalParams
      | msRest.ServiceCallback<Models.ProviderResourceTypeListResult>,
    callback?: msRest.ServiceCallback<Models.ProviderResourceTypeListResult>
  ): Promise<Models.ProviderResourceTypesListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceProviderNamespace,
        options
      },
      listOperationSpec,
      callback
    ) as Promise<Models.ProviderResourceTypesListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes",
  urlParameters: [Parameters.resourceProviderNamespace, Parameters.subscriptionId],
  queryParameters: [Parameters.expand, Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.ProviderResourceTypeListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
