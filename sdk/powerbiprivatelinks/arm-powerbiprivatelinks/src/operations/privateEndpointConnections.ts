/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/privateEndpointConnectionsMappers";
import * as Parameters from "../models/parameters";
import { PrivateLinkServicesForPowerBIClientContext } from "../privateLinkServicesForPowerBIClientContext";

/** Class representing a PrivateEndpointConnections. */
export class PrivateEndpointConnections {
  private readonly client: PrivateLinkServicesForPowerBIClientContext;

  /**
   * Create a PrivateEndpointConnections.
   * @param {PrivateLinkServicesForPowerBIClientContext} client Reference to the service client.
   */
  constructor(client: PrivateLinkServicesForPowerBIClientContext) {
    this.client = client;
  }

  /**
   * Gets private endpoint connection for Power BI.
   * @summary Lists all private endpoint connections under a resource.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param azureResourceName The name of the powerbi resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByResourceResponse>
   */
  listByResource(resourceGroupName: string, azureResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsListByResourceResponse>;
  /**
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param azureResourceName The name of the powerbi resource.
   * @param callback The callback
   */
  listByResource(resourceGroupName: string, azureResourceName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param azureResourceName The name of the powerbi resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResource(resourceGroupName: string, azureResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  listByResource(resourceGroupName: string, azureResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): Promise<Models.PrivateEndpointConnectionsListByResourceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        azureResourceName,
        options
      },
      listByResourceOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByResourceResponse>;
  }

  /**
   * Get a specific private endpoint connection for Power BI by private endpoint name.
   * @summary Get a specific private endpoint connection.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsGetResponse>
   */
  get(options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsGetResponse>;
  /**
   * @param callback The callback
   */
  get(callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  get(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  get(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsGetResponse>;
  }

  /**
   * Updates the status of Private Endpoint Connection object. Used to approve or reject a
   * connection.
   * @summary Update a specific private endpoint connection.
   * @param privateEndpointConnection Private endpoint connection object to update.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsCreateResponse>
   */
  create(privateEndpointConnection: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsCreateResponse>;
  /**
   * @param privateEndpointConnection Private endpoint connection object to update.
   * @param callback The callback
   */
  create(privateEndpointConnection: Models.PrivateEndpointConnection, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  /**
   * @param privateEndpointConnection Private endpoint connection object to update.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(privateEndpointConnection: Models.PrivateEndpointConnection, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  create(privateEndpointConnection: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionsCreateResponse> {
    return this.client.sendOperationRequest(
      {
        privateEndpointConnection,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsCreateResponse>;
  }

  /**
   * Deletes a private endpoint connection for Power BI by private endpoint name.
   * @summary Asynchronous API to delete a private endpoint connection for Power BI by private
   * endpoint name.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsDeleteResponse>
   */
  deleteMethod(options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsDeleteResponse> {
    return this.beginDeleteMethod(options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.PrivateEndpointConnectionsDeleteResponse>;
  }

  /**
   * Deletes a private endpoint connection for Power BI by private endpoint name.
   * @summary Asynchronous API to delete a private endpoint connection for Power BI by private
   * endpoint name.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Gets private endpoint connection for Power BI.
   * @summary Lists all private endpoint connections under a resource.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByResourceNextResponse>
   */
  listByResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsListByResourceNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  listByResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): Promise<Models.PrivateEndpointConnectionsListByResourceNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceNextOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByResourceNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByResourceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/privateLinkServicesForPowerBI/{azureResourceName}/privateEndpointConnections",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.azureResourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/privateLinkServicesForPowerBI/{azureResourceName}/privateEndpointConnections/{privateEndpointName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.azureResourceName,
    Parameters.privateEndpointName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/privateLinkServicesForPowerBI/{azureResourceName}/privateEndpointConnections/{privateEndpointName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.azureResourceName,
    Parameters.privateEndpointName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "privateEndpointConnection",
    mapper: {
      ...Mappers.PrivateEndpointConnection,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection
    },
    201: {
      bodyMapper: Mappers.PrivateEndpointConnection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/privateLinkServicesForPowerBI/{azureResourceName}/privateEndpointConnections/{privateEndpointName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.azureResourceName,
    Parameters.privateEndpointName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      headersMapper: Mappers.PrivateEndpointConnectionsDeleteHeaders
    },
    202: {
      headersMapper: Mappers.PrivateEndpointConnectionsDeleteHeaders
    },
    204: {
      headersMapper: Mappers.PrivateEndpointConnectionsDeleteHeaders
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
      headersMapper: Mappers.PrivateEndpointConnectionsDeleteHeaders
    }
  },
  serializer
};

const listByResourceNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
