/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PrivateLinkServices } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { PrivateLinkServicesForPowerBIClient } from "../privateLinkServicesForPowerBIClient";
import {
  PrivateLinkServicesListByResourceGroupOptionalParams,
  PrivateLinkServicesListByResourceGroupResponse
} from "../models";

/** Class containing PrivateLinkServices operations. */
export class PrivateLinkServicesImpl implements PrivateLinkServices {
  private readonly client: PrivateLinkServicesForPowerBIClient;

  /**
   * Initialize a new instance of the class PrivateLinkServices class.
   * @param client Reference to the service client
   */
  constructor(client: PrivateLinkServicesForPowerBIClient) {
    this.client = client;
  }

  /**
   * Gets all the private link resources for the given resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    options?: PrivateLinkServicesListByResourceGroupOptionalParams
  ): Promise<PrivateLinkServicesListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      { options },
      listByResourceGroupOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listByResourceGroupOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/privateLinkServicesForPowerBI",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: {
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "TenantResource" } }
        }
      }
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
