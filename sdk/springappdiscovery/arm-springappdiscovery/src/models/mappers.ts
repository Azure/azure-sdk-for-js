/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const SpringbootsitesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootsitesProperties",
    modelProperties: {
      masterSiteId: {
        serializedName: "masterSiteId",
        type: {
          name: "String",
        },
      },
      migrateProjectId: {
        serializedName: "migrateProjectId",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpringbootsitesModelExtendedLocation: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SpringbootsitesModelExtendedLocation",
      modelProperties: {
        type: {
          serializedName: "type",
          type: {
            name: "String",
          },
        },
        name: {
          serializedName: "name",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const SpringbootsitesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootsitesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SpringbootsitesModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpringbootserversProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootserversProperties",
    modelProperties: {
      port: {
        serializedName: "port",
        type: {
          name: "Number",
        },
      },
      server: {
        serializedName: "server",
        required: true,
        type: {
          name: "String",
        },
      },
      fqdnAndIpAddressList: {
        serializedName: "fqdnAndIpAddressList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      machineArmId: {
        serializedName: "machineArmId",
        type: {
          name: "String",
        },
      },
      totalApps: {
        serializedName: "totalApps",
        type: {
          name: "Number",
        },
      },
      springBootApps: {
        serializedName: "springBootApps",
        type: {
          name: "Number",
        },
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number",
        },
      },
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      summaryMessage: {
        serializedName: "summaryMessage",
        type: {
          name: "String",
        },
      },
      runAsAccountId: {
        serializedName: "runAsAccountId",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
      possibleCauses: {
        serializedName: "possibleCauses",
        type: {
          name: "String",
        },
      },
      recommendedAction: {
        serializedName: "recommendedAction",
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String",
        },
      },
      updatedTimeStamp: {
        serializedName: "updatedTimeStamp",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const SpringbootserversListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootserversListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SpringbootserversModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpringbootappsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootappsProperties",
    modelProperties: {
      appName: {
        serializedName: "appName",
        type: {
          name: "String",
        },
      },
      artifactName: {
        serializedName: "artifactName",
        type: {
          name: "String",
        },
      },
      appPort: {
        serializedName: "appPort",
        type: {
          name: "Number",
        },
      },
      appType: {
        serializedName: "appType",
        type: {
          name: "String",
        },
      },
      applicationConfigurations: {
        serializedName: "applicationConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "SpringbootappsPropertiesApplicationConfigurationsItem",
            },
          },
        },
      },
      bindingPorts: {
        serializedName: "bindingPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number",
            },
          },
        },
      },
      buildJdkVersion: {
        serializedName: "buildJdkVersion",
        type: {
          name: "String",
        },
      },
      certificates: {
        serializedName: "certificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      checksum: {
        serializedName: "checksum",
        type: {
          name: "String",
        },
      },
      dependencies: {
        serializedName: "dependencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      environments: {
        serializedName: "environments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      instanceCount: {
        serializedName: "instanceCount",
        type: {
          name: "Number",
        },
      },
      jarFileLocation: {
        serializedName: "jarFileLocation",
        type: {
          name: "String",
        },
      },
      jvmMemoryInMB: {
        serializedName: "jvmMemoryInMB",
        type: {
          name: "Number",
        },
      },
      jvmOptions: {
        serializedName: "jvmOptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      miscs: {
        serializedName: "miscs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SpringbootappsPropertiesMiscsItem",
            },
          },
        },
      },
      instances: {
        serializedName: "instances",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SpringbootappsPropertiesInstancesItem",
            },
          },
        },
      },
      runtimeJdkVersion: {
        serializedName: "runtimeJdkVersion",
        type: {
          name: "String",
        },
      },
      servers: {
        serializedName: "servers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      machineArmIds: {
        serializedName: "machineArmIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      siteName: {
        serializedName: "siteName",
        type: {
          name: "String",
        },
      },
      springBootVersion: {
        serializedName: "springBootVersion",
        type: {
          name: "String",
        },
      },
      staticContentLocations: {
        serializedName: "staticContentLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      connectionStrings: {
        serializedName: "connectionStrings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      lastModifiedTime: {
        serializedName: "lastModifiedTime",
        type: {
          name: "DateTime",
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String",
        },
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
    },
  },
};

export const SpringbootappsPropertiesApplicationConfigurationsItem: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SpringbootappsPropertiesApplicationConfigurationsItem",
      modelProperties: {
        key: {
          serializedName: "key",
          required: true,
          type: {
            name: "String",
          },
        },
        value: {
          serializedName: "value",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const SpringbootappsPropertiesMiscsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootappsPropertiesMiscsItem",
    modelProperties: {
      key: {
        serializedName: "key",
        required: true,
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpringbootappsPropertiesInstancesItem: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SpringbootappsPropertiesInstancesItem",
      modelProperties: {
        machineArmId: {
          serializedName: "machineArmId",
          required: true,
          type: {
            name: "String",
          },
        },
        instanceCount: {
          serializedName: "instanceCount",
          type: {
            name: "Number",
          },
        },
        jvmMemoryInMB: {
          serializedName: "jvmMemoryInMB",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const SpringbootappsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootappsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SpringbootappsModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SummariesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SummariesProperties",
    modelProperties: {
      discoveredServers: {
        serializedName: "discoveredServers",
        type: {
          name: "Number",
        },
      },
      discoveredApps: {
        serializedName: "discoveredApps",
        type: {
          name: "Number",
        },
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SummaryList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SummaryList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Summary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorSummariesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorSummariesProperties",
    modelProperties: {
      discoveryScopeErrorSummaries: {
        serializedName: "discoveryScopeErrorSummaries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorSummaryModel",
            },
          },
        },
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorSummaryModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorSummaryModel",
    modelProperties: {
      affectedResourceType: {
        serializedName: "affectedResourceType",
        type: {
          name: "String",
        },
      },
      affectedObjectsCount: {
        serializedName: "affectedObjectsCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ErrorSummaryList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorSummaryList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorSummary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SummariesResourcePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SummariesResourcePatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SummariesProperties",
        },
      },
    },
  },
};

export const ErrorSummariesResourcePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorSummariesResourcePatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ErrorSummariesProperties",
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const SpringbootsitesModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootsitesModel",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SpringbootsitesProperties",
        },
      },
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "SpringbootsitesModelExtendedLocation",
        },
      },
    },
  },
};

export const SpringbootsitesPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootsitesPatch",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SpringbootsitesProperties",
        },
      },
    },
  },
};

export const SpringbootserversModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootserversModel",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SpringbootserversProperties",
        },
      },
    },
  },
};

export const SpringbootserversPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootserversPatch",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SpringbootserversProperties",
        },
      },
    },
  },
};

export const SpringbootappsModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootappsModel",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SpringbootappsProperties",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const SpringbootappsPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootappsPatch",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SpringbootappsProperties",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const Summary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Summary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SummariesProperties",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const ErrorSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorSummary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ErrorSummariesProperties",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const SpringbootsitesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootsitesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpringbootsitesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootsitesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpringbootsitesTriggerRefreshSiteHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SpringbootsitesTriggerRefreshSiteHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const SpringbootserversDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootserversDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpringbootserversUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootserversUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpringbootappsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpringbootappsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};
