/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  SpringbootsitesModel as SpringbootsitesModelMapper,
  SpringbootsitesPatch as SpringbootsitesPatchMapper,
  SpringbootserversModel as SpringbootserversModelMapper,
  SpringbootserversPatch as SpringbootserversPatchMapper,
  SpringbootappsPatch as SpringbootappsPatchMapper,
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const springbootsitesName: OperationURLParameter = {
  parameterPath: "springbootsitesName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[a-z][a-z0-9-]*$"),
      MaxLength: 64,
      MinLength: 3,
    },
    serializedName: "springbootsitesName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2023-01-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const springbootsites: OperationParameter = {
  parameterPath: "springbootsites",
  mapper: SpringbootsitesModelMapper,
};

export const springbootsites1: OperationParameter = {
  parameterPath: "springbootsites",
  mapper: SpringbootsitesPatchMapper,
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const siteName: OperationURLParameter = {
  parameterPath: "siteName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[a-z][a-z0-9-]*$"),
      MaxLength: 64,
      MinLength: 3,
    },
    serializedName: "siteName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const springbootserversName: OperationURLParameter = {
  parameterPath: "springbootserversName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[A-Za-z0-9][A-Za-z0-9-]*$"),
      MaxLength: 64,
      MinLength: 3,
    },
    serializedName: "springbootserversName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const springbootservers: OperationParameter = {
  parameterPath: "springbootservers",
  mapper: SpringbootserversModelMapper,
};

export const springbootservers1: OperationParameter = {
  parameterPath: "springbootservers",
  mapper: SpringbootserversPatchMapper,
};

export const springbootappsName: OperationURLParameter = {
  parameterPath: "springbootappsName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[A-Za-z0-9][A-Za-z0-9-]*$"),
      MaxLength: 64,
      MinLength: 3,
    },
    serializedName: "springbootappsName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const springbootapps: OperationParameter = {
  parameterPath: "springbootapps",
  mapper: SpringbootappsPatchMapper,
};

export const summaryName: OperationURLParameter = {
  parameterPath: "summaryName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[A-Za-z][A-Za-z0-9]*$"),
      MaxLength: 63,
      MinLength: 3,
    },
    serializedName: "summaryName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const errorSummaryName: OperationURLParameter = {
  parameterPath: "errorSummaryName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[A-Za-z][A-Za-z0-9]*$"),
      MaxLength: 63,
      MinLength: 3,
    },
    serializedName: "errorSummaryName",
    required: true,
    type: {
      name: "String",
    },
  },
};
