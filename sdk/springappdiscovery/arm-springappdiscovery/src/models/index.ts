/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The springbootsites resource definition. */
export interface SpringbootsitesProperties {
  /** The master site ID from Azure Migrate. */
  masterSiteId?: string;
  /** The migrate project ID from Azure Migrate. */
  migrateProjectId?: string;
  /** The resource provisioning state. */
  provisioningState?: ProvisioningState;
}

/** The extended location definition. */
export interface SpringbootsitesModelExtendedLocation {
  /** The extended location type. */
  type?: string;
  /** The extended location name. */
  name?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The springbootsites list resource definition. */
export interface SpringbootsitesListResult {
  /** The springbootsites list. */
  value?: SpringbootsitesModel[];
  /** The link used to get the next page of springbootsites resources list. */
  nextLink?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The springbootservers resource definition. */
export interface SpringbootserversProperties {
  /** Target server port for remote login */
  port?: number;
  /** Server is the target server name or ip address to discover of SpringBootServer. */
  server: string;
  /** The alternative FQDN or IP addresses to discover for this server */
  fqdnAndIpAddressList?: string[];
  /** The machine Id from ARM */
  machineArmId?: string;
  /** The total number of apps been discovered */
  totalApps?: number;
  /** The total number of spring boot apps been discovered */
  springBootApps?: number;
  /** The list of errors. */
  errors?: ErrorModel[];
  /** The resource provisioning state. */
  provisioningState?: ProvisioningState;
}

/** Defines the error. */
export interface ErrorModel {
  /** The error ID. */
  id?: number;
  /** The error code. */
  code?: string;
  /** The summarized error message. */
  summaryMessage?: string;
  /** The account ID used to login. */
  runAsAccountId?: string;
  /** The detailed error message. */
  message?: string;
  /** The error possible causes. */
  possibleCauses?: string;
  /** The error recommended action */
  recommendedAction?: string;
  /** The error severity */
  severity?: string;
  /** Time when this error was last updated. */
  updatedTimeStamp?: Date;
}

/** The springbootservers list resource definition. */
export interface SpringbootserversListResult {
  /** The springbootsites list. */
  value?: SpringbootserversModel[];
  /** The link used to get the next page of springbootservers resources list. */
  nextLink?: string;
}

/** The springbootapps resource definition. */
export interface SpringbootappsProperties {
  /** The name of SpringBootApp. */
  appName?: string;
  /** The artifact name of SpringBootApp. */
  artifactName?: string;
  /** The application port. */
  appPort?: number;
  /** The application type, whether it is a SpringBoot app. */
  appType?: string;
  /** The application configuration file list. */
  applicationConfigurations?: SpringbootappsPropertiesApplicationConfigurationsItem[];
  /** The application binding port list. */
  bindingPorts?: number[];
  /** The jdk version in build. */
  buildJdkVersion?: string;
  /** The certificate file list. */
  certificates?: string[];
  /** The checksum of jar file. */
  checksum?: string;
  /** The dependency list. */
  dependencies?: string[];
  /** The environment variable list. */
  environments?: string[];
  /** The total instance count the app deployed. */
  instanceCount?: number;
  /** The jar file location on the server. */
  jarFileLocation?: string;
  /** The jvm heap memory allocated. */
  jvmMemoryInMB?: number;
  /** The jvm options. */
  jvmOptions?: string[];
  /** The other types of date collected. */
  miscs?: SpringbootappsPropertiesMiscsItem[];
  /** The breakdown info for app instances on all the servers */
  instances?: SpringbootappsPropertiesInstancesItem[];
  /** The jdk version installed on server */
  runtimeJdkVersion?: string;
  /** The server list the app installed */
  servers?: string[];
  /** The machine ARM id list the app belongs to. */
  machineArmIds?: string[];
  /** The site name. */
  siteName?: string;
  /** The spring boot version. */
  springBootVersion?: string;
  /** The static content location list. */
  staticContentLocations?: string[];
  /** The connection string list. */
  connectionStrings?: string[];
  /** Time when this springbootapps jar file was last modified. */
  lastModifiedTime?: Date;
  /** Time when this springbootapps instance was last refreshed. */
  lastUpdatedTime?: Date;
  /** The resource provisioning state. */
  provisioningState?: ProvisioningState;
  /** The list of errors. */
  errors?: ErrorModel[];
}

export interface SpringbootappsPropertiesApplicationConfigurationsItem {
  /** The application config file name. */
  key: string;
  /** The application config file content, only contains config keys. */
  value?: string;
}

export interface SpringbootappsPropertiesMiscsItem {
  /** The miscs. key. */
  key: string;
  /** The miscs. value. */
  value?: string;
}

export interface SpringbootappsPropertiesInstancesItem {
  /** The machine ARM resource Id of this app instance */
  machineArmId: string;
  /** The instance count of this app instance */
  instanceCount?: number;
  /** The jvm heap memory allocated of this app instance */
  jvmMemoryInMB?: number;
}

/** The springbootapps list resource definition. */
export interface SpringbootappsListResult {
  /** The springbootsites list. */
  value?: SpringbootappsModel[];
  /** The link used to get the next page of springbootapps resources list. */
  nextLink?: string;
}

/** Summaries properties */
export interface SummariesProperties {
  /** The of number discovered spring boot servers. */
  discoveredServers?: number;
  /** The of number discovered spring boot apps. */
  discoveredApps?: number;
  /** The list of errors. */
  errors?: ErrorModel[];
  /** The resource provisioning state. */
  provisioningState?: ProvisioningState;
}

/** List of Sites. */
export interface SummaryList {
  /** List of Sites. */
  value?: Summary[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** Error summary properties */
export interface ErrorSummariesProperties {
  /** The list of ErrorSummary. */
  discoveryScopeErrorSummaries?: ErrorSummaryModel[];
  /** The list of errors. */
  errors?: ErrorModel[];
  /** The resource provisioning state. */
  provisioningState?: ProvisioningState;
}

/** ErrorSummary model. */
export interface ErrorSummaryModel {
  /** The type of Object. */
  affectedResourceType?: string;
  /** The count. */
  affectedObjectsCount?: number;
}

/** The list of ErrorSummary. */
export interface ErrorSummaryList {
  /** The list of ErrorSummary. */
  value?: ErrorSummary[];
  /** Url to follow for getting next page of resources. */
  nextLink?: string;
}

/** Object containing tags updates for patch operations. */
export interface SummariesResourcePatch {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The Summaries resource definition. */
  properties?: SummariesProperties;
}

/** Object containing tags updates for patch operations. */
export interface ErrorSummariesResourcePatch {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The ErrorSummaries resource definition. */
  properties?: ErrorSummariesProperties;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The springbootsites envelope resource definition. */
export interface SpringbootsitesModel extends TrackedResource {
  /** The springbootsites resource definition. */
  properties?: SpringbootsitesProperties;
  /** The extended location definition. */
  extendedLocation?: SpringbootsitesModelExtendedLocation;
}

/** The springbootsites resource patch definition. */
export interface SpringbootsitesPatch extends TrackedResource {
  /** The springbootsites resource definition. */
  properties?: SpringbootsitesProperties;
}

/** The springbootservers envelope resource definition. */
export interface SpringbootserversModel extends ProxyResource {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** The springbootservers resource definition. */
  properties?: SpringbootserversProperties;
}

/** The springbootservers resource patch definition. */
export interface SpringbootserversPatch extends ProxyResource {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** The springbootsites resource definition. */
  properties?: SpringbootserversProperties;
}

/** The springbootapps envelope resource definition. */
export interface SpringbootappsModel extends ProxyResource {
  /** The springbootapps resource definition. */
  properties?: SpringbootappsProperties;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** The springbootapps resource patch definition. */
export interface SpringbootappsPatch extends ProxyResource {
  /** The springbootapps resource definition. */
  properties?: SpringbootappsProperties;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** The summary resource definition. */
export interface Summary extends ProxyResource {
  /** Resource properties. */
  properties?: SummariesProperties;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** The error summary resource definition. */
export interface ErrorSummary extends ProxyResource {
  /** Resource properties. */
  properties?: ErrorSummariesProperties;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** Defines headers for Springbootsites_delete operation. */
export interface SpringbootsitesDeleteHeaders {
  location?: string;
}

/** Defines headers for Springbootsites_update operation. */
export interface SpringbootsitesUpdateHeaders {
  location?: string;
}

/** Defines headers for Springbootsites_triggerRefreshSite operation. */
export interface SpringbootsitesTriggerRefreshSiteHeaders {
  location?: string;
}

/** Defines headers for Springbootservers_delete operation. */
export interface SpringbootserversDeleteHeaders {
  location?: string;
}

/** Defines headers for Springbootservers_update operation. */
export interface SpringbootserversUpdateHeaders {
  location?: string;
}

/** Defines headers for Springbootapps_update operation. */
export interface SpringbootappsUpdateHeaders {
  location?: string;
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Unknown */
  Unknown = "Unknown",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Accepted */
  Accepted = "Accepted",
  /** Provisioning */
  Provisioning = "Provisioning",
  /** Deleting */
  Deleting = "Deleting",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Accepted** \
 * **Provisioning** \
 * **Deleting**
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Optional parameters. */
export interface SpringbootsitesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SpringbootsitesGetResponse = SpringbootsitesModel;

/** Optional parameters. */
export interface SpringbootsitesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type SpringbootsitesCreateOrUpdateResponse = SpringbootsitesModel;

/** Optional parameters. */
export interface SpringbootsitesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SpringbootsitesDeleteResponse = SpringbootsitesDeleteHeaders;

/** Optional parameters. */
export interface SpringbootsitesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SpringbootsitesUpdateResponse = SpringbootsitesModel;

/** Optional parameters. */
export interface SpringbootsitesTriggerRefreshSiteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the triggerRefreshSite operation. */
export type SpringbootsitesTriggerRefreshSiteResponse =
  SpringbootsitesTriggerRefreshSiteHeaders;

/** Optional parameters. */
export interface SpringbootsitesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SpringbootsitesListByResourceGroupResponse =
  SpringbootsitesListResult;

/** Optional parameters. */
export interface SpringbootsitesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type SpringbootsitesListBySubscriptionResponse =
  SpringbootsitesListResult;

/** Optional parameters. */
export interface SpringbootsitesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SpringbootsitesListByResourceGroupNextResponse =
  SpringbootsitesListResult;

/** Optional parameters. */
export interface SpringbootsitesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type SpringbootsitesListBySubscriptionNextResponse =
  SpringbootsitesListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface SpringbootserversGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SpringbootserversGetResponse = SpringbootserversModel;

/** Optional parameters. */
export interface SpringbootserversCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type SpringbootserversCreateOrUpdateResponse = SpringbootserversModel;

/** Optional parameters. */
export interface SpringbootserversDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SpringbootserversDeleteResponse = SpringbootserversDeleteHeaders;

/** Optional parameters. */
export interface SpringbootserversUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SpringbootserversUpdateResponse = SpringbootserversModel;

/** Optional parameters. */
export interface SpringbootserversListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SpringbootserversListByResourceGroupResponse =
  SpringbootserversListResult;

/** Optional parameters. */
export interface SpringbootserversListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type SpringbootserversListBySubscriptionResponse =
  SpringbootserversListResult;

/** Optional parameters. */
export interface SpringbootserversListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SpringbootserversListByResourceGroupNextResponse =
  SpringbootserversListResult;

/** Optional parameters. */
export interface SpringbootserversListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type SpringbootserversListBySubscriptionNextResponse =
  SpringbootserversListResult;

/** Optional parameters. */
export interface SpringbootappsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SpringbootappsGetResponse = SpringbootappsModel;

/** Optional parameters. */
export interface SpringbootappsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SpringbootappsUpdateResponse = SpringbootappsModel;

/** Optional parameters. */
export interface SpringbootappsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SpringbootappsListByResourceGroupResponse =
  SpringbootappsListResult;

/** Optional parameters. */
export interface SpringbootappsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type SpringbootappsListBySubscriptionResponse = SpringbootappsListResult;

/** Optional parameters. */
export interface SpringbootappsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SpringbootappsListByResourceGroupNextResponse =
  SpringbootappsListResult;

/** Optional parameters. */
export interface SpringbootappsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type SpringbootappsListBySubscriptionNextResponse =
  SpringbootappsListResult;

/** Optional parameters. */
export interface SummariesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SummariesGetResponse = Summary;

/** Optional parameters. */
export interface SummariesListBySiteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySite operation. */
export type SummariesListBySiteResponse = SummaryList;

/** Optional parameters. */
export interface SummariesListBySiteNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySiteNext operation. */
export type SummariesListBySiteNextResponse = SummaryList;

/** Optional parameters. */
export interface ErrorSummariesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ErrorSummariesGetResponse = ErrorSummary;

/** Optional parameters. */
export interface ErrorSummariesListBySiteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySite operation. */
export type ErrorSummariesListBySiteResponse = ErrorSummaryList;

/** Optional parameters. */
export interface ErrorSummariesListBySiteNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySiteNext operation. */
export type ErrorSummariesListBySiteNextResponse = ErrorSummaryList;

/** Optional parameters. */
export interface SpringAppDiscoveryManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
