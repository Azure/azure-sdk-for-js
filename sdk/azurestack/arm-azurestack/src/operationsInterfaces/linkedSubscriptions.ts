/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  LinkedSubscription,
  LinkedSubscriptionsListByResourceGroupOptionalParams,
  LinkedSubscriptionsListBySubscriptionOptionalParams,
  LinkedSubscriptionsGetOptionalParams,
  LinkedSubscriptionsGetResponse,
  LinkedSubscriptionsDeleteOptionalParams,
  LinkedSubscriptionParameter,
  LinkedSubscriptionsCreateOrUpdateOptionalParams,
  LinkedSubscriptionsCreateOrUpdateResponse,
  LinkedSubscriptionsUpdateOptionalParams,
  LinkedSubscriptionsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LinkedSubscriptions. */
export interface LinkedSubscriptions {
  /**
   * Returns a list of all linked subscriptions under current resource group.
   * @param resourceGroup Name of the resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroup: string,
    options?: LinkedSubscriptionsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<LinkedSubscription>;
  /**
   * Returns a list of all linked subscriptions under current subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: LinkedSubscriptionsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<LinkedSubscription>;
  /**
   * Returns the properties of a Linked Subscription resource.
   * @param resourceGroup Name of the resource group.
   * @param linkedSubscriptionName Name of the Linked Subscription resource.
   * @param options The options parameters.
   */
  get(
    resourceGroup: string,
    linkedSubscriptionName: string,
    options?: LinkedSubscriptionsGetOptionalParams
  ): Promise<LinkedSubscriptionsGetResponse>;
  /**
   * Delete the requested Linked Subscription resource.
   * @param resourceGroup Name of the resource group.
   * @param linkedSubscriptionName Name of the Linked Subscription resource.
   * @param options The options parameters.
   */
  delete(
    resourceGroup: string,
    linkedSubscriptionName: string,
    options?: LinkedSubscriptionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Create or update a linked subscription resource.
   * @param resourceGroup Name of the resource group.
   * @param linkedSubscriptionName Name of the Linked Subscription resource.
   * @param resource Linked subscription resource parameter.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroup: string,
    linkedSubscriptionName: string,
    resource: LinkedSubscriptionParameter,
    options?: LinkedSubscriptionsCreateOrUpdateOptionalParams
  ): Promise<LinkedSubscriptionsCreateOrUpdateResponse>;
  /**
   * Patch a Linked Subscription resource.
   * @param resourceGroup Name of the resource group.
   * @param linkedSubscriptionName Name of the Linked Subscription resource.
   * @param resource Linked subscription resource parameter.
   * @param options The options parameters.
   */
  update(
    resourceGroup: string,
    linkedSubscriptionName: string,
    resource: LinkedSubscriptionParameter,
    options?: LinkedSubscriptionsUpdateOptionalParams
  ): Promise<LinkedSubscriptionsUpdateResponse>;
}
