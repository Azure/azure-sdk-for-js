/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Registration,
  RegistrationsListOptionalParams,
  RegistrationsListBySubscriptionOptionalParams,
  RegistrationsGetOptionalParams,
  RegistrationsGetResponse,
  RegistrationsDeleteOptionalParams,
  RegistrationParameter,
  RegistrationsCreateOrUpdateOptionalParams,
  RegistrationsCreateOrUpdateResponse,
  RegistrationsUpdateOptionalParams,
  RegistrationsUpdateResponse,
  RegistrationsGetActivationKeyOptionalParams,
  RegistrationsGetActivationKeyResponse,
  RegistrationsEnableRemoteManagementOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Registrations. */
export interface Registrations {
  /**
   * Returns a list of all registrations.
   * @param resourceGroup Name of the resource group.
   * @param options The options parameters.
   */
  list(
    resourceGroup: string,
    options?: RegistrationsListOptionalParams
  ): PagedAsyncIterableIterator<Registration>;
  /**
   * Returns a list of all registrations under current subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: RegistrationsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Registration>;
  /**
   * Returns the properties of an Azure Stack registration.
   * @param resourceGroup Name of the resource group.
   * @param registrationName Name of the Azure Stack registration.
   * @param options The options parameters.
   */
  get(
    resourceGroup: string,
    registrationName: string,
    options?: RegistrationsGetOptionalParams
  ): Promise<RegistrationsGetResponse>;
  /**
   * Delete the requested Azure Stack registration.
   * @param resourceGroup Name of the resource group.
   * @param registrationName Name of the Azure Stack registration.
   * @param options The options parameters.
   */
  delete(
    resourceGroup: string,
    registrationName: string,
    options?: RegistrationsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Create or update an Azure Stack registration.
   * @param resourceGroup Name of the resource group.
   * @param registrationName Name of the Azure Stack registration.
   * @param token Registration token
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroup: string,
    registrationName: string,
    token: RegistrationParameter,
    options?: RegistrationsCreateOrUpdateOptionalParams
  ): Promise<RegistrationsCreateOrUpdateResponse>;
  /**
   * Patch an Azure Stack registration.
   * @param resourceGroup Name of the resource group.
   * @param registrationName Name of the Azure Stack registration.
   * @param token Registration token
   * @param options The options parameters.
   */
  update(
    resourceGroup: string,
    registrationName: string,
    token: RegistrationParameter,
    options?: RegistrationsUpdateOptionalParams
  ): Promise<RegistrationsUpdateResponse>;
  /**
   * Returns Azure Stack Activation Key.
   * @param resourceGroup Name of the resource group.
   * @param registrationName Name of the Azure Stack registration.
   * @param options The options parameters.
   */
  getActivationKey(
    resourceGroup: string,
    registrationName: string,
    options?: RegistrationsGetActivationKeyOptionalParams
  ): Promise<RegistrationsGetActivationKeyResponse>;
  /**
   * Enables remote management for device under the Azure Stack registration.
   * @param resourceGroup Name of the resource group.
   * @param registrationName Name of the Azure Stack registration.
   * @param options The options parameters.
   */
  enableRemoteManagement(
    resourceGroup: string,
    registrationName: string,
    options?: RegistrationsEnableRemoteManagementOptionalParams
  ): Promise<void>;
}
