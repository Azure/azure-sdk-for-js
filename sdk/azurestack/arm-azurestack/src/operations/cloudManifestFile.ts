/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/cloudManifestFileMappers";
import * as Parameters from "../models/parameters";
import { AzureStackManagementClientContext } from "../azureStackManagementClientContext";

/** Class representing a CloudManifestFile. */
export class CloudManifestFile {
  private readonly client: AzureStackManagementClientContext;

  /**
   * Create a CloudManifestFile.
   * @param {AzureStackManagementClientContext} client Reference to the service client.
   */
  constructor(client: AzureStackManagementClientContext) {
    this.client = client;
  }

  /**
   * Returns a cloud specific manifest JSON file with latest version.
   * @param [options] The optional parameters
   * @returns Promise<Models.CloudManifestFileListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.CloudManifestFileListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.CloudManifestFileResponse>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CloudManifestFileResponse>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CloudManifestFileResponse>, callback?: msRest.ServiceCallback<Models.CloudManifestFileResponse>): Promise<Models.CloudManifestFileListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.CloudManifestFileListResponse>;
  }

  /**
   * Returns a cloud specific manifest JSON file.
   * @param verificationVersion Signing verification key version.
   * @param [options] The optional parameters
   * @returns Promise<Models.CloudManifestFileGetResponse>
   */
  get(verificationVersion: string, options?: Models.CloudManifestFileGetOptionalParams): Promise<Models.CloudManifestFileGetResponse>;
  /**
   * @param verificationVersion Signing verification key version.
   * @param callback The callback
   */
  get(verificationVersion: string, callback: msRest.ServiceCallback<Models.CloudManifestFileResponse>): void;
  /**
   * @param verificationVersion Signing verification key version.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(verificationVersion: string, options: Models.CloudManifestFileGetOptionalParams, callback: msRest.ServiceCallback<Models.CloudManifestFileResponse>): void;
  get(verificationVersion: string, options?: Models.CloudManifestFileGetOptionalParams | msRest.ServiceCallback<Models.CloudManifestFileResponse>, callback?: msRest.ServiceCallback<Models.CloudManifestFileResponse>): Promise<Models.CloudManifestFileGetResponse> {
    return this.client.sendOperationRequest(
      {
        verificationVersion,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.CloudManifestFileGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.AzureStack/cloudManifestFiles",
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CloudManifestFileResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.AzureStack/cloudManifestFiles/{verificationVersion}",
  urlParameters: [
    Parameters.verificationVersion
  ],
  queryParameters: [
    Parameters.versionCreationDate,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CloudManifestFileResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
