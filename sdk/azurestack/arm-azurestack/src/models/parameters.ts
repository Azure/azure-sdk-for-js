/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  CustomerSubscription as CustomerSubscriptionMapper,
  DeviceConfiguration as DeviceConfigurationMapper,
  MarketplaceProductLogUpdate as MarketplaceProductLogUpdateMapper,
  RegistrationParameter as RegistrationParameterMapper,
  LinkedSubscriptionParameter as LinkedSubscriptionParameterMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2020-06-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const verificationVersion: OperationURLParameter = {
  parameterPath: "verificationVersion",
  mapper: {
    serializedName: "verificationVersion",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const versionCreationDate: OperationQueryParameter = {
  parameterPath: ["options", "versionCreationDate"],
  mapper: {
    serializedName: "versionCreationDate",
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroup: OperationURLParameter = {
  parameterPath: "resourceGroup",
  mapper: {
    serializedName: "resourceGroup",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const registrationName: OperationURLParameter = {
  parameterPath: "registrationName",
  mapper: {
    serializedName: "registrationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const customerSubscriptionName: OperationURLParameter = {
  parameterPath: "customerSubscriptionName",
  mapper: {
    serializedName: "customerSubscriptionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const customerCreationParameters: OperationParameter = {
  parameterPath: "customerCreationParameters",
  mapper: CustomerSubscriptionMapper
};

export const productName: OperationURLParameter = {
  parameterPath: "productName",
  mapper: {
    serializedName: "productName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const deviceConfiguration: OperationParameter = {
  parameterPath: ["options", "deviceConfiguration"],
  mapper: DeviceConfigurationMapper
};

export const marketplaceProductLogUpdate: OperationParameter = {
  parameterPath: ["options", "marketplaceProductLogUpdate"],
  mapper: MarketplaceProductLogUpdateMapper
};

export const token: OperationParameter = {
  parameterPath: "token",
  mapper: RegistrationParameterMapper
};

export const linkedSubscriptionName: OperationURLParameter = {
  parameterPath: "linkedSubscriptionName",
  mapper: {
    serializedName: "linkedSubscriptionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resource: OperationParameter = {
  parameterPath: "resource",
  mapper: LinkedSubscriptionParameterMapper
};
