/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { FileWorkspacesNoSubscription } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MicrosoftSupport } from "../microsoftSupport";
import {
  FileWorkspacesNoSubscriptionGetOptionalParams,
  FileWorkspacesNoSubscriptionGetResponse,
  FileWorkspacesNoSubscriptionCreateOptionalParams,
  FileWorkspacesNoSubscriptionCreateResponse,
} from "../models";

/** Class containing FileWorkspacesNoSubscription operations. */
export class FileWorkspacesNoSubscriptionImpl
  implements FileWorkspacesNoSubscription
{
  private readonly client: MicrosoftSupport;

  /**
   * Initialize a new instance of the class FileWorkspacesNoSubscription class.
   * @param client Reference to the service client
   */
  constructor(client: MicrosoftSupport) {
    this.client = client;
  }

  /**
   * Gets details for a specific file workspace.
   * @param fileWorkspaceName File Workspace Name
   * @param options The options parameters.
   */
  get(
    fileWorkspaceName: string,
    options?: FileWorkspacesNoSubscriptionGetOptionalParams,
  ): Promise<FileWorkspacesNoSubscriptionGetResponse> {
    return this.client.sendOperationRequest(
      { fileWorkspaceName, options },
      getOperationSpec,
    );
  }

  /**
   * Creates a new file workspace.
   * @param fileWorkspaceName File workspace name.
   * @param options The options parameters.
   */
  create(
    fileWorkspaceName: string,
    options?: FileWorkspacesNoSubscriptionCreateOptionalParams,
  ): Promise<FileWorkspacesNoSubscriptionCreateResponse> {
    return this.client.sendOperationRequest(
      { fileWorkspaceName, options },
      createOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Support/fileWorkspaces/{fileWorkspaceName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.FileWorkspaceDetails,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.fileWorkspaceName],
  headerParameters: [Parameters.accept],
  serializer,
};
const createOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Support/fileWorkspaces/{fileWorkspaceName}",
  httpMethod: "PUT",
  responses: {
    201: {
      bodyMapper: Mappers.FileWorkspaceDetails,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.fileWorkspaceName1],
  headerParameters: [Parameters.accept],
  serializer,
};
