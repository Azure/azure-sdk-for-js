/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ProblemClassificationsNoSubscription } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MicrosoftSupport } from "../microsoftSupport";
import {
  ProblemClassificationsClassificationInput,
  ProblemClassificationsNoSubscriptionClassifyProblemsOptionalParams,
  ProblemClassificationsNoSubscriptionClassifyProblemsResponse,
} from "../models";

/** Class containing ProblemClassificationsNoSubscription operations. */
export class ProblemClassificationsNoSubscriptionImpl
  implements ProblemClassificationsNoSubscription
{
  private readonly client: MicrosoftSupport;

  /**
   * Initialize a new instance of the class ProblemClassificationsNoSubscription class.
   * @param client Reference to the service client
   */
  constructor(client: MicrosoftSupport) {
    this.client = client;
  }

  /**
   * Classify the right problem classifications (categories) available for a specific Azure service.
   * @param problemServiceName Name of the Azure service for which the problem classifications need to be
   *                           retrieved.
   * @param problemClassificationsClassificationInput Input to check.
   * @param options The options parameters.
   */
  classifyProblems(
    problemServiceName: string,
    problemClassificationsClassificationInput: ProblemClassificationsClassificationInput,
    options?: ProblemClassificationsNoSubscriptionClassifyProblemsOptionalParams,
  ): Promise<ProblemClassificationsNoSubscriptionClassifyProblemsResponse> {
    return this.client.sendOperationRequest(
      {
        problemServiceName,
        problemClassificationsClassificationInput,
        options,
      },
      classifyProblemsOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const classifyProblemsOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Support/services/{problemServiceName}/classifyProblems",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.ProblemClassificationsClassificationOutput,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.problemClassificationsClassificationInput,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.problemServiceName],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
