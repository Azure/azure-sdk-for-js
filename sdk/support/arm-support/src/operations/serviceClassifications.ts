/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClassifications } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MicrosoftSupport } from "../microsoftSupport";
import {
  ServiceClassificationRequest,
  ServiceClassificationsClassifyServicesOptionalParams,
  ServiceClassificationsClassifyServicesResponse,
} from "../models";

/** Class containing ServiceClassifications operations. */
export class ServiceClassificationsImpl implements ServiceClassifications {
  private readonly client: MicrosoftSupport;

  /**
   * Initialize a new instance of the class ServiceClassifications class.
   * @param client Reference to the service client
   */
  constructor(client: MicrosoftSupport) {
    this.client = client;
  }

  /**
   * Classify the list of right Azure services.
   * @param serviceClassificationRequest Input to check.
   * @param options The options parameters.
   */
  classifyServices(
    serviceClassificationRequest: ServiceClassificationRequest,
    options?: ServiceClassificationsClassifyServicesOptionalParams,
  ): Promise<ServiceClassificationsClassifyServicesResponse> {
    return this.client.sendOperationRequest(
      { serviceClassificationRequest, options },
      classifyServicesOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const classifyServicesOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/providers/Microsoft.Support/classifyServices",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.ServiceClassificationOutput,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.serviceClassificationRequest,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
