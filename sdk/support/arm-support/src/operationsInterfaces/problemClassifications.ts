/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ProblemClassification,
  ProblemClassificationsListOptionalParams,
  ProblemClassificationsGetOptionalParams,
  ProblemClassificationsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProblemClassifications. */
export interface ProblemClassifications {
  /**
   * Lists all the problem classifications (categories) available for a specific Azure service. Always
   * use the service and problem classifications obtained programmatically. This practice ensures that
   * you always have the most recent set of service and problem classification Ids.
   * @param serviceName Name of the Azure service for which the problem classifications need to be
   *                    retrieved.
   * @param options The options parameters.
   */
  list(
    serviceName: string,
    options?: ProblemClassificationsListOptionalParams
  ): PagedAsyncIterableIterator<ProblemClassification>;
  /**
   * Get problem classification details for a specific Azure service.
   * @param serviceName Name of the Azure service available for support.
   * @param problemClassificationName Name of problem classification.
   * @param options The options parameters.
   */
  get(
    serviceName: string,
    problemClassificationName: string,
    options?: ProblemClassificationsGetOptionalParams
  ): Promise<ProblemClassificationsGetResponse>;
}
