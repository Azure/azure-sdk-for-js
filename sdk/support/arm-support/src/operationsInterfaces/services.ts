/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Service,
  ServicesListOptionalParams,
  ServicesGetOptionalParams,
  ServicesGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Services. */
export interface Services {
  /**
   * Lists all the Azure services available for support ticket creation. For **Technical** issues, select
   * the Service Id that maps to the Azure service/product as displayed in the **Services** drop-down
   * list on the Azure portal's [New support
   * request](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/overview) page.
   * Always use the service and its corresponding problem classification(s) obtained programmatically for
   * support ticket creation. This practice ensures that you always have the most recent set of service
   * and problem classification Ids.
   * @param options The options parameters.
   */
  list(
    options?: ServicesListOptionalParams
  ): PagedAsyncIterableIterator<Service>;
  /**
   * Gets a specific Azure service for support ticket creation.
   * @param serviceName Name of the Azure service.
   * @param options The options parameters.
   */
  get(
    serviceName: string,
    options?: ServicesGetOptionalParams
  ): Promise<ServicesGetResponse>;
}
