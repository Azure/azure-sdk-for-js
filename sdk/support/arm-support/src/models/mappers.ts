/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const ServicesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Service",
            },
          },
        },
      },
    },
  },
};

export const Service: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Service",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String",
        },
      },
      resourceTypes: {
        serializedName: "properties.resourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      metadata: {
        serializedName: "properties.metadata",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const ServiceClassificationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceClassificationRequest",
    modelProperties: {
      issueSummary: {
        serializedName: "issueSummary",
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      additionalContext: {
        serializedName: "additionalContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServiceClassificationOutput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceClassificationOutput",
    modelProperties: {
      serviceClassificationResults: {
        serializedName: "serviceClassificationResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceClassificationAnswer",
            },
          },
        },
      },
    },
  },
};

export const ClassificationService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClassificationService",
    modelProperties: {
      serviceId: {
        serializedName: "serviceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceTypes: {
        serializedName: "resourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const ProblemClassificationsClassificationInput: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ProblemClassificationsClassificationInput",
      modelProperties: {
        issueSummary: {
          serializedName: "issueSummary",
          required: true,
          type: {
            name: "String",
          },
        },
        resourceId: {
          serializedName: "resourceId",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const ProblemClassificationsClassificationOutput: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ProblemClassificationsClassificationOutput",
      modelProperties: {
        problemClassificationResults: {
          serializedName: "problemClassificationResults",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "ProblemClassificationsClassificationResult",
              },
            },
          },
        },
      },
    },
  };

export const ProblemClassificationsClassificationResult: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ProblemClassificationsClassificationResult",
      modelProperties: {
        problemId: {
          serializedName: "problemId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        title: {
          serializedName: "title",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        description: {
          serializedName: "description",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        serviceId: {
          serializedName: "serviceId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        problemClassificationId: {
          serializedName: "problemClassificationId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        serviceIdRelatedServiceId: {
          serializedName: "relatedService.serviceId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        displayName: {
          serializedName: "relatedService.displayName",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        resourceTypes: {
          serializedName: "relatedService.resourceTypes",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "String",
              },
            },
          },
        },
      },
    },
  };

export const ProblemClassificationsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProblemClassificationsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProblemClassification",
            },
          },
        },
      },
    },
  },
};

export const ProblemClassification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProblemClassification",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String",
        },
      },
      secondaryConsentEnabled: {
        serializedName: "properties.secondaryConsentEnabled",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecondaryConsentEnabled",
            },
          },
        },
      },
      metadata: {
        serializedName: "properties.metadata",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      parentProblemClassification: {
        serializedName: "properties.parentProblemClassification",
        type: {
          name: "Composite",
          className: "ProblemClassification",
        },
      },
    },
  },
};

export const SecondaryConsentEnabled: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecondaryConsentEnabled",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CheckNameAvailabilityInput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityInput",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Microsoft.Support/supportTickets",
            "Microsoft.Support/communications",
          ],
        },
      },
    },
  },
};

export const CheckNameAvailabilityOutput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityOutput",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      reason: {
        serializedName: "reason",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SupportTicketsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportTicketsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SupportTicketDetails",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SupportTicketDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportTicketDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      supportTicketId: {
        serializedName: "properties.supportTicketId",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      problemClassificationId: {
        serializedName: "properties.problemClassificationId",
        type: {
          name: "String",
        },
      },
      problemClassificationDisplayName: {
        serializedName: "properties.problemClassificationDisplayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String",
        },
      },
      enrollmentId: {
        serializedName: "properties.enrollmentId",
        type: {
          name: "String",
        },
      },
      require24X7Response: {
        serializedName: "properties.require24X7Response",
        type: {
          name: "Boolean",
        },
      },
      advancedDiagnosticConsent: {
        serializedName: "properties.advancedDiagnosticConsent",
        type: {
          name: "String",
        },
      },
      problemScopingQuestions: {
        serializedName: "properties.problemScopingQuestions",
        type: {
          name: "String",
        },
      },
      supportPlanId: {
        serializedName: "properties.supportPlanId",
        type: {
          name: "String",
        },
      },
      contactDetails: {
        serializedName: "properties.contactDetails",
        type: {
          name: "Composite",
          className: "ContactProfile",
        },
      },
      serviceLevelAgreement: {
        serializedName: "properties.serviceLevelAgreement",
        type: {
          name: "Composite",
          className: "ServiceLevelAgreement",
        },
      },
      supportEngineer: {
        serializedName: "properties.supportEngineer",
        type: {
          name: "Composite",
          className: "SupportEngineer",
        },
      },
      supportPlanType: {
        serializedName: "properties.supportPlanType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      supportPlanDisplayName: {
        serializedName: "properties.supportPlanDisplayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      title: {
        serializedName: "properties.title",
        type: {
          name: "String",
        },
      },
      problemStartTime: {
        serializedName: "properties.problemStartTime",
        type: {
          name: "DateTime",
        },
      },
      serviceId: {
        serializedName: "properties.serviceId",
        type: {
          name: "String",
        },
      },
      serviceDisplayName: {
        serializedName: "properties.serviceDisplayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      modifiedDate: {
        serializedName: "properties.modifiedDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      fileWorkspaceName: {
        serializedName: "properties.fileWorkspaceName",
        type: {
          name: "String",
        },
      },
      isTemporaryTicket: {
        serializedName: "properties.isTemporaryTicket",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      technicalTicketDetails: {
        serializedName: "properties.technicalTicketDetails",
        type: {
          name: "Composite",
          className: "TechnicalTicketDetails",
        },
      },
      quotaTicketDetails: {
        serializedName: "properties.quotaTicketDetails",
        type: {
          name: "Composite",
          className: "QuotaTicketDetails",
        },
      },
      secondaryConsent: {
        serializedName: "properties.secondaryConsent",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecondaryConsent",
            },
          },
        },
      },
    },
  },
};

export const ContactProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContactProfile",
    modelProperties: {
      firstName: {
        serializedName: "firstName",
        required: true,
        type: {
          name: "String",
        },
      },
      lastName: {
        serializedName: "lastName",
        required: true,
        type: {
          name: "String",
        },
      },
      preferredContactMethod: {
        serializedName: "preferredContactMethod",
        required: true,
        type: {
          name: "String",
        },
      },
      primaryEmailAddress: {
        serializedName: "primaryEmailAddress",
        required: true,
        type: {
          name: "String",
        },
      },
      additionalEmailAddresses: {
        serializedName: "additionalEmailAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "String",
        },
      },
      preferredTimeZone: {
        serializedName: "preferredTimeZone",
        required: true,
        type: {
          name: "String",
        },
      },
      country: {
        serializedName: "country",
        required: true,
        type: {
          name: "String",
        },
      },
      preferredSupportLanguage: {
        serializedName: "preferredSupportLanguage",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServiceLevelAgreement: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceLevelAgreement",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      expirationTime: {
        serializedName: "expirationTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      slaMinutes: {
        serializedName: "slaMinutes",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SupportEngineer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportEngineer",
    modelProperties: {
      emailAddress: {
        serializedName: "emailAddress",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TechnicalTicketDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TechnicalTicketDetails",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const QuotaTicketDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaTicketDetails",
    modelProperties: {
      quotaChangeRequestSubType: {
        serializedName: "quotaChangeRequestSubType",
        type: {
          name: "String",
        },
      },
      quotaChangeRequestVersion: {
        serializedName: "quotaChangeRequestVersion",
        type: {
          name: "String",
        },
      },
      quotaChangeRequests: {
        serializedName: "quotaChangeRequests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QuotaChangeRequest",
            },
          },
        },
      },
    },
  },
};

export const QuotaChangeRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QuotaChangeRequest",
    modelProperties: {
      region: {
        serializedName: "region",
        type: {
          name: "String",
        },
      },
      payload: {
        serializedName: "payload",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SecondaryConsent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecondaryConsent",
    modelProperties: {
      userConsent: {
        serializedName: "userConsent",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpdateSupportTicket: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateSupportTicket",
    modelProperties: {
      severity: {
        serializedName: "severity",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      contactDetails: {
        serializedName: "contactDetails",
        type: {
          name: "Composite",
          className: "UpdateContactProfile",
        },
      },
      advancedDiagnosticConsent: {
        serializedName: "advancedDiagnosticConsent",
        type: {
          name: "String",
        },
      },
      secondaryConsent: {
        serializedName: "secondaryConsent",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecondaryConsent",
            },
          },
        },
      },
    },
  },
};

export const UpdateContactProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateContactProfile",
    modelProperties: {
      firstName: {
        serializedName: "firstName",
        type: {
          name: "String",
        },
      },
      lastName: {
        serializedName: "lastName",
        type: {
          name: "String",
        },
      },
      preferredContactMethod: {
        serializedName: "preferredContactMethod",
        type: {
          name: "String",
        },
      },
      primaryEmailAddress: {
        serializedName: "primaryEmailAddress",
        type: {
          name: "String",
        },
      },
      additionalEmailAddresses: {
        serializedName: "additionalEmailAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "String",
        },
      },
      preferredTimeZone: {
        serializedName: "preferredTimeZone",
        type: {
          name: "String",
        },
      },
      country: {
        serializedName: "country",
        type: {
          name: "String",
        },
      },
      preferredSupportLanguage: {
        serializedName: "preferredSupportLanguage",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommunicationsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationDetails",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommunicationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      communicationType: {
        serializedName: "properties.communicationType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      communicationDirection: {
        serializedName: "properties.communicationDirection",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sender: {
        serializedName: "properties.sender",
        type: {
          name: "String",
        },
      },
      subject: {
        serializedName: "properties.subject",
        type: {
          name: "String",
        },
      },
      body: {
        serializedName: "properties.body",
        type: {
          name: "String",
        },
      },
      createdDate: {
        serializedName: "properties.createdDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ChatTranscriptsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChatTranscriptsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ChatTranscriptDetails",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MessageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MessageProperties",
    modelProperties: {
      contentType: {
        serializedName: "contentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      communicationDirection: {
        serializedName: "communicationDirection",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sender: {
        serializedName: "sender",
        type: {
          name: "String",
        },
      },
      body: {
        serializedName: "body",
        required: true,
        type: {
          name: "String",
        },
      },
      createdDate: {
        serializedName: "createdDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const FilesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FileDetails",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UploadFile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UploadFile",
    modelProperties: {
      content: {
        serializedName: "content",
        type: {
          name: "String",
        },
      },
      chunkIndex: {
        serializedName: "chunkIndex",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LookUpResourceIdRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LookUpResourceIdRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "String",
        },
      },
      type: {
        defaultValue: "Microsoft.Support/supportTickets",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LookUpResourceIdResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LookUpResourceIdResponse",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServiceClassificationAnswer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceClassificationAnswer",
    modelProperties: {
      ...ClassificationService.type.modelProperties,
      childService: {
        serializedName: "childService",
        type: {
          name: "Composite",
          className: "ClassificationService",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const ChatTranscriptDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChatTranscriptDetails",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      messages: {
        serializedName: "properties.messages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MessageProperties",
            },
          },
        },
      },
      startTime: {
        serializedName: "properties.startTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const FileWorkspaceDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileWorkspaceDetails",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      expirationTime: {
        serializedName: "properties.expirationTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const FileDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileDetails",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      chunkSize: {
        serializedName: "properties.chunkSize",
        type: {
          name: "Number",
        },
      },
      fileSize: {
        serializedName: "properties.fileSize",
        type: {
          name: "Number",
        },
      },
      numberOfChunks: {
        serializedName: "properties.numberOfChunks",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SupportTicketsNoSubscriptionCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SupportTicketsNoSubscriptionCreateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const CommunicationsNoSubscriptionCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "CommunicationsNoSubscriptionCreateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };
