/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Identity for the connected cluster. */
export interface ConnectedClusterIdentity {
  /**
   * The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster. */
  type: ResourceIdentityType;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: LastModifiedByType;
  /** The timestamp of resource modification (UTC). */
  lastModifiedAt?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Object containing updates for patch operations. */
export interface ConnectedClusterPatch {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Describes the connected cluster resource properties that can be updated during PATCH operation. */
  properties?: Record<string, unknown>;
}

export interface ListClusterUserCredentialProperties {
  /** The mode of client authentication. */
  authenticationMethod: AuthenticationMethod;
  /** Boolean value to indicate whether the request is for client side proxy or not */
  clientProxy: boolean;
}

/** The list of credential result response. */
export interface CredentialResults {
  /**
   * Contains the REP (rendezvous endpoint) and “Sender” access token.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hybridConnectionConfig?: HybridConnectionConfig;
  /**
   * Base64-encoded Kubernetes configuration file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubeconfigs?: CredentialResult[];
}

/** Contains the REP (rendezvous endpoint) and “Sender” access token. */
export interface HybridConnectionConfig {
  /**
   * Timestamp when this token will be expired.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: number;
  /**
   * Name of the connection
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hybridConnectionName?: string;
  /**
   * Name of the relay.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly relay?: string;
  /**
   * Sender access token
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly token?: string;
}

/** The credential result response. */
export interface CredentialResult {
  /**
   * The name of the credential.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Base64-encoded Kubernetes configuration file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Uint8Array;
}

/** The paginated list of connected Clusters */
export interface ConnectedClusterList {
  /** The list of connected clusters */
  value?: ConnectedCluster[];
  /** The link to fetch the next page of connected cluster */
  nextLink?: string;
}

/** The paginated list of connected cluster API operations. */
export interface OperationList {
  /**
   * The list of connected cluster API operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /** The link to fetch the next page of connected cluster API operations. */
  nextLink?: string;
}

/** The Connected cluster API operation */
export interface Operation {
  /**
   * Operation name: {Microsoft.Kubernetes}/{resource}/{operation}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly display?: OperationDisplay;
}

/** The object that represents the operation. */
export interface OperationDisplay {
  /** Service provider: Microsoft.connectedClusters */
  provider?: string;
  /** Connected Cluster Resource on which the operation is performed */
  resource?: string;
  /** Operation type: Read, write, delete, etc. */
  operation?: string;
  /** Description of the operation. */
  description?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** Represents a connected cluster. */
export type ConnectedCluster = TrackedResource & {
  /** The identity of the connected cluster. */
  identity: ConnectedClusterIdentity;
  /**
   * Metadata pertaining to creation and last modification of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Base64 encoded public certificate used by the agent to do the initial handshake to the backend services in Azure. */
  agentPublicKeyCertificate: string;
  /**
   * The Kubernetes version of the connected cluster resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubernetesVersion?: string;
  /**
   * Number of nodes present in the connected cluster resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalNodeCount?: number;
  /**
   * Number of CPU cores present in the connected cluster resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalCoreCount?: number;
  /**
   * Version of the agent running on the connected cluster resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentVersion?: string;
  /** Provisioning state of the connected cluster resource. */
  provisioningState?: ProvisioningState;
  /** The Kubernetes distribution running on this connected cluster. */
  distribution?: string;
  /** The infrastructure on which the Kubernetes cluster represented by this connected cluster is running on. */
  infrastructure?: string;
  /**
   * Connected cluster offering
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offering?: string;
  /**
   * Expiration time of the managed identity certificate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managedIdentityCertificateExpirationTime?: Date;
  /**
   * Time representing the last instance when heart beat was received from the cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastConnectivityTime?: Date;
  /**
   * Represents the connectivity status of the connected cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectivityStatus?: ConnectivityStatus;
};

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Succeeded = "Succeeded",
  Failed = "Failed",
  Canceled = "Canceled",
  Provisioning = "Provisioning",
  Updating = "Updating",
  Deleting = "Deleting",
  Accepted = "Accepted"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Provisioning** \
 * **Updating** \
 * **Deleting** \
 * **Accepted**
 */
export type ProvisioningState = string;

/** Known values of {@link ConnectivityStatus} that the service accepts. */
export enum KnownConnectivityStatus {
  Connecting = "Connecting",
  Connected = "Connected",
  Offline = "Offline",
  Expired = "Expired"
}

/**
 * Defines values for ConnectivityStatus. \
 * {@link KnownConnectivityStatus} can be used interchangeably with ConnectivityStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Connecting** \
 * **Connected** \
 * **Offline** \
 * **Expired**
 */
export type ConnectivityStatus = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link LastModifiedByType} that the service accepts. */
export enum KnownLastModifiedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for LastModifiedByType. \
 * {@link KnownLastModifiedByType} can be used interchangeably with LastModifiedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type LastModifiedByType = string;

/** Known values of {@link AuthenticationMethod} that the service accepts. */
export enum KnownAuthenticationMethod {
  Token = "Token",
  AAD = "AAD"
}

/**
 * Defines values for AuthenticationMethod. \
 * {@link KnownAuthenticationMethod} can be used interchangeably with AuthenticationMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Token** \
 * **AAD**
 */
export type AuthenticationMethod = string;
/** Defines values for ResourceIdentityType. */
export type ResourceIdentityType = "None" | "SystemAssigned";

/** Optional parameters. */
export interface ConnectedClusterCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ConnectedClusterCreateResponse = ConnectedCluster;

/** Optional parameters. */
export interface ConnectedClusterUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ConnectedClusterUpdateResponse = ConnectedCluster;

/** Optional parameters. */
export interface ConnectedClusterGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConnectedClusterGetResponse = ConnectedCluster;

/** Optional parameters. */
export interface ConnectedClusterDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ConnectedClusterListClusterUserCredentialOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listClusterUserCredential operation. */
export type ConnectedClusterListClusterUserCredentialResponse = CredentialResults;

/** Optional parameters. */
export interface ConnectedClusterListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ConnectedClusterListByResourceGroupResponse = ConnectedClusterList;

/** Optional parameters. */
export interface ConnectedClusterListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type ConnectedClusterListBySubscriptionResponse = ConnectedClusterList;

/** Optional parameters. */
export interface ConnectedClusterListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ConnectedClusterListByResourceGroupNextResponse = ConnectedClusterList;

/** Optional parameters. */
export interface ConnectedClusterListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type ConnectedClusterListBySubscriptionNextResponse = ConnectedClusterList;

/** Optional parameters. */
export interface OperationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationsGetResponse = OperationList;

/** Optional parameters. */
export interface OperationsGetNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getNext operation. */
export type OperationsGetNextResponse = OperationList;

/** Optional parameters. */
export interface ConnectedKubernetesClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
