/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  VirtualMachine,
  VirtualMachinesListByLabOptionalParams,
  VirtualMachinesGetOptionalParams,
  VirtualMachinesGetResponse,
  VirtualMachinesStartOptionalParams,
  VirtualMachinesStopOptionalParams,
  VirtualMachinesReimageOptionalParams,
  VirtualMachinesRedeployOptionalParams,
  ResetPasswordBody,
  VirtualMachinesResetPasswordOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualMachines. */
export interface VirtualMachines {
  /**
   * Returns a list of all virtual machines for a lab.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param options The options parameters.
   */
  listByLab(
    resourceGroupName: string,
    labName: string,
    options?: VirtualMachinesListByLabOptionalParams
  ): PagedAsyncIterableIterator<VirtualMachine>;
  /**
   * Returns the properties for a lab virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesGetOptionalParams
  ): Promise<VirtualMachinesGetResponse>;
  /**
   * Action to start a lab virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStartOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Action to start a lab virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStartOptionalParams
  ): Promise<void>;
  /**
   * Action to stop a lab virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  beginStop(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStopOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Action to stop a lab virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  beginStopAndWait(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStopOptionalParams
  ): Promise<void>;
  /**
   * Re-image a lab virtual machine. The virtual machine will be deleted and recreated using the latest
   * published snapshot of the reference environment of the lab.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  beginReimage(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesReimageOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Re-image a lab virtual machine. The virtual machine will be deleted and recreated using the latest
   * published snapshot of the reference environment of the lab.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  beginReimageAndWait(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesReimageOptionalParams
  ): Promise<void>;
  /**
   * Action to redeploy a lab virtual machine to a different compute node. For troubleshooting
   * connectivity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  beginRedeploy(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesRedeployOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Action to redeploy a lab virtual machine to a different compute node. For troubleshooting
   * connectivity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param options The options parameters.
   */
  beginRedeployAndWait(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    options?: VirtualMachinesRedeployOptionalParams
  ): Promise<void>;
  /**
   * Resets a lab virtual machine password.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param body The request body.
   * @param options The options parameters.
   */
  beginResetPassword(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    body: ResetPasswordBody,
    options?: VirtualMachinesResetPasswordOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Resets a lab virtual machine password.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab plan. Used in
   *                resource URIs.
   * @param virtualMachineName The ID of the virtual machine that uniquely identifies it within the
   *                           containing lab. Used in resource URIs.
   * @param body The request body.
   * @param options The options parameters.
   */
  beginResetPasswordAndWait(
    resourceGroupName: string,
    labName: string,
    virtualMachineName: string,
    body: ResetPasswordBody,
    options?: VirtualMachinesResetPasswordOptionalParams
  ): Promise<void>;
}
