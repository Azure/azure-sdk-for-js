/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  Image as ImageMapper,
  ImageUpdate as ImageUpdateMapper,
  LabPlan as LabPlanMapper,
  LabPlanUpdate as LabPlanUpdateMapper,
  SaveImageBody as SaveImageBodyMapper,
  Lab as LabMapper,
  LabUpdate as LabUpdateMapper,
  Schedule as ScheduleMapper,
  ScheduleUpdate as ScheduleUpdateMapper,
  User as UserMapper,
  UserUpdate as UserUpdateMapper,
  InviteBody as InviteBodyMapper,
  ResetPasswordBody as ResetPasswordBodyMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-08-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const labPlanName: OperationURLParameter = {
  parameterPath: "labPlanName",
  mapper: {
    constraints: {
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "labPlanName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const imageName: OperationURLParameter = {
  parameterPath: "imageName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\\\._\\\\(\\\\)]+$"),
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "imageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const body: OperationParameter = {
  parameterPath: "body",
  mapper: ImageMapper
};

export const body1: OperationParameter = {
  parameterPath: "body",
  mapper: ImageUpdateMapper
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const body2: OperationParameter = {
  parameterPath: "body",
  mapper: LabPlanMapper
};

export const body3: OperationParameter = {
  parameterPath: "body",
  mapper: LabPlanUpdateMapper
};

export const body4: OperationParameter = {
  parameterPath: "body",
  mapper: SaveImageBodyMapper
};

export const labName: OperationURLParameter = {
  parameterPath: "labName",
  mapper: {
    constraints: {
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "labName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body5: OperationParameter = {
  parameterPath: "body",
  mapper: LabMapper
};

export const body6: OperationParameter = {
  parameterPath: "body",
  mapper: LabUpdateMapper
};

export const operationResultId: OperationURLParameter = {
  parameterPath: "operationResultId",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\\\._\\\\(\\\\)]+$"),
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "operationResultId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const scheduleName: OperationURLParameter = {
  parameterPath: "scheduleName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\\\._\\\\(\\\\)]+$"),
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "scheduleName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body7: OperationParameter = {
  parameterPath: "body",
  mapper: ScheduleMapper
};

export const body8: OperationParameter = {
  parameterPath: "body",
  mapper: ScheduleUpdateMapper
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\._]+$"),
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const userName: OperationURLParameter = {
  parameterPath: "userName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\\\._\\\\(\\\\)]+$"),
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "userName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body9: OperationParameter = {
  parameterPath: "body",
  mapper: UserMapper
};

export const body10: OperationParameter = {
  parameterPath: "body",
  mapper: UserUpdateMapper
};

export const body11: OperationParameter = {
  parameterPath: "body",
  mapper: InviteBodyMapper
};

export const virtualMachineName: OperationURLParameter = {
  parameterPath: "virtualMachineName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-\\w\\\\._\\\\(\\\\)]+$"),
      MaxLength: 100,
      MinLength: 1
    },
    serializedName: "virtualMachineName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body12: OperationParameter = {
  parameterPath: "body",
  mapper: ResetPasswordBodyMapper
};
