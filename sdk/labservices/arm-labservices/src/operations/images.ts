/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/imagesMappers";
import * as Parameters from "../models/parameters";
import { LabServicesClientContext } from "../labServicesClientContext";

/** Class representing a Images. */
export class Images {
  private readonly client: LabServicesClientContext;

  /**
   * Create a Images.
   * @param {LabServicesClientContext} client Reference to the service client.
   */
  constructor(client: LabServicesClientContext) {
    this.client = client;
  }

  /**
   * Gets all images from galleries attached to a lab plan.
   * @summary Gets all images.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param [options] The optional parameters
   * @returns Promise<Models.ImagesListByLabPlanResponse>
   */
  listByLabPlan(resourceGroupName: string, labPlanName: string, options?: Models.ImagesListByLabPlanOptionalParams): Promise<Models.ImagesListByLabPlanResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param callback The callback
   */
  listByLabPlan(resourceGroupName: string, labPlanName: string, callback: msRest.ServiceCallback<Models.PagedImages>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByLabPlan(resourceGroupName: string, labPlanName: string, options: Models.ImagesListByLabPlanOptionalParams, callback: msRest.ServiceCallback<Models.PagedImages>): void;
  listByLabPlan(resourceGroupName: string, labPlanName: string, options?: Models.ImagesListByLabPlanOptionalParams | msRest.ServiceCallback<Models.PagedImages>, callback?: msRest.ServiceCallback<Models.PagedImages>): Promise<Models.ImagesListByLabPlanResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        labPlanName,
        options
      },
      listByLabPlanOperationSpec,
      callback) as Promise<Models.ImagesListByLabPlanResponse>;
  }

  /**
   * Gets an image resource.
   * @summary Gets an image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ImagesGetResponse>
   */
  get(resourceGroupName: string, labPlanName: string, imageName: string, options?: msRest.RequestOptionsBase): Promise<Models.ImagesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param callback The callback
   */
  get(resourceGroupName: string, labPlanName: string, imageName: string, callback: msRest.ServiceCallback<Models.Image>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, labPlanName: string, imageName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Image>): void;
  get(resourceGroupName: string, labPlanName: string, imageName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Image>, callback?: msRest.ServiceCallback<Models.Image>): Promise<Models.ImagesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        labPlanName,
        imageName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ImagesGetResponse>;
  }

  /**
   * Updates an image resource via PUT. Creating new resources via PUT will not function.
   * @summary Updates an image via PUT.
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ImagesCreateOrUpdateResponse>
   */
  createOrUpdate(body: Models.Image, resourceGroupName: string, labPlanName: string, imageName: string, options?: msRest.RequestOptionsBase): Promise<Models.ImagesCreateOrUpdateResponse>;
  /**
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param callback The callback
   */
  createOrUpdate(body: Models.Image, resourceGroupName: string, labPlanName: string, imageName: string, callback: msRest.ServiceCallback<Models.Image>): void;
  /**
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(body: Models.Image, resourceGroupName: string, labPlanName: string, imageName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Image>): void;
  createOrUpdate(body: Models.Image, resourceGroupName: string, labPlanName: string, imageName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Image>, callback?: msRest.ServiceCallback<Models.Image>): Promise<Models.ImagesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        body,
        resourceGroupName,
        labPlanName,
        imageName,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.ImagesCreateOrUpdateResponse>;
  }

  /**
   * Updates an image resource.
   * @summary Updates an image.
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ImagesUpdateResponse>
   */
  update(body: Models.ImageUpdate, resourceGroupName: string, labPlanName: string, imageName: string, options?: msRest.RequestOptionsBase): Promise<Models.ImagesUpdateResponse>;
  /**
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param callback The callback
   */
  update(body: Models.ImageUpdate, resourceGroupName: string, labPlanName: string, imageName: string, callback: msRest.ServiceCallback<Models.Image>): void;
  /**
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labPlanName The name of the lab plan that uniquely identifies it within containing
   * resource group. Used in resource URIs and in UI.
   * @param imageName The image name.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(body: Models.ImageUpdate, resourceGroupName: string, labPlanName: string, imageName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Image>): void;
  update(body: Models.ImageUpdate, resourceGroupName: string, labPlanName: string, imageName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Image>, callback?: msRest.ServiceCallback<Models.Image>): Promise<Models.ImagesUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        body,
        resourceGroupName,
        labPlanName,
        imageName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.ImagesUpdateResponse>;
  }

  /**
   * Gets all images from galleries attached to a lab plan.
   * @summary Gets all images.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ImagesListByLabPlanNextResponse>
   */
  listByLabPlanNext(nextPageLink: string, options?: Models.ImagesListByLabPlanNextOptionalParams): Promise<Models.ImagesListByLabPlanNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByLabPlanNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PagedImages>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByLabPlanNext(nextPageLink: string, options: Models.ImagesListByLabPlanNextOptionalParams, callback: msRest.ServiceCallback<Models.PagedImages>): void;
  listByLabPlanNext(nextPageLink: string, options?: Models.ImagesListByLabPlanNextOptionalParams | msRest.ServiceCallback<Models.PagedImages>, callback?: msRest.ServiceCallback<Models.PagedImages>): Promise<Models.ImagesListByLabPlanNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByLabPlanNextOperationSpec,
      callback) as Promise<Models.ImagesListByLabPlanNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByLabPlanOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}/images",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labPlanName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PagedImages
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}/images/{imageName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labPlanName,
    Parameters.imageName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Image
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}/images/{imageName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labPlanName,
    Parameters.imageName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.Image,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Image
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labPlans/{labPlanName}/images/{imageName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labPlanName,
    Parameters.imageName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.ImageUpdate,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Image
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByLabPlanNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PagedImages
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
