/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/schedulesMappers";
import * as Parameters from "../models/parameters";
import { LabServicesClientContext } from "../labServicesClientContext";

/** Class representing a Schedules. */
export class Schedules {
  private readonly client: LabServicesClientContext;

  /**
   * Create a Schedules.
   * @param {LabServicesClientContext} client Reference to the service client.
   */
  constructor(client: LabServicesClientContext) {
    this.client = client;
  }

  /**
   * Returns a list of all schedules for a lab.
   * @summary Get all schedules for a lab.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param [options] The optional parameters
   * @returns Promise<Models.SchedulesListByLabResponse>
   */
  listByLab(resourceGroupName: string, labName: string, options?: Models.SchedulesListByLabOptionalParams): Promise<Models.SchedulesListByLabResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param callback The callback
   */
  listByLab(resourceGroupName: string, labName: string, callback: msRest.ServiceCallback<Models.PagedSchedules>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByLab(resourceGroupName: string, labName: string, options: Models.SchedulesListByLabOptionalParams, callback: msRest.ServiceCallback<Models.PagedSchedules>): void;
  listByLab(resourceGroupName: string, labName: string, options?: Models.SchedulesListByLabOptionalParams | msRest.ServiceCallback<Models.PagedSchedules>, callback?: msRest.ServiceCallback<Models.PagedSchedules>): Promise<Models.SchedulesListByLabResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        labName,
        options
      },
      listByLabOperationSpec,
      callback) as Promise<Models.SchedulesListByLabResponse>;
  }

  /**
   * Returns the properties of a lab Schedule.
   * @summary Get a lab Schedule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param [options] The optional parameters
   * @returns Promise<Models.SchedulesGetResponse>
   */
  get(resourceGroupName: string, labName: string, scheduleName: string, options?: msRest.RequestOptionsBase): Promise<Models.SchedulesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param callback The callback
   */
  get(resourceGroupName: string, labName: string, scheduleName: string, callback: msRest.ServiceCallback<Models.Schedule>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, labName: string, scheduleName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Schedule>): void;
  get(resourceGroupName: string, labName: string, scheduleName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Schedule>, callback?: msRest.ServiceCallback<Models.Schedule>): Promise<Models.SchedulesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        labName,
        scheduleName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.SchedulesGetResponse>;
  }

  /**
   * Operation to create or update a lab schedule.
   * @summary Create or update a lab schedule.
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param [options] The optional parameters
   * @returns Promise<Models.SchedulesCreateOrUpdateResponse>
   */
  createOrUpdate(body: Models.Schedule, resourceGroupName: string, labName: string, scheduleName: string, options?: msRest.RequestOptionsBase): Promise<Models.SchedulesCreateOrUpdateResponse>;
  /**
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param callback The callback
   */
  createOrUpdate(body: Models.Schedule, resourceGroupName: string, labName: string, scheduleName: string, callback: msRest.ServiceCallback<Models.Schedule>): void;
  /**
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(body: Models.Schedule, resourceGroupName: string, labName: string, scheduleName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Schedule>): void;
  createOrUpdate(body: Models.Schedule, resourceGroupName: string, labName: string, scheduleName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Schedule>, callback?: msRest.ServiceCallback<Models.Schedule>): Promise<Models.SchedulesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        body,
        resourceGroupName,
        labName,
        scheduleName,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.SchedulesCreateOrUpdateResponse>;
  }

  /**
   * Operation to update a lab schedule.
   * @summary Update a lab schedule.
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param [options] The optional parameters
   * @returns Promise<Models.SchedulesUpdateResponse>
   */
  update(body: Models.ScheduleUpdate, resourceGroupName: string, labName: string, scheduleName: string, options?: msRest.RequestOptionsBase): Promise<Models.SchedulesUpdateResponse>;
  /**
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param callback The callback
   */
  update(body: Models.ScheduleUpdate, resourceGroupName: string, labName: string, scheduleName: string, callback: msRest.ServiceCallback<Models.Schedule>): void;
  /**
   * @param body The request body.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(body: Models.ScheduleUpdate, resourceGroupName: string, labName: string, scheduleName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Schedule>): void;
  update(body: Models.ScheduleUpdate, resourceGroupName: string, labName: string, scheduleName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Schedule>, callback?: msRest.ServiceCallback<Models.Schedule>): Promise<Models.SchedulesUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        body,
        resourceGroupName,
        labName,
        scheduleName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.SchedulesUpdateResponse>;
  }

  /**
   * Operation to delete a schedule resource.
   * @summary Deletes a schedule resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, labName: string, scheduleName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,labName,scheduleName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Operation to delete a schedule resource.
   * @summary Deletes a schedule resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param labName The name of the lab that uniquely identifies it within containing lab account.
   * Used in resource URIs.
   * @param scheduleName The name of the schedule that uniquely identifies it within containing lab.
   * Used in resource URIs.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, labName: string, scheduleName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        labName,
        scheduleName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Returns a list of all schedules for a lab.
   * @summary Get all schedules for a lab.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SchedulesListByLabNextResponse>
   */
  listByLabNext(nextPageLink: string, options?: Models.SchedulesListByLabNextOptionalParams): Promise<Models.SchedulesListByLabNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByLabNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PagedSchedules>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByLabNext(nextPageLink: string, options: Models.SchedulesListByLabNextOptionalParams, callback: msRest.ServiceCallback<Models.PagedSchedules>): void;
  listByLabNext(nextPageLink: string, options?: Models.SchedulesListByLabNextOptionalParams | msRest.ServiceCallback<Models.PagedSchedules>, callback?: msRest.ServiceCallback<Models.PagedSchedules>): Promise<Models.SchedulesListByLabNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByLabNextOperationSpec,
      callback) as Promise<Models.SchedulesListByLabNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByLabOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/schedules",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PagedSchedules
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/schedules/{scheduleName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labName,
    Parameters.scheduleName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Schedule
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/schedules/{scheduleName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labName,
    Parameters.scheduleName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.Schedule,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Schedule
    },
    201: {
      bodyMapper: Mappers.Schedule
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/schedules/{scheduleName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labName,
    Parameters.scheduleName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.ScheduleUpdate,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Schedule
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LabServices/labs/{labName}/schedules/{scheduleName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.labName,
    Parameters.scheduleName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByLabNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PagedSchedules
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
