/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { AzureDevOpsConnectorStatsOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MicrosoftSecurityDevOps } from "../microsoftSecurityDevOps";
import {
  AzureDevOpsConnectorStatsGetOptionalParams,
  AzureDevOpsConnectorStatsGetResponse
} from "../models";

/** Class containing AzureDevOpsConnectorStatsOperations operations. */
export class AzureDevOpsConnectorStatsOperationsImpl
  implements AzureDevOpsConnectorStatsOperations {
  private readonly client: MicrosoftSecurityDevOps;

  /**
   * Initialize a new instance of the class AzureDevOpsConnectorStatsOperations class.
   * @param client Reference to the service client
   */
  constructor(client: MicrosoftSecurityDevOps) {
    this.client = client;
  }

  /**
   * Returns the summary of the AzureDevOps Connector Stats.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureDevOpsConnectorName Name of the AzureDevOps Connector.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    azureDevOpsConnectorName: string,
    options?: AzureDevOpsConnectorStatsGetOptionalParams
  ): Promise<AzureDevOpsConnectorStatsGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, azureDevOpsConnectorName, options },
      getOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}/stats",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AzureDevOpsConnectorStatsListResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.azureDevOpsConnectorName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
