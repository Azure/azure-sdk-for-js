/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  GitHubRepo,
  GitHubRepoListByConnectorOptionalParams,
  GitHubRepoListOptionalParams,
  GitHubRepoGetOptionalParams,
  GitHubRepoGetResponse,
  GitHubRepoCreateOrUpdateOptionalParams,
  GitHubRepoCreateOrUpdateResponse,
  GitHubRepoUpdateOptionalParams,
  GitHubRepoUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GitHubRepoOperations. */
export interface GitHubRepoOperations {
  /**
   * Returns a list of monitored GitHub repositories.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param gitHubConnectorName Name of the GitHub Connector.
   * @param options The options parameters.
   */
  listByConnector(
    resourceGroupName: string,
    gitHubConnectorName: string,
    options?: GitHubRepoListByConnectorOptionalParams
  ): PagedAsyncIterableIterator<GitHubRepo>;
  /**
   * Returns a list of monitored GitHub repositories.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param gitHubConnectorName Name of the GitHub Connector.
   * @param gitHubOwnerName Name of the GitHub Owner.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    gitHubConnectorName: string,
    gitHubOwnerName: string,
    options?: GitHubRepoListOptionalParams
  ): PagedAsyncIterableIterator<GitHubRepo>;
  /**
   * Returns a monitored GitHub repository.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param gitHubConnectorName Name of the GitHub Connector.
   * @param gitHubOwnerName Name of the GitHub Owner.
   * @param gitHubRepoName Name of the GitHub Repo.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    gitHubConnectorName: string,
    gitHubOwnerName: string,
    gitHubRepoName: string,
    options?: GitHubRepoGetOptionalParams
  ): Promise<GitHubRepoGetResponse>;
  /**
   * Create or update a monitored GitHub repository.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param gitHubConnectorName Name of the GitHub Connector.
   * @param gitHubOwnerName Name of the GitHub Owner.
   * @param gitHubRepoName Name of the GitHub Repo.
   * @param gitHubRepo Github repo.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    gitHubConnectorName: string,
    gitHubOwnerName: string,
    gitHubRepoName: string,
    gitHubRepo: GitHubRepo,
    options?: GitHubRepoCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<GitHubRepoCreateOrUpdateResponse>,
      GitHubRepoCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a monitored GitHub repository.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param gitHubConnectorName Name of the GitHub Connector.
   * @param gitHubOwnerName Name of the GitHub Owner.
   * @param gitHubRepoName Name of the GitHub Repo.
   * @param gitHubRepo Github repo.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    gitHubConnectorName: string,
    gitHubOwnerName: string,
    gitHubRepoName: string,
    gitHubRepo: GitHubRepo,
    options?: GitHubRepoCreateOrUpdateOptionalParams
  ): Promise<GitHubRepoCreateOrUpdateResponse>;
  /**
   * Patch a monitored GitHub repository.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param gitHubConnectorName Name of the GitHub Connector.
   * @param gitHubOwnerName Name of the GitHub Owner.
   * @param gitHubRepoName Name of the GitHub Repo.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    gitHubConnectorName: string,
    gitHubOwnerName: string,
    gitHubRepoName: string,
    options?: GitHubRepoUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<GitHubRepoUpdateResponse>,
      GitHubRepoUpdateResponse
    >
  >;
  /**
   * Patch a monitored GitHub repository.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param gitHubConnectorName Name of the GitHub Connector.
   * @param gitHubOwnerName Name of the GitHub Owner.
   * @param gitHubRepoName Name of the GitHub Repo.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    gitHubConnectorName: string,
    gitHubOwnerName: string,
    gitHubRepoName: string,
    options?: GitHubRepoUpdateOptionalParams
  ): Promise<GitHubRepoUpdateResponse>;
}
