/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const AzureDevOpsConnectorListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsConnectorListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureDevOpsConnector"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDevOpsConnectorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsConnectorProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "Composite",
          className: "AuthorizationInfo"
        }
      },
      orgs: {
        serializedName: "orgs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureDevOpsOrgMetadata"
            }
          }
        }
      }
    }
  }
};

export const AuthorizationInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AuthorizationInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDevOpsOrgMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsOrgMetadata",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      autoDiscovery: {
        serializedName: "autoDiscovery",
        type: {
          name: "String"
        }
      },
      projects: {
        serializedName: "projects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureDevOpsProjectMetadata"
            }
          }
        }
      }
    }
  }
};

export const AzureDevOpsProjectMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsProjectMetadata",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      autoDiscovery: {
        serializedName: "autoDiscovery",
        type: {
          name: "String"
        }
      },
      repos: {
        serializedName: "repos",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const AzureDevOpsRepoListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsRepoListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureDevOpsRepo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDevOpsRepoProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsRepoProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      repoId: {
        serializedName: "repoId",
        type: {
          name: "String"
        }
      },
      repoUrl: {
        serializedName: "repoUrl",
        type: {
          name: "String"
        }
      },
      orgName: {
        serializedName: "orgName",
        type: {
          name: "String"
        }
      },
      projectName: {
        serializedName: "projectName",
        type: {
          name: "String"
        }
      },
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String"
        }
      },
      actionableRemediation: {
        serializedName: "actionableRemediation",
        type: {
          name: "Composite",
          className: "ActionableRemediation"
        }
      }
    }
  }
};

export const ActionableRemediation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionableRemediation",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      severityLevels: {
        serializedName: "severityLevels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      categories: {
        serializedName: "categories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      branchConfiguration: {
        serializedName: "branchConfiguration",
        type: {
          name: "Composite",
          className: "TargetBranchConfiguration"
        }
      }
    }
  }
};

export const TargetBranchConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetBranchConfiguration",
    modelProperties: {
      names: {
        serializedName: "names",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureDevOpsConnectorStatsListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsConnectorStatsListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureDevOpsConnectorStats"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDevOpsConnectorStatsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsConnectorStatsProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      orgsCount: {
        serializedName: "orgsCount",
        type: {
          name: "Number"
        }
      },
      projectsCount: {
        serializedName: "projectsCount",
        type: {
          name: "Number"
        }
      },
      reposCount: {
        serializedName: "reposCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AzureDevOpsOrgListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsOrgListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureDevOpsOrg"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDevOpsOrgProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsOrgProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      autoDiscovery: {
        serializedName: "autoDiscovery",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDevOpsProjectListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsProjectListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureDevOpsProject"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDevOpsProjectProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsProjectProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      projectId: {
        serializedName: "projectId",
        type: {
          name: "String"
        }
      },
      orgName: {
        serializedName: "orgName",
        type: {
          name: "String"
        }
      },
      autoDiscovery: {
        serializedName: "autoDiscovery",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubConnectorListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubConnectorListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GitHubConnector"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubConnectorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubConnectorProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubRepoListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubRepoListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GitHubRepo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubRepoProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubRepoProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "accountId",
        type: {
          name: "Number"
        }
      },
      repoUrl: {
        serializedName: "repoUrl",
        type: {
          name: "String"
        }
      },
      ownerName: {
        serializedName: "ownerName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubConnectorStatsListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubConnectorStatsListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GitHubConnectorStats"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubConnectorStatsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubConnectorStatsProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      ownersCount: {
        serializedName: "ownersCount",
        type: {
          name: "Number"
        }
      },
      reposCount: {
        serializedName: "reposCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GitHubOwnerListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubOwnerListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GitHubOwner"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubOwnerProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubOwnerProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      ownerUrl: {
        serializedName: "ownerUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GitHubReposProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubReposProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "accountId",
        type: {
          name: "Number"
        }
      },
      repoName: {
        serializedName: "repoName",
        type: {
          name: "String"
        }
      },
      repoUrl: {
        serializedName: "repoUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AzureDevOpsConnector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsConnector",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AzureDevOpsConnectorProperties"
        }
      }
    }
  }
};

export const GitHubConnector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubConnector",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GitHubConnectorProperties"
        }
      }
    }
  }
};

export const AzureDevOpsRepo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsRepo",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AzureDevOpsRepoProperties"
        }
      }
    }
  }
};

export const AzureDevOpsConnectorStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsConnectorStats",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AzureDevOpsConnectorStatsProperties"
        }
      }
    }
  }
};

export const AzureDevOpsOrg: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsOrg",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AzureDevOpsOrgProperties"
        }
      }
    }
  }
};

export const AzureDevOpsProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsProject",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AzureDevOpsProjectProperties"
        }
      }
    }
  }
};

export const GitHubRepo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubRepo",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GitHubRepoProperties"
        }
      }
    }
  }
};

export const GitHubConnectorStats: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubConnectorStats",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GitHubConnectorStatsProperties"
        }
      }
    }
  }
};

export const GitHubOwner: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubOwner",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GitHubOwnerProperties"
        }
      }
    }
  }
};
