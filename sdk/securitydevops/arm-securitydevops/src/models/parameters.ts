/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  AzureDevOpsConnector as AzureDevOpsConnectorMapper,
  AzureDevOpsRepo as AzureDevOpsRepoMapper,
  AzureDevOpsOrg as AzureDevOpsOrgMapper,
  AzureDevOpsProject as AzureDevOpsProjectMapper,
  GitHubConnector as GitHubConnectorMapper,
  GitHubRepo as GitHubRepoMapper,
  GitHubOwner as GitHubOwnerMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-09-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const azureDevOpsConnectorName: OperationURLParameter = {
  parameterPath: "azureDevOpsConnectorName",
  mapper: {
    serializedName: "azureDevOpsConnectorName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const azureDevOpsConnector: OperationParameter = {
  parameterPath: "azureDevOpsConnector",
  mapper: AzureDevOpsConnectorMapper
};

export const azureDevOpsConnector1: OperationParameter = {
  parameterPath: ["options", "azureDevOpsConnector"],
  mapper: AzureDevOpsConnectorMapper
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const azureDevOpsOrgName: OperationURLParameter = {
  parameterPath: "azureDevOpsOrgName",
  mapper: {
    serializedName: "azureDevOpsOrgName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const azureDevOpsProjectName: OperationURLParameter = {
  parameterPath: "azureDevOpsProjectName",
  mapper: {
    serializedName: "azureDevOpsProjectName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const azureDevOpsRepoName: OperationURLParameter = {
  parameterPath: "azureDevOpsRepoName",
  mapper: {
    serializedName: "azureDevOpsRepoName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const azureDevOpsRepo: OperationParameter = {
  parameterPath: "azureDevOpsRepo",
  mapper: AzureDevOpsRepoMapper
};

export const azureDevOpsRepo1: OperationParameter = {
  parameterPath: ["options", "azureDevOpsRepo"],
  mapper: AzureDevOpsRepoMapper
};

export const azureDevOpsOrg: OperationParameter = {
  parameterPath: "azureDevOpsOrg",
  mapper: AzureDevOpsOrgMapper
};

export const azureDevOpsOrg1: OperationParameter = {
  parameterPath: ["options", "azureDevOpsOrg"],
  mapper: AzureDevOpsOrgMapper
};

export const azureDevOpsProject: OperationParameter = {
  parameterPath: "azureDevOpsProject",
  mapper: AzureDevOpsProjectMapper
};

export const azureDevOpsProject1: OperationParameter = {
  parameterPath: ["options", "azureDevOpsProject"],
  mapper: AzureDevOpsProjectMapper
};

export const gitHubConnectorName: OperationURLParameter = {
  parameterPath: "gitHubConnectorName",
  mapper: {
    serializedName: "gitHubConnectorName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const gitHubConnector: OperationParameter = {
  parameterPath: "gitHubConnector",
  mapper: GitHubConnectorMapper
};

export const gitHubConnector1: OperationParameter = {
  parameterPath: ["options", "gitHubConnector"],
  mapper: GitHubConnectorMapper
};

export const gitHubOwnerName: OperationURLParameter = {
  parameterPath: "gitHubOwnerName",
  mapper: {
    serializedName: "gitHubOwnerName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const gitHubRepoName: OperationURLParameter = {
  parameterPath: "gitHubRepoName",
  mapper: {
    serializedName: "gitHubRepoName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const gitHubRepo: OperationParameter = {
  parameterPath: "gitHubRepo",
  mapper: GitHubRepoMapper
};

export const gitHubRepo1: OperationParameter = {
  parameterPath: ["options", "gitHubRepo"],
  mapper: GitHubRepoMapper
};

export const gitHubOwner: OperationParameter = {
  parameterPath: "gitHubOwner",
  mapper: GitHubOwnerMapper
};

export const gitHubOwner1: OperationParameter = {
  parameterPath: ["options", "gitHubOwner"],
  mapper: GitHubOwnerMapper
};
