/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ServerEndpoint,
  ServerEndpointsListBySyncGroupOptionalParams,
  ServerEndpointCreateParameters,
  ServerEndpointsCreateOptionalParams,
  ServerEndpointsCreateResponse,
  ServerEndpointsUpdateOptionalParams,
  ServerEndpointsUpdateResponse,
  ServerEndpointsGetOptionalParams,
  ServerEndpointsGetResponse,
  ServerEndpointsDeleteOptionalParams,
  ServerEndpointsDeleteResponse,
  RecallActionParameters,
  ServerEndpointsRecallActionOptionalParams,
  ServerEndpointsRecallActionResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ServerEndpoints. */
export interface ServerEndpoints {
  /**
   * Get a ServerEndpoint list.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param options The options parameters.
   */
  listBySyncGroup(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    options?: ServerEndpointsListBySyncGroupOptionalParams
  ): PagedAsyncIterableIterator<ServerEndpoint>;
  /**
   * Create a new ServerEndpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param parameters Body of Server Endpoint object.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    parameters: ServerEndpointCreateParameters,
    options?: ServerEndpointsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ServerEndpointsCreateResponse>,
      ServerEndpointsCreateResponse
    >
  >;
  /**
   * Create a new ServerEndpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param parameters Body of Server Endpoint object.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    parameters: ServerEndpointCreateParameters,
    options?: ServerEndpointsCreateOptionalParams
  ): Promise<ServerEndpointsCreateResponse>;
  /**
   * Patch a given ServerEndpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    options?: ServerEndpointsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ServerEndpointsUpdateResponse>,
      ServerEndpointsUpdateResponse
    >
  >;
  /**
   * Patch a given ServerEndpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    options?: ServerEndpointsUpdateOptionalParams
  ): Promise<ServerEndpointsUpdateResponse>;
  /**
   * Get a ServerEndpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    options?: ServerEndpointsGetOptionalParams
  ): Promise<ServerEndpointsGetResponse>;
  /**
   * Delete a given ServerEndpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    options?: ServerEndpointsDeleteOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ServerEndpointsDeleteResponse>,
      ServerEndpointsDeleteResponse
    >
  >;
  /**
   * Delete a given ServerEndpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    options?: ServerEndpointsDeleteOptionalParams
  ): Promise<ServerEndpointsDeleteResponse>;
  /**
   * Recall a server endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param parameters Body of Recall Action object.
   * @param options The options parameters.
   */
  beginRecallAction(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    parameters: RecallActionParameters,
    options?: ServerEndpointsRecallActionOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ServerEndpointsRecallActionResponse>,
      ServerEndpointsRecallActionResponse
    >
  >;
  /**
   * Recall a server endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param syncGroupName Name of Sync Group resource.
   * @param serverEndpointName Name of Server Endpoint object.
   * @param parameters Body of Recall Action object.
   * @param options The options parameters.
   */
  beginRecallActionAndWait(
    resourceGroupName: string,
    storageSyncServiceName: string,
    syncGroupName: string,
    serverEndpointName: string,
    parameters: RecallActionParameters,
    options?: ServerEndpointsRecallActionOptionalParams
  ): Promise<ServerEndpointsRecallActionResponse>;
}
