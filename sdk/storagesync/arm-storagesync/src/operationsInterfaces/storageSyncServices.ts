/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  StorageSyncService,
  StorageSyncServicesListByResourceGroupOptionalParams,
  StorageSyncServicesListBySubscriptionOptionalParams,
  CheckNameAvailabilityParameters,
  StorageSyncServicesCheckNameAvailabilityOptionalParams,
  StorageSyncServicesCheckNameAvailabilityResponse,
  StorageSyncServiceCreateParameters,
  StorageSyncServicesCreateOptionalParams,
  StorageSyncServicesCreateResponse,
  StorageSyncServicesGetOptionalParams,
  StorageSyncServicesGetResponse,
  StorageSyncServicesUpdateOptionalParams,
  StorageSyncServicesUpdateResponse,
  StorageSyncServicesDeleteOptionalParams,
  StorageSyncServicesDeleteResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StorageSyncServices. */
export interface StorageSyncServices {
  /**
   * Get a StorageSyncService list by Resource group name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: StorageSyncServicesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<StorageSyncService>;
  /**
   * Get a StorageSyncService list by subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: StorageSyncServicesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<StorageSyncService>;
  /**
   * Check the give namespace name availability.
   * @param locationName The desired region for the name check.
   * @param parameters Parameters to check availability of the given namespace name
   * @param options The options parameters.
   */
  checkNameAvailability(
    locationName: string,
    parameters: CheckNameAvailabilityParameters,
    options?: StorageSyncServicesCheckNameAvailabilityOptionalParams
  ): Promise<StorageSyncServicesCheckNameAvailabilityResponse>;
  /**
   * Create a new StorageSyncService.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param parameters Storage Sync Service resource name.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    storageSyncServiceName: string,
    parameters: StorageSyncServiceCreateParameters,
    options?: StorageSyncServicesCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageSyncServicesCreateResponse>,
      StorageSyncServicesCreateResponse
    >
  >;
  /**
   * Create a new StorageSyncService.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param parameters Storage Sync Service resource name.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    storageSyncServiceName: string,
    parameters: StorageSyncServiceCreateParameters,
    options?: StorageSyncServicesCreateOptionalParams
  ): Promise<StorageSyncServicesCreateResponse>;
  /**
   * Get a given StorageSyncService.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    storageSyncServiceName: string,
    options?: StorageSyncServicesGetOptionalParams
  ): Promise<StorageSyncServicesGetResponse>;
  /**
   * Patch a given StorageSyncService.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    storageSyncServiceName: string,
    options?: StorageSyncServicesUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageSyncServicesUpdateResponse>,
      StorageSyncServicesUpdateResponse
    >
  >;
  /**
   * Patch a given StorageSyncService.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    storageSyncServiceName: string,
    options?: StorageSyncServicesUpdateOptionalParams
  ): Promise<StorageSyncServicesUpdateResponse>;
  /**
   * Delete a given StorageSyncService.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    storageSyncServiceName: string,
    options?: StorageSyncServicesDeleteOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<StorageSyncServicesDeleteResponse>,
      StorageSyncServicesDeleteResponse
    >
  >;
  /**
   * Delete a given StorageSyncService.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    storageSyncServiceName: string,
    options?: StorageSyncServicesDeleteOptionalParams
  ): Promise<StorageSyncServicesDeleteResponse>;
}
