/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Error Details object.
 */
export interface StorageSyncErrorDetails {
  /**
   * Error code of the given entry.
   */
  code?: string;
  /**
   * Error message of the given entry.
   */
  message?: string;
  /**
   * Target of the given entry.
   */
  target?: string;
}

/**
 * Error type
 */
export interface StorageSyncApiError {
  /**
   * Error code of the given entry.
   */
  code?: string;
  /**
   * Error message of the given entry.
   */
  message?: string;
  /**
   * Target of the given error entry.
   */
  target?: string;
  /**
   * Error details of the given entry.
   */
  details?: StorageSyncErrorDetails;
}

/**
 * Error type
 */
export interface StorageSyncError {
  /**
   * Error details of the given entry.
   */
  error?: StorageSyncApiError;
  /**
   * Error details of the given entry.
   */
  innererror?: StorageSyncApiError;
}

/**
 * Subscription State object.
 */
export interface SubscriptionState {
  /**
   * State of Azure Subscription. Possible values include: 'Registered', 'Unregistered', 'Warned',
   * 'Suspended', 'Deleted'
   */
  state?: Reason;
  /**
   * Is Transitioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly istransitioning?: boolean;
  /**
   * Subscription state properties.
   */
  properties?: any;
}

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * A collection of information about the state of the connection between service consumer and
 * provider.
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the
   * service. Possible values include: 'Pending', 'Approved', 'Rejected'
   */
  status?: PrivateEndpointServiceConnectionStatus;
  /**
   * The reason for approval/rejection of the connection.
   */
  description?: string;
  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   */
  actionRequired?: string;
}

/**
 * An interface representing Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource Id for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or
   * Microsoft.Storage/storageAccounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The Private Endpoint Connection resource.
 */
export interface PrivateEndpointConnection extends Resource {
  /**
   * The resource of private end point.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * A collection of information about the state of the connection between service consumer and
   * provider.
   */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource. Possible values include:
   * 'Succeeded', 'Creating', 'Deleting', 'Failed'
   */
  provisioningState?: PrivateEndpointConnectionProvisioningState;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * Storage Sync Service object.
 */
export interface StorageSyncService extends TrackedResource {
  /**
   * Incoming Traffic Policy. Possible values include: 'AllowAllTraffic',
   * 'AllowVirtualNetworksOnly'
   */
  incomingTrafficPolicy?: IncomingTrafficPolicy;
  /**
   * Storage Sync service status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageSyncServiceStatus?: number;
  /**
   * Storage Sync service Uid
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageSyncServiceUid?: string;
  /**
   * StorageSyncService Provisioning State
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * StorageSyncService lastWorkflowId
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastOperationName?: string;
  /**
   * List of private endpoint connection associated with the specified storage sync service
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than
 * required location and tags
 */
export interface ProxyResource extends Resource {
}

/**
 * Sync Group object.
 */
export interface SyncGroup extends ProxyResource {
  /**
   * Unique Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueId?: string;
  /**
   * Sync group status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncGroupStatus?: string;
}

/**
 * Cloud Endpoint object.
 */
export interface CloudEndpoint extends ProxyResource {
  /**
   * Storage Account Resource Id
   */
  storageAccountResourceId?: string;
  /**
   * Azure file share name
   */
  azureFileShareName?: string;
  /**
   * Storage Account Tenant Id
   */
  storageAccountTenantId?: string;
  /**
   * Partnership Id
   */
  partnershipId?: string;
  /**
   * Friendly Name
   */
  friendlyName?: string;
  /**
   * Backup Enabled
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupEnabled?: string;
  /**
   * CloudEndpoint Provisioning State
   */
  provisioningState?: string;
  /**
   * CloudEndpoint lastWorkflowId
   */
  lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   */
  lastOperationName?: string;
}

/**
 * The parameters used when calling trigger change detection action on cloud endpoint.
 */
export interface TriggerChangeDetectionParameters {
  /**
   * Relative path to a directory Azure File share for which change detection is to be performed.
   */
  directoryPath?: string;
  /**
   * Change Detection Mode. Applies to a directory specified in directoryPath parameter. Possible
   * values include: 'Default', 'Recursive'
   */
  changeDetectionMode?: ChangeDetectionMode;
  /**
   * Array of relative paths on the Azure File share to be included in the change detection. Can be
   * files and directories.
   */
  paths?: string[];
}

/**
 * The parameters used when calling recall action on server endpoint.
 */
export interface RecallActionParameters {
  /**
   * Pattern of the files.
   */
  pattern?: string;
  /**
   * Recall path.
   */
  recallPath?: string;
}

/**
 * The parameters used when creating a storage sync service.
 */
export interface StorageSyncServiceCreateParameters {
  /**
   * Required. Gets or sets the location of the resource. This will be one of the supported and
   * registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of
   * a resource cannot be changed once it is created, but if an identical geo region is specified
   * on update, the request will succeed.
   */
  location: string;
  /**
   * Gets or sets a list of key value pairs that describe the resource. These tags can be used for
   * viewing and grouping this resource (across resource groups). A maximum of 15 tags can be
   * provided for a resource. Each tag must have a key with a length no greater than 128 characters
   * and a value with a length no greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Incoming Traffic Policy. Possible values include: 'AllowAllTraffic',
   * 'AllowVirtualNetworksOnly'
   */
  incomingTrafficPolicy?: IncomingTrafficPolicy;
}

/**
 * The parameters used when creating a sync group.
 */
export interface SyncGroupCreateParameters extends ProxyResource {
  /**
   * The parameters used to create the sync group
   */
  properties?: any;
}

/**
 * The parameters used when creating a cloud endpoint.
 */
export interface CloudEndpointCreateParameters extends ProxyResource {
  /**
   * Storage Account Resource Id
   */
  storageAccountResourceId?: string;
  /**
   * Azure file share name
   */
  azureFileShareName?: string;
  /**
   * Storage Account Tenant Id
   */
  storageAccountTenantId?: string;
  /**
   * Friendly Name
   */
  friendlyName?: string;
}

/**
 * The parameters used when creating a server endpoint.
 */
export interface ServerEndpointCreateParameters extends ProxyResource {
  /**
   * Server Local path.
   */
  serverLocalPath?: string;
  /**
   * Cloud Tiering. Possible values include: 'on', 'off'
   */
  cloudTiering?: FeatureStatus;
  /**
   * Level of free space to be maintained by Cloud Tiering if it is enabled.
   */
  volumeFreeSpacePercent?: number;
  /**
   * Tier files older than days.
   */
  tierFilesOlderThanDays?: number;
  /**
   * Friendly Name
   */
  friendlyName?: string;
  /**
   * Server Resource Id.
   */
  serverResourceId?: string;
  /**
   * Offline data transfer. Possible values include: 'on', 'off'
   */
  offlineDataTransfer?: FeatureStatus;
  /**
   * Offline data transfer share name
   */
  offlineDataTransferShareName?: string;
  /**
   * Policy for how namespace and files are recalled during FastDr. Possible values include:
   * 'NamespaceOnly', 'NamespaceThenModifiedFiles', 'AvoidTieredFiles'
   */
  initialDownloadPolicy?: InitialDownloadPolicy;
  /**
   * Policy for enabling follow-the-sun business models: link local cache to cloud behavior to
   * pre-populate before local access. Possible values include: 'DownloadNewAndModifiedFiles',
   * 'UpdateLocallyCachedFiles'
   */
  localCacheMode?: LocalCacheMode;
}

/**
 * Trigger Rollover Request.
 */
export interface TriggerRolloverRequest {
  /**
   * Certificate Data
   */
  serverCertificate?: string;
}

/**
 * The parameters used when creating a registered server.
 */
export interface RegisteredServerCreateParameters extends ProxyResource {
  /**
   * Registered Server Certificate
   */
  serverCertificate?: string;
  /**
   * Registered Server Agent Version
   */
  agentVersion?: string;
  /**
   * Registered Server OS Version
   */
  serverOSVersion?: string;
  /**
   * Registered Server last heart beat
   */
  lastHeartBeat?: string;
  /**
   * Registered Server serverRole
   */
  serverRole?: string;
  /**
   * Registered Server clusterId
   */
  clusterId?: string;
  /**
   * Registered Server clusterName
   */
  clusterName?: string;
  /**
   * Registered Server serverId
   */
  serverId?: string;
  /**
   * Friendly Name
   */
  friendlyName?: string;
}

/**
 * Parameters for updating an Server Endpoint.
 */
export interface ServerEndpointUpdateParameters {
  /**
   * Cloud Tiering. Possible values include: 'on', 'off'
   */
  cloudTiering?: FeatureStatus;
  /**
   * Level of free space to be maintained by Cloud Tiering if it is enabled.
   */
  volumeFreeSpacePercent?: number;
  /**
   * Tier files older than days.
   */
  tierFilesOlderThanDays?: number;
  /**
   * Offline data transfer. Possible values include: 'on', 'off'
   */
  offlineDataTransfer?: FeatureStatus;
  /**
   * Offline data transfer share name
   */
  offlineDataTransferShareName?: string;
  /**
   * Policy for enabling follow-the-sun business models: link local cache to cloud behavior to
   * pre-populate before local access. Possible values include: 'DownloadNewAndModifiedFiles',
   * 'UpdateLocallyCachedFiles'
   */
  localCacheMode?: LocalCacheMode;
}

/**
 * Files not syncing error object
 */
export interface ServerEndpointFilesNotSyncingError {
  /**
   * Error code (HResult)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * Count of persistent files not syncing with the specified error code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly persistentCount?: number;
  /**
   * Count of transient files not syncing with the specified error code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transientCount?: number;
}

/**
 * Sync Session status object.
 */
export interface ServerEndpointSyncSessionStatus {
  /**
   * Last sync result (HResult)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastSyncResult?: number;
  /**
   * Last sync timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastSyncTimestamp?: Date;
  /**
   * Last sync success timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastSyncSuccessTimestamp?: Date;
  /**
   * Last sync per item error count.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastSyncPerItemErrorCount?: number;
  /**
   * Count of persistent files not syncing.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly persistentFilesNotSyncingCount?: number;
  /**
   * Count of transient files not syncing.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transientFilesNotSyncingCount?: number;
  /**
   * Array of per-item errors coming from the last sync session.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly filesNotSyncingErrors?: ServerEndpointFilesNotSyncingError[];
}

/**
 * Sync Session status object.
 */
export interface ServerEndpointSyncActivityStatus {
  /**
   * Timestamp when properties were updated
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timestamp?: Date;
  /**
   * Per item error count
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly perItemErrorCount?: number;
  /**
   * Applied item count.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly appliedItemCount?: number;
  /**
   * Total item count (if available)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalItemCount?: number;
  /**
   * Applied bytes
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly appliedBytes?: number;
  /**
   * Total bytes (if available)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalBytes?: number;
}

/**
 * Server Endpoint sync status
 */
export interface ServerEndpointSyncStatus {
  /**
   * Download Health Status. Possible values include: 'Healthy', 'Error', 'SyncBlockedForRestore',
   * 'SyncBlockedForChangeDetectionPostRestore', 'NoActivity'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly downloadHealth?: ServerEndpointSyncHealthState;
  /**
   * Upload Health Status. Possible values include: 'Healthy', 'Error', 'SyncBlockedForRestore',
   * 'SyncBlockedForChangeDetectionPostRestore', 'NoActivity'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uploadHealth?: ServerEndpointSyncHealthState;
  /**
   * Combined Health Status. Possible values include: 'Healthy', 'Error', 'SyncBlockedForRestore',
   * 'SyncBlockedForChangeDetectionPostRestore', 'NoActivity'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly combinedHealth?: ServerEndpointSyncHealthState;
  /**
   * Sync activity. Possible values include: 'Upload', 'Download', 'UploadAndDownload'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncActivity?: ServerEndpointSyncActivityState;
  /**
   * Total count of persistent files not syncing (combined upload + download).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalPersistentFilesNotSyncingCount?: number;
  /**
   * Last Updated Timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Upload Status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uploadStatus?: ServerEndpointSyncSessionStatus;
  /**
   * Download Status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly downloadStatus?: ServerEndpointSyncSessionStatus;
  /**
   * Upload sync activity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uploadActivity?: ServerEndpointSyncActivityStatus;
  /**
   * Download sync activity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly downloadActivity?: ServerEndpointSyncActivityStatus;
  /**
   * Offline Data Transfer State. Possible values include: 'InProgress', 'Stopping', 'NotRunning',
   * 'Complete'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly offlineDataTransferStatus?: ServerEndpointOfflineDataTransferState;
}

/**
 * Server endpoint cloud tiering status object.
 */
export interface CloudTieringSpaceSavings {
  /**
   * Last updated timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Volume size
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly volumeSizeBytes?: number;
  /**
   * Total size of content in the azure file share
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalSizeCloudBytes?: number;
  /**
   * Cached content size on the server
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cachedSizeBytes?: number;
  /**
   * Percentage of cached size over total size
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spaceSavingsPercent?: number;
  /**
   * Count of bytes saved on the server
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spaceSavingsBytes?: number;
}

/**
 * Server endpoint cloud tiering status object.
 */
export interface CloudTieringCachePerformance {
  /**
   * Last updated timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Count of bytes that were served from the local server
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cacheHitBytes?: number;
  /**
   * Count of bytes that were served from the cloud
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cacheMissBytes?: number;
  /**
   * Percentage of total bytes (hit + miss) that were served from the local server
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cacheHitBytesPercent?: number;
}

/**
 * Files not tiering error object
 */
export interface FilesNotTieringError {
  /**
   * Error code (HResult)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * Count of files with this error
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fileCount?: number;
}

/**
 * Server endpoint cloud tiering status object.
 */
export interface CloudTieringFilesNotTiering {
  /**
   * Last updated timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Last cloud tiering result (HResult)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalFileCount?: number;
  /**
   * Array of tiering errors
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errors?: FilesNotTieringError[];
}

/**
 * Status of the volume free space policy
 */
export interface CloudTieringVolumeFreeSpacePolicyStatus {
  /**
   * Last updated timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * In the case where multiple server endpoints are present in a volume, an effective free space
   * policy is applied.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly effectiveVolumeFreeSpacePolicy?: number;
  /**
   * Current volume free space percentage.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentVolumeFreeSpacePercent?: number;
}

/**
 * Status of the date policy
 */
export interface CloudTieringDatePolicyStatus {
  /**
   * Last updated timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Most recent access time of tiered files
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tieredFilesMostRecentAccessTimestamp?: Date;
}

/**
 * Server endpoint cloud tiering status object.
 */
export interface ServerEndpointCloudTieringStatus {
  /**
   * Last updated timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Cloud tiering health state. Possible values include: 'Healthy', 'Error'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly health?: ServerEndpointCloudTieringHealthState;
  /**
   * The last updated timestamp of health state
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly healthLastUpdatedTimestamp?: Date;
  /**
   * Last cloud tiering result (HResult)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastCloudTieringResult?: number;
  /**
   * Last cloud tiering success timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastSuccessTimestamp?: Date;
  /**
   * Information regarding how much local space cloud tiering is saving.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spaceSavings?: CloudTieringSpaceSavings;
  /**
   * Information regarding how well the local cache on the server is performing.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cachePerformance?: CloudTieringCachePerformance;
  /**
   * Information regarding files that failed to be tiered
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly filesNotTiering?: CloudTieringFilesNotTiering;
  /**
   * Status of the volume free space policy
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly volumeFreeSpacePolicyStatus?: CloudTieringVolumeFreeSpacePolicyStatus;
  /**
   * Status of the date policy
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePolicyStatus?: CloudTieringDatePolicyStatus;
}

/**
 * Server endpoint recall error object
 */
export interface ServerEndpointRecallError {
  /**
   * Error code (HResult)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * Count of occurences of the error
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly count?: number;
}

/**
 * Server endpoint recall status object.
 */
export interface ServerEndpointRecallStatus {
  /**
   * Last updated timestamp
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Total count of recall errors.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalRecallErrorsCount?: number;
  /**
   * Array of recall errors
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recallErrors?: ServerEndpointRecallError[];
}

/**
 * Server Endpoint object.
 */
export interface ServerEndpoint extends ProxyResource {
  /**
   * Server Local path.
   */
  serverLocalPath?: string;
  /**
   * Cloud Tiering. Possible values include: 'on', 'off'
   */
  cloudTiering?: FeatureStatus;
  /**
   * Level of free space to be maintained by Cloud Tiering if it is enabled.
   */
  volumeFreeSpacePercent?: number;
  /**
   * Tier files older than days.
   */
  tierFilesOlderThanDays?: number;
  /**
   * Friendly Name
   */
  friendlyName?: string;
  /**
   * Server Resource Id.
   */
  serverResourceId?: string;
  /**
   * ServerEndpoint Provisioning State
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * ServerEndpoint lastWorkflowId
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastOperationName?: string;
  /**
   * Server Endpoint sync status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncStatus?: ServerEndpointSyncStatus;
  /**
   * Offline data transfer. Possible values include: 'on', 'off'
   */
  offlineDataTransfer?: FeatureStatus;
  /**
   * Offline data transfer storage account resource ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly offlineDataTransferStorageAccountResourceId?: string;
  /**
   * Offline data transfer storage account tenant ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly offlineDataTransferStorageAccountTenantId?: string;
  /**
   * Offline data transfer share name
   */
  offlineDataTransferShareName?: string;
  /**
   * Cloud tiering status. Only populated if cloud tiering is enabled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cloudTieringStatus?: ServerEndpointCloudTieringStatus;
  /**
   * Recall status. Only populated if cloud tiering is enabled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recallStatus?: ServerEndpointRecallStatus;
  /**
   * Policy for how namespace and files are recalled during FastDr. Possible values include:
   * 'NamespaceOnly', 'NamespaceThenModifiedFiles', 'AvoidTieredFiles'
   */
  initialDownloadPolicy?: InitialDownloadPolicy;
  /**
   * Policy for enabling follow-the-sun business models: link local cache to cloud behavior to
   * pre-populate before local access. Possible values include: 'DownloadNewAndModifiedFiles',
   * 'UpdateLocallyCachedFiles'
   */
  localCacheMode?: LocalCacheMode;
}

/**
 * Registered Server resource.
 */
export interface RegisteredServer extends ProxyResource {
  /**
   * Registered Server Certificate
   */
  serverCertificate?: string;
  /**
   * Registered Server Agent Version
   */
  agentVersion?: string;
  /**
   * Registered Server OS Version
   */
  serverOSVersion?: string;
  /**
   * Registered Server Management Error Code
   */
  serverManagementErrorCode?: number;
  /**
   * Registered Server last heart beat
   */
  lastHeartBeat?: string;
  /**
   * Registered Server Provisioning State
   */
  provisioningState?: string;
  /**
   * Registered Server serverRole
   */
  serverRole?: string;
  /**
   * Registered Server clusterId
   */
  clusterId?: string;
  /**
   * Registered Server clusterName
   */
  clusterName?: string;
  /**
   * Registered Server serverId
   */
  serverId?: string;
  /**
   * Registered Server storageSyncServiceUid
   */
  storageSyncServiceUid?: string;
  /**
   * Registered Server lastWorkflowId
   */
  lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   */
  lastOperationName?: string;
  /**
   * Resource discoveryEndpointUri
   */
  discoveryEndpointUri?: string;
  /**
   * Resource Location
   */
  resourceLocation?: string;
  /**
   * Service Location
   */
  serviceLocation?: string;
  /**
   * Friendly Name
   */
  friendlyName?: string;
  /**
   * Management Endpoint Uri
   */
  managementEndpointUri?: string;
  /**
   * Telemetry Endpoint Uri
   */
  monitoringEndpointUri?: string;
  /**
   * Monitoring Configuration
   */
  monitoringConfiguration?: string;
}

/**
 * Resource Move Info.
 */
export interface ResourcesMoveInfo {
  /**
   * Target resource group.
   */
  targetResourceGroup?: string;
  /**
   * Collection of Resources.
   */
  resources?: string[];
}

/**
 * Workflow resource.
 */
export interface Workflow extends ProxyResource {
  /**
   * last step name
   */
  lastStepName?: string;
  /**
   * workflow status. Possible values include: 'active', 'expired', 'succeeded', 'aborted',
   * 'failed'
   */
  status?: WorkflowStatus;
  /**
   * operation direction. Possible values include: 'do', 'undo', 'cancel'
   */
  operation?: OperationDirection;
  /**
   * workflow steps
   */
  steps?: string;
  /**
   * workflow last operation identifier.
   */
  lastOperationId?: string;
}

/**
 * The operation supported by storage sync.
 */
export interface OperationDisplayInfo {
  /**
   * The description of the operation.
   */
  description?: string;
  /**
   * The action that users can perform, based on their permission level.
   */
  operation?: string;
  /**
   * Service provider: Microsoft StorageSync.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  resource?: string;
}

/**
 * The operation supported by storage sync.
 */
export interface OperationEntity {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  name?: string;
  /**
   * The operation supported by storage sync.
   */
  display?: OperationDisplayInfo;
  /**
   * The origin.
   */
  origin?: string;
}

/**
 * Operation Display Resource object.
 */
export interface OperationDisplayResource {
  /**
   * Operation Display Resource Provider.
   */
  provider?: string;
  /**
   * Operation Display Resource.
   */
  resource?: string;
  /**
   * Operation Display Resource Operation.
   */
  operation?: string;
  /**
   * Operation Display Resource Description.
   */
  description?: string;
}

/**
 * Parameters for a check name availability request.
 */
export interface CheckNameAvailabilityParameters {
  /**
   * The name to check for availability
   */
  name: string;
}

/**
 * The CheckNameAvailability operation response.
 */
export interface CheckNameAvailabilityResult {
  /**
   * Gets a boolean value that indicates whether the name is available for you to use. If true, the
   * name is available. If false, the name has already been taken or invalid and cannot be used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nameAvailable?: boolean;
  /**
   * Gets the reason that a Storage Sync Service name could not be used. The Reason element is only
   * returned if NameAvailable is false. Possible values include: 'Invalid', 'AlreadyExists'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reason?: NameAvailabilityReason;
  /**
   * Gets an error message explaining the Reason value in more detail.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Restore file spec.
 */
export interface RestoreFileSpec {
  /**
   * Restore file spec path
   */
  path?: string;
  /**
   * Restore file spec isdir
   */
  isdir?: boolean;
}

/**
 * Post Restore Request
 */
export interface PostRestoreRequest {
  /**
   * Post Restore partition.
   */
  partition?: string;
  /**
   * Post Restore replica group.
   */
  replicaGroup?: string;
  /**
   * Post Restore request id.
   */
  requestId?: string;
  /**
   * Post Restore Azure file share uri.
   */
  azureFileShareUri?: string;
  /**
   * Post Restore Azure status.
   */
  status?: string;
  /**
   * Post Restore Azure source azure file share uri.
   */
  sourceAzureFileShareUri?: string;
  /**
   * Post Restore Azure failed file list.
   */
  failedFileList?: string;
  /**
   * Post Restore restore file spec array.
   */
  restoreFileSpec?: RestoreFileSpec[];
}

/**
 * Pre Restore request object.
 */
export interface PreRestoreRequest {
  /**
   * Pre Restore partition.
   */
  partition?: string;
  /**
   * Pre Restore replica group.
   */
  replicaGroup?: string;
  /**
   * Pre Restore request id.
   */
  requestId?: string;
  /**
   * Pre Restore Azure file share uri.
   */
  azureFileShareUri?: string;
  /**
   * Pre Restore Azure status.
   */
  status?: string;
  /**
   * Pre Restore Azure source azure file share uri.
   */
  sourceAzureFileShareUri?: string;
  /**
   * Pre Restore backup metadata property bag.
   */
  backupMetadataPropertyBag?: string;
  /**
   * Pre Restore restore file spec array.
   */
  restoreFileSpec?: RestoreFileSpec[];
  /**
   * Pre Restore pause wait for sync drain time period in seconds.
   */
  pauseWaitForSyncDrainTimePeriodInSeconds?: number;
}

/**
 * Backup request
 */
export interface BackupRequest {
  /**
   * Azure File Share.
   */
  azureFileShare?: string;
}

/**
 * Post Backup Response
 */
export interface PostBackupResponse {
  /**
   * cloud endpoint Name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cloudEndpointName?: string;
}

/**
 * Parameters for updating an Storage sync service.
 */
export interface StorageSyncServiceUpdateParameters {
  /**
   * The user-specified tags associated with the storage sync service.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Incoming Traffic Policy. Possible values include: 'AllowAllTraffic',
   * 'AllowVirtualNetworksOnly'
   */
  incomingTrafficPolicy?: IncomingTrafficPolicy;
}

/**
 * Operation status object
 */
export interface OperationStatus {
  /**
   * Operation Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Operation status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * Start time of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * End time of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * Error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: StorageSyncApiError;
}

/**
 * The resource model definition for a Azure Resource Manager resource with an etag.
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * A private link resource
 */
export interface PrivateLinkResource extends Resource {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredMembers?: string[];
  /**
   * The private link resource Private link DNS zone name.
   */
  requiredZoneNames?: string[];
}

/**
 * A list of private link resources
 */
export interface PrivateLinkResourceListResult {
  /**
   * Array of private link resources
   */
  value?: PrivateLinkResource[];
}

/**
 * Optional Parameters.
 */
export interface StorageSyncServicesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Storage Sync Service resource.
   */
  parameters?: StorageSyncServiceUpdateParameters;
}

/**
 * Optional Parameters.
 */
export interface StorageSyncServicesBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Storage Sync Service resource.
   */
  parameters?: StorageSyncServiceUpdateParameters;
}

/**
 * Optional Parameters.
 */
export interface ServerEndpointsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Any of the properties applicable in PUT request.
   */
  parameters?: ServerEndpointUpdateParameters;
}

/**
 * Optional Parameters.
 */
export interface ServerEndpointsBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Any of the properties applicable in PUT request.
   */
  parameters?: ServerEndpointUpdateParameters;
}

/**
 * An interface representing StorageSyncManagementClientOptions.
 */
export interface StorageSyncManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for List operation.
 */
export interface OperationsListHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Create operation.
 */
export interface StorageSyncServicesCreateHeaders {
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  locationHeader: string;
  /**
   * Retry After
   */
  retryAfter: string;
  /**
   * Request id
   */
  xMsRequestId: string;
  /**
   * correlation request id
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Get operation.
 */
export interface StorageSyncServicesGetHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Update operation.
 */
export interface StorageSyncServicesUpdateHeaders {
  /**
   * Request id
   */
  xMsRequestId: string;
  /**
   * correlation request id
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  locationHeader: string;
  /**
   * Retry After
   */
  retryAfter: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface StorageSyncServicesDeleteHeaders {
  /**
   * Request id
   */
  xMsRequestId: string;
  /**
   * correlation request id
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * Retry After
   */
  retryAfter: string;
}

/**
 * Defines headers for ListByResourceGroup operation.
 */
export interface StorageSyncServicesListByResourceGroupHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for ListBySubscription operation.
 */
export interface StorageSyncServicesListBySubscriptionHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Create operation.
 */
export interface PrivateEndpointConnectionsCreateHeaders {
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * Retry After
   */
  retryAfter: string;
  /**
   * Request id
   */
  xMsRequestId: string;
  /**
   * correlation request id
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface PrivateEndpointConnectionsDeleteHeaders {
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * Retry After
   */
  retryAfter: string;
  /**
   * Request id
   */
  xMsRequestId: string;
  /**
   * correlation request id
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for ListByStorageSyncService operation.
 */
export interface PrivateEndpointConnectionsListByStorageSyncServiceHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for ListByStorageSyncService operation.
 */
export interface SyncGroupsListByStorageSyncServiceHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Create operation.
 */
export interface SyncGroupsCreateHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Get operation.
 */
export interface SyncGroupsGetHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface SyncGroupsDeleteHeaders {
  /**
   * Request id
   */
  xMsRequestId: string;
  /**
   * correlation request id
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Create operation.
 */
export interface CloudEndpointsCreateHeaders {
  /**
   * Request id
   */
  xMsRequestId: string;
  /**
   * correlation request id
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * Retry After
   */
  retryAfter: string;
}

/**
 * Defines headers for Get operation.
 */
export interface CloudEndpointsGetHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface CloudEndpointsDeleteHeaders {
  /**
   * Request id
   */
  xMsRequestId: string;
  /**
   * correlation request id
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * Retry After
   */
  retryAfter: string;
}

/**
 * Defines headers for ListBySyncGroup operation.
 */
export interface CloudEndpointsListBySyncGroupHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for PreBackup operation.
 */
export interface CloudEndpointsPreBackupHeaders {
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for PostBackup operation.
 */
export interface CloudEndpointsPostBackupHeaders {
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for PreRestore operation.
 */
export interface CloudEndpointsPreRestoreHeaders {
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for restoreheartbeat operation.
 */
export interface CloudEndpointsRestoreheartbeatHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for PostRestore operation.
 */
export interface CloudEndpointsPostRestoreHeaders {
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for TriggerChangeDetection operation.
 */
export interface CloudEndpointsTriggerChangeDetectionHeaders {
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Create operation.
 */
export interface ServerEndpointsCreateHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  location: string;
}

/**
 * Defines headers for Update operation.
 */
export interface ServerEndpointsUpdateHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  location: string;
}

/**
 * Defines headers for Get operation.
 */
export interface ServerEndpointsGetHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface ServerEndpointsDeleteHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  location: string;
}

/**
 * Defines headers for ListBySyncGroup operation.
 */
export interface ServerEndpointsListBySyncGroupHeaders {
  /**
   * Operation Status Location URI
   */
  location: string;
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for recallAction operation.
 */
export interface ServerEndpointsRecallActionHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  location: string;
}

/**
 * Defines headers for ListByStorageSyncService operation.
 */
export interface RegisteredServersListByStorageSyncServiceHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Get operation.
 */
export interface RegisteredServersGetHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Create operation.
 */
export interface RegisteredServersCreateHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  azureAsyncOperation: string;
  /**
   * Operation Status Location URI
   */
  location: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface RegisteredServersDeleteHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  location: string;
}

/**
 * Defines headers for triggerRollover operation.
 */
export interface RegisteredServersTriggerRolloverHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
  /**
   * Operation Status Location URI
   */
  location: string;
}

/**
 * Defines headers for ListByStorageSyncService operation.
 */
export interface WorkflowsListByStorageSyncServiceHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Get operation.
 */
export interface WorkflowsGetHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Abort operation.
 */
export interface WorkflowsAbortHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * Defines headers for Get operation.
 */
export interface OperationStatusGetHeaders {
  /**
   * request id.
   */
  xMsRequestId: string;
  /**
   * correlation request id.
   */
  xMsCorrelationRequestId: string;
}

/**
 * @interface
 * The list of storage sync operations.
 * @extends Array<OperationEntity>
 */
export interface OperationEntityListResult extends Array<OperationEntity> {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * Array of StorageSyncServices
 * @extends Array<StorageSyncService>
 */
export interface StorageSyncServiceArray extends Array<StorageSyncService> {
}

/**
 * @interface
 * List of private endpoint connection associated with the specified storage account
 * @extends Array<PrivateEndpointConnection>
 */
export interface PrivateEndpointConnectionListResult extends Array<PrivateEndpointConnection> {
}

/**
 * @interface
 * Array of SyncGroup
 * @extends Array<SyncGroup>
 */
export interface SyncGroupArray extends Array<SyncGroup> {
}

/**
 * @interface
 * Array of CloudEndpoint
 * @extends Array<CloudEndpoint>
 */
export interface CloudEndpointArray extends Array<CloudEndpoint> {
}

/**
 * @interface
 * Array of ServerEndpoint
 * @extends Array<ServerEndpoint>
 */
export interface ServerEndpointArray extends Array<ServerEndpoint> {
}

/**
 * @interface
 * Array of RegisteredServer
 * @extends Array<RegisteredServer>
 */
export interface RegisteredServerArray extends Array<RegisteredServer> {
}

/**
 * @interface
 * Array of Workflow
 * @extends Array<Workflow>
 */
export interface WorkflowArray extends Array<Workflow> {
}

/**
 * Defines values for Reason.
 * Possible values include: 'Registered', 'Unregistered', 'Warned', 'Suspended', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type Reason = 'Registered' | 'Unregistered' | 'Warned' | 'Suspended' | 'Deleted';

/**
 * Defines values for IncomingTrafficPolicy.
 * Possible values include: 'AllowAllTraffic', 'AllowVirtualNetworksOnly'
 * @readonly
 * @enum {string}
 */
export type IncomingTrafficPolicy = 'AllowAllTraffic' | 'AllowVirtualNetworksOnly';

/**
 * Defines values for PrivateEndpointServiceConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointServiceConnectionStatus = 'Pending' | 'Approved' | 'Rejected';

/**
 * Defines values for PrivateEndpointConnectionProvisioningState.
 * Possible values include: 'Succeeded', 'Creating', 'Deleting', 'Failed'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointConnectionProvisioningState = 'Succeeded' | 'Creating' | 'Deleting' | 'Failed';

/**
 * Defines values for ChangeDetectionMode.
 * Possible values include: 'Default', 'Recursive'
 * @readonly
 * @enum {string}
 */
export type ChangeDetectionMode = 'Default' | 'Recursive';

/**
 * Defines values for FeatureStatus.
 * Possible values include: 'on', 'off'
 * @readonly
 * @enum {string}
 */
export type FeatureStatus = 'on' | 'off';

/**
 * Defines values for InitialDownloadPolicy.
 * Possible values include: 'NamespaceOnly', 'NamespaceThenModifiedFiles', 'AvoidTieredFiles'
 * @readonly
 * @enum {string}
 */
export type InitialDownloadPolicy = 'NamespaceOnly' | 'NamespaceThenModifiedFiles' | 'AvoidTieredFiles';

/**
 * Defines values for LocalCacheMode.
 * Possible values include: 'DownloadNewAndModifiedFiles', 'UpdateLocallyCachedFiles'
 * @readonly
 * @enum {string}
 */
export type LocalCacheMode = 'DownloadNewAndModifiedFiles' | 'UpdateLocallyCachedFiles';

/**
 * Defines values for ServerEndpointSyncHealthState.
 * Possible values include: 'Healthy', 'Error', 'SyncBlockedForRestore',
 * 'SyncBlockedForChangeDetectionPostRestore', 'NoActivity'
 * @readonly
 * @enum {string}
 */
export type ServerEndpointSyncHealthState = 'Healthy' | 'Error' | 'SyncBlockedForRestore' | 'SyncBlockedForChangeDetectionPostRestore' | 'NoActivity';

/**
 * Defines values for ServerEndpointSyncActivityState.
 * Possible values include: 'Upload', 'Download', 'UploadAndDownload'
 * @readonly
 * @enum {string}
 */
export type ServerEndpointSyncActivityState = 'Upload' | 'Download' | 'UploadAndDownload';

/**
 * Defines values for ServerEndpointOfflineDataTransferState.
 * Possible values include: 'InProgress', 'Stopping', 'NotRunning', 'Complete'
 * @readonly
 * @enum {string}
 */
export type ServerEndpointOfflineDataTransferState = 'InProgress' | 'Stopping' | 'NotRunning' | 'Complete';

/**
 * Defines values for ServerEndpointCloudTieringHealthState.
 * Possible values include: 'Healthy', 'Error'
 * @readonly
 * @enum {string}
 */
export type ServerEndpointCloudTieringHealthState = 'Healthy' | 'Error';

/**
 * Defines values for WorkflowStatus.
 * Possible values include: 'active', 'expired', 'succeeded', 'aborted', 'failed'
 * @readonly
 * @enum {string}
 */
export type WorkflowStatus = 'active' | 'expired' | 'succeeded' | 'aborted' | 'failed';

/**
 * Defines values for OperationDirection.
 * Possible values include: 'do', 'undo', 'cancel'
 * @readonly
 * @enum {string}
 */
export type OperationDirection = 'do' | 'undo' | 'cancel';

/**
 * Defines values for NameAvailabilityReason.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type NameAvailabilityReason = 'Invalid' | 'AlreadyExists';

/**
 * Defines values for ProgressType.
 * Possible values include: 'none', 'initialize', 'download', 'upload', 'recall'
 * @readonly
 * @enum {string}
 */
export type ProgressType = 'none' | 'initialize' | 'download' | 'upload' | 'recall';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationEntityListResult & OperationsListHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OperationsListHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationEntityListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type StorageSyncServicesCheckNameAvailabilityResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type StorageSyncServicesCreateResponse = StorageSyncService & StorageSyncServicesCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesCreateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncService;
    };
};

/**
 * Contains response data for the get operation.
 */
export type StorageSyncServicesGetResponse = StorageSyncService & StorageSyncServicesGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncService;
    };
};

/**
 * Contains response data for the update operation.
 */
export type StorageSyncServicesUpdateResponse = StorageSyncService & StorageSyncServicesUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncService;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type StorageSyncServicesDeleteResponse = StorageSyncServicesDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesDeleteHeaders;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type StorageSyncServicesListByResourceGroupResponse = StorageSyncServiceArray & StorageSyncServicesListByResourceGroupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesListByResourceGroupHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncServiceArray;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type StorageSyncServicesListBySubscriptionResponse = StorageSyncServiceArray & StorageSyncServicesListBySubscriptionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesListBySubscriptionHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncServiceArray;
    };
};

/**
 * Contains response data for the listByStorageSyncService operation.
 */
export type PrivateLinkResourcesListByStorageSyncServiceResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the create operation.
 */
export type PrivateEndpointConnectionsCreateResponse = PrivateEndpointConnection & PrivateEndpointConnectionsCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PrivateEndpointConnectionsCreateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type PrivateEndpointConnectionsDeleteResponse = PrivateEndpointConnectionsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PrivateEndpointConnectionsDeleteHeaders;
    };
};

/**
 * Contains response data for the listByStorageSyncService operation.
 */
export type PrivateEndpointConnectionsListByStorageSyncServiceResponse = PrivateEndpointConnectionListResult & PrivateEndpointConnectionsListByStorageSyncServiceHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PrivateEndpointConnectionsListByStorageSyncServiceHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the listByStorageSyncService operation.
 */
export type SyncGroupsListByStorageSyncServiceResponse = SyncGroupArray & SyncGroupsListByStorageSyncServiceHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SyncGroupsListByStorageSyncServiceHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupArray;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SyncGroupsCreateResponse = SyncGroup & SyncGroupsCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SyncGroupsCreateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncGroupsGetResponse = SyncGroup & SyncGroupsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SyncGroupsGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type SyncGroupsDeleteResponse = SyncGroupsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SyncGroupsDeleteHeaders;
    };
};

/**
 * Contains response data for the create operation.
 */
export type CloudEndpointsCreateResponse = CloudEndpoint & CloudEndpointsCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsCreateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudEndpoint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CloudEndpointsGetResponse = CloudEndpoint & CloudEndpointsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudEndpoint;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type CloudEndpointsDeleteResponse = CloudEndpointsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsDeleteHeaders;
    };
};

/**
 * Contains response data for the listBySyncGroup operation.
 */
export type CloudEndpointsListBySyncGroupResponse = CloudEndpointArray & CloudEndpointsListBySyncGroupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsListBySyncGroupHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudEndpointArray;
    };
};

/**
 * Contains response data for the preBackup operation.
 */
export type CloudEndpointsPreBackupResponse = CloudEndpointsPreBackupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsPreBackupHeaders;
    };
};

/**
 * Contains response data for the postBackup operation.
 */
export type CloudEndpointsPostBackupResponse = PostBackupResponse & CloudEndpointsPostBackupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsPostBackupHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostBackupResponse;
    };
};

/**
 * Contains response data for the preRestore operation.
 */
export type CloudEndpointsPreRestoreResponse = CloudEndpointsPreRestoreHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsPreRestoreHeaders;
    };
};

/**
 * Contains response data for the restoreheartbeat operation.
 */
export type CloudEndpointsRestoreheartbeatResponse = CloudEndpointsRestoreheartbeatHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsRestoreheartbeatHeaders;
    };
};

/**
 * Contains response data for the postRestore operation.
 */
export type CloudEndpointsPostRestoreResponse = CloudEndpointsPostRestoreHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsPostRestoreHeaders;
    };
};

/**
 * Contains response data for the triggerChangeDetection operation.
 */
export type CloudEndpointsTriggerChangeDetectionResponse = CloudEndpointsTriggerChangeDetectionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsTriggerChangeDetectionHeaders;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ServerEndpointsCreateResponse = ServerEndpoint & ServerEndpointsCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsCreateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerEndpoint;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServerEndpointsUpdateResponse = ServerEndpoint & ServerEndpointsUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerEndpoint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerEndpointsGetResponse = ServerEndpoint & ServerEndpointsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerEndpoint;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ServerEndpointsDeleteResponse = ServerEndpointsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsDeleteHeaders;
    };
};

/**
 * Contains response data for the listBySyncGroup operation.
 */
export type ServerEndpointsListBySyncGroupResponse = ServerEndpointArray & ServerEndpointsListBySyncGroupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsListBySyncGroupHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerEndpointArray;
    };
};

/**
 * Contains response data for the recallAction operation.
 */
export type ServerEndpointsRecallActionResponse = ServerEndpointsRecallActionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsRecallActionHeaders;
    };
};

/**
 * Contains response data for the listByStorageSyncService operation.
 */
export type RegisteredServersListByStorageSyncServiceResponse = RegisteredServerArray & RegisteredServersListByStorageSyncServiceHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: RegisteredServersListByStorageSyncServiceHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegisteredServerArray;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RegisteredServersGetResponse = RegisteredServer & RegisteredServersGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: RegisteredServersGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegisteredServer;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RegisteredServersCreateResponse = RegisteredServer & RegisteredServersCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: RegisteredServersCreateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegisteredServer;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type RegisteredServersDeleteResponse = RegisteredServersDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: RegisteredServersDeleteHeaders;
    };
};

/**
 * Contains response data for the triggerRollover operation.
 */
export type RegisteredServersTriggerRolloverResponse = RegisteredServersTriggerRolloverHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: RegisteredServersTriggerRolloverHeaders;
    };
};

/**
 * Contains response data for the listByStorageSyncService operation.
 */
export type WorkflowsListByStorageSyncServiceResponse = WorkflowArray & WorkflowsListByStorageSyncServiceHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: WorkflowsListByStorageSyncServiceHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowArray;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowsGetResponse = Workflow & WorkflowsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: WorkflowsGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workflow;
    };
};

/**
 * Contains response data for the abort operation.
 */
export type WorkflowsAbortResponse = WorkflowsAbortHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: WorkflowsAbortHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OperationStatusGetResponse = OperationStatus & OperationStatusGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OperationStatusGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};
