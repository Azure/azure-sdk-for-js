/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The list of storage sync operations. */
export interface OperationEntityListResult {
  /** The link used to get the next page of operations. */
  nextLink?: string;
  /** The list of operations. */
  value?: OperationEntity[];
}

/** The operation supported by storage sync. */
export interface OperationEntity {
  /** Operation name: {provider}/{resource}/{operation}. */
  name?: string;
  /** The operation supported by storage sync. */
  display?: OperationDisplayInfo;
  /** The origin. */
  origin?: string;
  /** Properties of the operations resource. */
  properties?: OperationProperties;
}

/** The operation supported by storage sync. */
export interface OperationDisplayInfo {
  /** The description of the operation. */
  description?: string;
  /** The action that users can perform, based on their permission level. */
  operation?: string;
  /** Service provider: Microsoft StorageSync. */
  provider?: string;
  /** Resource on which the operation is performed. */
  resource?: string;
}

/** Properties of the operations resource. */
export interface OperationProperties {
  /** Service specification for the operations resource. */
  serviceSpecification?: OperationResourceServiceSpecification;
}

/** Service specification. */
export interface OperationResourceServiceSpecification {
  /** List of metric specifications. */
  metricSpecifications?: OperationResourceMetricSpecification[];
}

/** Operation Display Resource object. */
export interface OperationResourceMetricSpecification {
  /** Name of the metric. */
  name?: string;
  /** Display name for the metric. */
  displayName?: string;
  /** Display description for the metric. */
  displayDescription?: string;
  /** Unit for the metric. */
  unit?: string;
  /** Aggregation type for the metric. */
  aggregationType?: string;
  /** Fill gaps in the metric with zero. */
  fillGapWithZero?: boolean;
  /** Dimensions for the metric specification. */
  dimensions?: OperationResourceMetricSpecificationDimension[];
}

/** OperationResourceMetricSpecificationDimension object. */
export interface OperationResourceMetricSpecificationDimension {
  /** Name of the dimension. */
  name?: string;
  /** Display name of the dimensions. */
  displayName?: string;
  /** Indicates metric should be exported for Shoebox. */
  toBeExportedForShoebox?: boolean;
}

/** Error type */
export interface StorageSyncError {
  /** Error details of the given entry. */
  error?: StorageSyncApiError;
  /** Error details of the given entry. */
  innererror?: StorageSyncApiError;
}

/** Error type */
export interface StorageSyncApiError {
  /** Error code of the given entry. */
  code?: string;
  /** Error message of the given entry. */
  message?: string;
  /** Target of the given error entry. */
  target?: string;
  /** Error details of the given entry. */
  details?: StorageSyncErrorDetails;
  /** Inner error details of the given entry. */
  innerError?: StorageSyncInnerErrorDetails;
}

/** Error Details object. */
export interface StorageSyncErrorDetails {
  /** Error code of the given entry. */
  code?: string;
  /** Error message of the given entry. */
  message?: string;
  /** Target of the given entry. */
  target?: string;
  /** Request URI of the given entry. */
  requestUri?: string;
  /** Exception type of the given entry. */
  exceptionType?: string;
  /** HTTP method of the given entry. */
  httpMethod?: string;
  /** Hashed message of the given entry. */
  hashedMessage?: string;
  /** HTTP error code of the given entry. */
  httpErrorCode?: string;
}

/** Error Details object. */
export interface StorageSyncInnerErrorDetails {
  /** Call stack of the error. */
  callStack?: string;
  /** Error message of the error. */
  message?: string;
  /** Exception of the inner error. */
  innerException?: string;
  /** Call stack of the inner error. */
  innerExceptionCallStack?: string;
}

/** Parameters for a check name availability request. */
export interface CheckNameAvailabilityParameters {
  /** The name to check for availability */
  name: string;
  /** The resource type. Must be set to Microsoft.StorageSync/storageSyncServices */
  type: "Microsoft.StorageSync/storageSyncServices";
}

/** The CheckNameAvailability operation response. */
export interface CheckNameAvailabilityResult {
  /**
   * Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameAvailable?: boolean;
  /**
   * Gets the reason that a Storage Sync Service name could not be used. The Reason element is only returned if NameAvailable is false.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: NameAvailabilityReason;
  /**
   * Gets an error message explaining the Reason value in more detail.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** The parameters used when creating a storage sync service. */
export interface StorageSyncServiceCreateParameters {
  /** Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. */
  location: string;
  /** Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters. */
  tags?: { [propertyName: string]: string };
  /** Incoming Traffic Policy */
  incomingTrafficPolicy?: IncomingTrafficPolicy;
}

/** The Private Endpoint resource. */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** A collection of information about the state of the connection between service consumer and provider. */
export interface PrivateLinkServiceConnectionState {
  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
  status?: PrivateEndpointServiceConnectionStatus;
  /** The reason for approval/rejection of the connection. */
  description?: string;
  /** A message indicating if changes on the service provider require any updates on the consumer. */
  actionsRequired?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Parameters for updating an Storage sync service. */
export interface StorageSyncServiceUpdateParameters {
  /** The user-specified tags associated with the storage sync service. */
  tags?: { [propertyName: string]: string };
  /** Incoming Traffic Policy */
  incomingTrafficPolicy?: IncomingTrafficPolicy;
}

/** Array of StorageSyncServices */
export interface StorageSyncServiceArray {
  /** Collection of StorageSyncServices. */
  value?: StorageSyncService[];
}

/** A list of private link resources */
export interface PrivateLinkResourceListResult {
  /** Array of private link resources */
  value?: PrivateLinkResource[];
}

/** List of private endpoint connection associated with the specified storage account */
export interface PrivateEndpointConnectionListResult {
  /** Array of private endpoint connections */
  value?: PrivateEndpointConnection[];
}

/** Array of SyncGroup */
export interface SyncGroupArray {
  /** Collection of SyncGroup. */
  value?: SyncGroup[];
}

/** Cloud endpoint change enumeration status object */
export interface CloudEndpointChangeEnumerationStatus {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Status of last completed change enumeration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastEnumerationStatus?: CloudEndpointLastChangeEnumerationStatus;
  /**
   * Change enumeration activity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activity?: CloudEndpointChangeEnumerationActivity;
}

/** Cloud endpoint change enumeration status object */
export interface CloudEndpointLastChangeEnumerationStatus {
  /**
   * Timestamp when change enumeration started
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startedTimestamp?: Date;
  /**
   * Timestamp when change enumeration completed
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly completedTimestamp?: Date;
  /**
   * Count of files in the namespace
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly namespaceFilesCount?: number;
  /**
   * Count of directories in the namespace
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly namespaceDirectoriesCount?: number;
  /**
   * Namespace size in bytes
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly namespaceSizeBytes?: number;
  /**
   * Timestamp of when change enumeration is expected to run again
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextRunTimestamp?: Date;
}

/** Cloud endpoint change enumeration activity object */
export interface CloudEndpointChangeEnumerationActivity {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Change enumeration operation state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationState?: CloudEndpointChangeEnumerationActivityState;
  /**
   * When non-zero, indicates an issue that is delaying change enumeration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusCode?: number;
  /**
   * Timestamp when change enumeration started
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startedTimestamp?: Date;
  /**
   * Count of files processed
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processedFilesCount?: number;
  /**
   * Count of directories processed
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processedDirectoriesCount?: number;
  /**
   * Total count of files enumerated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalFilesCount?: number;
  /**
   * Total count of directories enumerated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalDirectoriesCount?: number;
  /**
   * Total enumerated size in bytes
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalSizeBytes?: number;
  /**
   * Progress percentage for change enumeration run, excluding processing of deletes
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly progressPercent?: number;
  /**
   * Estimate of time remaining for the enumeration run
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minutesRemaining?: number;
  /**
   * Change enumeration total counts state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalCountsState?: CloudEndpointChangeEnumerationTotalCountsState;
  /**
   * Progress percentage for processing deletes. This is done separately from the rest of the enumeration run
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deletesProgressPercent?: number;
}

/** Array of CloudEndpoint */
export interface CloudEndpointArray {
  /** Collection of CloudEndpoint. */
  value?: CloudEndpoint[];
}

/** Backup request */
export interface BackupRequest {
  /** Azure File Share. */
  azureFileShare?: string;
}

/** Post Backup Response */
export interface PostBackupResponse {
  /**
   * cloud endpoint Name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudEndpointName?: string;
}

/** Pre Restore request object. */
export interface PreRestoreRequest {
  /** Pre Restore partition. */
  partition?: string;
  /** Pre Restore replica group. */
  replicaGroup?: string;
  /** Pre Restore request id. */
  requestId?: string;
  /** Pre Restore Azure file share uri. */
  azureFileShareUri?: string;
  /** Pre Restore Azure status. */
  status?: string;
  /** Pre Restore Azure source azure file share uri. */
  sourceAzureFileShareUri?: string;
  /** Pre Restore backup metadata property bag. */
  backupMetadataPropertyBag?: string;
  /** Pre Restore restore file spec array. */
  restoreFileSpec?: RestoreFileSpec[];
  /** Pre Restore pause wait for sync drain time period in seconds. */
  pauseWaitForSyncDrainTimePeriodInSeconds?: number;
}

/** Restore file spec. */
export interface RestoreFileSpec {
  /** Restore file spec path */
  path?: string;
  /** Restore file spec isdir */
  isdir?: boolean;
}

/** Post Restore Request */
export interface PostRestoreRequest {
  /** Post Restore partition. */
  partition?: string;
  /** Post Restore replica group. */
  replicaGroup?: string;
  /** Post Restore request id. */
  requestId?: string;
  /** Post Restore Azure file share uri. */
  azureFileShareUri?: string;
  /** Post Restore Azure status. */
  status?: string;
  /** Post Restore Azure source azure file share uri. */
  sourceAzureFileShareUri?: string;
  /** Post Restore Azure failed file list. */
  failedFileList?: string;
  /** Post Restore restore file spec array. */
  restoreFileSpec?: RestoreFileSpec[];
}

/** The parameters used when calling trigger change detection action on cloud endpoint. */
export interface TriggerChangeDetectionParameters {
  /** Relative path to a directory Azure File share for which change detection is to be performed. */
  directoryPath?: string;
  /** Change Detection Mode. Applies to a directory specified in directoryPath parameter. */
  changeDetectionMode?: ChangeDetectionMode;
  /** Array of relative paths on the Azure File share to be included in the change detection. Can be files and directories. */
  paths?: string[];
}

/** Server Endpoint sync status */
export interface ServerEndpointSyncStatus {
  /**
   * Download Health Status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly downloadHealth?: ServerEndpointHealthState;
  /**
   * Upload Health Status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uploadHealth?: ServerEndpointHealthState;
  /**
   * Combined Health Status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly combinedHealth?: ServerEndpointHealthState;
  /**
   * Sync activity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly syncActivity?: ServerEndpointSyncActivityState;
  /**
   * Total count of persistent files not syncing (combined upload + download).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalPersistentFilesNotSyncingCount?: number;
  /**
   * Last Updated Timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Upload Status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uploadStatus?: ServerEndpointSyncSessionStatus;
  /**
   * Download Status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly downloadStatus?: ServerEndpointSyncSessionStatus;
  /**
   * Upload sync activity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uploadActivity?: ServerEndpointSyncActivityStatus;
  /**
   * Download sync activity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly downloadActivity?: ServerEndpointSyncActivityStatus;
  /**
   * Offline Data Transfer State
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offlineDataTransferStatus?: ServerEndpointOfflineDataTransferState;
  /**
   * Background data download activity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backgroundDataDownloadActivity?: ServerEndpointBackgroundDataDownloadActivity;
}

/** Sync Session status object. */
export interface ServerEndpointSyncSessionStatus {
  /**
   * Last sync result (HResult)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSyncResult?: number;
  /**
   * Last sync timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSyncTimestamp?: Date;
  /**
   * Last sync success timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSyncSuccessTimestamp?: Date;
  /**
   * Last sync per item error count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSyncPerItemErrorCount?: number;
  /**
   * Count of persistent files not syncing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly persistentFilesNotSyncingCount?: number;
  /**
   * Count of transient files not syncing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transientFilesNotSyncingCount?: number;
  /**
   * Array of per-item errors coming from the last sync session.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly filesNotSyncingErrors?: ServerEndpointFilesNotSyncingError[];
  /**
   * Sync mode
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSyncMode?: ServerEndpointSyncMode;
}

/** Files not syncing error object */
export interface ServerEndpointFilesNotSyncingError {
  /**
   * Error code (HResult)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: number;
  /**
   * Count of persistent files not syncing with the specified error code
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly persistentCount?: number;
  /**
   * Count of transient files not syncing with the specified error code
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transientCount?: number;
}

/** Sync Session status object. */
export interface ServerEndpointSyncActivityStatus {
  /**
   * Timestamp when properties were updated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timestamp?: Date;
  /**
   * Per item error count
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly perItemErrorCount?: number;
  /**
   * Applied item count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appliedItemCount?: number;
  /**
   * Total item count (if available)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalItemCount?: number;
  /**
   * Applied bytes
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appliedBytes?: number;
  /**
   * Total bytes (if available)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalBytes?: number;
  /**
   * Sync mode
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly syncMode?: ServerEndpointSyncMode;
  /**
   * Session minutes remaining (if available)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sessionMinutesRemaining?: number;
}

/** Background data download activity object */
export interface ServerEndpointBackgroundDataDownloadActivity {
  /**
   * Timestamp when properties were updated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timestamp?: Date;
  /**
   * Timestamp when the operation started
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startedTimestamp?: Date;
  /**
   * Progress percentage
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly percentProgress?: number;
  /**
   * Running count of bytes downloaded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly downloadedBytes?: number;
}

/** Server endpoint cloud tiering status object. */
export interface ServerEndpointCloudTieringStatus {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Cloud tiering health state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ServerEndpointHealthState;
  /**
   * The last updated timestamp of health state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthLastUpdatedTimestamp?: Date;
  /**
   * Last cloud tiering result (HResult)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastCloudTieringResult?: number;
  /**
   * Last cloud tiering success timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessTimestamp?: Date;
  /**
   * Information regarding how much local space cloud tiering is saving.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spaceSavings?: CloudTieringSpaceSavings;
  /**
   * Information regarding how well the local cache on the server is performing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cachePerformance?: CloudTieringCachePerformance;
  /**
   * Information regarding files that failed to be tiered
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly filesNotTiering?: CloudTieringFilesNotTiering;
  /**
   * Status of the volume free space policy
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly volumeFreeSpacePolicyStatus?: CloudTieringVolumeFreeSpacePolicyStatus;
  /**
   * Status of the date policy
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly datePolicyStatus?: CloudTieringDatePolicyStatus;
}

/** Server endpoint cloud tiering status object. */
export interface CloudTieringSpaceSavings {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Volume size
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly volumeSizeBytes?: number;
  /**
   * Total size of content in the azure file share
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalSizeCloudBytes?: number;
  /**
   * Cached content size on the server
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cachedSizeBytes?: number;
  /**
   * Percentage of cached size over total size
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spaceSavingsPercent?: number;
  /**
   * Count of bytes saved on the server
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spaceSavingsBytes?: number;
}

/** Server endpoint cloud tiering status object. */
export interface CloudTieringCachePerformance {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Count of bytes that were served from the local server
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cacheHitBytes?: number;
  /**
   * Count of bytes that were served from the cloud
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cacheMissBytes?: number;
  /**
   * Percentage of total bytes (hit + miss) that were served from the local server
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cacheHitBytesPercent?: number;
}

/** Server endpoint cloud tiering status object. */
export interface CloudTieringFilesNotTiering {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Last cloud tiering result (HResult)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalFileCount?: number;
  /**
   * Array of tiering errors
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: FilesNotTieringError[];
}

/** Files not tiering error object */
export interface FilesNotTieringError {
  /**
   * Error code (HResult)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: number;
  /**
   * Count of files with this error
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileCount?: number;
}

/** Status of the volume free space policy */
export interface CloudTieringVolumeFreeSpacePolicyStatus {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveVolumeFreeSpacePolicy?: number;
  /**
   * Current volume free space percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentVolumeFreeSpacePercent?: number;
}

/** Status of the date policy */
export interface CloudTieringDatePolicyStatus {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Most recent access time of tiered files
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tieredFilesMostRecentAccessTimestamp?: Date;
}

/** Server endpoint recall status object. */
export interface ServerEndpointRecallStatus {
  /**
   * Last updated timestamp
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Total count of recall errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalRecallErrorsCount?: number;
  /**
   * Array of recall errors
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recallErrors?: ServerEndpointRecallError[];
}

/** Server endpoint recall error object */
export interface ServerEndpointRecallError {
  /**
   * Error code (HResult)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: number;
  /**
   * Count of occurences of the error
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly count?: number;
}

/** Parameters for updating an Server Endpoint. */
export interface ServerEndpointUpdateParameters {
  /** Cloud Tiering. */
  cloudTiering?: FeatureStatus;
  /** Level of free space to be maintained by Cloud Tiering if it is enabled. */
  volumeFreeSpacePercent?: number;
  /** Tier files older than days. */
  tierFilesOlderThanDays?: number;
  /** Offline data transfer */
  offlineDataTransfer?: FeatureStatus;
  /** Offline data transfer share name */
  offlineDataTransferShareName?: string;
  /** Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access. */
  localCacheMode?: LocalCacheMode;
}

/** Array of ServerEndpoint */
export interface ServerEndpointArray {
  /** Collection of ServerEndpoint. */
  value?: ServerEndpoint[];
}

/** The parameters used when calling recall action on server endpoint. */
export interface RecallActionParameters {
  /** Pattern of the files. */
  pattern?: string;
  /** Recall path. */
  recallPath?: string;
}

/** Array of RegisteredServer */
export interface RegisteredServerArray {
  /** Collection of Registered Server. */
  value?: RegisteredServer[];
}

/** Trigger Rollover Request. */
export interface TriggerRolloverRequest {
  /** Certificate Data */
  serverCertificate?: string;
}

/** Array of Workflow */
export interface WorkflowArray {
  /** Collection of workflow items. */
  value?: Workflow[];
}

/** Operation status object */
export interface OperationStatus {
  /**
   * Operation Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Operation status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * Start time of the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * End time of the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * Error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: StorageSyncApiError;
}

/** Operation status object */
export interface LocationOperationStatus {
  /**
   * Operation resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Operation Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Operation status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * Start time of the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * End time of the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * Error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: StorageSyncApiError;
  /**
   * Percent complete.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly percentComplete?: number;
}

/** Subscription State object. */
export interface SubscriptionState {
  /** State of Azure Subscription */
  state?: Reason;
  /**
   * Is Transitioning
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly istransitioning?: boolean;
  /** Subscription state properties. */
  properties?: Record<string, unknown>;
}

/** Resource Move Info. */
export interface ResourcesMoveInfo {
  /** Target resource group. */
  targetResourceGroup?: string;
  /** Collection of Resources. */
  resources?: string[];
}

/** Operation Display Resource object. */
export interface OperationDisplayResource {
  /** Operation Display Resource Provider. */
  provider?: string;
  /** Operation Display Resource. */
  resource?: string;
  /** Operation Display Resource Operation. */
  operation?: string;
  /** Operation Display Resource Description. */
  description?: string;
}

/** The Private Endpoint Connection resource. */
export type PrivateEndpointConnection = Resource & {
  /** The resource of private end point. */
  privateEndpoint?: PrivateEndpoint;
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
};

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** A private link resource */
export type PrivateLinkResource = Resource & {
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /** The private link resource Private link DNS zone name. */
  requiredZoneNames?: string[];
};

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export type ProxyResource = Resource & {};

/** Storage Sync Service object. */
export type StorageSyncService = TrackedResource & {
  /** Incoming Traffic Policy */
  incomingTrafficPolicy?: IncomingTrafficPolicy;
  /**
   * Storage Sync service status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageSyncServiceStatus?: number;
  /**
   * Storage Sync service Uid
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageSyncServiceUid?: string;
  /**
   * StorageSyncService Provisioning State
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * StorageSyncService lastWorkflowId
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastOperationName?: string;
  /**
   * List of private endpoint connection associated with the specified storage sync service
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
};

/** Sync Group object. */
export type SyncGroup = ProxyResource & {
  /**
   * Unique Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uniqueId?: string;
  /**
   * Sync group status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly syncGroupStatus?: string;
};

/** The parameters used when creating a sync group. */
export type SyncGroupCreateParameters = ProxyResource & {
  /** The parameters used to create the sync group */
  properties?: Record<string, unknown>;
};

/** The parameters used when creating a cloud endpoint. */
export type CloudEndpointCreateParameters = ProxyResource & {
  /** Storage Account Resource Id */
  storageAccountResourceId?: string;
  /** Azure file share name */
  azureFileShareName?: string;
  /** Storage Account Tenant Id */
  storageAccountTenantId?: string;
  /** Friendly Name */
  friendlyName?: string;
};

/** Cloud Endpoint object. */
export type CloudEndpoint = ProxyResource & {
  /** Storage Account Resource Id */
  storageAccountResourceId?: string;
  /** Azure file share name */
  azureFileShareName?: string;
  /** Storage Account Tenant Id */
  storageAccountTenantId?: string;
  /** Partnership Id */
  partnershipId?: string;
  /** Friendly Name */
  friendlyName?: string;
  /**
   * Backup Enabled
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupEnabled?: string;
  /** CloudEndpoint Provisioning State */
  provisioningState?: string;
  /** CloudEndpoint lastWorkflowId */
  lastWorkflowId?: string;
  /** Resource Last Operation Name */
  lastOperationName?: string;
  /**
   * Cloud endpoint change enumeration status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly changeEnumerationStatus?: CloudEndpointChangeEnumerationStatus;
};

/** The parameters used when creating a server endpoint. */
export type ServerEndpointCreateParameters = ProxyResource & {
  /** Server Local path. */
  serverLocalPath?: string;
  /** Cloud Tiering. */
  cloudTiering?: FeatureStatus;
  /** Level of free space to be maintained by Cloud Tiering if it is enabled. */
  volumeFreeSpacePercent?: number;
  /** Tier files older than days. */
  tierFilesOlderThanDays?: number;
  /** Friendly Name */
  friendlyName?: string;
  /** Server Resource Id. */
  serverResourceId?: string;
  /** Offline data transfer */
  offlineDataTransfer?: FeatureStatus;
  /** Offline data transfer share name */
  offlineDataTransferShareName?: string;
  /** Policy for how namespace and files are recalled during FastDr. */
  initialDownloadPolicy?: InitialDownloadPolicy;
  /** Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access. */
  localCacheMode?: LocalCacheMode;
  /** Policy for how the initial upload sync session is performed. */
  initialUploadPolicy?: InitialUploadPolicy;
};

/** Server Endpoint object. */
export type ServerEndpoint = ProxyResource & {
  /** Server Local path. */
  serverLocalPath?: string;
  /** Cloud Tiering. */
  cloudTiering?: FeatureStatus;
  /** Level of free space to be maintained by Cloud Tiering if it is enabled. */
  volumeFreeSpacePercent?: number;
  /** Tier files older than days. */
  tierFilesOlderThanDays?: number;
  /** Friendly Name */
  friendlyName?: string;
  /** Server Resource Id. */
  serverResourceId?: string;
  /**
   * ServerEndpoint Provisioning State
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * ServerEndpoint lastWorkflowId
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastOperationName?: string;
  /**
   * Server Endpoint sync status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly syncStatus?: ServerEndpointSyncStatus;
  /** Offline data transfer */
  offlineDataTransfer?: FeatureStatus;
  /**
   * Offline data transfer storage account resource ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offlineDataTransferStorageAccountResourceId?: string;
  /**
   * Offline data transfer storage account tenant ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offlineDataTransferStorageAccountTenantId?: string;
  /** Offline data transfer share name */
  offlineDataTransferShareName?: string;
  /**
   * Cloud tiering status. Only populated if cloud tiering is enabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudTieringStatus?: ServerEndpointCloudTieringStatus;
  /**
   * Recall status. Only populated if cloud tiering is enabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recallStatus?: ServerEndpointRecallStatus;
  /** Policy for how namespace and files are recalled during FastDr. */
  initialDownloadPolicy?: InitialDownloadPolicy;
  /** Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access. */
  localCacheMode?: LocalCacheMode;
  /** Policy for how the initial upload sync session is performed. */
  initialUploadPolicy?: InitialUploadPolicy;
  /**
   * Server name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverName?: string;
};

/** Registered Server resource. */
export type RegisteredServer = ProxyResource & {
  /** Registered Server Certificate */
  serverCertificate?: string;
  /** Registered Server Agent Version */
  agentVersion?: string;
  /**
   * Registered Server Agent Version Status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentVersionStatus?: RegisteredServerAgentVersionStatus;
  /**
   * Registered Server Agent Version Expiration Date
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentVersionExpirationDate?: Date;
  /** Registered Server OS Version */
  serverOSVersion?: string;
  /** Registered Server Management Error Code */
  serverManagementErrorCode?: number;
  /** Registered Server last heart beat */
  lastHeartBeat?: string;
  /** Registered Server Provisioning State */
  provisioningState?: string;
  /** Registered Server serverRole */
  serverRole?: string;
  /** Registered Server clusterId */
  clusterId?: string;
  /** Registered Server clusterName */
  clusterName?: string;
  /** Registered Server serverId */
  serverId?: string;
  /** Registered Server storageSyncServiceUid */
  storageSyncServiceUid?: string;
  /** Registered Server lastWorkflowId */
  lastWorkflowId?: string;
  /** Resource Last Operation Name */
  lastOperationName?: string;
  /** Resource discoveryEndpointUri */
  discoveryEndpointUri?: string;
  /** Resource Location */
  resourceLocation?: string;
  /** Service Location */
  serviceLocation?: string;
  /** Friendly Name */
  friendlyName?: string;
  /** Management Endpoint Uri */
  managementEndpointUri?: string;
  /** Telemetry Endpoint Uri */
  monitoringEndpointUri?: string;
  /** Monitoring Configuration */
  monitoringConfiguration?: string;
  /**
   * Server name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverName?: string;
};

/** The parameters used when creating a registered server. */
export type RegisteredServerCreateParameters = ProxyResource & {
  /** Registered Server Certificate */
  serverCertificate?: string;
  /** Registered Server Agent Version */
  agentVersion?: string;
  /** Registered Server OS Version */
  serverOSVersion?: string;
  /** Registered Server last heart beat */
  lastHeartBeat?: string;
  /** Registered Server serverRole */
  serverRole?: string;
  /** Registered Server clusterId */
  clusterId?: string;
  /** Registered Server clusterName */
  clusterName?: string;
  /** Registered Server serverId */
  serverId?: string;
  /** Friendly Name */
  friendlyName?: string;
};

/** Workflow resource. */
export type Workflow = ProxyResource & {
  /** last step name */
  lastStepName?: string;
  /** workflow status. */
  status?: WorkflowStatus;
  /** operation direction. */
  operation?: OperationDirection;
  /** workflow steps */
  steps?: string;
  /** workflow last operation identifier. */
  lastOperationId?: string;
  /**
   * workflow command name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly commandName?: string;
  /**
   * workflow created timestamp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdTimestamp?: Date;
  /**
   * workflow last status timestamp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastStatusTimestamp?: Date;
};

/** Defines headers for Operations_list operation. */
export interface OperationsListHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for Operations_listNext operation. */
export interface OperationsListNextHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for StorageSyncServices_create operation. */
export interface StorageSyncServicesCreateHeaders {
  /** Operation Status Location URI */
  azureAsyncOperation?: string;
  /** Operation Status Location URI */
  location?: string;
  /** Retry After */
  retryAfter?: string;
  /** Request id */
  xMsRequestId?: string;
  /** correlation request id */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for StorageSyncServices_get operation. */
export interface StorageSyncServicesGetHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for StorageSyncServices_update operation. */
export interface StorageSyncServicesUpdateHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for StorageSyncServices_delete operation. */
export interface StorageSyncServicesDeleteHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for StorageSyncServices_listByResourceGroup operation. */
export interface StorageSyncServicesListByResourceGroupHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for StorageSyncServices_listBySubscription operation. */
export interface StorageSyncServicesListBySubscriptionHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for PrivateEndpointConnections_create operation. */
export interface PrivateEndpointConnectionsCreateHeaders {
  /** Operation Status Location URI */
  azureAsyncOperation?: string;
  /** Operation Status Location URI */
  location?: string;
  /** Retry After */
  retryAfter?: string;
  /** Request id */
  xMsRequestId?: string;
  /** correlation request id */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for PrivateEndpointConnections_delete operation. */
export interface PrivateEndpointConnectionsDeleteHeaders {
  /** Operation Status Location URI */
  azureAsyncOperation?: string;
  /** Operation Status Location URI */
  location?: string;
  /** Retry After */
  retryAfter?: string;
  /** Request id */
  xMsRequestId?: string;
  /** correlation request id */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for PrivateEndpointConnections_listByStorageSyncService operation. */
export interface PrivateEndpointConnectionsListByStorageSyncServiceHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for SyncGroups_listByStorageSyncService operation. */
export interface SyncGroupsListByStorageSyncServiceHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for SyncGroups_create operation. */
export interface SyncGroupsCreateHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for SyncGroups_get operation. */
export interface SyncGroupsGetHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for SyncGroups_delete operation. */
export interface SyncGroupsDeleteHeaders {
  /** Request id */
  xMsRequestId?: string;
  /** correlation request id */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_create operation. */
export interface CloudEndpointsCreateHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_get operation. */
export interface CloudEndpointsGetHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_delete operation. */
export interface CloudEndpointsDeleteHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_listBySyncGroup operation. */
export interface CloudEndpointsListBySyncGroupHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_preBackup operation. */
export interface CloudEndpointsPreBackupHeaders {
  /** Operation Status Location URI */
  location?: string;
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_postBackup operation. */
export interface CloudEndpointsPostBackupHeaders {
  /** Operation Status Location URI */
  location?: string;
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_preRestore operation. */
export interface CloudEndpointsPreRestoreHeaders {
  /** Operation Status Location URI */
  location?: string;
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_restoreheartbeat operation. */
export interface CloudEndpointsRestoreheartbeatHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_postRestore operation. */
export interface CloudEndpointsPostRestoreHeaders {
  /** Operation Status Location URI */
  location?: string;
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for CloudEndpoints_triggerChangeDetection operation. */
export interface CloudEndpointsTriggerChangeDetectionHeaders {
  /** Operation Status Location URI */
  location?: string;
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for ServerEndpoints_create operation. */
export interface ServerEndpointsCreateHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for ServerEndpoints_update operation. */
export interface ServerEndpointsUpdateHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for ServerEndpoints_get operation. */
export interface ServerEndpointsGetHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for ServerEndpoints_delete operation. */
export interface ServerEndpointsDeleteHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for ServerEndpoints_listBySyncGroup operation. */
export interface ServerEndpointsListBySyncGroupHeaders {
  /** Operation Status Location URI */
  location?: string;
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for ServerEndpoints_recallAction operation. */
export interface ServerEndpointsRecallActionHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for RegisteredServers_listByStorageSyncService operation. */
export interface RegisteredServersListByStorageSyncServiceHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for RegisteredServers_get operation. */
export interface RegisteredServersGetHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for RegisteredServers_create operation. */
export interface RegisteredServersCreateHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for RegisteredServers_delete operation. */
export interface RegisteredServersDeleteHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for RegisteredServers_triggerRollover operation. */
export interface RegisteredServersTriggerRolloverHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for Workflows_listByStorageSyncService operation. */
export interface WorkflowsListByStorageSyncServiceHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for Workflows_get operation. */
export interface WorkflowsGetHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for Workflows_abort operation. */
export interface WorkflowsAbortHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for OperationStatus_get operation. */
export interface OperationStatusGetHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Defines headers for MicrosoftStorageSync_locationOperationStatus operation. */
export interface MicrosoftStorageSyncLocationOperationStatusHeaders {
  /** request id. */
  xMsRequestId?: string;
  /** correlation request id. */
  xMsCorrelationRequestId?: string;
}

/** Known values of {@link IncomingTrafficPolicy} that the service accepts. */
export enum KnownIncomingTrafficPolicy {
  AllowAllTraffic = "AllowAllTraffic",
  AllowVirtualNetworksOnly = "AllowVirtualNetworksOnly"
}

/**
 * Defines values for IncomingTrafficPolicy. \
 * {@link KnownIncomingTrafficPolicy} can be used interchangeably with IncomingTrafficPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AllowAllTraffic** \
 * **AllowVirtualNetworksOnly**
 */
export type IncomingTrafficPolicy = string;

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export enum KnownPrivateEndpointServiceConnectionStatus {
  Pending = "Pending",
  Approved = "Approved",
  Rejected = "Rejected"
}

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected**
 */
export type PrivateEndpointServiceConnectionStatus = string;

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export enum KnownPrivateEndpointConnectionProvisioningState {
  Succeeded = "Succeeded",
  Creating = "Creating",
  Deleting = "Deleting",
  Failed = "Failed"
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export type PrivateEndpointConnectionProvisioningState = string;

/** Known values of {@link CloudEndpointChangeEnumerationActivityState} that the service accepts. */
export enum KnownCloudEndpointChangeEnumerationActivityState {
  InitialEnumerationInProgress = "InitialEnumerationInProgress",
  EnumerationInProgress = "EnumerationInProgress"
}

/**
 * Defines values for CloudEndpointChangeEnumerationActivityState. \
 * {@link KnownCloudEndpointChangeEnumerationActivityState} can be used interchangeably with CloudEndpointChangeEnumerationActivityState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InitialEnumerationInProgress** \
 * **EnumerationInProgress**
 */
export type CloudEndpointChangeEnumerationActivityState = string;

/** Known values of {@link CloudEndpointChangeEnumerationTotalCountsState} that the service accepts. */
export enum KnownCloudEndpointChangeEnumerationTotalCountsState {
  Calculating = "Calculating",
  Final = "Final"
}

/**
 * Defines values for CloudEndpointChangeEnumerationTotalCountsState. \
 * {@link KnownCloudEndpointChangeEnumerationTotalCountsState} can be used interchangeably with CloudEndpointChangeEnumerationTotalCountsState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Calculating** \
 * **Final**
 */
export type CloudEndpointChangeEnumerationTotalCountsState = string;

/** Known values of {@link ChangeDetectionMode} that the service accepts. */
export enum KnownChangeDetectionMode {
  Default = "Default",
  Recursive = "Recursive"
}

/**
 * Defines values for ChangeDetectionMode. \
 * {@link KnownChangeDetectionMode} can be used interchangeably with ChangeDetectionMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **Recursive**
 */
export type ChangeDetectionMode = string;

/** Known values of {@link FeatureStatus} that the service accepts. */
export enum KnownFeatureStatus {
  On = "on",
  Off = "off"
}

/**
 * Defines values for FeatureStatus. \
 * {@link KnownFeatureStatus} can be used interchangeably with FeatureStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **on** \
 * **off**
 */
export type FeatureStatus = string;

/** Known values of {@link InitialDownloadPolicy} that the service accepts. */
export enum KnownInitialDownloadPolicy {
  NamespaceOnly = "NamespaceOnly",
  NamespaceThenModifiedFiles = "NamespaceThenModifiedFiles",
  AvoidTieredFiles = "AvoidTieredFiles"
}

/**
 * Defines values for InitialDownloadPolicy. \
 * {@link KnownInitialDownloadPolicy} can be used interchangeably with InitialDownloadPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NamespaceOnly** \
 * **NamespaceThenModifiedFiles** \
 * **AvoidTieredFiles**
 */
export type InitialDownloadPolicy = string;

/** Known values of {@link LocalCacheMode} that the service accepts. */
export enum KnownLocalCacheMode {
  DownloadNewAndModifiedFiles = "DownloadNewAndModifiedFiles",
  UpdateLocallyCachedFiles = "UpdateLocallyCachedFiles"
}

/**
 * Defines values for LocalCacheMode. \
 * {@link KnownLocalCacheMode} can be used interchangeably with LocalCacheMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DownloadNewAndModifiedFiles** \
 * **UpdateLocallyCachedFiles**
 */
export type LocalCacheMode = string;

/** Known values of {@link InitialUploadPolicy} that the service accepts. */
export enum KnownInitialUploadPolicy {
  ServerAuthoritative = "ServerAuthoritative",
  Merge = "Merge"
}

/**
 * Defines values for InitialUploadPolicy. \
 * {@link KnownInitialUploadPolicy} can be used interchangeably with InitialUploadPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ServerAuthoritative** \
 * **Merge**
 */
export type InitialUploadPolicy = string;

/** Known values of {@link ServerEndpointHealthState} that the service accepts. */
export enum KnownServerEndpointHealthState {
  Unavailable = "Unavailable",
  Healthy = "Healthy",
  Error = "Error"
}

/**
 * Defines values for ServerEndpointHealthState. \
 * {@link KnownServerEndpointHealthState} can be used interchangeably with ServerEndpointHealthState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unavailable** \
 * **Healthy** \
 * **Error**
 */
export type ServerEndpointHealthState = string;

/** Known values of {@link ServerEndpointSyncActivityState} that the service accepts. */
export enum KnownServerEndpointSyncActivityState {
  Upload = "Upload",
  Download = "Download",
  UploadAndDownload = "UploadAndDownload"
}

/**
 * Defines values for ServerEndpointSyncActivityState. \
 * {@link KnownServerEndpointSyncActivityState} can be used interchangeably with ServerEndpointSyncActivityState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upload** \
 * **Download** \
 * **UploadAndDownload**
 */
export type ServerEndpointSyncActivityState = string;

/** Known values of {@link ServerEndpointSyncMode} that the service accepts. */
export enum KnownServerEndpointSyncMode {
  Regular = "Regular",
  NamespaceDownload = "NamespaceDownload",
  InitialUpload = "InitialUpload",
  SnapshotUpload = "SnapshotUpload",
  InitialFullDownload = "InitialFullDownload"
}

/**
 * Defines values for ServerEndpointSyncMode. \
 * {@link KnownServerEndpointSyncMode} can be used interchangeably with ServerEndpointSyncMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Regular** \
 * **NamespaceDownload** \
 * **InitialUpload** \
 * **SnapshotUpload** \
 * **InitialFullDownload**
 */
export type ServerEndpointSyncMode = string;

/** Known values of {@link ServerEndpointOfflineDataTransferState} that the service accepts. */
export enum KnownServerEndpointOfflineDataTransferState {
  InProgress = "InProgress",
  Stopping = "Stopping",
  NotRunning = "NotRunning",
  Complete = "Complete"
}

/**
 * Defines values for ServerEndpointOfflineDataTransferState. \
 * {@link KnownServerEndpointOfflineDataTransferState} can be used interchangeably with ServerEndpointOfflineDataTransferState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InProgress** \
 * **Stopping** \
 * **NotRunning** \
 * **Complete**
 */
export type ServerEndpointOfflineDataTransferState = string;

/** Known values of {@link RegisteredServerAgentVersionStatus} that the service accepts. */
export enum KnownRegisteredServerAgentVersionStatus {
  Ok = "Ok",
  NearExpiry = "NearExpiry",
  Expired = "Expired",
  Blocked = "Blocked"
}

/**
 * Defines values for RegisteredServerAgentVersionStatus. \
 * {@link KnownRegisteredServerAgentVersionStatus} can be used interchangeably with RegisteredServerAgentVersionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Ok** \
 * **NearExpiry** \
 * **Expired** \
 * **Blocked**
 */
export type RegisteredServerAgentVersionStatus = string;

/** Known values of {@link WorkflowStatus} that the service accepts. */
export enum KnownWorkflowStatus {
  Active = "active",
  Expired = "expired",
  Succeeded = "succeeded",
  Aborted = "aborted",
  Failed = "failed"
}

/**
 * Defines values for WorkflowStatus. \
 * {@link KnownWorkflowStatus} can be used interchangeably with WorkflowStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **expired** \
 * **succeeded** \
 * **aborted** \
 * **failed**
 */
export type WorkflowStatus = string;

/** Known values of {@link OperationDirection} that the service accepts. */
export enum KnownOperationDirection {
  Do = "do",
  Undo = "undo",
  Cancel = "cancel"
}

/**
 * Defines values for OperationDirection. \
 * {@link KnownOperationDirection} can be used interchangeably with OperationDirection,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **do** \
 * **undo** \
 * **cancel**
 */
export type OperationDirection = string;

/** Known values of {@link Reason} that the service accepts. */
export enum KnownReason {
  Registered = "Registered",
  Unregistered = "Unregistered",
  Warned = "Warned",
  Suspended = "Suspended",
  Deleted = "Deleted"
}

/**
 * Defines values for Reason. \
 * {@link KnownReason} can be used interchangeably with Reason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Registered** \
 * **Unregistered** \
 * **Warned** \
 * **Suspended** \
 * **Deleted**
 */
export type Reason = string;

/** Known values of {@link ProgressType} that the service accepts. */
export enum KnownProgressType {
  None = "none",
  Initialize = "initialize",
  Download = "download",
  Upload = "upload",
  Recall = "recall"
}

/**
 * Defines values for ProgressType. \
 * {@link KnownProgressType} can be used interchangeably with ProgressType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **none** \
 * **initialize** \
 * **download** \
 * **upload** \
 * **recall**
 */
export type ProgressType = string;
/** Defines values for NameAvailabilityReason. */
export type NameAvailabilityReason = "Invalid" | "AlreadyExists";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationsListHeaders &
  OperationEntityListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationsListNextHeaders &
  OperationEntityListResult;

/** Optional parameters. */
export interface StorageSyncServicesCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type StorageSyncServicesCheckNameAvailabilityResponse = CheckNameAvailabilityResult;

/** Optional parameters. */
export interface StorageSyncServicesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type StorageSyncServicesCreateResponse = StorageSyncService;

/** Optional parameters. */
export interface StorageSyncServicesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StorageSyncServicesGetResponse = StorageSyncServicesGetHeaders &
  StorageSyncService;

/** Optional parameters. */
export interface StorageSyncServicesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Storage Sync Service resource. */
  parameters?: StorageSyncServiceUpdateParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type StorageSyncServicesUpdateResponse = StorageSyncServicesUpdateHeaders &
  StorageSyncService;

/** Optional parameters. */
export interface StorageSyncServicesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type StorageSyncServicesDeleteResponse = StorageSyncServicesDeleteHeaders;

/** Optional parameters. */
export interface StorageSyncServicesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type StorageSyncServicesListByResourceGroupResponse = StorageSyncServicesListByResourceGroupHeaders &
  StorageSyncServiceArray;

/** Optional parameters. */
export interface StorageSyncServicesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type StorageSyncServicesListBySubscriptionResponse = StorageSyncServicesListBySubscriptionHeaders &
  StorageSyncServiceArray;

/** Optional parameters. */
export interface PrivateLinkResourcesListByStorageSyncServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByStorageSyncService operation. */
export type PrivateLinkResourcesListByStorageSyncServiceResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type PrivateEndpointConnectionsCreateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateEndpointConnectionsListByStorageSyncServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByStorageSyncService operation. */
export type PrivateEndpointConnectionsListByStorageSyncServiceResponse = PrivateEndpointConnectionsListByStorageSyncServiceHeaders &
  PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface SyncGroupsListByStorageSyncServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByStorageSyncService operation. */
export type SyncGroupsListByStorageSyncServiceResponse = SyncGroupsListByStorageSyncServiceHeaders &
  SyncGroupArray;

/** Optional parameters. */
export interface SyncGroupsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type SyncGroupsCreateResponse = SyncGroupsCreateHeaders & SyncGroup;

/** Optional parameters. */
export interface SyncGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SyncGroupsGetResponse = SyncGroupsGetHeaders & SyncGroup;

/** Optional parameters. */
export interface SyncGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type SyncGroupsDeleteResponse = SyncGroupsDeleteHeaders;

/** Optional parameters. */
export interface CloudEndpointsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type CloudEndpointsCreateResponse = CloudEndpointsCreateHeaders &
  CloudEndpoint;

/** Optional parameters. */
export interface CloudEndpointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CloudEndpointsGetResponse = CloudEndpointsGetHeaders &
  CloudEndpoint;

/** Optional parameters. */
export interface CloudEndpointsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type CloudEndpointsDeleteResponse = CloudEndpointsDeleteHeaders;

/** Optional parameters. */
export interface CloudEndpointsListBySyncGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySyncGroup operation. */
export type CloudEndpointsListBySyncGroupResponse = CloudEndpointsListBySyncGroupHeaders &
  CloudEndpointArray;

/** Optional parameters. */
export interface CloudEndpointsPreBackupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the preBackup operation. */
export type CloudEndpointsPreBackupResponse = CloudEndpointsPreBackupHeaders;

/** Optional parameters. */
export interface CloudEndpointsPostBackupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the postBackup operation. */
export type CloudEndpointsPostBackupResponse = CloudEndpointsPostBackupHeaders &
  PostBackupResponse;

/** Optional parameters. */
export interface CloudEndpointsPreRestoreOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CloudEndpointsRestoreheartbeatOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the restoreheartbeat operation. */
export type CloudEndpointsRestoreheartbeatResponse = CloudEndpointsRestoreheartbeatHeaders;

/** Optional parameters. */
export interface CloudEndpointsPostRestoreOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CloudEndpointsTriggerChangeDetectionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ServerEndpointsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ServerEndpointsCreateResponse = ServerEndpointsCreateHeaders &
  ServerEndpoint;

/** Optional parameters. */
export interface ServerEndpointsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Any of the properties applicable in PUT request. */
  parameters?: ServerEndpointUpdateParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ServerEndpointsUpdateResponse = ServerEndpointsUpdateHeaders &
  ServerEndpoint;

/** Optional parameters. */
export interface ServerEndpointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ServerEndpointsGetResponse = ServerEndpointsGetHeaders &
  ServerEndpoint;

/** Optional parameters. */
export interface ServerEndpointsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ServerEndpointsDeleteResponse = ServerEndpointsDeleteHeaders;

/** Optional parameters. */
export interface ServerEndpointsListBySyncGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySyncGroup operation. */
export type ServerEndpointsListBySyncGroupResponse = ServerEndpointsListBySyncGroupHeaders &
  ServerEndpointArray;

/** Optional parameters. */
export interface ServerEndpointsRecallActionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the recallAction operation. */
export type ServerEndpointsRecallActionResponse = ServerEndpointsRecallActionHeaders;

/** Optional parameters. */
export interface RegisteredServersListByStorageSyncServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByStorageSyncService operation. */
export type RegisteredServersListByStorageSyncServiceResponse = RegisteredServersListByStorageSyncServiceHeaders &
  RegisteredServerArray;

/** Optional parameters. */
export interface RegisteredServersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RegisteredServersGetResponse = RegisteredServersGetHeaders &
  RegisteredServer;

/** Optional parameters. */
export interface RegisteredServersCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type RegisteredServersCreateResponse = RegisteredServersCreateHeaders &
  RegisteredServer;

/** Optional parameters. */
export interface RegisteredServersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type RegisteredServersDeleteResponse = RegisteredServersDeleteHeaders;

/** Optional parameters. */
export interface RegisteredServersTriggerRolloverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the triggerRollover operation. */
export type RegisteredServersTriggerRolloverResponse = RegisteredServersTriggerRolloverHeaders;

/** Optional parameters. */
export interface WorkflowsListByStorageSyncServiceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByStorageSyncService operation. */
export type WorkflowsListByStorageSyncServiceResponse = WorkflowsListByStorageSyncServiceHeaders &
  WorkflowArray;

/** Optional parameters. */
export interface WorkflowsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkflowsGetResponse = WorkflowsGetHeaders & Workflow;

/** Optional parameters. */
export interface WorkflowsAbortOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the abort operation. */
export type WorkflowsAbortResponse = WorkflowsAbortHeaders;

/** Optional parameters. */
export interface OperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationStatusGetResponse = OperationStatusGetHeaders &
  OperationStatus;

/** Optional parameters. */
export interface LocationOperationStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the locationOperationStatus operation. */
export type LocationOperationStatusResponse = MicrosoftStorageSyncLocationOperationStatusHeaders &
  LocationOperationStatus;

/** Optional parameters. */
export interface MicrosoftStorageSyncOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
