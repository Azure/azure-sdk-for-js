/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const StorageSyncErrorDetails: msRest.CompositeMapper = {
  serializedName: "StorageSyncErrorDetails",
  type: {
    name: "Composite",
    className: "StorageSyncErrorDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncApiError: msRest.CompositeMapper = {
  serializedName: "StorageSyncApiError",
  type: {
    name: "Composite",
    className: "StorageSyncApiError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "StorageSyncErrorDetails"
        }
      }
    }
  }
};

export const StorageSyncError: msRest.CompositeMapper = {
  serializedName: "StorageSyncError",
  type: {
    name: "Composite",
    className: "StorageSyncError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "StorageSyncApiError"
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "StorageSyncApiError"
        }
      }
    }
  }
};

export const SubscriptionState: msRest.CompositeMapper = {
  serializedName: "SubscriptionState",
  type: {
    name: "Composite",
    className: "SubscriptionState",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      istransitioning: {
        readOnly: true,
        serializedName: "istransitioning",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncService: msRest.CompositeMapper = {
  serializedName: "StorageSyncService",
  type: {
    name: "Composite",
    className: "StorageSyncService",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      storageSyncServiceStatus: {
        readOnly: true,
        serializedName: "properties.storageSyncServiceStatus",
        type: {
          name: "Number"
        }
      },
      storageSyncServiceUid: {
        readOnly: true,
        serializedName: "properties.storageSyncServiceUid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const SyncGroup: msRest.CompositeMapper = {
  serializedName: "SyncGroup",
  type: {
    name: "Composite",
    className: "SyncGroup",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      uniqueId: {
        readOnly: true,
        serializedName: "properties.uniqueId",
        type: {
          name: "String"
        }
      },
      syncGroupStatus: {
        readOnly: true,
        serializedName: "properties.syncGroupStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpoint: msRest.CompositeMapper = {
  serializedName: "CloudEndpoint",
  type: {
    name: "Composite",
    className: "CloudEndpoint",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      storageAccountResourceId: {
        serializedName: "properties.storageAccountResourceId",
        type: {
          name: "String"
        }
      },
      azureFileShareName: {
        serializedName: "properties.azureFileShareName",
        type: {
          name: "String"
        }
      },
      storageAccountTenantId: {
        serializedName: "properties.storageAccountTenantId",
        type: {
          name: "String"
        }
      },
      partnershipId: {
        serializedName: "properties.partnershipId",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      backupEnabled: {
        readOnly: true,
        serializedName: "properties.backupEnabled",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      lastWorkflowId: {
        serializedName: "properties.lastWorkflowId",
        type: {
          name: "String"
        }
      },
      lastOperationName: {
        serializedName: "properties.lastOperationName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TriggerChangeDetectionParameters: msRest.CompositeMapper = {
  serializedName: "TriggerChangeDetectionParameters",
  type: {
    name: "Composite",
    className: "TriggerChangeDetectionParameters",
    modelProperties: {
      directoryPath: {
        serializedName: "directoryPath",
        type: {
          name: "String"
        }
      },
      changeDetectionMode: {
        serializedName: "changeDetectionMode",
        type: {
          name: "String"
        }
      },
      paths: {
        serializedName: "paths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RecallActionParameters: msRest.CompositeMapper = {
  serializedName: "RecallActionParameters",
  type: {
    name: "Composite",
    className: "RecallActionParameters",
    modelProperties: {
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      recallPath: {
        serializedName: "recallPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncServiceCreateParameters: msRest.CompositeMapper = {
  serializedName: "StorageSyncServiceCreateParameters",
  type: {
    name: "Composite",
    className: "StorageSyncServiceCreateParameters",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const SyncGroupCreateParameters: msRest.CompositeMapper = {
  serializedName: "SyncGroupCreateParameters",
  type: {
    name: "Composite",
    className: "SyncGroupCreateParameters",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const CloudEndpointCreateParameters: msRest.CompositeMapper = {
  serializedName: "CloudEndpointCreateParameters",
  type: {
    name: "Composite",
    className: "CloudEndpointCreateParameters",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      storageAccountResourceId: {
        serializedName: "properties.storageAccountResourceId",
        type: {
          name: "String"
        }
      },
      azureFileShareName: {
        serializedName: "properties.azureFileShareName",
        type: {
          name: "String"
        }
      },
      storageAccountTenantId: {
        serializedName: "properties.storageAccountTenantId",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointCreateParameters: msRest.CompositeMapper = {
  serializedName: "ServerEndpointCreateParameters",
  type: {
    name: "Composite",
    className: "ServerEndpointCreateParameters",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      serverLocalPath: {
        serializedName: "properties.serverLocalPath",
        type: {
          name: "String"
        }
      },
      cloudTiering: {
        serializedName: "properties.cloudTiering",
        type: {
          name: "String"
        }
      },
      volumeFreeSpacePercent: {
        serializedName: "properties.volumeFreeSpacePercent",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      tierFilesOlderThanDays: {
        serializedName: "properties.tierFilesOlderThanDays",
        constraints: {
          InclusiveMaximum: 2147483647,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      serverResourceId: {
        serializedName: "properties.serverResourceId",
        type: {
          name: "String"
        }
      },
      offlineDataTransfer: {
        serializedName: "properties.offlineDataTransfer",
        type: {
          name: "String"
        }
      },
      offlineDataTransferShareName: {
        serializedName: "properties.offlineDataTransferShareName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TriggerRolloverRequest: msRest.CompositeMapper = {
  serializedName: "TriggerRolloverRequest",
  type: {
    name: "Composite",
    className: "TriggerRolloverRequest",
    modelProperties: {
      serverCertificate: {
        serializedName: "serverCertificate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegisteredServerCreateParameters: msRest.CompositeMapper = {
  serializedName: "RegisteredServerCreateParameters",
  type: {
    name: "Composite",
    className: "RegisteredServerCreateParameters",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      serverCertificate: {
        serializedName: "properties.serverCertificate",
        type: {
          name: "String"
        }
      },
      agentVersion: {
        serializedName: "properties.agentVersion",
        type: {
          name: "String"
        }
      },
      serverOSVersion: {
        serializedName: "properties.serverOSVersion",
        type: {
          name: "String"
        }
      },
      lastHeartBeat: {
        serializedName: "properties.lastHeartBeat",
        type: {
          name: "String"
        }
      },
      serverRole: {
        serializedName: "properties.serverRole",
        type: {
          name: "String"
        }
      },
      clusterId: {
        serializedName: "properties.clusterId",
        type: {
          name: "String"
        }
      },
      clusterName: {
        serializedName: "properties.clusterName",
        type: {
          name: "String"
        }
      },
      serverId: {
        serializedName: "properties.serverId",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointUpdateParameters: msRest.CompositeMapper = {
  serializedName: "ServerEndpointUpdateParameters",
  type: {
    name: "Composite",
    className: "ServerEndpointUpdateParameters",
    modelProperties: {
      cloudTiering: {
        serializedName: "properties.cloudTiering",
        type: {
          name: "String"
        }
      },
      volumeFreeSpacePercent: {
        serializedName: "properties.volumeFreeSpacePercent",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      tierFilesOlderThanDays: {
        serializedName: "properties.tierFilesOlderThanDays",
        constraints: {
          InclusiveMaximum: 2147483647,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      offlineDataTransfer: {
        serializedName: "properties.offlineDataTransfer",
        type: {
          name: "String"
        }
      },
      offlineDataTransferShareName: {
        serializedName: "properties.offlineDataTransferShareName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointFilesNotSyncingError: msRest.CompositeMapper = {
  serializedName: "ServerEndpointFilesNotSyncingError",
  type: {
    name: "Composite",
    className: "ServerEndpointFilesNotSyncingError",
    modelProperties: {
      errorCode: {
        readOnly: true,
        serializedName: "errorCode",
        type: {
          name: "Number"
        }
      },
      persistentCount: {
        readOnly: true,
        serializedName: "persistentCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      transientCount: {
        readOnly: true,
        serializedName: "transientCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerEndpointSyncSessionStatus: msRest.CompositeMapper = {
  serializedName: "ServerEndpointSyncSessionStatus",
  type: {
    name: "Composite",
    className: "ServerEndpointSyncSessionStatus",
    modelProperties: {
      lastSyncResult: {
        readOnly: true,
        serializedName: "lastSyncResult",
        type: {
          name: "Number"
        }
      },
      lastSyncTimestamp: {
        readOnly: true,
        serializedName: "lastSyncTimestamp",
        type: {
          name: "DateTime"
        }
      },
      lastSyncSuccessTimestamp: {
        readOnly: true,
        serializedName: "lastSyncSuccessTimestamp",
        type: {
          name: "DateTime"
        }
      },
      lastSyncPerItemErrorCount: {
        readOnly: true,
        serializedName: "lastSyncPerItemErrorCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      persistentFilesNotSyncingCount: {
        readOnly: true,
        serializedName: "persistentFilesNotSyncingCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      transientFilesNotSyncingCount: {
        readOnly: true,
        serializedName: "transientFilesNotSyncingCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      filesNotSyncingErrors: {
        readOnly: true,
        serializedName: "filesNotSyncingErrors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerEndpointFilesNotSyncingError"
            }
          }
        }
      }
    }
  }
};

export const ServerEndpointSyncActivityStatus: msRest.CompositeMapper = {
  serializedName: "ServerEndpointSyncActivityStatus",
  type: {
    name: "Composite",
    className: "ServerEndpointSyncActivityStatus",
    modelProperties: {
      timestamp: {
        readOnly: true,
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      perItemErrorCount: {
        readOnly: true,
        serializedName: "perItemErrorCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      appliedItemCount: {
        readOnly: true,
        serializedName: "appliedItemCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      totalItemCount: {
        readOnly: true,
        serializedName: "totalItemCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      appliedBytes: {
        readOnly: true,
        serializedName: "appliedBytes",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      totalBytes: {
        readOnly: true,
        serializedName: "totalBytes",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerEndpointSyncStatus: msRest.CompositeMapper = {
  serializedName: "ServerEndpointSyncStatus",
  type: {
    name: "Composite",
    className: "ServerEndpointSyncStatus",
    modelProperties: {
      downloadHealth: {
        readOnly: true,
        serializedName: "downloadHealth",
        type: {
          name: "String"
        }
      },
      uploadHealth: {
        readOnly: true,
        serializedName: "uploadHealth",
        type: {
          name: "String"
        }
      },
      combinedHealth: {
        readOnly: true,
        serializedName: "combinedHealth",
        type: {
          name: "String"
        }
      },
      syncActivity: {
        readOnly: true,
        serializedName: "syncActivity",
        type: {
          name: "String"
        }
      },
      totalPersistentFilesNotSyncingCount: {
        readOnly: true,
        serializedName: "totalPersistentFilesNotSyncingCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      lastUpdatedTimestamp: {
        readOnly: true,
        serializedName: "lastUpdatedTimestamp",
        type: {
          name: "DateTime"
        }
      },
      uploadStatus: {
        readOnly: true,
        serializedName: "uploadStatus",
        type: {
          name: "Composite",
          className: "ServerEndpointSyncSessionStatus"
        }
      },
      downloadStatus: {
        readOnly: true,
        serializedName: "downloadStatus",
        type: {
          name: "Composite",
          className: "ServerEndpointSyncSessionStatus"
        }
      },
      uploadActivity: {
        readOnly: true,
        serializedName: "uploadActivity",
        type: {
          name: "Composite",
          className: "ServerEndpointSyncActivityStatus"
        }
      },
      downloadActivity: {
        readOnly: true,
        serializedName: "downloadActivity",
        type: {
          name: "Composite",
          className: "ServerEndpointSyncActivityStatus"
        }
      },
      offlineDataTransferStatus: {
        readOnly: true,
        serializedName: "offlineDataTransferStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointCloudTieringStatus: msRest.CompositeMapper = {
  serializedName: "ServerEndpointCloudTieringStatus",
  type: {
    name: "Composite",
    className: "ServerEndpointCloudTieringStatus",
    modelProperties: {
      health: {
        readOnly: true,
        serializedName: "health",
        type: {
          name: "String"
        }
      },
      lastUpdatedTimestamp: {
        readOnly: true,
        serializedName: "lastUpdatedTimestamp",
        type: {
          name: "DateTime"
        }
      },
      lastCloudTieringResult: {
        readOnly: true,
        serializedName: "lastCloudTieringResult",
        type: {
          name: "Number"
        }
      },
      lastSuccessTimestamp: {
        readOnly: true,
        serializedName: "lastSuccessTimestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ServerEndpointRecallError: msRest.CompositeMapper = {
  serializedName: "ServerEndpointRecallError",
  type: {
    name: "Composite",
    className: "ServerEndpointRecallError",
    modelProperties: {
      errorCode: {
        readOnly: true,
        serializedName: "errorCode",
        type: {
          name: "Number"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServerEndpointRecallStatus: msRest.CompositeMapper = {
  serializedName: "ServerEndpointRecallStatus",
  type: {
    name: "Composite",
    className: "ServerEndpointRecallStatus",
    modelProperties: {
      lastUpdatedTimestamp: {
        readOnly: true,
        serializedName: "lastUpdatedTimestamp",
        type: {
          name: "DateTime"
        }
      },
      totalRecallErrorsCount: {
        readOnly: true,
        serializedName: "totalRecallErrorsCount",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      recallErrors: {
        readOnly: true,
        serializedName: "recallErrors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerEndpointRecallError"
            }
          }
        }
      }
    }
  }
};

export const ServerEndpoint: msRest.CompositeMapper = {
  serializedName: "ServerEndpoint",
  type: {
    name: "Composite",
    className: "ServerEndpoint",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      serverLocalPath: {
        serializedName: "properties.serverLocalPath",
        type: {
          name: "String"
        }
      },
      cloudTiering: {
        serializedName: "properties.cloudTiering",
        type: {
          name: "String"
        }
      },
      volumeFreeSpacePercent: {
        serializedName: "properties.volumeFreeSpacePercent",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      tierFilesOlderThanDays: {
        serializedName: "properties.tierFilesOlderThanDays",
        constraints: {
          InclusiveMaximum: 2147483647,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      serverResourceId: {
        serializedName: "properties.serverResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      lastWorkflowId: {
        readOnly: true,
        serializedName: "properties.lastWorkflowId",
        type: {
          name: "String"
        }
      },
      lastOperationName: {
        readOnly: true,
        serializedName: "properties.lastOperationName",
        type: {
          name: "String"
        }
      },
      syncStatus: {
        readOnly: true,
        serializedName: "properties.syncStatus",
        type: {
          name: "Composite",
          className: "ServerEndpointSyncStatus"
        }
      },
      offlineDataTransfer: {
        serializedName: "properties.offlineDataTransfer",
        type: {
          name: "String"
        }
      },
      offlineDataTransferStorageAccountResourceId: {
        readOnly: true,
        serializedName: "properties.offlineDataTransferStorageAccountResourceId",
        type: {
          name: "String"
        }
      },
      offlineDataTransferStorageAccountTenantId: {
        readOnly: true,
        serializedName: "properties.offlineDataTransferStorageAccountTenantId",
        type: {
          name: "String"
        }
      },
      offlineDataTransferShareName: {
        serializedName: "properties.offlineDataTransferShareName",
        type: {
          name: "String"
        }
      },
      cloudTieringStatus: {
        readOnly: true,
        serializedName: "properties.cloudTieringStatus",
        type: {
          name: "Composite",
          className: "ServerEndpointCloudTieringStatus"
        }
      },
      recallStatus: {
        readOnly: true,
        serializedName: "properties.recallStatus",
        type: {
          name: "Composite",
          className: "ServerEndpointRecallStatus"
        }
      }
    }
  }
};

export const RegisteredServer: msRest.CompositeMapper = {
  serializedName: "RegisteredServer",
  type: {
    name: "Composite",
    className: "RegisteredServer",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      serverCertificate: {
        serializedName: "properties.serverCertificate",
        type: {
          name: "String"
        }
      },
      agentVersion: {
        serializedName: "properties.agentVersion",
        type: {
          name: "String"
        }
      },
      serverOSVersion: {
        serializedName: "properties.serverOSVersion",
        type: {
          name: "String"
        }
      },
      serverManagementErrorCode: {
        serializedName: "properties.serverManagementErrorCode",
        type: {
          name: "Number"
        }
      },
      lastHeartBeat: {
        serializedName: "properties.lastHeartBeat",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      serverRole: {
        serializedName: "properties.serverRole",
        type: {
          name: "String"
        }
      },
      clusterId: {
        serializedName: "properties.clusterId",
        type: {
          name: "String"
        }
      },
      clusterName: {
        serializedName: "properties.clusterName",
        type: {
          name: "String"
        }
      },
      serverId: {
        serializedName: "properties.serverId",
        type: {
          name: "String"
        }
      },
      storageSyncServiceUid: {
        serializedName: "properties.storageSyncServiceUid",
        type: {
          name: "String"
        }
      },
      lastWorkflowId: {
        serializedName: "properties.lastWorkflowId",
        type: {
          name: "String"
        }
      },
      lastOperationName: {
        serializedName: "properties.lastOperationName",
        type: {
          name: "String"
        }
      },
      discoveryEndpointUri: {
        serializedName: "properties.discoveryEndpointUri",
        type: {
          name: "String"
        }
      },
      resourceLocation: {
        serializedName: "properties.resourceLocation",
        type: {
          name: "String"
        }
      },
      serviceLocation: {
        serializedName: "properties.serviceLocation",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      managementEndpointUri: {
        serializedName: "properties.managementEndpointUri",
        type: {
          name: "String"
        }
      },
      monitoringConfiguration: {
        serializedName: "properties.monitoringConfiguration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourcesMoveInfo: msRest.CompositeMapper = {
  serializedName: "ResourcesMoveInfo",
  type: {
    name: "Composite",
    className: "ResourcesMoveInfo",
    modelProperties: {
      targetResourceGroup: {
        serializedName: "targetResourceGroup",
        type: {
          name: "String"
        }
      },
      resources: {
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Workflow: msRest.CompositeMapper = {
  serializedName: "Workflow",
  type: {
    name: "Composite",
    className: "Workflow",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      lastStepName: {
        serializedName: "properties.lastStepName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "properties.operation",
        type: {
          name: "String"
        }
      },
      steps: {
        serializedName: "properties.steps",
        type: {
          name: "String"
        }
      },
      lastOperationId: {
        serializedName: "properties.lastOperationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplayInfo: msRest.CompositeMapper = {
  serializedName: "OperationDisplayInfo",
  type: {
    name: "Composite",
    className: "OperationDisplayInfo",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationEntity: msRest.CompositeMapper = {
  serializedName: "OperationEntity",
  type: {
    name: "Composite",
    className: "OperationEntity",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplayInfo"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplayResource: msRest.CompositeMapper = {
  serializedName: "OperationDisplayResource",
  type: {
    name: "Composite",
    className: "OperationDisplayResource",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityParameters: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityParameters",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityParameters",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'Microsoft.StorageSync/storageSyncServices',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResult: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityResult",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResult",
    modelProperties: {
      nameAvailable: {
        readOnly: true,
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        readOnly: true,
        serializedName: "reason",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "AlreadyExists"
          ]
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestoreFileSpec: msRest.CompositeMapper = {
  serializedName: "RestoreFileSpec",
  type: {
    name: "Composite",
    className: "RestoreFileSpec",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      isdir: {
        serializedName: "isdir",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PostRestoreRequest: msRest.CompositeMapper = {
  serializedName: "PostRestoreRequest",
  type: {
    name: "Composite",
    className: "PostRestoreRequest",
    modelProperties: {
      partition: {
        serializedName: "partition",
        type: {
          name: "String"
        }
      },
      replicaGroup: {
        serializedName: "replicaGroup",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      azureFileShareUri: {
        serializedName: "azureFileShareUri",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      sourceAzureFileShareUri: {
        serializedName: "sourceAzureFileShareUri",
        type: {
          name: "String"
        }
      },
      failedFileList: {
        serializedName: "failedFileList",
        type: {
          name: "String"
        }
      },
      restoreFileSpec: {
        serializedName: "restoreFileSpec",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RestoreFileSpec"
            }
          }
        }
      }
    }
  }
};

export const PreRestoreRequest: msRest.CompositeMapper = {
  serializedName: "PreRestoreRequest",
  type: {
    name: "Composite",
    className: "PreRestoreRequest",
    modelProperties: {
      partition: {
        serializedName: "partition",
        type: {
          name: "String"
        }
      },
      replicaGroup: {
        serializedName: "replicaGroup",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      azureFileShareUri: {
        serializedName: "azureFileShareUri",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      sourceAzureFileShareUri: {
        serializedName: "sourceAzureFileShareUri",
        type: {
          name: "String"
        }
      },
      backupMetadataPropertyBag: {
        serializedName: "backupMetadataPropertyBag",
        type: {
          name: "String"
        }
      },
      restoreFileSpec: {
        serializedName: "restoreFileSpec",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RestoreFileSpec"
            }
          }
        }
      },
      pauseWaitForSyncDrainTimePeriodInSeconds: {
        serializedName: "pauseWaitForSyncDrainTimePeriodInSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BackupRequest: msRest.CompositeMapper = {
  serializedName: "BackupRequest",
  type: {
    name: "Composite",
    className: "BackupRequest",
    modelProperties: {
      azureFileShare: {
        serializedName: "azureFileShare",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostBackupResponse: msRest.CompositeMapper = {
  serializedName: "PostBackupResponse",
  type: {
    name: "Composite",
    className: "PostBackupResponse",
    modelProperties: {
      cloudEndpointName: {
        readOnly: true,
        serializedName: "backupMetadata.cloudEndpointName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncServiceUpdateParameters: msRest.CompositeMapper = {
  serializedName: "StorageSyncServiceUpdateParameters",
  type: {
    name: "Composite",
    className: "StorageSyncServiceUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const OperationStatus: msRest.CompositeMapper = {
  serializedName: "OperationStatus",
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "StorageSyncApiError"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationsListHeaders: msRest.CompositeMapper = {
  serializedName: "operations-list-headers",
  type: {
    name: "Composite",
    className: "OperationsListHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncServicesGetHeaders: msRest.CompositeMapper = {
  serializedName: "storagesyncservices-get-headers",
  type: {
    name: "Composite",
    className: "StorageSyncServicesGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncServicesUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "storagesyncservices-update-headers",
  type: {
    name: "Composite",
    className: "StorageSyncServicesUpdateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncServicesDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "storagesyncservices-delete-headers",
  type: {
    name: "Composite",
    className: "StorageSyncServicesDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncServicesListByResourceGroupHeaders: msRest.CompositeMapper = {
  serializedName: "storagesyncservices-listbyresourcegroup-headers",
  type: {
    name: "Composite",
    className: "StorageSyncServicesListByResourceGroupHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageSyncServicesListBySubscriptionHeaders: msRest.CompositeMapper = {
  serializedName: "storagesyncservices-listbysubscription-headers",
  type: {
    name: "Composite",
    className: "StorageSyncServicesListBySubscriptionHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupsListByStorageSyncServiceHeaders: msRest.CompositeMapper = {
  serializedName: "syncgroups-listbystoragesyncservice-headers",
  type: {
    name: "Composite",
    className: "SyncGroupsListByStorageSyncServiceHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupsCreateHeaders: msRest.CompositeMapper = {
  serializedName: "syncgroups-create-headers",
  type: {
    name: "Composite",
    className: "SyncGroupsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupsGetHeaders: msRest.CompositeMapper = {
  serializedName: "syncgroups-get-headers",
  type: {
    name: "Composite",
    className: "SyncGroupsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SyncGroupsDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "syncgroups-delete-headers",
  type: {
    name: "Composite",
    className: "SyncGroupsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsCreateHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-create-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsGetHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-get-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-delete-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsListBySyncGroupHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-listbysyncgroup-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsListBySyncGroupHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsPreBackupHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-prebackup-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsPreBackupHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsPostBackupHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-postbackup-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsPostBackupHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsPreRestoreHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-prerestore-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsPreRestoreHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsRestoreheartbeatHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-restoreheartbeat-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsRestoreheartbeatHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsPostRestoreHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-postrestore-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsPostRestoreHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudEndpointsTriggerChangeDetectionHeaders: msRest.CompositeMapper = {
  serializedName: "cloudendpoints-triggerchangedetection-headers",
  type: {
    name: "Composite",
    className: "CloudEndpointsTriggerChangeDetectionHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointsCreateHeaders: msRest.CompositeMapper = {
  serializedName: "serverendpoints-create-headers",
  type: {
    name: "Composite",
    className: "ServerEndpointsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointsUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "serverendpoints-update-headers",
  type: {
    name: "Composite",
    className: "ServerEndpointsUpdateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointsGetHeaders: msRest.CompositeMapper = {
  serializedName: "serverendpoints-get-headers",
  type: {
    name: "Composite",
    className: "ServerEndpointsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointsDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "serverendpoints-delete-headers",
  type: {
    name: "Composite",
    className: "ServerEndpointsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointsListBySyncGroupHeaders: msRest.CompositeMapper = {
  serializedName: "serverendpoints-listbysyncgroup-headers",
  type: {
    name: "Composite",
    className: "ServerEndpointsListBySyncGroupHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerEndpointsRecallActionHeaders: msRest.CompositeMapper = {
  serializedName: "serverendpoints-recallaction-headers",
  type: {
    name: "Composite",
    className: "ServerEndpointsRecallActionHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegisteredServersListByStorageSyncServiceHeaders: msRest.CompositeMapper = {
  serializedName: "registeredservers-listbystoragesyncservice-headers",
  type: {
    name: "Composite",
    className: "RegisteredServersListByStorageSyncServiceHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegisteredServersGetHeaders: msRest.CompositeMapper = {
  serializedName: "registeredservers-get-headers",
  type: {
    name: "Composite",
    className: "RegisteredServersGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegisteredServersCreateHeaders: msRest.CompositeMapper = {
  serializedName: "registeredservers-create-headers",
  type: {
    name: "Composite",
    className: "RegisteredServersCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegisteredServersDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "registeredservers-delete-headers",
  type: {
    name: "Composite",
    className: "RegisteredServersDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegisteredServersTriggerRolloverHeaders: msRest.CompositeMapper = {
  serializedName: "registeredservers-triggerrollover-headers",
  type: {
    name: "Composite",
    className: "RegisteredServersTriggerRolloverHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkflowsListByStorageSyncServiceHeaders: msRest.CompositeMapper = {
  serializedName: "workflows-listbystoragesyncservice-headers",
  type: {
    name: "Composite",
    className: "WorkflowsListByStorageSyncServiceHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkflowsGetHeaders: msRest.CompositeMapper = {
  serializedName: "workflows-get-headers",
  type: {
    name: "Composite",
    className: "WorkflowsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkflowsAbortHeaders: msRest.CompositeMapper = {
  serializedName: "workflows-abort-headers",
  type: {
    name: "Composite",
    className: "WorkflowsAbortHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatusGetHeaders: msRest.CompositeMapper = {
  serializedName: "operationstatus-get-headers",
  type: {
    name: "Composite",
    className: "OperationStatusGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCorrelationRequestId: {
        serializedName: "x-ms-correlation-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationEntityListResult: msRest.CompositeMapper = {
  serializedName: "OperationEntityListResult",
  type: {
    name: "Composite",
    className: "OperationEntityListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationEntity"
            }
          }
        }
      }
    }
  }
};

export const StorageSyncServiceArray: msRest.CompositeMapper = {
  serializedName: "StorageSyncServiceArray",
  type: {
    name: "Composite",
    className: "StorageSyncServiceArray",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageSyncService"
            }
          }
        }
      }
    }
  }
};

export const SyncGroupArray: msRest.CompositeMapper = {
  serializedName: "SyncGroupArray",
  type: {
    name: "Composite",
    className: "SyncGroupArray",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SyncGroup"
            }
          }
        }
      }
    }
  }
};

export const CloudEndpointArray: msRest.CompositeMapper = {
  serializedName: "CloudEndpointArray",
  type: {
    name: "Composite",
    className: "CloudEndpointArray",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudEndpoint"
            }
          }
        }
      }
    }
  }
};

export const ServerEndpointArray: msRest.CompositeMapper = {
  serializedName: "ServerEndpointArray",
  type: {
    name: "Composite",
    className: "ServerEndpointArray",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerEndpoint"
            }
          }
        }
      }
    }
  }
};

export const RegisteredServerArray: msRest.CompositeMapper = {
  serializedName: "RegisteredServerArray",
  type: {
    name: "Composite",
    className: "RegisteredServerArray",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegisteredServer"
            }
          }
        }
      }
    }
  }
};

export const WorkflowArray: msRest.CompositeMapper = {
  serializedName: "WorkflowArray",
  type: {
    name: "Composite",
    className: "WorkflowArray",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workflow"
            }
          }
        }
      }
    }
  }
};
