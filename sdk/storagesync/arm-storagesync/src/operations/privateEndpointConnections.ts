/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/privateEndpointConnectionsMappers";
import * as Parameters from "../models/parameters";
import { StorageSyncManagementClientContext } from "../storageSyncManagementClientContext";

/** Class representing a PrivateEndpointConnections. */
export class PrivateEndpointConnections {
  private readonly client: StorageSyncManagementClientContext;

  /**
   * Create a PrivateEndpointConnections.
   * @param {StorageSyncManagementClientContext} client Reference to the service client.
   */
  constructor(client: StorageSyncManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets the specified private endpoint connection associated with the storage sync service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName The name of the storage sync service name within the specified
   * resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsGetResponse>
   */
  get(resourceGroupName: string, storageSyncServiceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName The name of the storage sync service name within the specified
   * resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param callback The callback
   */
  get(resourceGroupName: string, storageSyncServiceName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName The name of the storage sync service name within the specified
   * resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, storageSyncServiceName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  get(resourceGroupName: string, storageSyncServiceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        storageSyncServiceName,
        privateEndpointConnectionName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsGetResponse>;
  }

  /**
   * Update the state of specified private endpoint connection associated with the storage sync
   * service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName The name of the storage sync service name within the specified
   * resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param properties The private endpoint connection properties.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsCreateResponse>
   */
  create(resourceGroupName: string, storageSyncServiceName: string, privateEndpointConnectionName: string, properties: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsCreateResponse> {
    return this.beginCreate(resourceGroupName,storageSyncServiceName,privateEndpointConnectionName,properties,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.PrivateEndpointConnectionsCreateResponse>;
  }

  /**
   * Deletes the specified private endpoint connection associated with the storage sync service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName The name of the storage sync service name within the specified
   * resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsDeleteResponse>
   */
  deleteMethod(resourceGroupName: string, storageSyncServiceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsDeleteResponse> {
    return this.beginDeleteMethod(resourceGroupName,storageSyncServiceName,privateEndpointConnectionName,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.PrivateEndpointConnectionsDeleteResponse>;
  }

  /**
   * Get a PrivateEndpointConnection List.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByStorageSyncServiceResponse>
   */
  listByStorageSyncService(resourceGroupName: string, storageSyncServiceName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsListByStorageSyncServiceResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param callback The callback
   */
  listByStorageSyncService(resourceGroupName: string, storageSyncServiceName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName Name of Storage Sync Service resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByStorageSyncService(resourceGroupName: string, storageSyncServiceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  listByStorageSyncService(resourceGroupName: string, storageSyncServiceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): Promise<Models.PrivateEndpointConnectionsListByStorageSyncServiceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        storageSyncServiceName,
        options
      },
      listByStorageSyncServiceOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByStorageSyncServiceResponse>;
  }

  /**
   * Update the state of specified private endpoint connection associated with the storage sync
   * service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName The name of the storage sync service name within the specified
   * resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param properties The private endpoint connection properties.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreate(resourceGroupName: string, storageSyncServiceName: string, privateEndpointConnectionName: string, properties: Models.PrivateEndpointConnection, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        storageSyncServiceName,
        privateEndpointConnectionName,
        properties,
        options
      },
      beginCreateOperationSpec,
      options);
  }

  /**
   * Deletes the specified private endpoint connection associated with the storage sync service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param storageSyncServiceName The name of the storage sync service name within the specified
   * resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with
   * the Azure resource
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, storageSyncServiceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        storageSyncServiceName,
        privateEndpointConnectionName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.storageSyncServiceName,
    Parameters.subscriptionId,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection
    },
    default: {
      bodyMapper: Mappers.StorageSyncError
    }
  },
  serializer
};

const listByStorageSyncServiceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/privateEndpointConnections",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.storageSyncServiceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResult,
      headersMapper: Mappers.PrivateEndpointConnectionsListByStorageSyncServiceHeaders
    },
    default: {
      bodyMapper: Mappers.StorageSyncError,
      headersMapper: Mappers.PrivateEndpointConnectionsListByStorageSyncServiceHeaders
    }
  },
  serializer
};

const beginCreateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.storageSyncServiceName,
    Parameters.subscriptionId,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "properties",
    mapper: {
      ...Mappers.PrivateEndpointConnection,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection,
      headersMapper: Mappers.PrivateEndpointConnectionsCreateHeaders
    },
    202: {
      headersMapper: Mappers.PrivateEndpointConnectionsCreateHeaders
    },
    default: {
      bodyMapper: Mappers.StorageSyncError,
      headersMapper: Mappers.PrivateEndpointConnectionsCreateHeaders
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.storageSyncServiceName,
    Parameters.subscriptionId,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      headersMapper: Mappers.PrivateEndpointConnectionsDeleteHeaders
    },
    202: {
      headersMapper: Mappers.PrivateEndpointConnectionsDeleteHeaders
    },
    204: {
      headersMapper: Mappers.PrivateEndpointConnectionsDeleteHeaders
    },
    default: {
      bodyMapper: Mappers.StorageSyncError,
      headersMapper: Mappers.PrivateEndpointConnectionsDeleteHeaders
    }
  },
  serializer
};
