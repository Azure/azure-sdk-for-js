/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/billingRoleDefinitionOperationsMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a BillingRoleDefinitionOperations. */
export class BillingRoleDefinitionOperations {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a BillingRoleDefinitionOperations.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets the role definition for a role
   * @param billingAccountName billing Account Id.
   * @param billingRoleDefinitionName role definition id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleDefinitionGetByBillingAccountNameResponse>
   */
  getByBillingAccountName(billingAccountName: string, billingRoleDefinitionName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleDefinitionGetByBillingAccountNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingRoleDefinitionName role definition id.
   * @param callback The callback
   */
  getByBillingAccountName(billingAccountName: string, billingRoleDefinitionName: string, callback: msRest.ServiceCallback<Models.BillingRoleDefinition>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingRoleDefinitionName role definition id.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByBillingAccountName(billingAccountName: string, billingRoleDefinitionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleDefinition>): void;
  getByBillingAccountName(billingAccountName: string, billingRoleDefinitionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleDefinition>, callback?: msRest.ServiceCallback<Models.BillingRoleDefinition>): Promise<Models.BillingRoleDefinitionGetByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingRoleDefinitionName,
        options
      },
      getByBillingAccountNameOperationSpec,
      callback) as Promise<Models.BillingRoleDefinitionGetByBillingAccountNameResponse>;
  }

  /**
   * Gets the role definition for a role
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleDefinitionName role definition id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleDefinitionGetByInvoiceSectionNameResponse>
   */
  getByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleDefinitionName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleDefinitionGetByInvoiceSectionNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleDefinitionName role definition id.
   * @param callback The callback
   */
  getByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleDefinitionName: string, callback: msRest.ServiceCallback<Models.BillingRoleDefinition>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleDefinitionName role definition id.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleDefinitionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleDefinition>): void;
  getByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleDefinitionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleDefinition>, callback?: msRest.ServiceCallback<Models.BillingRoleDefinition>): Promise<Models.BillingRoleDefinitionGetByInvoiceSectionNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        billingRoleDefinitionName,
        options
      },
      getByInvoiceSectionNameOperationSpec,
      callback) as Promise<Models.BillingRoleDefinitionGetByInvoiceSectionNameResponse>;
  }

  /**
   * Gets the role definition for a role
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleDefinitionName role definition id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleDefinitionGetByBillingProfileNameResponse>
   */
  getByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleDefinitionName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleDefinitionGetByBillingProfileNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleDefinitionName role definition id.
   * @param callback The callback
   */
  getByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleDefinitionName: string, callback: msRest.ServiceCallback<Models.BillingRoleDefinition>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleDefinitionName role definition id.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleDefinitionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleDefinition>): void;
  getByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleDefinitionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleDefinition>, callback?: msRest.ServiceCallback<Models.BillingRoleDefinition>): Promise<Models.BillingRoleDefinitionGetByBillingProfileNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        billingRoleDefinitionName,
        options
      },
      getByBillingProfileNameOperationSpec,
      callback) as Promise<Models.BillingRoleDefinitionGetByBillingProfileNameResponse>;
  }

  /**
   * Lists the role definition for a billing account
   * @param billingAccountName billing Account Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleDefinitionListByBillingAccountNameResponse>
   */
  listByBillingAccountName(billingAccountName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleDefinitionListByBillingAccountNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, callback: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): void;
  listByBillingAccountName(billingAccountName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): Promise<Models.BillingRoleDefinitionListByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        options
      },
      listByBillingAccountNameOperationSpec,
      callback) as Promise<Models.BillingRoleDefinitionListByBillingAccountNameResponse>;
  }

  /**
   * Lists the role definition for an invoice Section
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleDefinitionListByInvoiceSectionNameResponse>
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleDefinitionListByInvoiceSectionNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param callback The callback
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, callback: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): void;
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): Promise<Models.BillingRoleDefinitionListByInvoiceSectionNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        options
      },
      listByInvoiceSectionNameOperationSpec,
      callback) as Promise<Models.BillingRoleDefinitionListByInvoiceSectionNameResponse>;
  }

  /**
   * Lists the role definition for a Billing Profile
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleDefinitionListByBillingProfileNameResponse>
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleDefinitionListByBillingProfileNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param callback The callback
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, callback: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): void;
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleDefinitionListResult>): Promise<Models.BillingRoleDefinitionListByBillingProfileNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        options
      },
      listByBillingProfileNameOperationSpec,
      callback) as Promise<Models.BillingRoleDefinitionListByBillingProfileNameResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getByBillingAccountNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/providers/Microsoft.Billing/billingRoleDefinitions/{billingRoleDefinitionName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingRoleDefinitionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleDefinition
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getByInvoiceSectionNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Billing/billingRoleDefinitions/{billingRoleDefinitionName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName,
    Parameters.billingRoleDefinitionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleDefinition
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getByBillingProfileNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/billingRoleDefinitions/{billingRoleDefinitionName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.billingRoleDefinitionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleDefinition
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/providers/Microsoft.Billing/billingRoleDefinitions",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleDefinitionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByInvoiceSectionNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Billing/billingRoleDefinitions",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleDefinitionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingProfileNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/billingRoleDefinitions",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleDefinitionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
