/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Models from "../models";
import * as Mappers from "../models/enrollmentAccountsMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a EnrollmentAccounts. */
export class EnrollmentAccounts {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a EnrollmentAccounts.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists all Enrollment Accounts for which a user has access.
   * @param billingAccountName Billing Account Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.EnrollmentAccountsListByBillingAccountNameResponse>
   */
  listByBillingAccountName(billingAccountName: string, options?: Models.EnrollmentAccountsListByBillingAccountNameOptionalParams): Promise<Models.EnrollmentAccountsListByBillingAccountNameResponse>;
  /**
   * @param billingAccountName Billing Account Id.
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, callback: coreHttp.ServiceCallback<Models.EnrollmentAccountListResult>): void;
  /**
   * @param billingAccountName Billing Account Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, options: Models.EnrollmentAccountsListByBillingAccountNameOptionalParams, callback: coreHttp.ServiceCallback<Models.EnrollmentAccountListResult>): void;
  listByBillingAccountName(billingAccountName: string, options?: Models.EnrollmentAccountsListByBillingAccountNameOptionalParams | coreHttp.ServiceCallback<Models.EnrollmentAccountListResult>, callback?: coreHttp.ServiceCallback<Models.EnrollmentAccountListResult>): Promise<Models.EnrollmentAccountsListByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        options
      },
      listByBillingAccountNameOperationSpec,
      callback) as Promise<Models.EnrollmentAccountsListByBillingAccountNameResponse>;
  }

  /**
   * Get the enrollment account by id.
   * @param billingAccountName Billing Account Id.
   * @param enrollmentAccountName Enrollment Account Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.EnrollmentAccountsGetByEnrollmentAccountIdResponse>
   */
  getByEnrollmentAccountId(billingAccountName: string, enrollmentAccountName: string, options?: Models.EnrollmentAccountsGetByEnrollmentAccountIdOptionalParams): Promise<Models.EnrollmentAccountsGetByEnrollmentAccountIdResponse>;
  /**
   * @param billingAccountName Billing Account Id.
   * @param enrollmentAccountName Enrollment Account Id.
   * @param callback The callback
   */
  getByEnrollmentAccountId(billingAccountName: string, enrollmentAccountName: string, callback: coreHttp.ServiceCallback<Models.EnrollmentAccount>): void;
  /**
   * @param billingAccountName Billing Account Id.
   * @param enrollmentAccountName Enrollment Account Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByEnrollmentAccountId(billingAccountName: string, enrollmentAccountName: string, options: Models.EnrollmentAccountsGetByEnrollmentAccountIdOptionalParams, callback: coreHttp.ServiceCallback<Models.EnrollmentAccount>): void;
  getByEnrollmentAccountId(billingAccountName: string, enrollmentAccountName: string, options?: Models.EnrollmentAccountsGetByEnrollmentAccountIdOptionalParams | coreHttp.ServiceCallback<Models.EnrollmentAccount>, callback?: coreHttp.ServiceCallback<Models.EnrollmentAccount>): Promise<Models.EnrollmentAccountsGetByEnrollmentAccountIdResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        enrollmentAccountName,
        options
      },
      getByEnrollmentAccountIdOperationSpec,
      callback) as Promise<Models.EnrollmentAccountsGetByEnrollmentAccountIdResponse>;
  }

  /**
   * Lists all Enrollment Accounts for which a user has access.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.EnrollmentAccountsListByBillingAccountNameNextResponse>
   */
  listByBillingAccountNameNext(nextPageLink: string, options?: coreHttp.RequestOptionsBase): Promise<Models.EnrollmentAccountsListByBillingAccountNameNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingAccountNameNext(nextPageLink: string, callback: coreHttp.ServiceCallback<Models.EnrollmentAccountListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountNameNext(nextPageLink: string, options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<Models.EnrollmentAccountListResult>): void;
  listByBillingAccountNameNext(nextPageLink: string, options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<Models.EnrollmentAccountListResult>, callback?: coreHttp.ServiceCallback<Models.EnrollmentAccountListResult>): Promise<Models.EnrollmentAccountsListByBillingAccountNameNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingAccountNameNextOperationSpec,
      callback) as Promise<Models.EnrollmentAccountsListByBillingAccountNameNextResponse>;
  }
}

// Operation Specifications
const serializer = new coreHttp.Serializer(Mappers);
const listByBillingAccountNameOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/enrollmentAccounts",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.expand,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EnrollmentAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getByEnrollmentAccountIdOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.enrollmentAccountName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.expand,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EnrollmentAccount
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountNameNextOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EnrollmentAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
