/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/productsMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a Products. */
export class Products {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a Products.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists products by billing account name.
   * @param billingAccountName billing Account Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProductsListByBillingAccountNameResponse>
   */
  listByBillingAccountName(billingAccountName: string, options?: Models.ProductsListByBillingAccountNameOptionalParams): Promise<Models.ProductsListByBillingAccountNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, callback: msRest.ServiceCallback<Models.ProductsListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, options: Models.ProductsListByBillingAccountNameOptionalParams, callback: msRest.ServiceCallback<Models.ProductsListResult>): void;
  listByBillingAccountName(billingAccountName: string, options?: Models.ProductsListByBillingAccountNameOptionalParams | msRest.ServiceCallback<Models.ProductsListResult>, callback?: msRest.ServiceCallback<Models.ProductsListResult>): Promise<Models.ProductsListByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        options
      },
      listByBillingAccountNameOperationSpec,
      callback) as Promise<Models.ProductsListByBillingAccountNameResponse>;
  }

  /**
   * Lists products by invoice section name.
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProductsListByInvoiceSectionNameResponse>
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options?: Models.ProductsListByInvoiceSectionNameOptionalParams): Promise<Models.ProductsListByInvoiceSectionNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param callback The callback
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, callback: msRest.ServiceCallback<Models.ProductsListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options: Models.ProductsListByInvoiceSectionNameOptionalParams, callback: msRest.ServiceCallback<Models.ProductsListResult>): void;
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options?: Models.ProductsListByInvoiceSectionNameOptionalParams | msRest.ServiceCallback<Models.ProductsListResult>, callback?: msRest.ServiceCallback<Models.ProductsListResult>): Promise<Models.ProductsListByInvoiceSectionNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        options
      },
      listByInvoiceSectionNameOperationSpec,
      callback) as Promise<Models.ProductsListByInvoiceSectionNameResponse>;
  }

  /**
   * Get a single product by name.
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProductsGetResponse>
   */
  get(billingAccountName: string, invoiceSectionName: string, productName: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsGetResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param callback The callback
   */
  get(billingAccountName: string, invoiceSectionName: string, productName: string, callback: msRest.ServiceCallback<Models.ProductSummary>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(billingAccountName: string, invoiceSectionName: string, productName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProductSummary>): void;
  get(billingAccountName: string, invoiceSectionName: string, productName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProductSummary>, callback?: msRest.ServiceCallback<Models.ProductSummary>): Promise<Models.ProductsGetResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        productName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ProductsGetResponse>;
  }

  /**
   * The operation to transfer a Product to another invoice section.
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param parameters Parameters supplied to the Transfer Product operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProductsTransferResponse>
   */
  transfer(billingAccountName: string, invoiceSectionName: string, productName: string, parameters: Models.TransferProductRequestProperties, options?: msRest.RequestOptionsBase): Promise<Models.ProductsTransferResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param parameters Parameters supplied to the Transfer Product operation.
   * @param callback The callback
   */
  transfer(billingAccountName: string, invoiceSectionName: string, productName: string, parameters: Models.TransferProductRequestProperties, callback: msRest.ServiceCallback<Models.ProductSummary>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param parameters Parameters supplied to the Transfer Product operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  transfer(billingAccountName: string, invoiceSectionName: string, productName: string, parameters: Models.TransferProductRequestProperties, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProductSummary>): void;
  transfer(billingAccountName: string, invoiceSectionName: string, productName: string, parameters: Models.TransferProductRequestProperties, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProductSummary>, callback?: msRest.ServiceCallback<Models.ProductSummary>): Promise<Models.ProductsTransferResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        productName,
        parameters,
        options
      },
      transferOperationSpec,
      callback) as Promise<Models.ProductsTransferResponse>;
  }

  /**
   * Validates the transfer of products across invoice sections.
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingSubscriptionName Billing Subscription Id.
   * @param parameters Parameters supplied to the Transfer Products operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProductsValidateTransferResponse>
   */
  validateTransfer(billingAccountName: string, invoiceSectionName: string, billingSubscriptionName: string, parameters: Models.TransferProductRequestProperties, options?: msRest.RequestOptionsBase): Promise<Models.ProductsValidateTransferResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingSubscriptionName Billing Subscription Id.
   * @param parameters Parameters supplied to the Transfer Products operation.
   * @param callback The callback
   */
  validateTransfer(billingAccountName: string, invoiceSectionName: string, billingSubscriptionName: string, parameters: Models.TransferProductRequestProperties, callback: msRest.ServiceCallback<Models.ValidateProductTransferEligibilityResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingSubscriptionName Billing Subscription Id.
   * @param parameters Parameters supplied to the Transfer Products operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  validateTransfer(billingAccountName: string, invoiceSectionName: string, billingSubscriptionName: string, parameters: Models.TransferProductRequestProperties, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ValidateProductTransferEligibilityResult>): void;
  validateTransfer(billingAccountName: string, invoiceSectionName: string, billingSubscriptionName: string, parameters: Models.TransferProductRequestProperties, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ValidateProductTransferEligibilityResult>, callback?: msRest.ServiceCallback<Models.ValidateProductTransferEligibilityResult>): Promise<Models.ProductsValidateTransferResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        billingSubscriptionName,
        parameters,
        options
      },
      validateTransferOperationSpec,
      callback) as Promise<Models.ProductsValidateTransferResponse>;
  }

  /**
   * Cancel auto renew for product by product id and billing account name
   * @param billingAccountName billing Account Id.
   * @param productName Invoice Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProductsUpdateAutoRenewByBillingAccountNameResponse>
   */
  updateAutoRenewByBillingAccountName(billingAccountName: string, productName: string, options?: Models.ProductsUpdateAutoRenewByBillingAccountNameOptionalParams): Promise<Models.ProductsUpdateAutoRenewByBillingAccountNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param productName Invoice Id.
   * @param callback The callback
   */
  updateAutoRenewByBillingAccountName(billingAccountName: string, productName: string, callback: msRest.ServiceCallback<Models.UpdateAutoRenewOperationSummary>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param productName Invoice Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  updateAutoRenewByBillingAccountName(billingAccountName: string, productName: string, options: Models.ProductsUpdateAutoRenewByBillingAccountNameOptionalParams, callback: msRest.ServiceCallback<Models.UpdateAutoRenewOperationSummary>): void;
  updateAutoRenewByBillingAccountName(billingAccountName: string, productName: string, options?: Models.ProductsUpdateAutoRenewByBillingAccountNameOptionalParams | msRest.ServiceCallback<Models.UpdateAutoRenewOperationSummary>, callback?: msRest.ServiceCallback<Models.UpdateAutoRenewOperationSummary>): Promise<Models.ProductsUpdateAutoRenewByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        productName,
        options
      },
      updateAutoRenewByBillingAccountNameOperationSpec,
      callback) as Promise<Models.ProductsUpdateAutoRenewByBillingAccountNameResponse>;
  }

  /**
   * Cancel auto renew for product by product id and invoice section name
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProductsUpdateAutoRenewByInvoiceSectionNameResponse>
   */
  updateAutoRenewByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, productName: string, options?: Models.ProductsUpdateAutoRenewByInvoiceSectionNameOptionalParams): Promise<Models.ProductsUpdateAutoRenewByInvoiceSectionNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param callback The callback
   */
  updateAutoRenewByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, productName: string, callback: msRest.ServiceCallback<Models.UpdateAutoRenewOperationSummary>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param productName Invoice Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  updateAutoRenewByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, productName: string, options: Models.ProductsUpdateAutoRenewByInvoiceSectionNameOptionalParams, callback: msRest.ServiceCallback<Models.UpdateAutoRenewOperationSummary>): void;
  updateAutoRenewByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, productName: string, options?: Models.ProductsUpdateAutoRenewByInvoiceSectionNameOptionalParams | msRest.ServiceCallback<Models.UpdateAutoRenewOperationSummary>, callback?: msRest.ServiceCallback<Models.UpdateAutoRenewOperationSummary>): Promise<Models.ProductsUpdateAutoRenewByInvoiceSectionNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        productName,
        options
      },
      updateAutoRenewByInvoiceSectionNameOperationSpec,
      callback) as Promise<Models.ProductsUpdateAutoRenewByInvoiceSectionNameResponse>;
  }

  /**
   * Lists products by billing account name.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ProductsListByBillingAccountNameNextResponse>
   */
  listByBillingAccountNameNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductsListByBillingAccountNameNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingAccountNameNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProductsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountNameNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProductsListResult>): void;
  listByBillingAccountNameNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProductsListResult>, callback?: msRest.ServiceCallback<Models.ProductsListResult>): Promise<Models.ProductsListByBillingAccountNameNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingAccountNameNextOperationSpec,
      callback) as Promise<Models.ProductsListByBillingAccountNameNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByBillingAccountNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProductsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByInvoiceSectionNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProductsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products/{productName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName,
    Parameters.productName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProductSummary
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const transferOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products/{productName}/transfer",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName,
    Parameters.productName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.TransferProductRequestProperties,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ProductSummary,
      headersMapper: Mappers.ProductsTransferHeaders
    },
    202: {
      headersMapper: Mappers.ProductsTransferHeaders
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const validateTransferOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products/{productName}/validateTransferEligibility",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName,
    Parameters.billingSubscriptionName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.TransferProductRequestProperties,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ValidateProductTransferEligibilityResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateAutoRenewByBillingAccountNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/products/{productName}/updateAutoRenew",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.productName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      autoRenew: [
        "options",
        "autoRenew"
      ]
    },
    mapper: {
      ...Mappers.UpdateAutoRenewRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.UpdateAutoRenewOperationSummary
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateAutoRenewByInvoiceSectionNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/products/{productName}/updateAutoRenew",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName,
    Parameters.productName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      autoRenew: [
        "options",
        "autoRenew"
      ]
    },
    mapper: {
      ...Mappers.UpdateAutoRenewRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.UpdateAutoRenewOperationSummary
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountNameNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProductsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
