/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as coreArm from "@azure/core-arm";
import * as Models from "../models";
import * as Mappers from "../models/invoiceSectionsMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a InvoiceSections. */
export class InvoiceSections {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a InvoiceSections.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists all invoice sections for which a user has access.
   * @param billingAccountName Billing Account Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.InvoiceSectionsListByBillingAccountNameResponse>
   */
  listByBillingAccountName(billingAccountName: string, options?: Models.InvoiceSectionsListByBillingAccountNameOptionalParams): Promise<Models.InvoiceSectionsListByBillingAccountNameResponse>;
  /**
   * @param billingAccountName Billing Account Id.
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  /**
   * @param billingAccountName Billing Account Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, options: Models.InvoiceSectionsListByBillingAccountNameOptionalParams, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  listByBillingAccountName(billingAccountName: string, options?: Models.InvoiceSectionsListByBillingAccountNameOptionalParams | coreHttp.ServiceCallback<Models.InvoiceSectionListResult>, callback?: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): Promise<Models.InvoiceSectionsListByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        options
      },
      listByBillingAccountNameOperationSpec,
      callback) as Promise<Models.InvoiceSectionsListByBillingAccountNameResponse>;
  }

  /**
   * The operation to create a InvoiceSection.
   * @param billingAccountName Billing Account Id.
   * @param parameters Parameters supplied to the Create InvoiceSection operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.InvoiceSectionsCreateResponse>
   */
  create(billingAccountName: string, parameters: Models.InvoiceSectionCreationRequest, options?: coreHttp.RequestOptionsBase): Promise<Models.InvoiceSectionsCreateResponse> {
    return this.beginCreate(billingAccountName,parameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.InvoiceSectionsCreateResponse>;
  }

  /**
   * Lists all invoice sections under a billing profile for which a user has access.
   * @param billingAccountName Billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.InvoiceSectionsListByBillingProfileNameResponse>
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options?: coreHttp.RequestOptionsBase): Promise<Models.InvoiceSectionsListByBillingProfileNameResponse>;
  /**
   * @param billingAccountName Billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param callback The callback
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  /**
   * @param billingAccountName Billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<Models.InvoiceSectionListResult>, callback?: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): Promise<Models.InvoiceSectionsListByBillingProfileNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        options
      },
      listByBillingProfileNameOperationSpec,
      callback) as Promise<Models.InvoiceSectionsListByBillingProfileNameResponse>;
  }

  /**
   * Lists all invoiceSections with create subscription permission for a user.
   * @param billingAccountName Billing Account Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.InvoiceSectionsListByCreateSubscriptionPermissionResponse>
   */
  listByCreateSubscriptionPermission(billingAccountName: string, options?: Models.InvoiceSectionsListByCreateSubscriptionPermissionOptionalParams): Promise<Models.InvoiceSectionsListByCreateSubscriptionPermissionResponse>;
  /**
   * @param billingAccountName Billing Account Id.
   * @param callback The callback
   */
  listByCreateSubscriptionPermission(billingAccountName: string, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  /**
   * @param billingAccountName Billing Account Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByCreateSubscriptionPermission(billingAccountName: string, options: Models.InvoiceSectionsListByCreateSubscriptionPermissionOptionalParams, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  listByCreateSubscriptionPermission(billingAccountName: string, options?: Models.InvoiceSectionsListByCreateSubscriptionPermissionOptionalParams | coreHttp.ServiceCallback<Models.InvoiceSectionListResult>, callback?: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): Promise<Models.InvoiceSectionsListByCreateSubscriptionPermissionResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        options
      },
      listByCreateSubscriptionPermissionOperationSpec,
      callback) as Promise<Models.InvoiceSectionsListByCreateSubscriptionPermissionResponse>;
  }

  /**
   * Get the InvoiceSection by id.
   * @param billingAccountName Billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.InvoiceSectionsGetResponse>
   */
  get(billingAccountName: string, invoiceSectionName: string, options?: Models.InvoiceSectionsGetOptionalParams): Promise<Models.InvoiceSectionsGetResponse>;
  /**
   * @param billingAccountName Billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param callback The callback
   */
  get(billingAccountName: string, invoiceSectionName: string, callback: coreHttp.ServiceCallback<Models.InvoiceSection>): void;
  /**
   * @param billingAccountName Billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(billingAccountName: string, invoiceSectionName: string, options: Models.InvoiceSectionsGetOptionalParams, callback: coreHttp.ServiceCallback<Models.InvoiceSection>): void;
  get(billingAccountName: string, invoiceSectionName: string, options?: Models.InvoiceSectionsGetOptionalParams | coreHttp.ServiceCallback<Models.InvoiceSection>, callback?: coreHttp.ServiceCallback<Models.InvoiceSection>): Promise<Models.InvoiceSectionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.InvoiceSectionsGetResponse>;
  }

  /**
   * The operation to update a InvoiceSection.
   * @param billingAccountName Billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param parameters Parameters supplied to the Create InvoiceSection operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.InvoiceSectionsUpdateResponse>
   */
  update(billingAccountName: string, invoiceSectionName: string, parameters: Models.InvoiceSection, options?: coreHttp.RequestOptionsBase): Promise<Models.InvoiceSectionsUpdateResponse> {
    return this.beginUpdate(billingAccountName,invoiceSectionName,parameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.InvoiceSectionsUpdateResponse>;
  }

  /**
   * Elevates the caller's access to match their billing profile access.
   * @param billingAccountName Billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param [options] The optional parameters
   * @returns Promise<coreHttp.RestResponse>
   */
  elevateToBillingProfile(billingAccountName: string, invoiceSectionName: string, options?: coreHttp.RequestOptionsBase): Promise<coreHttp.RestResponse>;
  /**
   * @param billingAccountName Billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param callback The callback
   */
  elevateToBillingProfile(billingAccountName: string, invoiceSectionName: string, callback: coreHttp.ServiceCallback<void>): void;
  /**
   * @param billingAccountName Billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  elevateToBillingProfile(billingAccountName: string, invoiceSectionName: string, options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<void>): void;
  elevateToBillingProfile(billingAccountName: string, invoiceSectionName: string, options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<coreHttp.RestResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        options
      },
      elevateToBillingProfileOperationSpec,
      callback);
  }

  /**
   * The operation to create a InvoiceSection.
   * @param billingAccountName Billing Account Id.
   * @param parameters Parameters supplied to the Create InvoiceSection operation.
   * @param [options] The optional parameters
   * @returns Promise<coreArm.LROPoller>
   */
  beginCreate(billingAccountName: string, parameters: Models.InvoiceSectionCreationRequest, options?: coreHttp.RequestOptionsBase): Promise<coreArm.LROPoller> {
    return this.client.sendLRORequest(
      {
        billingAccountName,
        parameters,
        options
      },
      beginCreateOperationSpec,
      options);
  }

  /**
   * The operation to update a InvoiceSection.
   * @param billingAccountName Billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param parameters Parameters supplied to the Create InvoiceSection operation.
   * @param [options] The optional parameters
   * @returns Promise<coreArm.LROPoller>
   */
  beginUpdate(billingAccountName: string, invoiceSectionName: string, parameters: Models.InvoiceSection, options?: coreHttp.RequestOptionsBase): Promise<coreArm.LROPoller> {
    return this.client.sendLRORequest(
      {
        billingAccountName,
        invoiceSectionName,
        parameters,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * Lists all invoice sections under a billing profile for which a user has access.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.InvoiceSectionsListByBillingProfileNameNextResponse>
   */
  listByBillingProfileNameNext(nextPageLink: string, options?: coreHttp.RequestOptionsBase): Promise<Models.InvoiceSectionsListByBillingProfileNameNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingProfileNameNext(nextPageLink: string, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingProfileNameNext(nextPageLink: string, options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  listByBillingProfileNameNext(nextPageLink: string, options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<Models.InvoiceSectionListResult>, callback?: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): Promise<Models.InvoiceSectionsListByBillingProfileNameNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingProfileNameNextOperationSpec,
      callback) as Promise<Models.InvoiceSectionsListByBillingProfileNameNextResponse>;
  }

  /**
   * Lists all invoiceSections with create subscription permission for a user.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.InvoiceSectionsListByCreateSubscriptionPermissionNextResponse>
   */
  listByCreateSubscriptionPermissionNext(nextPageLink: string, options?: coreHttp.RequestOptionsBase): Promise<Models.InvoiceSectionsListByCreateSubscriptionPermissionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByCreateSubscriptionPermissionNext(nextPageLink: string, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByCreateSubscriptionPermissionNext(nextPageLink: string, options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): void;
  listByCreateSubscriptionPermissionNext(nextPageLink: string, options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<Models.InvoiceSectionListResult>, callback?: coreHttp.ServiceCallback<Models.InvoiceSectionListResult>): Promise<Models.InvoiceSectionsListByCreateSubscriptionPermissionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByCreateSubscriptionPermissionNextOperationSpec,
      callback) as Promise<Models.InvoiceSectionsListByCreateSubscriptionPermissionNextResponse>;
  }
}

// Operation Specifications
const serializer = new coreHttp.Serializer(Mappers);
const listByBillingAccountNameOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.expand
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.InvoiceSectionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingProfileNameOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.InvoiceSectionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByCreateSubscriptionPermissionOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/listInvoiceSectionsWithCreateSubscriptionPermission",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.expand
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.InvoiceSectionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.expand
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.InvoiceSection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const elevateToBillingProfileOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/elevate",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginCreateOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.InvoiceSectionCreationRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.InvoiceSection,
      headersMapper: Mappers.InvoiceSectionsCreateHeaders
    },
    202: {
      headersMapper: Mappers.InvoiceSectionsCreateHeaders
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginUpdateOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "PUT",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.InvoiceSection,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.InvoiceSection,
      headersMapper: Mappers.InvoiceSectionsUpdateHeaders
    },
    202: {
      headersMapper: Mappers.InvoiceSectionsUpdateHeaders
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingProfileNameNextOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.InvoiceSectionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByCreateSubscriptionPermissionNextOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.InvoiceSectionListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
