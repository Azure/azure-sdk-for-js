/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/transfersMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a Transfers. */
export class Transfers {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a Transfers.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Sends a request to a user in another billing account to transfer billing ownership of their
   * subscriptions. The operation is supported only for billing accounts with agreement type
   * Microsoft Customer Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param parameters Request parameters that are provided to the initiate transfer operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TransfersInitiateResponse>
   */
  initiate(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, parameters: Models.InitiateTransferRequest, options?: msRest.RequestOptionsBase): Promise<Models.TransfersInitiateResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param parameters Request parameters that are provided to the initiate transfer operation.
   * @param callback The callback
   */
  initiate(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, parameters: Models.InitiateTransferRequest, callback: msRest.ServiceCallback<Models.TransferDetails>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param parameters Request parameters that are provided to the initiate transfer operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  initiate(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, parameters: Models.InitiateTransferRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TransferDetails>): void;
  initiate(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, parameters: Models.InitiateTransferRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TransferDetails>, callback?: msRest.ServiceCallback<Models.TransferDetails>): Promise<Models.TransfersInitiateResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        parameters,
        options
      },
      initiateOperationSpec,
      callback) as Promise<Models.TransfersInitiateResponse>;
  }

  /**
   * Gets a transfer request by ID. The operation is supported only for billing accounts with
   * agreement type Microsoft Customer Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param [options] The optional parameters
   * @returns Promise<Models.TransfersGetResponse>
   */
  get(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, transferName: string, options?: msRest.RequestOptionsBase): Promise<Models.TransfersGetResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param callback The callback
   */
  get(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, transferName: string, callback: msRest.ServiceCallback<Models.TransferDetails>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, transferName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TransferDetails>): void;
  get(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, transferName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TransferDetails>, callback?: msRest.ServiceCallback<Models.TransferDetails>): Promise<Models.TransfersGetResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        transferName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.TransfersGetResponse>;
  }

  /**
   * Cancels a transfer request. The operation is supported only for billing accounts with agreement
   * type Microsoft Customer Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param [options] The optional parameters
   * @returns Promise<Models.TransfersCancelResponse>
   */
  cancel(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, transferName: string, options?: msRest.RequestOptionsBase): Promise<Models.TransfersCancelResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param callback The callback
   */
  cancel(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, transferName: string, callback: msRest.ServiceCallback<Models.TransferDetails>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param options The optional parameters
   * @param callback The callback
   */
  cancel(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, transferName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TransferDetails>): void;
  cancel(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, transferName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TransferDetails>, callback?: msRest.ServiceCallback<Models.TransferDetails>): Promise<Models.TransfersCancelResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        transferName,
        options
      },
      cancelOperationSpec,
      callback) as Promise<Models.TransfersCancelResponse>;
  }

  /**
   * Lists the transfer requests for an invoice section. The operation is supported only for billing
   * accounts with agreement type Microsoft Customer Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param [options] The optional parameters
   * @returns Promise<Models.TransfersListResponse>
   */
  list(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.TransfersListResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param callback The callback
   */
  list(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, callback: msRest.ServiceCallback<Models.TransferDetailsListResult>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TransferDetailsListResult>): void;
  list(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TransferDetailsListResult>, callback?: msRest.ServiceCallback<Models.TransferDetailsListResult>): Promise<Models.TransfersListResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.TransfersListResponse>;
  }

  /**
   * Lists the transfer requests for an invoice section. The operation is supported only for billing
   * accounts with agreement type Microsoft Customer Agreement.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TransfersListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TransfersListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TransferDetailsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TransferDetailsListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TransferDetailsListResult>, callback?: msRest.ServiceCallback<Models.TransferDetailsListResult>): Promise<Models.TransfersListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.TransfersListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const initiateOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/initiateTransfer",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.InitiateTransferRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.TransferDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/transfers/{transferName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName,
    Parameters.transferName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TransferDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const cancelOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/transfers/{transferName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName,
    Parameters.transferName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TransferDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/transfers",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TransferDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TransferDetailsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
