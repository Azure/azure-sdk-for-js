/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BillingPropertyOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClient } from "../billingManagementClient";
import {
  BillingPropertyGetOptionalParams,
  BillingPropertyGetResponse,
  BillingProperty,
  BillingPropertyUpdateOptionalParams,
  BillingPropertyUpdateResponse
} from "../models";

/** Class containing BillingPropertyOperations operations. */
export class BillingPropertyOperationsImpl
  implements BillingPropertyOperations {
  private readonly client: BillingManagementClient;

  /**
   * Initialize a new instance of the class BillingPropertyOperations class.
   * @param client Reference to the service client
   */
  constructor(client: BillingManagementClient) {
    this.client = client;
  }

  /**
   * Get the billing properties for a subscription. This operation is not supported for billing accounts
   * with agreement type Enterprise Agreement.
   * @param options The options parameters.
   */
  get(
    options?: BillingPropertyGetOptionalParams
  ): Promise<BillingPropertyGetResponse> {
    return this.client.sendOperationRequest({ options }, getOperationSpec);
  }

  /**
   * Updates the billing property of a subscription. Currently, cost center can be updated. The operation
   * is supported only for billing accounts with agreement type Microsoft Customer Agreement.
   * @param parameters Request parameters that are provided to the update billing property operation.
   * @param options The options parameters.
   */
  update(
    parameters: BillingProperty,
    options?: BillingPropertyUpdateOptionalParams
  ): Promise<BillingPropertyUpdateResponse> {
    return this.client.sendOperationRequest(
      { parameters, options },
      updateOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingProperty/default",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.BillingProperty
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer
};
const updateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingProperty/default",
  httpMethod: "PATCH",
  responses: {
    200: {
      bodyMapper: Mappers.BillingProperty
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.parameters10,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
