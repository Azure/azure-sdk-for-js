/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Models from "../models";
import * as Mappers from "../models/addressesMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a Addresses. */
export class Addresses {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a Addresses.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Validates the address.
   * @param address
   * @param [options] The optional parameters
   * @returns Promise<Models.AddressesValidateResponse>
   */
  validate(address: Models.Address, options?: coreHttp.RequestOptionsBase): Promise<Models.AddressesValidateResponse>;
  /**
   * @param address
   * @param callback The callback
   */
  validate(address: Models.Address, callback: coreHttp.ServiceCallback<Models.ValidateAddressResponse>): void;
  /**
   * @param address
   * @param options The optional parameters
   * @param callback The callback
   */
  validate(address: Models.Address, options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<Models.ValidateAddressResponse>): void;
  validate(address: Models.Address, options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<Models.ValidateAddressResponse>, callback?: coreHttp.ServiceCallback<Models.ValidateAddressResponse>): Promise<Models.AddressesValidateResponse> {
    return this.client.sendOperationRequest(
      {
        address,
        options
      },
      validateOperationSpec,
      callback) as Promise<Models.AddressesValidateResponse>;
  }
}

// Operation Specifications
const serializer = new coreHttp.Serializer(Mappers);
const validateOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/validateAddress",
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "address",
    mapper: {
      ...Mappers.Address,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ValidateAddressResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
