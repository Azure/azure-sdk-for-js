/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/billingRoleAssignmentsMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a BillingRoleAssignments. */
export class BillingRoleAssignments {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a BillingRoleAssignments.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Get the role assignment for the caller
   * @param billingAccountName billing Account Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsGetByBillingAccountResponse>
   */
  getByBillingAccount(billingAccountName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsGetByBillingAccountResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param callback The callback
   */
  getByBillingAccount(billingAccountName: string, billingRoleAssignmentName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByBillingAccount(billingAccountName: string, billingRoleAssignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  getByBillingAccount(billingAccountName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.BillingRoleAssignmentsGetByBillingAccountResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingRoleAssignmentName,
        options
      },
      getByBillingAccountOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsGetByBillingAccountResponse>;
  }

  /**
   * Delete the role assignment on this billing account
   * @param billingAccountName billing Account Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsDeleteByBillingAccountNameResponse>
   */
  deleteByBillingAccountName(billingAccountName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsDeleteByBillingAccountNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param callback The callback
   */
  deleteByBillingAccountName(billingAccountName: string, billingRoleAssignmentName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteByBillingAccountName(billingAccountName: string, billingRoleAssignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  deleteByBillingAccountName(billingAccountName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.BillingRoleAssignmentsDeleteByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingRoleAssignmentName,
        options
      },
      deleteByBillingAccountNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsDeleteByBillingAccountNameResponse>;
  }

  /**
   * Get the role assignment for the caller on the invoice Section
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsGetByInvoiceSectionNameResponse>
   */
  getByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsGetByInvoiceSectionNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param callback The callback
   */
  getByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleAssignmentName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleAssignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  getByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.BillingRoleAssignmentsGetByInvoiceSectionNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        billingRoleAssignmentName,
        options
      },
      getByInvoiceSectionNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsGetByInvoiceSectionNameResponse>;
  }

  /**
   * Delete the role assignment on the invoice Section
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsDeleteByInvoiceSectionNameResponse>
   */
  deleteByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsDeleteByInvoiceSectionNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param callback The callback
   */
  deleteByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleAssignmentName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleAssignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  deleteByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.BillingRoleAssignmentsDeleteByInvoiceSectionNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        billingRoleAssignmentName,
        options
      },
      deleteByInvoiceSectionNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsDeleteByInvoiceSectionNameResponse>;
  }

  /**
   * Get the role assignment for the caller on the Billing Profile
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsGetByBillingProfileNameResponse>
   */
  getByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsGetByBillingProfileNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param callback The callback
   */
  getByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  getByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.BillingRoleAssignmentsGetByBillingProfileNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        billingRoleAssignmentName,
        options
      },
      getByBillingProfileNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsGetByBillingProfileNameResponse>;
  }

  /**
   * Delete the role assignment on this Billing Profile
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsDeleteByBillingProfileNameResponse>
   */
  deleteByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsDeleteByBillingProfileNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param callback The callback
   */
  deleteByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  deleteByBillingProfileName(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.BillingRoleAssignmentsDeleteByBillingProfileNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        billingRoleAssignmentName,
        options
      },
      deleteByBillingProfileNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsDeleteByBillingProfileNameResponse>;
  }

  /**
   * Get the role assignments on the Billing Account
   * @param billingAccountName billing Account Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsListByBillingAccountNameResponse>
   */
  listByBillingAccountName(billingAccountName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsListByBillingAccountNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountName(billingAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  listByBillingAccountName(billingAccountName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): Promise<Models.BillingRoleAssignmentsListByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        options
      },
      listByBillingAccountNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsListByBillingAccountNameResponse>;
  }

  /**
   * The operation to add a role assignment to a billing account.
   * @param billingAccountName billing Account Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsAddByBillingAccountNameResponse>
   */
  addByBillingAccountName(billingAccountName: string, parameters: Models.BillingRoleAssignmentPayload, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsAddByBillingAccountNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param callback The callback
   */
  addByBillingAccountName(billingAccountName: string, parameters: Models.BillingRoleAssignmentPayload, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param options The optional parameters
   * @param callback The callback
   */
  addByBillingAccountName(billingAccountName: string, parameters: Models.BillingRoleAssignmentPayload, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  addByBillingAccountName(billingAccountName: string, parameters: Models.BillingRoleAssignmentPayload, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): Promise<Models.BillingRoleAssignmentsAddByBillingAccountNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        parameters,
        options
      },
      addByBillingAccountNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsAddByBillingAccountNameResponse>;
  }

  /**
   * Get the role assignments on the invoice Section
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsListByInvoiceSectionNameResponse>
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsListByInvoiceSectionNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param callback The callback
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  listByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): Promise<Models.BillingRoleAssignmentsListByInvoiceSectionNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        options
      },
      listByInvoiceSectionNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsListByInvoiceSectionNameResponse>;
  }

  /**
   * The operation to add a role assignment to a invoice Section.
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsAddByInvoiceSectionNameResponse>
   */
  addByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, parameters: Models.BillingRoleAssignmentPayload, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsAddByInvoiceSectionNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param callback The callback
   */
  addByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, parameters: Models.BillingRoleAssignmentPayload, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param invoiceSectionName InvoiceSection Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param options The optional parameters
   * @param callback The callback
   */
  addByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, parameters: Models.BillingRoleAssignmentPayload, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  addByInvoiceSectionName(billingAccountName: string, invoiceSectionName: string, parameters: Models.BillingRoleAssignmentPayload, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): Promise<Models.BillingRoleAssignmentsAddByInvoiceSectionNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        invoiceSectionName,
        parameters,
        options
      },
      addByInvoiceSectionNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsAddByInvoiceSectionNameResponse>;
  }

  /**
   * Get the role assignments on the Billing Profile
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsListByBillingProfileNameResponse>
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsListByBillingProfileNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param callback The callback
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  listByBillingProfileName(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): Promise<Models.BillingRoleAssignmentsListByBillingProfileNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        options
      },
      listByBillingProfileNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsListByBillingProfileNameResponse>;
  }

  /**
   * The operation to add a role assignment to a billing profile.
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingRoleAssignmentsAddByBillingProfileNameResponse>
   */
  addByBillingProfileName(billingAccountName: string, billingProfileName: string, parameters: Models.BillingRoleAssignmentPayload, options?: msRest.RequestOptionsBase): Promise<Models.BillingRoleAssignmentsAddByBillingProfileNameResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param callback The callback
   */
  addByBillingProfileName(billingAccountName: string, billingProfileName: string, parameters: Models.BillingRoleAssignmentPayload, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param parameters Parameters supplied to add a role assignment.
   * @param options The optional parameters
   * @param callback The callback
   */
  addByBillingProfileName(billingAccountName: string, billingProfileName: string, parameters: Models.BillingRoleAssignmentPayload, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  addByBillingProfileName(billingAccountName: string, billingProfileName: string, parameters: Models.BillingRoleAssignmentPayload, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): Promise<Models.BillingRoleAssignmentsAddByBillingProfileNameResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        parameters,
        options
      },
      addByBillingProfileNameOperationSpec,
      callback) as Promise<Models.BillingRoleAssignmentsAddByBillingProfileNameResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getByBillingAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/providers/Microsoft.Billing/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteByBillingAccountNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/providers/Microsoft.Billing/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getByInvoiceSectionNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Billing/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteByInvoiceSectionNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Billing/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getByBillingProfileNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteByBillingProfileNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/providers/Microsoft.Billing/billingRoleAssignments",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const addByBillingAccountNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/providers/Microsoft.Billing/createBillingRoleAssignment",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.BillingRoleAssignmentPayload,
      required: true
    }
  },
  responses: {
    201: {
      bodyMapper: Mappers.BillingRoleAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByInvoiceSectionNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Billing/billingRoleAssignments",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const addByInvoiceSectionNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Billing/createBillingRoleAssignment",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.invoiceSectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.BillingRoleAssignmentPayload,
      required: true
    }
  },
  responses: {
    201: {
      bodyMapper: Mappers.BillingRoleAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingProfileNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/billingRoleAssignments",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const addByBillingProfileNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/createBillingRoleAssignment",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.BillingRoleAssignmentPayload,
      required: true
    }
  },
  responses: {
    201: {
      bodyMapper: Mappers.BillingRoleAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
