/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Models from "../models";
import * as Mappers from "../models/availableBalancesMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a AvailableBalances. */
export class AvailableBalances {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a AvailableBalances.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * The latest available credit balance for a given billingAccountName and billingProfileName.
   * @param billingAccountName Billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.AvailableBalancesGetByBillingProfileResponse>
   */
  getByBillingProfile(billingAccountName: string, billingProfileName: string, options?: coreHttp.RequestOptionsBase): Promise<Models.AvailableBalancesGetByBillingProfileResponse>;
  /**
   * @param billingAccountName Billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param callback The callback
   */
  getByBillingProfile(billingAccountName: string, billingProfileName: string, callback: coreHttp.ServiceCallback<Models.AvailableBalance>): void;
  /**
   * @param billingAccountName Billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  getByBillingProfile(billingAccountName: string, billingProfileName: string, options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<Models.AvailableBalance>): void;
  getByBillingProfile(billingAccountName: string, billingProfileName: string, options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<Models.AvailableBalance>, callback?: coreHttp.ServiceCallback<Models.AvailableBalance>): Promise<Models.AvailableBalancesGetByBillingProfileResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        options
      },
      getByBillingProfileOperationSpec,
      callback) as Promise<Models.AvailableBalancesGetByBillingProfileResponse>;
  }
}

// Operation Specifications
const serializer = new coreHttp.Serializer(Mappers);
const getByBillingProfileOperationSpec: coreHttp.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/availableBalance/default",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AvailableBalance
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
