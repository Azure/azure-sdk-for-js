/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  PartnerTransferDetails,
  PartnerTransfersListOptionalParams,
  PartnerTransfersGetOptionalParams,
  PartnerTransfersGetResponse,
  PartnerInitiateTransferRequest,
  PartnerTransfersInitiateOptionalParams,
  PartnerTransfersInitiateResponse,
  PartnerTransfersCancelOptionalParams,
  PartnerTransfersCancelResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PartnerTransfers. */
export interface PartnerTransfers {
  /**
   * Lists the transfer requests sent to a customer. The operation is supported only for billing accounts
   * with agreement type Microsoft Partner Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param customerName The ID that uniquely identifies a customer.
   * @param options The options parameters.
   */
  list(
    billingAccountName: string,
    billingProfileName: string,
    customerName: string,
    options?: PartnerTransfersListOptionalParams,
  ): PagedAsyncIterableIterator<PartnerTransferDetails>;
  /**
   * Gets a transfer request by ID. The operation is supported only for billing accounts with agreement
   * type Microsoft Partner Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param customerName The ID that uniquely identifies a customer.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param options The options parameters.
   */
  get(
    billingAccountName: string,
    billingProfileName: string,
    customerName: string,
    transferName: string,
    options?: PartnerTransfersGetOptionalParams,
  ): Promise<PartnerTransfersGetResponse>;
  /**
   * Sends a request to a user in a customer's billing account to transfer billing ownership of their
   * subscriptions. The operation is supported only for billing accounts with agreement type Microsoft
   * Partner Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param customerName The ID that uniquely identifies a customer.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param parameters Request parameters that are provided to the initiate transfer operation.
   * @param options The options parameters.
   */
  initiate(
    billingAccountName: string,
    billingProfileName: string,
    customerName: string,
    transferName: string,
    parameters: PartnerInitiateTransferRequest,
    options?: PartnerTransfersInitiateOptionalParams,
  ): Promise<PartnerTransfersInitiateResponse>;
  /**
   * Cancels a transfer request. The operation is supported only for billing accounts with agreement type
   * Microsoft Partner Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param customerName The ID that uniquely identifies a customer.
   * @param transferName The ID that uniquely identifies a transfer request.
   * @param options The options parameters.
   */
  cancel(
    billingAccountName: string,
    billingProfileName: string,
    customerName: string,
    transferName: string,
    options?: PartnerTransfersCancelOptionalParams,
  ): Promise<PartnerTransfersCancelResponse>;
}
