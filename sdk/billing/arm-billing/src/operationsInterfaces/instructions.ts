/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Instruction,
  InstructionsListByBillingProfileOptionalParams,
  InstructionsGetOptionalParams,
  InstructionsGetResponse,
  InstructionsPutOptionalParams,
  InstructionsPutResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Instructions. */
export interface Instructions {
  /**
   * Lists the instructions by billing profile id.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param options The options parameters.
   */
  listByBillingProfile(
    billingAccountName: string,
    billingProfileName: string,
    options?: InstructionsListByBillingProfileOptionalParams
  ): PagedAsyncIterableIterator<Instruction>;
  /**
   * Get the instruction by name. These are custom billing instructions and are only applicable for
   * certain customers.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param instructionName Instruction Name.
   * @param options The options parameters.
   */
  get(
    billingAccountName: string,
    billingProfileName: string,
    instructionName: string,
    options?: InstructionsGetOptionalParams
  ): Promise<InstructionsGetResponse>;
  /**
   * Creates or updates an instruction. These are custom billing instructions and are only applicable for
   * certain customers.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param instructionName Instruction Name.
   * @param parameters The new instruction.
   * @param options The options parameters.
   */
  put(
    billingAccountName: string,
    billingProfileName: string,
    instructionName: string,
    parameters: Instruction,
    options?: InstructionsPutOptionalParams
  ): Promise<InstructionsPutResponse>;
}
