/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AssociatedTenant,
  AssociatedTenantsListByBillingAccountOptionalParams,
  AssociatedTenantsDeleteOptionalParams,
  AssociatedTenantsDeleteResponse,
  AssociatedTenantsGetOptionalParams,
  AssociatedTenantsGetResponse,
  AssociatedTenantsCreateOrUpdateOptionalParams,
  AssociatedTenantsCreateOrUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AssociatedTenants. */
export interface AssociatedTenants {
  /**
   * Lists the associated tenants that can collaborate with the billing account on commerce activities
   * like viewing and downloading invoices, managing payments, making purchases, and managing or
   * provisioning licenses.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param options The options parameters.
   */
  listByBillingAccount(
    billingAccountName: string,
    options?: AssociatedTenantsListByBillingAccountOptionalParams,
  ): PagedAsyncIterableIterator<AssociatedTenant>;
  /**
   * Deletes an associated tenant for a billing account.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param associatedTenantName The ID that uniquely identifies a tenant.
   * @param options The options parameters.
   */
  beginDelete(
    billingAccountName: string,
    associatedTenantName: string,
    options?: AssociatedTenantsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AssociatedTenantsDeleteResponse>,
      AssociatedTenantsDeleteResponse
    >
  >;
  /**
   * Deletes an associated tenant for a billing account.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param associatedTenantName The ID that uniquely identifies a tenant.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    billingAccountName: string,
    associatedTenantName: string,
    options?: AssociatedTenantsDeleteOptionalParams,
  ): Promise<AssociatedTenantsDeleteResponse>;
  /**
   * Gets an associated tenant by ID.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param associatedTenantName The ID that uniquely identifies a tenant.
   * @param options The options parameters.
   */
  get(
    billingAccountName: string,
    associatedTenantName: string,
    options?: AssociatedTenantsGetOptionalParams,
  ): Promise<AssociatedTenantsGetResponse>;
  /**
   * Create or update an associated tenant for the billing account.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param associatedTenantName The ID that uniquely identifies a tenant.
   * @param parameters An associated tenant.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    billingAccountName: string,
    associatedTenantName: string,
    parameters: AssociatedTenant,
    options?: AssociatedTenantsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AssociatedTenantsCreateOrUpdateResponse>,
      AssociatedTenantsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update an associated tenant for the billing account.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param associatedTenantName The ID that uniquely identifies a tenant.
   * @param parameters An associated tenant.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    billingAccountName: string,
    associatedTenantName: string,
    parameters: AssociatedTenant,
    options?: AssociatedTenantsCreateOrUpdateOptionalParams,
  ): Promise<AssociatedTenantsCreateOrUpdateResponse>;
}
