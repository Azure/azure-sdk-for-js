/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const BillingAccountListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingAccountListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingAccount"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddressDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddressDetails",
    modelProperties: {
      firstName: {
        serializedName: "firstName",
        type: {
          name: "String"
        }
      },
      middleName: {
        serializedName: "middleName",
        type: {
          name: "String"
        }
      },
      lastName: {
        serializedName: "lastName",
        type: {
          name: "String"
        }
      },
      companyName: {
        serializedName: "companyName",
        type: {
          name: "String"
        }
      },
      addressLine1: {
        serializedName: "addressLine1",
        required: true,
        type: {
          name: "String"
        }
      },
      addressLine2: {
        serializedName: "addressLine2",
        type: {
          name: "String"
        }
      },
      addressLine3: {
        serializedName: "addressLine3",
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        type: {
          name: "String"
        }
      },
      district: {
        serializedName: "district",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        required: true,
        type: {
          name: "String"
        }
      },
      postalCode: {
        serializedName: "postalCode",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingProfilesOnExpand: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingProfilesOnExpand",
    modelProperties: {
      hasMoreResults: {
        serializedName: "hasMoreResults",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingProfile"
            }
          }
        }
      }
    }
  }
};

export const IndirectRelationshipInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IndirectRelationshipInfo",
    modelProperties: {
      billingAccountName: {
        serializedName: "billingAccountName",
        type: {
          name: "String"
        }
      },
      billingProfileName: {
        serializedName: "billingProfileName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzurePlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzurePlan",
    modelProperties: {
      skuId: {
        serializedName: "skuId",
        type: {
          name: "String"
        }
      },
      skuDescription: {
        serializedName: "skuDescription",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoiceSectionsOnExpand: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoiceSectionsOnExpand",
    modelProperties: {
      hasMoreResults: {
        serializedName: "hasMoreResults",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InvoiceSection"
            }
          }
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Enrollment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Enrollment",
    modelProperties: {
      startDate: {
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      },
      currency: {
        serializedName: "currency",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      channel: {
        serializedName: "channel",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      policies: {
        serializedName: "policies",
        type: {
          name: "Composite",
          className: "EnrollmentPolicies"
        }
      },
      language: {
        serializedName: "language",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      countryCode: {
        serializedName: "countryCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingCycle: {
        serializedName: "billingCycle",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnrollmentPolicies: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnrollmentPolicies",
    modelProperties: {
      accountOwnerViewCharges: {
        serializedName: "accountOwnerViewCharges",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      departmentAdminViewCharges: {
        serializedName: "departmentAdminViewCharges",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      marketplaceEnabled: {
        serializedName: "marketplaceEnabled",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      reservedInstancesEnabled: {
        serializedName: "reservedInstancesEnabled",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetails"
        }
      }
    }
  }
};

export const ErrorDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorSubDetailsItem"
            }
          }
        }
      }
    }
  }
};

export const ErrorSubDetailsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorSubDetailsItem",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingAccountUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingAccountUpdateRequest",
    modelProperties: {
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      soldTo: {
        serializedName: "properties.soldTo",
        type: {
          name: "Composite",
          className: "AddressDetails"
        }
      },
      agreementType: {
        serializedName: "properties.agreementType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      accountType: {
        serializedName: "properties.accountType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      accountStatus: {
        serializedName: "properties.accountStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfiles: {
        serializedName: "properties.billingProfiles",
        type: {
          name: "Composite",
          className: "BillingProfilesOnExpand"
        }
      },
      enrollmentDetails: {
        serializedName: "properties.enrollmentDetails",
        type: {
          name: "Composite",
          className: "Enrollment"
        }
      },
      departments: {
        serializedName: "properties.departments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Department"
            }
          }
        }
      },
      enrollmentAccounts: {
        serializedName: "properties.enrollmentAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnrollmentAccount"
            }
          }
        }
      },
      hasReadAccess: {
        serializedName: "properties.hasReadAccess",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      notificationEmailAddress: {
        serializedName: "properties.notificationEmailAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoiceSectionListWithCreateSubPermissionResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoiceSectionListWithCreateSubPermissionResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InvoiceSectionWithCreateSubPermission"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoiceSectionWithCreateSubPermission: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoiceSectionWithCreateSubPermission",
    modelProperties: {
      invoiceSectionId: {
        serializedName: "invoiceSectionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceSectionDisplayName: {
        serializedName: "invoiceSectionDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceSectionSystemId: {
        serializedName: "invoiceSectionSystemId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileId: {
        serializedName: "billingProfileId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileDisplayName: {
        serializedName: "billingProfileDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileStatus: {
        serializedName: "billingProfileStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileStatusReasonCode: {
        serializedName: "billingProfileStatusReasonCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileSpendingLimit: {
        serializedName: "billingProfileSpendingLimit",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileSystemId: {
        serializedName: "billingProfileSystemId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      enabledAzurePlans: {
        serializedName: "enabledAzurePlans",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzurePlan"
            }
          }
        }
      }
    }
  }
};

export const ValidateAddressResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidateAddressResponse",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      suggestedAddresses: {
        serializedName: "suggestedAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AddressDetails"
            }
          }
        }
      },
      validationMessage: {
        serializedName: "validationMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Amount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Amount",
    modelProperties: {
      currency: {
        serializedName: "currency",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const InstructionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstructionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Instruction"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingProfileListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingProfileListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingProfile"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomerListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomerListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Customer"
            }
          }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Reseller: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Reseller",
    modelProperties: {
      resellerId: {
        serializedName: "resellerId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoiceSectionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoiceSectionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InvoiceSection"
            }
          }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPermissionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPermissionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingPermissionsProperties"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPermissionsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPermissionsProperties",
    modelProperties: {
      actions: {
        serializedName: "actions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notActions: {
        serializedName: "notActions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BillingSubscriptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingSubscriptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingSubscription"
            }
          }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Product"
            }
          }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoiceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoiceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Invoice"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      totalCount: {
        serializedName: "totalCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Document: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Document",
    modelProperties: {
      kind: {
        serializedName: "kind",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PaymentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PaymentProperties",
    modelProperties: {
      paymentType: {
        serializedName: "paymentType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      amount: {
        serializedName: "amount",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      date: {
        serializedName: "date",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      paymentMethodFamily: {
        serializedName: "paymentMethodFamily",
        type: {
          name: "String"
        }
      },
      paymentMethodType: {
        serializedName: "paymentMethodType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RebillDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RebillDetails",
    modelProperties: {
      creditNoteDocumentId: {
        serializedName: "creditNoteDocumentId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceDocumentId: {
        serializedName: "invoiceDocumentId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      rebillDetails: {
        serializedName: "rebillDetails",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "RebillDetails" } }
        }
      }
    }
  }
};

export const DownloadUrl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DownloadUrl",
    modelProperties: {
      expiryTime: {
        serializedName: "expiryTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransferBillingSubscriptionRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferBillingSubscriptionRequestProperties",
    modelProperties: {
      destinationInvoiceSectionId: {
        serializedName: "destinationInvoiceSectionId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ValidateSubscriptionTransferEligibilityResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidateSubscriptionTransferEligibilityResult",
    modelProperties: {
      isMoveEligible: {
        serializedName: "isMoveEligible",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Composite",
          className: "ValidateSubscriptionTransferEligibilityError"
        }
      }
    }
  }
};

export const ValidateSubscriptionTransferEligibilityError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidateSubscriptionTransferEligibilityError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransferProductRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferProductRequestProperties",
    modelProperties: {
      destinationInvoiceSectionId: {
        serializedName: "destinationInvoiceSectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ValidateProductTransferEligibilityResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidateProductTransferEligibilityResult",
    modelProperties: {
      isMoveEligible: {
        serializedName: "isMoveEligible",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Composite",
          className: "ValidateProductTransferEligibilityError"
        }
      }
    }
  }
};

export const ValidateProductTransferEligibilityError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidateProductTransferEligibilityError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransactionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransactionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Transaction"
            }
          }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingRoleDefinitionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingRoleDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingRoleDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingRoleAssignmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingRoleAssignmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingRoleAssignment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AgreementListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgreementListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Agreement"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Participants: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Participants",
    modelProperties: {
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusDate: {
        serializedName: "statusDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      email: {
        serializedName: "email",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Reservation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      summary: {
        serializedName: "summary",
        type: {
          name: "Composite",
          className: "ReservationSummary"
        }
      }
    }
  }
};

export const Reservation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Reservation",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ReservationSkuProperty"
        }
      },
      appliedScopes: {
        serializedName: "properties.appliedScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appliedScopeType: {
        serializedName: "properties.appliedScopeType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reservedResourceType: {
        serializedName: "properties.reservedResourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      quantity: {
        serializedName: "properties.quantity",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expiryDate: {
        serializedName: "properties.expiryDate",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningSubState: {
        serializedName: "properties.provisioningSubState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayProvisioningState: {
        serializedName: "properties.displayProvisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userFriendlyRenewState: {
        serializedName: "properties.userFriendlyRenewState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userFriendlyAppliedScopeType: {
        serializedName: "properties.userFriendlyAppliedScopeType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      effectiveDateTime: {
        serializedName: "properties.effectiveDateTime",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      skuDescription: {
        serializedName: "properties.skuDescription",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      term: {
        serializedName: "properties.term",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      renew: {
        serializedName: "properties.renew",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      renewSource: {
        serializedName: "properties.renewSource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      utilization: {
        serializedName: "properties.utilization",
        type: {
          name: "Composite",
          className: "ReservationPropertyUtilization"
        }
      }
    }
  }
};

export const ReservationSkuProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationSkuProperty",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationPropertyUtilization: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationPropertyUtilization",
    modelProperties: {
      trend: {
        serializedName: "trend",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      aggregates: {
        serializedName: "aggregates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationUtilizationAggregates"
            }
          }
        }
      }
    }
  }
};

export const ReservationUtilizationAggregates: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationUtilizationAggregates",
    modelProperties: {
      grain: {
        serializedName: "grain",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      grainUnit: {
        serializedName: "grainUnit",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      valueUnit: {
        serializedName: "valueUnit",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReservationSummary",
    modelProperties: {
      succeededCount: {
        serializedName: "succeededCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      failedCount: {
        serializedName: "failedCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      expiringCount: {
        serializedName: "expiringCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      expiredCount: {
        serializedName: "expiredCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      pendingCount: {
        serializedName: "pendingCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      cancelledCount: {
        serializedName: "cancelledCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EnrollmentAccountListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnrollmentAccountListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnrollmentAccountSummary"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPeriodsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPeriodsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingPeriod"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingProfileCreationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingProfileCreationRequest",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      poNumber: {
        serializedName: "poNumber",
        type: {
          name: "String"
        }
      },
      billTo: {
        serializedName: "billTo",
        type: {
          name: "Composite",
          className: "AddressDetails"
        }
      },
      invoiceEmailOptIn: {
        serializedName: "invoiceEmailOptIn",
        type: {
          name: "Boolean"
        }
      },
      enabledAzurePlans: {
        serializedName: "enabledAzurePlans",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzurePlan"
            }
          }
        }
      }
    }
  }
};

export const InvoiceSectionCreationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoiceSectionCreationRequest",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnrollmentAccountContext: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnrollmentAccountContext",
    modelProperties: {
      costCenter: {
        serializedName: "costCenter",
        type: {
          name: "String"
        }
      },
      startDate: {
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      },
      enrollmentAccountName: {
        serializedName: "enrollmentAccountName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoiceSection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoiceSection",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      state: {
        serializedName: "properties.state",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemId: {
        serializedName: "properties.systemId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "properties.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      targetCloud: {
        serializedName: "properties.targetCloud",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingProfile",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      poNumber: {
        serializedName: "properties.poNumber",
        type: {
          name: "String"
        }
      },
      billingRelationshipType: {
        serializedName: "properties.billingRelationshipType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billTo: {
        serializedName: "properties.billTo",
        type: {
          name: "Composite",
          className: "AddressDetails"
        }
      },
      indirectRelationshipInfo: {
        serializedName: "properties.indirectRelationshipInfo",
        type: {
          name: "Composite",
          className: "IndirectRelationshipInfo"
        }
      },
      invoiceEmailOptIn: {
        serializedName: "properties.invoiceEmailOptIn",
        type: {
          name: "Boolean"
        }
      },
      invoiceDay: {
        serializedName: "properties.invoiceDay",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      currency: {
        serializedName: "properties.currency",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      enabledAzurePlans: {
        serializedName: "properties.enabledAzurePlans",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzurePlan"
            }
          }
        }
      },
      invoiceSections: {
        serializedName: "properties.invoiceSections",
        type: {
          name: "Composite",
          className: "InvoiceSectionsOnExpand"
        }
      },
      hasReadAccess: {
        serializedName: "properties.hasReadAccess",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      systemId: {
        serializedName: "properties.systemId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      statusReasonCode: {
        serializedName: "properties.statusReasonCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      spendingLimit: {
        serializedName: "properties.spendingLimit",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      targetClouds: {
        serializedName: "properties.targetClouds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tags: {
        serializedName: "properties.tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const EnrollmentAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnrollmentAccount",
    modelProperties: {
      ...Resource.type.modelProperties,
      accountName: {
        serializedName: "properties.accountName",
        type: {
          name: "String"
        }
      },
      costCenter: {
        serializedName: "properties.costCenter",
        type: {
          name: "String"
        }
      },
      accountOwner: {
        serializedName: "properties.accountOwner",
        type: {
          name: "String"
        }
      },
      accountOwnerEmail: {
        serializedName: "properties.accountOwnerEmail",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      startDate: {
        serializedName: "properties.startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "properties.endDate",
        type: {
          name: "DateTime"
        }
      },
      department: {
        serializedName: "properties.department",
        type: {
          name: "Composite",
          className: "Department"
        }
      }
    }
  }
};

export const Department: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Department",
    modelProperties: {
      ...Resource.type.modelProperties,
      departmentName: {
        serializedName: "properties.departmentName",
        type: {
          name: "String"
        }
      },
      costCenter: {
        serializedName: "properties.costCenter",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      enrollmentAccounts: {
        serializedName: "properties.enrollmentAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnrollmentAccount"
            }
          }
        }
      }
    }
  }
};

export const BillingAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingAccount",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      soldTo: {
        serializedName: "properties.soldTo",
        type: {
          name: "Composite",
          className: "AddressDetails"
        }
      },
      agreementType: {
        serializedName: "properties.agreementType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      accountType: {
        serializedName: "properties.accountType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      accountStatus: {
        serializedName: "properties.accountStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfiles: {
        serializedName: "properties.billingProfiles",
        type: {
          name: "Composite",
          className: "BillingProfilesOnExpand"
        }
      },
      enrollmentDetails: {
        serializedName: "properties.enrollmentDetails",
        type: {
          name: "Composite",
          className: "Enrollment"
        }
      },
      departments: {
        serializedName: "properties.departments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Department"
            }
          }
        }
      },
      enrollmentAccounts: {
        serializedName: "properties.enrollmentAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnrollmentAccount"
            }
          }
        }
      },
      hasReadAccess: {
        serializedName: "properties.hasReadAccess",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      notificationEmailAddress: {
        serializedName: "properties.notificationEmailAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailableBalance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableBalance",
    modelProperties: {
      ...Resource.type.modelProperties,
      amount: {
        serializedName: "properties.amount",
        type: {
          name: "Composite",
          className: "Amount"
        }
      }
    }
  }
};

export const Instruction: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Instruction",
    modelProperties: {
      ...Resource.type.modelProperties,
      amount: {
        serializedName: "properties.amount",
        type: {
          name: "Number"
        }
      },
      startDate: {
        serializedName: "properties.startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "properties.endDate",
        type: {
          name: "DateTime"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Customer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Customer",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingProfileId: {
        serializedName: "properties.billingProfileId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileDisplayName: {
        serializedName: "properties.billingProfileDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      enabledAzurePlans: {
        serializedName: "properties.enabledAzurePlans",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzurePlan"
            }
          }
        }
      },
      resellers: {
        serializedName: "properties.resellers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Reseller"
            }
          }
        }
      }
    }
  }
};

export const BillingSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingSubscription",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      subscriptionBillingStatus: {
        serializedName: "properties.subscriptionBillingStatus",
        type: {
          name: "String"
        }
      },
      lastMonthCharges: {
        serializedName: "properties.lastMonthCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      monthToDateCharges: {
        serializedName: "properties.monthToDateCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      billingProfileId: {
        serializedName: "properties.billingProfileId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileDisplayName: {
        serializedName: "properties.billingProfileDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      costCenter: {
        serializedName: "properties.costCenter",
        type: {
          name: "String"
        }
      },
      customerId: {
        serializedName: "properties.customerId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      customerDisplayName: {
        serializedName: "properties.customerDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceSectionId: {
        serializedName: "properties.invoiceSectionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceSectionDisplayName: {
        serializedName: "properties.invoiceSectionDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reseller: {
        serializedName: "properties.reseller",
        type: {
          name: "Composite",
          className: "Reseller"
        }
      },
      skuId: {
        serializedName: "properties.skuId",
        type: {
          name: "String"
        }
      },
      skuDescription: {
        serializedName: "properties.skuDescription",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      suspensionReasons: {
        serializedName: "properties.suspensionReasons",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Product: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Product",
    modelProperties: {
      ...Resource.type.modelProperties,
      autoRenew: {
        serializedName: "properties.autoRenew",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      purchaseDate: {
        serializedName: "properties.purchaseDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      productTypeId: {
        serializedName: "properties.productTypeId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productType: {
        serializedName: "properties.productType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      endDate: {
        serializedName: "properties.endDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      billingFrequency: {
        serializedName: "properties.billingFrequency",
        type: {
          name: "String"
        }
      },
      lastCharge: {
        serializedName: "properties.lastCharge",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      lastChargeDate: {
        serializedName: "properties.lastChargeDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      quantity: {
        serializedName: "properties.quantity",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      skuId: {
        serializedName: "properties.skuId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      skuDescription: {
        serializedName: "properties.skuDescription",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      availabilityId: {
        serializedName: "properties.availabilityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceSectionId: {
        serializedName: "properties.invoiceSectionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceSectionDisplayName: {
        serializedName: "properties.invoiceSectionDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileId: {
        serializedName: "properties.billingProfileId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileDisplayName: {
        serializedName: "properties.billingProfileDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      customerId: {
        serializedName: "properties.customerId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      customerDisplayName: {
        serializedName: "properties.customerDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reseller: {
        serializedName: "properties.reseller",
        type: {
          name: "Composite",
          className: "Reseller"
        }
      }
    }
  }
};

export const Invoice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Invoice",
    modelProperties: {
      ...Resource.type.modelProperties,
      dueDate: {
        serializedName: "properties.dueDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      invoiceDate: {
        serializedName: "properties.invoiceDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      amountDue: {
        serializedName: "properties.amountDue",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      azurePrepaymentApplied: {
        serializedName: "properties.azurePrepaymentApplied",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      billedAmount: {
        serializedName: "properties.billedAmount",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      creditAmount: {
        serializedName: "properties.creditAmount",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      freeAzureCreditApplied: {
        serializedName: "properties.freeAzureCreditApplied",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      subTotal: {
        serializedName: "properties.subTotal",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      taxAmount: {
        serializedName: "properties.taxAmount",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      totalAmount: {
        serializedName: "properties.totalAmount",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      invoicePeriodStartDate: {
        serializedName: "properties.invoicePeriodStartDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      invoicePeriodEndDate: {
        serializedName: "properties.invoicePeriodEndDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      invoiceType: {
        serializedName: "properties.invoiceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isMonthlyInvoice: {
        serializedName: "properties.isMonthlyInvoice",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      billingProfileId: {
        serializedName: "properties.billingProfileId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileDisplayName: {
        serializedName: "properties.billingProfileDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      purchaseOrderNumber: {
        serializedName: "properties.purchaseOrderNumber",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      documents: {
        serializedName: "properties.documents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Document"
            }
          }
        }
      },
      payments: {
        serializedName: "properties.payments",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PaymentProperties"
            }
          }
        }
      },
      rebillDetails: {
        serializedName: "properties.rebillDetails",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "RebillDetails" } }
        }
      },
      documentType: {
        serializedName: "properties.documentType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billedDocumentId: {
        serializedName: "properties.billedDocumentId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      creditForDocumentId: {
        serializedName: "properties.creditForDocumentId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Transaction: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Transaction",
    modelProperties: {
      ...Resource.type.modelProperties,
      kind: {
        serializedName: "properties.kind",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "properties.date",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      invoice: {
        serializedName: "properties.invoice",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceId: {
        serializedName: "properties.invoiceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      orderId: {
        serializedName: "properties.orderId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      orderName: {
        serializedName: "properties.orderName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productFamily: {
        serializedName: "properties.productFamily",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productTypeId: {
        serializedName: "properties.productTypeId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productType: {
        serializedName: "properties.productType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productDescription: {
        serializedName: "properties.productDescription",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      transactionType: {
        serializedName: "properties.transactionType",
        type: {
          name: "String"
        }
      },
      transactionAmount: {
        serializedName: "properties.transactionAmount",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      quantity: {
        serializedName: "properties.quantity",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      invoiceSectionId: {
        serializedName: "properties.invoiceSectionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceSectionDisplayName: {
        serializedName: "properties.invoiceSectionDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileId: {
        serializedName: "properties.billingProfileId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileDisplayName: {
        serializedName: "properties.billingProfileDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      customerId: {
        serializedName: "properties.customerId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      customerDisplayName: {
        serializedName: "properties.customerDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "properties.subscriptionName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      azurePlan: {
        serializedName: "properties.azurePlan",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      azureCreditApplied: {
        serializedName: "properties.azureCreditApplied",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      billingCurrency: {
        serializedName: "properties.billingCurrency",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      discount: {
        serializedName: "properties.discount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      effectivePrice: {
        serializedName: "properties.effectivePrice",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      exchangeRate: {
        serializedName: "properties.exchangeRate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      marketPrice: {
        serializedName: "properties.marketPrice",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      pricingCurrency: {
        serializedName: "properties.pricingCurrency",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      servicePeriodStartDate: {
        serializedName: "properties.servicePeriodStartDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      servicePeriodEndDate: {
        serializedName: "properties.servicePeriodEndDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      subTotal: {
        serializedName: "properties.subTotal",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      tax: {
        serializedName: "properties.tax",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      unitOfMeasure: {
        serializedName: "properties.unitOfMeasure",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      units: {
        serializedName: "properties.units",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      unitType: {
        serializedName: "properties.unitType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Policy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Policy",
    modelProperties: {
      ...Resource.type.modelProperties,
      marketplacePurchases: {
        serializedName: "properties.marketplacePurchases",
        type: {
          name: "String"
        }
      },
      reservationPurchases: {
        serializedName: "properties.reservationPurchases",
        type: {
          name: "String"
        }
      },
      viewCharges: {
        serializedName: "properties.viewCharges",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomerPolicy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomerPolicy",
    modelProperties: {
      ...Resource.type.modelProperties,
      viewCharges: {
        serializedName: "properties.viewCharges",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingProperty",
    modelProperties: {
      ...Resource.type.modelProperties,
      accountAdminNotificationEmailAddress: {
        serializedName: "properties.accountAdminNotificationEmailAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingTenantId: {
        serializedName: "properties.billingTenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingAccountId: {
        serializedName: "properties.billingAccountId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingAccountDisplayName: {
        serializedName: "properties.billingAccountDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileId: {
        serializedName: "properties.billingProfileId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileDisplayName: {
        serializedName: "properties.billingProfileDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileStatus: {
        serializedName: "properties.billingProfileStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileStatusReasonCode: {
        serializedName: "properties.billingProfileStatusReasonCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      billingProfileSpendingLimit: {
        serializedName: "properties.billingProfileSpendingLimit",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      costCenter: {
        serializedName: "properties.costCenter",
        type: {
          name: "String"
        }
      },
      invoiceSectionId: {
        serializedName: "properties.invoiceSectionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      invoiceSectionDisplayName: {
        serializedName: "properties.invoiceSectionDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isAccountAdmin: {
        serializedName: "properties.isAccountAdmin",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      productId: {
        serializedName: "properties.productId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productName: {
        serializedName: "properties.productName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      skuId: {
        serializedName: "properties.skuId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      skuDescription: {
        serializedName: "properties.skuDescription",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingRoleDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingRoleDefinition",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "properties.permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingPermissionsProperties"
            }
          }
        }
      },
      roleName: {
        serializedName: "properties.roleName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingRoleAssignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingRoleAssignment",
    modelProperties: {
      ...Resource.type.modelProperties,
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdByPrincipalTenantId: {
        serializedName: "properties.createdByPrincipalTenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdByPrincipalId: {
        serializedName: "properties.createdByPrincipalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdByUserEmailAddress: {
        serializedName: "properties.createdByUserEmailAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalTenantId: {
        serializedName: "properties.principalTenantId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userAuthenticationType: {
        serializedName: "properties.userAuthenticationType",
        type: {
          name: "String"
        }
      },
      userEmailAddress: {
        serializedName: "properties.userEmailAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Agreement: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Agreement",
    modelProperties: {
      ...Resource.type.modelProperties,
      agreementLink: {
        serializedName: "properties.agreementLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "properties.category",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      acceptanceMode: {
        serializedName: "properties.acceptanceMode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      effectiveDate: {
        serializedName: "properties.effectiveDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      participants: {
        serializedName: "properties.participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Participants"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnrollmentAccountSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnrollmentAccountSummary",
    modelProperties: {
      ...Resource.type.modelProperties,
      principalName: {
        serializedName: "properties.principalName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingPeriod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingPeriod",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingPeriodStartDate: {
        serializedName: "properties.billingPeriodStartDate",
        readOnly: true,
        type: {
          name: "Date"
        }
      },
      billingPeriodEndDate: {
        serializedName: "properties.billingPeriodEndDate",
        readOnly: true,
        type: {
          name: "Date"
        }
      },
      invoiceIds: {
        serializedName: "properties.invoiceIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BillingProfilesCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingProfilesCreateOrUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const InvoiceSectionsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoiceSectionsCreateOrUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BillingSubscriptionsMoveHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingSubscriptionsMoveHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ProductsMoveHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductsMoveHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const InvoicesDownloadInvoiceHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoicesDownloadInvoiceHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoicesDownloadMultipleBillingProfileInvoicesHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoicesDownloadMultipleBillingProfileInvoicesHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoicesDownloadBillingSubscriptionInvoiceHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoicesDownloadBillingSubscriptionInvoiceHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoicesDownloadMultipleBillingSubscriptionInvoicesHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InvoicesDownloadMultipleBillingSubscriptionInvoicesHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      }
    }
  }
};
