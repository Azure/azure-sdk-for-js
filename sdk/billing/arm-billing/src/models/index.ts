/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** An agreement. */
export interface AgreementProperties {
  /**
   * The mode of acceptance for an agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly acceptanceMode?: AcceptanceMode;
  /**
   * The URL to download the agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agreementLink?: string;
  /**
   * The list of billing profiles associated with agreement and present only for specific agreements.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileInfo?: BillingProfileInfo[];
  /**
   * The category of the agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: Category;
  /**
   * The name of the agreement signed by a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The date from which the agreement is effective.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDate?: Date;
  /**
   * The date when the agreement expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: Date;
  /**
   * The list of participants that participates in acceptance of an agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly participants?: Participant[];
  /**
   * The current status of the agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The ID of the lead billing account if this agreement is part of the Customer Affiliate Purchase Terms.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly leadBillingAccountName?: string;
}

/** Details about billing profile associated with agreement and available only for specific agreements. */
export interface BillingProfileInfo {
  /** The fully qualified ID that uniquely identifies a billing account. */
  billingAccountId?: string;
  /** The name of the billing profile. */
  billingProfileDisplayName?: string;
  /** The friendly ID that uniquely identifies a billing profile. */
  billingProfileId?: string;
  /** The fully qualified ID that uniquely identifies a billing profile. */
  billingProfileSystemId?: string;
  /** Billing account name. Available for a specific type of agreement. */
  indirectRelationshipOrganizationName?: string;
}

/** Billing account name. Available for a specific type of agreement. */
export interface Participant {
  /**
   * The email address of the participant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly email?: string;
  /**
   * The acceptance status of the participant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The date when the status got changed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusDate?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** A container for a list of resources */
export interface AgreementListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Agreement[];
}

/** An associated tenant. */
export interface AssociatedTenantProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The name of the associated tenant. */
  displayName?: string;
  /** The ID that uniquely identifies a tenant. */
  tenantId?: string;
  /** The state determines whether users from the associated tenant can be assigned roles for commerce activities like viewing and downloading invoices, managing payments, and making purchases. */
  billingManagementState?: BillingManagementTenantState;
  /** The state determines whether subscriptions and licenses can be provisioned in the associated tenant. It can be set to 'Pending' to initiate a billing request. */
  provisioningManagementState?: ProvisioningTenantState;
  /**
   * The unique identifier for the billing request that is created when enabling provisioning for an associated tenant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningBillingRequestId?: string;
}

/** A container for a list of resources */
export interface AssociatedTenantListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AssociatedTenant[];
}

/** The Available Credit or Payment on Account Balance. The credit balance can be used to settle due or past due invoices. */
export interface AvailableBalanceProperties {
  /** Credit amount for immediate payment. */
  amount?: AvailableBalancePropertiesAmount;
  /**
   * The list of payments on accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentsOnAccount?: PaymentOnAccount[];
  /** Total amount of payments on accounts. */
  totalPaymentsOnAccount?: AvailableBalancePropertiesTotalPaymentsOnAccount;
}

/** The amount. */
export interface Amount {
  /**
   * The currency for the amount value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currency?: string;
  /**
   * The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: number;
}

/** A Payment on Account. */
export interface PaymentOnAccount {
  /** Payment on Account amount. */
  amount?: PaymentOnAccountAmount;
  /**
   * The ID of the billing profile for the payments on account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile for the payments on account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the invoice for which the payments on account was generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceId?: string;
  /**
   * The name of the invoice for the payments on account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceName?: string;
  /**
   * The date of the payments on account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly date?: Date;
  /**
   * Payment on Account type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodType?: PaymentMethodFamily;
}

/** The properties of payment term. */
export interface PaymentTerm {
  /** Represents duration in netXX format. Always in days. */
  term?: string;
  /** The date on when the defined 'Payment Term' will be effective from and is always in UTC. */
  startDate?: Date;
  /** The date on when the defined 'Payment Term' will end and is always in UTC. */
  endDate?: Date;
  /**
   * Indicates payment term is the standard payment term.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDefault?: boolean;
}

/** A billing account. */
export interface BillingAccountProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The current status of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountStatus?: AccountStatus;
  /**
   * The type of customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountType?: AccountType;
  /**
   * The tier of the account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountSubType?: AccountSubType;
  /**
   * Reason for the specified billing account status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountStatusReasonCode?: BillingAccountStatusReasonCode;
  /**
   * The type of agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agreementType?: AgreementType;
  /** The billing account name. */
  displayName?: string;
  /** The properties of an enrollment. */
  enrollmentDetails?: BillingAccountPropertiesEnrollmentDetails;
  /** Indicates whether user has read access to the billing account. */
  hasReadAccess?: boolean;
  /** Indicates whether or not the billing account has any billing profiles. */
  hasNoBillingProfiles?: boolean;
  /** Notification email address for legacy account. Available for agreement type Microsoft Online Services Program. */
  notificationEmailAddress?: string;
  /** The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments on the billing account and all purchases are provisioned in this tenant. */
  primaryBillingTenantId?: string;
  /** The address of the individual or organization that is responsible for the billing account. */
  soldTo?: BillingAccountPropertiesSoldTo;
  /** Describes the registration number of the organization linked with the billing account. */
  registrationNumber?: BillingAccountPropertiesRegistrationNumber;
  /**
   * Identifies the billing relationships represented by a billing account. The billing relationship may be between Microsoft, the customer, and/or a third-party.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingRelationshipTypes?: BillingRelationshipType[];
  /**
   * Qualifications for pricing on a billing account. Values may be Commercial, Education, Charity or Government.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly qualifications?: string[];
  /** A list of tax identifiers for the billing account. */
  taxIds?: TaxIdentifier[];
}

/** The properties of an enrollment. */
export interface EnrollmentDetails {
  /** The start date of the enrollment. */
  startDate?: Date;
  /** The end date of the enrollment. */
  endDate?: Date;
  /**
   * The billing currency for the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currency?: string;
  /**
   * The channel type of the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly channel?: string;
  /**
   * The language for the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly language?: string;
  /**
   * The country code of the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countryCode?: string;
  /**
   * The billing cycle for the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingCycle?: string;
  /**
   * The billing account extension opted by the company.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedTermOption?: ExtendedTermOption;
  /**
   * The support level offer associated with an enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportLevel?: SupportLevel;
  /**
   * The support coverage period for the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportCoverage?: string;
  /**
   * The cloud of the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloud?: string;
  /** The purchase order number of the enrollment. */
  poNumber?: string;
  /**
   * Markup status of enrollment, applicable only for indirect enrollments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly markupStatus?: MarkupStatus;
  /** The properties of an enrollment which are applicable only for indirect enrollments. */
  indirectRelationshipInfo?: EnrollmentDetailsIndirectRelationshipInfo;
  /**
   * The contact who receives invoices of the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceRecipient?: string;
}

/** Identifies the billing profile that is linked to another billing profile in indirect purchase motion. */
export interface IndirectRelationshipInfo {
  /** The billing account name of the partner or the customer for an indirect motion. */
  billingAccountName?: string;
  /** The billing profile name of the partner or the customer for an indirect motion. */
  billingProfileName?: string;
  /** The display name of the partner or customer for an indirect motion. */
  displayName?: string;
}

/** Address details. */
export interface AddressDetails {
  /** Address line 1. */
  addressLine1: string;
  /** Address line 2. */
  addressLine2?: string;
  /** Address line 3. */
  addressLine3?: string;
  /** Address city. */
  city?: string;
  /** Company name. Optional for MCA Individual (Pay-as-you-go). */
  companyName?: string;
  /** Country code uses ISO 3166-1 Alpha-2 format. */
  country: string;
  /** Address district. */
  district?: string;
  /** Email address. */
  email?: string;
  /** First name. Optional for MCA Enterprise. */
  firstName?: string;
  /** Last name. Optional for MCA Enterprise. */
  lastName?: string;
  /** Middle name. */
  middleName?: string;
  /** Phone number. */
  phoneNumber?: string;
  /** Postal code. */
  postalCode?: string;
  /** Address region. */
  region?: string;
  /** Indicates if the address is incomplete. */
  isValidAddress?: boolean;
}

/** Describes the registration number of the organization linked with the billing account. */
export interface RegistrationNumber {
  /** The unique identification number of the organization linked with the billing account. */
  id?: string;
  /**
   * Identifies if the registration number is required for the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly required?: boolean;
  /**
   * The types of registration number allowed based on the country of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string[];
}

/** A tax identifier for the billing account. */
export interface TaxIdentifier {
  /** The id of the tax identifier. */
  id?: string;
  /** The type of the tax identifier. */
  type?: TaxIdentifierType;
  /** The scope of the tax identifier. */
  scope?: string;
  /** The country of the tax identifier. */
  country?: string;
  /** The status of the tax identifier. */
  status?: TaxIdentifierStatus;
}

/** The details for a billing account transitioned from agreement type Microsoft Online Services Program to agreement type Microsoft Customer Agreement. */
export interface TransitionDetails {
  /**
   * The transition completion date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transitionDate?: Date;
  /**
   * The anniversary day of the pre-transitioned account of type Microsoft Online Services Program.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly anniversaryDay?: number;
}

/** A container for a list of resources */
export interface InvoiceSectionWithCreateSubPermissionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: InvoiceSectionWithCreateSubPermission[];
}

/** Invoice section properties with create subscription permission. */
export interface InvoiceSectionWithCreateSubPermission {
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The system generated unique identifier for a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileSystemId?: string;
  /**
   * The status of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileStatus?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileStatusReasonCode?: BillingProfileStatusReasonCode;
  /**
   * The billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileSpendingLimit?: SpendingLimit;
  /**
   * Enabled azure plans for the associated billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enabledAzurePlans?: AzurePlan[];
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * The system generated unique identifier for an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionSystemId?: string;
}

/** Details of the Azure plan. */
export interface AzurePlan {
  /** The ID that uniquely identifies a product. */
  productId?: string;
  /** The ID that uniquely identifies a sku. */
  skuId?: string;
  /** The sku description. */
  skuDescription?: string;
}

/** Result of the payment terms eligibility. */
export interface PaymentTermsEligibilityResult {
  /** Indicates the eligibility status of the payment terms. */
  eligibilityStatus?: PaymentTermsEligibilityStatus;
  /** Details of the payment terms eligibility. */
  eligibilityDetails?: PaymentTermsEligibilityDetail[];
}

/** Details of the payment terms eligibility. */
export interface PaymentTermsEligibilityDetail {
  /** Indicates the reason for the ineligibility of the payment terms. */
  code?: PaymentTermsEligibilityCode;
  /** Indicates the message for the ineligibility of the payment terms. */
  message?: string;
}

/** A container for a list of resources */
export interface BillingAccountListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingAccount[];
}

/** Result of the address validation. */
export interface AddressValidationResponse {
  /**
   * Status of the address validation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: AddressValidationStatus;
  /**
   * The list of suggested addresses.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suggestedAddresses?: AddressDetails[];
  /**
   * Validation error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly validationMessage?: string;
}

/** A container for a list of resources */
export interface BillingPermissionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingPermission[];
}

/** The set of allowed action and not allowed actions a caller has on a resource. */
export interface BillingPermission {
  /**
   * The set of actions that the caller is allowed to perform.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actions?: string[];
  /**
   * The set of actions that the caller is not allowed to perform.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly notActions?: string[];
}

/** Request to check access. */
export interface CheckAccessRequest {
  /** List of actions passed in the request body against which the permissions will be checked. */
  actions?: string[];
}

/** The properties of a check access response. */
export interface CheckAccessResponse {
  /**
   * Access Decision, specifies access is allowed or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accessDecision?: AccessDecision;
  /**
   * Gets or sets an action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly action?: string;
}

/** Eligibility to delete a billing profile result. */
export interface DeleteBillingProfileEligibilityResult {
  /** Status describing if billing profile is eligible to be deleted. */
  eligibilityStatus?: DeleteBillingProfileEligibilityStatus;
  /** Validation details of delete billing profile eligibility. */
  eligibilityDetails?: DeleteBillingProfileEligibilityDetail[];
}

/** Validation details of delete billing profile eligibility. */
export interface DeleteBillingProfileEligibilityDetail {
  /** Code of the delete invoice section eligibility response. */
  code?: DeleteBillingProfileEligibilityCode;
  /** Validation message. */
  message?: string;
}

/** A billing profile. */
export interface BillingProfileProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Identifies the billing relationship represented by the billing profile. The billing relationship may be between Microsoft, the customer, and/or a third-party.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingRelationshipType?: BillingRelationshipType;
  /** Billing address. */
  billTo?: BillingProfilePropertiesBillTo;
  /**
   * The currency in which the charges for the billing profile are billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currency?: string;
  /** The name of the billing profile. */
  displayName?: string;
  /** Information about the enabled azure plans. */
  enabledAzurePlans?: AzurePlan[];
  /**
   * Indicates whether user has read access to the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hasReadAccess?: boolean;
  /** Identifies the billing profile that is linked to another billing profile in indirect purchase motion. */
  indirectRelationshipInfo?: BillingProfilePropertiesIndirectRelationshipInfo;
  /**
   * The day of the month when the invoice for the billing profile is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceDay?: number;
  /** Flag controlling whether the invoices for the billing profile are sent through email. */
  invoiceEmailOptIn?: boolean;
  /** The list of email addresses to receive invoices by email for the billing profile. */
  invoiceRecipients?: string[];
  /** The default purchase order number that will appear on the invoices generated for the billing profile. */
  poNumber?: string;
  /** The default address where the products are shipped, or the services are being used. If a ship to is not specified for a product or a subscription, then this address will be used. */
  shipTo?: BillingProfilePropertiesShipTo;
  /** The address of the individual or organization that is responsible for the billing account. */
  soldTo?: BillingProfilePropertiesSoldTo;
  /**
   * The billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spendingLimit?: SpendingLimit;
  /**
   * The details of billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spendingLimitDetails?: SpendingLimitDetails[];
  /**
   * The status of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusReasonCode?: BillingProfileStatusReasonCode;
  /**
   * The system generated unique identifier for a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemId?: string;
  /** Dictionary of metadata associated with the resource. Maximum key/value length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? / */
  tags?: { [propertyName: string]: string };
  /**
   * Identifies the cloud environments that are associated with a billing profile. This is a system managed optional field and gets updated as the billing profile gets associated with accounts in various clouds.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetClouds?: string[];
  /** The current payment term of the billing profile. */
  currentPaymentTerm?: BillingProfilePropertiesCurrentPaymentTerm;
  /**
   * The other payment terms of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly otherPaymentTerms?: PaymentTerm[];
}

/** The billing profile spending limit. */
export interface SpendingLimitDetails {
  /** The initial amount for the billing profile. */
  amount?: number;
  /** The currency in which the charges for the billing profile are billed. */
  currency?: string;
  /** The date when this spending limit goes into effect. */
  startDate?: Date;
  /** The date when this spending limit is no longer in effect. */
  endDate?: Date;
  /** The type of spending limit. */
  type?: SpendingLimitType;
  /** The status of current spending limit. */
  status?: SpendingLimitStatus;
}

/** A container for a list of resources */
export interface BillingProfileListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingProfile[];
}

/** A billing property. */
export interface BillingPropertyProperties {
  /**
   * The type of agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountAgreementType?: AgreementType;
  /**
   * The name of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /**
   * Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountAdminNotificationEmailAddress?: string;
  /**
   * The country of the individual or organization that is responsible for the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountSoldToCountry?: string;
  /**
   * The current status of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountStatus?: AccountStatus;
  /**
   * Reason for the specified billing account status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountStatusReasonCode?: BillingAccountStatusReasonCode;
  /**
   * The type of customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountType?: AccountType;
  /**
   * The tier of the account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountSubType?: AccountSubType;
  /**
   * The billing currency for the subscription. Available for billing accounts with agreement type Enterprise Agreement
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingCurrency?: string;
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileSpendingLimit?: SpendingLimit;
  /**
   * The details of billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileSpendingLimitDetails?: SpendingLimitDetails[];
  /**
   * The status of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileStatus?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileStatusReasonCode?: BillingProfileStatusReasonCode;
  /**
   * The payment method family of the primary payment method for the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfilePaymentMethodFamily?: PaymentMethodFamily;
  /**
   * The payment method type of the primary payment method for the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfilePaymentMethodType?: string;
  /**
   * The Azure AD tenant ID of the billing account for the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingTenantId?: string;
  /** The cost center applied to the subscription. Available for agreement type Microsoft Customer Agreement and Microsoft Partner Agreement. This property can be updated via patch. */
  costCenter?: string;
  /**
   * The name of the customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * Identifies the status of an customer. This is an upcoming property that will be populated in the future.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerStatus?: CustomerStatus;
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * Identifies the status of an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionStatus?: InvoiceSectionState;
  /**
   * Reason for the specified invoice section status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionStatusReasonCode?: InvoiceSectionStateReasonCode;
  /**
   * Specifies if the billing account for the subscription is transitioned from a Microsoft Online Service Program to a Microsoft Customer Agreement (MCA) account. Will be present and value will be true if its a transitioned billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isTransitionedBillingAccount?: boolean;
  /**
   * The sku description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /**
   * The ID that uniquely identifies a sku.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuId?: string;
  /**
   * The subscription status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionBillingStatus?: BillingSubscriptionStatus;
  /**
   * The reason codes for the subscription status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionBillingStatusDetails?: BillingSubscriptionStatusDetails[];
  /**
   * The type of billing subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionBillingType?: SubscriptionBillingType;
  /** The address of the individual or organization where service subscription is being used. Available for agreement type Microsoft Online Services Program. This property can be updated via patch. */
  subscriptionServiceUsageAddress?: BillingPropertyPropertiesSubscriptionServiceUsageAddress;
  /**
   * The Azure workload type of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionWorkloadType?: SubscriptionWorkloadType;
  /** The enrollment details for the subscription. Available for billing accounts with agreement type Enterprise Agreement. */
  enrollmentDetails?: BillingPropertyPropertiesEnrollmentDetails;
  /**
   * Indicates whether user is the account admin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isAccountAdmin?: boolean;
  /**
   * The ID that uniquely identifies a product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /**
   * The ID that uniquely identifies a product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productName?: string;
}

/** The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts. */
export interface BillingSubscriptionStatusDetails {
  /**
   * The suspension effective date for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDate?: Date;
  /**
   * The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: SubscriptionStatusReason;
}

/** The enrollment details for the subscription. Available for billing accounts with agreement type Enterprise Agreement. */
export interface SubscriptionEnrollmentDetails {
  /** The name of the department */
  departmentDisplayName?: string;
  /** The ID that uniquely identifies the department. */
  departmentId?: string;
  /** The status of the enrollment account. */
  enrollmentAccountStatus?: string;
  /** The name of the enrollment account. */
  enrollmentAccountDisplayName?: string;
  /** The ID that uniquely identifies an enrollment account. */
  enrollmentAccountId?: string;
}

/** A container for a list of resources */
export interface BillingRequestListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingRequest[];
}

/** A request submitted by a user to manage billing. Users with an owner role on the scope can approve or decline these requests. */
export interface BillingRequestProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Additional information for the billing request. */
  additionalInformation?: { [propertyName: string]: string };
  /** The principal of the request reviewer. Will only be set if request is approved. */
  reviewedBy?: BillingRequestPropertiesReviewedBy;
  /**
   * The date and time when the request was reviewed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reviewalDate?: Date;
  /**
   * The fully qualified ID that uniquely identifies a billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /**
   * The ID that uniquely identifies a billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountName?: string;
  /**
   * The name of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountDisplayName?: string;
  /**
   * The primary tenant ID of the billing account for which the billing request was submitted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountPrimaryBillingTenantId?: string;
  /**
   * The fully qualified ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileName?: string;
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /** The principal of the entity who created the request. */
  createdBy?: BillingRequestPropertiesCreatedBy;
  /**
   * The date and time when the request was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationDate?: Date;
  /**
   * The date and time when the request expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: Date;
  /** The reason to approve or decline the request. */
  decisionReason?: string;
  /**
   * The fully qualified ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * The ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionName?: string;
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * The ID that uniquely identifies a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerName?: string;
  /**
   * The name of the customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a billing subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The ID that uniquely identifies a billing subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionName?: string;
  /**
   * The name of the billing subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionDisplayName?: string;
  /** Justification for submitting request. */
  justification?: string;
  /** The recipients of the billing request. */
  recipients?: Principal[];
  /** The billing scope for which the request was submitted (ex. '/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}'). */
  requestScope?: string;
  /**
   * The billing scope for which the request will be applied. This is a read only property derived by the service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingScope?: string;
  /** Status of billing request. */
  status?: BillingRequestStatus;
  /** Type of billing request. */
  type?: BillingRequestType;
  /** The principal of the entity who last updated the request. */
  lastUpdatedBy?: BillingRequestPropertiesLastUpdatedBy;
  /**
   * Date and time of last update.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedDate?: Date;
}

/** A principal who has interacted with a billing entity. */
export interface Principal {
  /** The tenant id of the principal who has interacted with a billing entity. */
  tenantId?: string;
  /** The object id of the principal who has interacted with a billing entity. */
  objectId?: string;
  /** The user principal name of the principal who has interacted with a billing entity. */
  upn?: string;
}

/** The properties of the billing role assignment. */
export interface BillingRoleAssignmentProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The date the role assignment was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdOn?: Date;
  /**
   * The tenant Id of the user who created the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdByPrincipalTenantId?: string;
  /**
   * The object ID of the user who created the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdByPrincipalId?: string;
  /**
   * The principal PUID of the user who created the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdByPrincipalPuid?: string;
  /**
   * The email address of the user who created the role assignment. This is supported only for billing accounts with agreement type Enterprise Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdByUserEmailAddress?: string;
  /**
   * The date the role assignment was modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly modifiedOn?: Date;
  /**
   * The principal PUID of the user who modified the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly modifiedByPrincipalPuid?: string;
  /**
   * The email address of the user who modified the role assignment. This is supported only for billing accounts with agreement type Enterprise Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly modifiedByUserEmailAddress?: string;
  /**
   * The principal PUID of the user who modified the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly modifiedByPrincipalId?: string;
  /**
   * The tenant Id of the user who modified the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly modifiedByPrincipalTenantId?: string;
  /** The principal PUID of the user to whom the role was assigned. */
  principalPuid?: string;
  /** The object id of the user to whom the role was assigned. */
  principalId?: string;
  /** The principal tenant id of the user to whom the role was assigned. */
  principalTenantId?: string;
  /** The ID of the role definition. */
  roleDefinitionId: string;
  /** The scope at which the role was assigned. */
  scope?: string;
  /** The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement. */
  userAuthenticationType?: string;
  /** The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement. */
  userEmailAddress?: string;
  /**
   * The friendly name of the tenant of the user to whom the role was assigned. This will be 'Primary Tenant' for the primary tenant of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalTenantName?: string;
  /**
   * The display name of the principal to whom the role was assigned.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalDisplayName?: string;
  /**
   * The type of a role Assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalType?: PrincipalType;
  /**
   * The ID of the billing request that was created for the role assignment. This is only applicable to cross tenant role assignments or role assignments created through the billing request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingRequestId?: string;
  /**
   * The fully qualified ID that uniquely identifies a billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /**
   * The name of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * The name of the customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
}

/** A container for a list of resources */
export interface BillingRoleAssignmentListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingRoleAssignment[];
}

/** The properties of a role definition. */
export interface BillingRoleDefinitionProperties {
  /**
   * The role description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The billingPermissions the role has.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly permissions?: BillingPermission[];
  /** The name of the role. */
  roleName: string;
}

/** A container for a list of resources */
export interface BillingRoleDefinitionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingRoleDefinition[];
}

/** The SKU to be applied for this resource */
export interface Sku {
  /** Name of the SKU to be applied */
  name?: string;
}

/** Information describing the type of billing plan for this savings plan. */
export interface BillingPlanInformation {
  /** Amount of money to be paid for the Order. Tax is not included. */
  pricingCurrencyTotal?: Price;
  /** Date when the billing plan has started. */
  startDate?: Date;
  /** For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off. */
  nextPaymentDueDate?: Date;
  transactions?: PaymentDetail[];
}

/** The price. */
export interface Price {
  /** The ISO 4217 3-letter currency code for the currency used by this purchase record. */
  currencyCode?: string;
  amount?: number;
}

/** Information about payment related to a savings plan order. */
export interface PaymentDetail {
  /** Date when the payment needs to be done. */
  dueDate?: Date;
  /** Date when the transaction is completed. Null when it is scheduled. */
  paymentDate?: Date;
  /** Amount in pricing currency. Tax not included. */
  pricingCurrencyTotal?: Price;
  /** Amount charged in Billing currency. Tax not included. Is null for future payments */
  billingCurrencyTotal?: Price;
  /** Describes whether the payment is completed, failed, pending, cancelled or scheduled in the future. */
  status?: PaymentStatus;
  /**
   * Extended status information
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
}

/** Extended status information */
export interface ExtendedStatusInfo {
  /** Status code providing additional information. */
  statusCode?: string;
  /** The message giving detailed information about the status code. */
  message?: string;
  /** The subscription that has failed credit line check. */
  subscriptionId?: string;
}

/** List of savings plan orders */
export interface SavingsPlanOrderModelList {
  value?: SavingsPlanOrderModel[];
  /** Url to get the next page. */
  nextLink?: string;
}

/** List of savings plans */
export interface SavingsPlanModelList {
  value?: SavingsPlanModel[];
  /** Url to get the next page. */
  nextLink?: string;
}

/** Properties specific to renew. */
export interface RenewProperties {
  /** Purchase request. */
  purchaseProperties?: PurchaseRequest;
}

/** Purchase request. */
export interface PurchaseRequest {
  /** The SKU to be applied for this resource */
  sku?: Sku;
  /** Friendly name of the savings plan */
  displayName?: string;
  /** Subscription that will be charged for purchasing SavingsPlan */
  billingScopeId?: string;
  /** Represents the Savings plan term in ISO 8601 format. */
  term?: SavingsPlanTerm;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly purchases. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Commitment towards the benefit. */
  commitment?: Commitment;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
}

/** Properties specific to applied scope type. Not required if not applicable. */
export interface AppliedScopeProperties {
  /** Tenant ID where the savings plan where the benefit is applied. */
  tenantId?: string;
  /** Fully-qualified identifier of the management group where the benefit is applied. */
  managementGroupId?: string;
  /** Fully-qualified identifier of the subscription where the benefit is applied. */
  subscriptionId?: string;
  /** Fully-qualified identifier of the resource group where the benefit is applied. */
  resourceGroupId?: string;
  /** Display name */
  displayName?: string;
}

/** Savings plan utilization */
export interface Utilization {
  /**
   * The trend for a savings plan's utilization
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly trend?: string;
  /** The array of aggregates of a savings plan's utilization */
  aggregates?: UtilizationAggregates[];
}

/** The aggregate values of savings plan utilization */
export interface UtilizationAggregates {
  /**
   * The grain of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grain?: number;
  /**
   * The grain unit of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grainUnit?: string;
  /**
   * The aggregate value
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: number;
  /**
   * The aggregate value unit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueUnit?: string;
}

/** List of savings plans */
export interface SavingsPlanModelListResult {
  value?: SavingsPlanModel[];
  /** Url to get the next page. */
  nextLink?: string;
  /** The roll out count summary of the savings plans */
  summary?: SavingsPlanSummaryCount;
}

/** The roll up count summary of savings plans in each state */
export interface SavingsPlanSummaryCount {
  /**
   * The number of savings plans in Succeeded state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly succeededCount?: number;
  /**
   * The number of savings plans in Failed state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedCount?: number;
  /**
   * The number of savings plans in Expiring state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiringCount?: number;
  /**
   * The number of savings plans in Expired state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiredCount?: number;
  /**
   * The number of savings plans in Pending state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pendingCount?: number;
  /**
   * The number of savings plans in Cancelled state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cancelledCount?: number;
  /**
   * The number of savings plans in Processing state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processingCount?: number;
  /**
   * The number of savings plans in No Benefit state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly noBenefitCount?: number;
  /**
   * The number of savings plans in Warning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly warningCount?: number;
}

/** Savings plan patch request */
export interface SavingsPlanUpdateRequest {
  /** Savings plan patch request */
  properties?: SavingsPlanUpdateRequestProperties;
  /** The SKU to be applied for this resource */
  sku?: Sku;
  /** Tags for this reservation */
  tags?: { [propertyName: string]: string };
}

/** Savings plan patch request */
export interface SavingsPlanUpdateRequestProperties {
  /** Display name */
  displayName?: string;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** Properties specific to renew. */
  renewProperties?: RenewProperties;
}

/** Savings plan update validate request. */
export interface SavingsPlanUpdateValidateRequest {
  /** The benefits of a savings plan. */
  benefits?: SavingsPlanUpdateRequestProperties[];
}

/** Savings plan update validate response. */
export interface SavingsPlanValidateResponse {
  benefits?: SavingsPlanValidResponseProperty[];
  /** Url to get the next page. */
  nextLink?: string;
}

/** Benefit scope response property */
export interface SavingsPlanValidResponseProperty {
  /** Indicates if the provided input is valid */
  valid?: boolean;
  /** Failure reason code if the provided input is invalid */
  reasonCode?: string;
  /** Failure reason if the provided input is invalid */
  reason?: string;
}

/** The billing properties of a subscription. */
export interface BillingSubscriptionProperties {
  /** Indicates whether auto renewal is turned on or off for a product. */
  autoRenew?: AutoRenew;
  /** The provisioning tenant of the subscription. */
  beneficiaryTenantId?: string;
  /** The beneficiary of the billing subscription. */
  beneficiary?: Beneficiary;
  /** The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y */
  billingFrequency?: string;
  /** The fully qualified ID that uniquely identifies a billing profile. */
  billingProfileId?: string;
  /**
   * Dictionary of billing policies associated with the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingPolicies?: { [propertyName: string]: string };
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileName?: string;
  /** The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer Agreement or Enterprise Agreement Type billing accounts. */
  consumptionCostCenter?: string;
  /** The fully qualified ID that uniquely identifies a customer. */
  customerId?: string;
  /**
   * The name of the customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The ID that uniquely identifies a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerName?: string;
  /** The name of the billing subscription. */
  displayName?: string;
  /**
   * The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountId?: string;
  /**
   * The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountDisplayName?: string;
  /** The fully qualified ID that uniquely identifies an invoice section. */
  invoiceSectionId?: string;
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionName?: string;
  /**
   * The last month's charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMonthCharges?: Amount;
  /**
   * The current month to date charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthToDateCharges?: Amount;
  /**
   * Next billing cycle details of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextBillingCycleDetails?: NextBillingCycleDetails;
  /**
   * The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offerId?: string;
  /**
   * The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware, ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productCategory?: string;
  /**
   * Type of the product for which the subscription is purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productType?: string;
  /** Id of the product for which the subscription is purchased. */
  productTypeId?: string;
  /**
   * Purchase date of the product in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDate?: Date;
  /** The quantity of licenses or fulfillment units for the subscription. */
  quantity?: number;
  /**
   * Reseller for this subscription. The fields is not available for Microsoft Partner Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reseller?: Reseller;
  /**
   * Details for the next renewal term of a subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly renewalTermDetails?: RenewalTermDetails;
  /** The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts. */
  skuId?: string;
  /**
   * The SKU description of the product for which the subscription is purchased. This field is is only available for billing accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /** System imposed policies that regulate behavior of the subscription. */
  systemOverrides?: SystemOverrides;
  /**
   * Unique identifier of the linked resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceUri?: string;
  /** The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y */
  termDuration?: string;
  /**
   * Start date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termStartDate?: Date;
  /**
   * End date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termEndDate?: Date;
  /** The tenant in which the subscription is provisioned. */
  provisioningTenantId?: string;
  /**
   * The status of the subscription. This field is not available for Enterprise Agreement billing accounts
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: BillingSubscriptionStatus;
  /**
   * The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest API version for more details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationStatus?: BillingSubscriptionOperationStatus;
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The ID of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasons?: string[];
  /**
   * The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasonDetails?: BillingSubscriptionStatusDetails[];
  /**
   * The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement Type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountStartDate?: Date;
  /**
   * The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionEnrollmentAccountStatus?: SubscriptionEnrollmentAccountStatus;
}

/** Details of the beneficiary. */
export interface Beneficiary {
  /** The ID that uniquely identifies a tenant. */
  tenantId?: string;
  /** The ID that uniquely identifies a user in a tenant. */
  objectId?: string;
}

/** Billing cycle details of the product. */
export interface NextBillingCycleDetails {
  /**
   * Billing frequency of the product under the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingFrequency?: string;
}

/** Details of the reseller. */
export interface Reseller {
  /**
   * The MPN ID of the reseller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerId?: string;
  /**
   * The name of the reseller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Details for the next renewal term of a subscription. */
export interface RenewalTermDetails {
  /**
   * The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingFrequency?: string;
  /**
   * Id of the product for which the subscription is purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /**
   * Type Id of the product for which the subscription is purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productTypeId?: string;
  /**
   * The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuId?: string;
  /**
   * The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termDuration?: string;
  /** The quantity of licenses or fulfillment units for the subscription. */
  quantity?: number;
  /**
   * End date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termEndDate?: Date;
}

/** System imposed policies that regulate behavior of the subscription. */
export interface SystemOverrides {
  /**
   * The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cancellation?: Cancellation;
  /**
   * The end date in UTC time by when the self-serve cancellation ends.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cancellationAllowedEndDate?: Date;
}

/** A container for a list of resources */
export interface BillingSubscriptionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * Total number of records.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalCount?: number;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingSubscription[];
}

/** A container for a list of resources */
export interface BillingSubscriptionAliasListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingSubscriptionAlias[];
}

/** Request parameters for cancel customer subscription. */
export interface CancelSubscriptionRequest {
  /** Cancellation reason. */
  cancellationReason: CancellationReason;
  /** The fully qualified ID that uniquely identifies a customer. */
  customerId?: string;
}

/** Request parameters that are provided to merge the two billing subscriptions. */
export interface BillingSubscriptionMergeRequest {
  /** The ID of the target billing subscription that will be merged with the source subscription provided in the request. */
  targetBillingSubscriptionName?: string;
  /** The quantity of the source billing subscription that will be merged with the target billing subscription. */
  quantity?: number;
}

/** Request parameters to transfer billing subscription. */
export interface MoveBillingSubscriptionRequest {
  /** The destination invoice section id. */
  destinationInvoiceSectionId?: string;
  /** The destination enrollment account id. */
  destinationEnrollmentAccountId?: string;
}

/** Request parameters that are provided to split the billing subscription. */
export interface BillingSubscriptionSplitRequest {
  /** The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned in Get API call and can be retrieved from Catalog API to know the product id to split into. */
  targetProductTypeId?: string;
  /** The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned in Get API call and can be retrieved from Catalog API to know the sku id to split into. */
  targetSkuId?: string;
  /** The quantity of the target product to which the subscription needs to be split into. */
  quantity?: number;
  /** The term duration of the target in ISO8601 format product to which the subscription needs to be split into. Example: P1M, P1Y */
  termDuration?: string;
  /** The billing frequency of the target subscription in the ISO8601 format. Example: P1M, P3M, P1Y" */
  billingFrequency?: string;
}

/** Result of the transfer eligibility validation. */
export interface MoveBillingSubscriptionEligibilityResult {
  /**
   * Specifies whether the subscription is eligible to be transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMoveEligible?: boolean;
  /** Error details of the transfer eligibility validation. */
  errorDetails?: MoveBillingSubscriptionErrorDetails;
}

/** Error details of the transfer eligibility validation. */
export interface MoveBillingSubscriptionErrorDetails {
  /** Error code of the transfer validation response. */
  code?: SubscriptionTransferValidationErrorCode;
  /** The error message. */
  message?: string;
  /** Detailed error message explaining the error. */
  details?: string;
}

/** A partner's customer. */
export interface CustomerProperties {
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The fully qualified ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The system generated unique identifier for a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemId?: string;
  /**
   * Identifies the status of an customer. This is an upcoming property that will be populated in the future.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: CustomerStatus;
  /** Azure plans enabled for the customer. */
  enabledAzurePlans?: AzurePlan[];
  /** The list of resellers for which an Azure plan is enabled for the customer. */
  resellers?: Reseller[];
  /** Dictionary of metadata associated with the resource. Maximum key/value length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? / */
  tags?: { [propertyName: string]: string };
}

/** A container for a list of resources */
export interface CustomerListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Customer[];
}

/** Optional grouping of enrollment accounts to segment costs into logical groupings and set budgets. */
export interface DepartmentProperties {
  /** The cost center associated with the department. */
  costCenter?: string;
  /** The name of the department. */
  displayName?: string;
  /**
   * The ID that uniquely identifies the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The status of the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
}

/** A container for a list of resources */
export interface DepartmentListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Department[];
}

/** It is an organizational hierarchy within a billing account to administer and manage azure costs. */
export interface EnrollmentAccountProperties {
  /** The cost center associated with the enrollment account. */
  costCenter?: string;
  /** The name of the enrollment account. */
  displayName?: string;
  /**
   * The name of the department under which the enrollment account exists.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly departmentDisplayName?: string;
  /**
   * The ID that uniquely identifies the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly departmentId?: string;
  /** Boolean flag which enables subscribers to run development and testing workloads on Azure at special Dev/Test rates. */
  isDevTestEnabled?: boolean;
  /**
   * The owner of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountOwner?: string;
  /**
   * The authorization type of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly authType?: string;
  /**
   * The status of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The date from which the enrollment account became valid and functional.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startDate?: Date;
  /**
   * The date of expiration of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endDate?: Date;
}

/** A container for a list of resources */
export interface EnrollmentAccountListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: EnrollmentAccount[];
}

/** A container for a list of resources */
export interface InvoiceListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Invoice[];
}

/** An invoice. */
export interface InvoiceProperties {
  /** The amount due as of now. */
  amountDue?: InvoicePropertiesAmountDue;
  /** The amount of Azure prepayment applied to the charges. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
  azurePrepaymentApplied?: InvoicePropertiesAzurePrepaymentApplied;
  /** The total charges for the invoice billing period. */
  billedAmount?: InvoicePropertiesBilledAmount;
  /**
   * The Id of the active invoice which is originally billed after this invoice was voided. This field is applicable to the void invoices only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billedDocumentId?: string;
  /**
   * The name of the billing profile for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the billing profile for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /** The total refund for returns and cancellations during the invoice billing period. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
  creditAmount?: InvoicePropertiesCreditAmount;
  /**
   * The Id of the invoice which got voided and this credit note was issued as a result. This field is applicable to the credit notes only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creditForDocumentId?: string;
  /**
   * List of documents available to download and view such as invoice, credit note, or tax receipt.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly documents?: InvoiceDocument[];
  /**
   * The type of the document.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly documentType?: InvoiceDocumentType;
  /**
   * The due date for the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dueDate?: Date;
  /**
   * List of failed payments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedPayments?: FailedPayment[];
  /** The amount of free Azure credits applied to the charges. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
  freeAzureCreditApplied?: InvoicePropertiesFreeAzureCreditApplied;
  /**
   * The date when the invoice was generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceDate?: Date;
  /**
   * The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoicePeriodEndDate?: Date;
  /**
   * The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoicePeriodStartDate?: Date;
  /**
   * Invoice type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceType?: InvoiceType;
  /**
   * Specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMonthlyInvoice?: boolean;
  /**
   * List of payments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly payments?: Payment[];
  /**
   * An optional purchase order number for the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseOrderNumber?: string;
  /** Rebill details for an invoice. */
  rebillDetails?: InvoicePropertiesRebillDetails;
  /**
   * The current status of the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: InvoiceStatus;
  /**
   * The name of the billing subscription for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionDisplayName?: string;
  /**
   * The ID of the subscription for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax calculation logic.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly specialTaxationType?: SpecialTaxationType;
  /** The pre-tax amount due. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
  subTotal?: InvoicePropertiesSubTotal;
  /** The amount of tax charged for the billing period. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
  taxAmount?: InvoicePropertiesTaxAmount;
  /** The amount due when the invoice was generated. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
  totalAmount?: InvoicePropertiesTotalAmount;
  /** The details of a refund request. */
  refundDetails?: InvoicePropertiesRefundDetails;
}

/** The properties of a document. */
export interface InvoiceDocument {
  /**
   * The document numbers for the invoice document.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly documentNumbers?: string[];
  /**
   * The URL to download the invoice document if the source is external to Microsoft.Billing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly externalUrl?: string;
  /**
   * The type of the document.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kind?: InvoiceDocumentType;
  /**
   * The ID that uniquely identifies an invoice document. This ID may be an identifier for an invoice PDF, a credit note, or a tax receipt.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The URL to download the invoice document if the source is internal to Microsoft.Billing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
  /**
   * The source of the document. ENF for Brazil and DRS for rest of the world.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: DocumentSource;
}

/** A failed payment. */
export interface FailedPayment {
  /**
   * The date when the payment was attempted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly date?: Date;
  /**
   * The reason that the payment failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedPaymentReason?: FailedPaymentReason;
}

/** An invoice payment. */
export interface Payment {
  /** The paid amount. */
  amount?: PaymentAmount;
  /**
   * The date when the payment was made.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly date?: Date;
  /**
   * The ID that uniquely identifies the payment method used for the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodId?: string;
  /**
   * The family of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodFamily?: PaymentMethodFamily;
  /**
   * The type of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodType?: string;
  /**
   * The type of payment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentType?: string;
}

/** The rebill details of an invoice. */
export interface RebillDetails {
  /**
   * The ID of invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceDocumentId?: string;
  /**
   * The ID of credit note.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creditNoteDocumentId?: string;
  /**
   * The rebill details of an invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rebillDetails?: RebillDetails;
}

/** The details of refund request. */
export interface RefundDetailsSummary {
  /**
   * Date when the refund was requested.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requestedOn?: Date;
  /**
   * Date when the refund was approved.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly approvedOn?: Date;
  /**
   * Date when the refund was completed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly completedOn?: Date;
  /** The amount of refund requested. */
  amountRequested?: RefundDetailsSummaryAmountRequested;
  /** The amount refunded. */
  amountRefunded?: RefundDetailsSummaryAmountRefunded;
  /**
   * The invoice ID of the rebill invoice for a refund.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rebillInvoiceId?: string;
  /**
   * The number of transactions refunded.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transactionCount?: number;
  /**
   * The status of refund request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly refundStatus?: RefundStatus;
  /**
   * The ID of refund operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly refundOperationId?: string;
  /**
   * The reason for refund.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly refundReason?: RefundReasonCode;
}

/** A list of download details for individual documents. */
export interface DocumentDownloadRequest {
  /** The ID that uniquely identifies an invoice document. This ID may be an identifier for an invoice PDF, a credit note, or a tax receipt. If omitted, the most recent invoice PDF for the invoice will be returned. */
  documentName?: string;
  /** The ID that uniquely identifies an invoice. */
  invoiceName?: string;
}

/** A secure URL that can be used to download a an entity until the URL expires. */
export interface DocumentDownloadResult {
  /**
   * The time in UTC when the download URL will expire.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryTime?: string;
  /**
   * The URL to the PDF or .zip file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** Eligibility to delete an invoice section result. */
export interface DeleteInvoiceSectionEligibilityResult {
  /** Status describing if invoice section is eligible to be deleted. */
  eligibilityStatus?: DeleteInvoiceSectionEligibilityStatus;
  /** A list of delete invoice section eligibility result details. */
  eligibilityDetails?: DeleteInvoiceSectionEligibilityDetail[];
}

/** The details of delete invoice section eligibility result. */
export interface DeleteInvoiceSectionEligibilityDetail {
  /** Code for the delete invoice section validation. */
  code?: DeleteInvoiceSectionEligibilityCode;
  /** Validation message. */
  message?: string;
}

/** An invoice section. */
export interface InvoiceSectionProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The name of the invoice section. */
  displayName?: string;
  /** Identifies the status of an invoice section. */
  state?: InvoiceSectionState;
  /** Reason for the specified invoice section status. */
  reasonCode?: InvoiceSectionStateReasonCode;
  /**
   * The system generated unique identifier for an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemId?: string;
  /** Identifies the cloud environments that are associated with an invoice section. This is a system managed optional field and gets updated as the invoice section gets associated with accounts in various clouds. */
  targetCloud?: string;
  /** Dictionary of metadata associated with the resource. Maximum key/value length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? / */
  tags?: { [propertyName: string]: string };
}

/** A container for a list of resources */
export interface InvoiceSectionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: InvoiceSection[];
}

/** A container for a list of resources */
export interface OperationListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
}

/** Details of a REST API operation, returned from the Resource Provider Operations API. */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
}

/** The list of payment method links. */
export interface PaymentMethodLinksListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of payment method links.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PaymentMethodLink[];
}

/** Logo of payment method. */
export interface PaymentMethodLogo {
  /**
   * MIME type of the logo.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mimeType?: string;
  /**
   * Public URL of image of the logo.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** The properties of a payment method. */
export interface PaymentMethodProperties {
  /**
   * Id of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The account holder name for the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountHolderName?: string;
  /**
   * The display name of the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The expiration month and year of the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiration?: string;
  /** The family of payment method. */
  family?: PaymentMethodFamily;
  /**
   * Last four digits of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastFourDigits?: string;
  /** The list of logos for the payment method. */
  logos?: PaymentMethodLogo[];
  /**
   * The type of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodType?: string;
  /** Status of the payment method. */
  status?: PaymentMethodStatus;
}

/** The list of payment methods. */
export interface PaymentMethodsListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of payment methods.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PaymentMethod[];
}

/** A policy at customer scope. */
export interface CustomerPolicyProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The policy that controls whether the users in customer's organization can view charges at pay-as-you-go prices. */
  viewCharges: ViewChargesPolicy;
  /** List of all policies defined at the billing scope. */
  policies?: PolicySummary[];
}

/** The summary of the policy. */
export interface PolicySummary {
  /** The name of the policy. */
  name?: string;
  /** The value of the policy. */
  value?: string;
  /** The type of the policy. */
  policyType?: PolicyType;
  /** The scope at which the policy is defined. */
  scope?: string;
}

/** A policy at billing profile scope. */
export interface BillingProfilePolicyProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The policies for Enterprise Agreement enrollments. */
  enterpriseAgreementPolicies?: BillingProfilePolicyPropertiesEnterpriseAgreementPolicies;
  /** The policy that controls invoice section label management at invoice section scope. This is allowed by default. */
  invoiceSectionLabelManagement?: InvoiceSectionLabelManagementPolicy;
  /** The policy that controls whether Azure marketplace purchases are allowed. */
  marketplacePurchases?: MarketplacePurchasesPolicy;
  /** The policy that controls whether Azure reservation purchases are allowed. */
  reservationPurchases?: ReservationPurchasesPolicy;
  /** The policy that controls whether users with Azure savings plan purchase are allowed. */
  savingsPlanPurchases?: SavingsPlanPurchasesPolicy;
  /** The policy that controls whether the users in customer's organization can view charges at pay-as-you-go prices. */
  viewCharges?: ViewChargesPolicy;
  /** List of all policies defined at the billing scope. */
  policies?: PolicySummary[];
}

/** The policies for Enterprise Agreement enrollments. */
export interface EnterpriseAgreementPolicies {
  /** The state showing the enrollment auth level. */
  authenticationType?: EnrollmentAuthLevelState;
  /** The policy that controls whether account owner can view charges. */
  accountOwnerViewCharges?: EnrollmentAccountOwnerViewCharges;
  /** The policy that controls whether department admin can view charges. */
  departmentAdminViewCharges?: EnrollmentDepartmentAdminViewCharges;
}

/** A policy at billing account scope. */
export interface BillingAccountPolicyProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The policies for Enterprise Agreement enrollments. */
  enterpriseAgreementPolicies?: BillingAccountPolicyPropertiesEnterpriseAgreementPolicies;
  /** The policy that controls whether Azure marketplace purchases are allowed. */
  marketplacePurchases?: MarketplacePurchasesPolicy;
  /** The policy that controls whether Azure reservation purchases are allowed. */
  reservationPurchases?: ReservationPurchasesPolicy;
  /** The policy that controls whether users with Azure savings plan purchase are allowed. */
  savingsPlanPurchases?: SavingsPlanPurchasesPolicy;
  /** List of all policies defined at the billing scope. */
  policies?: PolicySummary[];
}

/** A policy at subscription scope. */
export interface SubscriptionPolicyProperties {
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** List of all policies defined at the billing scope. */
  policies?: PolicySummary[];
}

/** A container for a list of resources */
export interface ProductListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Product[];
}

/** A product. */
export interface ProductProperties {
  /** Indicates whether auto renewal is turned on or off for a product. */
  autoRenew?: AutoRenew;
  /**
   * The availability of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availabilityId?: string;
  /**
   * The frequency at which the product will be billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingFrequency?: string;
  /**
   * The ID of the billing profile to which the product is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile to which the product is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the customer for whom the product was purchased. The field is applicable only for Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * The name of the customer for whom the product was purchased. The field is applicable only for Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The display name of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The date when the product will be renewed or canceled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endDate?: string;
  /**
   * The ID of the invoice section to which the product is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section to which the product is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /** The last month charges. */
  lastCharge?: ProductPropertiesLastCharge;
  /**
   * The date of the last charge.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastChargeDate?: string;
  /**
   * The description of the type of product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productType?: string;
  /**
   * The ID of the type of product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productTypeId?: string;
  /**
   * The sku ID of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuId?: string;
  /**
   * The sku description of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /**
   * The date when the product was purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDate?: string;
  /**
   * The quantity purchased for the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quantity?: number;
  /**
   * The status of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ProductStatus;
  /**
   * The id of the tenant in which the product is used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Reseller for this product. The fields is not available for Microsoft Partner Agreement products. */
  reseller?: ProductPropertiesReseller;
}

/** The properties of the product to initiate a transfer. */
export interface MoveProductRequest {
  /** The destination invoice section id. */
  destinationInvoiceSectionId: string;
}

/** Result of the transfer eligibility validation. */
export interface MoveProductEligibilityResult {
  /** Specifies whether the subscription is eligible to be transferred. */
  isMoveEligible?: boolean;
  /** Error details of the transfer eligibility validation. */
  errorDetails?: MoveProductEligibilityResultErrorDetails;
}

/** Error details of the transfer eligibility validation. */
export interface MoveProductErrorDetails {
  /**
   * Error code for the product transfer validation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: MoveValidationErrorCode;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Error details of the transfer eligibility validation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: string;
}

/** The list of reservations and summary of roll out count of reservations in each state. */
export interface ReservationsListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** The roll out count summary of the reservations */
  summary?: ReservationSummary;
  /**
   * The list of reservations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Reservation[];
}

/** The roll up count summary of reservations in each state */
export interface ReservationSummary {
  /**
   * The number of reservation in Cancelled state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cancelledCount?: number;
  /**
   * The number of reservation in Expired state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiredCount?: number;
  /**
   * The number of reservation in Expiring state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiringCount?: number;
  /**
   * The number of reservation in Failed state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedCount?: number;
  /**
   * The number of reservation in Pending state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pendingCount?: number;
  /**
   * The number of reservation in Succeeded state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly succeededCount?: number;
  /**
   * The number of reservation in 'No Benefit' state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly noBenefitCount?: number;
  /**
   * The number of reservation in Warning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly warningCount?: number;
  /**
   * The number of reservation in Processing state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processingCount?: number;
}

/** Extended status information for the reservation. */
export interface ReservationExtendedStatusInfo {
  /** The status of the reservation. */
  statusCode?: ReservationStatusCode;
  /** The message giving detailed information about the status code. */
  message?: string;
  /** Properties for extended status information */
  properties?: ExtendedStatusDefinitionProperties;
}

/** Extended status definition properties */
export interface ExtendedStatusDefinitionProperties {
  /** Subscription Id */
  subscriptionId?: string;
}

/** Properties of reservation split */
export interface ReservationSplitProperties {
  /** List of destination resource id that are created due to split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */
  splitDestinations?: string[];
  /** Resource id of the reservation from which this is split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */
  splitSource?: string;
}

/** Properties of reservation merge */
export interface ReservationMergeProperties {
  /** Reservation resource id Created due to the merge. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */
  mergeDestination?: string;
  /** Resource ids of the source reservation's merged to form this reservation. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */
  mergeSources?: string[];
}

/** Properties of reservation swap */
export interface ReservationSwapProperties {
  /** Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */
  swapSource?: string;
  /** Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */
  swapDestination?: string;
}

/** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */
export interface ReservationAppliedScopeProperties {
  /** Tenant ID where the reservation should apply benefit. */
  tenantId?: string;
  /** Fully-qualified identifier of the management group where the benefit must be applied. */
  managementGroupId?: string;
  /** Fully-qualified identifier of the subscription. */
  subscriptionId?: string;
  /** Fully-qualified identifier of the resource group. */
  resourceGroupId?: string;
  /** Display name */
  displayName?: string;
}

/** The renew properties for a reservation. */
export interface RenewPropertiesResponse {
  /** The request for reservation purchase */
  purchaseProperties?: ReservationPurchaseRequest;
  /** Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry. */
  pricingCurrencyTotal?: Price;
  /** Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included. */
  billingCurrencyTotal?: Price;
}

/** The request for reservation purchase */
export interface ReservationPurchaseRequest {
  /** The name of sku */
  sku?: SkuName;
  /** The Azure region where the reserved resource lives. */
  location?: string;
  /**
   * The reserved source type of the reservation, e.g. virtual machine.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reservedResourceType?: string;
  /**
   * Subscription that will be charged for purchasing reservation or savings plan
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingScopeId?: string;
  /**
   * The term of the reservation, e.g. P1Y
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly term?: string;
  /** Represent the billing plans. */
  billingPlan?: ReservationBillingPlan;
  /** Quantity of the skus that are part of the reservation. Must be greater than zero. */
  quantity?: number;
  /** Friendly name of the reservation */
  displayName?: string;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared. */
  appliedScopes?: string[];
  /** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */
  appliedScopeProperties?: ReservationAppliedScopeProperties;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size flexibility. */
  instanceFlexibilityPropertiesInstanceFlexibility?: InstanceFlexibility;
  /** This is the date-time when the Azure hybrid benefit needs to be reviewed. */
  reviewDateTime?: Date;
  /** Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type. */
  instanceFlexibilityPropertiesReservedResourcePropertiesInstanceFlexibility?: InstanceFlexibility;
}

/** The name of sku */
export interface SkuName {
  name?: string;
}

/** The aggregate values of reservation utilization */
export interface ReservationUtilizationAggregates {
  /**
   * The grain of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grain?: number;
  /**
   * The grain unit of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grainUnit?: string;
  /**
   * The aggregate value
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: number;
  /**
   * The aggregate value unit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueUnit?: string;
}

/** The property of reservation sku object. */
export interface ReservationSkuProperty {
  /**
   * The name of the reservation sku.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
}

/** The request for reservation patch */
export interface Patch {
  /** The sku information associated to this reservation */
  sku?: ReservationSkuProperty;
  /** Tags for this reservation */
  tags?: { [propertyName: string]: string };
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */
  appliedScopeProperties?: ReservationAppliedScopeProperties;
  /** Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type. */
  instanceFlexibility?: InstanceFlexibility;
  /** Display name of the reservation */
  displayName?: string;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** This is the date-time when the Azure hybrid benefit needs to be reviewed. */
  reviewDateTime?: Date;
  /** The request for reservation purchase */
  purchaseProperties?: ReservationPurchaseRequest;
}

/** List of `Reservations */
export interface ReservationList {
  value?: Reservation[];
  /** Url to get the next page of reservations. */
  nextLink?: string;
}

/** Information describing the type of billing plan for this reservation order. */
export interface ReservationOrderBillingPlanInformation {
  /** Amount of money to be paid for the Order. Tax is not included. */
  pricingCurrencyTotal?: Price;
  /** Date when the billing plan has started. */
  startDate?: Date;
  /** For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off. */
  nextPaymentDueDate?: Date;
  transactions?: ReservationPaymentDetail[];
}

/** Information about payment related to a reservation order. */
export interface ReservationPaymentDetail {
  /** Date when the payment needs to be done. */
  dueDate?: Date;
  /** Date when the transaction is completed. Is null when it is scheduled. */
  paymentDate?: Date;
  /** Amount in pricing currency. Tax not included. */
  pricingCurrencyTotal?: Price;
  /** Amount charged in Billing currency. Tax not included. Is null for future payments */
  billingCurrencyTotal?: Price;
  /** Shows the Account that is charged for this payment. */
  billingAccount?: string;
  /** Describes whether the payment is completed, failed, pending, cancelled or scheduled in the future. */
  status?: PaymentStatus;
  /** Extended status information for the reservation. */
  extendedStatusInfo?: ReservationExtendedStatusInfo;
}

/** List of ReservationOrders */
export interface ReservationOrderList {
  value?: ReservationOrder[];
  /** Url to get the next page of reservationOrders. */
  nextLink?: string;
}

/** A container for a list of resources */
export interface TransactionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Transaction[];
}

/** A transaction. */
export interface TransactionProperties {
  /** The amount of any Azure credits automatically applied to this transaction. */
  azureCreditApplied?: TransactionPropertiesAzureCreditApplied;
  /** Details of the Azure plan. */
  azurePlan?: string;
  /** The ISO 4217 code for the currency in which this transaction is billed. */
  billingCurrency?: string;
  /** The name of the billing profile. */
  billingProfileDisplayName?: any;
  /** The fully qualified ID that uniquely identifies a billing profile. */
  billingProfileId?: string;
  /** The amount of Microsoft Azure Consumption Commitment(MACC) decrement through the transaction. */
  consumptionCommitmentDecremented?: TransactionPropertiesConsumptionCommitmentDecremented;
  /** The name of the customer. */
  customerDisplayName?: string;
  /** The fully qualified ID that uniquely identifies a customer. */
  customerId?: string;
  /** The credit type of the transaction. Applies only to credited transactions. */
  creditType?: CreditType;
  /** The date of transaction. */
  date?: Date;
  /** The percentage discount, if any, applied to this transaction. */
  discount?: number;
  /** The price of the product after applying any discounts. */
  effectivePrice?: TransactionPropertiesEffectivePrice;
  /** The exchange rate used to convert charged amount to billing currency, if applicable. */
  exchangeRate?: number;
  /** Invoice name on which the transaction was billed or 'Pending' if the transaction is not billed. */
  invoice?: string;
  /** The fully qualified ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed. */
  invoiceId?: string;
  /** The name of the invoice section. */
  invoiceSectionDisplayName?: string;
  /** The fully qualified ID that uniquely identifies an invoice section. */
  invoiceSectionId?: string;
  /** Whether or not the transaction is third party. */
  isThirdParty?: boolean;
  /** Type of the transaction, billed or unbilled. */
  kind?: TransactionKind;
  /** The retail price of the product. */
  marketPrice?: TransactionPropertiesMarketPrice;
  /** The part number of the product for which the transaction took place. The field is only applicable for Enterprise Agreement invoices. */
  partNumber?: string;
  /** The ISO 4217 code for the currency in which the product is priced. */
  pricingCurrency?: string;
  /** The description of the product for which the transaction took place. */
  productDescription?: string;
  /** The family of the product for which the transaction took place. */
  productFamily?: string;
  /** The ID of the product type for which the transaction took place. */
  productTypeId?: string;
  /** The type of the product for which the transaction took place. */
  productType?: string;
  /** The quantity purchased in the transaction. */
  quantity?: number;
  /** There reason code for the transaction. */
  reasonCode?: string;
  /** The date of the purchase of the product, or the start date of the month in which usage started. */
  servicePeriodStartDate?: Date;
  /** The end date of the product term, or the end date of the month in which usage ended. */
  servicePeriodEndDate?: Date;
  /** The pre-tax charged amount for the transaction. */
  subTotal?: TransactionPropertiesSubTotal;
  /** The tax amount applied to the transaction. */
  tax?: TransactionPropertiesTax;
  /** The charge associated with the transaction. */
  transactionAmount?: TransactionPropertiesTransactionAmount;
  /** The type of transaction. */
  transactionType?: string;
  /** The number of units used for a given product. */
  units?: number;
  /** The unit of measure used to bill for the product. For example, compute services are billed per hour. */
  unitOfMeasure?: string;
  /** The description for the unit of measure for a given product. */
  unitType?: string;
  /** Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax calculation logic. */
  specialTaxationType?: SpecialTaxationType;
  /** The refund details of a transaction. */
  refundTransactionDetails?: TransactionPropertiesRefundTransactionDetails;
}

/** The refund details of a transaction. */
export interface RefundTransactionDetails {
  /** The amount of refund requested. */
  amountRequested?: RefundTransactionDetailsAmountRequested;
  /** The amount refunded. */
  amountRefunded?: RefundTransactionDetailsAmountRefunded;
  /** The ID of refund operation. */
  refundOperationId?: string;
}

/** A transaction summary. */
export interface TransactionSummary {
  /**
   * The total amount of any Azure credits applied.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureCreditApplied?: number;
  /**
   * The ISO 4217 code for the currency in which the transactions are billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingCurrency?: string;
  /**
   * The total Microsoft Azure Consumption Commitment (MACC) decrement through the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly consumptionCommitmentDecremented?: number;
  /**
   * The total pre-tax charged amount.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subTotal?: number;
  /**
   * The total tax amount applied.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tax?: number;
  /**
   * The total charges.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly total?: number;
}

/** Detailed transfer status. */
export interface DetailedTransferStatus {
  /**
   * Type of product that is transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productType?: ProductType;
  /**
   * The ID of the product that is transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /**
   * The name of the product that is transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productName?: string;
  /**
   * The SKU of the product that is transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /**
   * Transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferStatus?: ProductTransferStatus;
  /** Error details for transfer execution. */
  errorDetails?: TransferError;
}

/** Error details for transfer execution. */
export interface TransferError {
  /**
   * Error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Request parameters to initiate transfer. */
export interface InitiateTransferRequest {
  /** The email ID of the recipient to whom the transfer request is sent. */
  recipientEmailId?: string;
}

/** The list of transfers initiated by caller. */
export interface TransferDetailsListResult {
  /**
   * The list of transfers initiated by caller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: TransferDetails[];
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Request parameters to initiate partner transfer. */
export interface PartnerInitiateTransferRequest {
  /** The email ID of the recipient to whom the transfer request is sent. */
  recipientEmailId?: string;
  /** Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account. */
  resellerId?: string;
}

/** The list of transfers initiated by partner. */
export interface PartnerTransferDetailsListResult {
  /**
   * The list of transfers initiated by partner.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PartnerTransferDetails[];
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Request parameters to accept transfer. */
export interface AcceptTransferRequest {
  /** Request parameters to accept transfer. */
  productDetails?: ProductDetails[];
}

/** Details of the product that is transferred. */
export interface ProductDetails {
  /** Type of the product that is transferred. */
  productType?: ProductType;
  /** The ID of the product that is transferred. */
  productId?: string;
}

/** Result of transfer validation. */
export interface ValidateTransferListResponse {
  /**
   * The list of transfer validation results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ValidateTransferResponse[];
}

/** Transfer validation response. */
export interface ValidateTransferResponse {
  /**
   * The status of validation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The product id for which this result applies.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /** The array of validation results. */
  results?: ValidationResultProperties[];
}

/** The properties of the validation result. */
export interface ValidationResultProperties {
  /**
   * Result Level.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly level?: string;
  /**
   * Result Code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The validation message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** The list of transfers received by caller. */
export interface RecipientTransferDetailsListResult {
  /**
   * The list of transfers received by caller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: RecipientTransferDetails[];
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** An external reference. */
export interface ExternalReference {
  /**
   * The ID that uniquely identifies an external reference.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The URL of the external reference.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** Query parameter to enumerate transfer requests. */
export interface TransferItemQueryParameter {
  /** State of the transfer request query filter. */
  state?: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Credit amount for immediate payment. */
export interface AvailableBalancePropertiesAmount extends Amount {}

/** Payment on Account amount. */
export interface PaymentOnAccountAmount extends Amount {}

/** Total amount of payments on accounts. */
export interface AvailableBalancePropertiesTotalPaymentsOnAccount
  extends Amount {}

/** The amount due as of now. */
export interface InvoicePropertiesAmountDue extends Amount {}

/** The amount of Azure prepayment applied to the charges. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
export interface InvoicePropertiesAzurePrepaymentApplied extends Amount {}

/** The total charges for the invoice billing period. */
export interface InvoicePropertiesBilledAmount extends Amount {}

/** The total refund for returns and cancellations during the invoice billing period. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
export interface InvoicePropertiesCreditAmount extends Amount {}

/** The amount of free Azure credits applied to the charges. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
export interface InvoicePropertiesFreeAzureCreditApplied extends Amount {}

/** The paid amount. */
export interface PaymentAmount extends Amount {}

/** The pre-tax amount due. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
export interface InvoicePropertiesSubTotal extends Amount {}

/** The amount of tax charged for the billing period. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
export interface InvoicePropertiesTaxAmount extends Amount {}

/** The amount due when the invoice was generated. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement. */
export interface InvoicePropertiesTotalAmount extends Amount {}

/** The amount of refund requested. */
export interface RefundDetailsSummaryAmountRequested extends Amount {}

/** The amount refunded. */
export interface RefundDetailsSummaryAmountRefunded extends Amount {}

/** The last month charges. */
export interface ProductPropertiesLastCharge extends Amount {}

/** The amount of any Azure credits automatically applied to this transaction. */
export interface TransactionPropertiesAzureCreditApplied extends Amount {}

/** The amount of Microsoft Azure Consumption Commitment(MACC) decrement through the transaction. */
export interface TransactionPropertiesConsumptionCommitmentDecremented
  extends Amount {}

/** The price of the product after applying any discounts. */
export interface TransactionPropertiesEffectivePrice extends Amount {}

/** The retail price of the product. */
export interface TransactionPropertiesMarketPrice extends Amount {}

/** The pre-tax charged amount for the transaction. */
export interface TransactionPropertiesSubTotal extends Amount {}

/** The tax amount applied to the transaction. */
export interface TransactionPropertiesTax extends Amount {}

/** The charge associated with the transaction. */
export interface TransactionPropertiesTransactionAmount extends Amount {}

/** The amount of refund requested. */
export interface RefundTransactionDetailsAmountRequested extends Amount {}

/** The amount refunded. */
export interface RefundTransactionDetailsAmountRefunded extends Amount {}

/** The current payment term of the billing profile. */
export interface BillingProfilePropertiesCurrentPaymentTerm
  extends PaymentTerm {}

/** The properties of an enrollment. */
export interface BillingAccountPropertiesEnrollmentDetails
  extends EnrollmentDetails {}

/** The properties of an enrollment which are applicable only for indirect enrollments. */
export interface EnrollmentDetailsIndirectRelationshipInfo
  extends IndirectRelationshipInfo {}

/** Identifies the billing profile that is linked to another billing profile in indirect purchase motion. */
export interface BillingProfilePropertiesIndirectRelationshipInfo
  extends IndirectRelationshipInfo {}

/** The address of the individual or organization that is responsible for the billing account. */
export interface BillingAccountPropertiesSoldTo extends AddressDetails {}

/** Billing address. */
export interface BillingProfilePropertiesBillTo extends AddressDetails {}

/** The default address where the products are shipped, or the services are being used. If a ship to is not specified for a product or a subscription, then this address will be used. */
export interface BillingProfilePropertiesShipTo extends AddressDetails {}

/** The address of the individual or organization that is responsible for the billing account. */
export interface BillingProfilePropertiesSoldTo extends AddressDetails {}

/** The address of the individual or organization where service subscription is being used. Available for agreement type Microsoft Online Services Program. This property can be updated via patch. */
export interface BillingPropertyPropertiesSubscriptionServiceUsageAddress
  extends AddressDetails {}

/** Describes the registration number of the organization linked with the billing account. */
export interface BillingAccountPropertiesRegistrationNumber
  extends RegistrationNumber {}

/** The enrollment details for the subscription. Available for billing accounts with agreement type Enterprise Agreement. */
export interface BillingPropertyPropertiesEnrollmentDetails
  extends SubscriptionEnrollmentDetails {}

/** The principal of the request reviewer. Will only be set if request is approved. */
export interface BillingRequestPropertiesReviewedBy extends Principal {}

/** The principal of the entity who created the request. */
export interface BillingRequestPropertiesCreatedBy extends Principal {}

/** The principal of the entity who last updated the request. */
export interface BillingRequestPropertiesLastUpdatedBy extends Principal {}

/** Commitment towards the benefit. */
export interface Commitment extends Price {
  /** Commitment grain. */
  grain?: CommitmentGrain;
}

/** A billing subscription alias. */
export interface BillingSubscriptionAliasProperties
  extends BillingSubscriptionProperties {
  /**
   * The ID of the billing subscription with the subscription alias.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingSubscriptionId?: string;
}

/** Reseller for this product. The fields is not available for Microsoft Partner Agreement products. */
export interface ProductPropertiesReseller extends Reseller {}

/** Rebill details for an invoice. */
export interface InvoicePropertiesRebillDetails extends RebillDetails {}

/** The details of a refund request. */
export interface InvoicePropertiesRefundDetails extends RefundDetailsSummary {}

/** The policies for Enterprise Agreement enrollments. */
export interface BillingProfilePolicyPropertiesEnterpriseAgreementPolicies
  extends EnterpriseAgreementPolicies {}

/** The policies for Enterprise Agreement enrollments. */
export interface BillingAccountPolicyPropertiesEnterpriseAgreementPolicies
  extends EnterpriseAgreementPolicies {}

/** Error details of the transfer eligibility validation. */
export interface MoveProductEligibilityResultErrorDetails
  extends MoveProductErrorDetails {}

/** The refund details of a transaction. */
export interface TransactionPropertiesRefundTransactionDetails
  extends RefundTransactionDetails {}

/** Common fields that are returned in the response for all Azure Resource Manager resources. */
export interface ProxyResourceWithTags extends ProxyResource {
  /** Dictionary of metadata associated with the resource. It may not be populated for all resource types. Maximum key/value length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? / */
  tags?: { [propertyName: string]: string };
}

/** The definition of the reservation. */
export interface Reservation extends ProxyResource {
  /** The location of the reservation. */
  location?: string;
  etag?: number;
  /** Tags for this reservation */
  tags?: { [propertyName: string]: string };
  /** The sku information associated to this reservation */
  sku?: ReservationSkuProperty;
  /**
   * The reserved source type of the reservation, e.g. virtual machine.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reservedResourceType?: string;
  /** Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size flexibility. */
  instanceFlexibility?: InstanceFlexibility;
  /**
   * The display name of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /** The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope */
  appliedScopes?: string[];
  /**
   * The applied scope type of the reservation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appliedScopeType?: string;
  /** Indicates if the reservation is archived */
  archived?: boolean;
  /** Capabilities of the reservation */
  capabilities?: string;
  /**
   * The number of the reservation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quantity?: number;
  /**
   * The provisioning state of the reservation, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The effective date time of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDateTime?: Date;
  /** This is the DateTime when the reservation benefit started. */
  benefitStartTime?: Date;
  /**
   * DateTime of the last time the reservation was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedDateTime?: Date;
  /**
   * The expiry date of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDate?: string;
  /** This is the date-time when the reservation will expire. */
  expiryDateTime?: Date;
  /** This is the date-time when the Azure Hybrid Benefit needs to be reviewed. */
  reviewDateTime?: Date;
  /**
   * The sku description of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /** The message giving detailed information about the status code. */
  extendedStatusInfo?: ReservationExtendedStatusInfo;
  /** The billing plan options available for this sku. */
  billingPlan?: ReservationBillingPlan;
  /**
   * The provisioning state of the reservation for display, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayProvisioningState?: string;
  /**
   * The provisioning state of the reservation, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningSubState?: string;
  /** This is the date when the reservation was purchased. */
  purchaseDate?: Date;
  /** This is the date-time when the reservation was purchased. */
  purchaseDateTime?: Date;
  /** Properties of reservation split */
  splitProperties?: ReservationSplitProperties;
  /** Properties of reservation merge */
  mergeProperties?: ReservationMergeProperties;
  /** Properties of reservation swap */
  swapProperties?: ReservationSwapProperties;
  /** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */
  appliedScopeProperties?: ReservationAppliedScopeProperties;
  /**
   * Subscription that will be charged for purchasing reservation or savings plan
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingScopeId?: string;
  /**
   * The renew state of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly renew?: boolean;
  /**
   * The renew source of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly renewSource?: string;
  /** Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}. */
  renewDestination?: string;
  /** The renew properties for a reservation. */
  renewProperties?: RenewPropertiesResponse;
  /**
   * The term of the reservation, e.g. P1Y
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly term?: string;
  /**
   * The applied scope type of the reservation for display, e.g. Shared
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userFriendlyAppliedScopeType?: string;
  /**
   * The renew state of the reservation for display, e.g. On
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userFriendlyRenewState?: string;
  /** Represents UPN */
  productCode?: string;
  /**
   * last 7 day utilization trend for a reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly trend?: string;
  /** The array of aggregates of a reservation's utilization */
  aggregates?: ReservationUtilizationAggregates[];
}

/** Details of a reservation order being returned. */
export interface ReservationOrder extends ProxyResource {
  etag?: number;
  /** Tags for this reservation */
  tags?: { [propertyName: string]: string };
  /** Friendly name for user to easily identified the reservation order. */
  displayName?: string;
  /** Enrollment id of the reservation order. */
  enrollmentId?: string;
  /** Fully-qualified identifier of the customerId where the benefit is applied. Present only for Enterprise Agreement PartnerLed customers. */
  customerId?: string;
  /** Billing profile Id associated to this reservation order. */
  billingProfileId?: string;
  /** Billing account Id associated to this reservation order. */
  billingAccountId?: string;
  /** This is the DateTime when the reservation order was initially requested for purchase. */
  requestDateTime?: Date;
  /** This is the DateTime when the reservation order was created. */
  createdDateTime?: Date;
  /** This is the date when the reservation order will expire. */
  expiryDate?: Date;
  /** This is the date-time when the reservation order will expire. */
  expiryDateTime?: Date;
  /** This is the DateTime when the reservation benefit started. */
  benefitStartTime?: Date;
  /** Total original quantity of the skus purchased in the reservation order. */
  originalQuantity?: number;
  /**
   * The term of the reservation, e.g. P1Y
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly term?: string;
  /**
   * The provisioning state of the reservation, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** Represent the billing plans. */
  billingPlan?: ReservationBillingPlan;
  /** Information describing the type of billing plan for this reservation order. */
  planInformation?: ReservationOrderBillingPlanInformation;
  reservations?: Reservation[];
  /** This is the date-time when the Azure Hybrid Benefit needs to be reviewed. */
  reviewDateTime?: Date;
  /** Extended status information for the reservation. */
  extendedStatusInfo?: ReservationExtendedStatusInfo;
  /** Represents UPN */
  productCode?: string;
}

/** An agreement. */
export interface Agreement extends ProxyResourceWithTags {
  /** An agreement. */
  properties?: AgreementProperties;
}

/** An associated tenant. */
export interface AssociatedTenant extends ProxyResourceWithTags {
  /** An associated tenant. */
  properties?: AssociatedTenantProperties;
}

/** The Available Credit or Payment on Account Balance. The credit balance can be used to settle due or past due invoices. */
export interface AvailableBalance extends ProxyResourceWithTags {
  /** The Available Credit or Payment on Account Balance. The credit balance can be used to settle due or past due invoices. */
  properties?: AvailableBalanceProperties;
}

/** A billing account. */
export interface BillingAccount extends ProxyResourceWithTags {
  /** A billing account. */
  properties?: BillingAccountProperties;
}

/** A billing account. */
export interface BillingAccountPatch extends ProxyResourceWithTags {
  /** A billing account. */
  properties?: BillingAccountProperties;
}

/** A billing profile. */
export interface BillingProfile extends ProxyResourceWithTags {
  /** A billing profile. */
  properties?: BillingProfileProperties;
}

/** A billing property. */
export interface BillingProperty extends ProxyResourceWithTags {
  /** A billing property. */
  properties?: BillingPropertyProperties;
}

/** A request submitted by a user to manage billing. Users with an owner role on the scope can approve or decline these requests. */
export interface BillingRequest extends ProxyResourceWithTags {
  /** A request submitted by a user to manage billing. Users with an owner role on the scope can approve or decline these requests. */
  properties?: BillingRequestProperties;
}

/** The properties of the billing role assignment. */
export interface BillingRoleAssignment extends ProxyResourceWithTags {
  /** The properties of the billing role assignment. */
  properties?: BillingRoleAssignmentProperties;
}

/** The properties of a role definition. */
export interface BillingRoleDefinition extends ProxyResourceWithTags {
  /** The properties of a role definition. */
  properties?: BillingRoleDefinitionProperties;
}

/** Savings plan order */
export interface SavingsPlanOrderModel extends ProxyResourceWithTags {
  /** Savings plan SKU */
  sku: Sku;
  /** Display name */
  displayName?: string;
  /**
   * The provisioning state of the savings plan, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** Subscription that will be charged for purchasing SavingsPlan */
  billingScopeId?: string;
  /**
   * Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * Fully-qualified identifier of the billing account where the savings plan is applied.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /** Represents the Savings plan term in ISO 8601 format. */
  term?: SavingsPlanTerm;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly purchases. */
  billingPlan?: BillingPlan;
  /**
   * DateTime when the savings plan benefit started.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly benefitStartTime?: Date;
  /**
   * DateTime when the savings plan will expire.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDateTime?: Date;
  /** Information describing the type of billing plan for this savings plan. */
  planInformation?: BillingPlanInformation;
  savingsPlans?: string[];
  /**
   * Extended status information
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
  /** Represents UPN */
  productCode?: string;
}

/** Savings plan */
export interface SavingsPlanModel extends ProxyResourceWithTags {
  /** Savings plan SKU */
  sku: Sku;
  /** Display name */
  displayName?: string;
  /** The provisioning state of the resource during a long-running operation. */
  provisioningState?: ProvisioningState;
  /**
   * The provisioning state of the savings plan for display, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayProvisioningState?: string;
  /**
   * The applied scope type of the savings plan for display, e.g. Shared
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userFriendlyAppliedScopeType?: string;
  /** Subscription that will be charged for purchasing SavingsPlan */
  billingScopeId?: string;
  /**
   * Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * Fully-qualified identifier of the billing account where the savings plan is applied.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /** Represents the Savings plan term in ISO 8601 format. */
  term?: SavingsPlanTerm;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** SavingsPlan Id of the SavingsPlan from which this SavingsPlan is renewed. */
  renewSource?: string;
  /** SavingsPlan Id of the SavingsPlan which is purchased because of renew. */
  renewDestination?: string;
  /** Properties specific to renew. */
  renewProperties?: RenewProperties;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly purchases. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Commitment towards the benefit. */
  commitment?: Commitment;
  /**
   * DateTime of the savings plan starting when this version is effective from.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDateTime?: Date;
  /**
   * This is the DateTime when the savings plan benefit starts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly benefitStartTime?: Date;
  /**
   * This is the date-time when the savings plan will expire.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDateTime?: Date;
  /**
   * Date time when the savings plan was purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDateTime?: Date;
  /**
   * Savings plan utilization
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly utilization?: Utilization;
  /**
   * Extended status information
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
  /** Represents UPN */
  productCode?: string;
}

/** The billing properties of a subscription. */
export interface BillingSubscription extends ProxyResourceWithTags {
  /** Indicates whether auto renewal is turned on or off for a product. */
  autoRenew?: AutoRenew;
  /** The provisioning tenant of the subscription. */
  beneficiaryTenantId?: string;
  /** The beneficiary of the billing subscription. */
  beneficiary?: Beneficiary;
  /** The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y */
  billingFrequency?: string;
  /** The fully qualified ID that uniquely identifies a billing profile. */
  billingProfileId?: string;
  /**
   * Dictionary of billing policies associated with the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingPolicies?: { [propertyName: string]: string };
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileName?: string;
  /** The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer Agreement or Enterprise Agreement Type billing accounts. */
  consumptionCostCenter?: string;
  /** The fully qualified ID that uniquely identifies a customer. */
  customerId?: string;
  /**
   * The name of the customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The ID that uniquely identifies a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerName?: string;
  /** The name of the billing subscription. */
  displayName?: string;
  /**
   * The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountId?: string;
  /**
   * The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountDisplayName?: string;
  /** The fully qualified ID that uniquely identifies an invoice section. */
  invoiceSectionId?: string;
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionName?: string;
  /**
   * The last month's charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMonthCharges?: Amount;
  /**
   * The current month to date charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthToDateCharges?: Amount;
  /**
   * Next billing cycle details of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextBillingCycleDetails?: NextBillingCycleDetails;
  /**
   * The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offerId?: string;
  /**
   * The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware, ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productCategory?: string;
  /**
   * Type of the product for which the subscription is purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productType?: string;
  /** Id of the product for which the subscription is purchased. */
  productTypeId?: string;
  /**
   * Purchase date of the product in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDate?: Date;
  /** The quantity of licenses or fulfillment units for the subscription. */
  quantity?: number;
  /**
   * Reseller for this subscription. The fields is not available for Microsoft Partner Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reseller?: Reseller;
  /**
   * Details for the next renewal term of a subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly renewalTermDetails?: RenewalTermDetails;
  /** The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts. */
  skuId?: string;
  /**
   * The SKU description of the product for which the subscription is purchased. This field is is only available for billing accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /** System imposed policies that regulate behavior of the subscription. */
  systemOverrides?: SystemOverrides;
  /**
   * Unique identifier of the linked resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceUri?: string;
  /** The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y */
  termDuration?: string;
  /**
   * Start date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termStartDate?: Date;
  /**
   * End date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termEndDate?: Date;
  /** The tenant in which the subscription is provisioned. */
  provisioningTenantId?: string;
  /**
   * The status of the subscription. This field is not available for Enterprise Agreement billing accounts
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: BillingSubscriptionStatus;
  /**
   * The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest API version for more details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationStatus?: BillingSubscriptionOperationStatus;
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The ID of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasons?: string[];
  /**
   * The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasonDetails?: BillingSubscriptionStatusDetails[];
  /**
   * The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement Type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountStartDate?: Date;
  /**
   * The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionEnrollmentAccountStatus?: SubscriptionEnrollmentAccountStatus;
}

/** A billing subscription alias. */
export interface BillingSubscriptionAlias extends ProxyResourceWithTags {
  /** Indicates whether auto renewal is turned on or off for a product. */
  autoRenew?: AutoRenew;
  /** The provisioning tenant of the subscription. */
  beneficiaryTenantId?: string;
  /** The beneficiary of the billing subscription. */
  beneficiary?: Beneficiary;
  /** The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y */
  billingFrequency?: string;
  /** The fully qualified ID that uniquely identifies a billing profile. */
  billingProfileId?: string;
  /**
   * Dictionary of billing policies associated with the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingPolicies?: { [propertyName: string]: string };
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileName?: string;
  /** The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer Agreement or Enterprise Agreement Type billing accounts. */
  consumptionCostCenter?: string;
  /** The fully qualified ID that uniquely identifies a customer. */
  customerId?: string;
  /**
   * The name of the customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The ID that uniquely identifies a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerName?: string;
  /** The name of the billing subscription. */
  displayName?: string;
  /**
   * The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountId?: string;
  /**
   * The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountDisplayName?: string;
  /** The fully qualified ID that uniquely identifies an invoice section. */
  invoiceSectionId?: string;
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionName?: string;
  /**
   * The last month's charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMonthCharges?: Amount;
  /**
   * The current month to date charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthToDateCharges?: Amount;
  /**
   * Next billing cycle details of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextBillingCycleDetails?: NextBillingCycleDetails;
  /**
   * The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offerId?: string;
  /**
   * The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware, ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productCategory?: string;
  /**
   * Type of the product for which the subscription is purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productType?: string;
  /** Id of the product for which the subscription is purchased. */
  productTypeId?: string;
  /**
   * Purchase date of the product in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDate?: Date;
  /** The quantity of licenses or fulfillment units for the subscription. */
  quantity?: number;
  /**
   * Reseller for this subscription. The fields is not available for Microsoft Partner Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reseller?: Reseller;
  /**
   * Details for the next renewal term of a subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly renewalTermDetails?: RenewalTermDetails;
  /** The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts. */
  skuId?: string;
  /**
   * The SKU description of the product for which the subscription is purchased. This field is is only available for billing accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /** System imposed policies that regulate behavior of the subscription. */
  systemOverrides?: SystemOverrides;
  /**
   * Unique identifier of the linked resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceUri?: string;
  /** The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y */
  termDuration?: string;
  /**
   * Start date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termStartDate?: Date;
  /**
   * End date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termEndDate?: Date;
  /** The tenant in which the subscription is provisioned. */
  provisioningTenantId?: string;
  /**
   * The status of the subscription. This field is not available for Enterprise Agreement billing accounts
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: BillingSubscriptionStatus;
  /**
   * The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest API version for more details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationStatus?: BillingSubscriptionOperationStatus;
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The ID of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasons?: string[];
  /**
   * The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasonDetails?: BillingSubscriptionStatusDetails[];
  /**
   * The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement Type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountStartDate?: Date;
  /**
   * The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionEnrollmentAccountStatus?: SubscriptionEnrollmentAccountStatus;
  /**
   * The ID of the billing subscription with the subscription alias.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingSubscriptionId?: string;
}

/** The billing properties of a subscription. */
export interface BillingSubscriptionPatch extends ProxyResourceWithTags {
  /** Indicates whether auto renewal is turned on or off for a product. */
  autoRenew?: AutoRenew;
  /** The provisioning tenant of the subscription. */
  beneficiaryTenantId?: string;
  /** The beneficiary of the billing subscription. */
  beneficiary?: Beneficiary;
  /** The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y */
  billingFrequency?: string;
  /** The fully qualified ID that uniquely identifies a billing profile. */
  billingProfileId?: string;
  /**
   * Dictionary of billing policies associated with the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingPolicies?: { [propertyName: string]: string };
  /**
   * The name of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID that uniquely identifies a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileName?: string;
  /** The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer Agreement or Enterprise Agreement Type billing accounts. */
  consumptionCostCenter?: string;
  /** The fully qualified ID that uniquely identifies a customer. */
  customerId?: string;
  /**
   * The name of the customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The ID that uniquely identifies a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerName?: string;
  /** The name of the billing subscription. */
  displayName?: string;
  /**
   * The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountId?: string;
  /**
   * The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountDisplayName?: string;
  /** The fully qualified ID that uniquely identifies an invoice section. */
  invoiceSectionId?: string;
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID that uniquely identifies an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionName?: string;
  /**
   * The last month's charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMonthCharges?: Amount;
  /**
   * The current month to date charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthToDateCharges?: Amount;
  /**
   * Next billing cycle details of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextBillingCycleDetails?: NextBillingCycleDetails;
  /**
   * The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offerId?: string;
  /**
   * The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware, ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productCategory?: string;
  /**
   * Type of the product for which the subscription is purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productType?: string;
  /** Id of the product for which the subscription is purchased. */
  productTypeId?: string;
  /**
   * Purchase date of the product in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDate?: Date;
  /** The quantity of licenses or fulfillment units for the subscription. */
  quantity?: number;
  /**
   * Reseller for this subscription. The fields is not available for Microsoft Partner Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reseller?: Reseller;
  /**
   * Details for the next renewal term of a subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly renewalTermDetails?: RenewalTermDetails;
  /** The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts. */
  skuId?: string;
  /**
   * The SKU description of the product for which the subscription is purchased. This field is is only available for billing accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /** System imposed policies that regulate behavior of the subscription. */
  systemOverrides?: SystemOverrides;
  /**
   * Unique identifier of the linked resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceUri?: string;
  /** The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y */
  termDuration?: string;
  /**
   * Start date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termStartDate?: Date;
  /**
   * End date of the term in UTC time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termEndDate?: Date;
  /** The tenant in which the subscription is provisioned. */
  provisioningTenantId?: string;
  /**
   * The status of the subscription. This field is not available for Enterprise Agreement billing accounts
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: BillingSubscriptionStatus;
  /**
   * The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest API version for more details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationStatus?: BillingSubscriptionOperationStatus;
  /**
   * The provisioning state of the resource during a long-running operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The ID of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasons?: string[];
  /**
   * The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasonDetails?: BillingSubscriptionStatusDetails[];
  /**
   * The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement Type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentAccountStartDate?: Date;
  /**
   * The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionEnrollmentAccountStatus?: SubscriptionEnrollmentAccountStatus;
}

/** A partner's customer. */
export interface Customer extends ProxyResourceWithTags {
  /** A partner's customer. */
  properties?: CustomerProperties;
}

/** Optional grouping of enrollment accounts to segment costs into logical groupings and set budgets. */
export interface Department extends ProxyResourceWithTags {
  /** Optional grouping of enrollment accounts to segment costs into logical groupings and set budgets. */
  properties?: DepartmentProperties;
}

/** It is an organizational hierarchy within a billing account to administer and manage azure costs. */
export interface EnrollmentAccount extends ProxyResourceWithTags {
  /** It is an organizational hierarchy within a billing account to administer and manage azure costs. */
  properties?: EnrollmentAccountProperties;
}

/** An invoice. */
export interface Invoice extends ProxyResourceWithTags {
  /** An invoice. */
  properties?: InvoiceProperties;
}

/** An invoice section. */
export interface InvoiceSection extends ProxyResourceWithTags {
  /** An invoice section. */
  properties?: InvoiceSectionProperties;
}

/** A payment method link. */
export interface PaymentMethodLink extends ProxyResourceWithTags {
  /**
   * The account holder name for the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountHolderName?: string;
  /**
   * The display name of the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The expiration month and year of the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiration?: string;
  /**
   * The family of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly family?: PaymentMethodFamily;
  /**
   * Last four digits of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastFourDigits?: string;
  /**
   * The list of logos for the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logos?: PaymentMethodLogo[];
  /** Projection of a payment method. Will not be returned in this or future versions. */
  paymentMethod?: PaymentMethodProperties;
  /** Id of payment method. Example: /providers/Microsoft.Billing/paymentMethods/ABCDABCDABC0 */
  paymentMethodId?: string;
  /**
   * The type of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodType?: string;
  /**
   * Status of the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: PaymentMethodStatus;
}

/** A payment method. */
export interface PaymentMethod extends ProxyResourceWithTags {
  /**
   * Id of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly idPropertiesId?: string;
  /**
   * The account holder name for the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountHolderName?: string;
  /**
   * The display name of the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The expiration month and year of the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiration?: string;
  /** The family of payment method. */
  family?: PaymentMethodFamily;
  /**
   * Last four digits of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastFourDigits?: string;
  /** The list of logos for the payment method. */
  logos?: PaymentMethodLogo[];
  /**
   * The type of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodType?: string;
  /** Status of the payment method. */
  status?: PaymentMethodStatus;
}

/** A policy at customer scope. */
export interface CustomerPolicy extends ProxyResourceWithTags {
  /** A policy at customer scope. */
  properties?: CustomerPolicyProperties;
}

/** A policy at billing profile scope. */
export interface BillingProfilePolicy extends ProxyResourceWithTags {
  /** A policy at billing profile scope. */
  properties?: BillingProfilePolicyProperties;
}

/** A policy at billing account scope. */
export interface BillingAccountPolicy extends ProxyResourceWithTags {
  /** A policy at billing account scope. */
  properties?: BillingAccountPolicyProperties;
}

/** A policy at subscription scope. */
export interface SubscriptionPolicy extends ProxyResourceWithTags {
  /** A policy at subscription scope. */
  properties?: SubscriptionPolicyProperties;
}

/** A product. */
export interface Product extends ProxyResourceWithTags {
  /** A product. */
  properties?: ProductProperties;
}

/** A product. */
export interface ProductPatch extends ProxyResourceWithTags {
  /** A product. */
  properties?: ProductProperties;
}

/** A transaction. */
export interface Transaction extends ProxyResourceWithTags {
  /** A transaction. */
  properties?: TransactionProperties;
}

/** Details of the transfer. */
export interface TransferDetails extends ProxyResourceWithTags {
  /**
   * The time at which the transfer request expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: Date;
  /**
   * Overall transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferStatus?: TransferStatus;
  /**
   * The email ID of the user to whom the transfer request was sent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipientEmailId?: string;
  /**
   * The email ID of the user who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorEmailId?: string;
  /**
   * The email ID of the user who canceled the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly canceledBy?: string;
  /**
   * Detailed transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
}

/** Details of the transfer. */
export interface PartnerTransferDetails extends ProxyResourceWithTags {
  /**
   * The time at which the transfer request expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: Date;
  /**
   * Overall transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferStatus?: TransferStatus;
  /**
   * The email ID of the user to whom the transfer request was sent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipientEmailId?: string;
  /**
   * The type of customer who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorCustomerType?: InitiatorCustomerType;
  /**
   * The email ID of the user who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorEmailId?: string;
  /**
   * Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerId?: string;
  /**
   * Optional name of the reseller for transfer requests that are sent from Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerName?: string;
  /**
   * The email ID of the user who canceled the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly canceledBy?: string;
  /**
   * Detailed transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
}

/** Details of the transfer. */
export interface RecipientTransferDetails extends ProxyResourceWithTags {
  /**
   * The time at which the transfer request expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: Date;
  /**
   * Type of subscriptions that can be transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedProductType?: EligibleProductType[];
  /**
   * Overall transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferStatus?: TransferStatus;
  /**
   * The email ID of the user to whom the transfer request was sent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipientEmailId?: string;
  /**
   * The email ID of the user who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorEmailId?: string;
  /**
   * Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerId?: string;
  /**
   * Optional name of the reseller for transfer requests that are sent from Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerName?: string;
  /**
   * The type of customer who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorCustomerType?: InitiatorCustomerType;
  /**
   * The email ID of the user who canceled the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly canceledBy?: string;
  /**
   * Detailed transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
  /**
   * The customer tenant id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerTenantId?: string;
  /**
   * List of supported account types.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportedAccounts?: SupportedAccountType[];
}

/** Defines headers for AssociatedTenants_delete operation. */
export interface AssociatedTenantsDeleteHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for AssociatedTenants_createOrUpdate operation. */
export interface AssociatedTenantsCreateOrUpdateHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingAccounts_addPaymentTerms operation. */
export interface BillingAccountsAddPaymentTermsHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingAccounts_cancelPaymentTerms operation. */
export interface BillingAccountsCancelPaymentTermsHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingAccounts_update operation. */
export interface BillingAccountsUpdateHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingProfiles_delete operation. */
export interface BillingProfilesDeleteHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingProfiles_createOrUpdate operation. */
export interface BillingProfilesCreateOrUpdateHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRequests_createOrUpdate operation. */
export interface BillingRequestsCreateOrUpdateHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_createByBillingProfile operation. */
export interface BillingRoleAssignmentsCreateByBillingProfileHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_createByCustomer operation. */
export interface BillingRoleAssignmentsCreateByCustomerHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_resolveByCustomer operation. */
export interface BillingRoleAssignmentsResolveByCustomerHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_createByInvoiceSection operation. */
export interface BillingRoleAssignmentsCreateByInvoiceSectionHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_resolveByInvoiceSection operation. */
export interface BillingRoleAssignmentsResolveByInvoiceSectionHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_resolveByBillingProfile operation. */
export interface BillingRoleAssignmentsResolveByBillingProfileHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_createOrUpdateByBillingAccount operation. */
export interface BillingRoleAssignmentsCreateOrUpdateByBillingAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_createByBillingAccount operation. */
export interface BillingRoleAssignmentsCreateByBillingAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_createOrUpdateByDepartment operation. */
export interface BillingRoleAssignmentsCreateOrUpdateByDepartmentHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_createOrUpdateByEnrollmentAccount operation. */
export interface BillingRoleAssignmentsCreateOrUpdateByEnrollmentAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingRoleAssignments_resolveByBillingAccount operation. */
export interface BillingRoleAssignmentsResolveByBillingAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for SavingsPlans_updateByBillingAccount operation. */
export interface SavingsPlansUpdateByBillingAccountHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned. */
  location?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Defines headers for BillingSubscriptions_cancel operation. */
export interface BillingSubscriptionsCancelHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingSubscriptions_merge operation. */
export interface BillingSubscriptionsMergeHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingSubscriptions_move operation. */
export interface BillingSubscriptionsMoveHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingSubscriptions_split operation. */
export interface BillingSubscriptionsSplitHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingSubscriptions_delete operation. */
export interface BillingSubscriptionsDeleteHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingSubscriptions_update operation. */
export interface BillingSubscriptionsUpdateHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for BillingSubscriptionsAliases_createOrUpdate operation. */
export interface BillingSubscriptionsAliasesCreateOrUpdateHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Invoices_downloadDocumentsByBillingAccount operation. */
export interface InvoicesDownloadDocumentsByBillingAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Invoices_amend operation. */
export interface InvoicesAmendHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Invoices_downloadByBillingAccount operation. */
export interface InvoicesDownloadByBillingAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Invoices_downloadSummaryByBillingAccount operation. */
export interface InvoicesDownloadSummaryByBillingAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Invoices_downloadDocumentsByBillingSubscription operation. */
export interface InvoicesDownloadDocumentsByBillingSubscriptionHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Invoices_downloadByBillingSubscription operation. */
export interface InvoicesDownloadByBillingSubscriptionHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for InvoiceSections_delete operation. */
export interface InvoiceSectionsDeleteHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for InvoiceSections_createOrUpdate operation. */
export interface InvoiceSectionsCreateOrUpdateHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Policies_createOrUpdateByCustomer operation. */
export interface PoliciesCreateOrUpdateByCustomerHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Policies_createOrUpdateByBillingProfile operation. */
export interface PoliciesCreateOrUpdateByBillingProfileHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Policies_createOrUpdateByCustomerAtBillingAccount operation. */
export interface PoliciesCreateOrUpdateByCustomerAtBillingAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Policies_createOrUpdateByBillingAccount operation. */
export interface PoliciesCreateOrUpdateByBillingAccountHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Products_move operation. */
export interface ProductsMoveHeaders {
  location?: string;
  retryAfter?: number;
}

/** Defines headers for Reservations_updateByBillingAccount operation. */
export interface ReservationsUpdateByBillingAccountHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned. */
  location?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Defines headers for Transactions_transactionsDownloadByInvoice operation. */
export interface TransactionsTransactionsDownloadByInvoiceHeaders {
  location?: string;
  retryAfter?: number;
}

/** Known values of {@link AcceptanceMode} that the service accepts. */
export enum KnownAcceptanceMode {
  /** Other */
  Other = "Other",
  /** ClickToAccept */
  ClickToAccept = "ClickToAccept",
  /** ESignEmbedded */
  ESignEmbedded = "ESignEmbedded",
  /** ESignOffline */
  ESignOffline = "ESignOffline",
  /** Implicit */
  Implicit = "Implicit",
  /** Offline */
  Offline = "Offline",
  /** PhysicalSign */
  PhysicalSign = "PhysicalSign",
}

/**
 * Defines values for AcceptanceMode. \
 * {@link KnownAcceptanceMode} can be used interchangeably with AcceptanceMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **ClickToAccept** \
 * **ESignEmbedded** \
 * **ESignOffline** \
 * **Implicit** \
 * **Offline** \
 * **PhysicalSign**
 */
export type AcceptanceMode = string;

/** Known values of {@link Category} that the service accepts. */
export enum KnownCategory {
  /** Other */
  Other = "Other",
  /** AffiliatePurchaseTerms */
  AffiliatePurchaseTerms = "AffiliatePurchaseTerms",
  /** IndirectForGovernmentAgreement */
  IndirectForGovernmentAgreement = "IndirectForGovernmentAgreement",
  /** MicrosoftCustomerAgreement */
  MicrosoftCustomerAgreement = "MicrosoftCustomerAgreement",
  /** MicrosoftPartnerAgreement */
  MicrosoftPartnerAgreement = "MicrosoftPartnerAgreement",
  /** UKCloudComputeFramework */
  UKCloudComputeFramework = "UKCloudComputeFramework",
}

/**
 * Defines values for Category. \
 * {@link KnownCategory} can be used interchangeably with Category,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **AffiliatePurchaseTerms** \
 * **IndirectForGovernmentAgreement** \
 * **MicrosoftCustomerAgreement** \
 * **MicrosoftPartnerAgreement** \
 * **UKCloudComputeFramework**
 */
export type Category = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Canceled */
  Canceled = "Canceled",
  /** Failed */
  Failed = "Failed",
  /** New */
  New = "New",
  /** Pending */
  Pending = "Pending",
  /** Provisioning */
  Provisioning = "Provisioning",
  /** PendingBilling */
  PendingBilling = "PendingBilling",
  /** ConfirmedBilling */
  ConfirmedBilling = "ConfirmedBilling",
  /** Creating */
  Creating = "Creating",
  /** Created */
  Created = "Created",
  /** Expired */
  Expired = "Expired",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Canceled** \
 * **Failed** \
 * **New** \
 * **Pending** \
 * **Provisioning** \
 * **PendingBilling** \
 * **ConfirmedBilling** \
 * **Creating** \
 * **Created** \
 * **Expired**
 */
export type ProvisioningState = string;

/** Known values of {@link BillingManagementTenantState} that the service accepts. */
export enum KnownBillingManagementTenantState {
  /** Other */
  Other = "Other",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
  /** Active */
  Active = "Active",
  /** Revoked */
  Revoked = "Revoked",
}

/**
 * Defines values for BillingManagementTenantState. \
 * {@link KnownBillingManagementTenantState} can be used interchangeably with BillingManagementTenantState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **NotAllowed** \
 * **Active** \
 * **Revoked**
 */
export type BillingManagementTenantState = string;

/** Known values of {@link ProvisioningTenantState} that the service accepts. */
export enum KnownProvisioningTenantState {
  /** Other */
  Other = "Other",
  /** NotRequested */
  NotRequested = "NotRequested",
  /** Active */
  Active = "Active",
  /** Pending */
  Pending = "Pending",
  /** BillingRequestExpired */
  BillingRequestExpired = "BillingRequestExpired",
  /** BillingRequestDeclined */
  BillingRequestDeclined = "BillingRequestDeclined",
  /** Revoked */
  Revoked = "Revoked",
}

/**
 * Defines values for ProvisioningTenantState. \
 * {@link KnownProvisioningTenantState} can be used interchangeably with ProvisioningTenantState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **NotRequested** \
 * **Active** \
 * **Pending** \
 * **BillingRequestExpired** \
 * **BillingRequestDeclined** \
 * **Revoked**
 */
export type ProvisioningTenantState = string;

/** Known values of {@link PaymentMethodFamily} that the service accepts. */
export enum KnownPaymentMethodFamily {
  /** Other */
  Other = "Other",
  /** None */
  None = "None",
  /** CreditCard */
  CreditCard = "CreditCard",
  /** Credits */
  Credits = "Credits",
  /** CheckWire */
  CheckWire = "CheckWire",
  /** EWallet */
  EWallet = "EWallet",
  /** TaskOrder */
  TaskOrder = "TaskOrder",
  /** DirectDebit */
  DirectDebit = "DirectDebit",
}

/**
 * Defines values for PaymentMethodFamily. \
 * {@link KnownPaymentMethodFamily} can be used interchangeably with PaymentMethodFamily,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **None** \
 * **CreditCard** \
 * **Credits** \
 * **CheckWire** \
 * **EWallet** \
 * **TaskOrder** \
 * **DirectDebit**
 */
export type PaymentMethodFamily = string;

/** Known values of {@link AccountStatus} that the service accepts. */
export enum KnownAccountStatus {
  /** Other */
  Other = "Other",
  /** Active */
  Active = "Active",
  /** UnderReview */
  UnderReview = "UnderReview",
  /** Disabled */
  Disabled = "Disabled",
  /** Deleted */
  Deleted = "Deleted",
  /** Extended */
  Extended = "Extended",
  /** Pending */
  Pending = "Pending",
  /** New */
  New = "New",
  /** Expired */
  Expired = "Expired",
  /** Terminated */
  Terminated = "Terminated",
  /** Transferred */
  Transferred = "Transferred",
}

/**
 * Defines values for AccountStatus. \
 * {@link KnownAccountStatus} can be used interchangeably with AccountStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Active** \
 * **UnderReview** \
 * **Disabled** \
 * **Deleted** \
 * **Extended** \
 * **Pending** \
 * **New** \
 * **Expired** \
 * **Terminated** \
 * **Transferred**
 */
export type AccountStatus = string;

/** Known values of {@link AccountType} that the service accepts. */
export enum KnownAccountType {
  /** Other */
  Other = "Other",
  /** Enterprise */
  Enterprise = "Enterprise",
  /** Individual */
  Individual = "Individual",
  /** Partner */
  Partner = "Partner",
  /** Reseller */
  Reseller = "Reseller",
  /** ClassicPartner */
  ClassicPartner = "ClassicPartner",
  /** Internal */
  Internal = "Internal",
  /** Tenant */
  Tenant = "Tenant",
  /** Business */
  Business = "Business",
}

/**
 * Defines values for AccountType. \
 * {@link KnownAccountType} can be used interchangeably with AccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Enterprise** \
 * **Individual** \
 * **Partner** \
 * **Reseller** \
 * **ClassicPartner** \
 * **Internal** \
 * **Tenant** \
 * **Business**
 */
export type AccountType = string;

/** Known values of {@link AccountSubType} that the service accepts. */
export enum KnownAccountSubType {
  /** Other */
  Other = "Other",
  /** None */
  None = "None",
  /** Individual */
  Individual = "Individual",
  /** Professional */
  Professional = "Professional",
  /** Enterprise */
  Enterprise = "Enterprise",
}

/**
 * Defines values for AccountSubType. \
 * {@link KnownAccountSubType} can be used interchangeably with AccountSubType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **None** \
 * **Individual** \
 * **Professional** \
 * **Enterprise**
 */
export type AccountSubType = string;

/** Known values of {@link BillingAccountStatusReasonCode} that the service accepts. */
export enum KnownBillingAccountStatusReasonCode {
  /** Other */
  Other = "Other",
  /** UnusualActivity */
  UnusualActivity = "UnusualActivity",
  /** ManuallyTerminated */
  ManuallyTerminated = "ManuallyTerminated",
  /** Expired */
  Expired = "Expired",
  /** Transferred */
  Transferred = "Transferred",
  /** TerminateProcessing */
  TerminateProcessing = "TerminateProcessing",
}

/**
 * Defines values for BillingAccountStatusReasonCode. \
 * {@link KnownBillingAccountStatusReasonCode} can be used interchangeably with BillingAccountStatusReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **UnusualActivity** \
 * **ManuallyTerminated** \
 * **Expired** \
 * **Transferred** \
 * **TerminateProcessing**
 */
export type BillingAccountStatusReasonCode = string;

/** Known values of {@link AgreementType} that the service accepts. */
export enum KnownAgreementType {
  /** Other */
  Other = "Other",
  /** MicrosoftCustomerAgreement */
  MicrosoftCustomerAgreement = "MicrosoftCustomerAgreement",
  /** EnterpriseAgreement */
  EnterpriseAgreement = "EnterpriseAgreement",
  /** MicrosoftOnlineServicesProgram */
  MicrosoftOnlineServicesProgram = "MicrosoftOnlineServicesProgram",
  /** MicrosoftPartnerAgreement */
  MicrosoftPartnerAgreement = "MicrosoftPartnerAgreement",
}

/**
 * Defines values for AgreementType. \
 * {@link KnownAgreementType} can be used interchangeably with AgreementType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **MicrosoftCustomerAgreement** \
 * **EnterpriseAgreement** \
 * **MicrosoftOnlineServicesProgram** \
 * **MicrosoftPartnerAgreement**
 */
export type AgreementType = string;

/** Known values of {@link ExtendedTermOption} that the service accepts. */
export enum KnownExtendedTermOption {
  /** Other */
  Other = "Other",
  /** OptedIn */
  OptedIn = "Opted-In",
  /** OptedOut */
  OptedOut = "Opted-Out",
}

/**
 * Defines values for ExtendedTermOption. \
 * {@link KnownExtendedTermOption} can be used interchangeably with ExtendedTermOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Opted-In** \
 * **Opted-Out**
 */
export type ExtendedTermOption = string;

/** Known values of {@link SupportLevel} that the service accepts. */
export enum KnownSupportLevel {
  /** Other */
  Other = "Other",
  /** Standard */
  Standard = "Standard",
  /** ProDirect */
  ProDirect = "Pro-Direct",
  /** Developer */
  Developer = "Developer",
}

/**
 * Defines values for SupportLevel. \
 * {@link KnownSupportLevel} can be used interchangeably with SupportLevel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Standard** \
 * **Pro-Direct** \
 * **Developer**
 */
export type SupportLevel = string;

/** Known values of {@link MarkupStatus} that the service accepts. */
export enum KnownMarkupStatus {
  /** Other */
  Other = "Other",
  /** Disabled */
  Disabled = "Disabled",
  /** Preview */
  Preview = "Preview",
  /** Published */
  Published = "Published",
  /** Locked */
  Locked = "Locked",
}

/**
 * Defines values for MarkupStatus. \
 * {@link KnownMarkupStatus} can be used interchangeably with MarkupStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Disabled** \
 * **Preview** \
 * **Published** \
 * **Locked**
 */
export type MarkupStatus = string;

/** Known values of {@link BillingRelationshipType} that the service accepts. */
export enum KnownBillingRelationshipType {
  /** Other */
  Other = "Other",
  /** Direct */
  Direct = "Direct",
  /** IndirectCustomer */
  IndirectCustomer = "IndirectCustomer",
  /** IndirectPartner */
  IndirectPartner = "IndirectPartner",
  /** CSPPartner */
  CSPPartner = "CSPPartner",
  /** CSPCustomer */
  CSPCustomer = "CSPCustomer",
}

/**
 * Defines values for BillingRelationshipType. \
 * {@link KnownBillingRelationshipType} can be used interchangeably with BillingRelationshipType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Direct** \
 * **IndirectCustomer** \
 * **IndirectPartner** \
 * **CSPPartner** \
 * **CSPCustomer**
 */
export type BillingRelationshipType = string;

/** Known values of {@link TaxIdentifierType} that the service accepts. */
export enum KnownTaxIdentifierType {
  /** Other */
  Other = "Other",
  /** BrazilCcmId */
  BrazilCcmId = "BrazilCcmId",
  /** BrazilCnpjId */
  BrazilCnpjId = "BrazilCnpjId",
  /** BrazilCpfId */
  BrazilCpfId = "BrazilCpfId",
  /** CanadianFederalExempt */
  CanadianFederalExempt = "CanadianFederalExempt",
  /** CanadianProvinceExempt */
  CanadianProvinceExempt = "CanadianProvinceExempt",
  /** ExternalTaxation */
  ExternalTaxation = "ExternalTaxation",
  /** IndiaFederalTanId */
  IndiaFederalTanId = "IndiaFederalTanId",
  /** IndiaFederalServiceTaxId */
  IndiaFederalServiceTaxId = "IndiaFederalServiceTaxId",
  /** IndiaPanId */
  IndiaPanId = "IndiaPanId",
  /** IndiaStateCstId */
  IndiaStateCstId = "IndiaStateCstId",
  /** IndiaStateGstINId */
  IndiaStateGstINId = "IndiaStateGstINId",
  /** IndiaStateVatId */
  IndiaStateVatId = "IndiaStateVatId",
  /** IntlExempt */
  IntlExempt = "IntlExempt",
  /** USExempt */
  USExempt = "USExempt",
  /** VatId */
  VatId = "VatId",
  /** LoveCode */
  LoveCode = "LoveCode",
  /** MobileBarCode */
  MobileBarCode = "MobileBarCode",
  /** NationalIdentificationNumber */
  NationalIdentificationNumber = "NationalIdentificationNumber",
  /** PublicSectorId */
  PublicSectorId = "PublicSectorId",
}

/**
 * Defines values for TaxIdentifierType. \
 * {@link KnownTaxIdentifierType} can be used interchangeably with TaxIdentifierType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **BrazilCcmId** \
 * **BrazilCnpjId** \
 * **BrazilCpfId** \
 * **CanadianFederalExempt** \
 * **CanadianProvinceExempt** \
 * **ExternalTaxation** \
 * **IndiaFederalTanId** \
 * **IndiaFederalServiceTaxId** \
 * **IndiaPanId** \
 * **IndiaStateCstId** \
 * **IndiaStateGstINId** \
 * **IndiaStateVatId** \
 * **IntlExempt** \
 * **USExempt** \
 * **VatId** \
 * **LoveCode** \
 * **MobileBarCode** \
 * **NationalIdentificationNumber** \
 * **PublicSectorId**
 */
export type TaxIdentifierType = string;

/** Known values of {@link TaxIdentifierStatus} that the service accepts. */
export enum KnownTaxIdentifierStatus {
  /** Other */
  Other = "Other",
  /** Valid */
  Valid = "Valid",
  /** Invalid */
  Invalid = "Invalid",
}

/**
 * Defines values for TaxIdentifierStatus. \
 * {@link KnownTaxIdentifierStatus} can be used interchangeably with TaxIdentifierStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Valid** \
 * **Invalid**
 */
export type TaxIdentifierStatus = string;

/** Known values of {@link BillingProfileStatus} that the service accepts. */
export enum KnownBillingProfileStatus {
  /** Other */
  Other = "Other",
  /** Active */
  Active = "Active",
  /** Disabled */
  Disabled = "Disabled",
  /** Warned */
  Warned = "Warned",
  /** Deleted */
  Deleted = "Deleted",
  /** UnderReview */
  UnderReview = "UnderReview",
}

/**
 * Defines values for BillingProfileStatus. \
 * {@link KnownBillingProfileStatus} can be used interchangeably with BillingProfileStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Active** \
 * **Disabled** \
 * **Warned** \
 * **Deleted** \
 * **UnderReview**
 */
export type BillingProfileStatus = string;

/** Known values of {@link BillingProfileStatusReasonCode} that the service accepts. */
export enum KnownBillingProfileStatusReasonCode {
  /** Other */
  Other = "Other",
  /** PastDue */
  PastDue = "PastDue",
  /** UnusualActivity */
  UnusualActivity = "UnusualActivity",
  /** SpendingLimitReached */
  SpendingLimitReached = "SpendingLimitReached",
  /** SpendingLimitExpired */
  SpendingLimitExpired = "SpendingLimitExpired",
}

/**
 * Defines values for BillingProfileStatusReasonCode. \
 * {@link KnownBillingProfileStatusReasonCode} can be used interchangeably with BillingProfileStatusReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **PastDue** \
 * **UnusualActivity** \
 * **SpendingLimitReached** \
 * **SpendingLimitExpired**
 */
export type BillingProfileStatusReasonCode = string;

/** Known values of {@link SpendingLimit} that the service accepts. */
export enum KnownSpendingLimit {
  /** Off */
  Off = "Off",
  /** On */
  On = "On",
}

/**
 * Defines values for SpendingLimit. \
 * {@link KnownSpendingLimit} can be used interchangeably with SpendingLimit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off** \
 * **On**
 */
export type SpendingLimit = string;

/** Known values of {@link PaymentTermsEligibilityStatus} that the service accepts. */
export enum KnownPaymentTermsEligibilityStatus {
  /** Other */
  Other = "Other",
  /** Valid */
  Valid = "Valid",
  /** Invalid */
  Invalid = "Invalid",
}

/**
 * Defines values for PaymentTermsEligibilityStatus. \
 * {@link KnownPaymentTermsEligibilityStatus} can be used interchangeably with PaymentTermsEligibilityStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Valid** \
 * **Invalid**
 */
export type PaymentTermsEligibilityStatus = string;

/** Known values of {@link PaymentTermsEligibilityCode} that the service accepts. */
export enum KnownPaymentTermsEligibilityCode {
  /** Other */
  Other = "Other",
  /** OverlappingPaymentTerms */
  OverlappingPaymentTerms = "OverlappingPaymentTerms",
  /** InvalidDateFormat */
  InvalidDateFormat = "InvalidDateFormat",
  /** InvalidDateRange */
  InvalidDateRange = "InvalidDateRange",
  /** InactiveBillingAccount */
  InactiveBillingAccount = "InactiveBillingAccount",
  /** InvalidBillingAccountType */
  InvalidBillingAccountType = "InvalidBillingAccountType",
  /** NullOrEmptyPaymentTerms */
  NullOrEmptyPaymentTerms = "NullOrEmptyPaymentTerms",
  /** BillingAccountNotFound */
  BillingAccountNotFound = "BillingAccountNotFound",
  /** IneligibleBillingAccountStatus */
  IneligibleBillingAccountStatus = "IneligibleBillingAccountStatus",
  /** InvalidTerms */
  InvalidTerms = "InvalidTerms",
}

/**
 * Defines values for PaymentTermsEligibilityCode. \
 * {@link KnownPaymentTermsEligibilityCode} can be used interchangeably with PaymentTermsEligibilityCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **OverlappingPaymentTerms** \
 * **InvalidDateFormat** \
 * **InvalidDateRange** \
 * **InactiveBillingAccount** \
 * **InvalidBillingAccountType** \
 * **NullOrEmptyPaymentTerms** \
 * **BillingAccountNotFound** \
 * **IneligibleBillingAccountStatus** \
 * **InvalidTerms**
 */
export type PaymentTermsEligibilityCode = string;

/** Known values of {@link AddressValidationStatus} that the service accepts. */
export enum KnownAddressValidationStatus {
  /** Other */
  Other = "Other",
  /** Valid */
  Valid = "Valid",
  /** Invalid */
  Invalid = "Invalid",
}

/**
 * Defines values for AddressValidationStatus. \
 * {@link KnownAddressValidationStatus} can be used interchangeably with AddressValidationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Valid** \
 * **Invalid**
 */
export type AddressValidationStatus = string;

/** Known values of {@link AccessDecision} that the service accepts. */
export enum KnownAccessDecision {
  /** Other */
  Other = "Other",
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for AccessDecision. \
 * {@link KnownAccessDecision} can be used interchangeably with AccessDecision,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Allowed** \
 * **NotAllowed**
 */
export type AccessDecision = string;

/** Known values of {@link DeleteBillingProfileEligibilityStatus} that the service accepts. */
export enum KnownDeleteBillingProfileEligibilityStatus {
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for DeleteBillingProfileEligibilityStatus. \
 * {@link KnownDeleteBillingProfileEligibilityStatus} can be used interchangeably with DeleteBillingProfileEligibilityStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allowed** \
 * **NotAllowed**
 */
export type DeleteBillingProfileEligibilityStatus = string;

/** Known values of {@link DeleteBillingProfileEligibilityCode} that the service accepts. */
export enum KnownDeleteBillingProfileEligibilityCode {
  /** None */
  None = "None",
  /** ActiveCredits */
  ActiveCredits = "ActiveCredits",
  /** ActiveCreditCard */
  ActiveCreditCard = "ActiveCreditCard",
  /** LastBillingProfile */
  LastBillingProfile = "LastBillingProfile",
  /** NotSupported */
  NotSupported = "NotSupported",
  /** OutstandingCharges */
  OutstandingCharges = "OutstandingCharges",
  /** PendingCharges */
  PendingCharges = "PendingCharges",
  /** ReservedInstances */
  ReservedInstances = "ReservedInstances",
  /** ActiveBillingSubscriptions */
  ActiveBillingSubscriptions = "ActiveBillingSubscriptions",
}

/**
 * Defines values for DeleteBillingProfileEligibilityCode. \
 * {@link KnownDeleteBillingProfileEligibilityCode} can be used interchangeably with DeleteBillingProfileEligibilityCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **ActiveCredits** \
 * **ActiveCreditCard** \
 * **LastBillingProfile** \
 * **NotSupported** \
 * **OutstandingCharges** \
 * **PendingCharges** \
 * **ReservedInstances** \
 * **ActiveBillingSubscriptions**
 */
export type DeleteBillingProfileEligibilityCode = string;

/** Known values of {@link SpendingLimitType} that the service accepts. */
export enum KnownSpendingLimitType {
  /** Other */
  Other = "Other",
  /** None */
  None = "None",
  /** FreeAccount */
  FreeAccount = "FreeAccount",
  /** Sandbox */
  Sandbox = "Sandbox",
  /** AzureForStudents */
  AzureForStudents = "AzureForStudents",
  /** AcademicSponsorship */
  AcademicSponsorship = "AcademicSponsorship",
  /** AzureConsumptionCredit */
  AzureConsumptionCredit = "AzureConsumptionCredit",
  /** AzurePassSponsorship */
  AzurePassSponsorship = "AzurePassSponsorship",
  /** MpnSponsorship */
  MpnSponsorship = "MpnSponsorship",
  /** Msdn */
  Msdn = "MSDN",
  /** NonProfitSponsorship */
  NonProfitSponsorship = "NonProfitSponsorship",
  /** Sponsorship */
  Sponsorship = "Sponsorship",
  /** StartupSponsorship */
  StartupSponsorship = "StartupSponsorship",
  /** AzureForStudentsStarter */
  AzureForStudentsStarter = "AzureForStudentsStarter",
  /** VisualStudio */
  VisualStudio = "VisualStudio",
}

/**
 * Defines values for SpendingLimitType. \
 * {@link KnownSpendingLimitType} can be used interchangeably with SpendingLimitType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **None** \
 * **FreeAccount** \
 * **Sandbox** \
 * **AzureForStudents** \
 * **AcademicSponsorship** \
 * **AzureConsumptionCredit** \
 * **AzurePassSponsorship** \
 * **MpnSponsorship** \
 * **MSDN** \
 * **NonProfitSponsorship** \
 * **Sponsorship** \
 * **StartupSponsorship** \
 * **AzureForStudentsStarter** \
 * **VisualStudio**
 */
export type SpendingLimitType = string;

/** Known values of {@link SpendingLimitStatus} that the service accepts. */
export enum KnownSpendingLimitStatus {
  /** Other */
  Other = "Other",
  /** None */
  None = "None",
  /** Active */
  Active = "Active",
  /** Expired */
  Expired = "Expired",
  /** LimitReached */
  LimitReached = "LimitReached",
  /** LimitRemoved */
  LimitRemoved = "LimitRemoved",
}

/**
 * Defines values for SpendingLimitStatus. \
 * {@link KnownSpendingLimitStatus} can be used interchangeably with SpendingLimitStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **None** \
 * **Active** \
 * **Expired** \
 * **LimitReached** \
 * **LimitRemoved**
 */
export type SpendingLimitStatus = string;

/** Known values of {@link CustomerStatus} that the service accepts. */
export enum KnownCustomerStatus {
  /** Other */
  Other = "Other",
  /** Active */
  Active = "Active",
  /** Pending */
  Pending = "Pending",
  /** Disabled */
  Disabled = "Disabled",
  /** Warned */
  Warned = "Warned",
  /** Deleted */
  Deleted = "Deleted",
  /** UnderReview */
  UnderReview = "UnderReview",
}

/**
 * Defines values for CustomerStatus. \
 * {@link KnownCustomerStatus} can be used interchangeably with CustomerStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Active** \
 * **Pending** \
 * **Disabled** \
 * **Warned** \
 * **Deleted** \
 * **UnderReview**
 */
export type CustomerStatus = string;

/** Known values of {@link InvoiceSectionState} that the service accepts. */
export enum KnownInvoiceSectionState {
  /** Other */
  Other = "Other",
  /** Active */
  Active = "Active",
  /** Deleted */
  Deleted = "Deleted",
  /** Disabled */
  Disabled = "Disabled",
  /** UnderReview */
  UnderReview = "UnderReview",
  /** Warned */
  Warned = "Warned",
  /** Restricted */
  Restricted = "Restricted",
}

/**
 * Defines values for InvoiceSectionState. \
 * {@link KnownInvoiceSectionState} can be used interchangeably with InvoiceSectionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Active** \
 * **Deleted** \
 * **Disabled** \
 * **UnderReview** \
 * **Warned** \
 * **Restricted**
 */
export type InvoiceSectionState = string;

/** Known values of {@link InvoiceSectionStateReasonCode} that the service accepts. */
export enum KnownInvoiceSectionStateReasonCode {
  /** Other */
  Other = "Other",
  /** PastDue */
  PastDue = "PastDue",
  /** UnusualActivity */
  UnusualActivity = "UnusualActivity",
  /** SpendingLimitReached */
  SpendingLimitReached = "SpendingLimitReached",
  /** SpendingLimitExpired */
  SpendingLimitExpired = "SpendingLimitExpired",
}

/**
 * Defines values for InvoiceSectionStateReasonCode. \
 * {@link KnownInvoiceSectionStateReasonCode} can be used interchangeably with InvoiceSectionStateReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **PastDue** \
 * **UnusualActivity** \
 * **SpendingLimitReached** \
 * **SpendingLimitExpired**
 */
export type InvoiceSectionStateReasonCode = string;

/** Known values of {@link BillingSubscriptionStatus} that the service accepts. */
export enum KnownBillingSubscriptionStatus {
  /** Other */
  Other = "Other",
  /** Unknown */
  Unknown = "Unknown",
  /** Active */
  Active = "Active",
  /** Disabled */
  Disabled = "Disabled",
  /** Deleted */
  Deleted = "Deleted",
  /** Warned */
  Warned = "Warned",
  /** Expiring */
  Expiring = "Expiring",
  /** Expired */
  Expired = "Expired",
  /** AutoRenew */
  AutoRenew = "AutoRenew",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Suspended */
  Suspended = "Suspended",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for BillingSubscriptionStatus. \
 * {@link KnownBillingSubscriptionStatus} can be used interchangeably with BillingSubscriptionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Unknown** \
 * **Active** \
 * **Disabled** \
 * **Deleted** \
 * **Warned** \
 * **Expiring** \
 * **Expired** \
 * **AutoRenew** \
 * **Cancelled** \
 * **Suspended** \
 * **Failed**
 */
export type BillingSubscriptionStatus = string;

/** Known values of {@link SubscriptionStatusReason} that the service accepts. */
export enum KnownSubscriptionStatusReason {
  /** None */
  None = "None",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** PastDue */
  PastDue = "PastDue",
  /** SuspiciousActivity */
  SuspiciousActivity = "SuspiciousActivity",
  /** Other */
  Other = "Other",
  /** Transferred */
  Transferred = "Transferred",
  /** PolicyViolation */
  PolicyViolation = "PolicyViolation",
  /** SpendingLimitReached */
  SpendingLimitReached = "SpendingLimitReached",
  /** Expired */
  Expired = "Expired",
}

/**
 * Defines values for SubscriptionStatusReason. \
 * {@link KnownSubscriptionStatusReason} can be used interchangeably with SubscriptionStatusReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Cancelled** \
 * **PastDue** \
 * **SuspiciousActivity** \
 * **Other** \
 * **Transferred** \
 * **PolicyViolation** \
 * **SpendingLimitReached** \
 * **Expired**
 */
export type SubscriptionStatusReason = string;

/** Known values of {@link SubscriptionBillingType} that the service accepts. */
export enum KnownSubscriptionBillingType {
  /** None */
  None = "None",
  /** Benefit */
  Benefit = "Benefit",
  /** Free */
  Free = "Free",
  /** Paid */
  Paid = "Paid",
  /** PrePaid */
  PrePaid = "PrePaid",
}

/**
 * Defines values for SubscriptionBillingType. \
 * {@link KnownSubscriptionBillingType} can be used interchangeably with SubscriptionBillingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Benefit** \
 * **Free** \
 * **Paid** \
 * **PrePaid**
 */
export type SubscriptionBillingType = string;

/** Known values of {@link SubscriptionWorkloadType} that the service accepts. */
export enum KnownSubscriptionWorkloadType {
  /** None */
  None = "None",
  /** Production */
  Production = "Production",
  /** DevTest */
  DevTest = "DevTest",
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for SubscriptionWorkloadType. \
 * {@link KnownSubscriptionWorkloadType} can be used interchangeably with SubscriptionWorkloadType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Production** \
 * **DevTest** \
 * **Internal**
 */
export type SubscriptionWorkloadType = string;

/** Known values of {@link BillingRequestStatus} that the service accepts. */
export enum KnownBillingRequestStatus {
  /** Other */
  Other = "Other",
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Declined */
  Declined = "Declined",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Completed */
  Completed = "Completed",
  /** Expired */
  Expired = "Expired",
}

/**
 * Defines values for BillingRequestStatus. \
 * {@link KnownBillingRequestStatus} can be used interchangeably with BillingRequestStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Pending** \
 * **Approved** \
 * **Declined** \
 * **Cancelled** \
 * **Completed** \
 * **Expired**
 */
export type BillingRequestStatus = string;

/** Known values of {@link BillingRequestType} that the service accepts. */
export enum KnownBillingRequestType {
  /** Other */
  Other = "Other",
  /** InvoiceAccess */
  InvoiceAccess = "InvoiceAccess",
  /** ProvisioningAccess */
  ProvisioningAccess = "ProvisioningAccess",
  /** RoleAssignment */
  RoleAssignment = "RoleAssignment",
  /** UpdateBillingPolicy */
  UpdateBillingPolicy = "UpdateBillingPolicy",
}

/**
 * Defines values for BillingRequestType. \
 * {@link KnownBillingRequestType} can be used interchangeably with BillingRequestType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **InvoiceAccess** \
 * **ProvisioningAccess** \
 * **RoleAssignment** \
 * **UpdateBillingPolicy**
 */
export type BillingRequestType = string;

/** Known values of {@link PrincipalType} that the service accepts. */
export enum KnownPrincipalType {
  /** Unknown */
  Unknown = "Unknown",
  /** None */
  None = "None",
  /** User */
  User = "User",
  /** Group */
  Group = "Group",
  /** DirectoryRole */
  DirectoryRole = "DirectoryRole",
  /** ServicePrincipal */
  ServicePrincipal = "ServicePrincipal",
  /** Everyone */
  Everyone = "Everyone",
}

/**
 * Defines values for PrincipalType. \
 * {@link KnownPrincipalType} can be used interchangeably with PrincipalType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **None** \
 * **User** \
 * **Group** \
 * **DirectoryRole** \
 * **ServicePrincipal** \
 * **Everyone**
 */
export type PrincipalType = string;

/** Known values of {@link SavingsPlanTerm} that the service accepts. */
export enum KnownSavingsPlanTerm {
  /** P1Y */
  P1Y = "P1Y",
  /** P3Y */
  P3Y = "P3Y",
  /** P5Y */
  P5Y = "P5Y",
}

/**
 * Defines values for SavingsPlanTerm. \
 * {@link KnownSavingsPlanTerm} can be used interchangeably with SavingsPlanTerm,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P1Y** \
 * **P3Y** \
 * **P5Y**
 */
export type SavingsPlanTerm = string;

/** Known values of {@link BillingPlan} that the service accepts. */
export enum KnownBillingPlan {
  /** P1M */
  P1M = "P1M",
}

/**
 * Defines values for BillingPlan. \
 * {@link KnownBillingPlan} can be used interchangeably with BillingPlan,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P1M**
 */
export type BillingPlan = string;

/** Known values of {@link PaymentStatus} that the service accepts. */
export enum KnownPaymentStatus {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Scheduled */
  Scheduled = "Scheduled",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Completed */
  Completed = "Completed",
  /** Pending */
  Pending = "Pending",
}

/**
 * Defines values for PaymentStatus. \
 * {@link KnownPaymentStatus} can be used interchangeably with PaymentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Scheduled** \
 * **Cancelled** \
 * **Completed** \
 * **Pending**
 */
export type PaymentStatus = string;

/** Known values of {@link AppliedScopeType} that the service accepts. */
export enum KnownAppliedScopeType {
  /** Single */
  Single = "Single",
  /** Shared */
  Shared = "Shared",
  /** ManagementGroup */
  ManagementGroup = "ManagementGroup",
}

/**
 * Defines values for AppliedScopeType. \
 * {@link KnownAppliedScopeType} can be used interchangeably with AppliedScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Single** \
 * **Shared** \
 * **ManagementGroup**
 */
export type AppliedScopeType = string;

/** Known values of {@link CommitmentGrain} that the service accepts. */
export enum KnownCommitmentGrain {
  /** Hourly */
  Hourly = "Hourly",
}

/**
 * Defines values for CommitmentGrain. \
 * {@link KnownCommitmentGrain} can be used interchangeably with CommitmentGrain,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Hourly**
 */
export type CommitmentGrain = string;

/** Known values of {@link AutoRenew} that the service accepts. */
export enum KnownAutoRenew {
  /** Off */
  Off = "Off",
  /** On */
  On = "On",
}

/**
 * Defines values for AutoRenew. \
 * {@link KnownAutoRenew} can be used interchangeably with AutoRenew,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off** \
 * **On**
 */
export type AutoRenew = string;

/** Known values of {@link SubscriptionEnrollmentAccountStatus} that the service accepts. */
export enum KnownSubscriptionEnrollmentAccountStatus {
  /** Active */
  Active = "Active",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Expired */
  Expired = "Expired",
  /** Deleted */
  Deleted = "Deleted",
  /** TransferredOut */
  TransferredOut = "TransferredOut",
  /** Transferring */
  Transferring = "Transferring",
  /** Inactive */
  Inactive = "Inactive",
}

/**
 * Defines values for SubscriptionEnrollmentAccountStatus. \
 * {@link KnownSubscriptionEnrollmentAccountStatus} can be used interchangeably with SubscriptionEnrollmentAccountStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Cancelled** \
 * **Expired** \
 * **Deleted** \
 * **TransferredOut** \
 * **Transferring** \
 * **Inactive**
 */
export type SubscriptionEnrollmentAccountStatus = string;

/** Known values of {@link Cancellation} that the service accepts. */
export enum KnownCancellation {
  /** NotAllowed */
  NotAllowed = "NotAllowed",
  /** Allowed */
  Allowed = "Allowed",
}

/**
 * Defines values for Cancellation. \
 * {@link KnownCancellation} can be used interchangeably with Cancellation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotAllowed** \
 * **Allowed**
 */
export type Cancellation = string;

/** Known values of {@link BillingSubscriptionOperationStatus} that the service accepts. */
export enum KnownBillingSubscriptionOperationStatus {
  /** Other */
  Other = "Other",
  /** None */
  None = "None",
  /** LockedForUpdate */
  LockedForUpdate = "LockedForUpdate",
}

/**
 * Defines values for BillingSubscriptionOperationStatus. \
 * {@link KnownBillingSubscriptionOperationStatus} can be used interchangeably with BillingSubscriptionOperationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **None** \
 * **LockedForUpdate**
 */
export type BillingSubscriptionOperationStatus = string;

/** Known values of {@link CancellationReason} that the service accepts. */
export enum KnownCancellationReason {
  /** Other */
  Other = "Other",
  /** Compromise */
  Compromise = "Compromise",
  /** Dispute */
  Dispute = "Dispute",
}

/**
 * Defines values for CancellationReason. \
 * {@link KnownCancellationReason} can be used interchangeably with CancellationReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Compromise** \
 * **Dispute**
 */
export type CancellationReason = string;

/** Known values of {@link SubscriptionTransferValidationErrorCode} that the service accepts. */
export enum KnownSubscriptionTransferValidationErrorCode {
  /** Other */
  Other = "Other",
  /** BillingAccountInactive */
  BillingAccountInactive = "BillingAccountInactive",
  /** DestinationBillingProfileInactive */
  DestinationBillingProfileInactive = "DestinationBillingProfileInactive",
  /** DestinationBillingProfileNotFound */
  DestinationBillingProfileNotFound = "DestinationBillingProfileNotFound",
  /** DestinationBillingProfilePastDue */
  DestinationBillingProfilePastDue = "DestinationBillingProfilePastDue",
  /** DestinationInvoiceSectionInactive */
  DestinationInvoiceSectionInactive = "DestinationInvoiceSectionInactive",
  /** DestinationInvoiceSectionNotFound */
  DestinationInvoiceSectionNotFound = "DestinationInvoiceSectionNotFound",
  /** InsufficientPermissionOnDestination */
  InsufficientPermissionOnDestination = "InsufficientPermissionOnDestination",
  /** InsufficientPermissionOnSource */
  InsufficientPermissionOnSource = "InsufficientPermissionOnSource",
  /** InvalidDestination */
  InvalidDestination = "InvalidDestination",
  /** InvalidSource */
  InvalidSource = "InvalidSource",
  /** MarketplaceNotEnabledOnDestination */
  MarketplaceNotEnabledOnDestination = "MarketplaceNotEnabledOnDestination",
  /** ProductInactive */
  ProductInactive = "ProductInactive",
  /** ProductNotFound */
  ProductNotFound = "ProductNotFound",
  /** ProductTypeNotSupported */
  ProductTypeNotSupported = "ProductTypeNotSupported",
  /** SourceBillingProfilePastDue */
  SourceBillingProfilePastDue = "SourceBillingProfilePastDue",
  /** SourceInvoiceSectionInactive */
  SourceInvoiceSectionInactive = "SourceInvoiceSectionInactive",
  /** AccountIsLocked */
  AccountIsLocked = "AccountIsLocked",
  /** AssetHasCap */
  AssetHasCap = "AssetHasCap",
  /** AssetNotActive */
  AssetNotActive = "AssetNotActive",
  /** BillingProfilePastDue */
  BillingProfilePastDue = "BillingProfilePastDue",
  /** CrossBillingAccountNotAllowed */
  CrossBillingAccountNotAllowed = "CrossBillingAccountNotAllowed",
  /** NoActiveAzurePlan */
  NoActiveAzurePlan = "NoActiveAzurePlan",
  /** None */
  None = "None",
  /** SubscriptionNotActive */
  SubscriptionNotActive = "SubscriptionNotActive",
  /** SubscriptionHasReservations */
  SubscriptionHasReservations = "SubscriptionHasReservations",
  /** SubscriptionTypeNotSupported */
  SubscriptionTypeNotSupported = "SubscriptionTypeNotSupported",
  /** InvoiceSectionIsRestricted */
  InvoiceSectionIsRestricted = "InvoiceSectionIsRestricted",
}

/**
 * Defines values for SubscriptionTransferValidationErrorCode. \
 * {@link KnownSubscriptionTransferValidationErrorCode} can be used interchangeably with SubscriptionTransferValidationErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **BillingAccountInactive** \
 * **DestinationBillingProfileInactive** \
 * **DestinationBillingProfileNotFound** \
 * **DestinationBillingProfilePastDue** \
 * **DestinationInvoiceSectionInactive** \
 * **DestinationInvoiceSectionNotFound** \
 * **InsufficientPermissionOnDestination** \
 * **InsufficientPermissionOnSource** \
 * **InvalidDestination** \
 * **InvalidSource** \
 * **MarketplaceNotEnabledOnDestination** \
 * **ProductInactive** \
 * **ProductNotFound** \
 * **ProductTypeNotSupported** \
 * **SourceBillingProfilePastDue** \
 * **SourceInvoiceSectionInactive** \
 * **AccountIsLocked** \
 * **AssetHasCap** \
 * **AssetNotActive** \
 * **BillingProfilePastDue** \
 * **CrossBillingAccountNotAllowed** \
 * **NoActiveAzurePlan** \
 * **None** \
 * **SubscriptionNotActive** \
 * **SubscriptionHasReservations** \
 * **SubscriptionTypeNotSupported** \
 * **InvoiceSectionIsRestricted**
 */
export type SubscriptionTransferValidationErrorCode = string;

/** Known values of {@link InvoiceDocumentType} that the service accepts. */
export enum KnownInvoiceDocumentType {
  /** Other */
  Other = "Other",
  /** Invoice */
  Invoice = "Invoice",
  /** VoidNote */
  VoidNote = "VoidNote",
  /** TaxReceipt */
  TaxReceipt = "TaxReceipt",
  /** CreditNote */
  CreditNote = "CreditNote",
  /** Summary */
  Summary = "Summary",
  /** Transactions */
  Transactions = "Transactions",
}

/**
 * Defines values for InvoiceDocumentType. \
 * {@link KnownInvoiceDocumentType} can be used interchangeably with InvoiceDocumentType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Invoice** \
 * **VoidNote** \
 * **TaxReceipt** \
 * **CreditNote** \
 * **Summary** \
 * **Transactions**
 */
export type InvoiceDocumentType = string;

/** Known values of {@link DocumentSource} that the service accepts. */
export enum KnownDocumentSource {
  /** Other */
  Other = "Other",
  /** DRS */
  DRS = "DRS",
  /** ENF */
  ENF = "ENF",
}

/**
 * Defines values for DocumentSource. \
 * {@link KnownDocumentSource} can be used interchangeably with DocumentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **DRS** \
 * **ENF**
 */
export type DocumentSource = string;

/** Known values of {@link FailedPaymentReason} that the service accepts. */
export enum KnownFailedPaymentReason {
  /** Other */
  Other = "Other",
  /** BankDeclined */
  BankDeclined = "BankDeclined",
  /** CardExpired */
  CardExpired = "CardExpired",
  /** IncorrectCardDetails */
  IncorrectCardDetails = "IncorrectCardDetails",
}

/**
 * Defines values for FailedPaymentReason. \
 * {@link KnownFailedPaymentReason} can be used interchangeably with FailedPaymentReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **BankDeclined** \
 * **CardExpired** \
 * **IncorrectCardDetails**
 */
export type FailedPaymentReason = string;

/** Known values of {@link InvoiceType} that the service accepts. */
export enum KnownInvoiceType {
  /** Other */
  Other = "Other",
  /** AzureServices */
  AzureServices = "AzureServices",
  /** AzureMarketplace */
  AzureMarketplace = "AzureMarketplace",
  /** AzureSupport */
  AzureSupport = "AzureSupport",
}

/**
 * Defines values for InvoiceType. \
 * {@link KnownInvoiceType} can be used interchangeably with InvoiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **AzureServices** \
 * **AzureMarketplace** \
 * **AzureSupport**
 */
export type InvoiceType = string;

/** Known values of {@link InvoiceStatus} that the service accepts. */
export enum KnownInvoiceStatus {
  /** Other */
  Other = "Other",
  /** Due */
  Due = "Due",
  /** OverDue */
  OverDue = "OverDue",
  /** Paid */
  Paid = "Paid",
  /** Void */
  Void = "Void",
  /** Locked */
  Locked = "Locked",
}

/**
 * Defines values for InvoiceStatus. \
 * {@link KnownInvoiceStatus} can be used interchangeably with InvoiceStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Due** \
 * **OverDue** \
 * **Paid** \
 * **Void** \
 * **Locked**
 */
export type InvoiceStatus = string;

/** Known values of {@link SpecialTaxationType} that the service accepts. */
export enum KnownSpecialTaxationType {
  /** SubtotalLevel */
  SubtotalLevel = "SubtotalLevel",
  /** InvoiceLevel */
  InvoiceLevel = "InvoiceLevel",
}

/**
 * Defines values for SpecialTaxationType. \
 * {@link KnownSpecialTaxationType} can be used interchangeably with SpecialTaxationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SubtotalLevel** \
 * **InvoiceLevel**
 */
export type SpecialTaxationType = string;

/** Known values of {@link RefundStatus} that the service accepts. */
export enum KnownRefundStatus {
  /** Other */
  Other = "Other",
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Declined */
  Declined = "Declined",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Completed */
  Completed = "Completed",
  /** Expired */
  Expired = "Expired",
}

/**
 * Defines values for RefundStatus. \
 * {@link KnownRefundStatus} can be used interchangeably with RefundStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Pending** \
 * **Approved** \
 * **Declined** \
 * **Cancelled** \
 * **Completed** \
 * **Expired**
 */
export type RefundStatus = string;

/** Known values of {@link RefundReasonCode} that the service accepts. */
export enum KnownRefundReasonCode {
  /** Other */
  Other = "Other",
  /** AccidentalConversion */
  AccidentalConversion = "AccidentalConversion",
  /** UnclearPricing */
  UnclearPricing = "UnclearPricing",
  /** AccidentalPurchase */
  AccidentalPurchase = "AccidentalPurchase",
  /** ForgotToCancel */
  ForgotToCancel = "ForgotToCancel",
  /** UnclearDocumentation */
  UnclearDocumentation = "UnclearDocumentation",
}

/**
 * Defines values for RefundReasonCode. \
 * {@link KnownRefundReasonCode} can be used interchangeably with RefundReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **AccidentalConversion** \
 * **UnclearPricing** \
 * **AccidentalPurchase** \
 * **ForgotToCancel** \
 * **UnclearDocumentation**
 */
export type RefundReasonCode = string;

/** Known values of {@link DeleteInvoiceSectionEligibilityStatus} that the service accepts. */
export enum KnownDeleteInvoiceSectionEligibilityStatus {
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for DeleteInvoiceSectionEligibilityStatus. \
 * {@link KnownDeleteInvoiceSectionEligibilityStatus} can be used interchangeably with DeleteInvoiceSectionEligibilityStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allowed** \
 * **NotAllowed**
 */
export type DeleteInvoiceSectionEligibilityStatus = string;

/** Known values of {@link DeleteInvoiceSectionEligibilityCode} that the service accepts. */
export enum KnownDeleteInvoiceSectionEligibilityCode {
  /** Other */
  Other = "Other",
  /** LastInvoiceSection */
  LastInvoiceSection = "LastInvoiceSection",
  /** ActiveAzurePlans */
  ActiveAzurePlans = "ActiveAzurePlans",
  /** ReservedInstances */
  ReservedInstances = "ReservedInstances",
  /** ActiveBillingSubscriptions */
  ActiveBillingSubscriptions = "ActiveBillingSubscriptions",
}

/**
 * Defines values for DeleteInvoiceSectionEligibilityCode. \
 * {@link KnownDeleteInvoiceSectionEligibilityCode} can be used interchangeably with DeleteInvoiceSectionEligibilityCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **LastInvoiceSection** \
 * **ActiveAzurePlans** \
 * **ReservedInstances** \
 * **ActiveBillingSubscriptions**
 */
export type DeleteInvoiceSectionEligibilityCode = string;

/** Known values of {@link PaymentMethodStatus} that the service accepts. */
export enum KnownPaymentMethodStatus {
  /** Active */
  Active = "active",
  /** Inactive */
  Inactive = "inactive",
}

/**
 * Defines values for PaymentMethodStatus. \
 * {@link KnownPaymentMethodStatus} can be used interchangeably with PaymentMethodStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **inactive**
 */
export type PaymentMethodStatus = string;

/** Known values of {@link ServiceDefinedResourceName} that the service accepts. */
export enum KnownServiceDefinedResourceName {
  /** Default */
  Default = "default",
}

/**
 * Defines values for ServiceDefinedResourceName. \
 * {@link KnownServiceDefinedResourceName} can be used interchangeably with ServiceDefinedResourceName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **default**
 */
export type ServiceDefinedResourceName = string;

/** Known values of {@link ViewChargesPolicy} that the service accepts. */
export enum KnownViewChargesPolicy {
  /** Other */
  Other = "Other",
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for ViewChargesPolicy. \
 * {@link KnownViewChargesPolicy} can be used interchangeably with ViewChargesPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Allowed** \
 * **NotAllowed**
 */
export type ViewChargesPolicy = string;

/** Known values of {@link PolicyType} that the service accepts. */
export enum KnownPolicyType {
  /** Other */
  Other = "Other",
  /** UserControlled */
  UserControlled = "UserControlled",
  /** SystemControlled */
  SystemControlled = "SystemControlled",
}

/**
 * Defines values for PolicyType. \
 * {@link KnownPolicyType} can be used interchangeably with PolicyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **UserControlled** \
 * **SystemControlled**
 */
export type PolicyType = string;

/** Known values of {@link EnrollmentAuthLevelState} that the service accepts. */
export enum KnownEnrollmentAuthLevelState {
  /** Other */
  Other = "Other",
  /** MicrosoftAccountOnly */
  MicrosoftAccountOnly = "MicrosoftAccountOnly",
  /** MixedAccount */
  MixedAccount = "MixedAccount",
  /** OrganizationalAccountCrossTenant */
  OrganizationalAccountCrossTenant = "OrganizationalAccountCrossTenant",
  /** OrganizationalAccountOnly */
  OrganizationalAccountOnly = "OrganizationalAccountOnly",
}

/**
 * Defines values for EnrollmentAuthLevelState. \
 * {@link KnownEnrollmentAuthLevelState} can be used interchangeably with EnrollmentAuthLevelState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **MicrosoftAccountOnly** \
 * **MixedAccount** \
 * **OrganizationalAccountCrossTenant** \
 * **OrganizationalAccountOnly**
 */
export type EnrollmentAuthLevelState = string;

/** Known values of {@link EnrollmentAccountOwnerViewCharges} that the service accepts. */
export enum KnownEnrollmentAccountOwnerViewCharges {
  /** Other */
  Other = "Other",
  /** Allowed */
  Allowed = "Allowed",
  /** Disabled */
  Disabled = "Disabled",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for EnrollmentAccountOwnerViewCharges. \
 * {@link KnownEnrollmentAccountOwnerViewCharges} can be used interchangeably with EnrollmentAccountOwnerViewCharges,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Allowed** \
 * **Disabled** \
 * **NotAllowed**
 */
export type EnrollmentAccountOwnerViewCharges = string;

/** Known values of {@link EnrollmentDepartmentAdminViewCharges} that the service accepts. */
export enum KnownEnrollmentDepartmentAdminViewCharges {
  /** Other */
  Other = "Other",
  /** Allowed */
  Allowed = "Allowed",
  /** Disabled */
  Disabled = "Disabled",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for EnrollmentDepartmentAdminViewCharges. \
 * {@link KnownEnrollmentDepartmentAdminViewCharges} can be used interchangeably with EnrollmentDepartmentAdminViewCharges,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Allowed** \
 * **Disabled** \
 * **NotAllowed**
 */
export type EnrollmentDepartmentAdminViewCharges = string;

/** Known values of {@link InvoiceSectionLabelManagementPolicy} that the service accepts. */
export enum KnownInvoiceSectionLabelManagementPolicy {
  /** Other */
  Other = "Other",
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for InvoiceSectionLabelManagementPolicy. \
 * {@link KnownInvoiceSectionLabelManagementPolicy} can be used interchangeably with InvoiceSectionLabelManagementPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Allowed** \
 * **NotAllowed**
 */
export type InvoiceSectionLabelManagementPolicy = string;

/** Known values of {@link MarketplacePurchasesPolicy} that the service accepts. */
export enum KnownMarketplacePurchasesPolicy {
  /** Other */
  Other = "Other",
  /** AllAllowed */
  AllAllowed = "AllAllowed",
  /** Disabled */
  Disabled = "Disabled",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
  /** OnlyFreeAllowed */
  OnlyFreeAllowed = "OnlyFreeAllowed",
}

/**
 * Defines values for MarketplacePurchasesPolicy. \
 * {@link KnownMarketplacePurchasesPolicy} can be used interchangeably with MarketplacePurchasesPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **AllAllowed** \
 * **Disabled** \
 * **NotAllowed** \
 * **OnlyFreeAllowed**
 */
export type MarketplacePurchasesPolicy = string;

/** Known values of {@link ReservationPurchasesPolicy} that the service accepts. */
export enum KnownReservationPurchasesPolicy {
  /** Other */
  Other = "Other",
  /** Allowed */
  Allowed = "Allowed",
  /** Disabled */
  Disabled = "Disabled",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for ReservationPurchasesPolicy. \
 * {@link KnownReservationPurchasesPolicy} can be used interchangeably with ReservationPurchasesPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Allowed** \
 * **Disabled** \
 * **NotAllowed**
 */
export type ReservationPurchasesPolicy = string;

/** Known values of {@link SavingsPlanPurchasesPolicy} that the service accepts. */
export enum KnownSavingsPlanPurchasesPolicy {
  /** Other */
  Other = "Other",
  /** Allowed */
  Allowed = "Allowed",
  /** Disabled */
  Disabled = "Disabled",
  /** NotAllowed */
  NotAllowed = "NotAllowed",
}

/**
 * Defines values for SavingsPlanPurchasesPolicy. \
 * {@link KnownSavingsPlanPurchasesPolicy} can be used interchangeably with SavingsPlanPurchasesPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Allowed** \
 * **Disabled** \
 * **NotAllowed**
 */
export type SavingsPlanPurchasesPolicy = string;

/** Known values of {@link ProductStatus} that the service accepts. */
export enum KnownProductStatus {
  /** Other */
  Other = "Other",
  /** Active */
  Active = "Active",
  /** Disabled */
  Disabled = "Disabled",
  /** Deleted */
  Deleted = "Deleted",
  /** PastDue */
  PastDue = "PastDue",
  /** Expiring */
  Expiring = "Expiring",
  /** Expired */
  Expired = "Expired",
  /** AutoRenew */
  AutoRenew = "AutoRenew",
  /** Canceled */
  Canceled = "Canceled",
  /** Suspended */
  Suspended = "Suspended",
}

/**
 * Defines values for ProductStatus. \
 * {@link KnownProductStatus} can be used interchangeably with ProductStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Active** \
 * **Disabled** \
 * **Deleted** \
 * **PastDue** \
 * **Expiring** \
 * **Expired** \
 * **AutoRenew** \
 * **Canceled** \
 * **Suspended**
 */
export type ProductStatus = string;

/** Known values of {@link MoveValidationErrorCode} that the service accepts. */
export enum KnownMoveValidationErrorCode {
  /** Other */
  Other = "Other",
  /** BillingAccountInactive */
  BillingAccountInactive = "BillingAccountInactive",
  /** DestinationBillingProfileInactive */
  DestinationBillingProfileInactive = "DestinationBillingProfileInactive",
  /** DestinationBillingProfileNotFound */
  DestinationBillingProfileNotFound = "DestinationBillingProfileNotFound",
  /** DestinationBillingProfilePastDue */
  DestinationBillingProfilePastDue = "DestinationBillingProfilePastDue",
  /** DestinationInvoiceSectionInactive */
  DestinationInvoiceSectionInactive = "DestinationInvoiceSectionInactive",
  /** DestinationInvoiceSectionNotFound */
  DestinationInvoiceSectionNotFound = "DestinationInvoiceSectionNotFound",
  /** InsufficientPermissionOnDestination */
  InsufficientPermissionOnDestination = "InsufficientPermissionOnDestination",
  /** InsufficientPermissionOnSource */
  InsufficientPermissionOnSource = "InsufficientPermissionOnSource",
  /** InvalidDestination */
  InvalidDestination = "InvalidDestination",
  /** InvalidSource */
  InvalidSource = "InvalidSource",
  /** MarketplaceNotEnabledOnDestination */
  MarketplaceNotEnabledOnDestination = "MarketplaceNotEnabledOnDestination",
  /** ProductInactive */
  ProductInactive = "ProductInactive",
  /** ProductNotFound */
  ProductNotFound = "ProductNotFound",
  /** ProductTypeNotSupported */
  ProductTypeNotSupported = "ProductTypeNotSupported",
  /** SourceBillingProfilePastDue */
  SourceBillingProfilePastDue = "SourceBillingProfilePastDue",
  /** SourceInvoiceSectionInactive */
  SourceInvoiceSectionInactive = "SourceInvoiceSectionInactive",
}

/**
 * Defines values for MoveValidationErrorCode. \
 * {@link KnownMoveValidationErrorCode} can be used interchangeably with MoveValidationErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **BillingAccountInactive** \
 * **DestinationBillingProfileInactive** \
 * **DestinationBillingProfileNotFound** \
 * **DestinationBillingProfilePastDue** \
 * **DestinationInvoiceSectionInactive** \
 * **DestinationInvoiceSectionNotFound** \
 * **InsufficientPermissionOnDestination** \
 * **InsufficientPermissionOnSource** \
 * **InvalidDestination** \
 * **InvalidSource** \
 * **MarketplaceNotEnabledOnDestination** \
 * **ProductInactive** \
 * **ProductNotFound** \
 * **ProductTypeNotSupported** \
 * **SourceBillingProfilePastDue** \
 * **SourceInvoiceSectionInactive**
 */
export type MoveValidationErrorCode = string;

/** Known values of {@link InstanceFlexibility} that the service accepts. */
export enum KnownInstanceFlexibility {
  /** On */
  On = "On",
  /** Off */
  Off = "Off",
}

/**
 * Defines values for InstanceFlexibility. \
 * {@link KnownInstanceFlexibility} can be used interchangeably with InstanceFlexibility,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **On** \
 * **Off**
 */
export type InstanceFlexibility = string;

/** Known values of {@link ReservationStatusCode} that the service accepts. */
export enum KnownReservationStatusCode {
  /** None */
  None = "None",
  /** Pending */
  Pending = "Pending",
  /** Processing */
  Processing = "Processing",
  /** Active */
  Active = "Active",
  /** PurchaseError */
  PurchaseError = "PurchaseError",
  /** PaymentInstrumentError */
  PaymentInstrumentError = "PaymentInstrumentError",
  /** Split */
  Split = "Split",
  /** Merged */
  Merged = "Merged",
  /** Expired */
  Expired = "Expired",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** CapacityError */
  CapacityError = "CapacityError",
  /** CapacityRestricted */
  CapacityRestricted = "CapacityRestricted",
  /** Exchanged */
  Exchanged = "Exchanged",
  /** UnknownError */
  UnknownError = "UnknownError",
  /** RiskCheckFailed */
  RiskCheckFailed = "RiskCheckFailed",
  /** CreditLineCheckFailed */
  CreditLineCheckFailed = "CreditLineCheckFailed",
  /** Warning */
  Warning = "Warning",
  /** NoBenefitDueToSubscriptionTransfer */
  NoBenefitDueToSubscriptionTransfer = "NoBenefitDueToSubscriptionTransfer",
  /** NoBenefitDueToSubscriptionDeletion */
  NoBenefitDueToSubscriptionDeletion = "NoBenefitDueToSubscriptionDeletion",
  /** NoBenefit */
  NoBenefit = "NoBenefit",
}

/**
 * Defines values for ReservationStatusCode. \
 * {@link KnownReservationStatusCode} can be used interchangeably with ReservationStatusCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Pending** \
 * **Processing** \
 * **Active** \
 * **PurchaseError** \
 * **PaymentInstrumentError** \
 * **Split** \
 * **Merged** \
 * **Expired** \
 * **Succeeded** \
 * **CapacityError** \
 * **CapacityRestricted** \
 * **Exchanged** \
 * **UnknownError** \
 * **RiskCheckFailed** \
 * **CreditLineCheckFailed** \
 * **Warning** \
 * **NoBenefitDueToSubscriptionTransfer** \
 * **NoBenefitDueToSubscriptionDeletion** \
 * **NoBenefit**
 */
export type ReservationStatusCode = string;

/** Known values of {@link ReservationBillingPlan} that the service accepts. */
export enum KnownReservationBillingPlan {
  /** Upfront */
  Upfront = "Upfront",
  /** Monthly */
  Monthly = "Monthly",
}

/**
 * Defines values for ReservationBillingPlan. \
 * {@link KnownReservationBillingPlan} can be used interchangeably with ReservationBillingPlan,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Upfront** \
 * **Monthly**
 */
export type ReservationBillingPlan = string;

/** Known values of {@link TransactionType} that the service accepts. */
export enum KnownTransactionType {
  /** Other */
  Other = "Other",
  /** Billed */
  Billed = "Billed",
  /** Unbilled */
  Unbilled = "Unbilled",
}

/**
 * Defines values for TransactionType. \
 * {@link KnownTransactionType} can be used interchangeably with TransactionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **Billed** \
 * **Unbilled**
 */
export type TransactionType = string;

/** Known values of {@link CreditType} that the service accepts. */
export enum KnownCreditType {
  /** Other */
  Other = "Other",
  /** AzureFreeCredit */
  AzureFreeCredit = "AzureFreeCredit",
  /** AzureCreditOffer */
  AzureCreditOffer = "AzureCreditOffer",
  /** ServiceInterruption */
  ServiceInterruption = "ServiceInterruption",
  /** Refund */
  Refund = "Refund",
}

/**
 * Defines values for CreditType. \
 * {@link KnownCreditType} can be used interchangeably with CreditType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **AzureFreeCredit** \
 * **AzureCreditOffer** \
 * **ServiceInterruption** \
 * **Refund**
 */
export type CreditType = string;

/** Known values of {@link TransactionKind} that the service accepts. */
export enum KnownTransactionKind {
  /** Other */
  Other = "Other",
  /** All */
  All = "All",
  /** Reservation */
  Reservation = "Reservation",
}

/**
 * Defines values for TransactionKind. \
 * {@link KnownTransactionKind} can be used interchangeably with TransactionKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **All** \
 * **Reservation**
 */
export type TransactionKind = string;

/** Known values of {@link TransferStatus} that the service accepts. */
export enum KnownTransferStatus {
  /** Expired */
  Expired = "Expired",
  /** Pending */
  Pending = "Pending",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** CompletedWithErrors */
  CompletedWithErrors = "CompletedWithErrors",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Declined */
  Declined = "Declined",
}

/**
 * Defines values for TransferStatus. \
 * {@link KnownTransferStatus} can be used interchangeably with TransferStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Expired** \
 * **Pending** \
 * **InProgress** \
 * **Completed** \
 * **CompletedWithErrors** \
 * **Failed** \
 * **Canceled** \
 * **Declined**
 */
export type TransferStatus = string;

/** Known values of {@link ProductType} that the service accepts. */
export enum KnownProductType {
  /** AzureSubscription */
  AzureSubscription = "AzureSubscription",
  /** AzureReservation */
  AzureReservation = "AzureReservation",
  /** Department */
  Department = "Department",
  /** SavingsPlan */
  SavingsPlan = "SavingsPlan",
  /** Saas */
  Saas = "SAAS",
}

/**
 * Defines values for ProductType. \
 * {@link KnownProductType} can be used interchangeably with ProductType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureSubscription** \
 * **AzureReservation** \
 * **Department** \
 * **SavingsPlan** \
 * **SAAS**
 */
export type ProductType = string;

/** Known values of {@link ProductTransferStatus} that the service accepts. */
export enum KnownProductTransferStatus {
  /** NotStarted */
  NotStarted = "NotStarted",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for ProductTransferStatus. \
 * {@link KnownProductTransferStatus} can be used interchangeably with ProductTransferStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotStarted** \
 * **InProgress** \
 * **Completed** \
 * **Failed**
 */
export type ProductTransferStatus = string;

/** Known values of {@link InitiatorCustomerType} that the service accepts. */
export enum KnownInitiatorCustomerType {
  /** Partner */
  Partner = "Partner",
  /** EA */
  EA = "EA",
}

/**
 * Defines values for InitiatorCustomerType. \
 * {@link KnownInitiatorCustomerType} can be used interchangeably with InitiatorCustomerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Partner** \
 * **EA**
 */
export type InitiatorCustomerType = string;

/** Known values of {@link EligibleProductType} that the service accepts. */
export enum KnownEligibleProductType {
  /** DevTestAzureSubscription */
  DevTestAzureSubscription = "DevTestAzureSubscription",
  /** StandardAzureSubscription */
  StandardAzureSubscription = "StandardAzureSubscription",
  /** AzureReservation */
  AzureReservation = "AzureReservation",
}

/**
 * Defines values for EligibleProductType. \
 * {@link KnownEligibleProductType} can be used interchangeably with EligibleProductType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DevTestAzureSubscription** \
 * **StandardAzureSubscription** \
 * **AzureReservation**
 */
export type EligibleProductType = string;

/** Known values of {@link SupportedAccountType} that the service accepts. */
export enum KnownSupportedAccountType {
  /** None */
  None = "None",
  /** Partner */
  Partner = "Partner",
  /** Individual */
  Individual = "Individual",
  /** Enterprise */
  Enterprise = "Enterprise",
}

/**
 * Defines values for SupportedAccountType. \
 * {@link KnownSupportedAccountType} can be used interchangeably with SupportedAccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Partner** \
 * **Individual** \
 * **Enterprise**
 */
export type SupportedAccountType = string;

/** Optional parameters. */
export interface AgreementsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AgreementsGetResponse = Agreement;

/** Optional parameters. */
export interface AgreementsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the participants. */
  expand?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type AgreementsListByBillingAccountResponse = AgreementListResult;

/** Optional parameters. */
export interface AgreementsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type AgreementsListByBillingAccountNextResponse = AgreementListResult;

/** Optional parameters. */
export interface AssociatedTenantsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AssociatedTenantsDeleteResponse = AssociatedTenantsDeleteHeaders;

/** Optional parameters. */
export interface AssociatedTenantsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AssociatedTenantsGetResponse = AssociatedTenant;

/** Optional parameters. */
export interface AssociatedTenantsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AssociatedTenantsCreateOrUpdateResponse = AssociatedTenant;

/** Optional parameters. */
export interface AssociatedTenantsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Can be used to get revoked associated tenants. */
  includeRevoked?: boolean;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type AssociatedTenantsListByBillingAccountResponse =
  AssociatedTenantListResult;

/** Optional parameters. */
export interface AssociatedTenantsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type AssociatedTenantsListByBillingAccountNextResponse =
  AssociatedTenantListResult;

/** Optional parameters. */
export interface AvailableBalancesGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type AvailableBalancesGetByBillingAccountResponse = AvailableBalance;

/** Optional parameters. */
export interface AvailableBalancesGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type AvailableBalancesGetByBillingProfileResponse = AvailableBalance;

/** Optional parameters. */
export interface BillingAccountsAddPaymentTermsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the addPaymentTerms operation. */
export type BillingAccountsAddPaymentTermsResponse = BillingAccount;

/** Optional parameters. */
export interface BillingAccountsCancelPaymentTermsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the cancelPaymentTerms operation. */
export type BillingAccountsCancelPaymentTermsResponse = BillingAccount;

/** Optional parameters. */
export interface BillingAccountsConfirmTransitionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the confirmTransition operation. */
export type BillingAccountsConfirmTransitionResponse = TransitionDetails;

/** Optional parameters. */
export interface BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
}

/** Contains response data for the listInvoiceSectionsByCreateSubscriptionPermission operation. */
export type BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionResponse =
  InvoiceSectionWithCreateSubPermissionListResult;

/** Optional parameters. */
export interface BillingAccountsValidatePaymentTermsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validatePaymentTerms operation. */
export type BillingAccountsValidatePaymentTermsResponse =
  PaymentTermsEligibilityResult;

/** Optional parameters. */
export interface BillingAccountsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BillingAccountsGetResponse = BillingAccount;

/** Optional parameters. */
export interface BillingAccountsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type BillingAccountsUpdateResponse = BillingAccount;

/** Optional parameters. */
export interface BillingAccountsListOptionalParams
  extends coreClient.OperationOptions {
  /** Expand is allowed for SoldTo and EnrollmentDetails/PONumber. */
  expand?: string;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** When true, results will include Billing Accounts that the user does not have a direct role assignment on if the user has one of the following AAD roles: Global Administrator, Global Reader, Billing Administrator. */
  includeAll?: boolean;
  /** When true, results will include Billing Accounts that are not fully created if the user has one of the following AAD roles: Global Administrator, Global Reader, Billing Administrator. */
  includeAllWithoutBillingProfiles?: boolean;
  /** When true, results will include any billing accounts in a deleted state. */
  includeDeleted?: boolean;
  /** Includes billing accounts with agreement pending signature that the user has access to. */
  includePendingAgreement?: boolean;
  /** Includes the customer's billing account of Microsoft Partner Agreement that the user has access to. */
  includeResellee?: boolean;
  /** Must be combined with legalOwnerOID, results will only include Billing Accounts for whom is legally responsible for the Billing Accounts. Optional. */
  legalOwnerTID?: string;
  /** Must be combined with legalOwnerTID, results will only include Billing Accounts for whom is legally responsible for the Billing Accounts. Optional. */
  legalOwnerOID?: string;
}

/** Contains response data for the list operation. */
export type BillingAccountsListResponse = BillingAccountListResult;

/** Optional parameters. */
export interface BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listInvoiceSectionsByCreateSubscriptionPermissionNext operation. */
export type BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionNextResponse =
  InvoiceSectionWithCreateSubPermissionListResult;

/** Optional parameters. */
export interface BillingAccountsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type BillingAccountsListNextResponse = BillingAccountListResult;

/** Optional parameters. */
export interface AddressValidateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validate operation. */
export type AddressValidateResponse = AddressValidationResponse;

/** Optional parameters. */
export interface BillingPermissionsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type BillingPermissionsListByBillingAccountResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type BillingPermissionsListByBillingProfileResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsCheckAccessByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkAccessByBillingProfile operation. */
export type BillingPermissionsCheckAccessByBillingProfileResponse =
  CheckAccessResponse[];

/** Optional parameters. */
export interface BillingPermissionsListByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomer operation. */
export type BillingPermissionsListByCustomerResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsCheckAccessByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkAccessByCustomer operation. */
export type BillingPermissionsCheckAccessByCustomerResponse =
  CheckAccessResponse[];

/** Optional parameters. */
export interface BillingPermissionsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSection operation. */
export type BillingPermissionsListByInvoiceSectionResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsCheckAccessByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkAccessByInvoiceSection operation. */
export type BillingPermissionsCheckAccessByInvoiceSectionResponse =
  CheckAccessResponse[];

/** Optional parameters. */
export interface BillingPermissionsCheckAccessByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkAccessByBillingAccount operation. */
export type BillingPermissionsCheckAccessByBillingAccountResponse =
  CheckAccessResponse[];

/** Optional parameters. */
export interface BillingPermissionsListByCustomerAtBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerAtBillingAccount operation. */
export type BillingPermissionsListByCustomerAtBillingAccountResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsListByDepartmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDepartment operation. */
export type BillingPermissionsListByDepartmentResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsCheckAccessByDepartmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkAccessByDepartment operation. */
export type BillingPermissionsCheckAccessByDepartmentResponse =
  CheckAccessResponse[];

/** Optional parameters. */
export interface BillingPermissionsListByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnrollmentAccount operation. */
export type BillingPermissionsListByEnrollmentAccountResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsCheckAccessByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkAccessByEnrollmentAccount operation. */
export type BillingPermissionsCheckAccessByEnrollmentAccountResponse =
  CheckAccessResponse[];

/** Optional parameters. */
export interface BillingPermissionsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingPermissionsListByBillingAccountNextResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingPermissionsListByBillingProfileNextResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type BillingPermissionsListByCustomerNextResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type BillingPermissionsListByInvoiceSectionNextResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsListByCustomerAtBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerAtBillingAccountNext operation. */
export type BillingPermissionsListByCustomerAtBillingAccountNextResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsListByDepartmentNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDepartmentNext operation. */
export type BillingPermissionsListByDepartmentNextResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingPermissionsListByEnrollmentAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnrollmentAccountNext operation. */
export type BillingPermissionsListByEnrollmentAccountNextResponse =
  BillingPermissionListResult;

/** Optional parameters. */
export interface BillingProfilesValidateDeleteEligibilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateDeleteEligibility operation. */
export type BillingProfilesValidateDeleteEligibilityResponse =
  DeleteBillingProfileEligibilityResult;

/** Optional parameters. */
export interface BillingProfilesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type BillingProfilesDeleteResponse = BillingProfilesDeleteHeaders;

/** Optional parameters. */
export interface BillingProfilesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BillingProfilesGetResponse = BillingProfile;

/** Optional parameters. */
export interface BillingProfilesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type BillingProfilesCreateOrUpdateResponse = BillingProfile;

/** Optional parameters. */
export interface BillingProfilesListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** Can be used to get deleted billing profiles. */
  includeDeleted?: boolean;
}

/** Contains response data for the listByBillingAccount operation. */
export type BillingProfilesListByBillingAccountResponse =
  BillingProfileListResult;

/** Optional parameters. */
export interface BillingProfilesListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingProfilesListByBillingAccountNextResponse =
  BillingProfileListResult;

/** Optional parameters. */
export interface BillingPropertyGetOptionalParams
  extends coreClient.OperationOptions {
  /** A flag that specifies whether or not to include billing country. */
  includeBillingCountry?: boolean;
  /** A flag that specifies whether or not to include transition status for billing accounts with agreement type Microsoft Customer Agreement. */
  includeTransitionStatus?: boolean;
}

/** Contains response data for the get operation. */
export type BillingPropertyGetResponse = BillingProperty;

/** Optional parameters. */
export interface BillingPropertyUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type BillingPropertyUpdateResponse = BillingProperty;

/** Optional parameters. */
export interface BillingRequestsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type BillingRequestsListByBillingProfileResponse =
  BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsListByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByCustomer operation. */
export type BillingRequestsListByCustomerResponse = BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByInvoiceSection operation. */
export type BillingRequestsListByInvoiceSectionResponse =
  BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type BillingRequestsListByBillingAccountResponse =
  BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BillingRequestsGetResponse = BillingRequest;

/** Optional parameters. */
export interface BillingRequestsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type BillingRequestsCreateOrUpdateResponse = BillingRequest;

/** Optional parameters. */
export interface BillingRequestsListByUserOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByUser operation. */
export type BillingRequestsListByUserResponse = BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingRequestsListByBillingProfileNextResponse =
  BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type BillingRequestsListByCustomerNextResponse =
  BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type BillingRequestsListByInvoiceSectionNextResponse =
  BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingRequestsListByBillingAccountNextResponse =
  BillingRequestListResult;

/** Optional parameters. */
export interface BillingRequestsListByUserNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByUserNext operation. */
export type BillingRequestsListByUserNextResponse = BillingRequestListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type BillingRoleAssignmentsGetByBillingProfileResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
}

/** Contains response data for the listByBillingProfile operation. */
export type BillingRoleAssignmentsListByBillingProfileResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsCreateByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createByBillingProfile operation. */
export type BillingRoleAssignmentsCreateByBillingProfileResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByCustomer operation. */
export type BillingRoleAssignmentsGetByCustomerResponse = BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
}

/** Contains response data for the listByCustomer operation. */
export type BillingRoleAssignmentsListByCustomerResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsCreateByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createByCustomer operation. */
export type BillingRoleAssignmentsCreateByCustomerResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsResolveByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** Resolves the scope display name for each of the role assignments. */
  resolveScopeDisplayNames?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resolveByCustomer operation. */
export type BillingRoleAssignmentsResolveByCustomerResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByInvoiceSection operation. */
export type BillingRoleAssignmentsGetByInvoiceSectionResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
}

/** Contains response data for the listByInvoiceSection operation. */
export type BillingRoleAssignmentsListByInvoiceSectionResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsCreateByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createByInvoiceSection operation. */
export type BillingRoleAssignmentsCreateByInvoiceSectionResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsResolveByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** Resolves the scope display name for each of the role assignments. */
  resolveScopeDisplayNames?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resolveByInvoiceSection operation. */
export type BillingRoleAssignmentsResolveByInvoiceSectionResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsResolveByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** Resolves the scope display name for each of the role assignments. */
  resolveScopeDisplayNames?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resolveByBillingProfile operation. */
export type BillingRoleAssignmentsResolveByBillingProfileResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type BillingRoleAssignmentsGetByBillingAccountResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsCreateOrUpdateByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateByBillingAccount operation. */
export type BillingRoleAssignmentsCreateOrUpdateByBillingAccountResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
}

/** Contains response data for the listByBillingAccount operation. */
export type BillingRoleAssignmentsListByBillingAccountResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsCreateByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createByBillingAccount operation. */
export type BillingRoleAssignmentsCreateByBillingAccountResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByDepartmentOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByDepartmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByDepartment operation. */
export type BillingRoleAssignmentsGetByDepartmentResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsCreateOrUpdateByDepartmentOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateByDepartment operation. */
export type BillingRoleAssignmentsCreateOrUpdateByDepartmentResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByDepartmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDepartment operation. */
export type BillingRoleAssignmentsListByDepartmentResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByEnrollmentAccount operation. */
export type BillingRoleAssignmentsGetByEnrollmentAccountResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsCreateOrUpdateByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateByEnrollmentAccount operation. */
export type BillingRoleAssignmentsCreateOrUpdateByEnrollmentAccountResponse =
  BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnrollmentAccount operation. */
export type BillingRoleAssignmentsListByEnrollmentAccountResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsResolveByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** Resolves the scope display name for each of the role assignments. */
  resolveScopeDisplayNames?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resolveByBillingAccount operation. */
export type BillingRoleAssignmentsResolveByBillingAccountResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingRoleAssignmentsListByBillingProfileNextResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type BillingRoleAssignmentsListByCustomerNextResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type BillingRoleAssignmentsListByInvoiceSectionNextResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingRoleAssignmentsListByBillingAccountNextResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByDepartmentNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDepartmentNext operation. */
export type BillingRoleAssignmentsListByDepartmentNextResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByEnrollmentAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnrollmentAccountNext operation. */
export type BillingRoleAssignmentsListByEnrollmentAccountNextResponse =
  BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type BillingRoleDefinitionGetByBillingProfileResponse =
  BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type BillingRoleDefinitionListByBillingProfileResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionGetByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByCustomer operation. */
export type BillingRoleDefinitionGetByCustomerResponse = BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionListByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomer operation. */
export type BillingRoleDefinitionListByCustomerResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionGetByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByInvoiceSection operation. */
export type BillingRoleDefinitionGetByInvoiceSectionResponse =
  BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSection operation. */
export type BillingRoleDefinitionListByInvoiceSectionResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type BillingRoleDefinitionGetByBillingAccountResponse =
  BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type BillingRoleDefinitionListByBillingAccountResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionGetByDepartmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByDepartment operation. */
export type BillingRoleDefinitionGetByDepartmentResponse =
  BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionListByDepartmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDepartment operation. */
export type BillingRoleDefinitionListByDepartmentResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionGetByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByEnrollmentAccount operation. */
export type BillingRoleDefinitionGetByEnrollmentAccountResponse =
  BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionListByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnrollmentAccount operation. */
export type BillingRoleDefinitionListByEnrollmentAccountResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingRoleDefinitionListByBillingProfileNextResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type BillingRoleDefinitionListByCustomerNextResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type BillingRoleDefinitionListByInvoiceSectionNextResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingRoleDefinitionListByBillingAccountNextResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionListByDepartmentNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDepartmentNext operation. */
export type BillingRoleDefinitionListByDepartmentNextResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionListByEnrollmentAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnrollmentAccountNext operation. */
export type BillingRoleDefinitionListByEnrollmentAccountNextResponse =
  BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface SavingsPlanOrdersGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the planInformation. */
  expand?: string;
}

/** Contains response data for the getByBillingAccount operation. */
export type SavingsPlanOrdersGetByBillingAccountResponse =
  SavingsPlanOrderModel;

/** Optional parameters. */
export interface SavingsPlanOrdersListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The number of savings plans to skip from the list before returning results */
  skiptoken?: number;
}

/** Contains response data for the listByBillingAccount operation. */
export type SavingsPlanOrdersListByBillingAccountResponse =
  SavingsPlanOrderModelList;

/** Optional parameters. */
export interface SavingsPlanOrdersListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type SavingsPlanOrdersListByBillingAccountNextResponse =
  SavingsPlanOrderModelList;

/** Optional parameters. */
export interface SavingsPlansListBySavingsPlanOrderOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySavingsPlanOrder operation. */
export type SavingsPlansListBySavingsPlanOrderResponse = SavingsPlanModelList;

/** Optional parameters. */
export interface SavingsPlansListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The number of savings plans to skip from the list before returning results */
  skiptoken?: number;
  /** The number of savings plans to return */
  take?: number;
  /** The selected provisioning state */
  selectedState?: string;
  /** To indicate whether to refresh the roll up counts of the savings plans group by provisioning states */
  refreshSummary?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type SavingsPlansListByBillingAccountResponse =
  SavingsPlanModelListResult;

/** Optional parameters. */
export interface SavingsPlansGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the planInformation. */
  expand?: string;
}

/** Contains response data for the getByBillingAccount operation. */
export type SavingsPlansGetByBillingAccountResponse = SavingsPlanModel;

/** Optional parameters. */
export interface SavingsPlansUpdateByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateByBillingAccount operation. */
export type SavingsPlansUpdateByBillingAccountResponse = SavingsPlanModel;

/** Optional parameters. */
export interface SavingsPlansValidateUpdateByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateUpdateByBillingAccount operation. */
export type SavingsPlansValidateUpdateByBillingAccountResponse =
  SavingsPlanValidateResponse;

/** Optional parameters. */
export interface SavingsPlansListBySavingsPlanOrderNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySavingsPlanOrderNext operation. */
export type SavingsPlansListBySavingsPlanOrderNextResponse =
  SavingsPlanModelList;

/** Optional parameters. */
export interface SavingsPlansListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type SavingsPlansListByBillingAccountNextResponse =
  SavingsPlanModelListResult;

/** Optional parameters. */
export interface BillingSubscriptionsGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** Can be used to expand `Reseller`, `ConsumptionCostCenter`, `LastMonthCharges` and `MonthToDateCharges` */
  expand?: string;
}

/** Contains response data for the getByBillingProfile operation. */
export type BillingSubscriptionsGetByBillingProfileResponse =
  BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** Can be used to expand `Reseller`, `ConsumptionCostCenter`, `LastMonthCharges` and `MonthToDateCharges` */
  expand?: string;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** Can be used to get deleted billing subscriptions. */
  includeDeleted?: boolean;
}

/** Contains response data for the listByBillingProfile operation. */
export type BillingSubscriptionsListByBillingProfileResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** Can be used to expand `Reseller`, `ConsumptionCostCenter`, `LastMonthCharges` and `MonthToDateCharges` */
  expand?: string;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** Can be used to get deleted billing subscriptions. */
  includeDeleted?: boolean;
}

/** Contains response data for the listByCustomer operation. */
export type BillingSubscriptionsListByCustomerResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** Can be used to expand `Reseller`, `ConsumptionCostCenter`, `LastMonthCharges` and `MonthToDateCharges` */
  expand?: string;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** Can be used to get deleted billing subscriptions. */
  includeDeleted?: boolean;
}

/** Contains response data for the listByInvoiceSection operation. */
export type BillingSubscriptionsListByInvoiceSectionResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsCancelOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the cancel operation. */
export type BillingSubscriptionsCancelResponse =
  BillingSubscriptionsCancelHeaders;

/** Optional parameters. */
export interface BillingSubscriptionsMergeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the merge operation. */
export type BillingSubscriptionsMergeResponse = BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsMoveOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the move operation. */
export type BillingSubscriptionsMoveResponse = BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsSplitOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the split operation. */
export type BillingSubscriptionsSplitResponse = BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsValidateMoveEligibilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateMoveEligibility operation. */
export type BillingSubscriptionsValidateMoveEligibilityResponse =
  MoveBillingSubscriptionEligibilityResult;

/** Optional parameters. */
export interface BillingSubscriptionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type BillingSubscriptionsDeleteResponse =
  BillingSubscriptionsDeleteHeaders;

/** Optional parameters. */
export interface BillingSubscriptionsGetOptionalParams
  extends coreClient.OperationOptions {
  /** Can be used to expand `Reseller`, `ConsumptionCostCenter`, `LastMonthCharges` and `MonthToDateCharges` */
  expand?: string;
}

/** Contains response data for the get operation. */
export type BillingSubscriptionsGetResponse = BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type BillingSubscriptionsUpdateResponse = BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Can be used to expand `Reseller`, `ConsumptionCostCenter`, `LastMonthCharges` and `MonthToDateCharges` */
  expand?: string;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** Can be used to get deleted billing subscriptions. */
  includeDeleted?: boolean;
  /** Can be used to get tenant-owned billing subscriptions. This field is only applies to Microsoft Online Services Program billing accounts. */
  includeTenantSubscriptions?: boolean;
  /** Can be used to get failed billing subscriptions. */
  includeFailed?: boolean;
}

/** Contains response data for the listByBillingAccount operation. */
export type BillingSubscriptionsListByBillingAccountResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByCustomerAtBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Can be used to expand `Reseller`, `ConsumptionCostCenter`, `LastMonthCharges` and `MonthToDateCharges` */
  expand?: string;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** Can be used to get deleted billing subscriptions. */
  includeDeleted?: boolean;
}

/** Contains response data for the listByCustomerAtBillingAccount operation. */
export type BillingSubscriptionsListByCustomerAtBillingAccountResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByEnrollmentAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByEnrollmentAccount operation. */
export type BillingSubscriptionsListByEnrollmentAccountResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingSubscriptionsListByBillingProfileNextResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type BillingSubscriptionsListByCustomerNextResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type BillingSubscriptionsListByInvoiceSectionNextResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingSubscriptionsListByBillingAccountNextResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByCustomerAtBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerAtBillingAccountNext operation. */
export type BillingSubscriptionsListByCustomerAtBillingAccountNextResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByEnrollmentAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEnrollmentAccountNext operation. */
export type BillingSubscriptionsListByEnrollmentAccountNextResponse =
  BillingSubscriptionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsAliasesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BillingSubscriptionsAliasesGetResponse = BillingSubscriptionAlias;

/** Optional parameters. */
export interface BillingSubscriptionsAliasesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type BillingSubscriptionsAliasesCreateOrUpdateResponse =
  BillingSubscriptionAlias;

/** Optional parameters. */
export interface BillingSubscriptionsAliasesListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** Can be used to get deleted billing subscriptions. */
  includeDeleted?: boolean;
}

/** Contains response data for the listByBillingAccount operation. */
export type BillingSubscriptionsAliasesListByBillingAccountResponse =
  BillingSubscriptionAliasListResult;

/** Optional parameters. */
export interface BillingSubscriptionsAliasesListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingSubscriptionsAliasesListByBillingAccountNextResponse =
  BillingSubscriptionAliasListResult;

/** Optional parameters. */
export interface CustomersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CustomersGetResponse = Customer;

/** Optional parameters. */
export interface CustomersListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand enabledAzurePlans and resellers */
  expand?: string;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type CustomersListByBillingProfileResponse = CustomerListResult;

/** Optional parameters. */
export interface CustomersGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type CustomersGetByBillingAccountResponse = Customer;

/** Optional parameters. */
export interface CustomersListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand enabledAzurePlans and resellers */
  expand?: string;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type CustomersListByBillingAccountResponse = CustomerListResult;

/** Optional parameters. */
export interface CustomersListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type CustomersListByBillingProfileNextResponse = CustomerListResult;

/** Optional parameters. */
export interface CustomersListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type CustomersListByBillingAccountNextResponse = CustomerListResult;

/** Optional parameters. */
export interface DepartmentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DepartmentsGetResponse = Department;

/** Optional parameters. */
export interface DepartmentsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type DepartmentsListByBillingAccountResponse = DepartmentListResult;

/** Optional parameters. */
export interface DepartmentsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type DepartmentsListByBillingAccountNextResponse = DepartmentListResult;

/** Optional parameters. */
export interface EnrollmentAccountsGetByDepartmentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByDepartment operation. */
export type EnrollmentAccountsGetByDepartmentResponse = EnrollmentAccount;

/** Optional parameters. */
export interface EnrollmentAccountsListByDepartmentOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByDepartment operation. */
export type EnrollmentAccountsListByDepartmentResponse =
  EnrollmentAccountListResult;

/** Optional parameters. */
export interface EnrollmentAccountsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EnrollmentAccountsGetResponse = EnrollmentAccount;

/** Optional parameters. */
export interface EnrollmentAccountsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type EnrollmentAccountsListByBillingAccountResponse =
  EnrollmentAccountListResult;

/** Optional parameters. */
export interface EnrollmentAccountsListByDepartmentNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDepartmentNext operation. */
export type EnrollmentAccountsListByDepartmentNextResponse =
  EnrollmentAccountListResult;

/** Optional parameters. */
export interface EnrollmentAccountsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type EnrollmentAccountsListByBillingAccountNextResponse =
  EnrollmentAccountListResult;

/** Optional parameters. */
export interface InvoicesListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodStartDate?: Date;
  /** The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodEndDate?: Date;
}

/** Contains response data for the listByBillingProfile operation. */
export type InvoicesListByBillingProfileResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesDownloadDocumentsByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadDocumentsByBillingAccount operation. */
export type InvoicesDownloadDocumentsByBillingAccountResponse =
  DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesAmendOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the amend operation. */
export type InvoicesAmendResponse = InvoicesAmendHeaders;

/** Optional parameters. */
export interface InvoicesDownloadByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The ID that uniquely identifies an invoice document. This ID may be an identifier for an invoice PDF, a credit note, or a tax receipt. */
  documentName?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadByBillingAccount operation. */
export type InvoicesDownloadByBillingAccountResponse = DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesDownloadSummaryByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadSummaryByBillingAccount operation. */
export type InvoicesDownloadSummaryByBillingAccountResponse =
  DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type InvoicesGetByBillingAccountResponse = Invoice;

/** Optional parameters. */
export interface InvoicesListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodStartDate?: Date;
  /** The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodEndDate?: Date;
}

/** Contains response data for the listByBillingAccount operation. */
export type InvoicesListByBillingAccountResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesDownloadDocumentsByBillingSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadDocumentsByBillingSubscription operation. */
export type InvoicesDownloadDocumentsByBillingSubscriptionResponse =
  DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesDownloadByBillingSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** The ID that uniquely identifies an invoice document. This ID may be an identifier for an invoice PDF, a credit note, or a tax receipt. */
  documentName?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadByBillingSubscription operation. */
export type InvoicesDownloadByBillingSubscriptionResponse =
  DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesGetByBillingSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingSubscription operation. */
export type InvoicesGetByBillingSubscriptionResponse = Invoice;

/** Optional parameters. */
export interface InvoicesListByBillingSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodStartDate?: Date;
  /** The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodEndDate?: Date;
}

/** Contains response data for the listByBillingSubscription operation. */
export type InvoicesListByBillingSubscriptionResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InvoicesGetResponse = Invoice;

/** Optional parameters. */
export interface InvoicesListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type InvoicesListByBillingProfileNextResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type InvoicesListByBillingAccountNextResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesListByBillingSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingSubscriptionNext operation. */
export type InvoicesListByBillingSubscriptionNextResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoiceSectionsValidateDeleteEligibilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateDeleteEligibility operation. */
export type InvoiceSectionsValidateDeleteEligibilityResponse =
  DeleteInvoiceSectionEligibilityResult;

/** Optional parameters. */
export interface InvoiceSectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type InvoiceSectionsDeleteResponse = InvoiceSectionsDeleteHeaders;

/** Optional parameters. */
export interface InvoiceSectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InvoiceSectionsGetResponse = InvoiceSection;

/** Optional parameters. */
export interface InvoiceSectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type InvoiceSectionsCreateOrUpdateResponse = InvoiceSection;

/** Optional parameters. */
export interface InvoiceSectionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
  /** Can be used to get deleted invoice sections. */
  includeDeleted?: boolean;
}

/** Contains response data for the listByBillingProfile operation. */
export type InvoiceSectionsListByBillingProfileResponse =
  InvoiceSectionListResult;

/** Optional parameters. */
export interface InvoiceSectionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type InvoiceSectionsListByBillingProfileNextResponse =
  InvoiceSectionListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface PaymentMethodsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type PaymentMethodsListByBillingProfileResponse =
  PaymentMethodLinksListResult;

/** Optional parameters. */
export interface PaymentMethodsGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type PaymentMethodsGetByBillingProfileResponse = PaymentMethodLink;

/** Optional parameters. */
export interface PaymentMethodsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type PaymentMethodsListByBillingAccountResponse =
  PaymentMethodsListResult;

/** Optional parameters. */
export interface PaymentMethodsGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type PaymentMethodsGetByBillingAccountResponse = PaymentMethod;

/** Optional parameters. */
export interface PaymentMethodsListByUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByUser operation. */
export type PaymentMethodsListByUserResponse = PaymentMethodsListResult;

/** Optional parameters. */
export interface PaymentMethodsDeleteByUserOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PaymentMethodsGetByUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByUser operation. */
export type PaymentMethodsGetByUserResponse = PaymentMethod;

/** Optional parameters. */
export interface PaymentMethodsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type PaymentMethodsListByBillingProfileNextResponse =
  PaymentMethodLinksListResult;

/** Optional parameters. */
export interface PaymentMethodsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type PaymentMethodsListByBillingAccountNextResponse =
  PaymentMethodsListResult;

/** Optional parameters. */
export interface PaymentMethodsListByUserNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByUserNext operation. */
export type PaymentMethodsListByUserNextResponse = PaymentMethodsListResult;

/** Optional parameters. */
export interface PoliciesGetByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByCustomer operation. */
export type PoliciesGetByCustomerResponse = CustomerPolicy;

/** Optional parameters. */
export interface PoliciesCreateOrUpdateByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateByCustomer operation. */
export type PoliciesCreateOrUpdateByCustomerResponse = CustomerPolicy;

/** Optional parameters. */
export interface PoliciesGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type PoliciesGetByBillingProfileResponse = BillingProfilePolicy;

/** Optional parameters. */
export interface PoliciesCreateOrUpdateByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateByBillingProfile operation. */
export type PoliciesCreateOrUpdateByBillingProfileResponse =
  BillingProfilePolicy;

/** Optional parameters. */
export interface PoliciesGetByCustomerAtBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByCustomerAtBillingAccount operation. */
export type PoliciesGetByCustomerAtBillingAccountResponse = CustomerPolicy;

/** Optional parameters. */
export interface PoliciesCreateOrUpdateByCustomerAtBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateByCustomerAtBillingAccount operation. */
export type PoliciesCreateOrUpdateByCustomerAtBillingAccountResponse =
  CustomerPolicy;

/** Optional parameters. */
export interface PoliciesGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type PoliciesGetByBillingAccountResponse = BillingAccountPolicy;

/** Optional parameters. */
export interface PoliciesCreateOrUpdateByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateByBillingAccount operation. */
export type PoliciesCreateOrUpdateByBillingAccountResponse =
  BillingAccountPolicy;

/** Optional parameters. */
export interface PoliciesGetBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getBySubscription operation. */
export type PoliciesGetBySubscriptionResponse = SubscriptionPolicy;

/** Optional parameters. */
export interface ProductsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByInvoiceSection operation. */
export type ProductsListByInvoiceSectionResponse = ProductListResult;

/** Optional parameters. */
export interface ProductsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type ProductsListByBillingProfileResponse = ProductListResult;

/** Optional parameters. */
export interface ProductsListByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByCustomer operation. */
export type ProductsListByCustomerResponse = ProductListResult;

/** Optional parameters. */
export interface ProductsMoveOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the move operation. */
export type ProductsMoveResponse = Product;

/** Optional parameters. */
export interface ProductsValidateMoveEligibilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateMoveEligibility operation. */
export type ProductsValidateMoveEligibilityResponse =
  MoveProductEligibilityResult;

/** Optional parameters. */
export interface ProductsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProductsGetResponse = Product;

/** Optional parameters. */
export interface ProductsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ProductsUpdateResponse = Product;

/** Optional parameters. */
export interface ProductsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type ProductsListByBillingAccountResponse = ProductListResult;

/** Optional parameters. */
export interface ProductsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type ProductsListByInvoiceSectionNextResponse = ProductListResult;

/** Optional parameters. */
export interface ProductsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type ProductsListByBillingProfileNextResponse = ProductListResult;

/** Optional parameters. */
export interface ProductsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type ProductsListByCustomerNextResponse = ProductListResult;

/** Optional parameters. */
export interface ProductsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type ProductsListByBillingAccountNextResponse = ProductListResult;

/** Optional parameters. */
export interface ReservationsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The number of reservations to skip from the list before returning results */
  skiptoken?: number;
  /** The number of reservations to return in API response. */
  take?: number;
  /** The selected provisioning state */
  selectedState?: string;
  /** To indicate whether to refresh the roll up counts of the reservations group by provisioning states */
  refreshSummary?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type ReservationsListByBillingAccountResponse = ReservationsListResult;

/** Optional parameters. */
export interface ReservationsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The number of reservations to skip from the list before returning results */
  skiptoken?: number;
  /** The number of reservations to return in API response. */
  take?: number;
  /** The selected provisioning state */
  selectedState?: string;
  /** To indicate whether to refresh the roll up counts of the reservations group by provisioning states */
  refreshSummary?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type ReservationsListByBillingProfileResponse = ReservationsListResult;

/** Optional parameters. */
export interface ReservationsGetByReservationOrderOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the detail information of some properties. */
  expand?: string;
}

/** Contains response data for the getByReservationOrder operation. */
export type ReservationsGetByReservationOrderResponse = Reservation;

/** Optional parameters. */
export interface ReservationsUpdateByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateByBillingAccount operation. */
export type ReservationsUpdateByBillingAccountResponse = Reservation;

/** Optional parameters. */
export interface ReservationsListByReservationOrderOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReservationOrder operation. */
export type ReservationsListByReservationOrderResponse = ReservationList;

/** Optional parameters. */
export interface ReservationsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type ReservationsListByBillingAccountNextResponse =
  ReservationsListResult;

/** Optional parameters. */
export interface ReservationsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type ReservationsListByBillingProfileNextResponse =
  ReservationsListResult;

/** Optional parameters. */
export interface ReservationsListByReservationOrderNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReservationOrderNext operation. */
export type ReservationsListByReservationOrderNextResponse = ReservationList;

/** Optional parameters. */
export interface ReservationOrdersGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the detail information of some properties. */
  expand?: string;
}

/** Contains response data for the getByBillingAccount operation. */
export type ReservationOrdersGetByBillingAccountResponse = ReservationOrder;

/** Optional parameters. */
export interface ReservationOrdersListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The number of reservations to skip from the list before returning results */
  skiptoken?: number;
}

/** Contains response data for the listByBillingAccount operation. */
export type ReservationOrdersListByBillingAccountResponse =
  ReservationOrderList;

/** Optional parameters. */
export interface ReservationOrdersListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type ReservationOrdersListByBillingAccountNextResponse =
  ReservationOrderList;

/** Optional parameters. */
export interface TransactionsListByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByCustomer operation. */
export type TransactionsListByCustomerResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByInvoiceSection operation. */
export type TransactionsListByInvoiceSectionResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type TransactionsListByBillingProfileResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByInvoiceOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByInvoice operation. */
export type TransactionsListByInvoiceResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsTransactionsDownloadByInvoiceOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the transactionsDownloadByInvoice operation. */
export type TransactionsTransactionsDownloadByInvoiceResponse =
  DocumentDownloadResult;

/** Optional parameters. */
export interface TransactionsGetTransactionSummaryByInvoiceOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter the line items that are aggregated to create the line item summary. */
  filter?: string;
  /** The search query option allows clients to filter the line items that are aggregated to create the line item summary. */
  search?: string;
}

/** Contains response data for the getTransactionSummaryByInvoice operation. */
export type TransactionsGetTransactionSummaryByInvoiceResponse =
  TransactionSummary;

/** Optional parameters. */
export interface TransactionsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type TransactionsListByCustomerNextResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type TransactionsListByInvoiceSectionNextResponse =
  TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type TransactionsListByBillingProfileNextResponse =
  TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByInvoiceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceNext operation. */
export type TransactionsListByInvoiceNextResponse = TransactionListResult;

/** Optional parameters. */
export interface TransfersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TransfersGetResponse = TransferDetails;

/** Optional parameters. */
export interface TransfersInitiateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the initiate operation. */
export type TransfersInitiateResponse = TransferDetails;

/** Optional parameters. */
export interface TransfersCancelOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancel operation. */
export type TransfersCancelResponse = TransferDetails;

/** Optional parameters. */
export interface TransfersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TransfersListResponse = TransferDetailsListResult;

/** Optional parameters. */
export interface TransfersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TransfersListNextResponse = TransferDetailsListResult;

/** Optional parameters. */
export interface PartnerTransfersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PartnerTransfersGetResponse = PartnerTransferDetails;

/** Optional parameters. */
export interface PartnerTransfersInitiateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the initiate operation. */
export type PartnerTransfersInitiateResponse = PartnerTransferDetails;

/** Optional parameters. */
export interface PartnerTransfersCancelOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancel operation. */
export type PartnerTransfersCancelResponse = PartnerTransferDetails;

/** Optional parameters. */
export interface PartnerTransfersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PartnerTransfersListResponse = PartnerTransferDetailsListResult;

/** Optional parameters. */
export interface PartnerTransfersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PartnerTransfersListNextResponse = PartnerTransferDetailsListResult;

/** Optional parameters. */
export interface RecipientTransfersAcceptOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the accept operation. */
export type RecipientTransfersAcceptResponse = RecipientTransferDetails;

/** Optional parameters. */
export interface RecipientTransfersValidateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validate operation. */
export type RecipientTransfersValidateResponse = ValidateTransferListResponse;

/** Optional parameters. */
export interface RecipientTransfersDeclineOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the decline operation. */
export type RecipientTransfersDeclineResponse = RecipientTransferDetails;

/** Optional parameters. */
export interface RecipientTransfersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RecipientTransfersGetResponse = RecipientTransferDetails;

/** Optional parameters. */
export interface RecipientTransfersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type RecipientTransfersListResponse = RecipientTransferDetailsListResult;

/** Optional parameters. */
export interface RecipientTransfersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type RecipientTransfersListNextResponse =
  RecipientTransferDetailsListResult;

/** Optional parameters. */
export interface BillingManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
