/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Details about the azure plan.
 */
export interface AzurePlan {
  /**
   * The sku id.
   */
  skuId?: string;
  /**
   * The sku description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuDescription?: string;
}

/**
 * Details about a reseller.
 */
export interface Reseller {
  /**
   * The reseller id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resellerId?: string;
  /**
   * A description of the reseller.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * The Resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * A partner's customer.
 */
export interface Customer extends Resource {
  /**
   * The name of the customer.
   */
  displayName?: string;
  /**
   * Information about the product.
   */
  enabledAzurePlans?: AzurePlan[];
  /**
   * The resellers which are allowed to provide service to this customer.
   */
  resellers?: Reseller[];
}

/**
 * Request parameters to initiate transfer.
 */
export interface InitiateTransferRequest {
  /**
   * Email Id of recipient for transfer.
   */
  recipientEmailId?: string;
  /**
   * Optional reseller Id for transfer.
   */
  resellerId?: string;
}

/**
 * Address details.
 */
export interface AddressDetails {
  /**
   * First Name.
   */
  firstName?: string;
  /**
   * Last Name.
   */
  lastName?: string;
  /**
   * Company Name.
   */
  companyName?: string;
  /**
   * Address Line1.
   */
  addressLine1?: string;
  /**
   * Address Line2.
   */
  addressLine2?: string;
  /**
   * Address Line3.
   */
  addressLine3?: string;
  /**
   * Address City.
   */
  city?: string;
  /**
   * Address Region.
   */
  region?: string;
  /**
   * Country code uses ISO2, 2-digit format.
   */
  country?: string;
  /**
   * Address Postal Code.
   */
  postalCode?: string;
}

/**
 * Result of the address validation
 */
export interface ValidateAddressResponse {
  /**
   * status of the address validation. Possible values include: 'Valid', 'Invalid'
   */
  status?: AddressValidationStatus;
  /**
   * list of suggested addresses.
   */
  suggestedAddresses?: AddressDetails[];
  /**
   * Validation error message.
   */
  validationMessage?: string;
}

/**
 * Details of the product to be transferred.
 */
export interface ProductDetails {
  /**
   * Type of the product to be transferred. Possible values include: 'AzureSubscription',
   * 'AzureReservation'
   */
  productType?: ProductType;
  /**
   * Id of product to be transferred.
   */
  productId?: string;
}

/**
 * Request parameters to accept transfer.
 */
export interface AcceptTransferRequest {
  /**
   * Request parameters to accept transfer.
   */
  productDetails?: ProductDetails[];
}

/**
 * Error details for transfer execution.
 */
export interface ErrorModel {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: string;
  /**
   * Error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorMessage?: string;
}

/**
 * Detailed transfer status.
 */
export interface DetailedTransferStatus {
  /**
   * Type of product being transferred. Possible values include: 'AzureSubscription',
   * 'AzureReservation'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productType?: ProductType;
  /**
   * Id of product being transferred.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productId?: string;
  /**
   * Transfer status. Possible values include: 'NotStarted', 'InProgress', 'Completed', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transferStatus?: ProductTransferStatus;
  /**
   * Error details for transfer execution.
   */
  errorDetails?: ErrorModel;
}

/**
 * Details of the transfer.
 */
export interface TransferDetails {
  /**
   * Transfer creation time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
  /**
   * Transfer expiration time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expirationTime?: Date;
  /**
   * Target invoice section Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionId?: string;
  /**
   * Target billing account Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingAccountId?: string;
  /**
   * Reseller Id for transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resellerId?: string;
  /**
   * Reseller name for transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resellerName?: string;
  /**
   * Customer type of the initiator.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly initiatorCustomerType?: string;
  /**
   * Target billing profile Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * Overall transfer status. Possible values include: 'Pending', 'InProgress', 'Completed',
   * 'CompletedWithErrors', 'Failed', 'Canceled', 'Declined'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transferStatus?: TransferStatus;
  /**
   * Email Id of recipient of transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recipientEmailId?: string;
  /**
   * Email Id of initiator of transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly initiatorEmailId?: string;
  /**
   * Email Id who user canceled the transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly canceledBy?: string;
  /**
   * Transfer last modification time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTime?: Date;
  /**
   * Detailed transfer status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
}

/**
 * Details of the transfer.
 */
export interface RecipientTransferDetails {
  /**
   * Transfer creation time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
  /**
   * Transfer expiration time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expirationTime?: Date;
  /**
   * Type of subscriptions that can be transferred.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowedProductType?: EligibleProductType[];
  /**
   * Overall transfer status. Possible values include: 'Pending', 'InProgress', 'Completed',
   * 'CompletedWithErrors', 'Failed', 'Canceled', 'Declined'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transferStatus?: TransferStatus;
  /**
   * Email Id of recipient of transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recipientEmailId?: string;
  /**
   * Email Id of initiator of transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly initiatorEmailId?: string;
  /**
   * Reseller Id for transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resellerId?: string;
  /**
   * Reseller name for transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resellerName?: string;
  /**
   * Customer type of the initiator.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly initiatorCustomerType?: string;
  /**
   * Email Id who user canceled the transfer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly canceledBy?: string;
  /**
   * Transfer last modification time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTime?: Date;
  /**
   * Detailed transfer status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
}

/**
 * The properties of the product to initiate a transfer.
 */
export interface TransferProductRequestProperties {
  /**
   * The destination invoice section id.
   */
  destinationInvoiceSectionId?: string;
  /**
   * The destination billing profile id.
   */
  destinationBillingProfileId?: string;
}

/**
 * Request parameters to transfer billing subscription.
 */
export interface TransferBillingSubscriptionResult {
  /**
   * The destination billing subscription id.
   */
  billingSubscriptionName?: string;
}

/**
 * Request parameters to transfer billing subscription.
 */
export interface TransferBillingSubscriptionRequestProperties {
  /**
   * The destination invoice section id.
   */
  destinationInvoiceSectionId?: string;
  /**
   * The destination billing profile id.
   */
  destinationBillingProfileId?: string;
}

/**
 * Request parameters to transfer billing subscription.
 */
export interface TransferBillingSubscriptionRequest {
  /**
   * The destination invoice section id.
   */
  destinationInvoiceSectionId?: string;
  /**
   * The destination billing profile id.
   */
  destinationBillingProfileId?: string;
}

/**
 * Error details of the transfer eligibility validation
 */
export interface ValidateSubscriptionTransferEligibilityError {
  /**
   * Error code for the product transfer validation. Possible values include: 'InvalidSource',
   * 'SubscriptionNotActive', 'InsufficientPermissionOnSource',
   * 'InsufficientPermissionOnDestination', 'DestinationBillingProfilePastDue',
   * 'SubscriptionTypeNotSupported', 'CrossBillingAccountNotAllowed',
   * 'NotAvailableForDestinationMarket'
   */
  code?: SubscriptionTransferValidationErrorCode;
  /**
   * The error message.
   */
  message?: string;
  /**
   * Detailed error message explaining the error.
   */
  details?: string;
}

/**
 * Result of the transfer eligibility validation.
 */
export interface ValidateSubscriptionTransferEligibilityResult {
  /**
   * Specifies whether the transfer is eligible or not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTransferEligible?: boolean;
  /**
   * Validation error details.
   */
  errorDetails?: ValidateSubscriptionTransferEligibilityError;
}

/**
 * Summary of cancel product operation
 */
export interface UpdateAutoRenewOperation {
  /**
   * The end date of this asset
   */
  endDate?: Date;
}

/**
 * An InvoiceSection resource.
 */
export interface InvoiceSection extends Resource {
  /**
   * The name of the InvoiceSection.
   */
  displayName?: string;
}

/**
 * A billing profile resource.
 */
export interface BillingProfile extends Resource {
  /**
   * The billing profile name.
   */
  displayName?: string;
  /**
   * Purchase order number.
   */
  poNumber?: string;
  /**
   * Billing address.
   */
  address?: AddressDetails;
  /**
   * If the billing profile is opted in to receive invoices via email.
   */
  invoiceEmailOptIn?: boolean;
  /**
   * Invoice day.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceDay?: number;
  /**
   * The currency associated with the billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currency?: string;
  /**
   * Information about the enabled azure plans.
   */
  enabledAzurePlans?: AzurePlan[];
  /**
   * The invoice sections associated to the billing profile.
   */
  invoiceSections?: InvoiceSection[];
  /**
   * The status of the billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: any;
  /**
   * Reason for the specified billing profile status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusReasonCode?: any;
  /**
   * The billing profile spending limit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spendingLimit?: any;
}

/**
 * The attributes associated with legacy enrollment
 */
export interface EnrollmentPolicies {
  /**
   * The accountOwnerViewCharges flag for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountOwnerViewCharges?: boolean;
  /**
   * The departmentAdminViewCharges flag for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly departmentAdminViewCharges?: boolean;
  /**
   * The marketplaces flag for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly marketplacesEnabled?: boolean;
  /**
   * The reserved instances flag for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reservedInstancesEnabled?: boolean;
}

/**
 * Current entity level details
 */
export interface Enrollment {
  /**
   * Enrollment Start Date
   */
  startDate?: Date;
  /**
   * Enrollment End Date
   */
  endDate?: Date;
  /**
   * The currency associated with enrollment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currency?: string;
  /**
   * The channel for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly channel?: string;
  /**
   * The attributes associated with legacy enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policies?: EnrollmentPolicies;
  /**
   * The language for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly language?: string;
  /**
   * The countryCode for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly countryCode?: string;
  /**
   * Enrollment status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * Enrollment billing cycle
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingCycle?: string;
}

/**
 * An account resource.
 */
export interface EnrollmentAccount extends Resource {
  /**
   * The account name.
   */
  accountName?: string;
  /**
   * The cost center name.
   */
  costCenter?: string;
  /**
   * The account owner
   */
  accountOwner?: string;
  /**
   * The status for account.
   */
  status?: string;
  /**
   * Account Start Date
   */
  startDate?: Date;
  /**
   * Account End Date
   */
  endDate?: Date;
  /**
   * Associated department. By default this is not populated, unless it's specified in $expand.
   */
  department?: Department;
}

/**
 * A department resource.
 */
export interface Department extends Resource {
  /**
   * The name for department.
   */
  departmentName?: string;
  /**
   * The cost center name.
   */
  costCenter?: string;
  /**
   * The status for department.
   */
  status?: string;
  /**
   * Associated enrollment accounts. By default this is not populated, unless it's specified in
   * $expand.
   */
  enrollmentAccounts?: EnrollmentAccount[];
}

/**
 * A billing account resource.
 */
export interface BillingAccount extends Resource {
  /**
   * The billing account name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The address associated with billing account.
   */
  address?: AddressDetails;
  /**
   * The type of agreement. Possible values include: 'MicrosoftCustomerAgreement',
   * 'EnterpriseAgreement', 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly agreementType?: AgreementType;
  /**
   * The type of customer. Possible values include: 'Enterprise', 'Individual', 'Partner'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerType?: CustomerType;
  /**
   * The type of customer. Possible values include: 'Enterprise', 'Individual', 'Partner'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountType?: AccountType;
  /**
   * The billing profiles associated to the billing account. By default this is not populated,
   * unless it's specified in $expand.
   */
  billingProfiles?: BillingProfile[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless
   * it's specified in $expand.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * The departments associated to the enrollment.
   */
  departments?: Department[];
  /**
   * The accounts associated to the enrollment.
   */
  enrollmentAccounts?: EnrollmentAccount[];
  /**
   * Organization id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly organizationId?: string;
}

/**
 * Result of listing billing accounts.
 */
export interface BillingAccountListResult {
  /**
   * The list of billing accounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: BillingAccount[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * The request properties of the billing account that can be updated.
 */
export interface BillingAccountUpdateRequest {
  /**
   * The billing account name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The address associated with billing account.
   */
  address?: AddressDetails;
  /**
   * The type of agreement. Possible values include: 'MicrosoftCustomerAgreement',
   * 'EnterpriseAgreement', 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly agreementType?: AgreementType;
  /**
   * The type of customer. Possible values include: 'Enterprise', 'Individual', 'Partner'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerType?: CustomerType;
  /**
   * The type of customer. Possible values include: 'Enterprise', 'Individual', 'Partner'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountType?: AccountType;
  /**
   * The billing profiles associated to the billing account. By default this is not populated,
   * unless it's specified in $expand.
   */
  billingProfiles?: BillingProfile[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless
   * it's specified in $expand.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * The departments associated to the enrollment.
   */
  departments?: Department[];
  /**
   * The accounts associated to the enrollment.
   */
  enrollmentAccounts?: EnrollmentAccount[];
  /**
   * Organization id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly organizationId?: string;
}

/**
 * A billing property resource.
 */
export interface BillingProperty extends Resource {
  /**
   * Billing tenant Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingTenantId?: string;
  /**
   * Billing account Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingAccountId?: string;
  /**
   * Billing account display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingAccountDisplayName?: string;
  /**
   * Billing profile Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * Billing profile display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The status of the billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileStatus?: any;
  /**
   * Reason for the specified billing profile status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileStatusReasonCode?: any;
  /**
   * The billing profile spending limit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileSpendingLimit?: any;
  /**
   * Cost center name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly costCenter?: string;
  /**
   * Invoice Section Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionId?: string;
  /**
   * Invoice Section display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * Product Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productId?: string;
  /**
   * Product name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productName?: string;
  /**
   * SKU Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuId?: string;
  /**
   * SKU description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuDescription?: string;
}

/**
 * Result of listing departments.
 */
export interface DepartmentListResult {
  /**
   * The list of departments.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: Department[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Result of listing enrollment accounts.
 */
export interface EnrollmentAccountListResult {
  /**
   * The list of enrollment accounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: EnrollmentAccount[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * A instruction resource.
 */
export interface Instruction extends Resource {
  /**
   * The amount budgeted for this billing instruction.
   */
  amount: number;
  /**
   * The date this billing instruction goes into effect.
   */
  startDate: Date;
  /**
   * The date this billing instruction is no longer in effect.
   */
  endDate: Date;
  /**
   * The date this billing instruction was created.
   */
  creationDate?: Date;
}

/**
 * Result of listing billing profiles.
 */
export interface BillingProfileListResult {
  /**
   * The list of billing profiles.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: BillingProfile[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * The request parameters for creating a new billing profile.
 */
export interface BillingProfileCreationRequest {
  /**
   * The billing profile name.
   */
  displayName?: string;
  /**
   * Purchase order number.
   */
  poNumber?: string;
  /**
   * Billing address.
   */
  address?: AddressDetails;
  /**
   * If the billing profile is opted in to receive invoices via email.
   */
  invoiceEmailOptIn?: boolean;
  /**
   * Enabled azure plans for this billing profile.
   */
  enabledAzurePlans?: AzurePlan[];
}

/**
 * The properties of an InvoiceSection.
 */
export interface InvoiceSectionCreationRequest {
  /**
   * The name of the InvoiceSection.
   */
  displayName?: string;
}

/**
 * Result of listing invoice sections.
 */
export interface InvoiceSectionListResult {
  /**
   * The list of invoice sections.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: InvoiceSection[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Invoice section properties with create subscription permission.
 */
export interface InvoiceSectionWithCreateSubPermission {
  /**
   * Invoice Section Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionId?: string;
  /**
   * Invoice Section display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * Billing profile Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * Billing profile display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The status of the billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileStatus?: any;
  /**
   * Reason for the specified billing profile status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileStatusReasonCode?: any;
  /**
   * The billing profile spending limit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileSpendingLimit?: any;
  /**
   * Enabled azure plans for the associated billing profile.
   */
  enabledAzurePlans?: AzurePlan[];
}

/**
 * A secure URL that can be used to download a an entity until the URL expires.
 */
export interface DownloadUrl {
  /**
   * The time in UTC at which this download URL will expire.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expiryTime?: Date;
  /**
   * The URL to the PDF file.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
}

/**
 * The details of the error.
 */
export interface ErrorDetails {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
}

/**
 * Error response indicates that the service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * The details of the error.
   */
  error?: ErrorDetails;
}

/**
 * The Amount.
 */
export interface Amount {
  /**
   * The currency for the amount value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currency?: string;
  /**
   * Amount value.
   */
  value?: number;
}

/**
 * The properties of the invoice download.
 */
export interface Document {
  /**
   * Document type. Possible values include: 'Invoice', 'VoidNote', 'TaxReceipt', 'CreditNote'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: DocumentType;
  /**
   * Document URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
}

/**
 * The properties of the payment.
 */
export interface PaymentProperties {
  /**
   * The type of payment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly paymentType?: string;
  /**
   * The paid amount.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly amount?: Amount;
  /**
   * The date of the payment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly date?: Date;
  /**
   * The payment method family. Possible values include: 'Credits', 'CheckWire', 'CreditCard',
   * 'None'
   */
  paymentMethodFamily?: PaymentMethodFamily;
  /**
   * The type of payment method.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly paymentMethodType?: string;
}

/**
 * An invoice resource.
 */
export interface Invoice extends Resource {
  /**
   * The due date for invoice.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dueDate?: Date;
  /**
   * The date when invoice was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceDate?: Date;
  /**
   * Invoice status. Possible values include: 'Due', 'OverDue', 'Paid'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: InvoiceStatus;
  /**
   * Amount due.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly amountDue?: Amount;
  /**
   * Amount billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billedAmount?: Amount;
  /**
   * The start date of the billing period.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoicePeriodStartDate?: Date;
  /**
   * The end date of the billing period.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoicePeriodEndDate?: Date;
  /**
   * Invoice type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceType?: any;
  /**
   * The billing profile id this invoice belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * The billing profile display name this invoice belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The purchase identifier for the invoice.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly purchaseOrderNumber?: string;
  /**
   * List of documents available to download including invoice and tax documents.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly documents?: Document[];
  /**
   * List of payments.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly payments?: PaymentProperties[];
  /**
   * The subscription id this invoice belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
}

/**
 * A product resource.
 */
export interface Product extends Resource {
  /**
   * The display name of the product.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The date of purchase.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly purchaseDate?: Date;
  /**
   * The product type id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productTypeId?: string;
  /**
   * The type of product.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productType?: string;
  /**
   * Product status. Possible values include: 'Active', 'Inactive', 'PastDue', 'Expiring',
   * 'Expired', 'Disabled', 'Cancelled', 'AutoRenew'
   */
  status?: ProductStatusType;
  /**
   * end date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endDate?: Date;
  /**
   * Billing frequency. Possible values include: 'OneTime', 'Monthly', 'UsageBased'
   */
  billingFrequency?: BillingFrequency;
  /**
   * Last month charges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastCharge?: Amount;
  /**
   * The date of the last charge.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastChargeDate?: Date;
  /**
   * The purchased product quantity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quantity?: number;
  /**
   * Sku Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuId?: string;
  /**
   * Sku description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuDescription?: string;
  /**
   * The id of the tenant in which the product is used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * Availability Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availabilityId?: string;
  /**
   * Parent Product Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parentProductId?: string;
  /**
   * Invoice section id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionId?: string;
  /**
   * Invoice section display name to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * Billing Profile id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * Billing Profile display name to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileDisplayName?: string;
  /**
   * Customer id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerId?: string;
  /**
   * Display name of customer to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerDisplayName?: string;
  /**
   * Reseller for this product.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reseller?: Reseller;
}

/**
 * Error details of the product transfer eligibility validation.
 */
export interface ValidateProductTransferEligibilityError {
  /**
   * Error code for the product transfer validation. Possible values include: 'InvalidSource',
   * 'ProductNotActive', 'InsufficientPermissionOnSource', 'InsufficientPermissionOnDestination',
   * 'DestinationBillingProfilePastDue', 'ProductTypeNotSupported',
   * 'CrossBillingAccountNotAllowed', 'NotAvailableForDestinationMarket',
   * 'OneTimePurchaseProductTransferNotAllowed'
   */
  code?: ProductTransferValidationErrorCode;
  /**
   * The error message.
   */
  message?: string;
  /**
   * Detailed error message explaining the error.
   */
  details?: string;
}

/**
 * Result of the product transfer eligibility validation.
 */
export interface ValidateProductTransferEligibilityResult {
  /**
   * Specifies whether the transfer is eligible or not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTransferEligible?: boolean;
  /**
   * Validation error details.
   */
  errorDetails?: ValidateProductTransferEligibilityError;
}

/**
 * A billing Subscription resource.
 */
export interface BillingSubscription extends Resource {
  /**
   * display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Subscription Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * Subscription billing status. Possible values include: 'Active', 'Inactive', 'Abandoned',
   * 'Deleted', 'Warning'
   */
  subscriptionBillingStatus?: BillingSubscriptionStatusType;
  /**
   * Last month charges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastMonthCharges?: Amount;
  /**
   * Month to date charges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly monthToDateCharges?: Amount;
  /**
   * Billing Profile id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * Billing Profile display name to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileDisplayName?: string;
  /**
   * Customer id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerId?: string;
  /**
   * Display name of customer to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerDisplayName?: string;
  /**
   * Invoice section id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionId?: string;
  /**
   * Invoice section display name to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * Reseller for this subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reseller?: Reseller;
  /**
   * The sku id.
   */
  skuId?: string;
  /**
   * The sku description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuDescription?: string;
}

/**
 * The rating context.
 */
export interface EnrollmentAccountContext {
  /**
   * The cost center name.
   */
  costCenter?: string;
  /**
   * Account Start Date
   */
  startDate?: Date;
  /**
   * Account End Date
   */
  endDate?: Date;
  /**
   * The enrollment account id.
   */
  enrollmentAccountName?: string;
}

/**
 * A reservation transaction resource.
 */
export interface Transaction extends Resource {
  /**
   * The kind of transaction. Choices are all and reservation. Possible values include: 'all',
   * 'reservation'
   */
  kind?: TransactionTypeKind;
  /**
   * The date of reservation transaction.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly date?: Date;
  /**
   * Invoice number or 'pending' if not invoiced.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoice?: string;
  /**
   * The reservation order id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly orderId?: string;
  /**
   * The reservation order name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly orderName?: string;
  /**
   * The product family.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productFamily?: string;
  /**
   * The product type id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productTypeId?: string;
  /**
   * The type of product.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productType?: string;
  /**
   * Product description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productDescription?: string;
  /**
   * Transaction types. Possible values include: 'Purchase', 'Usage Charge'
   */
  transactionType?: ReservationType;
  /**
   * Last charge associated with the purchase.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transactionAmount?: Amount;
  /**
   * Purchase quantity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quantity?: number;
  /**
   * Invoice section id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionId?: string;
  /**
   * Invoice section display name to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * Billing Profile id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * Billing Profile display name to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileDisplayName?: string;
  /**
   * Customer id to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerId?: string;
  /**
   * Display name of customer to which this product belongs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerDisplayName?: string;
  /**
   * The subscription id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The subscription name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionName?: string;
  /**
   * The amount of any Azure credits automatically applied to this transaction.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly azureCreditApplied?: Amount;
  /**
   * The ISO 4217 code for the currency in which this transaction is billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingCurrency?: string;
  /**
   * The percentage discount, if any, applied to this transaction.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly discount?: number;
  /**
   * The price of the product after applying any discounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly effectivePrice?: Amount;
  /**
   * The exchange rate used to convert charged amount to billing currency, if applicable.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly exchangeRate?: number;
  /**
   * The retail price of the product.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly marketPrice?: Amount;
  /**
   * The ISO 4217 code for the currency in which the product is priced.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pricingCurrency?: string;
  /**
   * The date of the purchase of the product, or the start date of the month in which usage
   * started.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly servicePeriodStartDate?: Date;
  /**
   * The end date of the product term, or the end date of the month in which usage ended.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly servicePeriodEndDate?: Date;
  /**
   * The pre-tax charged amount for the transaction.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subTotal?: Amount;
  /**
   * The tax amount applied to the transaction.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tax?: Amount;
  /**
   * The unit of measure used to bill for the product. For example, compute services are billed per
   * hour.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unitOfMeasure?: string;
  /**
   * The number of units used for a given product.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly units?: number;
  /**
   * The description for the unit of measure for a given product.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unitType?: string;
}

/**
 * The Policy.
 */
export interface Policy extends Resource {
  /**
   * The marketplace purchases are free, allowed or not allowed. Possible values include:
   * 'AllAllowed', 'OnlyFreeAllowed', 'NotAllowed'
   */
  marketplacePurchases?: MarketplacePurchasesPolicy;
  /**
   * The reservation purchases allowed or not. Possible values include: 'Allowed', 'NotAllowed'
   */
  reservationPurchases?: ReservationPurchasesPolicy;
  /**
   * Who can view charges. Possible values include: 'Allowed', 'NotAllowed'
   */
  viewCharges?: ViewChargesPolicy;
}

/**
 * The Customer's Policy.
 */
export interface CustomerPolicy extends Resource {
  /**
   * Customer can view retail prices. Possible values include: 'Allowed', 'NotAllowed'
   */
  viewCharges?: ViewCharges;
}

/**
 * Latest available balance on Monetary Credit PI.
 */
export interface AvailableBalance extends Resource {
  /**
   * Balance Amount.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly amount?: Amount;
}

/**
 * A payment method resource.
 */
export interface PaymentMethod extends Resource {
  /**
   * Payment method type. Possible values include: 'Credits', 'ChequeWire'
   */
  paymentMethodType?: PaymentMethodType;
  /**
   * Details about the payment method.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: string;
  /**
   * Expiration month and year.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expiration?: string;
  /**
   * The currency associated with the payment method.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currency?: string;
}

/**
 * Request parameters to update auto renew for support product.
 */
export interface UpdateAutoRenewRequest {
  /**
   * Request parameters to update auto renew policy a product. Possible values include: 'true',
   * 'false'
   */
  autoRenew?: UpdateAutoRenew;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Billing.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed: Invoice, etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
}

/**
 * A Billing REST API operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * The payload use to update role assignment on a scope
 */
export interface BillingRoleAssignmentPayload {
  /**
   * The user's principal id that the role gets assigned to
   */
  principalId?: string;
  /**
   * The role definition id
   */
  billingRoleDefinitionId?: string;
}

/**
 * a role assignment
 */
export interface BillingRoleAssignment extends Resource {
  /**
   * the date the role assignment is created
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdOn?: string;
  /**
   * the creator's tenant Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdByPrincipalTenantId?: string;
  /**
   * the creator's principal Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdByPrincipalId?: string;
  /**
   * the name of the role assignment
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingRoleAssignmentName?: string;
  /**
   * The user's principal id that the role gets assigned to
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The role definition id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly roleDefinitionName?: string;
  /**
   * The scope the role get assigned to
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scope?: string;
}

/**
 * Result of get list of role assignments
 */
export interface BillingRoleAssignmentListResult {
  /**
   * The list role assignments
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: BillingRoleAssignment[];
}

/**
 * The set of allowed action and not allowed actions a caller has on a billing account
 */
export interface BillingPermissionsProperties {
  /**
   * The set of actions that the caller is allowed to do
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actions?: string[];
  /**
   * The set of actions the caller is not allowed to do
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly notActions?: string[];
}

/**
 * Result of get role definition for a role.
 */
export interface BillingRoleDefinition extends Resource {
  /**
   * The role description
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * The billingPermissions the role has
   */
  permissions?: BillingPermissionsProperties[];
  /**
   * The name of the role
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly roleName?: string;
}

/**
 * list the role definitions.
 */
export interface BillingRoleDefinitionListResult {
  /**
   * The list of role definitions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: BillingRoleDefinition[];
}

/**
 * Result of list billingPermissions a caller has on a billing account.
 */
export interface BillingPermissionsListResult {
  /**
   * The list of billingPermissions a caller has on a billing account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: BillingPermissionsProperties[];
}

/**
 * Details about the participant or signer.
 */
export interface Participants {
  /**
   * The signing status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The date when status got changed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusDate?: Date;
  /**
   * The email address of the participant or signer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly email?: string;
}

/**
 * An agreement resource.
 */
export interface Agreement extends Resource {
  /**
   * The link to the agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly agreementLink?: string;
  /**
   * Effective date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly effectiveDate?: Date;
  /**
   * Expiration date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expirationDate?: Date;
  /**
   * Participants or signer of the agreement.
   */
  participants?: Participants[];
  /**
   * The agreement status
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
}

/**
 * Result of listing agreements.
 */
export interface AgreementListResult {
  /**
   * The list of agreements.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: Agreement[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * The properties of the validation result.
 */
export interface ValidationResultProperties {
  /**
   * Result Level.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly level?: string;
  /**
   * Result Code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The validation message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Transfer validation response.
 */
export interface ValidateTransferResponse {
  /**
   * The status of validation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The product id for which this result applies.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly productId?: string;
  /**
   * Array of validation results.
   */
  results?: ValidationResultProperties[];
}

/**
 * Result of transfer validation.
 */
export interface ValidateTransferListResponse {
  /**
   * The list of transfer validation results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: ValidateTransferResponse[];
}

/**
 * Optional Parameters.
 */
export interface BillingAccountsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the address, invoiceSections and billingProfiles.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingAccountsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the address, invoiceSections and billingProfiles.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingProfilesListByBillingAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the invoiceSections.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingProfilesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the invoiceSections.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface CustomersListByBillingProfileOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter the list of customers.
   */
  filter?: string;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous
   * response contains a nextLink element, the value of the nextLink element will include a
   * skiptoken parameter that specifies a starting point to use for subsequent calls.
   */
  skiptoken?: string;
}

/**
 * Optional Parameters.
 */
export interface CustomersListByBillingAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter the list of customers.
   */
  filter?: string;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous
   * response contains a nextLink element, the value of the nextLink element will include a
   * skiptoken parameter that specifies a starting point to use for subsequent calls.
   */
  skiptoken?: string;
}

/**
 * Optional Parameters.
 */
export interface CustomersGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand enabledAzurePlans, resellers.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface InvoiceSectionsCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The name of the InvoiceSection.
   */
  displayName?: string;
}

/**
 * Optional Parameters.
 */
export interface InvoiceSectionsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The name of the InvoiceSection.
   */
  displayName?: string;
}

/**
 * Optional Parameters.
 */
export interface InvoiceSectionsBeginCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The name of the InvoiceSection.
   */
  displayName?: string;
}

/**
 * Optional Parameters.
 */
export interface InvoiceSectionsBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The name of the InvoiceSection.
   */
  displayName?: string;
}

/**
 * Optional Parameters.
 */
export interface ProductsListByCustomerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and
   * 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair
   * string where key and value is separated by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ProductsListByBillingAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and
   * 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair
   * string where key and value is separated by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ProductsListByInvoiceSectionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and
   * 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair
   * string where key and value is separated by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ProductsUpdateAutoRenewByInvoiceSectionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Request parameters to update auto renew policy a product. Possible values include: 'true',
   * 'false'
   */
  autoRenew?: UpdateAutoRenew;
}

/**
 * Optional Parameters.
 */
export interface TransactionsListByCustomerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge',
   * and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair
   * string where key and value is separated by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface TransactionsListByBillingAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge',
   * and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair
   * string where key and value is separated by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface TransactionsListByBillingProfileOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge',
   * and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair
   * string where key and value is separated by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface TransactionsListByInvoiceSectionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge',
   * and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair
   * string where key and value is separated by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface DepartmentsListByBillingAccountNameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the enrollmentAccounts.
   */
  expand?: string;
  /**
   * The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support
   * 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated
   * by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface DepartmentsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the enrollmentAccounts.
   */
  expand?: string;
  /**
   * The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support
   * 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated
   * by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface EnrollmentAccountsListByBillingAccountNameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the department.
   */
  expand?: string;
  /**
   * The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support
   * 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated
   * by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface EnrollmentAccountsGetByEnrollmentAccountIdOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the Department.
   */
  expand?: string;
  /**
   * The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support
   * 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated
   * by a colon (:).
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface PoliciesUpdateCustomerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Customer can view retail prices. Possible values include: 'Allowed', 'NotAllowed'
   */
  viewCharges?: ViewCharges;
}

/**
 * Optional Parameters.
 */
export interface RecipientTransfersAcceptOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Request parameters to accept transfer.
   */
  productDetails?: ProductDetails[];
}

/**
 * Optional Parameters.
 */
export interface RecipientTransfersValidateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Request parameters to accept transfer.
   */
  productDetails?: ProductDetails[];
}

/**
 * Optional Parameters.
 */
export interface AgreementsListByBillingAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the participants.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface AgreementsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the participants.
   */
  expand?: string;
}

/**
 * An interface representing BillingManagementClientOptions.
 */
export interface BillingManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for Create operation.
 */
export interface BillingProfilesCreateHeaders {
  /**
   * Location URI to poll for result
   */
  location: string;
  /**
   * Recommends the retryable time after receiving this.
   */
  retryAfter: number;
}

/**
 * Defines headers for Update operation.
 */
export interface BillingProfilesUpdateHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: string;
}

/**
 * Defines headers for Create operation.
 */
export interface InvoiceSectionsCreateHeaders {
  /**
   * Location URI to poll for result
   */
  location: string;
  /**
   * Recommends the retryable time after receiving this.
   */
  retryAfter: number;
}

/**
 * Defines headers for Update operation.
 */
export interface InvoiceSectionsUpdateHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: string;
}

/**
 * Defines headers for Download operation.
 */
export interface PriceSheetDownloadHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: string;
  /**
   * The operation entity Id GUID.
   */
  oDataEntityId: string;
}

/**
 * Defines headers for DownloadByBillingProfile operation.
 */
export interface PriceSheetDownloadByBillingProfileHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: string;
  /**
   * The operation entity Id GUID.
   */
  oDataEntityId: string;
}

/**
 * Defines headers for Transfer operation.
 */
export interface BillingSubscriptionsTransferHeaders {
  /**
   * Location URI to poll for result.
   */
  location: string;
  /**
   * Recommends the retryable time after receiving this.
   */
  retryAfter: number;
}

/**
 * Defines headers for Transfer operation.
 */
export interface ProductsTransferHeaders {
  /**
   * Location URI to poll for result
   */
  location: string;
  /**
   * Recommends the retryable time after receiving this.
   */
  retryAfter: number;
}

/**
 * @interface
 * Result of listing invoice section properties with create subscription permission.
 * @extends Array<InvoiceSectionWithCreateSubPermission>
 */
export interface InvoiceSectionListWithCreateSubPermissionResult extends Array<InvoiceSectionWithCreateSubPermission> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing payment methods.
 * @extends Array<PaymentMethod>
 */
export interface PaymentMethodsListResult extends Array<PaymentMethod> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing instructions.
 * @extends Array<Instruction>
 */
export interface InstructionListResult extends Array<Instruction> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing customers.
 * @extends Array<Customer>
 */
export interface CustomerListResult extends Array<Customer> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing billing subscriptions.
 * @extends Array<BillingSubscription>
 */
export interface BillingSubscriptionsListResult extends Array<BillingSubscription> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing products. It contains a list of available products summaries in reverse
 * chronological order by purchase date.
 * @extends Array<Product>
 */
export interface ProductsListResult extends Array<Product> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing reservation transactions.
 * @extends Array<Transaction>
 */
export interface TransactionListResult extends Array<Transaction> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing invoices.
 * @extends Array<Invoice>
 */
export interface InvoiceListResult extends Array<Invoice> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing details of the transfer initiated by caller.
 * @extends Array<TransferDetails>
 */
export interface TransferDetailsListResult extends Array<TransferDetails> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing details of the transfer received by caller.
 * @extends Array<RecipientTransferDetails>
 */
export interface RecipientTransferDetailsListResult extends Array<RecipientTransferDetails> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result listing billing operations. It contains a list of operations and a URL link to get the
 * next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for AddressValidationStatus.
 * Possible values include: 'Valid', 'Invalid'
 * @readonly
 * @enum {string}
 */
export type AddressValidationStatus = 'Valid' | 'Invalid';

/**
 * Defines values for ProductType.
 * Possible values include: 'AzureSubscription', 'AzureReservation'
 * @readonly
 * @enum {string}
 */
export type ProductType = 'AzureSubscription' | 'AzureReservation';

/**
 * Defines values for TransferStatus.
 * Possible values include: 'Pending', 'InProgress', 'Completed', 'CompletedWithErrors', 'Failed',
 * 'Canceled', 'Declined'
 * @readonly
 * @enum {string}
 */
export type TransferStatus = 'Pending' | 'InProgress' | 'Completed' | 'CompletedWithErrors' | 'Failed' | 'Canceled' | 'Declined';

/**
 * Defines values for ProductTransferStatus.
 * Possible values include: 'NotStarted', 'InProgress', 'Completed', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProductTransferStatus = 'NotStarted' | 'InProgress' | 'Completed' | 'Failed';

/**
 * Defines values for EligibleProductType.
 * Possible values include: 'DevTestAzureSubscription', 'StandardAzureSubscription',
 * 'AzureReservation'
 * @readonly
 * @enum {string}
 */
export type EligibleProductType = 'DevTestAzureSubscription' | 'StandardAzureSubscription' | 'AzureReservation';

/**
 * Defines values for SubscriptionTransferValidationErrorCode.
 * Possible values include: 'InvalidSource', 'SubscriptionNotActive',
 * 'InsufficientPermissionOnSource', 'InsufficientPermissionOnDestination',
 * 'DestinationBillingProfilePastDue', 'SubscriptionTypeNotSupported',
 * 'CrossBillingAccountNotAllowed', 'NotAvailableForDestinationMarket'
 * @readonly
 * @enum {string}
 */
export type SubscriptionTransferValidationErrorCode = 'InvalidSource' | 'SubscriptionNotActive' | 'InsufficientPermissionOnSource' | 'InsufficientPermissionOnDestination' | 'DestinationBillingProfilePastDue' | 'SubscriptionTypeNotSupported' | 'CrossBillingAccountNotAllowed' | 'NotAvailableForDestinationMarket';

/**
 * Defines values for AgreementType.
 * Possible values include: 'MicrosoftCustomerAgreement', 'EnterpriseAgreement',
 * 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement'
 * @readonly
 * @enum {string}
 */
export type AgreementType = 'MicrosoftCustomerAgreement' | 'EnterpriseAgreement' | 'MicrosoftOnlineServicesProgram' | 'MicrosoftPartnerAgreement';

/**
 * Defines values for CustomerType.
 * Possible values include: 'Enterprise', 'Individual', 'Partner'
 * @readonly
 * @enum {string}
 */
export type CustomerType = 'Enterprise' | 'Individual' | 'Partner';

/**
 * Defines values for AccountType.
 * Possible values include: 'Enterprise', 'Individual', 'Partner'
 * @readonly
 * @enum {string}
 */
export type AccountType = 'Enterprise' | 'Individual' | 'Partner';

/**
 * Defines values for InvoiceStatus.
 * Possible values include: 'Due', 'OverDue', 'Paid'
 * @readonly
 * @enum {string}
 */
export type InvoiceStatus = 'Due' | 'OverDue' | 'Paid';

/**
 * Defines values for DocumentType.
 * Possible values include: 'Invoice', 'VoidNote', 'TaxReceipt', 'CreditNote'
 * @readonly
 * @enum {string}
 */
export type DocumentType = 'Invoice' | 'VoidNote' | 'TaxReceipt' | 'CreditNote';

/**
 * Defines values for PaymentMethodFamily.
 * Possible values include: 'Credits', 'CheckWire', 'CreditCard', 'None'
 * @readonly
 * @enum {string}
 */
export type PaymentMethodFamily = 'Credits' | 'CheckWire' | 'CreditCard' | 'None';

/**
 * Defines values for ProductStatusType.
 * Possible values include: 'Active', 'Inactive', 'PastDue', 'Expiring', 'Expired', 'Disabled',
 * 'Cancelled', 'AutoRenew'
 * @readonly
 * @enum {string}
 */
export type ProductStatusType = 'Active' | 'Inactive' | 'PastDue' | 'Expiring' | 'Expired' | 'Disabled' | 'Cancelled' | 'AutoRenew';

/**
 * Defines values for BillingFrequency.
 * Possible values include: 'OneTime', 'Monthly', 'UsageBased'
 * @readonly
 * @enum {string}
 */
export type BillingFrequency = 'OneTime' | 'Monthly' | 'UsageBased';

/**
 * Defines values for ProductTransferValidationErrorCode.
 * Possible values include: 'InvalidSource', 'ProductNotActive', 'InsufficientPermissionOnSource',
 * 'InsufficientPermissionOnDestination', 'DestinationBillingProfilePastDue',
 * 'ProductTypeNotSupported', 'CrossBillingAccountNotAllowed', 'NotAvailableForDestinationMarket',
 * 'OneTimePurchaseProductTransferNotAllowed'
 * @readonly
 * @enum {string}
 */
export type ProductTransferValidationErrorCode = 'InvalidSource' | 'ProductNotActive' | 'InsufficientPermissionOnSource' | 'InsufficientPermissionOnDestination' | 'DestinationBillingProfilePastDue' | 'ProductTypeNotSupported' | 'CrossBillingAccountNotAllowed' | 'NotAvailableForDestinationMarket' | 'OneTimePurchaseProductTransferNotAllowed';

/**
 * Defines values for BillingSubscriptionStatusType.
 * Possible values include: 'Active', 'Inactive', 'Abandoned', 'Deleted', 'Warning'
 * @readonly
 * @enum {string}
 */
export type BillingSubscriptionStatusType = 'Active' | 'Inactive' | 'Abandoned' | 'Deleted' | 'Warning';

/**
 * Defines values for TransactionTypeKind.
 * Possible values include: 'all', 'reservation'
 * @readonly
 * @enum {string}
 */
export type TransactionTypeKind = 'all' | 'reservation';

/**
 * Defines values for ReservationType.
 * Possible values include: 'Purchase', 'Usage Charge'
 * @readonly
 * @enum {string}
 */
export type ReservationType = 'Purchase' | 'Usage Charge';

/**
 * Defines values for MarketplacePurchasesPolicy.
 * Possible values include: 'AllAllowed', 'OnlyFreeAllowed', 'NotAllowed'
 * @readonly
 * @enum {string}
 */
export type MarketplacePurchasesPolicy = 'AllAllowed' | 'OnlyFreeAllowed' | 'NotAllowed';

/**
 * Defines values for ReservationPurchasesPolicy.
 * Possible values include: 'Allowed', 'NotAllowed'
 * @readonly
 * @enum {string}
 */
export type ReservationPurchasesPolicy = 'Allowed' | 'NotAllowed';

/**
 * Defines values for ViewChargesPolicy.
 * Possible values include: 'Allowed', 'NotAllowed'
 * @readonly
 * @enum {string}
 */
export type ViewChargesPolicy = 'Allowed' | 'NotAllowed';

/**
 * Defines values for ViewCharges.
 * Possible values include: 'Allowed', 'NotAllowed'
 * @readonly
 * @enum {string}
 */
export type ViewCharges = 'Allowed' | 'NotAllowed';

/**
 * Defines values for PaymentMethodType.
 * Possible values include: 'Credits', 'ChequeWire'
 * @readonly
 * @enum {string}
 */
export type PaymentMethodType = 'Credits' | 'ChequeWire';

/**
 * Defines values for UpdateAutoRenew.
 * Possible values include: 'true', 'false'
 * @readonly
 * @enum {string}
 */
export type UpdateAutoRenew = 'true' | 'false';

/**
 * Contains response data for the list operation.
 */
export type BillingAccountsListResponse = BillingAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccountListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BillingAccountsGetResponse = BillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccount;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BillingAccountsUpdateResponse = BillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccount;
    };
};

/**
 * Contains response data for the listInvoiceSectionsByCreateSubscriptionPermission operation.
 */
export type BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionResponse = InvoiceSectionListWithCreateSubPermissionResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceSectionListWithCreateSubPermissionResult;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type BillingAccountsBeginUpdateResponse = BillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccount;
    };
};

/**
 * Contains response data for the listInvoiceSectionsByCreateSubscriptionPermissionNext operation.
 */
export type BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionNextResponse = InvoiceSectionListWithCreateSubPermissionResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceSectionListWithCreateSubPermissionResult;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type PaymentMethodsListByBillingAccountResponse = PaymentMethodsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaymentMethodsListResult;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type PaymentMethodsListByBillingProfileResponse = PaymentMethodsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaymentMethodsListResult;
    };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type PaymentMethodsListByBillingAccountNextResponse = PaymentMethodsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaymentMethodsListResult;
    };
};

/**
 * Contains response data for the listByBillingProfileNext operation.
 */
export type PaymentMethodsListByBillingProfileNextResponse = PaymentMethodsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaymentMethodsListResult;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type AddressValidateResponse = ValidateAddressResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateAddressResponse;
    };
};

/**
 * Contains response data for the getByBillingProfile operation.
 */
export type AvailableBalancesGetByBillingProfileResponse = AvailableBalance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableBalance;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type InstructionsListByBillingProfileResponse = InstructionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstructionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type InstructionsGetResponse = Instruction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Instruction;
    };
};

/**
 * Contains response data for the put operation.
 */
export type InstructionsPutResponse = Instruction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Instruction;
    };
};

/**
 * Contains response data for the listByBillingProfileNext operation.
 */
export type InstructionsListByBillingProfileNextResponse = InstructionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstructionListResult;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingProfilesListByBillingAccountResponse = BillingProfileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProfileListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BillingProfilesGetResponse = BillingProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProfile;
    };
};

/**
 * Contains response data for the create operation.
 */
export type BillingProfilesCreateResponse = BillingProfile & BillingProfilesCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BillingProfilesCreateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProfile;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BillingProfilesUpdateResponse = BillingProfile & BillingProfilesUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BillingProfilesUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProfile;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type CustomersListByBillingProfileResponse = CustomerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomerListResult;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type CustomersListByBillingAccountResponse = CustomerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomerListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CustomersGetResponse = Customer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Customer;
    };
};

/**
 * Contains response data for the listByBillingProfileNext operation.
 */
export type CustomersListByBillingProfileNextResponse = CustomerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomerListResult;
    };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type CustomersListByBillingAccountNextResponse = CustomerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomerListResult;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type InvoiceSectionsListByBillingProfileResponse = InvoiceSectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceSectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type InvoiceSectionsGetResponse = InvoiceSection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceSection;
    };
};

/**
 * Contains response data for the create operation.
 */
export type InvoiceSectionsCreateResponse = InvoiceSection & InvoiceSectionsCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: InvoiceSectionsCreateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceSection;
    };
};

/**
 * Contains response data for the update operation.
 */
export type InvoiceSectionsUpdateResponse = InvoiceSection & InvoiceSectionsUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: InvoiceSectionsUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceSection;
    };
};

/**
 * Contains response data for the listByCustomer operation.
 */
export type BillingPermissionsListByCustomerResponse = BillingPermissionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingPermissionsListResult;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingPermissionsListByBillingAccountResponse = BillingPermissionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingPermissionsListResult;
    };
};

/**
 * Contains response data for the listByInvoiceSections operation.
 */
export type BillingPermissionsListByInvoiceSectionsResponse = BillingPermissionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingPermissionsListResult;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type BillingPermissionsListByBillingProfileResponse = BillingPermissionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingPermissionsListResult;
    };
};

/**
 * Contains response data for the listByCustomer operation.
 */
export type BillingSubscriptionsListByCustomerResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscriptionsListResult;
    };
};

/**
 * Contains response data for the getByCustomer operation.
 */
export type BillingSubscriptionsGetByCustomerResponse = BillingSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscription;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingSubscriptionsListByBillingAccountResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type BillingSubscriptionsListByBillingProfileResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type BillingSubscriptionsListByInvoiceSectionResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscriptionsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BillingSubscriptionsGetResponse = BillingSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscription;
    };
};

/**
 * Contains response data for the transfer operation.
 */
export type BillingSubscriptionsTransferResponse = TransferBillingSubscriptionResult & BillingSubscriptionsTransferHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BillingSubscriptionsTransferHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferBillingSubscriptionResult;
    };
};

/**
 * Contains response data for the validateTransfer operation.
 */
export type BillingSubscriptionsValidateTransferResponse = ValidateSubscriptionTransferEligibilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateSubscriptionTransferEligibilityResult;
    };
};

/**
 * Contains response data for the listByCustomerNext operation.
 */
export type BillingSubscriptionsListByCustomerNextResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type BillingSubscriptionsListByBillingAccountNextResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByCustomer operation.
 */
export type ProductsListByCustomerResponse = ProductsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductsListResult;
    };
};

/**
 * Contains response data for the getByCustomer operation.
 */
export type ProductsGetByCustomerResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type ProductsListByBillingAccountResponse = ProductsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductsListResult;
    };
};

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type ProductsListByInvoiceSectionResponse = ProductsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProductsGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the transfer operation.
 */
export type ProductsTransferResponse = Product & ProductsTransferHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductsTransferHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the validateTransfer operation.
 */
export type ProductsValidateTransferResponse = ValidateProductTransferEligibilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateProductTransferEligibilityResult;
    };
};

/**
 * Contains response data for the updateAutoRenewByInvoiceSection operation.
 */
export type ProductsUpdateAutoRenewByInvoiceSectionResponse = UpdateAutoRenewOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UpdateAutoRenewOperation;
    };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type ProductsListByBillingAccountNextResponse = ProductsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductsListResult;
    };
};

/**
 * Contains response data for the listByCustomer operation.
 */
export type TransactionsListByCustomerResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransactionListResult;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type TransactionsListByBillingAccountResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransactionListResult;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type TransactionsListByBillingProfileResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransactionListResult;
    };
};

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type TransactionsListByInvoiceSectionResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransactionListResult;
    };
};

/**
 * Contains response data for the listByInvoice operation.
 */
export type TransactionsListByInvoiceResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransactionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TransactionsGetResponse = Transaction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Transaction;
    };
};

/**
 * Contains response data for the listByCustomerNext operation.
 */
export type TransactionsListByCustomerNextResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransactionListResult;
    };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type TransactionsListByBillingAccountNextResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransactionListResult;
    };
};

/**
 * Contains response data for the listByInvoiceNext operation.
 */
export type TransactionsListByInvoiceNextResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransactionListResult;
    };
};

/**
 * Contains response data for the listByBillingAccountName operation.
 */
export type DepartmentsListByBillingAccountNameResponse = DepartmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DepartmentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DepartmentsGetResponse = Department & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Department;
    };
};

/**
 * Contains response data for the listByBillingAccountName operation.
 */
export type EnrollmentAccountsListByBillingAccountNameResponse = EnrollmentAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnrollmentAccountListResult;
    };
};

/**
 * Contains response data for the getByEnrollmentAccountId operation.
 */
export type EnrollmentAccountsGetByEnrollmentAccountIdResponse = EnrollmentAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnrollmentAccount;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type InvoicesListByBillingAccountResponse = InvoiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceListResult;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type InvoicesListByBillingProfileResponse = InvoiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type InvoicesGetResponse = Invoice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Invoice;
    };
};

/**
 * Contains response data for the listByBillingSubscription operation.
 */
export type InvoicesListByBillingSubscriptionResponse = InvoiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceListResult;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type InvoicesGetByIdResponse = Invoice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Invoice;
    };
};

/**
 * Contains response data for the listByBillingSubscriptionNext operation.
 */
export type InvoicesListByBillingSubscriptionNextResponse = InvoiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InvoiceListResult;
    };
};

/**
 * Contains response data for the download operation.
 */
export type PriceSheetDownloadResponse = DownloadUrl & PriceSheetDownloadHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PriceSheetDownloadHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DownloadUrl;
    };
};

/**
 * Contains response data for the downloadByBillingProfile operation.
 */
export type PriceSheetDownloadByBillingProfileResponse = DownloadUrl & PriceSheetDownloadByBillingProfileHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PriceSheetDownloadByBillingProfileHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DownloadUrl;
    };
};

/**
 * Contains response data for the getByBillingProfile operation.
 */
export type PoliciesGetByBillingProfileResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Policy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PoliciesUpdateResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Policy;
    };
};

/**
 * Contains response data for the getByCustomer operation.
 */
export type PoliciesGetByCustomerResponse = CustomerPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomerPolicy;
    };
};

/**
 * Contains response data for the updateCustomer operation.
 */
export type PoliciesUpdateCustomerResponse = CustomerPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomerPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BillingPropertyGetResponse = BillingProperty & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProperty;
    };
};

/**
 * Contains response data for the initiate operation.
 */
export type TransfersInitiateResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetails;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TransfersGetResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetails;
    };
};

/**
 * Contains response data for the cancel operation.
 */
export type TransfersCancelResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetails;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TransfersListResponse = TransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetailsListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TransfersListNextResponse = TransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetailsListResult;
    };
};

/**
 * Contains response data for the initiate operation.
 */
export type PartnerTransfersInitiateResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetails;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PartnerTransfersGetResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetails;
    };
};

/**
 * Contains response data for the cancel operation.
 */
export type PartnerTransfersCancelResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetails;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PartnerTransfersListResponse = TransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetailsListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PartnerTransfersListNextResponse = TransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransferDetailsListResult;
    };
};

/**
 * Contains response data for the accept operation.
 */
export type RecipientTransfersAcceptResponse = RecipientTransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientTransferDetails;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type RecipientTransfersValidateResponse = ValidateTransferListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateTransferListResponse;
    };
};

/**
 * Contains response data for the decline operation.
 */
export type RecipientTransfersDeclineResponse = RecipientTransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientTransferDetails;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecipientTransfersGetResponse = RecipientTransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientTransferDetails;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RecipientTransfersListResponse = RecipientTransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientTransferDetailsListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RecipientTransfersListNextResponse = RecipientTransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientTransferDetailsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the getByBillingAccount operation.
 */
export type BillingRoleDefinitionsGetByBillingAccountResponse = BillingRoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleDefinition;
    };
};

/**
 * Contains response data for the getByInvoiceSection operation.
 */
export type BillingRoleDefinitionsGetByInvoiceSectionResponse = BillingRoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleDefinition;
    };
};

/**
 * Contains response data for the getByBillingProfile operation.
 */
export type BillingRoleDefinitionsGetByBillingProfileResponse = BillingRoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleDefinition;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingRoleDefinitionsListByBillingAccountResponse = BillingRoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleDefinitionListResult;
    };
};

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type BillingRoleDefinitionsListByInvoiceSectionResponse = BillingRoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleDefinitionListResult;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type BillingRoleDefinitionsListByBillingProfileResponse = BillingRoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleDefinitionListResult;
    };
};

/**
 * Contains response data for the getByBillingAccount operation.
 */
export type BillingRoleAssignmentsGetByBillingAccountResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the deleteByBillingAccount operation.
 */
export type BillingRoleAssignmentsDeleteByBillingAccountResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the getByInvoiceSection operation.
 */
export type BillingRoleAssignmentsGetByInvoiceSectionResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the deleteByInvoiceSection operation.
 */
export type BillingRoleAssignmentsDeleteByInvoiceSectionResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the getByBillingProfile operation.
 */
export type BillingRoleAssignmentsGetByBillingProfileResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the deleteByBillingProfile operation.
 */
export type BillingRoleAssignmentsDeleteByBillingProfileResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingRoleAssignmentsListByBillingAccountResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignmentListResult;
    };
};

/**
 * Contains response data for the addByBillingAccount operation.
 */
export type BillingRoleAssignmentsAddByBillingAccountResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type BillingRoleAssignmentsListByInvoiceSectionResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignmentListResult;
    };
};

/**
 * Contains response data for the addByInvoiceSection operation.
 */
export type BillingRoleAssignmentsAddByInvoiceSectionResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type BillingRoleAssignmentsListByBillingProfileResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignmentListResult;
    };
};

/**
 * Contains response data for the addByBillingProfile operation.
 */
export type BillingRoleAssignmentsAddByBillingProfileResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type AgreementsListByBillingAccountResponse = AgreementListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgreementListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AgreementsGetResponse = Agreement & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Agreement;
    };
};
