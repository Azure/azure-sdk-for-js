/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { DataProtectionClientContext } from "./dataProtectionClientContext";


class DataProtectionClient extends DataProtectionClientContext {
  // Operation groups
  backupVaults: operations.BackupVaults;
  operationResult: operations.OperationResult;
  operationStatus: operations.OperationStatus;
  backupVaultOperationResults: operations.BackupVaultOperationResults;
  dataProtection: operations.DataProtection;
  dataProtectionOperations: operations.DataProtectionOperations;
  backupPolicies: operations.BackupPolicies;
  backupInstances: operations.BackupInstances;
  recoveryPoints: operations.RecoveryPoints;
  jobs: operations.Jobs;
  restorableTimeRanges: operations.RestorableTimeRanges;
  exportJobs: operations.ExportJobs;
  exportJobsOperationResult: operations.ExportJobsOperationResult;

  /**
   * Initializes a new instance of the DataProtectionClient class.
   * @param credentials Credentials needed for the client to connect to Azure. Credentials
   * implementing the TokenCredential interface from the @azure/identity package are recommended. For
   * more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param subscriptionId The subscription Id.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.DataProtectionClientOptions) {
    super(credentials, subscriptionId, options);
    this.backupVaults = new operations.BackupVaults(this);
    this.operationResult = new operations.OperationResult(this);
    this.operationStatus = new operations.OperationStatus(this);
    this.backupVaultOperationResults = new operations.BackupVaultOperationResults(this);
    this.dataProtection = new operations.DataProtection(this);
    this.dataProtectionOperations = new operations.DataProtectionOperations(this);
    this.backupPolicies = new operations.BackupPolicies(this);
    this.backupInstances = new operations.BackupInstances(this);
    this.recoveryPoints = new operations.RecoveryPoints(this);
    this.jobs = new operations.Jobs(this);
    this.restorableTimeRanges = new operations.RestorableTimeRanges(this);
    this.exportJobs = new operations.ExportJobs(this);
    this.exportJobsOperationResult = new operations.ExportJobsOperationResult(this);
  }
}

// Operation Specifications

export {
  DataProtectionClient,
  DataProtectionClientContext,
  Models as DataProtectionModels,
  Mappers as DataProtectionMappers
};
export * from "./operations";
