/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Contains the possible cases for DeleteOption.
 */
export type DeleteOptionUnion = DeleteOption | AbsoluteDeleteOption;

/**
 * Delete Option
 * @summary DeleteOption
 */
export interface DeleteOption {
  /**
   * Polymorphic Discriminator
   */
  objectType: "DeleteOption";
  /**
   * Duration of deletion after given timespan
   */
  duration: string;
}

/**
 * Delete option with duration
 * @summary AbsoluteDeleteOption
 */
export interface AbsoluteDeleteOption {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AbsoluteDeleteOption";
  /**
   * Duration of deletion after given timespan
   */
  duration: string;
}

/**
 * Adhoc backup trigger option
 * @summary AdhocBackupTriggerOption
 */
export interface AdhocBackupTriggerOption {
  retentionTagOverride?: string;
}

/**
 * Adhoc backup rules
 * @summary AdHocBackupRuleOptions
 */
export interface AdHocBackupRuleOptions {
  ruleName: string;
  triggerOption: AdhocBackupTriggerOption;
}

/**
 * Retention tag
 * @summary RetentionTag
 */
export interface RetentionTag {
  /**
   * Retention Tag version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly eTag?: string;
  /**
   * Retention Tag version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Retention Tag Name to relate it to retention rule.
   */
  tagName: string;
}

/**
 * Adhoc backup tagging criteria
 * @summary AdhocBasedTaggingCriteria
 */
export interface AdhocBasedTaggingCriteria {
  /**
   * Retention tag information
   */
  tagInfo?: RetentionTag;
}

/**
 * Contains the possible cases for TriggerContext.
 */
export type TriggerContextUnion = TriggerContext | AdhocBasedTriggerContext | ScheduleBasedTriggerContext;

/**
 * Trigger context
 * @summary TriggerContext
 */
export interface TriggerContext {
  /**
   * Polymorphic Discriminator
   */
  objectType: "TriggerContext";
}

/**
 * Adhoc trigger context
 * @summary AdhocBasedTriggerContext
 */
export interface AdhocBasedTriggerContext {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AdhocBasedTriggerContext";
  /**
   * Tagging Criteria containing retention tag for adhoc backup.
   */
  taggingCriteria: AdhocBasedTaggingCriteria;
}

/**
 * RecoveryPoint datastore details
 * @summary RecoveryPointDataStoreDetails
 */
export interface RecoveryPointDataStoreDetails {
  creationTime?: Date;
  expiryTime?: Date;
  id?: string;
  metaData?: string;
  state?: string;
  type?: string;
  visible?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rehydrationExpiryTime?: Date;
  /**
   * Possible values include: 'CREATE_IN_PROGRESS', 'COMPLETED', 'DELETE_IN_PROGRESS', 'DELETED',
   * 'FAILED'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rehydrationStatus?: RehydrationStatus;
}

/**
 * Contains the possible cases for AzureBackupRecoveryPoint.
 */
export type AzureBackupRecoveryPointUnion = AzureBackupRecoveryPoint | AzureBackupDiscreteRecoveryPoint;

/**
 * Azure backup recoveryPoint
 * @summary AzureBackupRecoveryPoint
 */
export interface AzureBackupRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureBackupRecoveryPoint";
}

/**
 * Azure backup discrete RecoveryPoint
 * @summary AzureBackupDiscreteRecoveryPoint
 */
export interface AzureBackupDiscreteRecoveryPoint {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureBackupDiscreteRecoveryPoint";
  friendlyName?: string;
  recoveryPointDataStoresDetails?: RecoveryPointDataStoreDetails[];
  recoveryPointTime: Date;
  recoveryPointType?: string;
  retentionTagName?: string;
  retentionTagVersion?: string;
}

/**
 * Inner Error
 * @summary InnerError
 */
export interface InnerError {
  /**
   * Any Key value pairs that can be provided to the client for additional  verbose information.
   */
  additionalInfo?: { [propertyName: string]: string };
  /**
   * Unique code for this error
   */
  code?: string;
  /**
   * Child Inner Error, to allow Nesting.
   */
  embeddedInnerError?: InnerError;
}

/**
 * Error object used by layers that have access to localized content, and propagate that to user
 */
export interface UserFacingError {
  /**
   * Unique code for this error
   */
  code?: string;
  /**
   * Additional related Errors
   */
  details?: UserFacingError[];
  /**
   * Inner Error
   */
  innerError?: InnerError;
  /**
   * Whether the operation will be retryable or not
   */
  isRetryable?: boolean;
  /**
   * Whether the operation is due to a user error or service error
   */
  isUserError?: boolean;
  message?: string;
  /**
   * RecommendedAction ï¿½ localized.
   */
  recommendedAction?: string[];
  /**
   * Target of the error.
   */
  target?: string;
}

/**
 * An interface representing RestoreJobRecoveryPointDetails.
 */
export interface RestoreJobRecoveryPointDetails {
  recoveryPointID?: string;
  recoveryPointTime?: Date;
}

/**
 * Details of Job's Sub Task
 */
export interface JobSubTask {
  /**
   * Additional details of Sub Tasks
   */
  additionalDetails?: { [propertyName: string]: string };
  /**
   * Task Id of the Sub Task
   */
  taskId: number;
  /**
   * Name of the Sub Task
   */
  taskName: string;
  /**
   * Progress of the Sub Task
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly taskProgress?: string;
  /**
   * Status of the Sub Task
   */
  taskStatus: string;
}

/**
 * Extended Information about the job
 */
export interface JobExtendedInfo {
  /**
   * Job's Additional Details
   */
  additionalDetails?: { [propertyName: string]: string };
  /**
   * State of the Backup Instance
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupInstanceState?: string;
  /**
   * Number of bytes transferred
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataTransferredInBytes?: number;
  /**
   * Destination where restore is done
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryDestination?: string;
  /**
   * Details of the Source Recovery Point
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceRecoverPoint?: RestoreJobRecoveryPointDetails;
  /**
   * List of Sub Tasks of the job
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subTasks?: JobSubTask[];
  /**
   * Details of the Target Recovery Point
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetRecoverPoint?: RestoreJobRecoveryPointDetails;
}

/**
 * AzureBackup Job Class
 */
export interface AzureBackupJob {
  /**
   * Job Activity Id
   */
  activityID: string;
  /**
   * Name of the Backup Instance
   */
  backupInstanceFriendlyName: string;
  /**
   * ARM ID of the Backup Instance
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupInstanceId?: string;
  /**
   * ARM ID of the DataSource
   */
  dataSourceId: string;
  /**
   * Location of the DataSource
   */
  dataSourceLocation: string;
  /**
   * User Friendly Name of the DataSource
   */
  dataSourceName: string;
  /**
   * Data Source Set Name of the DataSource
   */
  dataSourceSetName: string;
  /**
   * Type of DataSource
   */
  dataSourceType: string;
  /**
   * Total run time of the job. ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly duration?: string;
  /**
   * EndTime of the job(in UTC)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * A List, detailing the errors related to the job
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDetails?: UserFacingError[];
  /**
   * Extended Information about the job
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extendedInfo?: JobExtendedInfo;
  /**
   * Indicated that whether the job is adhoc(true) or scheduled(false)
   */
  isUserTriggered: boolean;
  /**
   * It indicates the type of Job i.e. Backup:full/log/diff ;Restore:ALR/OLR;
   * Tiering:Backup/Archive ; Management:ConfigureProtection/UnConfigure
   */
  operation: string;
  /**
   * It indicates the type of Job i.e. Backup/Restore/Tiering/Management. Possible values include:
   * 'Backup', 'Restore', 'Management', 'Tiering'
   */
  operationCategory: JobOperationCategory;
  /**
   * ARM ID of the policy
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyId?: string;
  /**
   * Name of the policy
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyName?: string;
  /**
   * Indicated whether progress is enabled for the job
   */
  progressEnabled: boolean;
  /**
   * Url which contains job's progress
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly progressUrl?: string;
  /**
   * It indicates the sub type of operation i.e. in case of Restore it can be ALR/OLR
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restoreType?: string;
  /**
   * Resource Group Name of the Datasource
   */
  sourceResourceGroup: string;
  /**
   * SubscriptionId corresponding to the DataSource
   */
  sourceSubscriptionID: string;
  /**
   * StartTime of the job(in UTC)
   */
  startTime: Date;
  /**
   * Status of the job like InProgress/Success/Failed/Cancelled/SuccessWithWarning
   */
  status: string;
  /**
   * Subscription Id of the corresponding backup vault
   */
  subscriptionId: string;
  /**
   * List of supported actions
   */
  supportedActions: string[];
  /**
   * Name of the vault
   */
  vaultName: string;
}

/**
 * Resource class
 * @summary DppResource
 */
export interface DppResource extends BaseResource {
  /**
   * Resource Id represents the complete path to the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name associated with the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  systemData?: SystemData;
}

/**
 * AzureBackup Job Resource Class
 */
export interface AzureBackupJobResource extends DppResource {
  /**
   * AzureBackupJobResource properties
   */
  properties?: AzureBackupJob;
}

/**
 * Contains the possible cases for BackupParameters.
 */
export type BackupParametersUnion = BackupParameters | AzureBackupParams;

/**
 * BackupParameters base
 * @summary BackupParameters
 */
export interface BackupParameters {
  /**
   * Polymorphic Discriminator
   */
  objectType: "BackupParameters";
}

/**
 * Azure backup parameters
 * @summary AzureBackupParams
 */
export interface AzureBackupParams {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureBackupParams";
  /**
   * BackupType ; Full/Incremental etc
   */
  backupType: string;
}

/**
 * Contains the possible cases for AzureBackupRestoreRequest.
 */
export type AzureBackupRestoreRequestUnion = AzureBackupRestoreRequest | AzureBackupRecoveryPointBasedRestoreRequestUnion;

/**
 * Azure backup restore request
 * @summary AzureBackupRestoreRequest
 */
export interface AzureBackupRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureBackupRestoreRequest";
  /**
   * Gets or sets the restore target information.
   */
  restoreTargetInfo: RestoreTargetInfoBaseUnion;
  /**
   * Gets or sets the type of the source data store. Possible values include: 'ArchiveStore',
   * 'SnapshotStore', 'VaultStore'
   */
  sourceDataStoreType: SourceDataStoreType;
}

/**
 * Contains the possible cases for AzureBackupRecoveryPointBasedRestoreRequest.
 */
export type AzureBackupRecoveryPointBasedRestoreRequestUnion = AzureBackupRecoveryPointBasedRestoreRequest | AzureBackupRestoreWithRehydrationRequest;

/**
 * Azure backup recoveryPoint based restore request
 * @summary AzureBackupRecoveryPointBasedRestoreRequest
 */
export interface AzureBackupRecoveryPointBasedRestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureBackupRecoveryPointBasedRestoreRequest";
  /**
   * Gets or sets the restore target information.
   */
  restoreTargetInfo: RestoreTargetInfoBaseUnion;
  /**
   * Gets or sets the type of the source data store. Possible values include: 'ArchiveStore',
   * 'SnapshotStore', 'VaultStore'
   */
  sourceDataStoreType: SourceDataStoreType;
  recoveryPointId: string;
}

/**
 * Azure backup recoveryPoint resource
 * @summary AzureBackupRecoveryPointResource
 */
export interface AzureBackupRecoveryPointResource extends DppResource {
  /**
   * Polymorphic Discriminator
   */
  objectType: string;
}

/**
 * Azure Backup Rehydrate Request
 * @summary AzureBackupRehydrationRequest
 */
export interface AzureBackupRehydrationRequest {
  /**
   * Id of the recovery point to be recovered
   */
  recoveryPointId: string;
  /**
   * Priority to be used for rehydration. Values High or Standard. Possible values include:
   * 'Invalid', 'High', 'Standard'
   */
  rehydrationPriority?: RehydrationPriority;
  /**
   * Retention duration in ISO 8601 format i.e P10D .
   */
  rehydrationRetentionDuration: string;
}

/**
 * Contains the possible cases for RestoreTargetInfoBase.
 */
export type RestoreTargetInfoBaseUnion = RestoreTargetInfoBase | RestoreFilesTargetInfo | RestoreTargetInfo;

/**
 * Base class common to RestoreTargetInfo and RestoreFilesTargetInfo
 */
export interface RestoreTargetInfoBase {
  /**
   * Polymorphic Discriminator
   */
  objectType: "RestoreTargetInfoBase";
  /**
   * Target Restore region
   */
  restoreLocation?: string;
}

/**
 * AzureBackup Restore with Rehydration Request
 * @summary AzureBackupRestoreWithRehydrationRequest
 */
export interface AzureBackupRestoreWithRehydrationRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureBackupRestoreWithRehydrationRequest";
  /**
   * Gets or sets the restore target information.
   */
  restoreTargetInfo: RestoreTargetInfoBaseUnion;
  /**
   * Gets or sets the type of the source data store. Possible values include: 'ArchiveStore',
   * 'SnapshotStore', 'VaultStore'
   */
  sourceDataStoreType: SourceDataStoreType;
  recoveryPointId: string;
  /**
   * Priority to be used for rehydration. Values High or Standard. Possible values include:
   * 'Invalid', 'High', 'Standard'
   */
  rehydrationPriority: RehydrationPriority;
  /**
   * Retention duration in ISO 8601 format i.e P10D .
   */
  rehydrationRetentionDuration: string;
}

/**
 * DataStoreInfo base
 * @summary DataStoreInfoBase
 */
export interface DataStoreInfoBase {
  /**
   * type of datastore; Operational/Vault/Archive. Possible values include: 'OperationalStore',
   * 'VaultStore', 'ArchiveStore'
   */
  dataStoreType: DataStoreTypes;
  /**
   * Type of Datasource object, used to initialize the right inherited type
   */
  objectType: string;
}

/**
 * Contains the possible cases for BasePolicyRule.
 */
export type BasePolicyRuleUnion = BasePolicyRule | AzureBackupRule | AzureRetentionRule;

/**
 * BasePolicy Rule
 * @summary BasePolicyRule
 */
export interface BasePolicyRule {
  /**
   * Polymorphic Discriminator
   */
  objectType: "BasePolicyRule";
  name: string;
}

/**
 * Azure backup rule
 * @summary AzureBackupRule
 */
export interface AzureBackupRule {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureBackupRule";
  name: string;
  backupParameters?: BackupParametersUnion;
  dataStore: DataStoreInfoBase;
  trigger: TriggerContextUnion;
}

/**
 * Contains the possible cases for DataStoreParameters.
 */
export type DataStoreParametersUnion = DataStoreParameters | AzureOperationalStoreParameters;

/**
 * Parameters for DataStore
 */
export interface DataStoreParameters {
  /**
   * Polymorphic Discriminator
   */
  objectType: "DataStoreParameters";
  /**
   * type of datastore; Operational/Vault/Archive. Possible values include: 'OperationalStore',
   * 'VaultStore', 'ArchiveStore'
   */
  dataStoreType: DataStoreTypes;
}

/**
 * Parameters for Operational-Tier DataStore
 */
export interface AzureOperationalStoreParameters {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureOperationalStoreParameters";
  /**
   * type of datastore; Operational/Vault/Archive. Possible values include: 'OperationalStore',
   * 'VaultStore', 'ArchiveStore'
   */
  dataStoreType: DataStoreTypes;
  /**
   * Gets or sets the Resource Group Uri.
   */
  resourceGroupId?: string;
}

/**
 * Contains the possible cases for CopyOption.
 */
export type CopyOptionUnion = CopyOption | CopyOnExpiryOption | CustomCopyOption | ImmediateCopyOption;

/**
 * Options to copy
 * @summary CopyOption
 */
export interface CopyOption {
  /**
   * Polymorphic Discriminator
   */
  objectType: "CopyOption";
}

/**
 * Target copy settings
 * @summary TargetCopySetting
 */
export interface TargetCopySetting {
  /**
   * It can be CustomCopyOption or ImmediateCopyOption.
   */
  copyAfter: CopyOptionUnion;
  /**
   * Info of target datastore
   */
  dataStore: DataStoreInfoBase;
}

/**
 * Source LifeCycle
 * @summary SourceLifeCycle
 */
export interface SourceLifeCycle {
  deleteAfter: DeleteOptionUnion;
  sourceDataStore: DataStoreInfoBase;
  targetDataStoreCopySettings?: TargetCopySetting[];
}

/**
 * Azure retention rule
 * @summary AzureRetentionRule
 */
export interface AzureRetentionRule {
  /**
   * Polymorphic Discriminator
   */
  objectType: "AzureRetentionRule";
  name: string;
  isDefault?: boolean;
  lifecycles: SourceLifeCycle[];
}

/**
 * Contains the possible cases for BackupCriteria.
 */
export type BackupCriteriaUnion = BackupCriteria | ScheduleBasedBackupCriteria;

/**
 * BackupCriteria base class
 * @summary BackupCriteria
 */
export interface BackupCriteria {
  /**
   * Polymorphic Discriminator
   */
  objectType: "BackupCriteria";
}

/**
 * Datasource to be backed up
 * @summary Datasource
 */
export interface Datasource {
  /**
   * DatasourceType of the resource.
   */
  datasourceType?: string;
  /**
   * Type of Datasource object, used to initialize the right inherited type
   */
  objectType?: string;
  /**
   * Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources,
   * this will be the ID created by backup service via Fabric/Vault.
   */
  resourceID: string;
  /**
   * Location of datasource.
   */
  resourceLocation?: string;
  /**
   * Unique identifier of the resource in the context of parent.
   */
  resourceName?: string;
  /**
   * Resource Type of Datasource.
   */
  resourceType?: string;
  /**
   * Uri of the resource.
   */
  resourceUri?: string;
}

/**
 * DatasourceSet details of datasource to be backed up
 * @summary DatasourceSet
 */
export interface DatasourceSet {
  /**
   * DatasourceType of the resource.
   */
  datasourceType?: string;
  /**
   * Type of Datasource object, used to initialize the right inherited type
   */
  objectType?: string;
  /**
   * Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources,
   * this will be the ID created by backup service via Fabric/Vault.
   */
  resourceID: string;
  /**
   * Location of datasource.
   */
  resourceLocation?: string;
  /**
   * Unique identifier of the resource in the context of parent.
   */
  resourceName?: string;
  /**
   * Resource Type of Datasource.
   */
  resourceType?: string;
  /**
   * Uri of the resource.
   */
  resourceUri?: string;
}

/**
 * Parameters in Policy
 */
export interface PolicyParameters {
  /**
   * Gets or sets the DataStore Parameters
   */
  dataStoreParametersList?: DataStoreParametersUnion[];
}

/**
 * Policy Info in backupInstance
 * @summary PolicyInfo
 */
export interface PolicyInfo {
  policyId: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyVersion?: string;
  /**
   * Policy parameters for the backup instance
   */
  policyParameters?: PolicyParameters;
}

/**
 * Protection status details
 * @summary ProtectionStatusDetails
 */
export interface ProtectionStatusDetails {
  /**
   * Specifies the protection status error of the resource
   */
  errorDetails?: UserFacingError;
  /**
   * Specifies the protection status of the resource. Possible values include:
   * 'ConfiguringProtection', 'ConfiguringProtectionFailed', 'ProtectionConfigured',
   * 'ProtectionStopped', 'SoftDeleted', 'SoftDeleting'
   */
  status?: Status;
}

/**
 * Backup instance
 * @summary BackupInstance
 */
export interface BackupInstance {
  /**
   * Gets or sets the data source information.
   */
  dataSourceInfo: Datasource;
  /**
   * Gets or sets the data source set information.
   */
  dataSourceSetInfo?: DatasourceSet;
  objectType?: string;
  /**
   * Gets or sets the policy information.
   */
  policyInfo: PolicyInfo;
  /**
   * Specifies the protection status of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly protectionStatus?: ProtectionStatusDetails;
  /**
   * Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * BackupInstance Resource
 * @summary BackupInstanceResource
 */
export interface BackupInstanceResource extends DppResource {
  /**
   * Gets or sets the data source information.
   */
  dataSourceInfo: Datasource;
  /**
   * Gets or sets the data source set information.
   */
  dataSourceSetInfo?: DatasourceSet;
  objectType?: string;
  /**
   * Gets or sets the policy information.
   */
  policyInfo: PolicyInfo;
  /**
   * Specifies the protection status of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly protectionStatus?: ProtectionStatusDetails;
  /**
   * Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * Contains the possible cases for BaseBackupPolicy.
 */
export type BaseBackupPolicyUnion = BaseBackupPolicy | BackupPolicy;

/**
 * BackupPolicy base
 * @summary BaseBackupPolicy
 */
export interface BaseBackupPolicy {
  /**
   * Polymorphic Discriminator
   */
  objectType: "BaseBackupPolicy";
  /**
   * Type of datasource for the backup management
   */
  datasourceTypes: string[];
}

/**
 * Rule based backup policy
 * @summary BackupPolicy
 */
export interface BackupPolicy {
  /**
   * Polymorphic Discriminator
   */
  objectType: "BackupPolicy";
  /**
   * Type of datasource for the backup management
   */
  datasourceTypes: string[];
  /**
   * Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
   */
  policyRules: BasePolicyRuleUnion[];
}

/**
 * Schedule for backup
 * @summary BackupSchedule
 */
export interface BackupSchedule {
  /**
   * ISO 8601 repeating time interval format
   */
  repeatingTimeIntervals: string[];
}

/**
 * Storage setting
 * @summary StorageSetting
 */
export interface StorageSetting {
  /**
   * Gets or sets the type of the datastore. Possible values include: 'ArchiveStore',
   * 'SnapshotStore', 'VaultStore'
   */
  dataStoreType?: StorageSettingStoreTypes;
  /**
   * Gets or sets the type. Possible values include: 'GeoRedundant', 'LocallyRedundant'
   */
  type?: StorageSettingTypes;
}

/**
 * An interface representing DppTrackedResource.
 */
export interface DppTrackedResource extends BaseResource {
  /**
   * Optional ETag.
   */
  eTag?: string;
  /**
   * Resource Id represents the complete path to the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Input Managed Identity Details
   */
  identity?: DppIdentityDetails;
  /**
   * Resource location.
   */
  location?: string;
  /**
   * Resource name associated with the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  systemData?: SystemData;
}

/**
 * Backup Vault Resource
 * @summary BackupVault Resource
 */
export interface BackupVaultResource extends DppTrackedResource {
  /**
   * Provisioning state of the BackupVault resource. Possible values include: 'Failed',
   * 'Provisioning', 'Succeeded', 'Unknown', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Storage Settings
   */
  storageSettings?: StorageSetting[];
}

/**
 * BaseBackupPolicy resource
 * @summary BaseBackupPolicyResource
 */
export interface BaseBackupPolicyResource extends DppResource {
  /**
   * Type of datasource for the backup management
   */
  datasourceTypes: string[];
  /**
   * Polymorphic Discriminator
   */
  objectType: string;
}

/**
 * CheckNameAvailability Request
 * @summary CheckNameAvailabilityRequest
 */
export interface CheckNameAvailabilityRequest {
  /**
   * Resource name for which availability needs to be checked
   */
  name?: string;
  /**
   * Describes the Resource type: Microsoft.DataProtection/BackupVaults
   */
  type?: string;
}

/**
 * CheckNameAvailability Result
 * @summary CheckNameAvailabilityResult
 */
export interface CheckNameAvailabilityResult {
  /**
   * Gets or sets the message.
   */
  message?: string;
  /**
   * Gets or sets a value indicating whether [name available].
   */
  nameAvailable?: boolean;
  /**
   * Gets or sets the reason.
   */
  reason?: string;
}

/**
 * Localized display information of an operation.
 * @summary ClientDiscoveryDisplay
 */
export interface ClientDiscoveryDisplay {
  /**
   * Description of the operation having details of what operation is about.
   */
  description?: string;
  /**
   * Operations Name itself.
   */
  operation?: string;
  /**
   * Name of the provider for display purposes
   */
  provider?: string;
  /**
   * ResourceType for which this Operation can be performed.
   */
  resource?: string;
}

/**
 * Class to represent shoebox log specification in json client discovery.
 * @summary ClientDiscoveryForLogSpecification
 */
export interface ClientDiscoveryForLogSpecification {
  /**
   * blob duration of shoebox log specification
   */
  blobDuration?: string;
  /**
   * Localized display name
   */
  displayName?: string;
  /**
   * Name for shoebox log specification.
   */
  name?: string;
}

/**
 * Class to represent shoebox service specification in json client discovery.
 * @summary ClientDiscoveryForServiceSpecification
 */
export interface ClientDiscoveryForServiceSpecification {
  /**
   * List of log specifications of this operation.
   */
  logSpecifications?: ClientDiscoveryForLogSpecification[];
}

/**
 * Available operation details.
 * @summary ClientDiscoveryValueForSingleApi
 */
export interface ClientDiscoveryValueForSingleApi {
  /**
   * Contains the localized display information for this particular operation
   */
  display?: ClientDiscoveryDisplay;
  /**
   * Name of the Operation.
   */
  name?: string;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction?: boolean;
  /**
   * The intended executor of the operation;governs the display of the operation in the RBAC UX and
   * the audit logs UX
   */
  origin?: string;
  /**
   * Operation properties.
   */
  serviceSpecification?: ClientDiscoveryForServiceSpecification;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource management error response.
 */
export interface ErrorModel {
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorModel[];
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
}

/**
 * Copy on Expiry Option
 * @summary CopyOnExpiryOption
 */
export interface CopyOnExpiryOption {
  /**
   * Polymorphic Discriminator
   */
  objectType: "CopyOnExpiryOption";
}

/**
 * Duration based custom options to copy
 * @summary CustomCopyOption
 */
export interface CustomCopyOption {
  /**
   * Polymorphic Discriminator
   */
  objectType: "CustomCopyOption";
  /**
   * Data copied after given timespan
   */
  duration?: string;
}

/**
 * Day of the week
 * @summary Day
 */
export interface Day {
  /**
   * Date of the month
   */
  date?: number;
  /**
   * Whether Date is last date of month
   */
  isLast?: boolean;
}

/**
 * Identity details
 * @summary DppIdentityDetails
 */
export interface DppIdentityDetails {
  /**
   * The object ID of the service principal object for the managed identity that is used to grant
   * role-based access to an Azure resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is
   * now a member.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The identityType which can be either SystemAssigned or None
   */
  type?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The type of identity that last modified the resource.
   */
  lastModifiedAt?: Date;
}

/**
 * ListResource
 * @summary List Resource
 */
export interface DppResourceList {
  /**
   * The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.
   */
  nextLink?: string;
}

/**
 * An interface representing DppTrackedResourceList.
 */
export interface DppTrackedResourceList {
  /**
   * The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.
   */
  nextLink?: string;
}

/**
 * The result for export jobs containing blob details.
 * @summary ExportJobsResult
 */
export interface ExportJobsResult {
  /**
   * URL of the blob into which the serialized string of list of jobs is exported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly blobUrl?: string;
  /**
   * SAS key to access the blob.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly blobSasKey?: string;
  /**
   * URL of the blob into which the ExcelFile is uploaded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly excelFileBlobUrl?: string;
  /**
   * SAS key to access the ExcelFile blob.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly excelFileBlobSasKey?: string;
}

/**
 * Contains the possible cases for FeatureValidationRequestBase.
 */
export type FeatureValidationRequestBaseUnion = FeatureValidationRequestBase | FeatureValidationRequest;

/**
 * Base class for Backup Feature support
 */
export interface FeatureValidationRequestBase {
  /**
   * Polymorphic Discriminator
   */
  objectType: "FeatureValidationRequestBase";
}

/**
 * Base class for feature object
 */
export interface FeatureValidationRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: "FeatureValidationRequest";
  /**
   * backup support feature type. Possible values include: 'Invalid', 'DataSourceType'
   */
  featureType?: FeatureType;
  /**
   * backup support feature name.
   */
  featureName?: string;
}

/**
 * Elements class for feature request
 */
export interface SupportedFeature {
  /**
   * support feature type.
   */
  featureName?: string;
  /**
   * feature support status. Possible values include: 'Invalid', 'NotSupported', 'AlphaPreview',
   * 'PrivatePreview', 'PublicPreview', 'GenerallyAvailable'
   */
  supportStatus?: FeatureSupportStatus;
  /**
   * support feature type.
   */
  exposureControlledFeatures?: string[];
}

/**
 * Contains the possible cases for FeatureValidationResponseBase.
 */
export type FeatureValidationResponseBaseUnion = FeatureValidationResponseBase | FeatureValidationResponse;

/**
 * Base class for Backup Feature support
 */
export interface FeatureValidationResponseBase {
  /**
   * Polymorphic Discriminator
   */
  objectType: "FeatureValidationResponseBase";
}

/**
 * Feature Validation Response
 */
export interface FeatureValidationResponse {
  /**
   * Polymorphic Discriminator
   */
  objectType: "FeatureValidationResponse";
  /**
   * backup support feature type. Possible values include: 'Invalid', 'DataSourceType'
   */
  featureType?: FeatureType;
  /**
   * Response features
   */
  features?: SupportedFeature[];
}

/**
 * Immediate copy Option
 * @summary ImmediateCopyOption
 */
export interface ImmediateCopyOption {
  /**
   * Polymorphic Discriminator
   */
  objectType: "ImmediateCopyOption";
}

/**
 * Operation Extended Info
 * @summary OperationExtendedInfo
 */
export interface OperationExtendedInfo {
  /**
   * This property will be used as the discriminator for deciding the specific types in the
   * polymorphic chain of types.
   */
  objectType?: string;
}

/**
 * Operation Job Extended Info
 * @summary OperationJobExtendedInfo
 */
export interface OperationJobExtendedInfo extends OperationExtendedInfo {
  /**
   * Arm Id of the job created for this operation.
   */
  jobId?: string;
}

/**
 * Operation Resource
 * @summary OperationResource
 */
export interface OperationResource {
  /**
   * End time of the operation
   */
  endTime?: Date;
  /**
   * Required if status == failed or status == canceled. This is the OData v4 error format, used by
   * the RPC and will go into the v2.2 Azure REST API guidelines.
   * The full set of optional properties (e.g. inner errors / details) can be found in the "Error
   * Response" section.
   */
  error?: ErrorModel;
  /**
   * It should match what is used to GET the operation result
   */
  id?: string;
  /**
   * It must match the last segment of the "id" field, and will typically be a GUID / system
   * generated value
   */
  name?: string;
  /**
   * This property will be used as the discriminator for deciding the specific types in the
   * polymorphic chain of types.
   */
  objectType?: string;
  /**
   * Start time of the operation
   */
  startTime?: Date;
  status?: string;
}

/**
 * Patch Request content for Microsoft.DataProtection resources
 * @summary PatchResourceRequestInput
 */
export interface PatchResourceRequestInput {
  /**
   * Input Managed Identity Details
   */
  identity?: DppIdentityDetails;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Class encapsulating target details, used where the destination is not a datasource
 */
export interface TargetDetails {
  /**
   * Restore operation may create multiple files inside location pointed by Url
   * Below will be the common prefix for all of them
   */
  filePrefix: string;
  /**
   * Denotes the target location where the data will be restored,
   * string value for the enum
   * {Microsoft.Internal.AzureBackup.DataProtection.Common.Interface.RestoreTargetLocationType}.
   * Possible values include: 'Invalid', 'AzureBlobs', 'AzureFiles'
   */
  restoreTargetLocationType: RestoreTargetLocationType;
  /**
   * Url denoting the restore destination. It can point to container / file share etc
   */
  url: string;
}

/**
 * Class encapsulating restore as files target parameters
 */
export interface RestoreFilesTargetInfo {
  /**
   * Polymorphic Discriminator
   */
  objectType: "RestoreFilesTargetInfo";
  /**
   * Target Restore region
   */
  restoreLocation?: string;
  /**
   * Destination of RestoreAsFiles operation, when destination is not a datasource
   */
  targetDetails: TargetDetails;
}

/**
 * Class encapsulating restore target parameters
 */
export interface RestoreTargetInfo {
  /**
   * Polymorphic Discriminator
   */
  objectType: "RestoreTargetInfo";
  /**
   * Target Restore region
   */
  restoreLocation?: string;
  /**
   * Information of target DS
   */
  datasourceInfo: Datasource;
  /**
   * Information of target DS Set
   */
  datasourceSetInfo?: DatasourceSet;
}

/**
 * Schedule based backup criteria
 * @summary ScheduleBasedBackupCriteria
 */
export interface ScheduleBasedBackupCriteria {
  /**
   * Polymorphic Discriminator
   */
  objectType: "ScheduleBasedBackupCriteria";
  /**
   * it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
   * and should be part of AbsoluteMarker enum
   */
  absoluteCriteria?: AbsoluteMarker[];
  /**
   * This is day of the month from 1 to 28 other wise last of month
   */
  daysOfMonth?: Day[];
  /**
   * It should be Sunday/Monday/T..../Saturday
   */
  daysOfTheWeek?: DayOfWeek[];
  /**
   * It should be January/February/....../December
   */
  monthsOfYear?: Month[];
  /**
   * List of schedule times for backup
   */
  scheduleTimes?: Date[] | string[];
  /**
   * It should be First/Second/Third/Fourth/Last
   */
  weeksOfTheMonth?: WeekNumber[];
}

/**
 * Tagging criteria
 * @summary TaggingCriteria
 */
export interface TaggingCriteria {
  /**
   * Criteria which decides whether the tag can be applied to a triggered backup.
   */
  criteria?: BackupCriteriaUnion[];
  /**
   * Specifies if tag is default.
   */
  isDefault: boolean;
  /**
   * Retention Tag priority.
   */
  taggingPriority: number;
  /**
   * Retention tag information
   */
  tagInfo: RetentionTag;
}

/**
 * Schedule based trigger context
 * @summary ScheduleBasedTriggerContext
 */
export interface ScheduleBasedTriggerContext {
  /**
   * Polymorphic Discriminator
   */
  objectType: "ScheduleBasedTriggerContext";
  /**
   * Schedule for this backup
   */
  schedule: BackupSchedule;
  /**
   * List of tags that can be applicable for given schedule.
   */
  taggingCriteria: TaggingCriteria[];
}

/**
 * Trigger backup request
 * @summary TriggerBackupRequest
 */
export interface TriggerBackupRequest {
  /**
   * Name for the Rule of the Policy which needs to be applied for this backup
   */
  backupRuleOptions: AdHocBackupRuleOptions;
}

/**
 * Validate for backup request
 * @summary ValidateForBackupRequest
 */
export interface ValidateForBackupRequest {
  backupInstance: BackupInstance;
}

/**
 * Validate restore request object
 * @summary ValidateRestoreRequestObject
 */
export interface ValidateRestoreRequestObject {
  /**
   * Gets or sets the restore request object.
   */
  restoreRequestObject: AzureBackupRestoreRequestUnion;
}

/**
 * An interface representing DataProtectionClientOptions.
 */
export interface DataProtectionClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface BackupInstancesDeleteHeaders {
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  location: string;
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  azureAsyncOperation: string;
  /**
   * Suggested delay to check the status of the asynchronous operation. The value is an integer
   * that represents the seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for AdhocBackup operation.
 */
export interface BackupInstancesAdhocBackupHeaders {
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  location: string;
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  azureAsyncOperation: string;
  /**
   * Suggested delay to check the status of the asynchronous operation. The value is an integer
   * that represents the seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for ValidateForBackup operation.
 */
export interface BackupInstancesValidateForBackupHeaders {
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  location: string;
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  azureAsyncOperation: string;
  /**
   * Suggested delay to check the status of the asynchronous operation. The value is an integer
   * that represents the seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for TriggerRehydrate operation.
 */
export interface BackupInstancesTriggerRehydrateHeaders {
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  location: string;
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  azureAsyncOperation: string;
  /**
   * Suggested delay to check the status of the asynchronous operation. The value is an integer
   * that represents the seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for TriggerRestore operation.
 */
export interface BackupInstancesTriggerRestoreHeaders {
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  location: string;
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  azureAsyncOperation: string;
  /**
   * Suggested delay to check the status of the asynchronous operation. The value is an integer
   * that represents the seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for ValidateRestore operation.
 */
export interface BackupInstancesValidateRestoreHeaders {
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  location: string;
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  azureAsyncOperation: string;
  /**
   * Suggested delay to check the status of the asynchronous operation. The value is an integer
   * that represents the seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for Trigger operation.
 */
export interface ExportJobsTriggerHeaders {
  /**
   * The URL of the resource used to check the status of the asynchronous operation.
   */
  location: string;
  /**
   * Suggested delay to check the status of the asynchronous operation. The value is an integer
   * that represents the seconds.
   */
  retryAfter: number;
}

/**
 * @interface
 * List of BackupVault resources
 * @summary BackupVaultResourceList
 * @extends Array<BackupVaultResource>, DppResourceList
 */
export interface BackupVaultResourceList extends Array<BackupVaultResource>, DppResourceList {
}

/**
 * @interface
 * Operations List response which contains list of available APIs.
 * @summary ClientDiscoveryResponse
 * @extends Array<ClientDiscoveryValueForSingleApi>
 */
export interface ClientDiscoveryResponse extends Array<ClientDiscoveryValueForSingleApi> {
  /**
   * Link to the next chunk of Response.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of BaseBackupPolicy resources
 * @summary BaseBackupPolicyResourceList
 * @extends Array<BaseBackupPolicyResource>, DppResourceList
 */
export interface BaseBackupPolicyResourceList extends Array<BaseBackupPolicyResource>, DppResourceList {
}

/**
 * @interface
 * BackupInstance Resource list response
 * @summary BackupInstanceResourceList
 * @extends Array<BackupInstanceResource>, DppResourceList
 */
export interface BackupInstanceResourceList extends Array<BackupInstanceResource>, DppResourceList {
}

/**
 * @interface
 * Azure backup recoveryPoint resource list
 * @summary AzureBackupRecoveryPointResourceList
 * @extends Array<AzureBackupRecoveryPointResource>, DppResourceList
 */
export interface AzureBackupRecoveryPointResourceList extends Array<AzureBackupRecoveryPointResource>, DppResourceList {
}

/**
 * @interface
 * List of AzureBackup Job resources
 * @extends Array<AzureBackupJobResource>, DppResourceList
 */
export interface AzureBackupJobResourceList extends Array<AzureBackupJobResource>, DppResourceList {
}

/**
 * Defines values for RehydrationStatus.
 * Possible values include: 'CREATE_IN_PROGRESS', 'COMPLETED', 'DELETE_IN_PROGRESS', 'DELETED',
 * 'FAILED'
 * @readonly
 * @enum {string}
 */
export type RehydrationStatus = 'CREATE_IN_PROGRESS' | 'COMPLETED' | 'DELETE_IN_PROGRESS' | 'DELETED' | 'FAILED';

/**
 * Defines values for JobOperationCategory.
 * Possible values include: 'Backup', 'Restore', 'Management', 'Tiering'
 * @readonly
 * @enum {string}
 */
export type JobOperationCategory = 'Backup' | 'Restore' | 'Management' | 'Tiering';

/**
 * Defines values for RehydrationPriority.
 * Possible values include: 'Invalid', 'High', 'Standard'
 * @readonly
 * @enum {string}
 */
export type RehydrationPriority = 'Invalid' | 'High' | 'Standard';

/**
 * Defines values for SourceDataStoreType.
 * Possible values include: 'ArchiveStore', 'SnapshotStore', 'VaultStore'
 * @readonly
 * @enum {string}
 */
export type SourceDataStoreType = 'ArchiveStore' | 'SnapshotStore' | 'VaultStore';

/**
 * Defines values for DataStoreTypes.
 * Possible values include: 'OperationalStore', 'VaultStore', 'ArchiveStore'
 * @readonly
 * @enum {string}
 */
export type DataStoreTypes = 'OperationalStore' | 'VaultStore' | 'ArchiveStore';

/**
 * Defines values for Status.
 * Possible values include: 'ConfiguringProtection', 'ConfiguringProtectionFailed',
 * 'ProtectionConfigured', 'ProtectionStopped', 'SoftDeleted', 'SoftDeleting'
 * @readonly
 * @enum {string}
 */
export type Status = 'ConfiguringProtection' | 'ConfiguringProtectionFailed' | 'ProtectionConfigured' | 'ProtectionStopped' | 'SoftDeleted' | 'SoftDeleting';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Failed', 'Provisioning', 'Succeeded', 'Unknown', 'Updating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Failed' | 'Provisioning' | 'Succeeded' | 'Unknown' | 'Updating';

/**
 * Defines values for StorageSettingStoreTypes.
 * Possible values include: 'ArchiveStore', 'SnapshotStore', 'VaultStore'
 * @readonly
 * @enum {string}
 */
export type StorageSettingStoreTypes = 'ArchiveStore' | 'SnapshotStore' | 'VaultStore';

/**
 * Defines values for StorageSettingTypes.
 * Possible values include: 'GeoRedundant', 'LocallyRedundant'
 * @readonly
 * @enum {string}
 */
export type StorageSettingTypes = 'GeoRedundant' | 'LocallyRedundant';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for FeatureType.
 * Possible values include: 'Invalid', 'DataSourceType'
 * @readonly
 * @enum {string}
 */
export type FeatureType = 'Invalid' | 'DataSourceType';

/**
 * Defines values for FeatureSupportStatus.
 * Possible values include: 'Invalid', 'NotSupported', 'AlphaPreview', 'PrivatePreview',
 * 'PublicPreview', 'GenerallyAvailable'
 * @readonly
 * @enum {string}
 */
export type FeatureSupportStatus = 'Invalid' | 'NotSupported' | 'AlphaPreview' | 'PrivatePreview' | 'PublicPreview' | 'GenerallyAvailable';

/**
 * Defines values for RestoreTargetLocationType.
 * Possible values include: 'Invalid', 'AzureBlobs', 'AzureFiles'
 * @readonly
 * @enum {string}
 */
export type RestoreTargetLocationType = 'Invalid' | 'AzureBlobs' | 'AzureFiles';

/**
 * Defines values for AbsoluteMarker.
 * Possible values include: 'AllBackup', 'FirstOfDay', 'FirstOfMonth', 'FirstOfWeek', 'FirstOfYear'
 * @readonly
 * @enum {string}
 */
export type AbsoluteMarker = 'AllBackup' | 'FirstOfDay' | 'FirstOfMonth' | 'FirstOfWeek' | 'FirstOfYear';

/**
 * Defines values for DayOfWeek.
 * Possible values include: 'Friday', 'Monday', 'Saturday', 'Sunday', 'Thursday', 'Tuesday',
 * 'Wednesday'
 * @readonly
 * @enum {string}
 */
export type DayOfWeek = 'Friday' | 'Monday' | 'Saturday' | 'Sunday' | 'Thursday' | 'Tuesday' | 'Wednesday';

/**
 * Defines values for Month.
 * Possible values include: 'April', 'August', 'December', 'February', 'January', 'July', 'June',
 * 'March', 'May', 'November', 'October', 'September'
 * @readonly
 * @enum {string}
 */
export type Month = 'April' | 'August' | 'December' | 'February' | 'January' | 'July' | 'June' | 'March' | 'May' | 'November' | 'October' | 'September';

/**
 * Defines values for WeekNumber.
 * Possible values include: 'First', 'Fourth', 'Last', 'Second', 'Third'
 * @readonly
 * @enum {string}
 */
export type WeekNumber = 'First' | 'Fourth' | 'Last' | 'Second' | 'Third';

/**
 * Contains response data for the getResourcesInSubscription operation.
 */
export type BackupVaultsGetResourcesInSubscriptionResponse = BackupVaultResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResourceList;
    };
};

/**
 * Contains response data for the getResourcesInResourceGroup operation.
 */
export type BackupVaultsGetResourcesInResourceGroupResponse = BackupVaultResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupVaultsGetResponse = BackupVaultResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResource;
    };
};

/**
 * Contains response data for the put operation.
 */
export type BackupVaultsPutResponse = BackupVaultResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResource;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type BackupVaultsPatchResponse = BackupVaultResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResource;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type BackupVaultsCheckNameAvailabilityResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResult;
    };
};

/**
 * Contains response data for the beginPut operation.
 */
export type BackupVaultsBeginPutResponse = BackupVaultResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResource;
    };
};

/**
 * Contains response data for the beginPatch operation.
 */
export type BackupVaultsBeginPatchResponse = BackupVaultResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResource;
    };
};

/**
 * Contains response data for the getResourcesInSubscriptionNext operation.
 */
export type BackupVaultsGetResourcesInSubscriptionNextResponse = BackupVaultResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResourceList;
    };
};

/**
 * Contains response data for the getResourcesInResourceGroupNext operation.
 */
export type BackupVaultsGetResourcesInResourceGroupNextResponse = BackupVaultResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResourceList;
    };
};

/**
 * Contains response data for the getOperationStatus operation.
 */
export type GetOperationStatusResponse = OperationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResource;
    };
};

/**
 * Contains response data for the getOperationResultPatch operation.
 */
export type GetOperationResultPatchResponse = BackupVaultResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupVaultResource;
    };
};

/**
 * Contains response data for the checkFeatureSupport operation.
 */
export type CheckFeatureSupportResponse = FeatureValidationResponseBaseUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FeatureValidationResponseBaseUnion;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = ClientDiscoveryResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClientDiscoveryResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = ClientDiscoveryResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClientDiscoveryResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BackupPoliciesListResponse = BaseBackupPolicyResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BaseBackupPolicyResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupPoliciesGetResponse = BaseBackupPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BaseBackupPolicyResource;
    };
};

/**
 * Contains response data for the put operation.
 */
export type BackupPoliciesPutResponse = BaseBackupPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BaseBackupPolicyResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BackupPoliciesListNextResponse = BaseBackupPolicyResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BaseBackupPolicyResourceList;
    };
};

/**
 * Contains response data for the getBackupInstancesInVault operation.
 */
export type BackupInstancesGetBackupInstancesInVaultResponse = BackupInstanceResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupInstanceResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupInstancesGetResponse = BackupInstanceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupInstanceResource;
    };
};

/**
 * Contains response data for the put operation.
 */
export type BackupInstancesPutResponse = BackupInstanceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupInstanceResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type BackupInstancesDeleteResponse = BackupInstancesDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackupInstancesDeleteHeaders;
    };
};

/**
 * Contains response data for the adhocBackup operation.
 */
export type BackupInstancesAdhocBackupResponse = BackupInstancesAdhocBackupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackupInstancesAdhocBackupHeaders;
    };
};

/**
 * Contains response data for the validateForBackup operation.
 */
export type BackupInstancesValidateForBackupResponse = BackupInstancesValidateForBackupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackupInstancesValidateForBackupHeaders;
    };
};

/**
 * Contains response data for the triggerRehydrate operation.
 */
export type BackupInstancesTriggerRehydrateResponse = BackupInstancesTriggerRehydrateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackupInstancesTriggerRehydrateHeaders;
    };
};

/**
 * Contains response data for the triggerRestore operation.
 */
export type BackupInstancesTriggerRestoreResponse = BackupInstancesTriggerRestoreHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackupInstancesTriggerRestoreHeaders;
    };
};

/**
 * Contains response data for the validateRestore operation.
 */
export type BackupInstancesValidateRestoreResponse = BackupInstancesValidateRestoreHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackupInstancesValidateRestoreHeaders;
    };
};

/**
 * Contains response data for the beginPut operation.
 */
export type BackupInstancesBeginPutResponse = BackupInstanceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupInstanceResource;
    };
};

/**
 * Contains response data for the getBackupInstancesInVaultNext operation.
 */
export type BackupInstancesGetBackupInstancesInVaultNextResponse = BackupInstanceResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupInstanceResourceList;
    };
};

/**
 * Contains response data for the getList operation.
 */
export type RecoveryPointsGetListResponse = AzureBackupRecoveryPointResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureBackupRecoveryPointResourceList;
    };
};

/**
 * Contains response data for the getListNext operation.
 */
export type RecoveryPointsGetListNextResponse = AzureBackupRecoveryPointResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureBackupRecoveryPointResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecoveryPointGetResponse = AzureBackupRecoveryPointResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureBackupRecoveryPointResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type JobsListResponse = AzureBackupJobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureBackupJobResourceList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type JobsListNextResponse = AzureBackupJobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureBackupJobResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobGetResponse = AzureBackupJobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureBackupJobResource;
    };
};

/**
 * Contains response data for the trigger operation.
 */
export type ExportJobsTriggerResponse = ExportJobsTriggerHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ExportJobsTriggerHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExportJobsOperationResultGetResponse = ExportJobsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExportJobsResult;
    };
};
