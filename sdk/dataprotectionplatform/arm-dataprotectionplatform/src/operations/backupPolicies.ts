/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/backupPoliciesMappers";
import * as Parameters from "../models/parameters";
import { DataProtectionClientContext } from "../dataProtectionClientContext";

/** Class representing a BackupPolicies. */
export class BackupPolicies {
  private readonly client: DataProtectionClientContext;

  /**
   * Create a BackupPolicies.
   * @param {DataProtectionClientContext} client Reference to the service client.
   */
  constructor(client: DataProtectionClientContext) {
    this.client = client;
  }

  /**
   * Returns list of backup policies belonging to a backup vault
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param [options] The optional parameters
   * @returns Promise<Models.BackupPoliciesListResponse>
   */
  list(vaultName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.BackupPoliciesListResponse>;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param callback The callback
   */
  list(vaultName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.BaseBackupPolicyResourceList>): void;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(vaultName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BaseBackupPolicyResourceList>): void;
  list(vaultName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BaseBackupPolicyResourceList>, callback?: msRest.ServiceCallback<Models.BaseBackupPolicyResourceList>): Promise<Models.BackupPoliciesListResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.BackupPoliciesListResponse>;
  }

  /**
   * Gets a backup policy belonging to a backup vault
   * @summary Gets a backup policy belonging to a backup vault
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param [options] The optional parameters
   * @returns Promise<Models.BackupPoliciesGetResponse>
   */
  get(vaultName: string, resourceGroupName: string, backupPolicyName: string, options?: msRest.RequestOptionsBase): Promise<Models.BackupPoliciesGetResponse>;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param callback The callback
   */
  get(vaultName: string, resourceGroupName: string, backupPolicyName: string, callback: msRest.ServiceCallback<Models.BaseBackupPolicyResource>): void;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param options The optional parameters
   * @param callback The callback
   */
  get(vaultName: string, resourceGroupName: string, backupPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BaseBackupPolicyResource>): void;
  get(vaultName: string, resourceGroupName: string, backupPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BaseBackupPolicyResource>, callback?: msRest.ServiceCallback<Models.BaseBackupPolicyResource>): Promise<Models.BackupPoliciesGetResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        backupPolicyName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.BackupPoliciesGetResponse>;
  }

  /**
   * @summary Creates or Updates a backup policy belonging to a backup vault
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param parameters Request body for operation
   * @param [options] The optional parameters
   * @returns Promise<Models.BackupPoliciesPutResponse>
   */
  put(vaultName: string, resourceGroupName: string, backupPolicyName: string, parameters: Models.BaseBackupPolicyResource, options?: msRest.RequestOptionsBase): Promise<Models.BackupPoliciesPutResponse>;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param parameters Request body for operation
   * @param callback The callback
   */
  put(vaultName: string, resourceGroupName: string, backupPolicyName: string, parameters: Models.BaseBackupPolicyResource, callback: msRest.ServiceCallback<Models.BaseBackupPolicyResource>): void;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param parameters Request body for operation
   * @param options The optional parameters
   * @param callback The callback
   */
  put(vaultName: string, resourceGroupName: string, backupPolicyName: string, parameters: Models.BaseBackupPolicyResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BaseBackupPolicyResource>): void;
  put(vaultName: string, resourceGroupName: string, backupPolicyName: string, parameters: Models.BaseBackupPolicyResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BaseBackupPolicyResource>, callback?: msRest.ServiceCallback<Models.BaseBackupPolicyResource>): Promise<Models.BackupPoliciesPutResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        backupPolicyName,
        parameters,
        options
      },
      putOperationSpec,
      callback) as Promise<Models.BackupPoliciesPutResponse>;
  }

  /**
   * @summary Deletes a backup policy belonging to a backup vault
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(vaultName: string, resourceGroupName: string, backupPolicyName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param callback The callback
   */
  deleteMethod(vaultName: string, resourceGroupName: string, backupPolicyName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupPolicyName
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(vaultName: string, resourceGroupName: string, backupPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(vaultName: string, resourceGroupName: string, backupPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        backupPolicyName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Returns list of backup policies belonging to a backup vault
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.BackupPoliciesListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BackupPoliciesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BaseBackupPolicyResourceList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BaseBackupPolicyResourceList>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BaseBackupPolicyResourceList>, callback?: msRest.ServiceCallback<Models.BaseBackupPolicyResourceList>): Promise<Models.BackupPoliciesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.BackupPoliciesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BaseBackupPolicyResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.backupPolicyName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BaseBackupPolicyResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const putOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.backupPolicyName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.BaseBackupPolicyResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.BaseBackupPolicyResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.backupPolicyName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BaseBackupPolicyResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
