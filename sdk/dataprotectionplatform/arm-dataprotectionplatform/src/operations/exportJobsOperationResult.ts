/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/exportJobsOperationResultMappers";
import * as Parameters from "../models/parameters";
import { DataProtectionClientContext } from "../dataProtectionClientContext";

/** Class representing a ExportJobsOperationResult. */
export class ExportJobsOperationResult {
  private readonly client: DataProtectionClientContext;

  /**
   * Create a ExportJobsOperationResult.
   * @param {DataProtectionClientContext} client Reference to the service client.
   */
  constructor(client: DataProtectionClientContext) {
    this.client = client;
  }

  /**
   * Gets the operation result of operation triggered by Export Jobs API. If the operation is
   * successful, then it also contains URL of a Blob and a SAS key to access the same. The blob
   * contains exported jobs in JSON serialized format.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param vaultName The name of the backup vault.
   * @param operationId OperationID which represents the export job.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportJobsOperationResultGetResponse>
   */
  get(resourceGroupName: string, vaultName: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.ExportJobsOperationResultGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param vaultName The name of the backup vault.
   * @param operationId OperationID which represents the export job.
   * @param callback The callback
   */
  get(resourceGroupName: string, vaultName: string, operationId: string, callback: msRest.ServiceCallback<Models.ExportJobsResult>): void;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param vaultName The name of the backup vault.
   * @param operationId OperationID which represents the export job.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, vaultName: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExportJobsResult>): void;
  get(resourceGroupName: string, vaultName: string, operationId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExportJobsResult>, callback?: msRest.ServiceCallback<Models.ExportJobsResult>): Promise<Models.ExportJobsOperationResultGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        vaultName,
        operationId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ExportJobsOperationResultGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupJobs/operations/{operationId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.vaultName,
    Parameters.operationId
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ExportJobsResult
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
