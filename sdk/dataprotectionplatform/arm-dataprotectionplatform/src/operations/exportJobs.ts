/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/exportJobsMappers";
import * as Parameters from "../models/parameters";
import { DataProtectionClientContext } from "../dataProtectionClientContext";

/** Class representing a ExportJobs. */
export class ExportJobs {
  private readonly client: DataProtectionClientContext;

  /**
   * Create a ExportJobs.
   * @param {DataProtectionClientContext} client Reference to the service client.
   */
  constructor(client: DataProtectionClientContext) {
    this.client = client;
  }

  /**
   * Triggers export of jobs and returns an OperationID to track.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param vaultName The name of the backup vault.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportJobsTriggerResponse>
   */
  trigger(resourceGroupName: string, vaultName: string, options?: msRest.RequestOptionsBase): Promise<Models.ExportJobsTriggerResponse> {
    return this.beginTrigger(resourceGroupName,vaultName,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ExportJobsTriggerResponse>;
  }

  /**
   * Triggers export of jobs and returns an OperationID to track.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param vaultName The name of the backup vault.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginTrigger(resourceGroupName: string, vaultName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        vaultName,
        options
      },
      beginTriggerOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const beginTriggerOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/exportBackupJobs",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.vaultName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {
      headersMapper: Mappers.ExportJobsTriggerHeaders
    },
    204: {
      headersMapper: Mappers.ExportJobsTriggerHeaders
    },
    default: {
      bodyMapper: Mappers.CloudError,
      headersMapper: Mappers.ExportJobsTriggerHeaders
    }
  },
  serializer
};
