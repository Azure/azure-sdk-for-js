/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/recoveryPointsMappers";
import * as Parameters from "../models/parameters";
import { DataProtectionClientContext } from "../dataProtectionClientContext";

/** Class representing a RecoveryPoints. */
export class RecoveryPoints {
  private readonly client: DataProtectionClientContext;

  /**
   * Create a RecoveryPoints.
   * @param {DataProtectionClientContext} client Reference to the service client.
   */
  constructor(client: DataProtectionClientContext) {
    this.client = client;
  }

  /**
   * Returns a list of Recovery Points for a DataSource in a vault.
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupInstanceName The name of the backup instance
   * @param [options] The optional parameters
   * @returns Promise<Models.RecoveryPointsGetListResponse>
   */
  getList(vaultName: string, resourceGroupName: string, backupInstanceName: string, options?: msRest.RequestOptionsBase): Promise<Models.RecoveryPointsGetListResponse>;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupInstanceName The name of the backup instance
   * @param callback The callback
   */
  getList(vaultName: string, resourceGroupName: string, backupInstanceName: string, callback: msRest.ServiceCallback<Models.AzureBackupRecoveryPointResourceList>): void;
  /**
   * @param vaultName The name of the backup vault.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param backupInstanceName The name of the backup instance
   * @param options The optional parameters
   * @param callback The callback
   */
  getList(vaultName: string, resourceGroupName: string, backupInstanceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AzureBackupRecoveryPointResourceList>): void;
  getList(vaultName: string, resourceGroupName: string, backupInstanceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AzureBackupRecoveryPointResourceList>, callback?: msRest.ServiceCallback<Models.AzureBackupRecoveryPointResourceList>): Promise<Models.RecoveryPointsGetListResponse> {
    return this.client.sendOperationRequest(
      {
        vaultName,
        resourceGroupName,
        backupInstanceName,
        options
      },
      getListOperationSpec,
      callback) as Promise<Models.RecoveryPointsGetListResponse>;
  }

  /**
   * Returns a list of Recovery Points for a DataSource in a vault.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.RecoveryPointsGetListNextResponse>
   */
  getListNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RecoveryPointsGetListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  getListNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AzureBackupRecoveryPointResourceList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  getListNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AzureBackupRecoveryPointResourceList>): void;
  getListNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AzureBackupRecoveryPointResourceList>, callback?: msRest.ServiceCallback<Models.AzureBackupRecoveryPointResourceList>): Promise<Models.RecoveryPointsGetListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      getListNextOperationSpec,
      callback) as Promise<Models.RecoveryPointsGetListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getListOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/recoveryPoints",
  urlParameters: [
    Parameters.vaultName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.backupInstanceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AzureBackupRecoveryPointResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getListNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AzureBackupRecoveryPointResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
