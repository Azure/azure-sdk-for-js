/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/operationResultMappers";
import * as Parameters from "../models/parameters";
import { DataProtectionClientContext } from "../dataProtectionClientContext";

/** Class representing a OperationResult. */
export class OperationResult {
  private readonly client: DataProtectionClientContext;

  /**
   * Create a OperationResult.
   * @param {DataProtectionClientContext} client Reference to the service client.
   */
  constructor(client: DataProtectionClientContext) {
    this.client = client;
  }

  /**
   * Gets the operation result for a resource
   * @summary Gets the operation status for a resource.
   * @param operationId
   * @param location
   * @param [options] The optional parameters
   * @returns Promise<Models.OperationResultGetResponse>
   */
  get(operationId: string, location: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationResultGetResponse>;
  /**
   * @param operationId
   * @param location
   * @param callback The callback
   */
  get(operationId: string, location: string, callback: msRest.ServiceCallback<Models.OperationJobExtendedInfo>): void;
  /**
   * @param operationId
   * @param location
   * @param options The optional parameters
   * @param callback The callback
   */
  get(operationId: string, location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationJobExtendedInfo>): void;
  get(operationId: string, location: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationJobExtendedInfo>, callback?: msRest.ServiceCallback<Models.OperationJobExtendedInfo>): Promise<Models.OperationResultGetResponse> {
    return this.client.sendOperationRequest(
      {
        operationId,
        location,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.OperationResultGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/locations/{location}/operationResults/{operationId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.operationId,
    Parameters.location
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OperationJobExtendedInfo,
      headersMapper: Mappers.OperationResultGetHeaders
    },
    202: {
      headersMapper: Mappers.OperationResultGetHeaders
    },
    default: {
      bodyMapper: Mappers.CloudError,
      headersMapper: Mappers.OperationResultGetHeaders
    }
  },
  serializer
};
