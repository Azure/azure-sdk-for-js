/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/operationStatusMappers";
import * as Parameters from "../models/parameters";
import { DataProtectionClientContext } from "../dataProtectionClientContext";

/** Class representing a OperationStatus. */
export class OperationStatus {
  private readonly client: DataProtectionClientContext;

  /**
   * Create a OperationStatus.
   * @param {DataProtectionClientContext} client Reference to the service client.
   */
  constructor(client: DataProtectionClientContext) {
    this.client = client;
  }

  /**
   * @summary Gets the operation status for a resource.
   * @param location
   * @param operationId
   * @param [options] The optional parameters
   * @returns Promise<Models.OperationStatusGetResponse>
   */
  get(location: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationStatusGetResponse>;
  /**
   * @param location
   * @param operationId
   * @param callback The callback
   */
  get(location: string, operationId: string, callback: msRest.ServiceCallback<Models.OperationResource>): void;
  /**
   * @param location
   * @param operationId
   * @param options The optional parameters
   * @param callback The callback
   */
  get(location: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationResource>): void;
  get(location: string, operationId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationResource>, callback?: msRest.ServiceCallback<Models.OperationResource>): Promise<Models.OperationStatusGetResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        operationId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.OperationStatusGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/locations/{location}/operationStatus/{operationId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.location,
    Parameters.operationId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OperationResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
