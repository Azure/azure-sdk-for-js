/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NetworkFunctionResource,
  NetworkFunctionsListBySubscriptionOptionalParams,
  NetworkFunctionsListByResourceGroupOptionalParams,
  NetworkFunctionsGetOptionalParams,
  NetworkFunctionsGetResponse,
  NetworkFunctionsCreateOrUpdateOptionalParams,
  NetworkFunctionsCreateOrUpdateResponse,
  NetworkFunctionResourceTagsUpdate,
  NetworkFunctionsUpdateTagsOptionalParams,
  NetworkFunctionsUpdateTagsResponse,
  NetworkFunctionsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkFunctions. */
export interface NetworkFunctions {
  /**
   * List NetworkFunctionResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: NetworkFunctionsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<NetworkFunctionResource>;
  /**
   * List NetworkFunctionResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: NetworkFunctionsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<NetworkFunctionResource>;
  /**
   * Get a NetworkFunctionResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkFunctionName: string,
    options?: NetworkFunctionsGetOptionalParams
  ): Promise<NetworkFunctionsGetResponse>;
  /**
   * Create a NetworkFunctionResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    networkFunctionName: string,
    resource: NetworkFunctionResource,
    options?: NetworkFunctionsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkFunctionsCreateOrUpdateResponse>,
      NetworkFunctionsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a NetworkFunctionResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    networkFunctionName: string,
    resource: NetworkFunctionResource,
    options?: NetworkFunctionsCreateOrUpdateOptionalParams
  ): Promise<NetworkFunctionsCreateOrUpdateResponse>;
  /**
   * Update a NetworkFunctionResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    networkFunctionName: string,
    properties: NetworkFunctionResourceTagsUpdate,
    options?: NetworkFunctionsUpdateTagsOptionalParams
  ): Promise<NetworkFunctionsUpdateTagsResponse>;
  /**
   * Delete a NetworkFunctionResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFunctionName The name of the network function
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    networkFunctionName: string,
    options?: NetworkFunctionsDeleteOptionalParams
  ): Promise<void>;
}
