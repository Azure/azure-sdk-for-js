/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a NetworkFunctionResource list operation. */
export interface NetworkFunctionResourceListResult {
  /** The NetworkFunctionResource items on this page */
  value: NetworkFunctionResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The type used for updating tags in NetworkFunctionResource resources. */
export interface NetworkFunctionResourceTagsUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** AO5GC Network Function Resource */
export interface NetworkFunctionResource extends TrackedResource {
  /** Provisioned SKU Value. */
  sku?: SkuDefinitions;
  /** Type of network function */
  networkFunctionType?: NetworkFunctionType;
  /** Administrative state of the network function */
  networkFunctionAdministrativeState?: NetworkFunctionAdministrativeState;
  /**
   * Operational state of the network function
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkFunctionOperationalStatus?: NetworkFunctionOperationalStatus;
  /**
   * Count of infrastructure elements used by this network function (vCPUs, in units of 8)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly infrastructureElementCount?: number;
  /** Capacity of the network function in units of 10000.  This represents the session count or the Simultaneously Attached Users (SAU) count as applicable */
  capacity?: number;
  /** User provided description */
  userDescription?: string;
  /** User provided deployment notes.  This is used to optionally provide details about the NF deployment */
  deploymentNotes?: string;
  /**
   * The status of the last operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Defines headers for NetworkFunctions_createOrUpdate operation. */
export interface NetworkFunctionsCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link SkuDefinitions} that the service accepts. */
export enum KnownSkuDefinitions {
  /** Azure Lab SKU */
  AzureLab = "AzureLab",
  /** Azure Production SKU */
  AzureProduction = "AzureProduction",
  /** Nexus Lab SKU */
  NexusLab = "NexusLab",
  /** Nexus Production SKU */
  NexusProduction = "NexusProduction"
}

/**
 * Defines values for SkuDefinitions. \
 * {@link KnownSkuDefinitions} can be used interchangeably with SkuDefinitions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureLab**: Azure Lab SKU \
 * **AzureProduction**: Azure Production SKU \
 * **NexusLab**: Nexus Lab SKU \
 * **NexusProduction**: Nexus Production SKU
 */
export type SkuDefinitions = string;

/** Known values of {@link NetworkFunctionType} that the service accepts. */
export enum KnownNetworkFunctionType {
  /** Access and Mobility Function */
  AMF = "AMF",
  /** Session Management Function */
  SMF = "SMF",
  /** User Plane Function */
  UPF = "UPF",
  /** Network Repository Function */
  NRF = "NRF",
  /** Network Slice Selection Function */
  Nssf = "NSSF",
  /** Mobility Management Entity */
  MME = "MME",
  /** System Architecture Evolution Gateway Control Plane, control and user plane separation (CUPS) architecture */
  SaegwControlPlane = "SaegwControlPlane",
  /** System Architecture Evolution Gateway User Plane, control and user plane separation (CUPS) architecture */
  SaegwUserPlane = "SaegwUserPlane",
  /** System Architecture Evolution Gateway.  This combines the Serving Gateway (SGW) and the Packet Data Network Gateway (PGW) functionality */
  Saegw = "Saegw",
  /** Evolved Packet Data Gateway */
  EPDG = "ePDG",
  /** Non-3GPP Interworking Function */
  N3IWF = "N3IWF",
  /** Remote Platform As A Service Components */
  RemotePaaS = "RemotePaaS",
  /** Element Management System */
  EMS = "EMS",
  /** Operations and Policy Manager */
  OperationsPolicyManager = "OperationsPolicyManager"
}

/**
 * Defines values for NetworkFunctionType. \
 * {@link KnownNetworkFunctionType} can be used interchangeably with NetworkFunctionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AMF**: Access and Mobility Function \
 * **SMF**: Session Management Function \
 * **UPF**: User Plane Function \
 * **NRF**: Network Repository Function \
 * **NSSF**: Network Slice Selection Function \
 * **MME**: Mobility Management Entity \
 * **SaegwControlPlane**: System Architecture Evolution Gateway Control Plane, control and user plane separation (CUPS) architecture \
 * **SaegwUserPlane**: System Architecture Evolution Gateway User Plane, control and user plane separation (CUPS) architecture \
 * **Saegw**: System Architecture Evolution Gateway.  This combines the Serving Gateway (SGW) and the Packet Data Network Gateway (PGW) functionality \
 * **ePDG**: Evolved Packet Data Gateway \
 * **N3IWF**: Non-3GPP Interworking Function \
 * **RemotePaaS**: Remote Platform As A Service Components \
 * **EMS**: Element Management System \
 * **OperationsPolicyManager**: Operations and Policy Manager
 */
export type NetworkFunctionType = string;

/** Known values of {@link NetworkFunctionAdministrativeState} that the service accepts. */
export enum KnownNetworkFunctionAdministrativeState {
  /** Resource has been commissioned */
  Commissioned = "Commissioned",
  /** Resource has been decommissioned */
  Decommissioned = "Decommissioned"
}

/**
 * Defines values for NetworkFunctionAdministrativeState. \
 * {@link KnownNetworkFunctionAdministrativeState} can be used interchangeably with NetworkFunctionAdministrativeState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Commissioned**: Resource has been commissioned \
 * **Decommissioned**: Resource has been decommissioned
 */
export type NetworkFunctionAdministrativeState = string;

/** Known values of {@link NetworkFunctionOperationalStatus} that the service accepts. */
export enum KnownNetworkFunctionOperationalStatus {
  /** Resource is inactive */
  Inactive = "Inactive",
  /** Resource has been deployed, awaiting provisioning */
  InstantiatedNotProvisioned = "InstantiatedNotProvisioned",
  /** Resource has been deployed and provisioned, awaiting testing */
  InstantiatedProvisioned = "InstantiatedProvisioned",
  /** Resource is fully deployed and operational */
  Active = "Active"
}

/**
 * Defines values for NetworkFunctionOperationalStatus. \
 * {@link KnownNetworkFunctionOperationalStatus} can be used interchangeably with NetworkFunctionOperationalStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Inactive**: Resource is inactive \
 * **InstantiatedNotProvisioned**: Resource has been deployed, awaiting provisioning \
 * **InstantiatedProvisioned**: Resource has been deployed and provisioned, awaiting testing \
 * **Active**: Resource is fully deployed and operational
 */
export type NetworkFunctionOperationalStatus = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Resource is getting provisioned */
  Provisioning = "Provisioning",
  /** Resource is updating */
  Updating = "Updating",
  /** Resource is getting deleted */
  Deleting = "Deleting",
  /** Resource has been accepted */
  Accepted = "Accepted"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Provisioning**: Resource is getting provisioned \
 * **Updating**: Resource is updating \
 * **Deleting**: Resource is getting deleted \
 * **Accepted**: Resource has been accepted
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Versions} that the service accepts. */
export enum KnownVersions {
  /** May 15, 2023 Preview API Version */
  V20230515Preview = "2023-05-15-preview"
}

/**
 * Defines values for Versions. \
 * {@link KnownVersions} can be used interchangeably with Versions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2023-05-15-preview**: May 15, 2023 Preview API Version
 */
export type Versions = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface NetworkFunctionsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type NetworkFunctionsListBySubscriptionResponse = NetworkFunctionResourceListResult;

/** Optional parameters. */
export interface NetworkFunctionsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type NetworkFunctionsListByResourceGroupResponse = NetworkFunctionResourceListResult;

/** Optional parameters. */
export interface NetworkFunctionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type NetworkFunctionsGetResponse = NetworkFunctionResource;

/** Optional parameters. */
export interface NetworkFunctionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type NetworkFunctionsCreateOrUpdateResponse = NetworkFunctionResource;

/** Optional parameters. */
export interface NetworkFunctionsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type NetworkFunctionsUpdateTagsResponse = NetworkFunctionResource;

/** Optional parameters. */
export interface NetworkFunctionsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface NetworkFunctionsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type NetworkFunctionsListBySubscriptionNextResponse = NetworkFunctionResourceListResult;

/** Optional parameters. */
export interface NetworkFunctionsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type NetworkFunctionsListByResourceGroupNextResponse = NetworkFunctionResourceListResult;

/** Optional parameters. */
export interface MicrosoftMobilePacketCoreNetworkFunctionResourceOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
