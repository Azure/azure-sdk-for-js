/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput,
  SqlManagementClient
} from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Add a database's vulnerability assessment rule baseline list.
 *
 * @summary Add a database's vulnerability assessment rule baseline list.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-02-01-preview/examples/SqlVulnerabilityAssessmentBaselineAddLatest.json
 */
async function addADatabaseVulnerabilityAssessmentRuleBaselineFromTheLatestScanResult() {
  const subscriptionId =
    process.env["SQL_SUBSCRIPTION_ID"] ||
    "00000000-1111-2222-3333-444444444444";
  const resourceGroupName =
    process.env["SQL_RESOURCE_GROUP"] || "vulnerabilityaseessmenttest-4799";
  const serverName = "vulnerabilityaseessmenttest-6440";
  const vulnerabilityAssessmentName = "default";
  const baselineName = "default";
  const parameters: DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput = {
    latestScan: true,
    results: {}
  };
  const credential = new DefaultAzureCredential();
  const client = new SqlManagementClient(credential, subscriptionId);
  const result = await client.sqlVulnerabilityAssessmentBaselines.createOrUpdate(
    resourceGroupName,
    serverName,
    vulnerabilityAssessmentName,
    baselineName,
    parameters
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Add a database's vulnerability assessment rule baseline list.
 *
 * @summary Add a database's vulnerability assessment rule baseline list.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-02-01-preview/examples/SqlVulnerabilityAssessmentBaselineAdd.json
 */
async function addADatabaseVulnerabilityAssessmentRuleBaselineList() {
  const subscriptionId =
    process.env["SQL_SUBSCRIPTION_ID"] ||
    "00000000-1111-2222-3333-444444444444";
  const resourceGroupName =
    process.env["SQL_RESOURCE_GROUP"] || "vulnerabilityaseessmenttest-4711";
  const serverName = "vulnerabilityaseessmenttest-6411";
  const vulnerabilityAssessmentName = "default";
  const baselineName = "default";
  const parameters: DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput = {
    latestScan: false,
    results: {
      va2063: [["AllowAll", "0.0.0.0", "255.255.255.255"]],
      va2065: [["AllowAll", "0.0.0.0", "255.255.255.255"]]
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new SqlManagementClient(credential, subscriptionId);
  const result = await client.sqlVulnerabilityAssessmentBaselines.createOrUpdate(
    resourceGroupName,
    serverName,
    vulnerabilityAssessmentName,
    baselineName,
    parameters
  );
  console.log(result);
}

async function main() {
  addADatabaseVulnerabilityAssessmentRuleBaselineFromTheLatestScanResult();
  addADatabaseVulnerabilityAssessmentRuleBaselineList();
}

main().catch(console.error);
