/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * ARM resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * ARM proxy resource.
 */
export interface ProxyResource extends Resource {
}

/**
 * A recoverable database
 */
export interface RecoverableDatabase extends ProxyResource {
  /**
   * The edition of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly edition?: string;
  /**
   * The service level objective name of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceLevelObjective?: string;
  /**
   * The elastic pool name of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * The last available backup date of the database (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastAvailableBackupDate?: Date;
}

/**
 * A restorable dropped database
 */
export interface RestorableDroppedDatabase extends ProxyResource {
  /**
   * The geo-location where the resource lives
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The name of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The edition of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly edition?: string;
  /**
   * The max size in bytes of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxSizeBytes?: string;
  /**
   * The service level objective name of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceLevelObjective?: string;
  /**
   * The elastic pool name of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * The creation date of the database (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The deletion date of the database (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deletionDate?: Date;
  /**
   * The earliest restore date of the database (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
}

/**
 * ARM tracked top level resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Resource location.
   */
  location: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A request to check whether the specified name for a resource is available.
 */
export interface CheckNameAvailabilityRequest {
  /**
   * The name whose availability is to be checked.
   */
  name: string;
}

/**
 * A response indicating whether the specified name for a resource is available.
 */
export interface CheckNameAvailabilityResponse {
  /**
   * True if the name is available, otherwise false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly available?: boolean;
  /**
   * A message explaining why the name is unavailable. Will be null if the name is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The name whose availability was checked.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The reason code explaining why the name is unavailable. Will be null if the name is available.
   * Possible values include: 'Invalid', 'AlreadyExists'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reason?: CheckNameAvailabilityReason;
}

/**
 * A server secure connection policy.
 */
export interface ServerConnectionPolicy extends ProxyResource {
  /**
   * Metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The server connection type. Possible values include: 'Default', 'Proxy', 'Redirect'
   */
  connectionType: ServerConnectionType;
}

/**
 * Contains information about a database Threat Detection policy.
 */
export interface DatabaseSecurityAlertPolicy extends ProxyResource {
  /**
   * The geo-location where the resource lives
   */
  location?: string;
  /**
   * Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint and
   * storageAccountAccessKey are required. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * Specifies the semicolon-separated list of alerts that are disabled, or empty string to disable
   * no alerts. Possible values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly;
   * Data_Exfiltration; Unsafe_Action.
   */
  disabledAlerts?: string;
  /**
   * Specifies the semicolon-separated list of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string;
  /**
   * Specifies that the alert is sent to the account administrators. Possible values include:
   * 'Enabled', 'Disabled'
   */
  emailAccountAdmins?: SecurityAlertPolicyEmailAccountAdmins;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs. If state is Enabled, storageEndpoint is
   * required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account. If state is
   * Enabled, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * Specifies whether to use the default server policy. Possible values include: 'Enabled',
   * 'Disabled'
   */
  useServerDefault?: SecurityAlertPolicyUseServerDefault;
}

/**
 * Represents a database data masking policy.
 */
export interface DataMaskingPolicy extends ProxyResource {
  /**
   * The state of the data masking policy. Possible values include: 'Disabled', 'Enabled'
   */
  dataMaskingState: DataMaskingState;
  /**
   * The list of the exempt principals. Specifies the semicolon-separated list of database users
   * for which the data masking policy does not apply. The specified users receive data results
   * without masking for all of the database queries.
   */
  exemptPrincipals?: string;
  /**
   * The list of the application principals. This is a legacy parameter and is no longer used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly applicationPrincipals?: string;
  /**
   * The masking level. This is a legacy parameter and is no longer used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maskingLevel?: string;
  /**
   * The location of the data masking policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The kind of data masking policy. Metadata, used for Azure portal.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
}

/**
 * Represents a database data masking rule.
 */
export interface DataMaskingRule extends ProxyResource {
  /**
   * The rule Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataMaskingRuleId?: string;
  /**
   * The alias name. This is a legacy parameter and is no longer used.
   */
  aliasName?: string;
  /**
   * The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName,
   * tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the
   * rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless
   * of the provided value of ruleState. Possible values include: 'Disabled', 'Enabled'
   */
  ruleState?: DataMaskingRuleState;
  /**
   * The schema name on which the data masking rule is applied.
   */
  schemaName: string;
  /**
   * The table name on which the data masking rule is applied.
   */
  tableName: string;
  /**
   * The column name on which the data masking rule is applied.
   */
  columnName: string;
  /**
   * The masking function that is used for the data masking rule. Possible values include:
   * 'Default', 'CCN', 'Email', 'Number', 'SSN', 'Text'
   */
  maskingFunction: DataMaskingFunction;
  /**
   * The numberFrom property of the masking rule. Required if maskingFunction is set to Number,
   * otherwise this parameter will be ignored.
   */
  numberFrom?: string;
  /**
   * The numberTo property of the data masking rule. Required if maskingFunction is set to Number,
   * otherwise this parameter will be ignored.
   */
  numberTo?: string;
  /**
   * If maskingFunction is set to Text, the number of characters to show unmasked in the beginning
   * of the string. Otherwise, this parameter will be ignored.
   */
  prefixSize?: string;
  /**
   * If maskingFunction is set to Text, the number of characters to show unmasked at the end of the
   * string. Otherwise, this parameter will be ignored.
   */
  suffixSize?: string;
  /**
   * If maskingFunction is set to Text, the character to use for masking the unexposed part of the
   * string. Otherwise, this parameter will be ignored.
   */
  replacementString?: string;
  /**
   * The location of the data masking rule.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The kind of Data Masking Rule. Metadata, used for Azure portal.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
}

/**
 * Represents a server firewall rule.
 */
export interface FirewallRule extends ProxyResource {
  /**
   * Kind of server that contains this firewall rule.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Location of the server that contains this firewall rule.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' to
   * represent all Azure-internal IP addresses.
   */
  startIpAddress: string;
  /**
   * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to
   * startIpAddress. Use value '0.0.0.0' to represent all Azure-internal IP addresses.
   */
  endIpAddress: string;
}

/**
 * A database geo backup policy.
 */
export interface GeoBackupPolicy extends ProxyResource {
  /**
   * The state of the geo backup policy. Possible values include: 'Disabled', 'Enabled'
   */
  state: GeoBackupPolicyState;
  /**
   * The storage type of the geo backup policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageType?: string;
  /**
   * Kind of geo backup policy.  This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Backup policy location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
}

/**
 * Import database parameters.
 */
export interface ImportExtensionRequest {
  /**
   * The name of the extension.
   */
  name?: string;
  /**
   * The type of the extension.
   */
  type?: string;
  /**
   * The type of the storage key to use. Possible values include: 'StorageAccessKey',
   * 'SharedAccessKey'
   */
  storageKeyType: StorageKeyType;
  /**
   * The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a
   * "?."
   */
  storageKey: string;
  /**
   * The storage uri to use.
   */
  storageUri: string;
  /**
   * The name of the SQL administrator.
   */
  administratorLogin: string;
  /**
   * The password of the SQL administrator.
   */
  administratorLoginPassword: string;
  /**
   * The authentication type. Possible values include: 'SQL', 'ADPassword'. Default value: 'SQL'.
   */
  authenticationType?: AuthenticationType;
}

/**
 * Response for Import/Export Get operation.
 */
export interface ImportExportResponse extends ProxyResource {
  /**
   * The request type of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestType?: string;
  /**
   * The request type of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestId?: string;
  /**
   * The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The status message returned from the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The operation status last modified time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTime?: string;
  /**
   * The operation queued time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly queuedTime?: string;
  /**
   * The blob uri.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly blobUri?: string;
  /**
   * The error message returned from the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorMessage?: string;
}

/**
 * Export database parameters.
 */
export interface ExportRequest {
  /**
   * The type of the storage key to use. Possible values include: 'StorageAccessKey',
   * 'SharedAccessKey'
   */
  storageKeyType: StorageKeyType;
  /**
   * The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a
   * "?."
   */
  storageKey: string;
  /**
   * The storage uri to use.
   */
  storageUri: string;
  /**
   * The name of the SQL administrator.
   */
  administratorLogin: string;
  /**
   * The password of the SQL administrator.
   */
  administratorLoginPassword: string;
  /**
   * The authentication type. Possible values include: 'SQL', 'ADPassword'. Default value: 'SQL'.
   */
  authenticationType?: AuthenticationType;
}

/**
 * Import database parameters.
 */
export interface ImportRequest extends ExportRequest {
  /**
   * The name of the database to import.
   */
  databaseName: string;
  /**
   * The edition for the database being created.
   *
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the
   * SKU name, tier/edition, family, and capacity) that are available to your subscription in an
   * Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
   *
   * ```azurecli
   * az sql db list-editions -l <location> -o table
   * ````
   *
   * ```powershell
   * Get-AzSqlServerServiceObjective -Location <location>
   * ````
   * . Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS',
   * 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical',
   * 'Hyperscale'
   */
  edition: DatabaseEdition;
  /**
   * The name of the service objective to assign to the database. Possible values include:
   * 'System', 'System0', 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L',
   * 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1',
   * 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200',
   * 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c',
   * 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c',
   * 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500',
   * 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'
   */
  serviceObjectiveName: ServiceObjectiveName;
  /**
   * The maximum size for the newly imported database.
   */
  maxSizeBytes: string;
}

/**
 * Represents database metrics.
 */
export interface MetricValue {
  /**
   * The number of values for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly count?: number;
  /**
   * The average value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly average?: number;
  /**
   * The max value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximum?: number;
  /**
   * The min value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minimum?: number;
  /**
   * The metric timestamp (ISO-8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timestamp?: Date;
  /**
   * The total value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly total?: number;
}

/**
 * A database metric name.
 */
export interface MetricName {
  /**
   * The name of the database metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
  /**
   * The friendly name of the database metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localizedValue?: string;
}

/**
 * Database metrics.
 */
export interface Metric {
  /**
   * The start time for the metric (ISO-8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The end time for the metric (ISO-8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * The time step to be used to summarize the metric values.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeGrain?: string;
  /**
   * The unit of the metric. Possible values include: 'count', 'bytes', 'seconds', 'percent',
   * 'countPerSecond', 'bytesPerSecond'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: UnitType;
  /**
   * The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: MetricName;
  /**
   * The metric values for the specified time window and timestep.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricValues?: MetricValue[];
}

/**
 * A metric availability value.
 */
export interface MetricAvailability {
  /**
   * The length of retention for the database metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly retention?: string;
  /**
   * The granularity of the database metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeGrain?: string;
}

/**
 * A database metric definition.
 */
export interface MetricDefinition {
  /**
   * The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: MetricName;
  /**
   * The primary aggregation type defining how metric values are displayed. Possible values
   * include: 'None', 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly primaryAggregationType?: PrimaryAggregationType;
  /**
   * The resource uri of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceUri?: string;
  /**
   * The unit of the metric. Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
   * 'CountPerSecond', 'BytesPerSecond'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: UnitDefinitionType;
  /**
   * The list of database metric availabilities for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricAvailabilities?: MetricAvailability[];
}

/**
 * Represents recommended elastic pool metric.
 */
export interface RecommendedElasticPoolMetric {
  /**
   * The time of metric (ISO8601 format).
   */
  dateTime?: Date;
  /**
   * Gets or sets the DTUs (Database Transaction Units). See
   * https://azure.microsoft.com/documentation/articles/sql-database-what-is-a-dtu/
   */
  dtu?: number;
  /**
   * Gets or sets size in gigabytes.
   */
  sizeGB?: number;
}

/**
 * Represents a recommended elastic pool.
 */
export interface RecommendedElasticPool extends ProxyResource {
  /**
   * The edition of the recommended elastic pool. The ElasticPoolEdition enumeration contains all
   * the valid editions. Possible values include: 'Basic', 'Standard', 'Premium', 'GeneralPurpose',
   * 'BusinessCritical'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseEdition?: ElasticPoolEdition;
  /**
   * The DTU for the recommended elastic pool.
   */
  dtu?: number;
  /**
   * The minimum DTU for the database.
   */
  databaseDtuMin?: number;
  /**
   * The maximum DTU for the database.
   */
  databaseDtuMax?: number;
  /**
   * Gets storage size in megabytes.
   */
  storageMB?: number;
  /**
   * The observation period start (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly observationPeriodStart?: Date;
  /**
   * The observation period start (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly observationPeriodEnd?: Date;
  /**
   * Gets maximum observed DTU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxObservedDtu?: number;
  /**
   * Gets maximum observed storage in megabytes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxObservedStorageMB?: number;
  /**
   * The list of databases in this pool. Expanded property
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databases?: TrackedResource[];
  /**
   * The list of databases housed in the server. Expanded property
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metrics?: RecommendedElasticPoolMetric[];
}

/**
 * Represents a database replication link.
 */
export interface ReplicationLink extends ProxyResource {
  /**
   * Location of the server that contains this firewall rule.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Legacy value indicating whether termination is allowed.  Currently always returns true.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTerminationAllowed?: boolean;
  /**
   * Replication mode of this replication link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationMode?: string;
  /**
   * The name of the server hosting the partner database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partnerServer?: string;
  /**
   * The name of the partner database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partnerDatabase?: string;
  /**
   * The Azure Region of the partner database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partnerLocation?: string;
  /**
   * The role of the database in the replication link. Possible values include: 'Primary',
   * 'Secondary', 'NonReadableSecondary', 'Source', 'Copy'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly role?: ReplicationRole;
  /**
   * The role of the partner database in the replication link. Possible values include: 'Primary',
   * 'Secondary', 'NonReadableSecondary', 'Source', 'Copy'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partnerRole?: ReplicationRole;
  /**
   * The start time for the replication link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The percentage of seeding complete for the replication link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The replication state for the replication link. Possible values include: 'PENDING', 'SEEDING',
   * 'CATCH_UP', 'SUSPENDED'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationState?: ReplicationState;
}

/**
 * An server Active Directory Administrator.
 */
export interface ServerAzureADAdministrator extends ProxyResource {
  /**
   * The server administrator login value.
   */
  login: string;
  /**
   * The server administrator Sid (Secure ID).
   */
  sid: string;
  /**
   * The server Active Directory Administrator tenant id.
   */
  tenantId: string;
}

/**
 * Server communication link.
 */
export interface ServerCommunicationLink extends ProxyResource {
  /**
   * The state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The name of the partner server.
   */
  partnerServer: string;
  /**
   * Communication link location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Communication link kind.  This property is used for Azure Portal metadata.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
}

/**
 * Represents a database service objective.
 */
export interface ServiceObjective extends ProxyResource {
  /**
   * The name for the service objective.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceObjectiveName?: string;
  /**
   * Gets whether the service level objective is the default service objective.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDefault?: boolean;
  /**
   * Gets whether the service level objective is a system service objective.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isSystem?: boolean;
  /**
   * The description for the service level objective.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Gets whether the service level objective is enabled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enabled?: boolean;
}

/**
 * Represents the activity on an elastic pool.
 */
export interface ElasticPoolActivity extends ProxyResource {
  /**
   * The geo-location where the resource lives
   */
  location?: string;
  /**
   * The time the operation finished (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * The error code if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The error message if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorMessage?: string;
  /**
   * The error severity if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorSeverity?: number;
  /**
   * The operation name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The unique operation ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationId?: string;
  /**
   * The percentage complete if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The requested max DTU per database if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedDatabaseDtuMax?: number;
  /**
   * The requested min DTU per database if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedDatabaseDtuMin?: number;
  /**
   * The requested DTU for the pool if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedDtu?: number;
  /**
   * The requested name for the elastic pool if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedElasticPoolName?: string;
  /**
   * The requested storage limit for the pool in GB if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedStorageLimitInGB?: number;
  /**
   * The name of the elastic pool.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * The name of the server the elastic pool is in.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The time the operation started (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The current state of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The requested storage limit in MB.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedStorageLimitInMB?: number;
  /**
   * The requested per database DTU guarantee.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedDatabaseDtuGuarantee?: number;
  /**
   * The requested per database DTU cap.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedDatabaseDtuCap?: number;
  /**
   * The requested DTU guarantee.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedDtuGuarantee?: number;
}

/**
 * Represents the activity on an elastic pool.
 */
export interface ElasticPoolDatabaseActivity extends ProxyResource {
  /**
   * The geo-location where the resource lives
   */
  location?: string;
  /**
   * The database name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The time the operation finished (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * The error code if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The error message if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorMessage?: string;
  /**
   * The error severity if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorSeverity?: number;
  /**
   * The operation name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The unique operation ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationId?: string;
  /**
   * The percentage complete if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The name for the elastic pool the database is moving into if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedElasticPoolName?: string;
  /**
   * The name of the current elastic pool the database is in if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentElasticPoolName?: string;
  /**
   * The name of the current service objective if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceObjective?: string;
  /**
   * The name of the requested service objective if available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedServiceObjective?: string;
  /**
   * The name of the server the elastic pool is in.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The time the operation started (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The current state of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
}

/**
 * The impact of an operation, both in absolute and relative terms.
 */
export interface OperationImpact {
  /**
   * The name of the impact dimension.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The unit in which estimated impact to dimension is measured.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * The absolute impact to dimension.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly changeValueAbsolute?: number;
  /**
   * The relative impact to dimension (null if not applicable)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly changeValueRelative?: number;
}

/**
 * Represents a database recommended index.
 */
export interface RecommendedIndex extends ProxyResource {
  /**
   * The proposed index action. You can create a missing index, drop an unused index, or rebuild an
   * existing index to improve its performance. Possible values include: 'Create', 'Drop',
   * 'Rebuild'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly action?: RecommendedIndexAction;
  /**
   * The current recommendation state. Possible values include: 'Active', 'Pending', 'Executing',
   * 'Verifying', 'Pending Revert', 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Blocked',
   * 'Success'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: RecommendedIndexState;
  /**
   * The UTC datetime showing when this resource was created (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly created?: Date;
  /**
   * The UTC datetime of when was this resource last changed (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModified?: Date;
  /**
   * The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE). Possible
   * values include: 'CLUSTERED', 'NONCLUSTERED', 'COLUMNSTORE', 'CLUSTERED COLUMNSTORE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly indexType?: RecommendedIndexType;
  /**
   * The schema where table to build index over resides
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly schema?: string;
  /**
   * The table on which to build index.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly table?: string;
  /**
   * Columns over which to build index
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly columns?: string[];
  /**
   * The list of column names to be included in the index
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedColumns?: string[];
  /**
   * The full build index script
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly indexScript?: string;
  /**
   * The estimated impact of doing recommended index action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly estimatedImpact?: OperationImpact[];
  /**
   * The values reported after index action is complete.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reportedImpact?: OperationImpact[];
}

/**
 * Represents a database transparent data encryption configuration.
 */
export interface TransparentDataEncryption extends ProxyResource {
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The status of the database transparent data encryption. Possible values include: 'Enabled',
   * 'Disabled'
   */
  status?: TransparentDataEncryptionStatus;
}

/**
 * A Slo Usage Metric.
 */
export interface SloUsageMetric {
  /**
   * The serviceLevelObjective for SLO usage metric. Possible values include: 'System', 'System0',
   * 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free',
   * 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6',
   * 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500',
   * 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000',
   * 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c',
   * 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200',
   * 'DS1500', 'DS2000', 'ElasticPool'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceLevelObjective?: ServiceObjectiveName;
  /**
   * The serviceLevelObjectiveId for SLO usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceLevelObjectiveId?: string;
  /**
   * Gets or sets inRangeTimeRatio for SLO usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly inRangeTimeRatio?: number;
}

/**
 * Represents a Service Tier Advisor.
 */
export interface ServiceTierAdvisor extends ProxyResource {
  /**
   * The observation period start (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly observationPeriodStart?: Date;
  /**
   * The observation period start (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly observationPeriodEnd?: Date;
  /**
   * The activeTimeRatio for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly activeTimeRatio?: number;
  /**
   * Gets or sets minDtu for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minDtu?: number;
  /**
   * Gets or sets avgDtu for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly avgDtu?: number;
  /**
   * Gets or sets maxDtu for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxDtu?: number;
  /**
   * Gets or sets maxSizeInGB for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxSizeInGB?: number;
  /**
   * Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceLevelObjectiveUsageMetrics?: SloUsageMetric[];
  /**
   * Gets or sets currentServiceLevelObjective for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceLevelObjective?: string;
  /**
   * Gets or sets currentServiceLevelObjectiveId for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceLevelObjectiveId?: string;
  /**
   * Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usageBasedRecommendationServiceLevelObjective?: string;
  /**
   * Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usageBasedRecommendationServiceLevelObjectiveId?: string;
  /**
   * Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseSizeBasedRecommendationServiceLevelObjective?: string;
  /**
   * Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseSizeBasedRecommendationServiceLevelObjectiveId?: string;
  /**
   * Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly disasterPlanBasedRecommendationServiceLevelObjective?: string;
  /**
   * Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly disasterPlanBasedRecommendationServiceLevelObjectiveId?: string;
  /**
   * Gets or sets overallRecommendationServiceLevelObjective for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly overallRecommendationServiceLevelObjective?: string;
  /**
   * Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly overallRecommendationServiceLevelObjectiveId?: string;
  /**
   * Gets or sets confidence for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly confidence?: number;
}

/**
 * Represents a database transparent data encryption Scan.
 */
export interface TransparentDataEncryptionActivity extends ProxyResource {
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The status of the database. Possible values include: 'Encrypting', 'Decrypting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: TransparentDataEncryptionActivityStatus;
  /**
   * The percent complete of the transparent data encryption scan for a database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
}

/**
 * Represents server metrics.
 */
export interface ServerUsage {
  /**
   * Name of the server usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceName?: string;
  /**
   * The metric display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The current value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The current limit of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The units of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * The next reset time for the metric (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextResetTime?: Date;
}

/**
 * The database usages.
 */
export interface DatabaseUsage {
  /**
   * The name of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceName?: string;
  /**
   * The usage metric display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The current value of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The current limit of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The units of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * The next reset time for the usage metric (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextResetTime?: Date;
}

/**
 * Automatic tuning properties for individual advisors.
 */
export interface AutomaticTuningOptions {
  /**
   * Automatic tuning option desired state. Possible values include: 'Off', 'On', 'Default'
   */
  desiredState?: AutomaticTuningOptionModeDesired;
  /**
   * Automatic tuning option actual state. Possible values include: 'Off', 'On'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: AutomaticTuningOptionModeActual;
  /**
   * Reason code if desired and actual state are different.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonCode?: number;
  /**
   * Reason description if desired and actual state are different. Possible values include:
   * 'Default', 'Disabled', 'AutoConfigured', 'InheritedFromServer', 'QueryStoreOff',
   * 'QueryStoreReadOnly', 'NotSupported'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonDesc?: AutomaticTuningDisabledReason;
}

/**
 * Database-level Automatic Tuning.
 */
export interface DatabaseAutomaticTuning extends ProxyResource {
  /**
   * Automatic tuning desired state. Possible values include: 'Inherit', 'Custom', 'Auto',
   * 'Unspecified'
   */
  desiredState?: AutomaticTuningMode;
  /**
   * Automatic tuning actual state. Possible values include: 'Inherit', 'Custom', 'Auto',
   * 'Unspecified'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: AutomaticTuningMode;
  /**
   * Automatic tuning options definition.
   */
  options?: { [propertyName: string]: AutomaticTuningOptions };
}

/**
 * The server encryption protector.
 */
export interface EncryptionProtector extends ProxyResource {
  /**
   * Kind of encryption protector. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Subregion of the encryption protector.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subregion?: string;
  /**
   * The name of the server key.
   */
  serverKeyName?: string;
  /**
   * The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * The URI of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uri?: string;
  /**
   * Thumbprint of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
}

/**
 * Read-write endpoint of the failover group instance.
 */
export interface FailoverGroupReadWriteEndpoint {
  /**
   * Failover policy of the read-write endpoint for the failover group. If failoverPolicy is
   * Automatic then failoverWithDataLossGracePeriodMinutes is required. Possible values include:
   * 'Manual', 'Automatic'
   */
  failoverPolicy: ReadWriteEndpointFailoverPolicy;
  /**
   * Grace period before failover with data loss is attempted for the read-write endpoint. If
   * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
   */
  failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * Read-only endpoint of the failover group instance.
 */
export interface FailoverGroupReadOnlyEndpoint {
  /**
   * Failover policy of the read-only endpoint for the failover group. Possible values include:
   * 'Disabled', 'Enabled'
   */
  failoverPolicy?: ReadOnlyEndpointFailoverPolicy;
}

/**
 * Partner server information for the failover group.
 */
export interface PartnerInfo {
  /**
   * Resource identifier of the partner server.
   */
  id: string;
  /**
   * Geo location of the partner server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Replication role of the partner server. Possible values include: 'Primary', 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationRole?: FailoverGroupReplicationRole;
}

/**
 * A failover group.
 */
export interface FailoverGroup extends ProxyResource {
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Read-write endpoint of the failover group instance.
   */
  readWriteEndpoint: FailoverGroupReadWriteEndpoint;
  /**
   * Read-only endpoint of the failover group instance.
   */
  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;
  /**
   * Local replication role of the failover group instance. Possible values include: 'Primary',
   * 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationRole?: FailoverGroupReplicationRole;
  /**
   * Replication state of the failover group instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationState?: string;
  /**
   * List of partner server information for the failover group.
   */
  partnerServers: PartnerInfo[];
  /**
   * List of databases in the failover group.
   */
  databases?: string[];
}

/**
 * A failover group update request.
 */
export interface FailoverGroupUpdate {
  /**
   * Read-write endpoint of the failover group instance.
   */
  readWriteEndpoint?: FailoverGroupReadWriteEndpoint;
  /**
   * Read-only endpoint of the failover group instance.
   */
  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;
  /**
   * List of databases in the failover group.
   */
  databases?: string[];
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * SQL REST API operation definition.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The localized display information for this particular operation / action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * The intended executor of the operation. Possible values include: 'user', 'system'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: OperationOrigin;
  /**
   * Additional descriptions for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: { [propertyName: string]: any };
}

/**
 * A server key.
 */
export interface ServerKey extends ProxyResource {
  /**
   * Kind of encryption protector. This is metadata used for the Azure portal experience.
   */
  kind?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Subregion of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subregion?: string;
  /**
   * The server key type like 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * The URI of the server key.
   */
  uri?: string;
  /**
   * Thumbprint of the server key.
   */
  thumbprint?: string;
  /**
   * The server key creation date.
   */
  creationDate?: Date;
}

/**
 * Azure Active Directory identity configuration for a resource.
 */
export interface ResourceIdentity {
  /**
   * The Azure Active Directory principal id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an
   * Azure Active Directory principal for the resource. Possible values include: 'SystemAssigned'
   */
  type?: IdentityType;
  /**
   * The Azure Active Directory tenant id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * An Azure SQL Database server.
 */
export interface Server extends TrackedResource {
  /**
   * The Azure Active Directory identity of the server.
   */
  identity?: ResourceIdentity;
  /**
   * Kind of sql server. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Administrator username for the server. Once created it cannot be changed.
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for server creation).
   */
  administratorLoginPassword?: string;
  /**
   * The version of the server.
   */
  version?: string;
  /**
   * The state of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The fully qualified domain name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
}

/**
 * An update request for an Azure SQL Database server.
 */
export interface ServerUpdate {
  /**
   * Administrator username for the server. Once created it cannot be changed.
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for server creation).
   */
  administratorLoginPassword?: string;
  /**
   * The version of the server.
   */
  version?: string;
  /**
   * The state of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The fully qualified domain name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An Azure SQL Database sync agent.
 */
export interface SyncAgent extends ProxyResource {
  /**
   * Name of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncAgentName?: string;
  /**
   * ARM resource id of the sync database in the sync agent.
   */
  syncDatabaseId?: string;
  /**
   * Last alive time of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastAliveTime?: Date;
  /**
   * State of the sync agent. Possible values include: 'Online', 'Offline', 'NeverConnected'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: SyncAgentState;
  /**
   * If the sync agent version is up to date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUpToDate?: boolean;
  /**
   * Expiration time of the sync agent version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expiryTime?: Date;
  /**
   * Version of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
}

/**
 * Properties of an Azure SQL Database sync agent key.
 */
export interface SyncAgentKeyProperties {
  /**
   * Key of sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncAgentKey?: string;
}

/**
 * An Azure SQL Database sync agent linked database.
 */
export interface SyncAgentLinkedDatabase extends ProxyResource {
  /**
   * Type of the sync agent linked database. Possible values include: 'AzureSqlDatabase',
   * 'SqlServerDatabase'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseType?: SyncMemberDbType;
  /**
   * Id of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseId?: string;
  /**
   * Description of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Server name of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * Database name of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * User name of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
}

/**
 * Properties of the sync database id.
 */
export interface SyncDatabaseIdProperties {
  /**
   * ARM resource id of sync database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Properties of the column in the table of database full schema.
 */
export interface SyncFullSchemaTableColumn {
  /**
   * Data size of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataSize?: string;
  /**
   * Data type of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataType?: string;
  /**
   * Error id of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorId?: string;
  /**
   * If there is error in the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasError?: boolean;
  /**
   * If it is the primary key of the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPrimaryKey?: boolean;
  /**
   * Name of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Quoted name of the column.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotedName?: string;
}

/**
 * Properties of the table in the database full schema.
 */
export interface SyncFullSchemaTable {
  /**
   * List of columns in the table of database full schema.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly columns?: SyncFullSchemaTableColumn[];
  /**
   * Error id of the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorId?: string;
  /**
   * If there is error in the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasError?: boolean;
  /**
   * Name of the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Quoted name of the table.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotedName?: string;
}

/**
 * Properties of the database full schema.
 */
export interface SyncFullSchemaProperties {
  /**
   * List of tables in the database full schema.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tables?: SyncFullSchemaTable[];
  /**
   * Last update time of the database schema.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdateTime?: Date;
}

/**
 * Properties of an Azure SQL Database sync group log.
 */
export interface SyncGroupLogProperties {
  /**
   * Timestamp of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timestamp?: Date;
  /**
   * Type of the sync group log. Possible values include: 'All', 'Error', 'Warning', 'Success'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: SyncGroupLogType;
  /**
   * Source of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly source?: string;
  /**
   * Details of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: string;
  /**
   * TracingId of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tracingId?: string;
  /**
   * OperationStatus of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationStatus?: string;
}

/**
 * Properties of column in sync group table.
 */
export interface SyncGroupSchemaTableColumn {
  /**
   * Quoted name of sync group table column.
   */
  quotedName?: string;
  /**
   * Data size of the column.
   */
  dataSize?: string;
  /**
   * Data type of the column.
   */
  dataType?: string;
}

/**
 * Properties of table in sync group schema.
 */
export interface SyncGroupSchemaTable {
  /**
   * List of columns in sync group schema.
   */
  columns?: SyncGroupSchemaTableColumn[];
  /**
   * Quoted name of sync group schema table.
   */
  quotedName?: string;
}

/**
 * Properties of sync group schema.
 */
export interface SyncGroupSchema {
  /**
   * List of tables in sync group schema.
   */
  tables?: SyncGroupSchemaTable[];
  /**
   * Name of master sync member where the schema is from.
   */
  masterSyncMemberName?: string;
}

/**
 * An Azure SQL Database sync group.
 */
export interface SyncGroup extends ProxyResource {
  /**
   * Sync interval of the sync group.
   */
  interval?: number;
  /**
   * Last sync time of the sync group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastSyncTime?: Date;
  /**
   * Conflict resolution policy of the sync group. Possible values include: 'HubWin', 'MemberWin'
   */
  conflictResolutionPolicy?: SyncConflictResolutionPolicy;
  /**
   * ARM resource id of the sync database in the sync group.
   */
  syncDatabaseId?: string;
  /**
   * User name for the sync group hub database credential.
   */
  hubDatabaseUserName?: string;
  /**
   * Password for the sync group hub database credential.
   */
  hubDatabasePassword?: string;
  /**
   * Sync state of the sync group. Possible values include: 'NotReady', 'Error', 'Warning',
   * 'Progressing', 'Good'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncState?: SyncGroupState;
  /**
   * Sync schema of the sync group.
   */
  schema?: SyncGroupSchema;
}

/**
 * An Azure SQL Database sync member.
 */
export interface SyncMember extends ProxyResource {
  /**
   * Database type of the sync member. Possible values include: 'AzureSqlDatabase',
   * 'SqlServerDatabase'
   */
  databaseType?: SyncMemberDbType;
  /**
   * ARM resource id of the sync agent in the sync member.
   */
  syncAgentId?: string;
  /**
   * SQL Server database id of the sync member.
   */
  sqlServerDatabaseId?: string;
  /**
   * Server name of the member database in the sync member
   */
  serverName?: string;
  /**
   * Database name of the member database in the sync member.
   */
  databaseName?: string;
  /**
   * User name of the member database in the sync member.
   */
  userName?: string;
  /**
   * Password of the member database in the sync member.
   */
  password?: string;
  /**
   * Sync direction of the sync member. Possible values include: 'Bidirectional',
   * 'OneWayMemberToHub', 'OneWayHubToMember'
   */
  syncDirection?: SyncDirection;
  /**
   * Sync state of the sync member. Possible values include: 'SyncInProgress', 'SyncSucceeded',
   * 'SyncFailed', 'DisabledTombstoneCleanup', 'DisabledBackupRestore',
   * 'SyncSucceededWithWarnings', 'SyncCancelling', 'SyncCancelled', 'UnProvisioned',
   * 'Provisioning', 'Provisioned', 'ProvisionFailed', 'DeProvisioning', 'DeProvisioned',
   * 'DeProvisionFailed', 'Reprovisioning', 'ReprovisionFailed', 'UnReprovisioned'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly syncState?: SyncMemberState;
}

/**
 * Usage Metric of a Subscription in a Location.
 */
export interface SubscriptionUsage extends ProxyResource {
  /**
   * User-readable name of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Current value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * Boundary value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Unit of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
}

/**
 * An Azure SQL virtual cluster.
 */
export interface VirtualCluster extends TrackedResource {
  /**
   * Subnet resource ID for the virtual cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnetId?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * List of resources in this virtual cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly childResources?: string[];
}

/**
 * An update request for an Azure SQL Database virtual cluster.
 */
export interface VirtualClusterUpdate {
  /**
   * Subnet resource ID for the virtual cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnetId?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * List of resources in this virtual cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly childResources?: string[];
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A virtual network rule.
 */
export interface VirtualNetworkRule extends ProxyResource {
  /**
   * The ARM resource id of the virtual network subnet.
   */
  virtualNetworkSubnetId: string;
  /**
   * Create firewall rule before the virtual network has vnet service endpoint enabled.
   */
  ignoreMissingVnetServiceEndpoint?: boolean;
  /**
   * Virtual Network Rule State. Possible values include: 'Initializing', 'InProgress', 'Ready',
   * 'Deleting', 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: VirtualNetworkRuleState;
}

/**
 * An extended database blob auditing policy.
 */
export interface ExtendedDatabaseBlobAuditingPolicy extends ProxyResource {
  /**
   * Specifies condition of where clause when creating an audit.
   */
  predicateExpression?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account. If state is Enabled and
   * storageEndpoint is specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * An extended server blob auditing policy.
 */
export interface ExtendedServerBlobAuditingPolicy extends ProxyResource {
  /**
   * Specifies condition of where clause when creating an audit.
   */
  predicateExpression?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account. If state is Enabled and
   * storageEndpoint is specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * A server blob auditing policy.
 */
export interface ServerBlobAuditingPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account. If state is Enabled and
   * storageEndpoint is specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * A database blob auditing policy.
 */
export interface DatabaseBlobAuditingPolicy extends ProxyResource {
  /**
   * Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account. If state is Enabled and
   * storageEndpoint is specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItem {
  /**
   * The rule baseline result
   */
  result: string[];
}

/**
 * A database vulnerability assessment rule baseline.
 */
export interface DatabaseVulnerabilityAssessmentRuleBaseline extends ProxyResource {
  /**
   * The rule baseline result
   */
  baselineResults: DatabaseVulnerabilityAssessmentRuleBaselineItem[];
}

/**
 * Properties of a Vulnerability Assessment recurring scans.
 */
export interface VulnerabilityAssessmentRecurringScansProperties {
  /**
   * Recurring scans state.
   */
  isEnabled?: boolean;
  /**
   * Specifies that the schedule scan notification will be is sent to the subscription
   * administrators. Default value: true.
   */
  emailSubscriptionAdmins?: boolean;
  /**
   * Specifies an array of e-mail addresses to which the scan notification is sent.
   */
  emails?: string[];
}

/**
 * A database vulnerability assessment.
 */
export interface DatabaseVulnerabilityAssessment extends ProxyResource {
  /**
   * A blob storage container path to hold the scan results (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level
   * vulnerability assessment policy doesn't set
   */
  storageContainerPath?: string;
  /**
   * A shared access signature (SAS Key) that has read and write access to the blob container
   * specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified,
   * StorageContainerSasKey is required.
   */
  storageContainerSasKey?: string;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results.
   * If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * The recurring scans settings
   */
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * An ARM Resource SKU.
 */
export interface Sku {
  /**
   * The name of the SKU, typically, a letter + Number code, e.g. P3.
   */
  name: string;
  /**
   * The tier or edition of the particular SKU, e.g. Basic, Premium.
   */
  tier?: string;
  /**
   * Size of the particular SKU
   */
  size?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be
   * captured here.
   */
  family?: string;
  /**
   * Capacity of the particular SKU.
   */
  capacity?: number;
}

/**
 * An Azure SQL job agent.
 */
export interface JobAgent extends TrackedResource {
  /**
   * The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * Resource ID of the database to store job metadata in.
   */
  databaseId: string;
  /**
   * The state of the job agent. Possible values include: 'Creating', 'Ready', 'Updating',
   * 'Deleting', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: JobAgentState;
}

/**
 * An update to an Azure SQL job agent.
 */
export interface JobAgentUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A stored credential that can be used by a job to connect to target databases.
 */
export interface JobCredential extends ProxyResource {
  /**
   * The credential user name.
   */
  username: string;
  /**
   * The credential password.
   */
  password: string;
}

/**
 * The target that a job execution is executed on.
 */
export interface JobExecutionTarget {
  /**
   * The type of the target. Possible values include: 'TargetGroup', 'SqlDatabase',
   * 'SqlElasticPool', 'SqlShardMap', 'SqlServer'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: JobTargetType;
  /**
   * The server name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The database name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
}

/**
 * An execution of a job
 */
export interface JobExecution extends ProxyResource {
  /**
   * The job version number.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobVersion?: number;
  /**
   * The job step name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly stepName?: string;
  /**
   * The job step id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly stepId?: number;
  /**
   * The unique identifier of the job execution.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobExecutionId?: string;
  /**
   * The detailed state of the job execution. Possible values include: 'Created', 'InProgress',
   * 'WaitingForChildJobExecutions', 'WaitingForRetry', 'Succeeded', 'SucceededWithSkipped',
   * 'Failed', 'TimedOut', 'Canceled', 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lifecycle?: JobExecutionLifecycle;
  /**
   * The ARM provisioning state of the job execution. Possible values include: 'Created',
   * 'InProgress', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time that the job execution was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createTime?: Date;
  /**
   * The time that the job execution started.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The time that the job execution completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * Number of times the job execution has been attempted.
   */
  currentAttempts?: number;
  /**
   * Start time of the current attempt.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentAttemptStartTime?: Date;
  /**
   * The last status or error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastMessage?: string;
  /**
   * The target that this execution is executed on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: JobExecutionTarget;
}

/**
 * Scheduling properties of a job.
 */
export interface JobSchedule {
  /**
   * Schedule start time. Default value: new Date('0001-01-01T00:00:00Z').
   */
  startTime?: Date;
  /**
   * Schedule end time. Default value: new Date('9999-12-31T11:59:59Z').
   */
  endTime?: Date;
  /**
   * Schedule interval type. Possible values include: 'Once', 'Recurring'. Default value: 'Once'.
   */
  type?: JobScheduleType;
  /**
   * Whether or not the schedule is enabled.
   */
  enabled?: boolean;
  /**
   * Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601
   * duration format.
   */
  interval?: string;
}

/**
 * A job.
 */
export interface Job extends ProxyResource {
  /**
   * User-defined description of the job. Default value: ''.
   */
  description?: string;
  /**
   * The job version number.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: number;
  /**
   * Schedule properties of the job.
   */
  schedule?: JobSchedule;
}

/**
 * The action to be executed by a job step.
 */
export interface JobStepAction {
  /**
   * Type of action being executed by the job step. Possible values include: 'TSql'. Default value:
   * 'TSql'.
   */
  type?: JobStepActionType;
  /**
   * The source of the action to execute. Possible values include: 'Inline'. Default value:
   * 'Inline'.
   */
  source?: JobStepActionSource;
  /**
   * The action value, for example the text of the T-SQL script to execute.
   */
  value: string;
}

/**
 * The output configuration of a job step.
 */
export interface JobStepOutput {
  /**
   * The output destination type. Possible values include: 'SqlDatabase'. Default value:
   * 'SqlDatabase'.
   */
  type?: JobStepOutputType;
  /**
   * The output destination subscription id.
   */
  subscriptionId?: string;
  /**
   * The output destination resource group.
   */
  resourceGroupName?: string;
  /**
   * The output destination server name.
   */
  serverName: string;
  /**
   * The output destination database.
   */
  databaseName: string;
  /**
   * The output destination schema. Default value: 'dbo'.
   */
  schemaName?: string;
  /**
   * The output destination table.
   */
  tableName: string;
  /**
   * The resource ID of the credential to use to connect to the output destination.
   */
  credential: string;
}

/**
 * The execution options of a job step.
 */
export interface JobStepExecutionOptions {
  /**
   * Execution timeout for the job step. Default value: 43200.
   */
  timeoutSeconds?: number;
  /**
   * Maximum number of times the job step will be reattempted if the first attempt fails. Default
   * value: 10.
   */
  retryAttempts?: number;
  /**
   * Initial delay between retries for job step execution. Default value: 1.
   */
  initialRetryIntervalSeconds?: number;
  /**
   * The maximum amount of time to wait between retries for job step execution. Default value: 120.
   */
  maximumRetryIntervalSeconds?: number;
  /**
   * The backoff multiplier for the time between retries. Default value: 2.
   */
  retryIntervalBackoffMultiplier?: number;
}

/**
 * A job step.
 */
export interface JobStep extends ProxyResource {
  /**
   * The job step's index within the job. If not specified when creating the job step, it will be
   * created as the last step. If not specified when updating the job step, the step id is not
   * modified.
   */
  stepId?: number;
  /**
   * The resource ID of the target group that the job step will be executed on.
   */
  targetGroup: string;
  /**
   * The resource ID of the job credential that will be used to connect to the targets.
   */
  credential: string;
  /**
   * The action payload of the job step.
   */
  action: JobStepAction;
  /**
   * Output destination properties of the job step.
   */
  output?: JobStepOutput;
  /**
   * Execution options for the job step.
   */
  executionOptions?: JobStepExecutionOptions;
}

/**
 * A job target, for example a specific database or a container of databases that is evaluated
 * during job execution.
 */
export interface JobTarget {
  /**
   * Whether the target is included or excluded from the group. Possible values include: 'Include',
   * 'Exclude'. Default value: 'Include'.
   */
  membershipType?: JobTargetGroupMembershipType;
  /**
   * The target type. Possible values include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool',
   * 'SqlShardMap', 'SqlServer'
   */
  type: JobTargetType;
  /**
   * The target server name.
   */
  serverName?: string;
  /**
   * The target database name.
   */
  databaseName?: string;
  /**
   * The target elastic pool name.
   */
  elasticPoolName?: string;
  /**
   * The target shard map.
   */
  shardMapName?: string;
  /**
   * The resource ID of the credential that is used during job execution to connect to the target
   * and determine the list of databases inside the target.
   */
  refreshCredential?: string;
}

/**
 * A group of job targets.
 */
export interface JobTargetGroup extends ProxyResource {
  /**
   * Members of the target group.
   */
  members: JobTarget[];
}

/**
 * A job version.
 */
export interface JobVersion extends ProxyResource {
}

/**
 * A long term retention backup.
 */
export interface LongTermRetentionBackup extends ProxyResource {
  /**
   * The server name that the backup database belong to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The create time of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverCreateTime?: Date;
  /**
   * The name of the database the backup belong to
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The delete time of the database
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseDeletionTime?: Date;
  /**
   * The time the backup was taken
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupTime?: Date;
  /**
   * The time the long term retention backup will expire.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly backupExpirationTime?: Date;
}

/**
 * A long term retention policy.
 */
export interface BackupLongTermRetentionPolicy extends ProxyResource {
  /**
   * The weekly retention policy for an LTR backup in an ISO 8601 format.
   */
  weeklyRetention?: string;
  /**
   * The monthly retention policy for an LTR backup in an ISO 8601 format.
   */
  monthlyRetention?: string;
  /**
   * The yearly retention policy for an LTR backup in an ISO 8601 format.
   */
  yearlyRetention?: string;
  /**
   * The week of year to take the yearly backup in an ISO 8601 format.
   */
  weekOfYear?: number;
}

/**
 * A short term retention policy.
 */
export interface ManagedBackupShortTermRetentionPolicy extends ProxyResource {
  /**
   * The backup retention period in days. This is how many days Point-in-Time Restore will be
   * supported.
   */
  retentionDays?: number;
}

/**
 * Automatic tuning properties for individual advisors.
 */
export interface AutomaticTuningServerOptions {
  /**
   * Automatic tuning option desired state. Possible values include: 'Off', 'On', 'Default'
   */
  desiredState?: AutomaticTuningOptionModeDesired;
  /**
   * Automatic tuning option actual state. Possible values include: 'Off', 'On'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: AutomaticTuningOptionModeActual;
  /**
   * Reason code if desired and actual state are different.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonCode?: number;
  /**
   * Reason description if desired and actual state are different. Possible values include:
   * 'Default', 'Disabled', 'AutoConfigured'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonDesc?: AutomaticTuningServerReason;
}

/**
 * Server-level Automatic Tuning.
 */
export interface ServerAutomaticTuning extends ProxyResource {
  /**
   * Automatic tuning desired state. Possible values include: 'Custom', 'Auto', 'Unspecified'
   */
  desiredState?: AutomaticTuningServerMode;
  /**
   * Automatic tuning actual state. Possible values include: 'Custom', 'Auto', 'Unspecified'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: AutomaticTuningServerMode;
  /**
   * Automatic tuning options definition.
   */
  options?: { [propertyName: string]: AutomaticTuningServerOptions };
}

/**
 * A server DNS alias.
 */
export interface ServerDnsAlias extends ProxyResource {
  /**
   * The fully qualified DNS record for alias
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly azureDnsRecord?: string;
}

/**
 * A server DNS alias acquisition request.
 */
export interface ServerDnsAliasAcquisition {
  /**
   * The id of the server alias that will be acquired to point to this server instead.
   */
  oldServerDnsAliasId?: string;
}

/**
 * A server security alert policy.
 */
export interface ServerSecurityAlertPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been
   * applied yet on the specific database. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection,
   * Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action
   */
  disabledAlerts?: string[];
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * Specifies the UTC creation time of the policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * A restorable dropped managed database resource.
 */
export interface RestorableDroppedManagedDatabase extends TrackedResource {
  /**
   * The name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The creation date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The deletion date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deletionDate?: Date;
  /**
   * The earliest restore date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
}

/**
 * Database restore points.
 */
export interface RestorePoint extends ProxyResource {
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The type of restore point. Possible values include: 'CONTINUOUS', 'DISCRETE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointType?: RestorePointType;
  /**
   * The earliest time to which this database can be restored
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * The time the backup was taken
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointCreationDate?: Date;
  /**
   * The label of restore point for backup request by user
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointLabel?: string;
}

/**
 * Contains the information necessary to perform a create database restore point operation.
 */
export interface CreateDatabaseRestorePointDefinition {
  /**
   * The restore point label to apply
   */
  restorePointLabel: string;
}

/**
 * A managed database security alert policy.
 */
export interface ManagedDatabaseSecurityAlertPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been
   * applied yet on the specific database. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection,
   * Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action
   */
  disabledAlerts?: string[];
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * Specifies the UTC creation time of the policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * A managed server security alert policy.
 */
export interface ManagedServerSecurityAlertPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been
   * applied yet on the specific database. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection,
   * Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action
   */
  disabledAlerts?: string[];
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * Specifies the UTC creation time of the policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * A sensitivity label.
 */
export interface SensitivityLabel extends ProxyResource {
  /**
   * The label name.
   */
  labelName?: string;
  /**
   * The label ID.
   */
  labelId?: string;
  /**
   * The information type.
   */
  informationType?: string;
  /**
   * The information type ID.
   */
  informationTypeId?: string;
  /**
   * Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only.
   * Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or
   * not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDisabled?: boolean;
}

/**
 * An Azure SQL managed instance administrator.
 */
export interface ManagedInstanceAdministrator extends ProxyResource {
  /**
   * Login name of the managed instance administrator.
   */
  login: string;
  /**
   * SID (object ID) of the managed instance administrator.
   */
  sid: string;
  /**
   * Tenant ID of the managed instance administrator.
   */
  tenantId?: string;
}

/**
 * A database operation.
 */
export interface DatabaseOperation extends ProxyResource {
  /**
   * The name of the database the operation is being performed on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The friendly name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationFriendlyName?: string;
  /**
   * The percentage of the operation completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The operation start time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The operation state. Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed',
   * 'CancelInProgress', 'Cancelled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ManagementOperationState;
  /**
   * The operation error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The operation error description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDescription?: string;
  /**
   * The operation error severity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorSeverity?: number;
  /**
   * Whether or not the error is a user error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUserError?: boolean;
  /**
   * The estimated completion time of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly estimatedCompletionTime?: Date;
  /**
   * The operation description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Whether the operation can be cancelled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCancellable?: boolean;
}

/**
 * A elastic pool operation.
 */
export interface ElasticPoolOperation extends ProxyResource {
  /**
   * The name of the elastic pool the operation is being performed on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * The name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The friendly name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationFriendlyName?: string;
  /**
   * The percentage of the operation completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The operation start time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The operation state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The operation error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The operation error description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDescription?: string;
  /**
   * The operation error severity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorSeverity?: number;
  /**
   * Whether or not the error is a user error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUserError?: boolean;
  /**
   * The estimated completion time of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly estimatedCompletionTime?: Date;
  /**
   * The operation description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Whether the operation can be cancelled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCancellable?: boolean;
}

/**
 * The maximum size capability.
 */
export interface MaxSizeCapability {
  /**
   * The maximum size limit (see 'unit' for the units).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The units that the limit is expressed in. Possible values include: 'Megabytes', 'Gigabytes',
   * 'Terabytes', 'Petabytes'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: MaxSizeUnit;
}

/**
 * The log size capability.
 */
export interface LogSizeCapability {
  /**
   * The log size limit (see 'unit' for the units).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The units that the limit is expressed in. Possible values include: 'Megabytes', 'Gigabytes',
   * 'Terabytes', 'Petabytes', 'Percent'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: LogSizeUnit;
}

/**
 * The maximum size range capability.
 */
export interface MaxSizeRangeCapability {
  /**
   * Minimum value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minValue?: MaxSizeCapability;
  /**
   * Maximum value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxValue?: MaxSizeCapability;
  /**
   * Scale/step size for discrete values between the minimum value and the maximum value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scaleSize?: MaxSizeCapability;
  /**
   * Size of transaction log.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly logSize?: LogSizeCapability;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The performance level capability.
 */
export interface PerformanceLevelCapability {
  /**
   * Performance level value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: number;
  /**
   * Unit type used to measure performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: PerformanceLevelUnit;
}

/**
 * The license type capability
 */
export interface LicenseTypeCapability {
  /**
   * License type identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The service objectives capability.
 */
export interface ServiceObjectiveCapability {
  /**
   * The unique ID of the service objective.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The service objective name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported maximum database sizes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedMaxSizes?: MaxSizeRangeCapability[];
  /**
   * The performance level.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly performanceLevel?: PerformanceLevelCapability;
  /**
   * The sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: Sku;
  /**
   * List of supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * The included (free) max size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The edition capability.
 */
export interface EditionCapability {
  /**
   * The database edition name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported service objectives for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedServiceLevelObjectives?: ServiceObjectiveCapability[];
  /**
   * Whether or not zone redundancy is supported for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zoneRedundant?: boolean;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The minimum per-database performance level capability.
 */
export interface ElasticPoolPerDatabaseMinPerformanceLevelCapability {
  /**
   * The minimum performance level per database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Unit type used to measure performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: PerformanceLevelUnit;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The max per-database performance level capability.
 */
export interface ElasticPoolPerDatabaseMaxPerformanceLevelCapability {
  /**
   * The maximum performance level per database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Unit type used to measure performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: PerformanceLevelUnit;
  /**
   * The list of supported min database performance levels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedPerDatabaseMinPerformanceLevels?: ElasticPoolPerDatabaseMinPerformanceLevelCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The Elastic Pool performance level capability.
 */
export interface ElasticPoolPerformanceLevelCapability {
  /**
   * The performance level for the pool.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly performanceLevel?: PerformanceLevelCapability;
  /**
   * The sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: Sku;
  /**
   * List of supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * The maximum number of databases supported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxDatabaseCount?: number;
  /**
   * The included (free) max size for this performance level.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * The list of supported max sizes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedMaxSizes?: MaxSizeRangeCapability[];
  /**
   * The list of supported per database max sizes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedPerDatabaseMaxSizes?: MaxSizeRangeCapability[];
  /**
   * The list of supported per database max performance levels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedPerDatabaseMaxPerformanceLevels?: ElasticPoolPerDatabaseMaxPerformanceLevelCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The elastic pool edition capability.
 */
export interface ElasticPoolEditionCapability {
  /**
   * The elastic pool edition name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported elastic pool DTU levels for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedElasticPoolPerformanceLevels?: ElasticPoolPerformanceLevelCapability[];
  /**
   * Whether or not zone redundancy is supported for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zoneRedundant?: boolean;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The server capability
 */
export interface ServerVersionCapability {
  /**
   * The server version name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported database editions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedEditions?: EditionCapability[];
  /**
   * The list of supported elastic pool editions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedElasticPoolEditions?: ElasticPoolEditionCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The managed instance virtual cores capability.
 */
export interface ManagedInstanceVcoresCapability {
  /**
   * The virtual cores identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The virtual cores value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: number;
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The managed server family capability.
 */
export interface ManagedInstanceFamilyCapability {
  /**
   * Family name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * SKU name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: string;
  /**
   * List of supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * List of supported virtual cores values.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedVcoresValues?: ManagedInstanceVcoresCapability[];
  /**
   * Included size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * Storage size ranges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedStorageSizes?: MaxSizeRangeCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The managed server capability
 */
export interface ManagedInstanceEditionCapability {
  /**
   * The managed server version name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The supported families.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedFamilies?: ManagedInstanceFamilyCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The managed instance capability
 */
export interface ManagedInstanceVersionCapability {
  /**
   * The server version name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported managed instance editions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedEditions?: ManagedInstanceEditionCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * The location capability.
 */
export interface LocationCapabilities {
  /**
   * The location name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The list of supported server versions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedServerVersions?: ServerVersionCapability[];
  /**
   * The list of supported managed instance versions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedManagedInstanceVersions?: ManagedInstanceVersionCapability[];
  /**
   * The status of the capability. Possible values include: 'Visible', 'Available', 'Default',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * The reason for the capability not being available.
   */
  reason?: string;
}

/**
 * A database resource.
 */
export interface Database extends TrackedResource {
  /**
   * The database SKU.
   *
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the
   * SKU name, tier/edition, family, and capacity) that are available to your subscription in an
   * Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:
   *
   * ```azurecli
   * az sql db list-editions -l <location> -o table
   * ````
   *
   * ```powershell
   * Get-AzSqlServerServiceObjective -Location <location>
   * ````
   */
  sku?: Sku;
  /**
   * Kind of database. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Resource that manages the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedBy?: string;
  /**
   * Specifies the mode of database creation.
   *
   * Default: regular database creation.
   *
   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified
   * as the resource ID of the source database.
   *
   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId
   * must be specified as the resource ID of the existing primary database.
   *
   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing
   * database. sourceDatabaseId must be specified as the resource ID of the existing database, and
   * restorePointInTime must be specified.
   *
   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be
   * specified as the recoverable database resource ID to restore.
   *
   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must
   * be specified. If sourceDatabaseId is the database's original resource ID, then
   * sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the
   * restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored.
   * restorePointInTime may also be specified to restore from an earlier point in time.
   *
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention
   * vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point
   * resource ID.
   *
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse
   * edition. Possible values include: 'Default', 'Copy', 'Secondary', 'PointInTimeRestore',
   * 'Restore', 'Recovery', 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
   * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
   */
  createMode?: CreateMode;
  /**
   * The collation of the database.
   */
  collation?: string;
  /**
   * The max size of the database expressed in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The name of the sample schema to apply when creating this database. Possible values include:
   * 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
   */
  sampleName?: SampleName;
  /**
   * The resource identifier of the elastic pool containing this database.
   */
  elasticPoolId?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The status of the database. Possible values include: 'Online', 'Restoring', 'RecoveryPending',
   * 'Recovering', 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed',
   * 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming',
   * 'Scaling', 'OfflineChangingDwPerformanceTiers', 'OnlineChangingDwPerformanceTiers', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DatabaseStatus;
  /**
   * The ID of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseId?: string;
  /**
   * The creation date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The current service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceObjectiveName?: string;
  /**
   * The requested service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedServiceObjectiveName?: string;
  /**
   * The default secondary region for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Failover Group resource identifier that this database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Specifies the time that the database was deleted.
   */
  sourceDatabaseDeletionDate?: Date;
  /**
   * The resource identifier of the recovery point associated with create operation of this
   * database.
   */
  recoveryServicesRecoveryPointId?: string;
  /**
   * The resource identifier of the long term retention backup associated with create operation of
   * this database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * The resource identifier of the restorable dropped database associated with create operation of
   * this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Whether or not this database is zone redundant, which means the replicas of this database will
   * be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * The license type to apply for this database. Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType?: DatabaseLicenseType;
  /**
   * The max log size for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxLogSizeBytes?: number;
  /**
   * This records the earliest start date and time that restore is available for this database
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * If enabled, connections that have application intent set to readonly in their connection
   * string may be routed to a readonly secondary replica. This property is only settable for
   * Premium and Business Critical databases. Possible values include: 'Enabled', 'Disabled'
   */
  readScale?: DatabaseReadScale;
  /**
   * The number of readonly secondary replicas associated with the database to which readonly
   * application intent connections may be routed. This property is only settable for Hyperscale
   * edition databases.
   */
  readReplicaCount?: number;
  /**
   * The name and tier of the SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentSku?: Sku;
  /**
   * Time in minutes after which database is automatically paused. A value of -1 means that
   * automatic pause is disabled
   */
  autoPauseDelay?: number;
  /**
   * Minimal capacity that database will always have allocated, if not paused
   */
  minCapacity?: number;
  /**
   * The date when database was paused by user configuration or action (ISO8601 format). Null if
   * the database is ready.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pausedDate?: Date;
  /**
   * The date when database was resumed by user action or database login (ISO8601 format). Null if
   * the database is paused.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resumedDate?: Date;
}

/**
 * A database resource.
 */
export interface DatabaseUpdate {
  /**
   * The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * Specifies the mode of database creation.
   *
   * Default: regular database creation.
   *
   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified
   * as the resource ID of the source database.
   *
   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId
   * must be specified as the resource ID of the existing primary database.
   *
   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing
   * database. sourceDatabaseId must be specified as the resource ID of the existing database, and
   * restorePointInTime must be specified.
   *
   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be
   * specified as the recoverable database resource ID to restore.
   *
   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must
   * be specified. If sourceDatabaseId is the database's original resource ID, then
   * sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the
   * restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored.
   * restorePointInTime may also be specified to restore from an earlier point in time.
   *
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention
   * vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point
   * resource ID.
   *
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse
   * edition. Possible values include: 'Default', 'Copy', 'Secondary', 'PointInTimeRestore',
   * 'Restore', 'Recovery', 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
   * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
   */
  createMode?: CreateMode;
  /**
   * The collation of the database.
   */
  collation?: string;
  /**
   * The max size of the database expressed in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The name of the sample schema to apply when creating this database. Possible values include:
   * 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
   */
  sampleName?: SampleName;
  /**
   * The resource identifier of the elastic pool containing this database.
   */
  elasticPoolId?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The status of the database. Possible values include: 'Online', 'Restoring', 'RecoveryPending',
   * 'Recovering', 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed',
   * 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming',
   * 'Scaling', 'OfflineChangingDwPerformanceTiers', 'OnlineChangingDwPerformanceTiers', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: DatabaseStatus;
  /**
   * The ID of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseId?: string;
  /**
   * The creation date of the database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The current service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentServiceObjectiveName?: string;
  /**
   * The requested service level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedServiceObjectiveName?: string;
  /**
   * The default secondary region for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Failover Group resource identifier that this database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Specifies the time that the database was deleted.
   */
  sourceDatabaseDeletionDate?: Date;
  /**
   * The resource identifier of the recovery point associated with create operation of this
   * database.
   */
  recoveryServicesRecoveryPointId?: string;
  /**
   * The resource identifier of the long term retention backup associated with create operation of
   * this database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * The resource identifier of the restorable dropped database associated with create operation of
   * this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Whether or not this database is zone redundant, which means the replicas of this database will
   * be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * The license type to apply for this database. Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType?: DatabaseLicenseType;
  /**
   * The max log size for this database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxLogSizeBytes?: number;
  /**
   * This records the earliest start date and time that restore is available for this database
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * If enabled, connections that have application intent set to readonly in their connection
   * string may be routed to a readonly secondary replica. This property is only settable for
   * Premium and Business Critical databases. Possible values include: 'Enabled', 'Disabled'
   */
  readScale?: DatabaseReadScale;
  /**
   * The number of readonly secondary replicas associated with the database to which readonly
   * application intent connections may be routed. This property is only settable for Hyperscale
   * edition databases.
   */
  readReplicaCount?: number;
  /**
   * The name and tier of the SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentSku?: Sku;
  /**
   * Time in minutes after which database is automatically paused. A value of -1 means that
   * automatic pause is disabled
   */
  autoPauseDelay?: number;
  /**
   * Minimal capacity that database will always have allocated, if not paused
   */
  minCapacity?: number;
  /**
   * The date when database was paused by user configuration or action (ISO8601 format). Null if
   * the database is ready.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pausedDate?: Date;
  /**
   * The date when database was resumed by user action or database login (ISO8601 format). Null if
   * the database is paused.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resumedDate?: Date;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Contains the information necessary to perform a resource move (rename).
 */
export interface ResourceMoveDefinition {
  /**
   * The target ID for the resource
   */
  id: string;
}

/**
 * Per database settings of an elastic pool.
 */
export interface ElasticPoolPerDatabaseSettings {
  /**
   * The minimum capacity all databases are guaranteed.
   */
  minCapacity?: number;
  /**
   * The maximum capacity any one database can consume.
   */
  maxCapacity?: number;
}

/**
 * An elastic pool.
 */
export interface ElasticPool extends TrackedResource {
  /**
   * The elastic pool SKU.
   *
   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the
   * SKU name, tier/edition, family, and capacity) that are available to your subscription in an
   * Azure region, use the `Capabilities_ListByLocation` REST API or the following command:
   *
   * ```azurecli
   * az sql elastic-pool list-editions -l <location> -o table
   * ````
   */
  sku?: Sku;
  /**
   * Kind of elastic pool. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The state of the elastic pool. Possible values include: 'Creating', 'Ready', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ElasticPoolState;
  /**
   * The creation date of the elastic pool (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The storage limit for the database elastic pool in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The per database settings for the elastic pool.
   */
  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;
  /**
   * Whether or not this elastic pool is zone redundant, which means the replicas of this elastic
   * pool will be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * The license type to apply for this elastic pool. Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType?: ElasticPoolLicenseType;
}

/**
 * An elastic pool update.
 */
export interface ElasticPoolUpdate {
  sku?: Sku;
  /**
   * The storage limit for the database elastic pool in bytes.
   */
  maxSizeBytes?: number;
  /**
   * The per database settings for the elastic pool.
   */
  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;
  /**
   * Whether or not this elastic pool is zone redundant, which means the replicas of this elastic
   * pool will be spread across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * The license type to apply for this elastic pool. Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType?: ElasticPoolLicenseType;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Properties of a vulnerability assessment scan error.
 */
export interface VulnerabilityAssessmentScanError {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * A vulnerability assessment scan record.
 */
export interface VulnerabilityAssessmentScanRecord extends ProxyResource {
  /**
   * The scan ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scanId?: string;
  /**
   * The scan trigger type. Possible values include: 'OnDemand', 'Recurring'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly triggerType?: VulnerabilityAssessmentScanTriggerType;
  /**
   * The scan status. Possible values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: VulnerabilityAssessmentScanState;
  /**
   * The scan start time (UTC).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The scan end time (UTC).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * The scan errors.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errors?: VulnerabilityAssessmentScanError[];
  /**
   * The scan results storage container path.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageContainerPath?: string;
  /**
   * The number of failed security checks.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfFailedSecurityChecks?: number;
}

/**
 * A database Vulnerability Assessment scan export resource.
 */
export interface DatabaseVulnerabilityAssessmentScansExport extends ProxyResource {
  /**
   * Location of the exported report (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly exportedReportLocation?: string;
}

/**
 * Read-write endpoint of the failover group instance.
 */
export interface InstanceFailoverGroupReadWriteEndpoint {
  /**
   * Failover policy of the read-write endpoint for the failover group. If failoverPolicy is
   * Automatic then failoverWithDataLossGracePeriodMinutes is required. Possible values include:
   * 'Manual', 'Automatic'
   */
  failoverPolicy: ReadWriteEndpointFailoverPolicy;
  /**
   * Grace period before failover with data loss is attempted for the read-write endpoint. If
   * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
   */
  failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * Read-only endpoint of the failover group instance.
 */
export interface InstanceFailoverGroupReadOnlyEndpoint {
  /**
   * Failover policy of the read-only endpoint for the failover group. Possible values include:
   * 'Disabled', 'Enabled'
   */
  failoverPolicy?: ReadOnlyEndpointFailoverPolicy;
}

/**
 * Partner region information for the failover group.
 */
export interface PartnerRegionInfo {
  /**
   * Geo location of the partner managed instances.
   */
  location?: string;
  /**
   * Replication role of the partner managed instances. Possible values include: 'Primary',
   * 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationRole?: InstanceFailoverGroupReplicationRole;
}

/**
 * Pairs of Managed Instances in the failover group.
 */
export interface ManagedInstancePairInfo {
  /**
   * Id of Primary Managed Instance in pair.
   */
  primaryManagedInstanceId?: string;
  /**
   * Id of Partner Managed Instance in pair.
   */
  partnerManagedInstanceId?: string;
}

/**
 * An instance failover group.
 */
export interface InstanceFailoverGroup extends ProxyResource {
  /**
   * Read-write endpoint of the failover group instance.
   */
  readWriteEndpoint: InstanceFailoverGroupReadWriteEndpoint;
  /**
   * Read-only endpoint of the failover group instance.
   */
  readOnlyEndpoint?: InstanceFailoverGroupReadOnlyEndpoint;
  /**
   * Local replication role of the failover group instance. Possible values include: 'Primary',
   * 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationRole?: InstanceFailoverGroupReplicationRole;
  /**
   * Replication state of the failover group instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationState?: string;
  /**
   * Partner region information for the failover group.
   */
  partnerRegions: PartnerRegionInfo[];
  /**
   * List of managed instance pairs in the failover group.
   */
  managedInstancePairs: ManagedInstancePairInfo[];
}

/**
 * A short term retention policy.
 */
export interface BackupShortTermRetentionPolicy extends ProxyResource {
  /**
   * The backup retention period in days. This is how many days Point-in-Time Restore will be
   * supported.
   */
  retentionDays?: number;
}

/**
 * A TDE certificate that can be uploaded into a server.
 */
export interface TdeCertificate extends ProxyResource {
  /**
   * The base64 encoded certificate private blob.
   */
  privateBlob: string;
  /**
   * The certificate password.
   */
  certPassword?: string;
}

/**
 * A managed instance key.
 */
export interface ManagedInstanceKey extends ProxyResource {
  /**
   * Kind of encryption protector. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The key type like 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.
   */
  uri?: string;
  /**
   * Thumbprint of the key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
  /**
   * The key creation date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
}

/**
 * The managed instance encryption protector.
 */
export interface ManagedInstanceEncryptionProtector extends ProxyResource {
  /**
   * Kind of encryption protector. This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The name of the managed instance key.
   */
  serverKeyName?: string;
  /**
   * The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * The URI of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uri?: string;
  /**
   * Thumbprint of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbprint?: string;
}

/**
 * A recoverable managed database resource.
 */
export interface RecoverableManagedDatabase extends ProxyResource {
  /**
   * The last available backup date.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastAvailableBackupDate?: string;
}

/**
 * A managed instance vulnerability assessment.
 */
export interface ManagedInstanceVulnerabilityAssessment extends ProxyResource {
  /**
   * A blob storage container path to hold the scan results (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/).
   */
  storageContainerPath: string;
  /**
   * A shared access signature (SAS Key) that has read and write access to the blob container
   * specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified,
   * StorageContainerSasKey is required.
   */
  storageContainerSasKey?: string;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results.
   * If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * The recurring scans settings
   */
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * A server vulnerability assessment.
 */
export interface ServerVulnerabilityAssessment extends ProxyResource {
  /**
   * A blob storage container path to hold the scan results (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/).
   */
  storageContainerPath: string;
  /**
   * A shared access signature (SAS Key) that has read and write access to the blob container
   * specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified,
   * StorageContainerSasKey is required.
   */
  storageContainerSasKey?: string;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results.
   * If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * The recurring scans settings
   */
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * An Azure SQL instance pool.
 */
export interface InstancePool extends TrackedResource {
  /**
   * The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * Resource ID of the subnet to place this instance pool in.
   */
  subnetId: string;
  /**
   * Count of vCores belonging to this instance pool.
   */
  vCores: number;
  /**
   * The license type. Possible values are 'LicenseIncluded' (price for SQL license is included)
   * and 'BasePrice' (without SQL license price). Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType: InstancePoolLicenseType;
}

/**
 * An update to an Instance pool.
 */
export interface InstancePoolUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * ARM Usage Name
 */
export interface Name {
  /**
   * Usage name value
   */
  value?: string;
  /**
   * Usage name localized value.
   */
  localizedValue?: string;
}

/**
 * ARM usage.
 */
export interface Usage {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: Name;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Usage unit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * Usage current value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * Usage limit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Usage requested limit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestedLimit?: number;
}

/**
 * An Azure SQL managed instance.
 */
export interface ManagedInstance extends TrackedResource {
  /**
   * The Azure Active Directory identity of the managed instance.
   */
  identity?: ResourceIdentity;
  /**
   * Managed instance SKU. Allowed values for sku.name: GP_Gen4, GP_Gen5, BC_Gen4, BC_Gen5
   */
  sku?: Sku;
  /**
   * Specifies the mode of database creation.
   *
   * Default: Regular instance creation.
   *
   * Restore: Creates an instance by restoring a set of backups to specific point in time.
   * RestorePointInTime and SourceManagedInstanceId must be specified. Possible values include:
   * 'Default', 'PointInTimeRestore'
   */
  managedInstanceCreateMode?: ManagedServerCreateMode;
  /**
   * The fully qualified domain name of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * Administrator username for the managed instance. Can only be specified when the managed
   * instance is being created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for managed instance creation).
   */
  administratorLoginPassword?: string;
  /**
   * Subnet resource ID for the managed instance.
   */
  subnetId?: string;
  /**
   * The state of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL
   * license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses). Possible
   * values include: 'LicenseIncluded', 'BasePrice'
   */
  licenseType?: ManagedInstanceLicenseType;
  /**
   * The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
   */
  vCores?: number;
  /**
   * Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.
   */
  storageSizeInGB?: number;
  /**
   * Collation of the managed instance.
   */
  collation?: string;
  /**
   * The Dns Zone that the managed instance is in.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dnsZone?: string;
  /**
   * The resource id of another managed instance whose DNS zone this managed instance will share
   * after creation.
   */
  dnsZonePartner?: string;
  /**
   * Whether or not the public data endpoint is enabled.
   */
  publicDataEndpointEnabled?: boolean;
  /**
   * The resource identifier of the source managed instance associated with create operation of
   * this instance.
   */
  sourceManagedInstanceId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Connection type used for connecting to the instance. Possible values include: 'Proxy',
   * 'Redirect', 'Default'
   */
  proxyOverride?: ManagedInstanceProxyOverride;
  /**
   * Id of the timezone. Allowed values are timezones supported by Windows.
   * Windows keeps details on supported timezones, including the id, in registry under
   * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
   * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM
   * sys.time_zone_info.
   * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in
   * PowerShell.
   * An example of valid timezone id is "Pacific Standard Time" or "W. Europe Standard Time".
   */
  timezoneId?: string;
  /**
   * The Id of the instance pool this managed server belongs to.
   */
  instancePoolId?: string;
}

/**
 * An update request for an Azure SQL Database managed instance.
 */
export interface ManagedInstanceUpdate {
  /**
   * Managed instance sku
   */
  sku?: Sku;
  /**
   * Specifies the mode of database creation.
   *
   * Default: Regular instance creation.
   *
   * Restore: Creates an instance by restoring a set of backups to specific point in time.
   * RestorePointInTime and SourceManagedInstanceId must be specified. Possible values include:
   * 'Default', 'PointInTimeRestore'
   */
  managedInstanceCreateMode?: ManagedServerCreateMode;
  /**
   * The fully qualified domain name of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * Administrator username for the managed instance. Can only be specified when the managed
   * instance is being created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * The administrator login password (required for managed instance creation).
   */
  administratorLoginPassword?: string;
  /**
   * Subnet resource ID for the managed instance.
   */
  subnetId?: string;
  /**
   * The state of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: string;
  /**
   * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL
   * license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses). Possible
   * values include: 'LicenseIncluded', 'BasePrice'
   */
  licenseType?: ManagedInstanceLicenseType;
  /**
   * The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
   */
  vCores?: number;
  /**
   * Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.
   */
  storageSizeInGB?: number;
  /**
   * Collation of the managed instance.
   */
  collation?: string;
  /**
   * The Dns Zone that the managed instance is in.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dnsZone?: string;
  /**
   * The resource id of another managed instance whose DNS zone this managed instance will share
   * after creation.
   */
  dnsZonePartner?: string;
  /**
   * Whether or not the public data endpoint is enabled.
   */
  publicDataEndpointEnabled?: boolean;
  /**
   * The resource identifier of the source managed instance associated with create operation of
   * this instance.
   */
  sourceManagedInstanceId?: string;
  /**
   * Specifies the point in time (ISO8601 format) of the source database that will be restored to
   * create the new database.
   */
  restorePointInTime?: Date;
  /**
   * Connection type used for connecting to the instance. Possible values include: 'Proxy',
   * 'Redirect', 'Default'
   */
  proxyOverride?: ManagedInstanceProxyOverride;
  /**
   * Id of the timezone. Allowed values are timezones supported by Windows.
   * Windows keeps details on supported timezones, including the id, in registry under
   * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
   * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM
   * sys.time_zone_info.
   * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in
   * PowerShell.
   * An example of valid timezone id is "Pacific Standard Time" or "W. Europe Standard Time".
   */
  timezoneId?: string;
  /**
   * The Id of the instance pool this managed server belongs to.
   */
  instancePoolId?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A managed database restore details.
 */
export interface ManagedDatabaseRestoreDetailsResult extends ProxyResource {
  /**
   * Restore status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * Current restoring file name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentRestoringFileName?: string;
  /**
   * Last restored file name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastRestoredFileName?: string;
  /**
   * Last restored file time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastRestoredFileTime?: Date;
  /**
   * Percent completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentCompleted?: number;
  /**
   * List of unrestorable files.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unrestorableFiles?: string[];
  /**
   * Number of files detected.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfFilesDetected?: number;
  /**
   * Last uploaded file name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUploadedFileName?: string;
  /**
   * Last uploaded file time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUploadedFileTime?: Date;
  /**
   * The reason why restore is in Blocked state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly blockReason?: string;
}

/**
 * A managed database resource.
 */
export interface ManagedDatabase extends TrackedResource {
  /**
   * Collation of the managed database.
   */
  collation?: string;
  /**
   * Status of the database. Possible values include: 'Online', 'Offline', 'Shutdown', 'Creating',
   * 'Inaccessible', 'Restoring', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ManagedDatabaseStatus;
  /**
   * Creation date of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * Earliest restore point in time for point in time restore.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestorePoint?: Date;
  /**
   * Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point
   * in time (ISO8601 format) of the source database that will be restored to create the new
   * database.
   */
  restorePointInTime?: Date;
  /**
   * Geo paired region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Managed database create mode. PointInTimeRestore: Create a database by restoring a point in
   * time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and
   * PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from
   * external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be
   * specified. Recovery: Creates a database by restoring a geo-replicated backup.
   * RecoverableDatabaseId must be specified as the recoverable database resource ID to restore.
   * Possible values include: 'Default', 'RestoreExternalBackup', 'PointInTimeRestore', 'Recovery'
   */
  createMode?: ManagedDatabaseCreateMode;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri
   * of the storage container where backups for this restore are stored.
   */
  storageContainerUri?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The restorable dropped database resource id to restore when creating this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the
   * storage container sas token.
   */
  storageContainerSasToken?: string;
  /**
   * Instance Failover Group resource identifier that this managed database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
}

/**
 * An managed database update.
 */
export interface ManagedDatabaseUpdate {
  /**
   * Collation of the managed database.
   */
  collation?: string;
  /**
   * Status of the database. Possible values include: 'Online', 'Offline', 'Shutdown', 'Creating',
   * 'Inaccessible', 'Restoring', 'Updating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ManagedDatabaseStatus;
  /**
   * Creation date of the database.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * Earliest restore point in time for point in time restore.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestorePoint?: Date;
  /**
   * Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point
   * in time (ISO8601 format) of the source database that will be restored to create the new
   * database.
   */
  restorePointInTime?: Date;
  /**
   * Geo paired region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * Collation of the metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * Managed database create mode. PointInTimeRestore: Create a database by restoring a point in
   * time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and
   * PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from
   * external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be
   * specified. Recovery: Creates a database by restoring a geo-replicated backup.
   * RecoverableDatabaseId must be specified as the recoverable database resource ID to restore.
   * Possible values include: 'Default', 'RestoreExternalBackup', 'PointInTimeRestore', 'Recovery'
   */
  createMode?: ManagedDatabaseCreateMode;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri
   * of the storage container where backups for this restore are stored.
   */
  storageContainerUri?: string;
  /**
   * The resource identifier of the source database associated with create operation of this
   * database.
   */
  sourceDatabaseId?: string;
  /**
   * The restorable dropped database resource id to restore when creating this database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the
   * storage container sas token.
   */
  storageContainerSasToken?: string;
  /**
   * Instance Failover Group resource identifier that this managed database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * The resource identifier of the recoverable database associated with create operation of this
   * database.
   */
  recoverableDatabaseId?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Contains the information necessary to perform a complete database restore operation.
 */
export interface CompleteDatabaseRestoreDefinition {
  /**
   * The last backup name to apply
   */
  lastBackupName: string;
}

/**
 * An interface representing PrivateEndpointProperty.
 */
export interface PrivateEndpointProperty extends BaseResource {
  /**
   * Resource id of the private endpoint.
   */
  id?: string;
}

/**
 * An interface representing PrivateLinkServiceConnectionStateProperty.
 */
export interface PrivateLinkServiceConnectionStateProperty {
  /**
   * The private link service connection status.
   */
  status: string;
  /**
   * The private link service connection description.
   */
  description: string;
  /**
   * The actions required for private link service connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionsRequired?: string;
}

/**
 * A private endpoint connection
 */
export interface PrivateEndpointConnection extends ProxyResource {
  /**
   * Private endpoint which the connection belongs to.
   */
  privateEndpoint?: PrivateEndpointProperty;
  /**
   * Connection state of the private endpoint connection.
   */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty;
  /**
   * State of the private endpoint connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * Properties of a private link resource.
 */
export interface PrivateLinkResourceProperties {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredMembers?: string[];
}

/**
 * A private link resource
 */
export interface PrivateLinkResource extends ProxyResource {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: PrivateLinkResourceProperties;
}

/**
 * Optional Parameters.
 */
export interface DatabasesFailoverOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The type of replica to be failed over. Possible values include: 'Primary', 'ReadableSecondary'
   */
  replicaType?: ReplicaType;
}

/**
 * Optional Parameters.
 */
export interface DatabasesBeginFailoverOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The type of replica to be failed over. Possible values include: 'Primary', 'ReadableSecondary'
   */
  replicaType?: ReplicaType;
}

/**
 * Optional Parameters.
 */
export interface ElasticPoolsListByServerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
}

/**
 * Optional Parameters.
 */
export interface SyncGroupsListLogsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The continuation token for this operation.
   */
  continuationToken?: string;
}

/**
 * Optional Parameters.
 */
export interface JobExecutionsListByAgentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobExecutionsListByJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobStepExecutionsListByJobExecutionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobTargetExecutionsListByJobExecutionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface JobTargetExecutionsListByStepOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, only job executions created at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * If specified, only job executions created before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * If specified, only job executions completed at or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * If specified, only job executions completed before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * If specified, only active or only completed job executions are included.
   */
  isActive?: boolean;
  /**
   * The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * The number of elements to return from the collection.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupLocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByResourceGroupServerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByLocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface LongTermRetentionBackupsListByServerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether or not to only get the latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * Whether to query against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * Optional Parameters.
 */
export interface SensitivityLabelsListCurrentByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SensitivityLabelsListRecommendedByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies whether to include disabled recommendations or not.
   */
  includeDisabledRecommendations?: boolean;
  skipToken?: string;
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface CapabilitiesListByLocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If specified, restricts the response to only include the selected item. Possible values
   * include: 'supportedEditions', 'supportedElasticPoolEditions',
   * 'supportedManagedInstanceVersions'
   */
  include?: CapabilityGroup;
}

/**
 * Optional Parameters.
 */
export interface ManagedInstanceKeysListByInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ManagedDatabaseSensitivityLabelsListCurrentByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies whether to include disabled recommendations or not.
   */
  includeDisabledRecommendations?: boolean;
  skipToken?: string;
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface UsagesListByInstancePoolOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional request parameter to include managed instance usages within the instance pool.
   */
  expandChildren?: boolean;
}

/**
 * An interface representing SqlManagementClientOptions.
 */
export interface SqlManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The response to a list recoverable databases request
 * @extends Array<RecoverableDatabase>
 */
export interface RecoverableDatabaseListResult extends Array<RecoverableDatabase> {
}

/**
 * @interface
 * The response to a list restorable dropped databases request
 * @extends Array<RestorableDroppedDatabase>
 */
export interface RestorableDroppedDatabaseListResult extends Array<RestorableDroppedDatabase> {
}

/**
 * @interface
 * A list of servers.
 * @extends Array<Server>
 */
export interface ServerListResult extends Array<Server> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response to a list data masking rules request.
 * @extends Array<DataMaskingRule>
 */
export interface DataMaskingRuleListResult extends Array<DataMaskingRule> {
}

/**
 * @interface
 * Represents the response to a List Firewall Rules request.
 * @extends Array<FirewallRule>
 */
export interface FirewallRuleListResult extends Array<FirewallRule> {
}

/**
 * @interface
 * The response to a list geo backup policies request.
 * @extends Array<GeoBackupPolicy>
 */
export interface GeoBackupPolicyListResult extends Array<GeoBackupPolicy> {
}

/**
 * @interface
 * The response to a list database metrics request.
 * @extends Array<Metric>
 */
export interface MetricListResult extends Array<Metric> {
}

/**
 * @interface
 * The response to a list database metric definitions request.
 * @extends Array<MetricDefinition>
 */
export interface MetricDefinitionListResult extends Array<MetricDefinition> {
}

/**
 * @interface
 * A list of databases.
 * @extends Array<Database>
 */
export interface DatabaseListResult extends Array<Database> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The result of an elastic pool list request.
 * @extends Array<ElasticPool>
 */
export interface ElasticPoolListResult extends Array<ElasticPool> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Represents the response to a list recommended elastic pool request.
 * @extends Array<RecommendedElasticPool>
 */
export interface RecommendedElasticPoolListResult extends Array<RecommendedElasticPool> {
}

/**
 * @interface
 * Represents the response to a list recommended elastic pool metrics request.
 * @extends Array<RecommendedElasticPoolMetric>
 */
export interface RecommendedElasticPoolListMetricsResult extends Array<RecommendedElasticPoolMetric> {
}

/**
 * @interface
 * Represents the response to a List database replication link request.
 * @extends Array<ReplicationLink>
 */
export interface ReplicationLinkListResult extends Array<ReplicationLink> {
}

/**
 * @interface
 * The response to a list Active Directory Administrators request.
 * @extends Array<ServerAzureADAdministrator>
 */
export interface ServerAdministratorListResult extends Array<ServerAzureADAdministrator> {
}

/**
 * @interface
 * A list of server communication links.
 * @extends Array<ServerCommunicationLink>
 */
export interface ServerCommunicationLinkListResult extends Array<ServerCommunicationLink> {
}

/**
 * @interface
 * Represents the response to a get database service objectives request.
 * @extends Array<ServiceObjective>
 */
export interface ServiceObjectiveListResult extends Array<ServiceObjective> {
}

/**
 * @interface
 * Represents the response to a list elastic pool activity request.
 * @extends Array<ElasticPoolActivity>
 */
export interface ElasticPoolActivityListResult extends Array<ElasticPoolActivity> {
}

/**
 * @interface
 * Represents the response to a list elastic pool database activity request.
 * @extends Array<ElasticPoolDatabaseActivity>
 */
export interface ElasticPoolDatabaseActivityListResult extends Array<ElasticPoolDatabaseActivity> {
}

/**
 * @interface
 * Represents the response to a list service tier advisor request.
 * @extends Array<ServiceTierAdvisor>
 */
export interface ServiceTierAdvisorListResult extends Array<ServiceTierAdvisor> {
}

/**
 * @interface
 * Represents the response to a list database transparent data encryption activity request.
 * @extends Array<TransparentDataEncryptionActivity>
 */
export interface TransparentDataEncryptionActivityListResult extends Array<TransparentDataEncryptionActivity> {
}

/**
 * @interface
 * Represents the response to a list server metrics request.
 * @extends Array<ServerUsage>
 */
export interface ServerUsageListResult extends Array<ServerUsage> {
}

/**
 * @interface
 * The response to a list database metrics request.
 * @extends Array<DatabaseUsage>
 */
export interface DatabaseUsageListResult extends Array<DatabaseUsage> {
}

/**
 * @interface
 * A list of server encryption protectors.
 * @extends Array<EncryptionProtector>
 */
export interface EncryptionProtectorListResult extends Array<EncryptionProtector> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of failover groups.
 * @extends Array<FailoverGroup>
 */
export interface FailoverGroupListResult extends Array<FailoverGroup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of the request to list SQL operations.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of server keys.
 * @extends Array<ServerKey>
 */
export interface ServerKeyListResult extends Array<ServerKey> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync agents.
 * @extends Array<SyncAgent>
 */
export interface SyncAgentListResult extends Array<SyncAgent> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync agent linked databases.
 * @extends Array<SyncAgentLinkedDatabase>
 */
export interface SyncAgentLinkedDatabaseListResult extends Array<SyncAgentLinkedDatabase> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync database ID properties.
 * @extends Array<SyncDatabaseIdProperties>
 */
export interface SyncDatabaseIdListResult extends Array<SyncDatabaseIdProperties> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync schema properties.
 * @extends Array<SyncFullSchemaProperties>
 */
export interface SyncFullSchemaPropertiesListResult extends Array<SyncFullSchemaProperties> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync group log properties.
 * @extends Array<SyncGroupLogProperties>
 */
export interface SyncGroupLogListResult extends Array<SyncGroupLogProperties> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sync groups.
 * @extends Array<SyncGroup>
 */
export interface SyncGroupListResult extends Array<SyncGroup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Azure SQL Database sync members.
 * @extends Array<SyncMember>
 */
export interface SyncMemberListResult extends Array<SyncMember> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of subscription usage metrics in a location.
 * @extends Array<SubscriptionUsage>
 */
export interface SubscriptionUsageListResult extends Array<SubscriptionUsage> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of virtual clusters.
 * @extends Array<VirtualCluster>
 */
export interface VirtualClusterListResult extends Array<VirtualCluster> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of virtual network rules.
 * @extends Array<VirtualNetworkRule>
 */
export interface VirtualNetworkRuleListResult extends Array<VirtualNetworkRule> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of server auditing settings.
 * @extends Array<ServerBlobAuditingPolicy>
 */
export interface ServerBlobAuditingPolicyListResult extends Array<ServerBlobAuditingPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of database auditing settings.
 * @extends Array<DatabaseBlobAuditingPolicy>
 */
export interface DatabaseBlobAuditingPolicyListResult extends Array<DatabaseBlobAuditingPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the database's vulnerability assessments.
 * @extends Array<DatabaseVulnerabilityAssessment>
 */
export interface DatabaseVulnerabilityAssessmentListResult extends Array<DatabaseVulnerabilityAssessment> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Azure SQL job agents.
 * @extends Array<JobAgent>
 */
export interface JobAgentListResult extends Array<JobAgent> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of job credentials.
 * @extends Array<JobCredential>
 */
export interface JobCredentialListResult extends Array<JobCredential> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of job executions.
 * @extends Array<JobExecution>
 */
export interface JobExecutionListResult extends Array<JobExecution> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of jobs.
 * @extends Array<Job>
 */
export interface JobListResult extends Array<Job> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of job steps.
 * @extends Array<JobStep>
 */
export interface JobStepListResult extends Array<JobStep> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of target groups.
 * @extends Array<JobTargetGroup>
 */
export interface JobTargetGroupListResult extends Array<JobTargetGroup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of job versions.
 * @extends Array<JobVersion>
 */
export interface JobVersionListResult extends Array<JobVersion> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of long term retention backups.
 * @extends Array<LongTermRetentionBackup>
 */
export interface LongTermRetentionBackupListResult extends Array<LongTermRetentionBackup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of short term retention policies.
 * @extends Array<ManagedBackupShortTermRetentionPolicy>
 */
export interface ManagedBackupShortTermRetentionPolicyListResult extends Array<ManagedBackupShortTermRetentionPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of server DNS aliases.
 * @extends Array<ServerDnsAlias>
 */
export interface ServerDnsAliasListResult extends Array<ServerDnsAlias> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the server's security alert policies.
 * @extends Array<ServerSecurityAlertPolicy>
 */
export interface LogicalServerSecurityAlertPolicyListResult extends Array<ServerSecurityAlertPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of restorable dropped managed databases.
 * @extends Array<RestorableDroppedManagedDatabase>
 */
export interface RestorableDroppedManagedDatabaseListResult extends Array<RestorableDroppedManagedDatabase> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of long term retention backups.
 * @extends Array<RestorePoint>
 */
export interface RestorePointListResult extends Array<RestorePoint> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the managed database's security alert policies.
 * @extends Array<ManagedDatabaseSecurityAlertPolicy>
 */
export interface ManagedDatabaseSecurityAlertPolicyListResult extends Array<ManagedDatabaseSecurityAlertPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the managed Server's security alert policies.
 * @extends Array<ManagedServerSecurityAlertPolicy>
 */
export interface ManagedServerSecurityAlertPolicyListResult extends Array<ManagedServerSecurityAlertPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sensitivity labels.
 * @extends Array<SensitivityLabel>
 */
export interface SensitivityLabelListResult extends Array<SensitivityLabel> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed instance administrators.
 * @extends Array<ManagedInstanceAdministrator>
 */
export interface ManagedInstanceAdministratorListResult extends Array<ManagedInstanceAdministrator> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response to a list database operations request
 * @extends Array<DatabaseOperation>
 */
export interface DatabaseOperationListResult extends Array<DatabaseOperation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response to a list elastic pool operations request
 * @extends Array<ElasticPoolOperation>
 */
export interface ElasticPoolOperationListResult extends Array<ElasticPoolOperation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of vulnerability assessment scan records.
 * @extends Array<VulnerabilityAssessmentScanRecord>
 */
export interface VulnerabilityAssessmentScanRecordListResult extends Array<VulnerabilityAssessmentScanRecord> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of instance failover groups.
 * @extends Array<InstanceFailoverGroup>
 */
export interface InstanceFailoverGroupListResult extends Array<InstanceFailoverGroup> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of short term retention policies.
 * @extends Array<BackupShortTermRetentionPolicy>
 */
export interface BackupShortTermRetentionPolicyListResult extends Array<BackupShortTermRetentionPolicy> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed instance keys.
 * @extends Array<ManagedInstanceKey>
 */
export interface ManagedInstanceKeyListResult extends Array<ManagedInstanceKey> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed instance encryption protectors.
 * @extends Array<ManagedInstanceEncryptionProtector>
 */
export interface ManagedInstanceEncryptionProtectorListResult extends Array<ManagedInstanceEncryptionProtector> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of recoverable managed databases.
 * @extends Array<RecoverableManagedDatabase>
 */
export interface RecoverableManagedDatabaseListResult extends Array<RecoverableManagedDatabase> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the ManagedInstance's vulnerability assessments.
 * @extends Array<ManagedInstanceVulnerabilityAssessment>
 */
export interface ManagedInstanceVulnerabilityAssessmentListResult extends Array<ManagedInstanceVulnerabilityAssessment> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the server's vulnerability assessments.
 * @extends Array<ServerVulnerabilityAssessment>
 */
export interface ServerVulnerabilityAssessmentListResult extends Array<ServerVulnerabilityAssessment> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Azure SQL instance pools.
 * @extends Array<InstancePool>
 */
export interface InstancePoolListResult extends Array<InstancePool> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of usages.
 * @extends Array<Usage>
 */
export interface UsageListResult extends Array<Usage> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed instances.
 * @extends Array<ManagedInstance>
 */
export interface ManagedInstanceListResult extends Array<ManagedInstance> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of managed databases.
 * @extends Array<ManagedDatabase>
 */
export interface ManagedDatabaseListResult extends Array<ManagedDatabase> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of private endpoint connections.
 * @extends Array<PrivateEndpointConnection>
 */
export interface PrivateEndpointConnectionListResult extends Array<PrivateEndpointConnection> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of private link resources
 * @extends Array<PrivateLinkResource>
 */
export interface PrivateLinkResourceListResult extends Array<PrivateLinkResource> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for CheckNameAvailabilityReason.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type CheckNameAvailabilityReason = 'Invalid' | 'AlreadyExists';

/**
 * Defines values for ServerConnectionType.
 * Possible values include: 'Default', 'Proxy', 'Redirect'
 * @readonly
 * @enum {string}
 */
export type ServerConnectionType = 'Default' | 'Proxy' | 'Redirect';

/**
 * Defines values for SecurityAlertPolicyState.
 * Possible values include: 'New', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SecurityAlertPolicyState = 'New' | 'Enabled' | 'Disabled';

/**
 * Defines values for SecurityAlertPolicyEmailAccountAdmins.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SecurityAlertPolicyEmailAccountAdmins = 'Enabled' | 'Disabled';

/**
 * Defines values for SecurityAlertPolicyUseServerDefault.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SecurityAlertPolicyUseServerDefault = 'Enabled' | 'Disabled';

/**
 * Defines values for DataMaskingState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type DataMaskingState = 'Disabled' | 'Enabled';

/**
 * Defines values for DataMaskingRuleState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type DataMaskingRuleState = 'Disabled' | 'Enabled';

/**
 * Defines values for DataMaskingFunction.
 * Possible values include: 'Default', 'CCN', 'Email', 'Number', 'SSN', 'Text'
 * @readonly
 * @enum {string}
 */
export type DataMaskingFunction = 'Default' | 'CCN' | 'Email' | 'Number' | 'SSN' | 'Text';

/**
 * Defines values for GeoBackupPolicyState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type GeoBackupPolicyState = 'Disabled' | 'Enabled';

/**
 * Defines values for DatabaseEdition.
 * Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'PremiumRS', 'Free',
 * 'Stretch', 'DataWarehouse', 'System', 'System2', 'GeneralPurpose', 'BusinessCritical',
 * 'Hyperscale'
 * @readonly
 * @enum {string}
 */
export type DatabaseEdition = 'Web' | 'Business' | 'Basic' | 'Standard' | 'Premium' | 'PremiumRS' | 'Free' | 'Stretch' | 'DataWarehouse' | 'System' | 'System2' | 'GeneralPurpose' | 'BusinessCritical' | 'Hyperscale';

/**
 * Defines values for ServiceObjectiveName.
 * Possible values include: 'System', 'System0', 'System1', 'System2', 'System3', 'System4',
 * 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7',
 * 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6',
 * 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500',
 * 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c',
 * 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500',
 * 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'
 * @readonly
 * @enum {string}
 */
export type ServiceObjectiveName = 'System' | 'System0' | 'System1' | 'System2' | 'System3' | 'System4' | 'System2L' | 'System3L' | 'System4L' | 'Free' | 'Basic' | 'S0' | 'S1' | 'S2' | 'S3' | 'S4' | 'S6' | 'S7' | 'S9' | 'S12' | 'P1' | 'P2' | 'P3' | 'P4' | 'P6' | 'P11' | 'P15' | 'PRS1' | 'PRS2' | 'PRS4' | 'PRS6' | 'DW100' | 'DW200' | 'DW300' | 'DW400' | 'DW500' | 'DW600' | 'DW1000' | 'DW1200' | 'DW1000c' | 'DW1500' | 'DW1500c' | 'DW2000' | 'DW2000c' | 'DW3000' | 'DW2500c' | 'DW3000c' | 'DW6000' | 'DW5000c' | 'DW6000c' | 'DW7500c' | 'DW10000c' | 'DW15000c' | 'DW30000c' | 'DS100' | 'DS200' | 'DS300' | 'DS400' | 'DS500' | 'DS600' | 'DS1000' | 'DS1200' | 'DS1500' | 'DS2000' | 'ElasticPool';

/**
 * Defines values for StorageKeyType.
 * Possible values include: 'StorageAccessKey', 'SharedAccessKey'
 * @readonly
 * @enum {string}
 */
export type StorageKeyType = 'StorageAccessKey' | 'SharedAccessKey';

/**
 * Defines values for AuthenticationType.
 * Possible values include: 'SQL', 'ADPassword'
 * @readonly
 * @enum {string}
 */
export type AuthenticationType = 'SQL' | 'ADPassword';

/**
 * Defines values for UnitType.
 * Possible values include: 'count', 'bytes', 'seconds', 'percent', 'countPerSecond',
 * 'bytesPerSecond'
 * @readonly
 * @enum {string}
 */
export type UnitType = 'count' | 'bytes' | 'seconds' | 'percent' | 'countPerSecond' | 'bytesPerSecond';

/**
 * Defines values for PrimaryAggregationType.
 * Possible values include: 'None', 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
 * @readonly
 * @enum {string}
 */
export type PrimaryAggregationType = 'None' | 'Average' | 'Count' | 'Minimum' | 'Maximum' | 'Total';

/**
 * Defines values for UnitDefinitionType.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
 * 'BytesPerSecond'
 * @readonly
 * @enum {string}
 */
export type UnitDefinitionType = 'Count' | 'Bytes' | 'Seconds' | 'Percent' | 'CountPerSecond' | 'BytesPerSecond';

/**
 * Defines values for ElasticPoolEdition.
 * Possible values include: 'Basic', 'Standard', 'Premium', 'GeneralPurpose', 'BusinessCritical'
 * @readonly
 * @enum {string}
 */
export type ElasticPoolEdition = 'Basic' | 'Standard' | 'Premium' | 'GeneralPurpose' | 'BusinessCritical';

/**
 * Defines values for ReplicationRole.
 * Possible values include: 'Primary', 'Secondary', 'NonReadableSecondary', 'Source', 'Copy'
 * @readonly
 * @enum {string}
 */
export type ReplicationRole = 'Primary' | 'Secondary' | 'NonReadableSecondary' | 'Source' | 'Copy';

/**
 * Defines values for ReplicationState.
 * Possible values include: 'PENDING', 'SEEDING', 'CATCH_UP', 'SUSPENDED'
 * @readonly
 * @enum {string}
 */
export type ReplicationState = 'PENDING' | 'SEEDING' | 'CATCH_UP' | 'SUSPENDED';

/**
 * Defines values for RecommendedIndexAction.
 * Possible values include: 'Create', 'Drop', 'Rebuild'
 * @readonly
 * @enum {string}
 */
export type RecommendedIndexAction = 'Create' | 'Drop' | 'Rebuild';

/**
 * Defines values for RecommendedIndexState.
 * Possible values include: 'Active', 'Pending', 'Executing', 'Verifying', 'Pending Revert',
 * 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Blocked', 'Success'
 * @readonly
 * @enum {string}
 */
export type RecommendedIndexState = 'Active' | 'Pending' | 'Executing' | 'Verifying' | 'Pending Revert' | 'Reverting' | 'Reverted' | 'Ignored' | 'Expired' | 'Blocked' | 'Success';

/**
 * Defines values for RecommendedIndexType.
 * Possible values include: 'CLUSTERED', 'NONCLUSTERED', 'COLUMNSTORE', 'CLUSTERED COLUMNSTORE'
 * @readonly
 * @enum {string}
 */
export type RecommendedIndexType = 'CLUSTERED' | 'NONCLUSTERED' | 'COLUMNSTORE' | 'CLUSTERED COLUMNSTORE';

/**
 * Defines values for TransparentDataEncryptionStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type TransparentDataEncryptionStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for TransparentDataEncryptionActivityStatus.
 * Possible values include: 'Encrypting', 'Decrypting'
 * @readonly
 * @enum {string}
 */
export type TransparentDataEncryptionActivityStatus = 'Encrypting' | 'Decrypting';

/**
 * Defines values for AutomaticTuningMode.
 * Possible values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningMode = 'Inherit' | 'Custom' | 'Auto' | 'Unspecified';

/**
 * Defines values for AutomaticTuningOptionModeDesired.
 * Possible values include: 'Off', 'On', 'Default'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningOptionModeDesired = 'Off' | 'On' | 'Default';

/**
 * Defines values for AutomaticTuningOptionModeActual.
 * Possible values include: 'Off', 'On'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningOptionModeActual = 'Off' | 'On';

/**
 * Defines values for AutomaticTuningDisabledReason.
 * Possible values include: 'Default', 'Disabled', 'AutoConfigured', 'InheritedFromServer',
 * 'QueryStoreOff', 'QueryStoreReadOnly', 'NotSupported'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningDisabledReason = 'Default' | 'Disabled' | 'AutoConfigured' | 'InheritedFromServer' | 'QueryStoreOff' | 'QueryStoreReadOnly' | 'NotSupported';

/**
 * Defines values for ServerKeyType.
 * Possible values include: 'ServiceManaged', 'AzureKeyVault'
 * @readonly
 * @enum {string}
 */
export type ServerKeyType = 'ServiceManaged' | 'AzureKeyVault';

/**
 * Defines values for ReadWriteEndpointFailoverPolicy.
 * Possible values include: 'Manual', 'Automatic'
 * @readonly
 * @enum {string}
 */
export type ReadWriteEndpointFailoverPolicy = 'Manual' | 'Automatic';

/**
 * Defines values for ReadOnlyEndpointFailoverPolicy.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type ReadOnlyEndpointFailoverPolicy = 'Disabled' | 'Enabled';

/**
 * Defines values for FailoverGroupReplicationRole.
 * Possible values include: 'Primary', 'Secondary'
 * @readonly
 * @enum {string}
 */
export type FailoverGroupReplicationRole = 'Primary' | 'Secondary';

/**
 * Defines values for OperationOrigin.
 * Possible values include: 'user', 'system'
 * @readonly
 * @enum {string}
 */
export type OperationOrigin = 'user' | 'system';

/**
 * Defines values for IdentityType.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type IdentityType = 'SystemAssigned';

/**
 * Defines values for SyncAgentState.
 * Possible values include: 'Online', 'Offline', 'NeverConnected'
 * @readonly
 * @enum {string}
 */
export type SyncAgentState = 'Online' | 'Offline' | 'NeverConnected';

/**
 * Defines values for SyncMemberDbType.
 * Possible values include: 'AzureSqlDatabase', 'SqlServerDatabase'
 * @readonly
 * @enum {string}
 */
export type SyncMemberDbType = 'AzureSqlDatabase' | 'SqlServerDatabase';

/**
 * Defines values for SyncGroupLogType.
 * Possible values include: 'All', 'Error', 'Warning', 'Success'
 * @readonly
 * @enum {string}
 */
export type SyncGroupLogType = 'All' | 'Error' | 'Warning' | 'Success';

/**
 * Defines values for SyncConflictResolutionPolicy.
 * Possible values include: 'HubWin', 'MemberWin'
 * @readonly
 * @enum {string}
 */
export type SyncConflictResolutionPolicy = 'HubWin' | 'MemberWin';

/**
 * Defines values for SyncGroupState.
 * Possible values include: 'NotReady', 'Error', 'Warning', 'Progressing', 'Good'
 * @readonly
 * @enum {string}
 */
export type SyncGroupState = 'NotReady' | 'Error' | 'Warning' | 'Progressing' | 'Good';

/**
 * Defines values for SyncDirection.
 * Possible values include: 'Bidirectional', 'OneWayMemberToHub', 'OneWayHubToMember'
 * @readonly
 * @enum {string}
 */
export type SyncDirection = 'Bidirectional' | 'OneWayMemberToHub' | 'OneWayHubToMember';

/**
 * Defines values for SyncMemberState.
 * Possible values include: 'SyncInProgress', 'SyncSucceeded', 'SyncFailed',
 * 'DisabledTombstoneCleanup', 'DisabledBackupRestore', 'SyncSucceededWithWarnings',
 * 'SyncCancelling', 'SyncCancelled', 'UnProvisioned', 'Provisioning', 'Provisioned',
 * 'ProvisionFailed', 'DeProvisioning', 'DeProvisioned', 'DeProvisionFailed', 'Reprovisioning',
 * 'ReprovisionFailed', 'UnReprovisioned'
 * @readonly
 * @enum {string}
 */
export type SyncMemberState = 'SyncInProgress' | 'SyncSucceeded' | 'SyncFailed' | 'DisabledTombstoneCleanup' | 'DisabledBackupRestore' | 'SyncSucceededWithWarnings' | 'SyncCancelling' | 'SyncCancelled' | 'UnProvisioned' | 'Provisioning' | 'Provisioned' | 'ProvisionFailed' | 'DeProvisioning' | 'DeProvisioned' | 'DeProvisionFailed' | 'Reprovisioning' | 'ReprovisionFailed' | 'UnReprovisioned';

/**
 * Defines values for VirtualNetworkRuleState.
 * Possible values include: 'Initializing', 'InProgress', 'Ready', 'Deleting', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type VirtualNetworkRuleState = 'Initializing' | 'InProgress' | 'Ready' | 'Deleting' | 'Unknown';

/**
 * Defines values for BlobAuditingPolicyState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type BlobAuditingPolicyState = 'Enabled' | 'Disabled';

/**
 * Defines values for JobAgentState.
 * Possible values include: 'Creating', 'Ready', 'Updating', 'Deleting', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type JobAgentState = 'Creating' | 'Ready' | 'Updating' | 'Deleting' | 'Disabled';

/**
 * Defines values for JobExecutionLifecycle.
 * Possible values include: 'Created', 'InProgress', 'WaitingForChildJobExecutions',
 * 'WaitingForRetry', 'Succeeded', 'SucceededWithSkipped', 'Failed', 'TimedOut', 'Canceled',
 * 'Skipped'
 * @readonly
 * @enum {string}
 */
export type JobExecutionLifecycle = 'Created' | 'InProgress' | 'WaitingForChildJobExecutions' | 'WaitingForRetry' | 'Succeeded' | 'SucceededWithSkipped' | 'Failed' | 'TimedOut' | 'Canceled' | 'Skipped';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Created', 'InProgress', 'Succeeded', 'Failed', 'Canceled'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Created' | 'InProgress' | 'Succeeded' | 'Failed' | 'Canceled';

/**
 * Defines values for JobTargetType.
 * Possible values include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap',
 * 'SqlServer'
 * @readonly
 * @enum {string}
 */
export type JobTargetType = 'TargetGroup' | 'SqlDatabase' | 'SqlElasticPool' | 'SqlShardMap' | 'SqlServer';

/**
 * Defines values for JobScheduleType.
 * Possible values include: 'Once', 'Recurring'
 * @readonly
 * @enum {string}
 */
export type JobScheduleType = 'Once' | 'Recurring';

/**
 * Defines values for JobStepActionType.
 * Possible values include: 'TSql'
 * @readonly
 * @enum {string}
 */
export type JobStepActionType = 'TSql';

/**
 * Defines values for JobStepActionSource.
 * Possible values include: 'Inline'
 * @readonly
 * @enum {string}
 */
export type JobStepActionSource = 'Inline';

/**
 * Defines values for JobStepOutputType.
 * Possible values include: 'SqlDatabase'
 * @readonly
 * @enum {string}
 */
export type JobStepOutputType = 'SqlDatabase';

/**
 * Defines values for JobTargetGroupMembershipType.
 * Possible values include: 'Include', 'Exclude'
 * @readonly
 * @enum {string}
 */
export type JobTargetGroupMembershipType = 'Include' | 'Exclude';

/**
 * Defines values for AutomaticTuningServerMode.
 * Possible values include: 'Custom', 'Auto', 'Unspecified'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningServerMode = 'Custom' | 'Auto' | 'Unspecified';

/**
 * Defines values for AutomaticTuningServerReason.
 * Possible values include: 'Default', 'Disabled', 'AutoConfigured'
 * @readonly
 * @enum {string}
 */
export type AutomaticTuningServerReason = 'Default' | 'Disabled' | 'AutoConfigured';

/**
 * Defines values for RestorePointType.
 * Possible values include: 'CONTINUOUS', 'DISCRETE'
 * @readonly
 * @enum {string}
 */
export type RestorePointType = 'CONTINUOUS' | 'DISCRETE';

/**
 * Defines values for ManagementOperationState.
 * Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed', 'CancelInProgress',
 * 'Cancelled'
 * @readonly
 * @enum {string}
 */
export type ManagementOperationState = 'Pending' | 'InProgress' | 'Succeeded' | 'Failed' | 'CancelInProgress' | 'Cancelled';

/**
 * Defines values for MaxSizeUnit.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes'
 * @readonly
 * @enum {string}
 */
export type MaxSizeUnit = 'Megabytes' | 'Gigabytes' | 'Terabytes' | 'Petabytes';

/**
 * Defines values for LogSizeUnit.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes', 'Percent'
 * @readonly
 * @enum {string}
 */
export type LogSizeUnit = 'Megabytes' | 'Gigabytes' | 'Terabytes' | 'Petabytes' | 'Percent';

/**
 * Defines values for CapabilityStatus.
 * Possible values include: 'Visible', 'Available', 'Default', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type CapabilityStatus = 'Visible' | 'Available' | 'Default' | 'Disabled';

/**
 * Defines values for PerformanceLevelUnit.
 * Possible values include: 'DTU', 'VCores'
 * @readonly
 * @enum {string}
 */
export type PerformanceLevelUnit = 'DTU' | 'VCores';

/**
 * Defines values for CreateMode.
 * Possible values include: 'Default', 'Copy', 'Secondary', 'PointInTimeRestore', 'Restore',
 * 'Recovery', 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
 * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
 * @readonly
 * @enum {string}
 */
export type CreateMode = 'Default' | 'Copy' | 'Secondary' | 'PointInTimeRestore' | 'Restore' | 'Recovery' | 'RestoreExternalBackup' | 'RestoreExternalBackupSecondary' | 'RestoreLongTermRetentionBackup' | 'OnlineSecondary';

/**
 * Defines values for SampleName.
 * Possible values include: 'AdventureWorksLT', 'WideWorldImportersStd', 'WideWorldImportersFull'
 * @readonly
 * @enum {string}
 */
export type SampleName = 'AdventureWorksLT' | 'WideWorldImportersStd' | 'WideWorldImportersFull';

/**
 * Defines values for DatabaseStatus.
 * Possible values include: 'Online', 'Restoring', 'RecoveryPending', 'Recovering', 'Suspect',
 * 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed', 'Copying', 'Creating',
 * 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused', 'Resuming', 'Scaling',
 * 'OfflineChangingDwPerformanceTiers', 'OnlineChangingDwPerformanceTiers', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type DatabaseStatus = 'Online' | 'Restoring' | 'RecoveryPending' | 'Recovering' | 'Suspect' | 'Offline' | 'Standby' | 'Shutdown' | 'EmergencyMode' | 'AutoClosed' | 'Copying' | 'Creating' | 'Inaccessible' | 'OfflineSecondary' | 'Pausing' | 'Paused' | 'Resuming' | 'Scaling' | 'OfflineChangingDwPerformanceTiers' | 'OnlineChangingDwPerformanceTiers' | 'Disabled';

/**
 * Defines values for CatalogCollationType.
 * Possible values include: 'DATABASE_DEFAULT', 'SQL_Latin1_General_CP1_CI_AS'
 * @readonly
 * @enum {string}
 */
export type CatalogCollationType = 'DATABASE_DEFAULT' | 'SQL_Latin1_General_CP1_CI_AS';

/**
 * Defines values for DatabaseLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * @readonly
 * @enum {string}
 */
export type DatabaseLicenseType = 'LicenseIncluded' | 'BasePrice';

/**
 * Defines values for DatabaseReadScale.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type DatabaseReadScale = 'Enabled' | 'Disabled';

/**
 * Defines values for ElasticPoolState.
 * Possible values include: 'Creating', 'Ready', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type ElasticPoolState = 'Creating' | 'Ready' | 'Disabled';

/**
 * Defines values for ElasticPoolLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * @readonly
 * @enum {string}
 */
export type ElasticPoolLicenseType = 'LicenseIncluded' | 'BasePrice';

/**
 * Defines values for VulnerabilityAssessmentScanTriggerType.
 * Possible values include: 'OnDemand', 'Recurring'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentScanTriggerType = 'OnDemand' | 'Recurring';

/**
 * Defines values for VulnerabilityAssessmentScanState.
 * Possible values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentScanState = 'Passed' | 'Failed' | 'FailedToRun' | 'InProgress';

/**
 * Defines values for InstanceFailoverGroupReplicationRole.
 * Possible values include: 'Primary', 'Secondary'
 * @readonly
 * @enum {string}
 */
export type InstanceFailoverGroupReplicationRole = 'Primary' | 'Secondary';

/**
 * Defines values for InstancePoolLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * @readonly
 * @enum {string}
 */
export type InstancePoolLicenseType = 'LicenseIncluded' | 'BasePrice';

/**
 * Defines values for ManagedServerCreateMode.
 * Possible values include: 'Default', 'PointInTimeRestore'
 * @readonly
 * @enum {string}
 */
export type ManagedServerCreateMode = 'Default' | 'PointInTimeRestore';

/**
 * Defines values for ManagedInstanceLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * @readonly
 * @enum {string}
 */
export type ManagedInstanceLicenseType = 'LicenseIncluded' | 'BasePrice';

/**
 * Defines values for ManagedInstanceProxyOverride.
 * Possible values include: 'Proxy', 'Redirect', 'Default'
 * @readonly
 * @enum {string}
 */
export type ManagedInstanceProxyOverride = 'Proxy' | 'Redirect' | 'Default';

/**
 * Defines values for ManagedDatabaseStatus.
 * Possible values include: 'Online', 'Offline', 'Shutdown', 'Creating', 'Inaccessible',
 * 'Restoring', 'Updating'
 * @readonly
 * @enum {string}
 */
export type ManagedDatabaseStatus = 'Online' | 'Offline' | 'Shutdown' | 'Creating' | 'Inaccessible' | 'Restoring' | 'Updating';

/**
 * Defines values for ManagedDatabaseCreateMode.
 * Possible values include: 'Default', 'RestoreExternalBackup', 'PointInTimeRestore', 'Recovery'
 * @readonly
 * @enum {string}
 */
export type ManagedDatabaseCreateMode = 'Default' | 'RestoreExternalBackup' | 'PointInTimeRestore' | 'Recovery';

/**
 * Defines values for LongTermRetentionDatabaseState.
 * Possible values include: 'All', 'Live', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type LongTermRetentionDatabaseState = 'All' | 'Live' | 'Deleted';

/**
 * Defines values for VulnerabilityAssessmentPolicyBaselineName.
 * Possible values include: 'master', 'default'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentPolicyBaselineName = 'master' | 'default';

/**
 * Defines values for SensitivityLabelSource.
 * Possible values include: 'current', 'recommended'
 * @readonly
 * @enum {string}
 */
export type SensitivityLabelSource = 'current' | 'recommended';

/**
 * Defines values for CapabilityGroup.
 * Possible values include: 'supportedEditions', 'supportedElasticPoolEditions',
 * 'supportedManagedInstanceVersions'
 * @readonly
 * @enum {string}
 */
export type CapabilityGroup = 'supportedEditions' | 'supportedElasticPoolEditions' | 'supportedManagedInstanceVersions';

/**
 * Defines values for ReplicaType.
 * Possible values include: 'Primary', 'ReadableSecondary'
 * @readonly
 * @enum {string}
 */
export type ReplicaType = 'Primary' | 'ReadableSecondary';

/**
 * Defines values for Type.
 * Possible values include: 'All', 'Error', 'Warning', 'Success'
 * @readonly
 * @enum {string}
 */
export type Type = 'All' | 'Error' | 'Warning' | 'Success';

/**
 * Contains response data for the get operation.
 */
export type RecoverableDatabasesGetResponse = RecoverableDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableDatabase;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type RecoverableDatabasesListByServerResponse = RecoverableDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RestorableDroppedDatabasesGetResponse = RestorableDroppedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedDatabase;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type RestorableDroppedDatabasesListByServerResponse = RestorableDroppedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedDatabaseListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type ServersCheckNameAvailabilityResponse = CheckNameAvailabilityResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServersListResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServersListByResourceGroupResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServersGetResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServersCreateOrUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServersUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServersBeginCreateOrUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ServersBeginUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServersListNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ServersListByResourceGroupNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerConnectionPoliciesCreateOrUpdateResponse = ServerConnectionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerConnectionPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerConnectionPoliciesGetResponse = ServerConnectionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerConnectionPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseThreatDetectionPoliciesGetResponse = DatabaseSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseThreatDetectionPoliciesCreateOrUpdateResponse = DatabaseSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DataMaskingPoliciesCreateOrUpdateResponse = DataMaskingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataMaskingPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataMaskingPoliciesGetResponse = DataMaskingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataMaskingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DataMaskingRulesCreateOrUpdateResponse = DataMaskingRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataMaskingRule;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DataMaskingRulesListByDatabaseResponse = DataMaskingRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataMaskingRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FirewallRulesCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FirewallRulesGetResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FirewallRulesListByServerResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GeoBackupPoliciesCreateOrUpdateResponse = GeoBackupPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoBackupPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GeoBackupPoliciesGetResponse = GeoBackupPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoBackupPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type GeoBackupPoliciesListByDatabaseResponse = GeoBackupPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoBackupPolicyListResult;
    };
};

/**
 * Contains response data for the importMethod operation.
 */
export type DatabasesImportMethodResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the createImportOperation operation.
 */
export type DatabasesCreateImportOperationResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type DatabasesExportMethodResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type DatabasesListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type DatabasesListMetricDefinitionsResponse = MetricDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type DatabasesListByServerResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabasesGetResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabasesCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabasesUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type DatabasesListByElasticPoolResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the pause operation.
 */
export type DatabasesPauseResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the resume operation.
 */
export type DatabasesResumeResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginImportMethod operation.
 */
export type DatabasesBeginImportMethodResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the beginCreateImportOperation operation.
 */
export type DatabasesBeginCreateImportOperationResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the beginExportMethod operation.
 */
export type DatabasesBeginExportMethodResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatabasesBeginCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DatabasesBeginUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginPause operation.
 */
export type DatabasesBeginPauseResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginResume operation.
 */
export type DatabasesBeginResumeResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type DatabasesListByServerNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the listByElasticPoolNext operation.
 */
export type DatabasesListByElasticPoolNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type ElasticPoolsListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type ElasticPoolsListMetricDefinitionsResponse = MetricDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ElasticPoolsListByServerResponse = ElasticPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ElasticPoolsGetResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ElasticPoolsCreateOrUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ElasticPoolsUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ElasticPoolsBeginCreateOrUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ElasticPoolsBeginUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ElasticPoolsListByServerNextResponse = ElasticPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecommendedElasticPoolsGetResponse = RecommendedElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedElasticPool;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type RecommendedElasticPoolsListByServerResponse = RecommendedElasticPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedElasticPoolListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type RecommendedElasticPoolsListMetricsResponse = RecommendedElasticPoolListMetricsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedElasticPoolListMetricsResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationLinksGetResponse = ReplicationLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationLink;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ReplicationLinksListByDatabaseResponse = ReplicationLinkListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationLinkListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerAzureADAdministratorsCreateOrUpdateResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ServerAzureADAdministratorsDeleteMethodResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerAzureADAdministratorsGetResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerAzureADAdministratorsListByServerResponse = ServerAdministratorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAdministratorListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerAzureADAdministratorsBeginCreateOrUpdateResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type ServerAzureADAdministratorsBeginDeleteMethodResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerCommunicationLinksGetResponse = ServerCommunicationLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerCommunicationLink;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerCommunicationLinksCreateOrUpdateResponse = ServerCommunicationLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerCommunicationLink;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerCommunicationLinksListByServerResponse = ServerCommunicationLinkListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerCommunicationLinkListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerCommunicationLinksBeginCreateOrUpdateResponse = ServerCommunicationLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerCommunicationLink;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServiceObjectivesGetResponse = ServiceObjective & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceObjective;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServiceObjectivesListByServerResponse = ServiceObjectiveListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceObjectiveListResult;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type ElasticPoolActivitiesListByElasticPoolResponse = ElasticPoolActivityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolActivityListResult;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type ElasticPoolDatabaseActivitiesListByElasticPoolResponse = ElasticPoolDatabaseActivityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolDatabaseActivityListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServiceTierAdvisorsGetResponse = ServiceTierAdvisor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceTierAdvisor;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ServiceTierAdvisorsListByDatabaseResponse = ServiceTierAdvisorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceTierAdvisorListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TransparentDataEncryptionsCreateOrUpdateResponse = TransparentDataEncryption & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransparentDataEncryption;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TransparentDataEncryptionsGetResponse = TransparentDataEncryption & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransparentDataEncryption;
    };
};

/**
 * Contains response data for the listByConfiguration operation.
 */
export type TransparentDataEncryptionActivitiesListByConfigurationResponse = TransparentDataEncryptionActivityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransparentDataEncryptionActivityListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerUsagesListByServerResponse = ServerUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerUsageListResult;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseUsagesListByDatabaseResponse = DatabaseUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseUsageListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseAutomaticTuningGetResponse = DatabaseAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAutomaticTuning;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabaseAutomaticTuningUpdateResponse = DatabaseAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAutomaticTuning;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type EncryptionProtectorsListByServerResponse = EncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EncryptionProtectorsGetResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EncryptionProtectorsCreateOrUpdateResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type EncryptionProtectorsBeginCreateOrUpdateResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type EncryptionProtectorsListByServerNextResponse = EncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FailoverGroupsGetResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FailoverGroupsCreateOrUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type FailoverGroupsUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FailoverGroupsListByServerResponse = FailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroupListResult;
    };
};

/**
 * Contains response data for the failover operation.
 */
export type FailoverGroupsFailoverResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the forceFailoverAllowDataLoss operation.
 */
export type FailoverGroupsForceFailoverAllowDataLossResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FailoverGroupsBeginCreateOrUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type FailoverGroupsBeginUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginFailover operation.
 */
export type FailoverGroupsBeginFailoverResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginForceFailoverAllowDataLoss operation.
 */
export type FailoverGroupsBeginForceFailoverAllowDataLossResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type FailoverGroupsListByServerNextResponse = FailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroupListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerKeysListByServerResponse = ServerKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKeyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerKeysGetResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerKeysCreateOrUpdateResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerKeysBeginCreateOrUpdateResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerKeysListByServerNextResponse = ServerKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKeyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncAgentsGetResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncAgentsCreateOrUpdateResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type SyncAgentsListByServerResponse = SyncAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentListResult;
    };
};

/**
 * Contains response data for the generateKey operation.
 */
export type SyncAgentsGenerateKeyResponse = SyncAgentKeyProperties & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentKeyProperties;
    };
};

/**
 * Contains response data for the listLinkedDatabases operation.
 */
export type SyncAgentsListLinkedDatabasesResponse = SyncAgentLinkedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentLinkedDatabaseListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncAgentsBeginCreateOrUpdateResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type SyncAgentsListByServerNextResponse = SyncAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentListResult;
    };
};

/**
 * Contains response data for the listLinkedDatabasesNext operation.
 */
export type SyncAgentsListLinkedDatabasesNextResponse = SyncAgentLinkedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentLinkedDatabaseListResult;
    };
};

/**
 * Contains response data for the listSyncDatabaseIds operation.
 */
export type SyncGroupsListSyncDatabaseIdsResponse = SyncDatabaseIdListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncDatabaseIdListResult;
    };
};

/**
 * Contains response data for the listHubSchemas operation.
 */
export type SyncGroupsListHubSchemasResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listLogs operation.
 */
export type SyncGroupsListLogsResponse = SyncGroupLogListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupLogListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncGroupsGetResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncGroupsCreateOrUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SyncGroupsUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type SyncGroupsListByDatabaseResponse = SyncGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncGroupsBeginCreateOrUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SyncGroupsBeginUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the listSyncDatabaseIdsNext operation.
 */
export type SyncGroupsListSyncDatabaseIdsNextResponse = SyncDatabaseIdListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncDatabaseIdListResult;
    };
};

/**
 * Contains response data for the listHubSchemasNext operation.
 */
export type SyncGroupsListHubSchemasNextResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listLogsNext operation.
 */
export type SyncGroupsListLogsNextResponse = SyncGroupLogListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupLogListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type SyncGroupsListByDatabaseNextResponse = SyncGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncMembersGetResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncMembersCreateOrUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SyncMembersUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the listBySyncGroup operation.
 */
export type SyncMembersListBySyncGroupResponse = SyncMemberListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMemberListResult;
    };
};

/**
 * Contains response data for the listMemberSchemas operation.
 */
export type SyncMembersListMemberSchemasResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncMembersBeginCreateOrUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SyncMembersBeginUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the listBySyncGroupNext operation.
 */
export type SyncMembersListBySyncGroupNextResponse = SyncMemberListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMemberListResult;
    };
};

/**
 * Contains response data for the listMemberSchemasNext operation.
 */
export type SyncMembersListMemberSchemasNextResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type SubscriptionUsagesListByLocationResponse = SubscriptionUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsageListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionUsagesGetResponse = SubscriptionUsage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsage;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type SubscriptionUsagesListByLocationNextResponse = SubscriptionUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsageListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualClustersListResponse = VirtualClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualClusterListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type VirtualClustersListByResourceGroupResponse = VirtualClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualClusterListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualClustersGetResponse = VirtualCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualCluster;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualClustersUpdateResponse = VirtualCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualCluster;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualClustersBeginUpdateResponse = VirtualCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualCluster;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualClustersListNextResponse = VirtualClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualClusterListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type VirtualClustersListByResourceGroupNextResponse = VirtualClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualClusterListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualNetworkRulesGetResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualNetworkRulesCreateOrUpdateResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type VirtualNetworkRulesListByServerResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualNetworkRulesBeginCreateOrUpdateResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type VirtualNetworkRulesListByServerNextResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtendedDatabaseBlobAuditingPoliciesGetResponse = ExtendedDatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedDatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedDatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedDatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtendedServerBlobAuditingPoliciesGetResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ExtendedServerBlobAuditingPoliciesBeginCreateOrUpdateResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerBlobAuditingPoliciesGetResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerBlobAuditingPoliciesCreateOrUpdateResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerBlobAuditingPoliciesListByServerResponse = ServerBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerBlobAuditingPoliciesBeginCreateOrUpdateResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerBlobAuditingPoliciesListByServerNextResponse = ServerBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseBlobAuditingPoliciesGetResponse = DatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseBlobAuditingPoliciesCreateOrUpdateResponse = DatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseBlobAuditingPoliciesListByDatabaseResponse = DatabaseBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseBlobAuditingPoliciesListByDatabaseNextResponse = DatabaseBlobAuditingPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentsGetResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseVulnerabilityAssessmentsListByDatabaseResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseVulnerabilityAssessmentsListByDatabaseNextResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type JobAgentsListByServerResponse = JobAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobAgentsGetResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobAgentsCreateOrUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type JobAgentsUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type JobAgentsBeginCreateOrUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type JobAgentsBeginUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type JobAgentsListByServerNextResponse = JobAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgentListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobCredentialsListByAgentResponse = JobCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredentialListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobCredentialsGetResponse = JobCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredential;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobCredentialsCreateOrUpdateResponse = JobCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredential;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobCredentialsListByAgentNextResponse = JobCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredentialListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobExecutionsListByAgentResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type JobExecutionsCreateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobExecutionsListByJobResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobExecutionsCreateOrUpdateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type JobExecutionsBeginCreateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type JobExecutionsBeginCreateOrUpdateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobExecutionsListByAgentNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobExecutionsListByJobNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobsListByAgentResponse = JobListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobsCreateOrUpdateResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobsListByAgentNextResponse = JobListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobListResult;
    };
};

/**
 * Contains response data for the listByJobExecution operation.
 */
export type JobStepExecutionsListByJobExecutionResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobStepExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJobExecutionNext operation.
 */
export type JobStepExecutionsListByJobExecutionNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByVersion operation.
 */
export type JobStepsListByVersionResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the getByVersion operation.
 */
export type JobStepsGetByVersionResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobStepsListByJobResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobStepsGetResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobStepsCreateOrUpdateResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the listByVersionNext operation.
 */
export type JobStepsListByVersionNextResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobStepsListByJobNextResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the listByJobExecution operation.
 */
export type JobTargetExecutionsListByJobExecutionResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByStep operation.
 */
export type JobTargetExecutionsListByStepResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobTargetExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJobExecutionNext operation.
 */
export type JobTargetExecutionsListByJobExecutionNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByStepNext operation.
 */
export type JobTargetExecutionsListByStepNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobTargetGroupsListByAgentResponse = JobTargetGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobTargetGroupsGetResponse = JobTargetGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobTargetGroupsCreateOrUpdateResponse = JobTargetGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroup;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobTargetGroupsListByAgentNextResponse = JobTargetGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroupListResult;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobVersionsListByJobResponse = JobVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobVersionsGetResponse = JobVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersion;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobVersionsListByJobNextResponse = JobVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersionListResult;
    };
};

/**
 * Contains response data for the getByResourceGroup operation.
 */
export type LongTermRetentionBackupsGetByResourceGroupResponse = LongTermRetentionBackup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackup;
    };
};

/**
 * Contains response data for the listByResourceGroupDatabase operation.
 */
export type LongTermRetentionBackupsListByResourceGroupDatabaseResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupLocation operation.
 */
export type LongTermRetentionBackupsListByResourceGroupLocationResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupServer operation.
 */
export type LongTermRetentionBackupsListByResourceGroupServerResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LongTermRetentionBackupsGetResponse = LongTermRetentionBackup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackup;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type LongTermRetentionBackupsListByDatabaseResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type LongTermRetentionBackupsListByLocationResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type LongTermRetentionBackupsListByServerResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupDatabaseNext operation.
 */
export type LongTermRetentionBackupsListByResourceGroupDatabaseNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupLocationNext operation.
 */
export type LongTermRetentionBackupsListByResourceGroupLocationNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupServerNext operation.
 */
export type LongTermRetentionBackupsListByResourceGroupServerNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type LongTermRetentionBackupsListByDatabaseNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type LongTermRetentionBackupsListByLocationNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type LongTermRetentionBackupsListByServerNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupLongTermRetentionPoliciesGetResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackupLongTermRetentionPoliciesCreateOrUpdateResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type BackupLongTermRetentionPoliciesListByDatabaseResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BackupLongTermRetentionPoliciesBeginCreateOrUpdateResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedBackupShortTermRetentionPoliciesGetResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedBackupShortTermRetentionPoliciesCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedBackupShortTermRetentionPoliciesUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedBackupShortTermRetentionPoliciesListByDatabaseResponse = ManagedBackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedBackupShortTermRetentionPoliciesBeginCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedBackupShortTermRetentionPoliciesBeginUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedBackupShortTermRetentionPoliciesListByDatabaseNextResponse = ManagedBackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesGetResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByRestorableDroppedDatabase operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseResponse = ManagedBackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesBeginCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesBeginUpdateResponse = ManagedBackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByRestorableDroppedDatabaseNext operation.
 */
export type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseNextResponse = ManagedBackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedBackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerAutomaticTuningGetResponse = ServerAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAutomaticTuning;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServerAutomaticTuningUpdateResponse = ServerAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAutomaticTuning;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerDnsAliasesGetResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerDnsAliasesCreateOrUpdateResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerDnsAliasesListByServerResponse = ServerDnsAliasListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAliasListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerDnsAliasesBeginCreateOrUpdateResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerDnsAliasesListByServerNextResponse = ServerDnsAliasListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAliasListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerSecurityAlertPoliciesGetResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerSecurityAlertPoliciesCreateOrUpdateResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerSecurityAlertPoliciesListByServerResponse = LogicalServerSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogicalServerSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerSecurityAlertPoliciesBeginCreateOrUpdateResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerSecurityAlertPoliciesListByServerNextResponse = LogicalServerSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogicalServerSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type RestorableDroppedManagedDatabasesListByInstanceResponse = RestorableDroppedManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RestorableDroppedManagedDatabasesGetResponse = RestorableDroppedManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedManagedDatabase;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type RestorableDroppedManagedDatabasesListByInstanceNextResponse = RestorableDroppedManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type RestorePointsListByDatabaseResponse = RestorePointListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePointListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RestorePointsCreateResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RestorePointsGetResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type RestorePointsBeginCreateResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseSecurityAlertPoliciesGetResponse = ManagedDatabaseSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseSecurityAlertPoliciesCreateOrUpdateResponse = ManagedDatabaseSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedDatabaseSecurityAlertPoliciesListByDatabaseResponse = ManagedDatabaseSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedDatabaseSecurityAlertPoliciesListByDatabaseNextResponse = ManagedDatabaseSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedServerSecurityAlertPoliciesGetResponse = ManagedServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedServerSecurityAlertPoliciesCreateOrUpdateResponse = ManagedServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedServerSecurityAlertPoliciesListByInstanceResponse = ManagedServerSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedServerSecurityAlertPoliciesBeginCreateOrUpdateResponse = ManagedServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedServerSecurityAlertPoliciesListByInstanceNextResponse = ManagedServerSecurityAlertPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedServerSecurityAlertPolicyListResult;
    };
};

/**
 * Contains response data for the listCurrentByDatabase operation.
 */
export type SensitivityLabelsListCurrentByDatabaseResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listRecommendedByDatabase operation.
 */
export type SensitivityLabelsListRecommendedByDatabaseResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SensitivityLabelsGetResponse = SensitivityLabel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabel;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SensitivityLabelsCreateOrUpdateResponse = SensitivityLabel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabel;
    };
};

/**
 * Contains response data for the listCurrentByDatabaseNext operation.
 */
export type SensitivityLabelsListCurrentByDatabaseNextResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listRecommendedByDatabaseNext operation.
 */
export type SensitivityLabelsListRecommendedByDatabaseNextResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceAdministratorsListByInstanceResponse = ManagedInstanceAdministratorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministratorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceAdministratorsGetResponse = ManagedInstanceAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministrator;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceAdministratorsCreateOrUpdateResponse = ManagedInstanceAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministrator;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstanceAdministratorsBeginCreateOrUpdateResponse = ManagedInstanceAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministrator;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceAdministratorsListByInstanceNextResponse = ManagedInstanceAdministratorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceAdministratorListResult;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseOperationsListByDatabaseResponse = DatabaseOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseOperationListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseOperationsListByDatabaseNextResponse = DatabaseOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseOperationListResult;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type ElasticPoolOperationsListByElasticPoolResponse = ElasticPoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolOperationListResult;
    };
};

/**
 * Contains response data for the listByElasticPoolNext operation.
 */
export type ElasticPoolOperationsListByElasticPoolNextResponse = ElasticPoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolOperationListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type CapabilitiesListByLocationResponse = LocationCapabilities & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LocationCapabilities;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseVulnerabilityAssessmentScansListByDatabaseResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecord;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type DatabaseVulnerabilityAssessmentScansExportMethodResponse = DatabaseVulnerabilityAssessmentScansExport & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentScansExport;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecord;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansExportMethodResponse = DatabaseVulnerabilityAssessmentScansExport & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentScansExport;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsGetResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsListByDatabaseResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type InstanceFailoverGroupsGetResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type InstanceFailoverGroupsCreateOrUpdateResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type InstanceFailoverGroupsListByLocationResponse = InstanceFailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroupListResult;
    };
};

/**
 * Contains response data for the failover operation.
 */
export type InstanceFailoverGroupsFailoverResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the forceFailoverAllowDataLoss operation.
 */
export type InstanceFailoverGroupsForceFailoverAllowDataLossResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type InstanceFailoverGroupsBeginCreateOrUpdateResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginFailover operation.
 */
export type InstanceFailoverGroupsBeginFailoverResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginForceFailoverAllowDataLoss operation.
 */
export type InstanceFailoverGroupsBeginForceFailoverAllowDataLossResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type InstanceFailoverGroupsListByLocationNextResponse = InstanceFailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupShortTermRetentionPoliciesGetResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackupShortTermRetentionPoliciesCreateOrUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BackupShortTermRetentionPoliciesUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type BackupShortTermRetentionPoliciesListByDatabaseResponse = BackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BackupShortTermRetentionPoliciesBeginCreateOrUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type BackupShortTermRetentionPoliciesBeginUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type BackupShortTermRetentionPoliciesListByDatabaseNextResponse = BackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceKeysListByInstanceResponse = ManagedInstanceKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKeyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceKeysGetResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceKeysCreateOrUpdateResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstanceKeysBeginCreateOrUpdateResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceKeysListByInstanceNextResponse = ManagedInstanceKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKeyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceEncryptionProtectorsListByInstanceResponse = ManagedInstanceEncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceEncryptionProtectorsGetResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstanceEncryptionProtectorsBeginCreateOrUpdateResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceEncryptionProtectorsListByInstanceNextResponse = ManagedInstanceEncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type RecoverableManagedDatabasesListByInstanceResponse = RecoverableManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecoverableManagedDatabasesGetResponse = RecoverableManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableManagedDatabase;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type RecoverableManagedDatabasesListByInstanceNextResponse = RecoverableManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceVulnerabilityAssessmentsGetResponse = ManagedInstanceVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateResponse = ManagedInstanceVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceVulnerabilityAssessmentsListByInstanceResponse = ManagedInstanceVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceVulnerabilityAssessmentsListByInstanceNextResponse = ManagedInstanceVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerVulnerabilityAssessmentsGetResponse = ServerVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerVulnerabilityAssessmentsCreateOrUpdateResponse = ServerVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerVulnerabilityAssessmentsListByServerResponse = ServerVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerVulnerabilityAssessmentsListByServerNextResponse = ServerVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseSensitivityLabelsGetResponse = SensitivityLabel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabel;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseSensitivityLabelsCreateOrUpdateResponse = SensitivityLabel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabel;
    };
};

/**
 * Contains response data for the listCurrentByDatabase operation.
 */
export type ManagedDatabaseSensitivityLabelsListCurrentByDatabaseResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listRecommendedByDatabase operation.
 */
export type ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listCurrentByDatabaseNext operation.
 */
export type ManagedDatabaseSensitivityLabelsListCurrentByDatabaseNextResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listRecommendedByDatabaseNext operation.
 */
export type ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseNextResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type InstancePoolsGetResponse = InstancePool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type InstancePoolsCreateOrUpdateResponse = InstancePool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePool;
    };
};

/**
 * Contains response data for the update operation.
 */
export type InstancePoolsUpdateResponse = InstancePool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePool;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type InstancePoolsListByResourceGroupResponse = InstancePoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePoolListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type InstancePoolsListResponse = InstancePoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePoolListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type InstancePoolsBeginCreateOrUpdateResponse = InstancePool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePool;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type InstancePoolsBeginUpdateResponse = InstancePool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePool;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type InstancePoolsListByResourceGroupNextResponse = InstancePoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePoolListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type InstancePoolsListNextResponse = InstancePoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstancePoolListResult;
    };
};

/**
 * Contains response data for the listByInstancePool operation.
 */
export type UsagesListByInstancePoolResponse = UsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageListResult;
    };
};

/**
 * Contains response data for the listByInstancePoolNext operation.
 */
export type UsagesListByInstancePoolNextResponse = UsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageListResult;
    };
};

/**
 * Contains response data for the listByInstancePool operation.
 */
export type ManagedInstancesListByInstancePoolResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ManagedInstancesListByResourceGroupResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstancesGetResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstancesCreateOrUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedInstancesUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ManagedInstancesListResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstancesBeginCreateOrUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedInstancesBeginUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the listByInstancePoolNext operation.
 */
export type ManagedInstancesListByInstancePoolNextResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ManagedInstancesListByResourceGroupNextResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ManagedInstancesListNextResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseRestoreDetailsGetResponse = ManagedDatabaseRestoreDetailsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseRestoreDetailsResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedDatabasesListByInstanceResponse = ManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabasesGetResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabasesCreateOrUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedDatabasesUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedDatabasesBeginCreateOrUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedDatabasesBeginUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedDatabasesListByInstanceNextResponse = ManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type PrivateEndpointConnectionsListByServerResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type PrivateEndpointConnectionsBeginCreateOrUpdateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type PrivateEndpointConnectionsListByServerNextResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type PrivateLinkResourcesListByServerResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResource;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type PrivateLinkResourcesListByServerNextResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};
