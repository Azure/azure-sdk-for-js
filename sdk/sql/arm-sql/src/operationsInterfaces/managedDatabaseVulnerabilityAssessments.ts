/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DatabaseVulnerabilityAssessment,
  ManagedDatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams,
  VulnerabilityAssessmentName,
  ManagedDatabaseVulnerabilityAssessmentsGetOptionalParams,
  ManagedDatabaseVulnerabilityAssessmentsGetResponse,
  ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams,
  ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateResponse,
  ManagedDatabaseVulnerabilityAssessmentsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ManagedDatabaseVulnerabilityAssessments. */
export interface ManagedDatabaseVulnerabilityAssessments {
  /**
   * Lists the vulnerability assessments of a managed database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment is defined.
   * @param options The options parameters.
   */
  listByDatabase(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    options?: ManagedDatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams
  ): PagedAsyncIterableIterator<DatabaseVulnerabilityAssessment>;
  /**
   * Gets the database's vulnerability assessment.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment is defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: ManagedDatabaseVulnerabilityAssessmentsGetOptionalParams
  ): Promise<ManagedDatabaseVulnerabilityAssessmentsGetResponse>;
  /**
   * Creates or updates the database's vulnerability assessment.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment is defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param parameters The requested resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    parameters: DatabaseVulnerabilityAssessment,
    options?: ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams
  ): Promise<ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateResponse>;
  /**
   * Removes the database's vulnerability assessment.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment is defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: ManagedDatabaseVulnerabilityAssessmentsDeleteOptionalParams
  ): Promise<void>;
}
