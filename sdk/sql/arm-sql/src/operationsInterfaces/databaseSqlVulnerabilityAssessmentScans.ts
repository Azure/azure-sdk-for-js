/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SqlVulnerabilityAssessmentScanRecord,
  VulnerabilityAssessmentName,
  DatabaseSqlVulnerabilityAssessmentScansListBySqlVulnerabilityAssessmentsOptionalParams,
  DatabaseSqlVulnerabilityAssessmentScansGetOptionalParams,
  DatabaseSqlVulnerabilityAssessmentScansGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DatabaseSqlVulnerabilityAssessmentScans. */
export interface DatabaseSqlVulnerabilityAssessmentScans {
  /**
   * Lists the vulnerability assessment scans of a database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  listBySqlVulnerabilityAssessments(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: DatabaseSqlVulnerabilityAssessmentScansListBySqlVulnerabilityAssessmentsOptionalParams
  ): PagedAsyncIterableIterator<SqlVulnerabilityAssessmentScanRecord>;
  /**
   * Get a database vulnerability assessment scan result.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    scanId: string,
    options?: DatabaseSqlVulnerabilityAssessmentScansGetOptionalParams
  ): Promise<DatabaseSqlVulnerabilityAssessmentScansGetResponse>;
}
