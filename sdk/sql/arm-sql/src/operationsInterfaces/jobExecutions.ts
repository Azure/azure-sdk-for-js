/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  JobExecution,
  JobExecutionsListByAgentOptionalParams,
  JobExecutionsListByJobOptionalParams,
  JobExecutionsCancelOptionalParams,
  JobExecutionsCreateOptionalParams,
  JobExecutionsCreateResponse,
  JobExecutionsGetOptionalParams,
  JobExecutionsGetResponse,
  JobExecutionsCreateOrUpdateOptionalParams,
  JobExecutionsCreateOrUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a JobExecutions. */
export interface JobExecutions {
  /**
   * Lists all executions in a job agent.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param options The options parameters.
   */
  listByAgent(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    options?: JobExecutionsListByAgentOptionalParams
  ): PagedAsyncIterableIterator<JobExecution>;
  /**
   * Lists a job's executions.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param jobName The name of the job to get.
   * @param options The options parameters.
   */
  listByJob(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    jobName: string,
    options?: JobExecutionsListByJobOptionalParams
  ): PagedAsyncIterableIterator<JobExecution>;
  /**
   * Requests cancellation of a job execution.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param jobName The name of the job.
   * @param jobExecutionId The id of the job execution to cancel.
   * @param options The options parameters.
   */
  cancel(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    jobName: string,
    jobExecutionId: string,
    options?: JobExecutionsCancelOptionalParams
  ): Promise<void>;
  /**
   * Starts an elastic job execution.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param jobName The name of the job to get.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    jobName: string,
    options?: JobExecutionsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<JobExecutionsCreateResponse>,
      JobExecutionsCreateResponse
    >
  >;
  /**
   * Starts an elastic job execution.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param jobName The name of the job to get.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    jobName: string,
    options?: JobExecutionsCreateOptionalParams
  ): Promise<JobExecutionsCreateResponse>;
  /**
   * Gets a job execution.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param jobName The name of the job.
   * @param jobExecutionId The id of the job execution
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    jobName: string,
    jobExecutionId: string,
    options?: JobExecutionsGetOptionalParams
  ): Promise<JobExecutionsGetResponse>;
  /**
   * Creates or updates a job execution.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param jobName The name of the job to get.
   * @param jobExecutionId The job execution id to create the job execution under.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    jobName: string,
    jobExecutionId: string,
    options?: JobExecutionsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<JobExecutionsCreateOrUpdateResponse>,
      JobExecutionsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a job execution.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param jobName The name of the job to get.
   * @param jobExecutionId The job execution id to create the job execution under.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    jobName: string,
    jobExecutionId: string,
    options?: JobExecutionsCreateOrUpdateOptionalParams
  ): Promise<JobExecutionsCreateOrUpdateResponse>;
}
