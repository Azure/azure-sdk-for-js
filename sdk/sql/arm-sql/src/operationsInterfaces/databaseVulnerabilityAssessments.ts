/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DatabaseVulnerabilityAssessment,
  DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams,
  VulnerabilityAssessmentName,
  DatabaseVulnerabilityAssessmentsGetOptionalParams,
  DatabaseVulnerabilityAssessmentsGetResponse,
  DatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams,
  DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse,
  DatabaseVulnerabilityAssessmentsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DatabaseVulnerabilityAssessments. */
export interface DatabaseVulnerabilityAssessments {
  /**
   * Lists the vulnerability assessment policies associated with a database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database for which the vulnerability assessment policies are
   *                     defined.
   * @param options The options parameters.
   */
  listByDatabase(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    options?: DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams
  ): PagedAsyncIterableIterator<DatabaseVulnerabilityAssessment>;
  /**
   * Gets the database's vulnerability assessment.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database for which the vulnerability assessment is defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: DatabaseVulnerabilityAssessmentsGetOptionalParams
  ): Promise<DatabaseVulnerabilityAssessmentsGetResponse>;
  /**
   * Creates or updates the database's vulnerability assessment.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database for which the vulnerability assessment is defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param parameters The requested resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    parameters: DatabaseVulnerabilityAssessment,
    options?: DatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams
  ): Promise<DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse>;
  /**
   * Removes the database's vulnerability assessment.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database for which the vulnerability assessment is defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: DatabaseVulnerabilityAssessmentsDeleteOptionalParams
  ): Promise<void>;
}
