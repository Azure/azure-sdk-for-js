/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  VulnerabilityAssessmentName,
  VulnerabilityAssessmentPolicyBaselineName,
  DatabaseVulnerabilityAssessmentRuleBaselinesGetOptionalParams,
  DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse,
  DatabaseVulnerabilityAssessmentRuleBaseline,
  DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams,
  DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse,
  DatabaseVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams
} from "../models";

/** Interface representing a DatabaseVulnerabilityAssessmentRuleBaselines. */
export interface DatabaseVulnerabilityAssessmentRuleBaselines {
  /**
   * Gets a database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is
   *                     defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   *                     baseline on a database level rule and master for server level rule).
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    ruleId: string,
    baselineName: VulnerabilityAssessmentPolicyBaselineName,
    options?: DatabaseVulnerabilityAssessmentRuleBaselinesGetOptionalParams
  ): Promise<DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse>;
  /**
   * Creates or updates a database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is
   *                     defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   *                     baseline on a database level rule and master for server level rule).
   * @param parameters The requested rule baseline resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    ruleId: string,
    baselineName: VulnerabilityAssessmentPolicyBaselineName,
    parameters: DatabaseVulnerabilityAssessmentRuleBaseline,
    options?: DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams
  ): Promise<
    DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse
  >;
  /**
   * Removes the database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is
   *                     defined.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   *                     baseline on a database level rule and master for server level rule).
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    ruleId: string,
    baselineName: VulnerabilityAssessmentPolicyBaselineName,
    options?: DatabaseVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams
  ): Promise<void>;
}
