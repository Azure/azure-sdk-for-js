/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SqlVulnerabilityAssessmentScanResults,
  SQLVulnerabilityAssessmentName,
  SqlVulnerabilityAssessmentScanResultListByScanOptionalParams,
  SqlVulnerabilityAssessmentScanResultGetOptionalParams,
  SqlVulnerabilityAssessmentScanResultGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlVulnerabilityAssessmentScanResult. */
export interface SqlVulnerabilityAssessmentScanResult {
  /**
   * Gets a vulnerability assessment scan record of a database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param vulnerabilityAssessmentName The name of the SQL Vulnerability Assessment.
   * @param scanId The scan id of the SQL Vulnerability Assessment scan to retrieve result from.
   * @param options The options parameters.
   */
  listByScan(
    resourceGroupName: string,
    serverName: string,
    vulnerabilityAssessmentName: SQLVulnerabilityAssessmentName,
    scanId: string,
    options?: SqlVulnerabilityAssessmentScanResultListByScanOptionalParams
  ): PagedAsyncIterableIterator<SqlVulnerabilityAssessmentScanResults>;
  /**
   * Gets a vulnerability assessment scan record of a database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param vulnerabilityAssessmentName The name of the SQL Vulnerability Assessment.
   * @param scanId The scan id of the SQL Vulnerability Assessment scan to retrieve result from.
   * @param scanResultId The scan result id of the specific result to retrieve.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    vulnerabilityAssessmentName: SQLVulnerabilityAssessmentName,
    scanId: string,
    scanResultId: string,
    options?: SqlVulnerabilityAssessmentScanResultGetOptionalParams
  ): Promise<SqlVulnerabilityAssessmentScanResultGetResponse>;
}
