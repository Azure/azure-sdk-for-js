/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/managedDatabaseSecurityEventsMappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClientContext } from "../sqlManagementClientContext";

/** Class representing a ManagedDatabaseSecurityEvents. */
export class ManagedDatabaseSecurityEvents {
  private readonly client: SqlManagementClientContext;

  /**
   * Create a ManagedDatabaseSecurityEvents.
   * @param {SqlManagementClientContext} client Reference to the service client.
   */
  constructor(client: SqlManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets a list of security events.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the managed database for which the security events are
   * retrieved.
   * @param [options] The optional parameters
   * @returns Promise<Models.ManagedDatabaseSecurityEventsListByDatabaseResponse>
   */
  listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, options?: Models.ManagedDatabaseSecurityEventsListByDatabaseOptionalParams): Promise<Models.ManagedDatabaseSecurityEventsListByDatabaseResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the managed database for which the security events are
   * retrieved.
   * @param callback The callback
   */
  listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, callback: msRest.ServiceCallback<Models.SecurityEventCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the managed database for which the security events are
   * retrieved.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, options: Models.ManagedDatabaseSecurityEventsListByDatabaseOptionalParams, callback: msRest.ServiceCallback<Models.SecurityEventCollection>): void;
  listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, options?: Models.ManagedDatabaseSecurityEventsListByDatabaseOptionalParams | msRest.ServiceCallback<Models.SecurityEventCollection>, callback?: msRest.ServiceCallback<Models.SecurityEventCollection>): Promise<Models.ManagedDatabaseSecurityEventsListByDatabaseResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        managedInstanceName,
        databaseName,
        options
      },
      listByDatabaseOperationSpec,
      callback) as Promise<Models.ManagedDatabaseSecurityEventsListByDatabaseResponse>;
  }

  /**
   * Gets a list of security events.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ManagedDatabaseSecurityEventsListByDatabaseNextResponse>
   */
  listByDatabaseNext(nextPageLink: string, options?: Models.ManagedDatabaseSecurityEventsListByDatabaseNextOptionalParams): Promise<Models.ManagedDatabaseSecurityEventsListByDatabaseNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByDatabaseNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SecurityEventCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByDatabaseNext(nextPageLink: string, options: Models.ManagedDatabaseSecurityEventsListByDatabaseNextOptionalParams, callback: msRest.ServiceCallback<Models.SecurityEventCollection>): void;
  listByDatabaseNext(nextPageLink: string, options?: Models.ManagedDatabaseSecurityEventsListByDatabaseNextOptionalParams | msRest.ServiceCallback<Models.SecurityEventCollection>, callback?: msRest.ServiceCallback<Models.SecurityEventCollection>): Promise<Models.ManagedDatabaseSecurityEventsListByDatabaseNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByDatabaseNextOperationSpec,
      callback) as Promise<Models.ManagedDatabaseSecurityEventsListByDatabaseNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByDatabaseOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/securityEvents",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.managedInstanceName,
    Parameters.databaseName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.skip,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SecurityEventCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByDatabaseNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.filter1,
    Parameters.skip,
    Parameters.top,
    Parameters.skiptoken,
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SecurityEventCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
