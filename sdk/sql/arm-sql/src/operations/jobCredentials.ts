/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/jobCredentialsMappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClientContext } from "../sqlManagementClientContext";

/** Class representing a JobCredentials. */
export class JobCredentials {
  private readonly client: SqlManagementClientContext;

  /**
   * Create a JobCredentials.
   * @param {SqlManagementClientContext} client Reference to the service client.
   */
  constructor(client: SqlManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets a list of jobs credentials.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobCredentialsListByAgentResponse>
   */
  listByAgent(resourceGroupName: string, serverName: string, jobAgentName: string, options?: msRest.RequestOptionsBase): Promise<Models.JobCredentialsListByAgentResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param callback The callback
   */
  listByAgent(resourceGroupName: string, serverName: string, jobAgentName: string, callback: msRest.ServiceCallback<Models.JobCredentialListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAgent(resourceGroupName: string, serverName: string, jobAgentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobCredentialListResult>): void;
  listByAgent(resourceGroupName: string, serverName: string, jobAgentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobCredentialListResult>, callback?: msRest.ServiceCallback<Models.JobCredentialListResult>): Promise<Models.JobCredentialsListByAgentResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        jobAgentName,
        options
      },
      listByAgentOperationSpec,
      callback) as Promise<Models.JobCredentialsListByAgentResponse>;
  }

  /**
   * Gets a jobs credential.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobCredentialsGetResponse>
   */
  get(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options?: msRest.RequestOptionsBase): Promise<Models.JobCredentialsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param callback The callback
   */
  get(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, callback: msRest.ServiceCallback<Models.JobCredential>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobCredential>): void;
  get(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobCredential>, callback?: msRest.ServiceCallback<Models.JobCredential>): Promise<Models.JobCredentialsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        jobAgentName,
        credentialName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.JobCredentialsGetResponse>;
  }

  /**
   * Creates or updates a job credential.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param parameters The requested job credential state.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobCredentialsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, parameters: Models.JobCredential, options?: msRest.RequestOptionsBase): Promise<Models.JobCredentialsCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param parameters The requested job credential state.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, parameters: Models.JobCredential, callback: msRest.ServiceCallback<Models.JobCredential>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param parameters The requested job credential state.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, parameters: Models.JobCredential, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobCredential>): void;
  createOrUpdate(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, parameters: Models.JobCredential, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobCredential>, callback?: msRest.ServiceCallback<Models.JobCredential>): Promise<Models.JobCredentialsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        jobAgentName,
        credentialName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.JobCredentialsCreateOrUpdateResponse>;
  }

  /**
   * Deletes a job credential.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent.
   * @param credentialName The name of the credential.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, serverName: string, jobAgentName: string, credentialName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        jobAgentName,
        credentialName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Gets a list of jobs credentials.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobCredentialsListByAgentNextResponse>
   */
  listByAgentNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.JobCredentialsListByAgentNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByAgentNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.JobCredentialListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAgentNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobCredentialListResult>): void;
  listByAgentNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobCredentialListResult>, callback?: msRest.ServiceCallback<Models.JobCredentialListResult>): Promise<Models.JobCredentialsListByAgentNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByAgentNextOperationSpec,
      callback) as Promise<Models.JobCredentialsListByAgentNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByAgentOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.jobAgentName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.JobCredentialListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.jobAgentName,
    Parameters.credentialName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.JobCredential
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.jobAgentName,
    Parameters.credentialName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.JobCredential,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.JobCredential
    },
    201: {
      bodyMapper: Mappers.JobCredential
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.jobAgentName,
    Parameters.credentialName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByAgentNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.JobCredentialListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
