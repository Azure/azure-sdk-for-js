/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SqlVulnerabilityAssessmentRuleBaselines } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClient } from "../sqlManagementClient";
import {
  VulnerabilityAssessmentName,
  BaselineName,
  SqlVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams
} from "../models";

/** Class containing SqlVulnerabilityAssessmentRuleBaselines operations. */
export class SqlVulnerabilityAssessmentRuleBaselinesImpl
  implements SqlVulnerabilityAssessmentRuleBaselines {
  private readonly client: SqlManagementClient;

  /**
   * Initialize a new instance of the class SqlVulnerabilityAssessmentRuleBaselines class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {
    this.client = client;
  }

  /**
   * Removes the database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param ruleId The vulnerability assessment rule ID.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serverName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    ruleId: string,
    options?: SqlVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        vulnerabilityAssessmentName,
        baselineName,
        ruleId,
        options
      },
      deleteOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const deleteOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/sqlVulnerabilityAssessments/{vulnerabilityAssessmentName}/baselines/{baselineName}/rules/{ruleId}",
  httpMethod: "DELETE",
  responses: { 200: {}, 204: {}, default: {} },
  queryParameters: [Parameters.apiVersion4, Parameters.systemDatabaseName],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName1
  ],
  serializer
};
