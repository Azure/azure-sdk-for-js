/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper";
import { DatabaseSqlVulnerabilityAssessmentRuleBaselines } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClient } from "../sqlManagementClient";
import {
  DatabaseSqlVulnerabilityAssessmentRuleBaseline,
  VulnerabilityAssessmentName,
  BaselineName,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineNextOptionalParams,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineOptionalParams,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineResponse,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesGetOptionalParams,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesGetResponse,
  DatabaseSqlVulnerabilityAssessmentRuleBaselineInput,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams,
  DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing DatabaseSqlVulnerabilityAssessmentRuleBaselines operations. */
export class DatabaseSqlVulnerabilityAssessmentRuleBaselinesImpl
  implements DatabaseSqlVulnerabilityAssessmentRuleBaselines {
  private readonly client: SqlManagementClient;

  /**
   * Initialize a new instance of the class DatabaseSqlVulnerabilityAssessmentRuleBaselines class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {
    this.client = client;
  }

  /**
   * Gets a list of database's sql vulnerability assessment rule baselines.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param options The options parameters.
   */
  public listByBaseline(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    options?: DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineOptionalParams
  ): PagedAsyncIterableIterator<
    DatabaseSqlVulnerabilityAssessmentRuleBaseline
  > {
    const iter = this.listByBaselinePagingAll(
      resourceGroupName,
      serverName,
      databaseName,
      vulnerabilityAssessmentName,
      baselineName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listByBaselinePagingPage(
          resourceGroupName,
          serverName,
          databaseName,
          vulnerabilityAssessmentName,
          baselineName,
          options,
          settings
        );
      }
    };
  }

  private async *listByBaselinePagingPage(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    options?: DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DatabaseSqlVulnerabilityAssessmentRuleBaseline[]> {
    let result: DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._listByBaseline(
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listByBaselineNext(
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listByBaselinePagingAll(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    options?: DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineOptionalParams
  ): AsyncIterableIterator<DatabaseSqlVulnerabilityAssessmentRuleBaseline> {
    for await (const page of this.listByBaselinePagingPage(
      resourceGroupName,
      serverName,
      databaseName,
      vulnerabilityAssessmentName,
      baselineName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Gets a list of database's sql vulnerability assessment rule baselines.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param options The options parameters.
   */
  private _listByBaseline(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    options?: DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineOptionalParams
  ): Promise<
    DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineResponse
  > {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        options
      },
      listByBaselineOperationSpec
    );
  }

  /**
   * Gets a database's sql vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param ruleId The vulnerability assessment rule ID.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    ruleId: string,
    options?: DatabaseSqlVulnerabilityAssessmentRuleBaselinesGetOptionalParams
  ): Promise<DatabaseSqlVulnerabilityAssessmentRuleBaselinesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        ruleId,
        options
      },
      getOperationSpec
    );
  }

  /**
   * Creates or updates a database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param ruleId The vulnerability assessment rule ID.
   * @param parameters The requested rule baseline resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    ruleId: string,
    parameters: DatabaseSqlVulnerabilityAssessmentRuleBaselineInput,
    options?: DatabaseSqlVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams
  ): Promise<
    DatabaseSqlVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse
  > {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        ruleId,
        parameters,
        options
      },
      createOrUpdateOperationSpec
    );
  }

  /**
   * Removes the database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param ruleId The vulnerability assessment rule ID.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    ruleId: string,
    options?: DatabaseSqlVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        ruleId,
        options
      },
      deleteOperationSpec
    );
  }

  /**
   * ListByBaselineNext
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param nextLink The nextLink from the previous successful call to the ListByBaseline method.
   * @param options The options parameters.
   */
  private _listByBaselineNext(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    nextLink: string,
    options?: DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineNextOptionalParams
  ): Promise<
    DatabaseSqlVulnerabilityAssessmentRuleBaselinesListByBaselineNextResponse
  > {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        nextLink,
        options
      },
      listByBaselineNextOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listByBaselineOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/sqlVulnerabilityAssessments/{vulnerabilityAssessmentName}/baselines/{baselineName}/rules",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper:
        Mappers.DatabaseSqlVulnerabilityAssessmentRuleBaselineListResult
    },
    default: {}
  },
  queryParameters: [Parameters.apiVersion8],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.baselineName1
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/sqlVulnerabilityAssessments/{vulnerabilityAssessmentName}/baselines/{baselineName}/rules/{ruleId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseSqlVulnerabilityAssessmentRuleBaseline
    },
    default: {}
  },
  queryParameters: [Parameters.apiVersion8],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName1
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const createOrUpdateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/sqlVulnerabilityAssessments/{vulnerabilityAssessmentName}/baselines/{baselineName}/rules/{ruleId}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseSqlVulnerabilityAssessmentRuleBaseline
    },
    default: {}
  },
  requestBody: Parameters.parameters104,
  queryParameters: [Parameters.apiVersion8],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName1
  ],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/sqlVulnerabilityAssessments/{vulnerabilityAssessmentName}/baselines/{baselineName}/rules/{ruleId}",
  httpMethod: "DELETE",
  responses: { 200: {}, 204: {}, default: {} },
  queryParameters: [Parameters.apiVersion8],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName1
  ],
  serializer
};
const listByBaselineNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper:
        Mappers.DatabaseSqlVulnerabilityAssessmentRuleBaselineListResult
    },
    default: {}
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.nextLink,
    Parameters.vulnerabilityAssessmentName,
    Parameters.baselineName1
  ],
  headerParameters: [Parameters.accept],
  serializer
};
