/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper";
import { DatabaseSqlVulnerabilityAssessmentBaselines } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClient } from "../sqlManagementClient";
import {
  DatabaseSqlVulnerabilityAssessmentBaselineSet,
  VulnerabilityAssessmentName,
  DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentNextOptionalParams,
  DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentOptionalParams,
  DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentResponse,
  BaselineName,
  DatabaseSqlVulnerabilityAssessmentBaselinesGetOptionalParams,
  DatabaseSqlVulnerabilityAssessmentBaselinesGetResponse,
  DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput,
  DatabaseSqlVulnerabilityAssessmentBaselinesCreateOrUpdateOptionalParams,
  DatabaseSqlVulnerabilityAssessmentBaselinesCreateOrUpdateResponse,
  DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing DatabaseSqlVulnerabilityAssessmentBaselines operations. */
export class DatabaseSqlVulnerabilityAssessmentBaselinesImpl
  implements DatabaseSqlVulnerabilityAssessmentBaselines {
  private readonly client: SqlManagementClient;

  /**
   * Initialize a new instance of the class DatabaseSqlVulnerabilityAssessmentBaselines class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {
    this.client = client;
  }

  /**
   * Gets a list of database's sql vulnerability assessment rule baselines.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  public listBySqlVulnerabilityAssessment(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentOptionalParams
  ): PagedAsyncIterableIterator<DatabaseSqlVulnerabilityAssessmentBaselineSet> {
    const iter = this.listBySqlVulnerabilityAssessmentPagingAll(
      resourceGroupName,
      serverName,
      databaseName,
      vulnerabilityAssessmentName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listBySqlVulnerabilityAssessmentPagingPage(
          resourceGroupName,
          serverName,
          databaseName,
          vulnerabilityAssessmentName,
          options,
          settings
        );
      }
    };
  }

  private async *listBySqlVulnerabilityAssessmentPagingPage(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DatabaseSqlVulnerabilityAssessmentBaselineSet[]> {
    let result: DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._listBySqlVulnerabilityAssessment(
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listBySqlVulnerabilityAssessmentNext(
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listBySqlVulnerabilityAssessmentPagingAll(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentOptionalParams
  ): AsyncIterableIterator<DatabaseSqlVulnerabilityAssessmentBaselineSet> {
    for await (const page of this.listBySqlVulnerabilityAssessmentPagingPage(
      resourceGroupName,
      serverName,
      databaseName,
      vulnerabilityAssessmentName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Gets a list of database's sql vulnerability assessment rule baselines.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  private _listBySqlVulnerabilityAssessment(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentOptionalParams
  ): Promise<
    DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentResponse
  > {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        options
      },
      listBySqlVulnerabilityAssessmentOperationSpec
    );
  }

  /**
   * Gets a list of database's sql vulnerability assessment rule baselines.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    options?: DatabaseSqlVulnerabilityAssessmentBaselinesGetOptionalParams
  ): Promise<DatabaseSqlVulnerabilityAssessmentBaselinesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        options
      },
      getOperationSpec
    );
  }

  /**
   * Add a database's vulnerability assessment rule baseline list.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param baselineName
   * @param parameters The requested rule baseline resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    baselineName: BaselineName,
    parameters: DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput,
    options?: DatabaseSqlVulnerabilityAssessmentBaselinesCreateOrUpdateOptionalParams
  ): Promise<
    DatabaseSqlVulnerabilityAssessmentBaselinesCreateOrUpdateResponse
  > {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        baselineName,
        parameters,
        options
      },
      createOrUpdateOperationSpec
    );
  }

  /**
   * ListBySqlVulnerabilityAssessmentNext
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param databaseName The name of the database.
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param nextLink The nextLink from the previous successful call to the
   *                 ListBySqlVulnerabilityAssessment method.
   * @param options The options parameters.
   */
  private _listBySqlVulnerabilityAssessmentNext(
    resourceGroupName: string,
    serverName: string,
    databaseName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    nextLink: string,
    options?: DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentNextOptionalParams
  ): Promise<
    DatabaseSqlVulnerabilityAssessmentBaselinesListBySqlVulnerabilityAssessmentNextResponse
  > {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        vulnerabilityAssessmentName,
        nextLink,
        options
      },
      listBySqlVulnerabilityAssessmentNextOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listBySqlVulnerabilityAssessmentOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/sqlVulnerabilityAssessments/{vulnerabilityAssessmentName}/baselines",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper:
        Mappers.DatabaseSqlVulnerabilityAssessmentBaselineSetListResult
    },
    default: {}
  },
  queryParameters: [Parameters.apiVersion4],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/sqlVulnerabilityAssessments/{vulnerabilityAssessmentName}/baselines/{baselineName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseSqlVulnerabilityAssessmentBaselineSet
    },
    default: {}
  },
  queryParameters: [Parameters.apiVersion4],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.baselineName1
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const createOrUpdateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/sqlVulnerabilityAssessments/{vulnerabilityAssessmentName}/baselines/{baselineName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseSqlVulnerabilityAssessmentBaselineSet
    },
    default: {}
  },
  requestBody: Parameters.parameters83,
  queryParameters: [Parameters.apiVersion4],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.baselineName1
  ],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const listBySqlVulnerabilityAssessmentNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper:
        Mappers.DatabaseSqlVulnerabilityAssessmentBaselineSetListResult
    },
    default: {}
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.nextLink,
    Parameters.vulnerabilityAssessmentName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
