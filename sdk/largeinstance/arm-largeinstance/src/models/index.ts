/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a AzureLargeInstance list operation. */
export interface AzureLargeInstanceListResult {
  /** The AzureLargeInstance items on this page */
  value: AzureLargeInstance[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Describes the properties of an Azure Large Instance. */
export interface AzureLargeInstanceProperties {
  /** Specifies the hardware settings for the Azure Large Instance. */
  hardwareProfile?: HardwareProfile;
  /** Specifies the storage settings for the Azure Large Instance disks. */
  storageProfile?: StorageProfile;
  /** Specifies the operating system settings for the Azure Large Instance. */
  osProfile?: OsProfile;
  /** Specifies the network settings for the Azure Large Instance. */
  networkProfile?: NetworkProfile;
  /**
   * Specifies the Azure Large Instance unique ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureLargeInstanceId?: string;
  /**
   * Resource power state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly powerState?: AzureLargeInstancePowerStateEnum;
  /**
   * Resource proximity placement group
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly proximityPlacementGroup?: string;
  /**
   * Hardware revision of an Azure Large Instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hwRevision?: string;
  /**
   * ARM ID of another AzureLargeInstance that will share a network with this
   * AzureLargeInstance
   */
  partnerNodeId?: string;
  /**
   * State of provisioning of the AzureLargeInstance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AzureLargeInstanceProvisioningStatesEnum;
}

/** Specifies the hardware settings for the Azure Large Instance. */
export interface HardwareProfile {
  /**
   * Name of the hardware type (vendor and/or their product name)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hardwareType?: AzureLargeInstanceHardwareTypeNamesEnum;
  /**
   * Specifies the Azure Large Instance SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureLargeInstanceSize?: AzureLargeInstanceSizeNamesEnum;
}

/** Specifies the storage settings for the Azure Large Instance disks. */
export interface StorageProfile {
  /**
   * IP Address to connect to storage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nfsIpAddress?: string;
  /**
   * Specifies information about the operating system disk used by Azure Large
   * Instance.
   */
  osDisks?: Disk[];
}

/** Specifies the disk information fo the Azure Large Instance */
export interface Disk {
  /** The disk name. */
  name?: string;
  /** Specifies the size of an empty data disk in gigabytes. */
  diskSizeGB?: number;
  /**
   * Specifies the logical unit number of the data disk. This value is used to
   * identify data disks within the VM and therefore must be unique for each data
   * disk attached to a VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lun?: number;
}

/** Specifies the operating system settings for the Azure Large Instance. */
export interface OsProfile {
  /** Specifies the host OS name of the Azure Large Instance. */
  computerName?: string;
  /**
   * This property allows you to specify the type of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: string;
  /**
   * Specifies version of operating system.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /** Specifies the SSH public key used to access the operating system. */
  sshPublicKey?: string;
}

/** Specifies the network settings for the Azure Large Instance disks. */
export interface NetworkProfile {
  /** Specifies the network interfaces for the Azure Large Instance. */
  networkInterfaces?: IpAddress[];
  /**
   * Specifies the circuit id for connecting to express route.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly circuitId?: string;
}

/** Specifies the IP address of the network interface. */
export interface IpAddress {
  /** Specifies the IP address of the network interface. */
  ipAddress?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The response of a AzureLargeStorageInstance list operation. */
export interface AzureLargeStorageInstanceListResult {
  /** The AzureLargeStorageInstance items on this page */
  value: AzureLargeStorageInstance[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Describes the properties of an AzureLargeStorageInstance. */
export interface AzureLargeStorageInstanceProperties {
  /** Specifies the AzureLargeStorageInstance unique ID. */
  azureLargeStorageInstanceUniqueIdentifier?: string;
  /** Specifies the storage properties for the AzureLargeStorage instance. */
  storageProperties?: StorageProperties;
}

/** described the storage properties of the azure large storage instance */
export interface StorageProperties {
  /**
   * State of provisioning of the AzureLargeStorageInstance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** the offering type for which the resource is getting provisioned */
  offeringType?: string;
  /** the storage protocol for which the resource is getting provisioned */
  storageType?: string;
  /** the kind of storage instance */
  generation?: string;
  /** the hardware type of the storage instance */
  hardwareType?: AzureLargeInstanceHardwareTypeNamesEnum;
  /** the workload for which the resource is getting provisioned */
  workloadType?: string;
  /** the billing related information for the resource */
  storageBillingProperties?: StorageBillingProperties;
}

/** Describes the billing related details of the AzureLargeStorageInstance. */
export interface StorageBillingProperties {
  /** the billing mode for the storage instance */
  billingMode?: string;
  /** the SKU type that is provisioned */
  sku?: string;
}

/** The type used for updating tags in AzureLargeInstance resources. */
export interface AzureLargeInstanceTagsUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/**
 * The active state empowers the server with the ability to forcefully terminate
 * and halt any existing processes that may be running on the server
 */
export interface ForceState {
  /** Whether to force restart by shutting all processes. */
  forceState?: AzureLargeInstanceForcePowerState;
}

/** The current status of an async operation. */
export interface OperationStatusResult {
  /** Fully qualified ID for the async operation. */
  id?: string;
  /**
   * Fully qualified ID of the resource against which the original async operation was started.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /** Name of the async operation. */
  name?: string;
  /** Operation status. */
  status: string;
  /** Percent of the operation that is complete. */
  percentComplete?: number;
  /** The start time of the operation. */
  startTime?: Date;
  /** The end time of the operation. */
  endTime?: Date;
  /** The operations list. */
  operations?: OperationStatusResult[];
  /** If present, details of the operation error. */
  error?: ErrorDetail;
}

/** The type used for updating tags in AzureLargeStorageInstance resources. */
export interface AzureLargeStorageInstanceTagsUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Tags field of the AzureLargeInstance instance. */
export interface Tags {
  /** Tags field of the AzureLargeInstance instance. */
  tags?: { [propertyName: string]: string };
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/**
 * Azure Large Instance info on Azure (ARM properties and AzureLargeInstance
 * properties)
 */
export interface AzureLargeInstance extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: AzureLargeInstanceProperties;
}

/**
 * AzureLargeStorageInstance info on Azure (ARM properties and
 * AzureLargeStorageInstance properties)
 */
export interface AzureLargeStorageInstance extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: AzureLargeStorageInstanceProperties;
}

/** Defines headers for AzureLargeInstance_restart operation. */
export interface AzureLargeInstanceRestartHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for AzureLargeInstance_shutdown operation. */
export interface AzureLargeInstanceShutdownHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for AzureLargeInstance_start operation. */
export interface AzureLargeInstanceStartHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link AzureLargeInstanceHardwareTypeNamesEnum} that the service accepts. */
export enum KnownAzureLargeInstanceHardwareTypeNamesEnum {
  /** Hardware type of UCS from vendor Cisco */
  CiscoUCS = "Cisco_UCS",
  /** Hardware type of HPE from vendor Hewlett Packard Enterprise */
  HPE = "HPE",
  /** Hardware type of SDFLEX */
  Sdflex = "SDFLEX",
}

/**
 * Defines values for AzureLargeInstanceHardwareTypeNamesEnum. \
 * {@link KnownAzureLargeInstanceHardwareTypeNamesEnum} can be used interchangeably with AzureLargeInstanceHardwareTypeNamesEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Cisco_UCS**: Hardware type of UCS from vendor Cisco \
 * **HPE**: Hardware type of HPE from vendor Hewlett Packard Enterprise \
 * **SDFLEX**: Hardware type of SDFLEX
 */
export type AzureLargeInstanceHardwareTypeNamesEnum = string;

/** Known values of {@link AzureLargeInstanceSizeNamesEnum} that the service accepts. */
export enum KnownAzureLargeInstanceSizeNamesEnum {
  /** Type I class SKU that can't be purchased anymore */
  S72M = "S72m",
  /** Type I class SKU that can't be purchased anymore */
  S144M = "S144m",
  /** Type I class SKU that can't be purchased anymore */
  S72 = "S72",
  /** Type I class SKU that can't be purchased anymore */
  S144 = "S144",
  /** Type I class SKU that can't be purchased anymore */
  S192 = "S192",
  /** Type I class SKU that can't be purchased anymore */
  S192M = "S192m",
  /** Type I class SKU that can't be purchased anymore */
  S192Xm = "S192xm",
  /** 2 sockets, 96 CPU threads, 48 CPU cores, 768 GB total memory, 768 GB DRAM, 3.0 TB storage, Cisco_UCS hardware type */
  S96 = "S96",
  /** No longer offered or used. */
  S112 = "S112",
  /** 4 sockets, 224 CPU threads, 112 CPU cores, 3 TB total memory, 3 TB DRAM, 6.3 TB storage, Cisco_UCS hardware type */
  S224 = "S224",
  /** 4 sockets, 224 CPU threads, 112 CPU cores, 6 TB total memory, 6 TB DRAM, 10.5 TB storage, Cisco_UCS hardware type */
  S224M = "S224m",
  /** 4 sockets, 224 CPU threads, 112 CPU cores, 6 TB total memory, 3 TB DRAM, 3 TB memory optane, 10.5 TB storage, Cisco_UCS hardware type */
  S224Om = "S224om",
  /** 4 sockets, 224 CPU threads, 112 CPU cores, 4.5 TB total memory, 1.5 TB DRAM, 3 TB memory optane, 8.4 TB storage, Cisco_UCS hardware type */
  S224Oo = "S224oo",
  /** 4 sockets, 224 CPU threads, 112 CPU cores, 9 TB total memory, 3 TB DRAM, 6 TB memory optane, 14.8 TB storage, Cisco_UCS hardware type */
  S224Oom = "S224oom",
  /** 4 sockets, 224 CPU threads, 112 CPU cores, 7.5TB total memory, 1.5 TB DRAM, 6 TB memory optane, 12.7 TB storage, Cisco_UCS hardware type */
  S224Ooo = "S224ooo",
  /** 4 sockets, 448 CPU threads, 6 TB total memory, SDFLEX hardware type */
  S224Se = "S224se",
  /** 8 sockets, 384 CPU threads, 192 CPU cores, 4 TB total memory, 4 TB DRAM, 16 TB storage, HPEMc990x hardware type */
  S384 = "S384",
  /** 8 sockets, 384 CPU threads, 192 CPU cores, 6 TB total memory, 6 TB DRAM, 18 TB storage, HPEMc990x hardware type */
  S384M = "S384m",
  /** 8 sockets, 384 CPU threads, 192 CPU cores, 8 TB total memory, 8 TB DRAM, 22 TB storage, HPEMc990x hardware type */
  S384Xm = "S384xm",
  /** 8 sockets, 384 CPU threads, 12 TB total memory, HPEMc990x hardware type */
  S384Xxm = "S384xxm",
  /** 8 sockets, 448 CPU threads, 224 CPU cores, 6 TB total memory, 6 TB DRAM, 10.5 TB storage, SDFLEX hardware type */
  S448 = "S448",
  /** 8 sockets, 448 CPU threads, 224 CPU cores, 12 TB total memory, 12 TB DRAM, 18.9 TB storage, SDFLEX hardware type */
  S448M = "S448m",
  /** 8 sockets, 448 CPU threads, 224 CPU cores, 12 TB total memory, 6 TB DRAM, 6 TB memory optane, 18.9 TB storage, SDFLEX hardware type */
  S448Om = "S448om",
  /** 8 sockets, 448 CPU threads, 224 CPU cores, 9 TB total memory, 3 TB DRAM, 6 TB memory optane, 14.8 TB storage, SDFLEX hardware type */
  S448Oo = "S448oo",
  /** 8 sockets, 448 CPU threads, 224 CPU cores, 18 TB total memory, 6 TB DRAM, 12 memory optane, 27.4 TB storage, SDFLEX hardware type */
  S448Oom = "S448oom",
  /** 8 sockets, 448 CPU threads, 224 CPU cores, 15 TB total memory, 3 TB DRAM, 12 memory optane, 23.2 TB storage, SDFLEX hardware type */
  S448Ooo = "S448ooo",
  /** 8 sockets, 448 CPU threads, 12 TB total memory, SDFLEX hardware type */
  S448Se = "S448se",
  /** 12 sockets, 576 CPU threads, 288 CPU cores, 12 TB total memory, 12 TB DRAM, 28 TB storage, HPEMc990x hardware type */
  S576M = "S576m",
  /** 12 sockets, 576 CPU threads, 288 CPU cores, 18 TB total memory, HPEMc990x hardware type */
  S576Xm = "S576xm",
  /** 12 sockets, 672 CPU threads, 336 CPU cores, 9 TB total memory, 9 TB DRAM, 14.7 TB storage, SDFLEX hardware type */
  S672 = "S672",
  /** 12 sockets, 672 CPU threads, 336 CPU cores, 18 TB total memory, 18 TB DRAM, 27.4 TB storage, SDFLEX hardware type */
  S672M = "S672m",
  /** 12 sockets, 672 CPU threads, 336 CPU cores, 18 TB total memory, 9 TB DRAM, 9 TB memory optane, 27.4 TB storage, SDFLEX hardware type */
  S672Om = "S672om",
  /** 12 sockets, 672 CPU threads, 336 CPU cores, 13.5 TB total memory, 4.5 TB DRAM, 9 TB memory optane, 21.1 TB storage, SDFLEX hardware type */
  S672Oo = "S672oo",
  /** 12 sockets, 672 CPU threads, 336 CPU cores, 27 TB total memory, 9 TB DRAM, 18 TB memory optane, 40 TB storage, SDFLEX hardware type */
  S672Oom = "S672oom",
  /** 12 sockets, 672 CPU threads, 336 CPU cores, 22.5 TB total memory, 4.5 TB DRAM, 18 TB memory optane, 33.7 TB storage, SDFLEX hardware type */
  S672Ooo = "S672ooo",
  /** No longer offered or used. */
  S768 = "S768",
  /** 16 sockets, 768 CPU threads, 384 CPU cores, 16 TB total memory, 16 TB DRAM, 36 TB storage, HPEMc990x hardware type */
  S768M = "S768m",
  /** 16 sockets, 768 CPU threads, 384 CPU cores, 24 TB total memory, 24 TB DRAM, 56 TB storage, HPEMc990x hardware type */
  S768Xm = "S768xm",
  /** 16 sockets, 896 CPU threads, 448 CPU cores, 12 TB total memory, 12 TB DRAM, 18.9 TB storage, SDFLEX hardware type */
  S896 = "S896",
  /** 16 sockets, 896 CPU threads, 448 CPU cores, 24 TB	total memory, 24 TB DRAM, 35.8 TB storage, SDFLEX hardware type */
  S896M = "S896m",
  /** 16 sockets, 896 CPU threads, 448 CPU cores, 24 TB	total memory, 12 TB DRAM, 12 TB memory optane, 35.8 TB storage, SDFLEX hardware type */
  S896Om = "S896om",
  /** 16 sockets, 896 CPU threads, 448 CPU cores, 18 TB  total memory, 6 TB DRAM, 12 TB memory optane, 27.4 TB storage, SDFLEX hardware type */
  S896Oo = "S896oo",
  /** 16 sockets, 896 CPU threads, 448 CPU cores, 36 TB total memory, 12 TB DRAM, 24 TB memory optane, 52.7 TB storage, SDFLEX hardware type */
  S896Oom = "S896oom",
  /** 16 sockets, 896 CPU threads, 448 CPU cores, 30 TB total memory, 6 TB DRAM, 24 TB memory optane, 44.3 TB storage, SDFLEX hardware type */
  S896Ooo = "S896ooo",
  /** 20 sockets, 960 CPU threads, 480 CPU cores, 20 TB total memory, 20 TB DRAM, 46 TB storage, HPEMc990x hardware type */
  S960M = "S960m",
}

/**
 * Defines values for AzureLargeInstanceSizeNamesEnum. \
 * {@link KnownAzureLargeInstanceSizeNamesEnum} can be used interchangeably with AzureLargeInstanceSizeNamesEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **S72m**: Type I class SKU that can't be purchased anymore \
 * **S144m**: Type I class SKU that can't be purchased anymore \
 * **S72**: Type I class SKU that can't be purchased anymore \
 * **S144**: Type I class SKU that can't be purchased anymore \
 * **S192**: Type I class SKU that can't be purchased anymore \
 * **S192m**: Type I class SKU that can't be purchased anymore \
 * **S192xm**: Type I class SKU that can't be purchased anymore \
 * **S96**: 2 sockets, 96 CPU threads, 48 CPU cores, 768 GB total memory, 768 GB DRAM, 3.0 TB storage, Cisco_UCS hardware type \
 * **S112**: No longer offered or used. \
 * **S224**: 4 sockets, 224 CPU threads, 112 CPU cores, 3 TB total memory, 3 TB DRAM, 6.3 TB storage, Cisco_UCS hardware type \
 * **S224m**: 4 sockets, 224 CPU threads, 112 CPU cores, 6 TB total memory, 6 TB DRAM, 10.5 TB storage, Cisco_UCS hardware type \
 * **S224om**: 4 sockets, 224 CPU threads, 112 CPU cores, 6 TB total memory, 3 TB DRAM, 3 TB memory optane, 10.5 TB storage, Cisco_UCS hardware type \
 * **S224oo**: 4 sockets, 224 CPU threads, 112 CPU cores, 4.5 TB total memory, 1.5 TB DRAM, 3 TB memory optane, 8.4 TB storage, Cisco_UCS hardware type \
 * **S224oom**: 4 sockets, 224 CPU threads, 112 CPU cores, 9 TB total memory, 3 TB DRAM, 6 TB memory optane, 14.8 TB storage, Cisco_UCS hardware type \
 * **S224ooo**: 4 sockets, 224 CPU threads, 112 CPU cores, 7.5TB total memory, 1.5 TB DRAM, 6 TB memory optane, 12.7 TB storage, Cisco_UCS hardware type \
 * **S224se**: 4 sockets, 448 CPU threads, 6 TB total memory, SDFLEX hardware type \
 * **S384**: 8 sockets, 384 CPU threads, 192 CPU cores, 4 TB total memory, 4 TB DRAM, 16 TB storage, HPEMc990x hardware type \
 * **S384m**: 8 sockets, 384 CPU threads, 192 CPU cores, 6 TB total memory, 6 TB DRAM, 18 TB storage, HPEMc990x hardware type \
 * **S384xm**: 8 sockets, 384 CPU threads, 192 CPU cores, 8 TB total memory, 8 TB DRAM, 22 TB storage, HPEMc990x hardware type \
 * **S384xxm**: 8 sockets, 384 CPU threads, 12 TB total memory, HPEMc990x hardware type \
 * **S448**: 8 sockets, 448 CPU threads, 224 CPU cores, 6 TB total memory, 6 TB DRAM, 10.5 TB storage, SDFLEX hardware type \
 * **S448m**: 8 sockets, 448 CPU threads, 224 CPU cores, 12 TB total memory, 12 TB DRAM, 18.9 TB storage, SDFLEX hardware type \
 * **S448om**: 8 sockets, 448 CPU threads, 224 CPU cores, 12 TB total memory, 6 TB DRAM, 6 TB memory optane, 18.9 TB storage, SDFLEX hardware type \
 * **S448oo**: 8 sockets, 448 CPU threads, 224 CPU cores, 9 TB total memory, 3 TB DRAM, 6 TB memory optane, 14.8 TB storage, SDFLEX hardware type \
 * **S448oom**: 8 sockets, 448 CPU threads, 224 CPU cores, 18 TB total memory, 6 TB DRAM, 12 memory optane, 27.4 TB storage, SDFLEX hardware type \
 * **S448ooo**: 8 sockets, 448 CPU threads, 224 CPU cores, 15 TB total memory, 3 TB DRAM, 12 memory optane, 23.2 TB storage, SDFLEX hardware type \
 * **S448se**: 8 sockets, 448 CPU threads, 12 TB total memory, SDFLEX hardware type \
 * **S576m**: 12 sockets, 576 CPU threads, 288 CPU cores, 12 TB total memory, 12 TB DRAM, 28 TB storage, HPEMc990x hardware type \
 * **S576xm**: 12 sockets, 576 CPU threads, 288 CPU cores, 18 TB total memory, HPEMc990x hardware type \
 * **S672**: 12 sockets, 672 CPU threads, 336 CPU cores, 9 TB total memory, 9 TB DRAM, 14.7 TB storage, SDFLEX hardware type \
 * **S672m**: 12 sockets, 672 CPU threads, 336 CPU cores, 18 TB total memory, 18 TB DRAM, 27.4 TB storage, SDFLEX hardware type \
 * **S672om**: 12 sockets, 672 CPU threads, 336 CPU cores, 18 TB total memory, 9 TB DRAM, 9 TB memory optane, 27.4 TB storage, SDFLEX hardware type \
 * **S672oo**: 12 sockets, 672 CPU threads, 336 CPU cores, 13.5 TB total memory, 4.5 TB DRAM, 9 TB memory optane, 21.1 TB storage, SDFLEX hardware type \
 * **S672oom**: 12 sockets, 672 CPU threads, 336 CPU cores, 27 TB total memory, 9 TB DRAM, 18 TB memory optane, 40 TB storage, SDFLEX hardware type \
 * **S672ooo**: 12 sockets, 672 CPU threads, 336 CPU cores, 22.5 TB total memory, 4.5 TB DRAM, 18 TB memory optane, 33.7 TB storage, SDFLEX hardware type \
 * **S768**: No longer offered or used. \
 * **S768m**: 16 sockets, 768 CPU threads, 384 CPU cores, 16 TB total memory, 16 TB DRAM, 36 TB storage, HPEMc990x hardware type \
 * **S768xm**: 16 sockets, 768 CPU threads, 384 CPU cores, 24 TB total memory, 24 TB DRAM, 56 TB storage, HPEMc990x hardware type \
 * **S896**: 16 sockets, 896 CPU threads, 448 CPU cores, 12 TB total memory, 12 TB DRAM, 18.9 TB storage, SDFLEX hardware type \
 * **S896m**: 16 sockets, 896 CPU threads, 448 CPU cores, 24 TB	total memory, 24 TB DRAM, 35.8 TB storage, SDFLEX hardware type \
 * **S896om**: 16 sockets, 896 CPU threads, 448 CPU cores, 24 TB	total memory, 12 TB DRAM, 12 TB memory optane, 35.8 TB storage, SDFLEX hardware type \
 * **S896oo**: 16 sockets, 896 CPU threads, 448 CPU cores, 18 TB  total memory, 6 TB DRAM, 12 TB memory optane, 27.4 TB storage, SDFLEX hardware type \
 * **S896oom**: 16 sockets, 896 CPU threads, 448 CPU cores, 36 TB total memory, 12 TB DRAM, 24 TB memory optane, 52.7 TB storage, SDFLEX hardware type \
 * **S896ooo**: 16 sockets, 896 CPU threads, 448 CPU cores, 30 TB total memory, 6 TB DRAM, 24 TB memory optane, 44.3 TB storage, SDFLEX hardware type \
 * **S960m**: 20 sockets, 960 CPU threads, 480 CPU cores, 20 TB total memory, 20 TB DRAM, 46 TB storage, HPEMc990x hardware type
 */
export type AzureLargeInstanceSizeNamesEnum = string;

/** Known values of {@link AzureLargeInstancePowerStateEnum} that the service accepts. */
export enum KnownAzureLargeInstancePowerStateEnum {
  /** Starting means that the Azure Large Instance resource is turning on. */
  Starting = "starting",
  /** Started means that the Azure Large Instance resource has been powered on. */
  Started = "started",
  /** Stopping means that the Azure Large Instance resource is shutting down. */
  Stopping = "stopping",
  /** Stopped means that the Azure Large Instance resource has shut down. */
  Stopped = "stopped",
  /** Restarting means that the Azure Large Instance resource is restarting. */
  Restarting = "restarting",
  /** Unknown means that the state of the Azure Large Instance is unknown. */
  Unknown = "unknown",
}

/**
 * Defines values for AzureLargeInstancePowerStateEnum. \
 * {@link KnownAzureLargeInstancePowerStateEnum} can be used interchangeably with AzureLargeInstancePowerStateEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **starting**: Starting means that the Azure Large Instance resource is turning on. \
 * **started**: Started means that the Azure Large Instance resource has been powered on. \
 * **stopping**: Stopping means that the Azure Large Instance resource is shutting down. \
 * **stopped**: Stopped means that the Azure Large Instance resource has shut down. \
 * **restarting**: Restarting means that the Azure Large Instance resource is restarting. \
 * **unknown**: Unknown means that the state of the Azure Large Instance is unknown.
 */
export type AzureLargeInstancePowerStateEnum = string;

/** Known values of {@link AzureLargeInstanceProvisioningStatesEnum} that the service accepts. */
export enum KnownAzureLargeInstanceProvisioningStatesEnum {
  /** Accepted means Azure Large Instance resource provisioning has been accepted. */
  Accepted = "Accepted",
  /** Creating means Azure Large Instance resource is being created. */
  Creating = "Creating",
  /** Updating means an existing Azure Large Instance resource is being updated */
  Updating = "Updating",
  /** Failed means Azure Large Instance resource is in failed state */
  Failed = "Failed",
  /** Succeeded means Azure Large Instance resource creation succeeded during last create\/update */
  Succeeded = "Succeeded",
  /** Deleting means Azure Large Instance resource is in the process of being deleted */
  Deleting = "Deleting",
  /** Migrating means Azure Large Instance resource is being migrated from one subscription or resource group to another */
  Migrating = "Migrating",
  /** Cancelled Azure Large Instance resource operation has been cancelled */
  Canceled = "Canceled",
}

/**
 * Defines values for AzureLargeInstanceProvisioningStatesEnum. \
 * {@link KnownAzureLargeInstanceProvisioningStatesEnum} can be used interchangeably with AzureLargeInstanceProvisioningStatesEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted**: Accepted means Azure Large Instance resource provisioning has been accepted. \
 * **Creating**: Creating means Azure Large Instance resource is being created. \
 * **Updating**: Updating means an existing Azure Large Instance resource is being updated \
 * **Failed**: Failed means Azure Large Instance resource is in failed state \
 * **Succeeded**: Succeeded means Azure Large Instance resource creation succeeded during last create\/update \
 * **Deleting**: Deleting means Azure Large Instance resource is in the process of being deleted \
 * **Migrating**: Migrating means Azure Large Instance resource is being migrated from one subscription or resource group to another \
 * **Canceled**: Cancelled Azure Large Instance resource operation has been cancelled
 */
export type AzureLargeInstanceProvisioningStatesEnum = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Accepted means ARM resource has been accepted. */
  Accepted = "Accepted",
  /** Creating means ARM resource is being created. */
  Creating = "Creating",
  /** Updating means an existing ARM resource is being updated */
  Updating = "Updating",
  /** Failed means resource is in failed state */
  Failed = "Failed",
  /** Succeeded means resource creation succeeded during last create\/update */
  Succeeded = "Succeeded",
  /** Deleting means resource is in the process of being deleted */
  Deleting = "Deleting",
  /** Cancelled means resource operation has been cancelled */
  Canceled = "Canceled",
  /** Migrating means resource is being migrated from one subscription or resource group to another */
  Migrating = "Migrating",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted**: Accepted means ARM resource has been accepted. \
 * **Creating**: Creating means ARM resource is being created. \
 * **Updating**: Updating means an existing ARM resource is being updated \
 * **Failed**: Failed means resource is in failed state \
 * **Succeeded**: Succeeded means resource creation succeeded during last create\/update \
 * **Deleting**: Deleting means resource is in the process of being deleted \
 * **Canceled**: Cancelled means resource operation has been cancelled \
 * **Migrating**: Migrating means resource is being migrated from one subscription or resource group to another
 */
export type ProvisioningState = string;

/** Known values of {@link AzureLargeInstanceForcePowerState} that the service accepts. */
export enum KnownAzureLargeInstanceForcePowerState {
  /** Active means that the restart operation will terminate and halt existing processes that may be running on the server */
  Active = "active",
  /** Inactive means that the restart operation will not terminate and halt existing processes that may be running on the server */
  Inactive = "inactive",
}

/**
 * Defines values for AzureLargeInstanceForcePowerState. \
 * {@link KnownAzureLargeInstanceForcePowerState} can be used interchangeably with AzureLargeInstanceForcePowerState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active**: Active means that the restart operation will terminate and halt existing processes that may be running on the server \
 * **inactive**: Inactive means that the restart operation will not terminate and halt existing processes that may be running on the server
 */
export type AzureLargeInstanceForcePowerState = string;

/** Known values of {@link Versions} that the service accepts. */
export enum KnownVersions {
  /** Azure Large Instance api version 2023-07-20-preview. */
  V20230720Preview = "2023-07-20-preview",
}

/**
 * Defines values for Versions. \
 * {@link KnownVersions} can be used interchangeably with Versions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2023-07-20-preview**: Azure Large Instance api version 2023-07-20-preview.
 */
export type Versions = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface AzureLargeInstanceListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type AzureLargeInstanceListBySubscriptionResponse =
  AzureLargeInstanceListResult;

/** Optional parameters. */
export interface AzureLargeInstanceListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AzureLargeInstanceListByResourceGroupResponse =
  AzureLargeInstanceListResult;

/** Optional parameters. */
export interface AzureLargeInstanceGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AzureLargeInstanceGetResponse = AzureLargeInstance;

/** Optional parameters. */
export interface AzureLargeInstanceUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type AzureLargeInstanceUpdateResponse = AzureLargeInstance;

/** Optional parameters. */
export interface AzureLargeInstanceRestartOptionalParams
  extends coreClient.OperationOptions {
  /** When set to 'active', this parameter empowers the server with the ability to forcefully terminate and halt any existing processes that may be running on the server */
  forceParameter?: ForceState;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the restart operation. */
export type AzureLargeInstanceRestartResponse = OperationStatusResult;

/** Optional parameters. */
export interface AzureLargeInstanceShutdownOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the shutdown operation. */
export type AzureLargeInstanceShutdownResponse = OperationStatusResult;

/** Optional parameters. */
export interface AzureLargeInstanceStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the start operation. */
export type AzureLargeInstanceStartResponse = OperationStatusResult;

/** Optional parameters. */
export interface AzureLargeInstanceListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type AzureLargeInstanceListBySubscriptionNextResponse =
  AzureLargeInstanceListResult;

/** Optional parameters. */
export interface AzureLargeInstanceListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AzureLargeInstanceListByResourceGroupNextResponse =
  AzureLargeInstanceListResult;

/** Optional parameters. */
export interface AzureLargeStorageInstanceListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type AzureLargeStorageInstanceListBySubscriptionResponse =
  AzureLargeStorageInstanceListResult;

/** Optional parameters. */
export interface AzureLargeStorageInstanceListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AzureLargeStorageInstanceListByResourceGroupResponse =
  AzureLargeStorageInstanceListResult;

/** Optional parameters. */
export interface AzureLargeStorageInstanceGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AzureLargeStorageInstanceGetResponse = AzureLargeStorageInstance;

/** Optional parameters. */
export interface AzureLargeStorageInstanceUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type AzureLargeStorageInstanceUpdateResponse = AzureLargeStorageInstance;

/** Optional parameters. */
export interface AzureLargeStorageInstanceListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type AzureLargeStorageInstanceListBySubscriptionNextResponse =
  AzureLargeStorageInstanceListResult;

/** Optional parameters. */
export interface AzureLargeStorageInstanceListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AzureLargeStorageInstanceListByResourceGroupNextResponse =
  AzureLargeStorageInstanceListResult;

/** Optional parameters. */
export interface LargeInstanceManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
