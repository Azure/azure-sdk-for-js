/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AzureLargeInstance,
  AzureLargeInstanceListBySubscriptionOptionalParams,
  AzureLargeInstanceListByResourceGroupOptionalParams,
  AzureLargeInstanceGetOptionalParams,
  AzureLargeInstanceGetResponse,
  AzureLargeInstanceTagsUpdate,
  AzureLargeInstanceUpdateOptionalParams,
  AzureLargeInstanceUpdateResponse,
  AzureLargeInstanceRestartOptionalParams,
  AzureLargeInstanceRestartResponse,
  AzureLargeInstanceShutdownOptionalParams,
  AzureLargeInstanceShutdownResponse,
  AzureLargeInstanceStartOptionalParams,
  AzureLargeInstanceStartResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AzureLargeInstanceOperations. */
export interface AzureLargeInstanceOperations {
  /**
   * Gets a list of Azure Large Instances in the specified subscription. The
   * operations returns various properties of each Azure Large Instance.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AzureLargeInstanceListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<AzureLargeInstance>;
  /**
   * Gets a list of Azure Large Instances in the specified subscription and resource
   * group. The operations returns various properties of each Azure Large Instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AzureLargeInstanceListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<AzureLargeInstance>;
  /**
   * Gets an Azure Large Instance for the specified subscription, resource group,
   * and instance name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    options?: AzureLargeInstanceGetOptionalParams,
  ): Promise<AzureLargeInstanceGetResponse>;
  /**
   * Patches the Tags field of an Azure Large Instance for the specified
   * subscription, resource group, and instance name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param tagsParameter The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    tagsParameter: AzureLargeInstanceTagsUpdate,
    options?: AzureLargeInstanceUpdateOptionalParams,
  ): Promise<AzureLargeInstanceUpdateResponse>;
  /**
   * The operation to restart an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param options The options parameters.
   */
  beginRestart(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    options?: AzureLargeInstanceRestartOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AzureLargeInstanceRestartResponse>,
      AzureLargeInstanceRestartResponse
    >
  >;
  /**
   * The operation to restart an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param options The options parameters.
   */
  beginRestartAndWait(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    options?: AzureLargeInstanceRestartOptionalParams,
  ): Promise<AzureLargeInstanceRestartResponse>;
  /**
   * The operation to shutdown an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param options The options parameters.
   */
  beginShutdown(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    options?: AzureLargeInstanceShutdownOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AzureLargeInstanceShutdownResponse>,
      AzureLargeInstanceShutdownResponse
    >
  >;
  /**
   * The operation to shutdown an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param options The options parameters.
   */
  beginShutdownAndWait(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    options?: AzureLargeInstanceShutdownOptionalParams,
  ): Promise<AzureLargeInstanceShutdownResponse>;
  /**
   * The operation to start an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    options?: AzureLargeInstanceStartOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AzureLargeInstanceStartResponse>,
      AzureLargeInstanceStartResponse
    >
  >;
  /**
   * The operation to start an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    options?: AzureLargeInstanceStartOptionalParams,
  ): Promise<AzureLargeInstanceStartResponse>;
}
