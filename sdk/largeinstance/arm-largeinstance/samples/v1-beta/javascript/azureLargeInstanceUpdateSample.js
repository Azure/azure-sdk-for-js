/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { LargeInstanceManagementClient } = require("@azure/arm-largeinstance");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Patches the Tags field of an Azure Large Instance for the specified
subscription, resource group, and instance name.
 *
 * @summary Patches the Tags field of an Azure Large Instance for the specified
subscription, resource group, and instance name.
 * x-ms-original-file: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_PatchTags_Delete.json
 */
async function azureLargeInstanceDeleteTag() {
  const subscriptionId =
    process.env["LARGEINSTANCE_SUBSCRIPTION_ID"] || "f0f4887f-d13c-4943-a8ba-d7da28d2a3fd";
  const resourceGroupName = process.env["LARGEINSTANCE_RESOURCE_GROUP"] || "myResourceGroup";
  const azureLargeInstanceName = "myALInstance";
  const tagsParameter = { tags: {} };
  const credential = new DefaultAzureCredential();
  const client = new LargeInstanceManagementClient(credential, subscriptionId);
  const result = await client.azureLargeInstanceOperations.update(
    resourceGroupName,
    azureLargeInstanceName,
    tagsParameter,
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Patches the Tags field of an Azure Large Instance for the specified
subscription, resource group, and instance name.
 *
 * @summary Patches the Tags field of an Azure Large Instance for the specified
subscription, resource group, and instance name.
 * x-ms-original-file: specification/azurelargeinstance/resource-manager/Microsoft.AzureLargeInstance/preview/2023-07-20-preview/examples/AzureLargeInstance_PatchTags.json
 */
async function azureLargeInstanceUpdateTag() {
  const subscriptionId =
    process.env["LARGEINSTANCE_SUBSCRIPTION_ID"] || "f0f4887f-d13c-4943-a8ba-d7da28d2a3fd";
  const resourceGroupName = process.env["LARGEINSTANCE_RESOURCE_GROUP"] || "myResourceGroup";
  const azureLargeInstanceName = "myALInstance";
  const tagsParameter = {
    tags: { testkey: "testvalue" },
  };
  const credential = new DefaultAzureCredential();
  const client = new LargeInstanceManagementClient(credential, subscriptionId);
  const result = await client.azureLargeInstanceOperations.update(
    resourceGroupName,
    azureLargeInstanceName,
    tagsParameter,
  );
  console.log(result);
}

async function main() {
  azureLargeInstanceDeleteTag();
  azureLargeInstanceUpdateTag();
}

main().catch(console.error);
