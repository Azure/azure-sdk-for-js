// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DatabaseMigrationCosmosDbMongo,
  DatabaseMigrationsMongoToCosmosDbRUMongoGetForScopeOptionalParams,
  DatabaseMigrationsMongoToCosmosDbRUMongoGetOptionalParams,
  DatabaseMigrationsMongoToCosmosDbRUMongoGetResponse,
  DatabaseMigrationsMongoToCosmosDbRUMongoCreateOptionalParams,
  DatabaseMigrationsMongoToCosmosDbRUMongoCreateResponse,
  DatabaseMigrationsMongoToCosmosDbRUMongoDeleteOptionalParams,
  DatabaseMigrationsMongoToCosmosDbRUMongoDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DatabaseMigrationsMongoToCosmosDbRUMongo. */
export interface DatabaseMigrationsMongoToCosmosDbRUMongo {
  /**
   * Get Database Migration resources for the scope.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param targetResourceName The name of the target resource/account.
   * @param options The options parameters.
   */
  listForScope(
    resourceGroupName: string,
    targetResourceName: string,
    options?: DatabaseMigrationsMongoToCosmosDbRUMongoGetForScopeOptionalParams,
  ): PagedAsyncIterableIterator<DatabaseMigrationCosmosDbMongo>;
  /**
   * Get Database Migration resource.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param targetResourceName The name of the target resource/account.
   * @param migrationName Name of the migration.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    targetResourceName: string,
    migrationName: string,
    options?: DatabaseMigrationsMongoToCosmosDbRUMongoGetOptionalParams,
  ): Promise<DatabaseMigrationsMongoToCosmosDbRUMongoGetResponse>;
  /**
   * Create or Update Database Migration resource.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param targetResourceName The name of the target resource/account.
   * @param migrationName Name of the migration.
   * @param parameters Details of CosmosDB for Mongo API Migration resource.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    targetResourceName: string,
    migrationName: string,
    parameters: DatabaseMigrationCosmosDbMongo,
    options?: DatabaseMigrationsMongoToCosmosDbRUMongoCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DatabaseMigrationsMongoToCosmosDbRUMongoCreateResponse>,
      DatabaseMigrationsMongoToCosmosDbRUMongoCreateResponse
    >
  >;
  /**
   * Create or Update Database Migration resource.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param targetResourceName The name of the target resource/account.
   * @param migrationName Name of the migration.
   * @param parameters Details of CosmosDB for Mongo API Migration resource.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    targetResourceName: string,
    migrationName: string,
    parameters: DatabaseMigrationCosmosDbMongo,
    options?: DatabaseMigrationsMongoToCosmosDbRUMongoCreateOptionalParams,
  ): Promise<DatabaseMigrationsMongoToCosmosDbRUMongoCreateResponse>;
  /**
   * Delete Database Migration resource.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param targetResourceName The name of the target resource/account.
   * @param migrationName Name of the migration.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    targetResourceName: string,
    migrationName: string,
    options?: DatabaseMigrationsMongoToCosmosDbRUMongoDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DatabaseMigrationsMongoToCosmosDbRUMongoDeleteResponse>,
      DatabaseMigrationsMongoToCosmosDbRUMongoDeleteResponse
    >
  >;
  /**
   * Delete Database Migration resource.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param targetResourceName The name of the target resource/account.
   * @param migrationName Name of the migration.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    targetResourceName: string,
    migrationName: string,
    options?: DatabaseMigrationsMongoToCosmosDbRUMongoDeleteOptionalParams,
  ): Promise<DatabaseMigrationsMongoToCosmosDbRUMongoDeleteResponse>;
}
