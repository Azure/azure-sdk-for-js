/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  MigrationService,
  MigrationServicesListByResourceGroupOptionalParams,
  MigrationServicesListBySubscriptionOptionalParams,
  DatabaseMigrationBase,
  MigrationServicesListMigrationsOptionalParams,
  MigrationServicesGetOptionalParams,
  MigrationServicesGetResponse,
  MigrationServicesCreateOrUpdateOptionalParams,
  MigrationServicesCreateOrUpdateResponse,
  MigrationServicesDeleteOptionalParams,
  MigrationServicesDeleteResponse,
  MigrationServiceUpdate,
  MigrationServicesUpdateOptionalParams,
  MigrationServicesUpdateResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MigrationServices. */
export interface MigrationServices {
  /**
   * Retrieve all migration services in the resource group.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: MigrationServicesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<MigrationService>;
  /**
   * Retrieve all migration services in the subscriptions.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: MigrationServicesListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<MigrationService>;
  /**
   * Retrieve the List of database migrations attached to the service.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param migrationServiceName Name of the Migration Service.
   * @param options The options parameters.
   */
  listMigrations(
    resourceGroupName: string,
    migrationServiceName: string,
    options?: MigrationServicesListMigrationsOptionalParams,
  ): PagedAsyncIterableIterator<DatabaseMigrationBase>;
  /**
   * Retrieve the Database Migration Service
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param migrationServiceName Name of the Migration Service.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    migrationServiceName: string,
    options?: MigrationServicesGetOptionalParams,
  ): Promise<MigrationServicesGetResponse>;
  /**
   * Create or Update Database Migration Service.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param migrationServiceName Name of the Migration Service.
   * @param parameters Details of MigrationService resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    migrationServiceName: string,
    parameters: MigrationService,
    options?: MigrationServicesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MigrationServicesCreateOrUpdateResponse>,
      MigrationServicesCreateOrUpdateResponse
    >
  >;
  /**
   * Create or Update Database Migration Service.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param migrationServiceName Name of the Migration Service.
   * @param parameters Details of MigrationService resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    migrationServiceName: string,
    parameters: MigrationService,
    options?: MigrationServicesCreateOrUpdateOptionalParams,
  ): Promise<MigrationServicesCreateOrUpdateResponse>;
  /**
   * Delete Database Migration Service.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param migrationServiceName Name of the Migration Service.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    migrationServiceName: string,
    options?: MigrationServicesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MigrationServicesDeleteResponse>,
      MigrationServicesDeleteResponse
    >
  >;
  /**
   * Delete Database Migration Service.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param migrationServiceName Name of the Migration Service.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    migrationServiceName: string,
    options?: MigrationServicesDeleteOptionalParams,
  ): Promise<MigrationServicesDeleteResponse>;
  /**
   * Update Database Migration Service.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param migrationServiceName Name of the Migration Service.
   * @param parameters Details of MigrationService resource.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    migrationServiceName: string,
    parameters: MigrationServiceUpdate,
    options?: MigrationServicesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MigrationServicesUpdateResponse>,
      MigrationServicesUpdateResponse
    >
  >;
  /**
   * Update Database Migration Service.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain this
   *                          value from the Azure Resource Manager API or the portal.
   * @param migrationServiceName Name of the Migration Service.
   * @param parameters Details of MigrationService resource.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    migrationServiceName: string,
    parameters: MigrationServiceUpdate,
    options?: MigrationServicesUpdateOptionalParams,
  ): Promise<MigrationServicesUpdateResponse>;
}
