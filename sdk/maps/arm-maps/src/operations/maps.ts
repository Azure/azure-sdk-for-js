/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/mapsMappers";
import * as Parameters from "../models/parameters";
import { MapsManagementClientContext } from "../mapsManagementClientContext";

/** Class representing a Maps. */
export class Maps {
  private readonly client: MapsManagementClientContext;

  /**
   * Create a Maps.
   * @param {MapsManagementClientContext} client Reference to the service client.
   */
  constructor(client: MapsManagementClientContext) {
    this.client = client;
  }

  /**
   * List operations available for the Maps Resource Provider
   * @param [options] The optional parameters
   * @returns Promise<Models.MapsListOperationsResponse>
   */
  listOperations(options?: msRest.RequestOptionsBase): Promise<Models.MapsListOperationsResponse>;
  /**
   * @param callback The callback
   */
  listOperations(callback: msRest.ServiceCallback<Models.MapsOperations>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listOperations(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MapsOperations>): void;
  listOperations(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MapsOperations>, callback?: msRest.ServiceCallback<Models.MapsOperations>): Promise<Models.MapsListOperationsResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationsOperationSpec,
      callback) as Promise<Models.MapsListOperationsResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Maps/operations",
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MapsOperations
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
