/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/privateAtlasesMappers";
import * as Parameters from "../models/parameters";
import { MapsManagementClientContext } from "../mapsManagementClientContext";

/** Class representing a PrivateAtlases. */
export class PrivateAtlases {
  private readonly client: MapsManagementClientContext;

  /**
   * Create a PrivateAtlases.
   * @param {MapsManagementClientContext} client Reference to the service client.
   */
  constructor(client: MapsManagementClientContext) {
    this.client = client;
  }

  /**
   * Create or update a Private Atlas resource. Private Atlas resource will enable the usage of Azure
   * resources to build a custom set of mapping data. It requires an account to exist before it can
   * be created.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param privateAtlasCreateParameters The new or updated parameters for the Private Atlas
   * resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateAtlasesCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, accountName: string, privateAtlasName: string, privateAtlasCreateParameters: Models.PrivateAtlasCreateParameters, options?: msRest.RequestOptionsBase): Promise<Models.PrivateAtlasesCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param privateAtlasCreateParameters The new or updated parameters for the Private Atlas
   * resource.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, accountName: string, privateAtlasName: string, privateAtlasCreateParameters: Models.PrivateAtlasCreateParameters, callback: msRest.ServiceCallback<Models.PrivateAtlas>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param privateAtlasCreateParameters The new or updated parameters for the Private Atlas
   * resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, accountName: string, privateAtlasName: string, privateAtlasCreateParameters: Models.PrivateAtlasCreateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateAtlas>): void;
  createOrUpdate(resourceGroupName: string, accountName: string, privateAtlasName: string, privateAtlasCreateParameters: Models.PrivateAtlasCreateParameters, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateAtlas>, callback?: msRest.ServiceCallback<Models.PrivateAtlas>): Promise<Models.PrivateAtlasesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        privateAtlasName,
        privateAtlasCreateParameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.PrivateAtlasesCreateOrUpdateResponse>;
  }

  /**
   * Updates the Private Atlas resource. Only a subset of the parameters may be updated after
   * creation, such as Tags.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param privateAtlasUpdateParameters The updated parameters for the Private Atlas.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateAtlasesUpdateResponse>
   */
  update(resourceGroupName: string, accountName: string, privateAtlasName: string, privateAtlasUpdateParameters: Models.PrivateAtlasUpdateParameters, options?: msRest.RequestOptionsBase): Promise<Models.PrivateAtlasesUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param privateAtlasUpdateParameters The updated parameters for the Private Atlas.
   * @param callback The callback
   */
  update(resourceGroupName: string, accountName: string, privateAtlasName: string, privateAtlasUpdateParameters: Models.PrivateAtlasUpdateParameters, callback: msRest.ServiceCallback<Models.PrivateAtlas>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param privateAtlasUpdateParameters The updated parameters for the Private Atlas.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, accountName: string, privateAtlasName: string, privateAtlasUpdateParameters: Models.PrivateAtlasUpdateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateAtlas>): void;
  update(resourceGroupName: string, accountName: string, privateAtlasName: string, privateAtlasUpdateParameters: Models.PrivateAtlasUpdateParameters, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateAtlas>, callback?: msRest.ServiceCallback<Models.PrivateAtlas>): Promise<Models.PrivateAtlasesUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        privateAtlasName,
        privateAtlasUpdateParameters,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.PrivateAtlasesUpdateResponse>;
  }

  /**
   * Delete a Private Atlas resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, accountName: string, privateAtlasName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, accountName: string, privateAtlasName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, accountName: string, privateAtlasName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, accountName: string, privateAtlasName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        privateAtlasName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Get a Private Atlas resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateAtlasesGetResponse>
   */
  get(resourceGroupName: string, accountName: string, privateAtlasName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateAtlasesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param callback The callback
   */
  get(resourceGroupName: string, accountName: string, privateAtlasName: string, callback: msRest.ServiceCallback<Models.PrivateAtlas>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param privateAtlasName The name of the Private Atlas instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, accountName: string, privateAtlasName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateAtlas>): void;
  get(resourceGroupName: string, accountName: string, privateAtlasName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateAtlas>, callback?: msRest.ServiceCallback<Models.PrivateAtlas>): Promise<Models.PrivateAtlasesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        privateAtlasName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PrivateAtlasesGetResponse>;
  }

  /**
   * Get all Private Atlas instances for an Azure Map Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateAtlasesListByAccountResponse>
   */
  listByAccount(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateAtlasesListByAccountResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param callback The callback
   */
  listByAccount(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.PrivateAtlasList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAccount(resourceGroupName: string, accountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateAtlasList>): void;
  listByAccount(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateAtlasList>, callback?: msRest.ServiceCallback<Models.PrivateAtlasList>): Promise<Models.PrivateAtlasesListByAccountResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        options
      },
      listByAccountOperationSpec,
      callback) as Promise<Models.PrivateAtlasesListByAccountResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/privateAtlases/{privateAtlasName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.privateAtlasName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "privateAtlasCreateParameters",
    mapper: {
      ...Mappers.PrivateAtlasCreateParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateAtlas
    },
    201: {
      bodyMapper: Mappers.PrivateAtlas
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/privateAtlases/{privateAtlasName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.privateAtlasName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "privateAtlasUpdateParameters",
    mapper: {
      ...Mappers.PrivateAtlasUpdateParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateAtlas
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/privateAtlases/{privateAtlasName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.privateAtlasName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/privateAtlases/{privateAtlasName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.privateAtlasName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateAtlas
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/privateAtlases",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateAtlasList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
