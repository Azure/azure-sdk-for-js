/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/creatorsMappers";
import * as Parameters from "../models/parameters";
import { AzureMapsManagementClientContext } from "../azureMapsManagementClientContext";

/** Class representing a Creators. */
export class Creators {
  private readonly client: AzureMapsManagementClientContext;

  /**
   * Create a Creators.
   * @param {AzureMapsManagementClientContext} client Reference to the service client.
   */
  constructor(client: AzureMapsManagementClientContext) {
    this.client = client;
  }

  /**
   * Get all Creator instances for an Azure Maps Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param [options] The optional parameters
   * @returns Promise<Models.CreatorsListByAccountResponse>
   */
  listByAccount(
    resourceGroupName: string,
    accountName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.CreatorsListByAccountResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param callback The callback
   */
  listByAccount(
    resourceGroupName: string,
    accountName: string,
    callback: msRest.ServiceCallback<Models.CreatorList>
  ): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAccount(
    resourceGroupName: string,
    accountName: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.CreatorList>
  ): void;
  listByAccount(
    resourceGroupName: string,
    accountName: string,
    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CreatorList>,
    callback?: msRest.ServiceCallback<Models.CreatorList>
  ): Promise<Models.CreatorsListByAccountResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        options
      },
      listByAccountOperationSpec,
      callback
    ) as Promise<Models.CreatorsListByAccountResponse>;
  }

  /**
   * Create or update a Maps Creator resource. Creator resource will manage Azure resources required
   * to populate a custom set of mapping data. It requires an account to exist before it can be
   * created.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param creatorResource The new or updated parameters for the Creator resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CreatorsCreateOrUpdateResponse>
   */
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    creatorResource: Models.Creator,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.CreatorsCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param creatorResource The new or updated parameters for the Creator resource.
   * @param callback The callback
   */
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    creatorResource: Models.Creator,
    callback: msRest.ServiceCallback<Models.Creator>
  ): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param creatorResource The new or updated parameters for the Creator resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    creatorResource: Models.Creator,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.Creator>
  ): void;
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    creatorResource: Models.Creator,
    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Creator>,
    callback?: msRest.ServiceCallback<Models.Creator>
  ): Promise<Models.CreatorsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        creatorName,
        creatorResource,
        options
      },
      createOrUpdateOperationSpec,
      callback
    ) as Promise<Models.CreatorsCreateOrUpdateResponse>;
  }

  /**
   * Updates the Maps Creator resource. Only a subset of the parameters may be updated after
   * creation, such as Tags.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param creatorUpdateParameters The update parameters for Maps Creator.
   * @param [options] The optional parameters
   * @returns Promise<Models.CreatorsUpdateResponse>
   */
  update(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    creatorUpdateParameters: Models.CreatorUpdateParameters,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.CreatorsUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param creatorUpdateParameters The update parameters for Maps Creator.
   * @param callback The callback
   */
  update(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    creatorUpdateParameters: Models.CreatorUpdateParameters,
    callback: msRest.ServiceCallback<Models.Creator>
  ): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param creatorUpdateParameters The update parameters for Maps Creator.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    creatorUpdateParameters: Models.CreatorUpdateParameters,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.Creator>
  ): void;
  update(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    creatorUpdateParameters: Models.CreatorUpdateParameters,
    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Creator>,
    callback?: msRest.ServiceCallback<Models.Creator>
  ): Promise<Models.CreatorsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        creatorName,
        creatorUpdateParameters,
        options
      },
      updateOperationSpec,
      callback
    ) as Promise<Models.CreatorsUpdateResponse>;
  }

  /**
   * Delete a Maps Creator resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param callback The callback
   */
  deleteMethod(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    callback: msRest.ServiceCallback<void>
  ): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<void>
  ): void;
  deleteMethod(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>,
    callback?: msRest.ServiceCallback<void>
  ): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        creatorName,
        options
      },
      deleteMethodOperationSpec,
      callback
    );
  }

  /**
   * Get a Maps Creator resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.CreatorsGetResponse>
   */
  get(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.CreatorsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param callback The callback
   */
  get(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    callback: msRest.ServiceCallback<Models.Creator>
  ): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the Maps Account.
   * @param creatorName The name of the Maps Creator instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.Creator>
  ): void;
  get(
    resourceGroupName: string,
    accountName: string,
    creatorName: string,
    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Creator>,
    callback?: msRest.ServiceCallback<Models.Creator>
  ): Promise<Models.CreatorsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        creatorName,
        options
      },
      getOperationSpec,
      callback
    ) as Promise<Models.CreatorsGetResponse>;
  }

  /**
   * Get all Creator instances for an Azure Maps Account
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.CreatorsListByAccountNextResponse>
   */
  listByAccountNext(
    nextPageLink: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.CreatorsListByAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByAccountNext(
    nextPageLink: string,
    callback: msRest.ServiceCallback<Models.CreatorList>
  ): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAccountNext(
    nextPageLink: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.CreatorList>
  ): void;
  listByAccountNext(
    nextPageLink: string,
    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CreatorList>,
    callback?: msRest.ServiceCallback<Models.CreatorList>
  ): Promise<Models.CreatorsListByAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByAccountNextOperationSpec,
      callback
    ) as Promise<Models.CreatorsListByAccountNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators",
  urlParameters: [Parameters.subscriptionId, Parameters.resourceGroupName, Parameters.accountName],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.CreatorList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators/{creatorName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.creatorName
  ],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  requestBody: {
    parameterPath: "creatorResource",
    mapper: {
      ...Mappers.Creator,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Creator
    },
    201: {
      bodyMapper: Mappers.Creator
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators/{creatorName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.creatorName
  ],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  requestBody: {
    parameterPath: "creatorUpdateParameters",
    mapper: {
      ...Mappers.CreatorUpdateParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Creator
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators/{creatorName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.creatorName
  ],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators/{creatorName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.creatorName
  ],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.Creator
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [Parameters.nextPageLink],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.CreatorList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
