/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageAccountProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageAccountProperties",
    modelProperties: {
      storageAccountId: {
        serializedName: "storageAccountId",
        required: true,
        type: {
          name: "String"
        }
      },
      accessKey: {
        serializedName: "accessKey",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const AccountUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccountUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      seats: {
        serializedName: "properties.seats",
        type: {
          name: "String"
        }
      },
      storageAccountKey: {
        serializedName: "properties.storageAccountKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccountListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccountListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Account"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspaceUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspaceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workspace"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      gitrepo: {
        serializedName: "properties.gitrepo",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Project"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Account: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Account",
    modelProperties: {
      ...Resource.type.modelProperties,
      vsoAccountId: {
        serializedName: "properties.vsoAccountId",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "properties.accountId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      keyVaultId: {
        serializedName: "properties.keyVaultId",
        type: {
          name: "String"
        }
      },
      seats: {
        serializedName: "properties.seats",
        type: {
          name: "String"
        }
      },
      discoveryUri: {
        serializedName: "properties.discoveryUri",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      storageAccount: {
        serializedName: "properties.storageAccount",
        type: {
          name: "Composite",
          className: "StorageAccountProperties"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Creating",
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ]
        }
      }
    }
  }
};

export const Workspace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "properties.accountId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      workspaceId: {
        serializedName: "properties.workspaceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Creating",
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ]
        }
      }
    }
  }
};

export const Project: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Project",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "properties.accountId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      workspaceId: {
        serializedName: "properties.workspaceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      projectId: {
        serializedName: "properties.projectId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      gitrepo: {
        serializedName: "properties.gitrepo",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: [
            "Creating",
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ]
        }
      }
    }
  }
};
