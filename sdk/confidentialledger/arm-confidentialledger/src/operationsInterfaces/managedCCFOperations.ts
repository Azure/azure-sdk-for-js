/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ManagedCCF,
  ManagedCCFListByResourceGroupOptionalParams,
  ManagedCCFListBySubscriptionOptionalParams,
  ManagedCCFGetOptionalParams,
  ManagedCCFGetResponse,
  ManagedCCFDeleteOptionalParams,
  ManagedCCFCreateOptionalParams,
  ManagedCCFCreateResponse,
  ManagedCCFUpdateOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ManagedCCFOperations. */
export interface ManagedCCFOperations {
  /**
   * Retrieves the properties of all Managed CCF apps.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ManagedCCFListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ManagedCCF>;
  /**
   * Retrieves the properties of all Managed CCF.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ManagedCCFListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ManagedCCF>;
  /**
   * Retrieves the properties of a Managed CCF app.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param appName Name of the Managed CCF
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    appName: string,
    options?: ManagedCCFGetOptionalParams
  ): Promise<ManagedCCFGetResponse>;
  /**
   * Deletes an existing Managed CCF.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param appName Name of the Managed CCF
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    appName: string,
    options?: ManagedCCFDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes an existing Managed CCF.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param appName Name of the Managed CCF
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    appName: string,
    options?: ManagedCCFDeleteOptionalParams
  ): Promise<void>;
  /**
   * Creates a Managed CCF with the specified Managed CCF parameters.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param appName Name of the Managed CCF
   * @param managedCCF Managed CCF Create Request Body
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    appName: string,
    managedCCF: ManagedCCF,
    options?: ManagedCCFCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ManagedCCFCreateResponse>,
      ManagedCCFCreateResponse
    >
  >;
  /**
   * Creates a Managed CCF with the specified Managed CCF parameters.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param appName Name of the Managed CCF
   * @param managedCCF Managed CCF Create Request Body
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    appName: string,
    managedCCF: ManagedCCF,
    options?: ManagedCCFCreateOptionalParams
  ): Promise<ManagedCCFCreateResponse>;
  /**
   * Updates properties of Managed CCF
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param appName Name of the Managed CCF
   * @param managedCCF Request body for Updating Managed CCF App
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    appName: string,
    managedCCF: ManagedCCF,
    options?: ManagedCCFUpdateOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Updates properties of Managed CCF
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param appName Name of the Managed CCF
   * @param managedCCF Request body for Updating Managed CCF App
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    appName: string,
    managedCCF: ManagedCCF,
    options?: ManagedCCFUpdateOptionalParams
  ): Promise<void>;
}
