/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  ConfigurationInfo,
  ConnectorGenerateConfigurationsOptionalParams,
  ServiceLinkerManagementClient,
} from "@azure/arm-servicelinker";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Generate configurations for a Connector.
 *
 * @summary Generate configurations for a Connector.
 * x-ms-original-file: specification/servicelinker/resource-manager/Microsoft.ServiceLinker/preview/2024-07-01-preview/examples/GenerateConfigurations.json
 */
async function generateConfiguration() {
  const subscriptionId = "00000000-0000-0000-0000-000000000000";
  const resourceGroupName =
    process.env["SERVICELINKER_RESOURCE_GROUP"] || "test-rg";
  const location = "westus";
  const connectorName = "connectorName";
  const parameters: ConfigurationInfo = {
    customizedKeys: { aslDocumentDbConnectionString: "MyConnectionstring" },
  };
  const options: ConnectorGenerateConfigurationsOptionalParams = { parameters };
  const credential = new DefaultAzureCredential();
  const client = new ServiceLinkerManagementClient(credential);
  const result = await client.connector.generateConfigurations(
    subscriptionId,
    resourceGroupName,
    location,
    connectorName,
    options,
  );
  console.log(result);
}

async function main() {
  generateConfiguration();
}

main().catch(console.error);
