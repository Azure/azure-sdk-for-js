/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const AuthInfoBase: msRest.CompositeMapper = {
  serializedName: "AuthInfoBase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "authType",
      clientName: "authType"
    },
    uberParent: "AuthInfoBase",
    className: "AuthInfoBase",
    modelProperties: {
      authType: {
        required: true,
        serializedName: "authType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretAuthInfo: msRest.CompositeMapper = {
  serializedName: "secret",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthInfoBase.type.polymorphicDiscriminator,
    uberParent: "AuthInfoBase",
    className: "SecretAuthInfo",
    modelProperties: {
      ...AuthInfoBase.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserAssignedIdentityAuthInfo: msRest.CompositeMapper = {
  serializedName: "userAssignedIdentity",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthInfoBase.type.polymorphicDiscriminator,
    uberParent: "AuthInfoBase",
    className: "UserAssignedIdentityAuthInfo",
    modelProperties: {
      ...AuthInfoBase.type.modelProperties,
      clientId: {
        required: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        required: true,
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemAssignedIdentityAuthInfo: msRest.CompositeMapper = {
  serializedName: "systemAssignedIdentity",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthInfoBase.type.polymorphicDiscriminator,
    uberParent: "AuthInfoBase",
    className: "SystemAssignedIdentityAuthInfo",
    modelProperties: {
      ...AuthInfoBase.type.modelProperties
    }
  }
};

export const ServicePrincipalSecretAuthInfo: msRest.CompositeMapper = {
  serializedName: "servicePrincipalSecret",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthInfoBase.type.polymorphicDiscriminator,
    uberParent: "AuthInfoBase",
    className: "ServicePrincipalSecretAuthInfo",
    modelProperties: {
      ...AuthInfoBase.type.modelProperties,
      clientId: {
        required: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      principalId: {
        required: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      secret: {
        required: true,
        serializedName: "secret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipalCertificateAuthInfo: msRest.CompositeMapper = {
  serializedName: "servicePrincipalCertificate",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AuthInfoBase.type.polymorphicDiscriminator,
    uberParent: "AuthInfoBase",
    className: "ServicePrincipalCertificateAuthInfo",
    modelProperties: {
      ...AuthInfoBase.type.modelProperties,
      clientId: {
        required: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      principalId: {
        required: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      certificate: {
        required: true,
        serializedName: "certificate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const LinkerResource: msRest.CompositeMapper = {
  serializedName: "LinkerResource",
  type: {
    name: "Composite",
    className: "LinkerResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      targetId: {
        serializedName: "properties.targetId",
        type: {
          name: "String"
        }
      },
      authInfo: {
        serializedName: "properties.authInfo",
        type: {
          name: "Composite",
          className: "AuthInfoBase"
        }
      },
      clientType: {
        serializedName: "properties.clientType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const LinkerPatch: msRest.CompositeMapper = {
  serializedName: "LinkerPatch",
  type: {
    name: "Composite",
    className: "LinkerPatch",
    modelProperties: {
      targetId: {
        serializedName: "properties.targetId",
        type: {
          name: "String"
        }
      },
      authInfo: {
        serializedName: "properties.authInfo",
        type: {
          name: "Composite",
          className: "AuthInfoBase"
        }
      },
      clientType: {
        serializedName: "properties.clientType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceConfiguration: msRest.CompositeMapper = {
  serializedName: "SourceConfiguration",
  type: {
    name: "Composite",
    className: "SourceConfiguration",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceConfigurationResult: msRest.CompositeMapper = {
  serializedName: "SourceConfigurationResult",
  type: {
    name: "Composite",
    className: "SourceConfigurationResult",
    modelProperties: {
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SourceConfiguration"
            }
          }
        }
      }
    }
  }
};

export const ValidateResult: msRest.CompositeMapper = {
  serializedName: "ValidateResult",
  type: {
    name: "Composite",
    className: "ValidateResult",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      linkerStatus: {
        serializedName: "linkerStatus",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      reportStartTimeUtc: {
        serializedName: "reportStartTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      reportEndTimeUtc: {
        serializedName: "reportEndTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      targetId: {
        serializedName: "targetId",
        type: {
          name: "String"
        }
      },
      authType: {
        serializedName: "authType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        readOnly: true,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      actionType: {
        readOnly: true,
        serializedName: "actionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkerList: msRest.CompositeMapper = {
  serializedName: "LinkerList",
  type: {
    name: "Composite",
    className: "LinkerList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LinkerResource"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'AuthInfoBase' : AuthInfoBase,
  'AuthInfoBase.secret' : SecretAuthInfo,
  'AuthInfoBase.userAssignedIdentity' : UserAssignedIdentityAuthInfo,
  'AuthInfoBase.systemAssignedIdentity' : SystemAssignedIdentityAuthInfo,
  'AuthInfoBase.servicePrincipalSecret' : ServicePrincipalSecretAuthInfo,
  'AuthInfoBase.servicePrincipalCertificate' : ServicePrincipalCertificateAuthInfo

};
