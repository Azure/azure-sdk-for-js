/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/jobsMappers";
import * as Parameters from "../models/parameters";
import { DataBoxManagementClientContext } from "../dataBoxManagementClientContext";

/** Class representing a Jobs. */
export class Jobs {
  private readonly client: DataBoxManagementClientContext;

  /**
   * Create a Jobs.
   * @param {DataBoxManagementClientContext} client Reference to the service client.
   */
  constructor(client: DataBoxManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists all the jobs available under the subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsListResponse>
   */
  list(options?: Models.JobsListOptionalParams): Promise<Models.JobsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.JobResourceList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: Models.JobsListOptionalParams, callback: msRest.ServiceCallback<Models.JobResourceList>): void;
  list(options?: Models.JobsListOptionalParams | msRest.ServiceCallback<Models.JobResourceList>, callback?: msRest.ServiceCallback<Models.JobResourceList>): Promise<Models.JobsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.JobsListResponse>;
  }

  /**
   * Lists all the jobs available under the given resource group.
   * @param resourceGroupName The Resource Group Name
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: Models.JobsListByResourceGroupOptionalParams): Promise<Models.JobsListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.JobResourceList>): void;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: Models.JobsListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.JobResourceList>): void;
  listByResourceGroup(resourceGroupName: string, options?: Models.JobsListByResourceGroupOptionalParams | msRest.ServiceCallback<Models.JobResourceList>, callback?: msRest.ServiceCallback<Models.JobResourceList>): Promise<Models.JobsListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.JobsListByResourceGroupResponse>;
  }

  /**
   * Gets information about the specified job.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsGetResponse>
   */
  get(resourceGroupName: string, jobName: string, options?: Models.JobsGetOptionalParams): Promise<Models.JobsGetResponse>;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param callback The callback
   */
  get(resourceGroupName: string, jobName: string, callback: msRest.ServiceCallback<Models.JobResource>): void;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, jobName: string, options: Models.JobsGetOptionalParams, callback: msRest.ServiceCallback<Models.JobResource>): void;
  get(resourceGroupName: string, jobName: string, options?: Models.JobsGetOptionalParams | msRest.ServiceCallback<Models.JobResource>, callback?: msRest.ServiceCallback<Models.JobResource>): Promise<Models.JobsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        jobName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.JobsGetResponse>;
  }

  /**
   * Creates a new job with the specified parameters. Existing job cannot be updated with this API
   * and should instead be updated with the Update job API.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param jobResource Job details from request body.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsCreateResponse>
   */
  create(resourceGroupName: string, jobName: string, jobResource: Models.JobResource, options?: msRest.RequestOptionsBase): Promise<Models.JobsCreateResponse> {
    return this.beginCreate(resourceGroupName,jobName,jobResource,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.JobsCreateResponse>;
  }

  /**
   * Deletes a job.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, jobName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,jobName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Updates the properties of an existing job.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param jobResourceUpdateParameter Job update parameters from request body.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsUpdateResponse>
   */
  update(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: Models.JobResourceUpdateParameter, options?: Models.JobsUpdateOptionalParams): Promise<Models.JobsUpdateResponse> {
    return this.beginUpdate(resourceGroupName,jobName,jobResourceUpdateParameter,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.JobsUpdateResponse>;
  }

  /**
   * Book shipment pick up.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param shipmentPickUpRequest Details of shipment pick up request.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsBookShipmentPickUpResponse>
   */
  bookShipmentPickUp(resourceGroupName: string, jobName: string, shipmentPickUpRequest: Models.ShipmentPickUpRequest, options?: msRest.RequestOptionsBase): Promise<Models.JobsBookShipmentPickUpResponse>;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param shipmentPickUpRequest Details of shipment pick up request.
   * @param callback The callback
   */
  bookShipmentPickUp(resourceGroupName: string, jobName: string, shipmentPickUpRequest: Models.ShipmentPickUpRequest, callback: msRest.ServiceCallback<Models.ShipmentPickUpResponse>): void;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param shipmentPickUpRequest Details of shipment pick up request.
   * @param options The optional parameters
   * @param callback The callback
   */
  bookShipmentPickUp(resourceGroupName: string, jobName: string, shipmentPickUpRequest: Models.ShipmentPickUpRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ShipmentPickUpResponse>): void;
  bookShipmentPickUp(resourceGroupName: string, jobName: string, shipmentPickUpRequest: Models.ShipmentPickUpRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ShipmentPickUpResponse>, callback?: msRest.ServiceCallback<Models.ShipmentPickUpResponse>): Promise<Models.JobsBookShipmentPickUpResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        jobName,
        shipmentPickUpRequest,
        options
      },
      bookShipmentPickUpOperationSpec,
      callback) as Promise<Models.JobsBookShipmentPickUpResponse>;
  }

  /**
   * CancelJob.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param reason Reason for cancellation.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  cancel(resourceGroupName: string, jobName: string, reason: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param reason Reason for cancellation.
   * @param callback The callback
   */
  cancel(resourceGroupName: string, jobName: string, reason: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param reason Reason for cancellation.
   * @param options The optional parameters
   * @param callback The callback
   */
  cancel(resourceGroupName: string, jobName: string, reason: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  cancel(resourceGroupName: string, jobName: string, reason: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        jobName,
        reason,
        options
      },
      cancelOperationSpec,
      callback);
  }

  /**
   * This method gets the unencrypted secrets related to the job.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsListCredentialsResponse>
   */
  listCredentials(resourceGroupName: string, jobName: string, options?: msRest.RequestOptionsBase): Promise<Models.JobsListCredentialsResponse>;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param callback The callback
   */
  listCredentials(resourceGroupName: string, jobName: string, callback: msRest.ServiceCallback<Models.UnencryptedCredentialsList>): void;
  /**
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param options The optional parameters
   * @param callback The callback
   */
  listCredentials(resourceGroupName: string, jobName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UnencryptedCredentialsList>): void;
  listCredentials(resourceGroupName: string, jobName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UnencryptedCredentialsList>, callback?: msRest.ServiceCallback<Models.UnencryptedCredentialsList>): Promise<Models.JobsListCredentialsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        jobName,
        options
      },
      listCredentialsOperationSpec,
      callback) as Promise<Models.JobsListCredentialsResponse>;
  }

  /**
   * Creates a new job with the specified parameters. Existing job cannot be updated with this API
   * and should instead be updated with the Update job API.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param jobResource Job details from request body.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreate(resourceGroupName: string, jobName: string, jobResource: Models.JobResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        jobName,
        jobResource,
        options
      },
      beginCreateOperationSpec,
      options);
  }

  /**
   * Deletes a job.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, jobName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        jobName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Updates the properties of an existing job.
   * @param resourceGroupName The Resource Group Name
   * @param jobName The name of the job Resource within the specified resource group. job names must
   * be between 3 and 24 characters in length and use any alphanumeric and underscore only
   * @param jobResourceUpdateParameter Job update parameters from request body.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: Models.JobResourceUpdateParameter, options?: Models.JobsBeginUpdateOptionalParams): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        jobName,
        jobResourceUpdateParameter,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * Lists all the jobs available under the subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.JobsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.JobResourceList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResourceList>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobResourceList>, callback?: msRest.ServiceCallback<Models.JobResourceList>): Promise<Models.JobsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.JobsListNextResponse>;
  }

  /**
   * Lists all the jobs available under the given resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.JobsListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.JobsListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.JobResourceList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResourceList>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobResourceList>, callback?: msRest.ServiceCallback<Models.JobResourceList>): Promise<Models.JobsListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.JobsListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DataBox/jobs",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.skipToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.JobResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.skipToken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.JobResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.jobName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.expand
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.JobResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const bookShipmentPickUpOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/bookShipmentPickUp",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.jobName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "shipmentPickUpRequest",
    mapper: {
      ...Mappers.ShipmentPickUpRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ShipmentPickUpResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const cancelOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/cancel",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.jobName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      reason: "reason"
    },
    mapper: {
      ...Mappers.CancellationReason,
      required: true
    }
  },
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listCredentialsOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/listCredentials",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.jobName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UnencryptedCredentialsList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.jobName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "jobResource",
    mapper: {
      ...Mappers.JobResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.JobResource
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.jobName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.jobName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.ifMatch,
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "jobResourceUpdateParameter",
    mapper: {
      ...Mappers.JobResourceUpdateParameter,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.JobResource
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.JobResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.JobResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
