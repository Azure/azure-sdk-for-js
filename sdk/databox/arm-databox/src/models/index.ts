/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Credential details of the shares in account.
 */
export interface ShareCredentialDetails {
  /**
   * Name of the share.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareName?: string;
  /**
   * Type of the share. Possible values include: 'UnknownType', 'HCS', 'BlockBlob', 'PageBlob',
   * 'AzureFile', 'ManagedDisk', 'AzurePremiumFiles'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareType?: ShareDestinationFormatType;
  /**
   * User name for the share.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
  /**
   * Password for the share.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly password?: string;
  /**
   * Access protocols supported on the device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedAccessProtocols?: AccessProtocol[];
}

/**
 * Credential details of the account.
 */
export interface AccountCredentialDetails {
  /**
   * Name of the account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountName?: string;
  /**
   * Type of the account. Possible values include: 'StorageAccount', 'ManagedDisk'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataAccountType?: DataAccountType;
  /**
   * Connection string of the account endpoint to use the account as a storage endpoint on the
   * device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountConnectionString?: string;
  /**
   * Per share level unencrypted access credentials.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareCredentialDetails?: ShareCredentialDetails[];
}

/**
 * Additional error info.
 */
export interface AdditionalErrorInfo {
  /**
   * Additional error type.
   */
  type?: string;
  /**
   * Additional error info.
   */
  info?: any;
}

/**
 * Shipping address where customer wishes to receive the device.
 */
export interface ShippingAddress {
  /**
   * Street Address line 1.
   */
  streetAddress1: string;
  /**
   * Street Address line 2.
   */
  streetAddress2?: string;
  /**
   * Street Address line 3.
   */
  streetAddress3?: string;
  /**
   * Name of the City.
   */
  city?: string;
  /**
   * Name of the State or Province.
   */
  stateOrProvince?: string;
  /**
   * Name of the Country.
   */
  country: string;
  /**
   * Postal code.
   */
  postalCode?: string;
  /**
   * Extended Zip Code.
   */
  zipExtendedCode?: string;
  /**
   * Name of the company.
   */
  companyName?: string;
  /**
   * Type of address. Possible values include: 'None', 'Residential', 'Commercial'
   */
  addressType?: AddressType;
}

/**
 * Output of the address validation api.
 */
export interface AddressValidationOutput {
  /**
   * Error code and message of validation response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Polymorphic Discriminator
   */
  validationType: string;
  /**
   * The address validation status. Possible values include: 'Valid', 'Invalid', 'Ambiguous'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly validationStatus?: AddressValidationStatus;
  /**
   * List of alternate addresses.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateAddresses?: ShippingAddress[];
}

/**
 * An interface representing Details.
 */
export interface Details {
  code: string;
  message: string;
}

/**
 * An interface representing ErrorDetail.
 */
export interface ErrorDetail {
  code: string;
  message: string;
  details?: Details[];
  target?: string;
}

/**
 * An interface representing ApiError.
 */
export interface ApiError {
  error: ErrorDetail;
}

/**
 * The Network Adapter configuration of a DataBox.
 */
export interface ApplianceNetworkConfiguration {
  /**
   * Name of the network.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Mac Address.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly macAddress?: string;
}

/**
 * Base class for all objects under resource.
 */
export interface ArmBaseObject {
  /**
   * Name of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Id of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The filters for showing the available skus.
 */
export interface AvailableSkuRequest {
  /**
   * Type of the transfer. Possible values include: 'ImportToAzure', 'ExportFromAzure'
   */
  transferType: TransferType;
  /**
   * ISO country code. Country for hardware shipment. For codes check:
   * https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
   */
  country: string;
  /**
   * Location for data transfer. For locations check:
   * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  location: string;
  /**
   * Sku Names to filter for available skus
   */
  skuNames?: SkuName[];
}

/**
 * The Sku.
 */
export interface Sku {
  /**
   * The sku name. Possible values include: 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
   */
  name: SkuName;
  /**
   * The display name of the sku.
   */
  displayName?: string;
  /**
   * The sku family.
   */
  family?: string;
}

/**
 * Map of data location to service location
 */
export interface DataLocationToServiceLocationMap {
  /**
   * Location of the data.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataLocation?: string;
  /**
   * Location of the service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceLocation?: string;
}

/**
 * Capacity of the sku.
 */
export interface SkuCapacity {
  /**
   * Usable capacity in TB.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly usable?: string;
  /**
   * Maximum capacity in TB.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximum?: string;
}

/**
 * Describes metadata for retrieving price info.
 */
export interface SkuCost {
  /**
   * Meter id of the Sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterId?: string;
  /**
   * The type of the meter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterType?: string;
  /**
   * Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new
   * regions will be using 1$ shipping guid with appropriate multiplier specific to region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly multiplier?: number;
}

/**
 * Information of the sku.
 */
export interface SkuInformation {
  /**
   * The Sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: Sku;
  /**
   * The sku is enabled or not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enabled?: boolean;
  /**
   * The map of data location to service location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataLocationToServiceLocationMap?: DataLocationToServiceLocationMap[];
  /**
   * Capacity of the Sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capacity?: SkuCapacity;
  /**
   * Cost of the Sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly costs?: SkuCost[];
  /**
   * Api versions that support this Sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiVersions?: string[];
  /**
   * Reason why the Sku is disabled. Possible values include: 'None', 'Country', 'Region',
   * 'Feature', 'OfferType', 'NoSubscriptionInfo'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly disabledReason?: SkuDisabledReason;
  /**
   * Message for why the Sku is disabled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly disabledReasonMessage?: string;
  /**
   * Required feature to access the sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredFeature?: string;
}

/**
 * Filter details to transfer Azure files
 */
export interface AzureFileFilterDetails {
  /**
   * Prefix list of the Azure files to be transferred.
   */
  filePrefixList?: string[];
  /**
   * List of full path of the files to be transferred.
   */
  filePathList?: string[];
  /**
   * List of file shares to be transferred.
   */
  fileShareList?: string[];
}

/**
 * Filter details to transfer Azure Blobs
 */
export interface BlobFilterDetails {
  /**
   * Prefix list of the Azure blobs to be transferred.
   */
  blobPrefixList?: string[];
  /**
   * List of full path of the blobs to be transferred.
   */
  blobPathList?: string[];
  /**
   * List of blob containers to be transferred.
   */
  containerList?: string[];
}

/**
 * Reason for cancellation.
 */
export interface CancellationReason {
  /**
   * Reason for cancellation.
   */
  reason: string;
}

/**
 * Notification preference for a job stage.
 */
export interface NotificationPreference {
  /**
   * Name of the stage. Possible values include: 'DevicePrepared', 'Dispatched', 'Delivered',
   * 'PickedUp', 'AtAzureDC', 'DataCopy'
   */
  stageName: NotificationStageName;
  /**
   * Notification is required or not.
   */
  sendNotification: boolean;
}

/**
 * Contact Details.
 */
export interface ContactDetails {
  /**
   * Contact name of the person.
   */
  contactName: string;
  /**
   * Phone number of the contact person.
   */
  phone: string;
  /**
   * Phone extension number of the contact person.
   */
  phoneExtension?: string;
  /**
   * Mobile number of the contact person.
   */
  mobile?: string;
  /**
   * List of Email-ids to be notified about job progress.
   */
  emailList: string[];
  /**
   * Notification preference for a job stage.
   */
  notificationPreference?: NotificationPreference[];
}

/**
 * Contains the possible cases for CopyLogDetails.
 */
export type CopyLogDetailsUnion = CopyLogDetails | DataBoxAccountCopyLogDetails | DataBoxDiskCopyLogDetails | DataBoxHeavyAccountCopyLogDetails;

/**
 * Details for log generated during copy.
 */
export interface CopyLogDetails {
  /**
   * Polymorphic Discriminator
   */
  copyLogDetailsType: "CopyLogDetails";
}

/**
 * Copy progress.
 */
export interface CopyProgress {
  /**
   * Name of the storage account. This will be empty for data account types other than storage
   * account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageAccountName?: string;
  /**
   * Transfer type of data. Possible values include: 'ImportToAzure', 'ExportFromAzure'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transferType?: TransferType;
  /**
   * Data Account Type. Possible values include: 'StorageAccount', 'ManagedDisk'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataAccountType?: DataAccountType;
  /**
   * Id of the account where the data needs to be uploaded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountId?: string;
  /**
   * To indicate bytes transferred.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bytesProcessed?: number;
  /**
   * Total amount of data to be processed by the job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalBytesToProcess?: number;
  /**
   * Number of files processed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly filesProcessed?: number;
  /**
   * Total files to process
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalFilesToProcess?: number;
  /**
   * Number of files not adhering to azure naming conventions which were processed by automatic
   * renaming
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invalidFilesProcessed?: number;
  /**
   * Total amount of data not adhering to azure naming conventions which were processed by
   * automatic renaming
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invalidFileBytesUploaded?: number;
  /**
   * Number of folders not adhering to azure naming conventions which were processed by automatic
   * renaming
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly renamedContainerCount?: number;
  /**
   * Number of files which could not be copied
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly filesErroredOut?: number;
  /**
   * To indicate directories errored out in the job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly directoriesErroredOut?: number;
  /**
   * To indicate directories renamed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invalidDirectoriesProcessed?: number;
  /**
   * To indicate if enumeration of data is in progress.
   * Until this is true, the TotalBytesToProcess may not be valid.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isEnumerationInProgress?: boolean;
}

/**
 * Contains the possible cases for ValidationRequest.
 */
export type ValidationRequestUnion = ValidationRequest | CreateJobValidations;

/**
 * Minimum request requirement of any validation category.
 */
export interface ValidationRequest {
  /**
   * Polymorphic Discriminator
   */
  validationCategory: "ValidationRequest";
  /**
   * List of request details contain validationType and its request as key and value respectively.
   */
  individualRequestDetails: ValidationInputRequestUnion[];
}

/**
 * It does all pre-job creation validations.
 */
export interface CreateJobValidations {
  /**
   * Polymorphic Discriminator
   */
  validationCategory: "JobCreationValidation";
  /**
   * List of request details contain validationType and its request as key and value respectively.
   */
  individualRequestDetails: ValidationInputRequestUnion[];
}

/**
 * Contains the possible cases for ValidationInputRequest.
 */
export type ValidationInputRequestUnion = ValidationInputRequest | CreateOrderLimitForSubscriptionValidationRequest | DataTransferDetailsValidationRequest | PreferencesValidationRequest | SkuAvailabilityValidationRequest | SubscriptionIsAllowedToCreateJobValidationRequest | ValidateAddress;

/**
 * Minimum fields that must be present in any type of validation request.
 */
export interface ValidationInputRequest {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidationInputRequest";
}

/**
 * Request to validate create order limit for current subscription.
 */
export interface CreateOrderLimitForSubscriptionValidationRequest {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateCreateOrderLimit";
  /**
   * Device type to be used for the job. Possible values include: 'DataBox', 'DataBoxDisk',
   * 'DataBoxHeavy'
   */
  deviceType: SkuName;
}

/**
 * Contains the possible cases for ValidationInputResponse.
 */
export type ValidationInputResponseUnion = ValidationInputResponse | CreateOrderLimitForSubscriptionValidationResponseProperties | DataTransferDetailsValidationResponseProperties | PreferencesValidationResponseProperties | SkuAvailabilityValidationResponseProperties | SubscriptionIsAllowedToCreateJobValidationResponseProperties;

/**
 * Minimum properties that should be present in each individual validation response.
 */
export interface ValidationInputResponse {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidationInputResponse";
  /**
   * Error code and message of validation response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
}

/**
 * Properties of create order limit for subscription validation response.
 */
export interface CreateOrderLimitForSubscriptionValidationResponseProperties {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateCreateOrderLimit";
  /**
   * Error code and message of validation response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Create order limit validation status. Possible values include: 'Valid', 'Invalid', 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ValidationStatus;
}

/**
 * Contains the possible cases for DataAccountDetails.
 */
export type DataAccountDetailsUnion = DataAccountDetails | ManagedDiskDetails | StorageAccountDetails;

/**
 * Account details of the data to be transferred
 */
export interface DataAccountDetails {
  /**
   * Polymorphic Discriminator
   */
  dataAccountType: "DataAccountDetails";
  /**
   * Password for all the shares to be created on the device. Should not be passed for
   * TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password
   * itself. This will not be returned in Get Call. Password Requirements :  Password must be
   * minimum of 12 and maximum of 64 characters. Password must have at least one uppercase
   * alphabet, one number and one special character. Password cannot have the following characters
   * : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
   */
  sharePassword?: string;
}

/**
 * Copy log details for a storage account of a DataBox job
 */
export interface DataBoxAccountCopyLogDetails {
  /**
   * Polymorphic Discriminator
   */
  copyLogDetailsType: "DataBox";
  /**
   * Account name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountName?: string;
  /**
   * Link for copy logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyLogLink?: string;
  /**
   * Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyVerboseLogLink?: string;
}

/**
 * Copy Log Details for a disk
 */
export interface DataBoxDiskCopyLogDetails {
  /**
   * Polymorphic Discriminator
   */
  copyLogDetailsType: "DataBoxDisk";
  /**
   * Disk Serial Number.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskSerialNumber?: string;
  /**
   * Link for copy error logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorLogLink?: string;
  /**
   * Link for copy verbose logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly verboseLogLink?: string;
}

/**
 * DataBox Disk Copy Progress
 */
export interface DataBoxDiskCopyProgress {
  /**
   * The serial number of the disk
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serialNumber?: string;
  /**
   * Bytes copied during the copy of disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bytesCopied?: number;
  /**
   * Indicates the percentage completed for the copy of the disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The Status of the copy. Possible values include: 'NotStarted', 'InProgress', 'Completed',
   * 'CompletedWithErrors', 'Failed', 'NotReturned', 'HardwareError', 'DeviceFormatted',
   * 'DeviceMetadataModified', 'StorageAccountNotAccessible', 'UnsupportedData'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: CopyStatus;
}

/**
 * Contains the possible cases for JobDetails.
 */
export type JobDetailsUnion = JobDetails | DataBoxDiskJobDetails | DataBoxHeavyJobDetails | DataBoxJobDetails;

/**
 * Job details.
 */
export interface JobDetails {
  /**
   * Polymorphic Discriminator
   */
  jobDetailsType: "JobDetails";
  /**
   * List of stages that run in the job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobStages?: JobStages[];
  /**
   * Contact details for notification and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * Shipping address of the customer.
   */
  shippingAddress?: ShippingAddress;
  /**
   * Delivery package shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * Return package shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * Details of the data to be imported into azure.
   */
  dataImportDetails?: DataImportDetails[];
  /**
   * Details of the data to be exported from azure.
   */
  dataExportDetails?: DataExportDetails[];
  /**
   * Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * List of copy log details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * Shared access key to download the return shipment label
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * Shared access key to download the chain of custody logs
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly chainOfCustodySasKey?: string;
  /**
   * Details about which key encryption type is being used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyEncryptionKey?: KeyEncryptionKey;
  /**
   * The expected size of the data, which needs to be transferred in this job, in terabytes.
   */
  expectedDataSizeInTerabytes?: number;
}

/**
 * DataBox Disk Job Details.
 */
export interface DataBoxDiskJobDetails {
  /**
   * Polymorphic Discriminator
   */
  jobDetailsType: "DataBoxDisk";
  /**
   * List of stages that run in the job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobStages?: JobStages[];
  /**
   * Contact details for notification and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * Shipping address of the customer.
   */
  shippingAddress?: ShippingAddress;
  /**
   * Delivery package shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * Return package shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * Details of the data to be imported into azure.
   */
  dataImportDetails?: DataImportDetails[];
  /**
   * Details of the data to be exported from azure.
   */
  dataExportDetails?: DataExportDetails[];
  /**
   * Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * List of copy log details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * Shared access key to download the return shipment label
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * Shared access key to download the chain of custody logs
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly chainOfCustodySasKey?: string;
  /**
   * Details about which key encryption type is being used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyEncryptionKey?: KeyEncryptionKey;
  /**
   * The expected size of the data, which needs to be transferred in this job, in terabytes.
   */
  expectedDataSizeInTerabytes?: number;
  /**
   * User preference on what size disks are needed for the job. The map is from the disk size in TB
   * to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against
   * an int.
   */
  preferredDisks?: { [propertyName: string]: number };
  /**
   * Copy progress per disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyProgress?: DataBoxDiskCopyProgress[];
  /**
   * Contains the map of disk serial number to the disk size being used for the job. Is returned
   * only after the disks are shipped to the customer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly disksAndSizeDetails?: { [propertyName: string]: number };
  /**
   * User entered passkey for DataBox Disk job.
   */
  passkey?: string;
}

/**
 * Contains all the secrets of a Disk.
 */
export interface DiskSecret {
  /**
   * Serial number of the assigned disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskSerialNumber?: string;
  /**
   * Bit Locker key of the disk which can be used to unlock the disk to copy data.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bitLockerKey?: string;
}

/**
 * Contains the possible cases for JobSecrets.
 */
export type JobSecretsUnion = JobSecrets | DataBoxDiskJobSecrets | DataBoxHeavyJobSecrets | DataboxJobSecrets;

/**
 * The base class for the secrets
 */
export interface JobSecrets {
  /**
   * Polymorphic Discriminator
   */
  jobSecretsType: "JobSecrets";
  /**
   * Dc Access Security Code for Customer Managed Shipping
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dcAccessSecurityCode?: DcAccessSecurityCode;
  /**
   * Error while fetching the secrets.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
}

/**
 * The secrets related to disk job.
 */
export interface DataBoxDiskJobSecrets {
  /**
   * Polymorphic Discriminator
   */
  jobSecretsType: "DataBoxDisk";
  /**
   * Dc Access Security Code for Customer Managed Shipping
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dcAccessSecurityCode?: DcAccessSecurityCode;
  /**
   * Error while fetching the secrets.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Contains the list of secrets object for that device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskSecrets?: DiskSecret[];
  /**
   * PassKey for the disk Job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly passKey?: string;
  /**
   * Whether passkey was provided by user.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPasskeyUserDefined?: boolean;
}

/**
 * Copy log details for a storage account for Databox heavy
 */
export interface DataBoxHeavyAccountCopyLogDetails {
  /**
   * Polymorphic Discriminator
   */
  copyLogDetailsType: "DataBoxHeavy";
  /**
   * Account name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountName?: string;
  /**
   * Link for copy logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyLogLink?: string[];
  /**
   * Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to
   * verbose.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyVerboseLogLink?: string[];
}

/**
 * Databox Heavy Device Job Details
 */
export interface DataBoxHeavyJobDetails {
  /**
   * Polymorphic Discriminator
   */
  jobDetailsType: "DataBoxHeavy";
  /**
   * List of stages that run in the job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobStages?: JobStages[];
  /**
   * Contact details for notification and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * Shipping address of the customer.
   */
  shippingAddress?: ShippingAddress;
  /**
   * Delivery package shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * Return package shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * Details of the data to be imported into azure.
   */
  dataImportDetails?: DataImportDetails[];
  /**
   * Details of the data to be exported from azure.
   */
  dataExportDetails?: DataExportDetails[];
  /**
   * Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * List of copy log details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * Shared access key to download the return shipment label
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * Shared access key to download the chain of custody logs
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly chainOfCustodySasKey?: string;
  /**
   * Details about which key encryption type is being used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyEncryptionKey?: KeyEncryptionKey;
  /**
   * The expected size of the data, which needs to be transferred in this job, in terabytes.
   */
  expectedDataSizeInTerabytes?: number;
  /**
   * Copy progress per account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyProgress?: CopyProgress[];
  /**
   * Set Device password for unlocking Databox Heavy. Should not be passed for
   * TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password
   * itself. This will not be returned in Get Call. Password Requirements :  Password must be
   * minimum of 12 and maximum of 64 characters. Password must have at least one uppercase
   * alphabet, one number and one special character. Password cannot have the following characters
   * : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
   */
  devicePassword?: string;
}

/**
 * The secrets related to a databox heavy.
 */
export interface DataBoxHeavySecret {
  /**
   * Serial number of the assigned device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deviceSerialNumber?: string;
  /**
   * Password for out of the box experience on device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly devicePassword?: string;
  /**
   * Network configuration of the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly networkConfigurations?: ApplianceNetworkConfiguration[];
  /**
   * The base 64 encoded public key to authenticate with the device
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly encodedValidationCertPubKey?: string;
  /**
   * Per account level access credentials.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountCredentialDetails?: AccountCredentialDetails[];
}

/**
 * The secrets related to a databox heavy job.
 */
export interface DataBoxHeavyJobSecrets {
  /**
   * Polymorphic Discriminator
   */
  jobSecretsType: "DataBoxHeavy";
  /**
   * Dc Access Security Code for Customer Managed Shipping
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dcAccessSecurityCode?: DcAccessSecurityCode;
  /**
   * Error while fetching the secrets.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Contains the list of secret objects for a databox heavy job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cabinetPodSecrets?: DataBoxHeavySecret[];
}

/**
 * Databox Job Details
 */
export interface DataBoxJobDetails {
  /**
   * Polymorphic Discriminator
   */
  jobDetailsType: "DataBox";
  /**
   * List of stages that run in the job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobStages?: JobStages[];
  /**
   * Contact details for notification and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * Shipping address of the customer.
   */
  shippingAddress?: ShippingAddress;
  /**
   * Delivery package shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * Return package shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * Details of the data to be imported into azure.
   */
  dataImportDetails?: DataImportDetails[];
  /**
   * Details of the data to be exported from azure.
   */
  dataExportDetails?: DataExportDetails[];
  /**
   * Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * List of copy log details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * Shared access key to download the return shipment label
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * Shared access key to download the chain of custody logs
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly chainOfCustodySasKey?: string;
  /**
   * Details about which key encryption type is being used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyEncryptionKey?: KeyEncryptionKey;
  /**
   * The expected size of the data, which needs to be transferred in this job, in terabytes.
   */
  expectedDataSizeInTerabytes?: number;
  /**
   * Copy progress per storage account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly copyProgress?: CopyProgress[];
  /**
   * Set Device password for unlocking Databox. Should not be passed for
   * TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password
   * itself. This will not be returned in Get Call. Password Requirements :  Password must be
   * minimum of 12 and maximum of 64 characters. Password must have at least one uppercase
   * alphabet, one number and one special character. Password cannot have the following characters
   * : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
   */
  devicePassword?: string;
}

/**
 * The secrets related to a DataBox.
 */
export interface DataBoxSecret {
  /**
   * Serial number of the assigned device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deviceSerialNumber?: string;
  /**
   * Password for out of the box experience on device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly devicePassword?: string;
  /**
   * Network configuration of the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly networkConfigurations?: ApplianceNetworkConfiguration[];
  /**
   * The base 64 encoded public key to authenticate with the device
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly encodedValidationCertPubKey?: string;
  /**
   * Per account level access credentials.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountCredentialDetails?: AccountCredentialDetails[];
}

/**
 * The secrets related to a databox job.
 */
export interface DataboxJobSecrets {
  /**
   * Polymorphic Discriminator
   */
  jobSecretsType: "DataBox";
  /**
   * Dc Access Security Code for Customer Managed Shipping
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dcAccessSecurityCode?: DcAccessSecurityCode;
  /**
   * Error while fetching the secrets.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Contains the list of secret objects for a job.
   */
  podSecrets?: DataBoxSecret[];
}

/**
 * Contains the possible cases for ScheduleAvailabilityRequest.
 */
export type ScheduleAvailabilityRequestUnion = ScheduleAvailabilityRequest | DataBoxScheduleAvailabilityRequest | DiskScheduleAvailabilityRequest | HeavyScheduleAvailabilityRequest;

/**
 * Request body to get the availability for scheduling orders.
 */
export interface ScheduleAvailabilityRequest {
  /**
   * Polymorphic Discriminator
   */
  skuName: "ScheduleAvailabilityRequest";
  /**
   * Location for data transfer. For locations check:
   * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  storageLocation: string;
  /**
   * Country in which storage location should be supported.
   */
  country?: string;
}

/**
 * Request body to get the availability for scheduling data box orders orders.
 */
export interface DataBoxScheduleAvailabilityRequest {
  /**
   * Polymorphic Discriminator
   */
  skuName: "DataBox";
  /**
   * Location for data transfer. For locations check:
   * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  storageLocation: string;
  /**
   * Country in which storage location should be supported.
   */
  country?: string;
}

/**
 * Details of the filter files to be used for data transfer.
 */
export interface FilterFileDetails {
  /**
   * Type of the filter file. Possible values include: 'AzureBlob', 'AzureFile'
   */
  filterFileType: FilterFileType;
  /**
   * Path of the file that contains the details of all items to transfer.
   */
  filterFilePath: string;
}

/**
 * Details of the filtering the transfer of data.
 */
export interface TransferFilterDetails {
  /**
   * Type of the account of data. Possible values include: 'StorageAccount', 'ManagedDisk'
   */
  dataAccountType: DataAccountType;
  /**
   * Filter details to transfer blobs.
   */
  blobFilterDetails?: BlobFilterDetails;
  /**
   * Filter details to transfer Azure files.
   */
  azureFileFilterDetails?: AzureFileFilterDetails;
  /**
   * Details of the filter files to be used for data transfer.
   */
  filterFileDetails?: FilterFileDetails[];
}

/**
 * Map of filter type and the details to filter. This field is required only if the
 * TransferConfigurationType is given as TransferUsingFilter.
 */
export interface TransferConfigurationTransferFilterDetails {
  /**
   * Details of the filtering the transfer of data.
   */
  include?: TransferFilterDetails;
}

/**
 * Details to transfer all data.
 */
export interface TransferAllDetails {
  /**
   * Type of the account of data. Possible values include: 'StorageAccount', 'ManagedDisk'
   */
  dataAccountType: DataAccountType;
  /**
   * To indicate if all Azure blobs have to be transferred
   */
  transferAllBlobs?: boolean;
  /**
   * To indicate if all Azure Files have to be transferred
   */
  transferAllFiles?: boolean;
}

/**
 * Map of filter type and the details to transfer all data. This field is required only if the
 * TransferConfigurationType is given as TransferAll
 */
export interface TransferConfigurationTransferAllDetails {
  /**
   * Details to transfer all data.
   */
  include?: TransferAllDetails;
}

/**
 * Configuration for defining the transfer of data.
 */
export interface TransferConfiguration {
  /**
   * Type of the configuration for transfer. Possible values include: 'TransferAll',
   * 'TransferUsingFilter'
   */
  transferConfigurationType: TransferConfigurationType;
  /**
   * Map of filter type and the details to filter. This field is required only if the
   * TransferConfigurationType is given as TransferUsingFilter.
   */
  transferFilterDetails?: TransferConfigurationTransferFilterDetails;
  /**
   * Map of filter type and the details to transfer all data. This field is required only if the
   * TransferConfigurationType is given as TransferAll
   */
  transferAllDetails?: TransferConfigurationTransferAllDetails;
}

/**
 * Details of the data to be used for exporting data from azure.
 */
export interface DataExportDetails {
  /**
   * Configuration for the data transfer.
   */
  transferConfiguration: TransferConfiguration;
  /**
   * Level of the logs to be collected. Possible values include: 'Error', 'Verbose'
   */
  logCollectionLevel?: LogCollectionLevel;
  /**
   * Account details of the data to be transferred
   */
  accountDetails: DataAccountDetailsUnion;
}

/**
 * Details of the data to be used for importing data to azure.
 */
export interface DataImportDetails {
  /**
   * Account details of the data to be transferred
   */
  accountDetails: DataAccountDetailsUnion;
}

/**
 * Request to validate export and import data details.
 */
export interface DataTransferDetailsValidationRequest {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateDataTransferDetails";
  /**
   * List of DataTransfer details to be used to export data from azure.
   */
  dataExportDetails?: DataExportDetails[];
  /**
   * List of DataTransfer details to be used to import data to azure.
   */
  dataImportDetails?: DataImportDetails[];
  /**
   * Device type. Possible values include: 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
   */
  deviceType: SkuName;
  /**
   * Type of the transfer. Possible values include: 'ImportToAzure', 'ExportFromAzure'
   */
  transferType: TransferType;
}

/**
 * Properties of data transfer details validation response.
 */
export interface DataTransferDetailsValidationResponseProperties {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateDataTransferDetails";
  /**
   * Error code and message of validation response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Data transfer details validation status. Possible values include: 'Valid', 'Invalid',
   * 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ValidationStatus;
}

/**
 * Dc access security code
 */
export interface DcAccessSecurityCode {
  /**
   * Reverse Dc access security code.
   */
  reverseDcAccessCode?: string;
  /**
   * Forward Dc access security code.
   */
  forwardDcAccessCode?: string;
}

/**
 * Request body to get the availability for scheduling disk orders.
 */
export interface DiskScheduleAvailabilityRequest {
  /**
   * Polymorphic Discriminator
   */
  skuName: "DataBoxDisk";
  /**
   * Location for data transfer. For locations check:
   * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  storageLocation: string;
  /**
   * Country in which storage location should be supported.
   */
  country?: string;
  /**
   * The expected size of the data, which needs to be transferred in this job, in terabytes.
   */
  expectedDataSizeInTerabytes: number;
}

/**
 * Preferences related to the Encryption.
 */
export interface EncryptionPreferences {
  /**
   * Defines secondary layer of software-based encryption enablement. Possible values include:
   * 'Enabled', 'Disabled'
   */
  doubleEncryption?: DoubleEncryption;
}

/**
 * Request body to get the availability for scheduling heavy orders.
 */
export interface HeavyScheduleAvailabilityRequest {
  /**
   * Polymorphic Discriminator
   */
  skuName: "DataBoxHeavy";
  /**
   * Location for data transfer. For locations check:
   * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  storageLocation: string;
  /**
   * Country in which storage location should be supported.
   */
  country?: string;
}

/**
 * User assigned identity properties.
 */
export interface UserAssignedProperties {
  /**
   * Arm resource id for user assigned identity to be used to fetch MSI token.
   */
  resourceId?: string;
}

/**
 * Managed identity properties.
 */
export interface IdentityProperties {
  /**
   * Managed service identity type.
   */
  type?: string;
  /**
   * User assigned identity properties.
   */
  userAssigned?: UserAssignedProperties;
}

/**
 * Additional delivery info.
 */
export interface JobDeliveryInfo {
  /**
   * Scheduled date time.
   */
  scheduledDateTime?: Date;
}

/**
 * Job stages.
 */
export interface JobStages {
  /**
   * Name of the job stage. Possible values include: 'DeviceOrdered', 'DevicePrepared',
   * 'Dispatched', 'Delivered', 'PickedUp', 'AtAzureDC', 'DataCopy', 'Completed',
   * 'CompletedWithErrors', 'Cancelled', 'Failed_IssueReportedAtCustomer',
   * 'Failed_IssueDetectedAtAzureDC', 'Aborted', 'CompletedWithWarnings',
   * 'ReadyToDispatchFromAzureDC', 'ReadyToReceiveAtAzureDC'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly stageName?: StageName;
  /**
   * Display name of the job stage.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Status of the job stage. Possible values include: 'None', 'InProgress', 'Succeeded', 'Failed',
   * 'Cancelled', 'Cancelling', 'SucceededWithErrors', 'WaitingForCustomerAction',
   * 'SucceededWithWarnings'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly stageStatus?: StageStatus;
  /**
   * Time for the job stage in UTC ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly stageTime?: Date;
  /**
   * Job Stage Details
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobStageDetails?: any;
}

/**
 * Shipping details.
 */
export interface PackageShippingDetails {
  /**
   * Name of the carrier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly carrierName?: string;
  /**
   * Tracking Id of shipment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trackingId?: string;
  /**
   * Url where shipment can be tracked.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trackingUrl?: string;
}

/**
 * Preferences related to the shipment logistics of the sku
 */
export interface TransportPreferences {
  /**
   * Indicates Shipment Logistics type that the customer preferred. Possible values include:
   * 'CustomerManaged', 'MicrosoftManaged'
   */
  preferredShipmentType: TransportShipmentTypes;
}

/**
 * Preferences related to the order
 */
export interface Preferences {
  /**
   * Preferred data center region.
   */
  preferredDataCenterRegion?: string[];
  /**
   * Preferences related to the shipment logistics of the sku.
   */
  transportPreferences?: TransportPreferences;
  /**
   * Preferences related to the Encryption.
   */
  encryptionPreferences?: EncryptionPreferences;
}

/**
 * Encryption key containing details about key to encrypt different keys.
 */
export interface KeyEncryptionKey {
  /**
   * Type of encryption key used for key encryption. Possible values include: 'MicrosoftManaged',
   * 'CustomerManaged'
   */
  kekType: KekType;
  /**
   * Managed identity properties used for key encryption.
   */
  identityProperties?: IdentityProperties;
  /**
   * Key encryption key. It is required in case of Customer managed KekType.
   */
  kekUrl?: string;
  /**
   * Kek vault resource id. It is required in case of Customer managed KekType.
   */
  kekVaultResourceID?: string;
}

/**
 * Model of the Resource.
 */
export interface Resource extends BaseResource {
  /**
   * The location of the resource. This will be one of the supported and registered Azure Regions
   * (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once
   * it is created, but if an identical region is specified on update the request will succeed.
   */
  location: string;
  /**
   * The list of key value pairs that describe the resource. These tags can be used in viewing and
   * grouping this resource (across resource groups).
   */
  tags?: { [propertyName: string]: string };
  /**
   * The sku type.
   */
  sku: Sku;
  /**
   * Msi identity of the resource
   */
  identity?: ResourceIdentity;
}

/**
 * Job Resource.
 */
export interface JobResource extends Resource {
  /**
   * Type of the data transfer. Possible values include: 'ImportToAzure', 'ExportFromAzure'
   */
  transferType: TransferType;
  /**
   * Describes whether the job is cancellable or not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCancellable?: boolean;
  /**
   * Describes whether the job is deletable or not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDeletable?: boolean;
  /**
   * Describes whether the shipping address is editable or not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isShippingAddressEditable?: boolean;
  /**
   * Is Prepare To Ship Enabled on this job
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPrepareToShipEnabled?: boolean;
  /**
   * Name of the stage which is in progress. Possible values include: 'DeviceOrdered',
   * 'DevicePrepared', 'Dispatched', 'Delivered', 'PickedUp', 'AtAzureDC', 'DataCopy', 'Completed',
   * 'CompletedWithErrors', 'Cancelled', 'Failed_IssueReportedAtCustomer',
   * 'Failed_IssueDetectedAtAzureDC', 'Aborted', 'CompletedWithWarnings',
   * 'ReadyToDispatchFromAzureDC', 'ReadyToReceiveAtAzureDC'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: StageName;
  /**
   * Time at which the job was started in UTC ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * Top level error for the job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Details of a job run. This field will only be sent for expand details filter.
   */
  details?: JobDetailsUnion;
  /**
   * Reason for cancellation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cancellationReason?: string;
  /**
   * Delivery type of Job. Possible values include: 'NonScheduled', 'Scheduled'
   */
  deliveryType?: JobDeliveryType;
  /**
   * Delivery Info of Job.
   */
  deliveryInfo?: JobDeliveryInfo;
  /**
   * Flag to indicate cancellation of scheduled job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCancellableWithoutFee?: boolean;
  /**
   * Name of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Id of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Job details for update.
 */
export interface UpdateJobDetails {
  /**
   * Contact details for notification and shipping.
   */
  contactDetails?: ContactDetails;
  /**
   * Shipping address of the customer.
   */
  shippingAddress?: ShippingAddress;
  /**
   * Key encryption key for the job.
   */
  keyEncryptionKey?: KeyEncryptionKey;
}

/**
 * Class defining User assigned identity details.
 */
export interface UserAssignedIdentity {
  /**
   * The principal id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
}

/**
 * Msi identity details of the resource
 */
export interface ResourceIdentity {
  /**
   * Identity type
   */
  type?: string;
  /**
   * Service Principal Id backing the Msi
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * Home Tenant Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * User Assigned Identities
   */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/**
 * The JobResourceUpdateParameter.
 */
export interface JobResourceUpdateParameter {
  /**
   * Details of a job to be updated.
   */
  details?: UpdateJobDetails;
  /**
   * The list of key value pairs that describe the resource. These tags can be used in viewing and
   * grouping this resource (across resource groups).
   */
  tags?: { [propertyName: string]: string };
  /**
   * Msi identity of the resource
   */
  identity?: ResourceIdentity;
}

/**
 * Details of the managed disks.
 */
export interface ManagedDiskDetails {
  /**
   * Polymorphic Discriminator
   */
  dataAccountType: "ManagedDisk";
  /**
   * Password for all the shares to be created on the device. Should not be passed for
   * TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password
   * itself. This will not be returned in Get Call. Password Requirements :  Password must be
   * minimum of 12 and maximum of 64 characters. Password must have at least one uppercase
   * alphabet, one number and one special character. Password cannot have the following characters
   * : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
   */
  sharePassword?: string;
  /**
   * Resource Group Id of the compute disks.
   */
  resourceGroupId: string;
  /**
   * Resource Id of the storage account that can be used to copy the vhd for staging.
   */
  stagingStorageAccountId: string;
}

/**
 * Operation display
 */
export interface OperationDisplay {
  /**
   * Provider name.
   */
  provider?: string;
  /**
   * Resource name.
   */
  resource?: string;
  /**
   * Localized name of the operation for display purpose.
   */
  operation?: string;
  /**
   * Localized description of the operation for display purpose.
   */
  description?: string;
}

/**
 * Operation entity.
 */
export interface Operation {
  /**
   * Name of the operation. Format:
   * {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Operation display values.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * Operation properties.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: any;
  /**
   * Origin of the operation. Can be : user|system|user,system
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: string;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction?: boolean;
}

/**
 * Request to validate preference of transport and data center.
 */
export interface PreferencesValidationRequest {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidatePreferences";
  /**
   * Preference of transport and data center.
   */
  preference?: Preferences;
  /**
   * Device type to be used for the job. Possible values include: 'DataBox', 'DataBoxDisk',
   * 'DataBoxHeavy'
   */
  deviceType: SkuName;
}

/**
 * Properties of data center and transport preference validation response.
 */
export interface PreferencesValidationResponseProperties {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidatePreferences";
  /**
   * Error code and message of validation response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Validation status of requested data center and transport. Possible values include: 'Valid',
   * 'Invalid', 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ValidationStatus;
}

/**
 * Request body to get the transport availability for given sku.
 */
export interface TransportAvailabilityRequest {
  /**
   * Type of the device. Possible values include: 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
   */
  skuName?: SkuName;
}

/**
 * Request body to get the configuration for the region.
 */
export interface RegionConfigurationRequest {
  /**
   * Request body to get the availability for scheduling orders.
   */
  scheduleAvailabilityRequest?: ScheduleAvailabilityRequestUnion;
  /**
   * Request body to get the transport availability for given sku.
   */
  transportAvailabilityRequest?: TransportAvailabilityRequest;
}

/**
 * Schedule availability for given sku in a region.
 */
export interface ScheduleAvailabilityResponse {
  /**
   * List of dates available to schedule
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availableDates?: Date[] | string[];
}

/**
 * Transport options availability details for given region.
 */
export interface TransportAvailabilityDetails {
  /**
   * Transport Shipment Type supported for given region. Possible values include:
   * 'CustomerManaged', 'MicrosoftManaged'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shipmentType?: TransportShipmentTypes;
}

/**
 * Transport options available for given sku in a region.
 */
export interface TransportAvailabilityResponse {
  /**
   * List of transport availability details for given region
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transportAvailabilityDetails?: TransportAvailabilityDetails[];
}

/**
 * Configuration response specific to a region.
 */
export interface RegionConfigurationResponse {
  /**
   * Schedule availability for given sku in a region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scheduleAvailabilityResponse?: ScheduleAvailabilityResponse;
  /**
   * Transport options available for given sku in a region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly transportAvailabilityResponse?: TransportAvailabilityResponse;
}

/**
 * Shipment pick up request details.
 */
export interface ShipmentPickUpRequest {
  /**
   * Minimum date after which the pick up should commence, this must be in local time of pick up
   * area.
   */
  startTime: Date;
  /**
   * Maximum date before which the pick up should commence, this must be in local time of pick up
   * area.
   */
  endTime: Date;
  /**
   * Shipment Location in the pickup place. Eg.front desk
   */
  shipmentLocation: string;
}

/**
 * Shipment pick up response.
 */
export interface ShipmentPickUpResponse {
  /**
   * Confirmation number for the pick up request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly confirmationNumber?: string;
  /**
   * Time by which shipment should be ready for pick up, this is in local time of pick up area.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readyByTime?: Date;
}

/**
 * Request to validate sku availability.
 */
export interface SkuAvailabilityValidationRequest {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateSkuAvailability";
  /**
   * Device type to be used for the job. Possible values include: 'DataBox', 'DataBoxDisk',
   * 'DataBoxHeavy'
   */
  deviceType: SkuName;
  /**
   * Type of the transfer. Possible values include: 'ImportToAzure', 'ExportFromAzure'
   */
  transferType: TransferType;
  /**
   * ISO country code. Country for hardware shipment. For codes check:
   * https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
   */
  country: string;
  /**
   * Location for data transfer. For locations check:
   * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  location: string;
}

/**
 * Properties of sku availability validation response.
 */
export interface SkuAvailabilityValidationResponseProperties {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateSkuAvailability";
  /**
   * Error code and message of validation response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Sku availability validation status. Possible values include: 'Valid', 'Invalid', 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ValidationStatus;
}

/**
 * Details for the storage account.
 */
export interface StorageAccountDetails {
  /**
   * Polymorphic Discriminator
   */
  dataAccountType: "StorageAccount";
  /**
   * Password for all the shares to be created on the device. Should not be passed for
   * TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password
   * itself. This will not be returned in Get Call. Password Requirements :  Password must be
   * minimum of 12 and maximum of 64 characters. Password must have at least one uppercase
   * alphabet, one number and one special character. Password cannot have the following characters
   * : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
   */
  sharePassword?: string;
  /**
   * Storage Account Resource Id.
   */
  storageAccountId: string;
}

/**
 * Request to validate subscription permission to create jobs.
 */
export interface SubscriptionIsAllowedToCreateJobValidationRequest {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateSubscriptionIsAllowedToCreateJob";
}

/**
 * Properties of subscription permission to create job validation response.
 */
export interface SubscriptionIsAllowedToCreateJobValidationResponseProperties {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateSubscriptionIsAllowedToCreateJob";
  /**
   * Error code and message of validation response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: CloudError;
  /**
   * Validation status of subscription permission to create job. Possible values include: 'Valid',
   * 'Invalid', 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ValidationStatus;
}

/**
 * Unencrypted credentials for accessing device.
 */
export interface UnencryptedCredentials {
  /**
   * Name of the job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobName?: string;
  /**
   * Secrets related to this job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobSecrets?: JobSecretsUnion;
}

/**
 * The requirements to validate customer address where the device needs to be shipped.
 */
export interface ValidateAddress {
  /**
   * Polymorphic Discriminator
   */
  validationType: "ValidateAddress";
  /**
   * Shipping address of the customer.
   */
  shippingAddress: ShippingAddress;
  /**
   * Device type to be used for the job. Possible values include: 'DataBox', 'DataBoxDisk',
   * 'DataBoxHeavy'
   */
  deviceType: SkuName;
  /**
   * Preferences related to the shipment logistics of the sku.
   */
  transportPreferences?: TransportPreferences;
}

/**
 * Response of pre job creation validations.
 */
export interface ValidationResponse {
  /**
   * Overall validation status. Possible values include: 'AllValidToProceed',
   * 'InputsRevisitRequired', 'CertainInputValidationsSkipped'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: OverallValidationStatus;
  /**
   * List of response details contain validationType and its response as key and value
   * respectively.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly individualResponseDetails?: ValidationInputResponseUnion[];
}

/**
 * Optional Parameters.
 */
export interface JobsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * $expand is supported on details parameter for job, which provides details on the job stages.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Defines the If-Match condition. The patch will be performed only if the ETag of the job on the
   * server matches this value.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Defines the If-Match condition. The patch will be performed only if the ETag of the job on the
   * server matches this value.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ServiceRegionConfigurationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Request body to get the availability for scheduling orders.
   */
  scheduleAvailabilityRequest?: ScheduleAvailabilityRequestUnion;
  /**
   * Request body to get the transport availability for given sku.
   */
  transportAvailabilityRequest?: TransportAvailabilityRequest;
}

/**
 * Optional Parameters.
 */
export interface ServiceRegionConfigurationByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Request body to get the availability for scheduling orders.
   */
  scheduleAvailabilityRequest?: ScheduleAvailabilityRequestUnion;
  /**
   * Request body to get the transport availability for given sku.
   */
  transportAvailabilityRequest?: TransportAvailabilityRequest;
}

/**
 * An interface representing DataBoxManagementClientOptions.
 */
export interface DataBoxManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Operation Collection.
 * @extends Array<Operation>
 */
export interface OperationList extends Array<Operation> {
  /**
   * Link for the next set of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * Job Resource Collection
 * @extends Array<JobResource>
 */
export interface JobResourceList extends Array<JobResource> {
  /**
   * Link for the next set of job resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of unencrypted credentials for accessing device.
 * @extends Array<UnencryptedCredentials>
 */
export interface UnencryptedCredentialsList extends Array<UnencryptedCredentials> {
  /**
   * Link for the next set of unencrypted credentials.
   */
  nextLink?: string;
}

/**
 * @interface
 * The available skus operation response.
 * @extends Array<SkuInformation>
 */
export interface AvailableSkusResult extends Array<SkuInformation> {
  /**
   * Link for the next set of skus.
   */
  nextLink?: string;
}

/**
 * Defines values for DataAccountType.
 * Possible values include: 'StorageAccount', 'ManagedDisk'
 * @readonly
 * @enum {string}
 */
export type DataAccountType = 'StorageAccount' | 'ManagedDisk';

/**
 * Defines values for ShareDestinationFormatType.
 * Possible values include: 'UnknownType', 'HCS', 'BlockBlob', 'PageBlob', 'AzureFile',
 * 'ManagedDisk', 'AzurePremiumFiles'
 * @readonly
 * @enum {string}
 */
export type ShareDestinationFormatType = 'UnknownType' | 'HCS' | 'BlockBlob' | 'PageBlob' | 'AzureFile' | 'ManagedDisk' | 'AzurePremiumFiles';

/**
 * Defines values for AccessProtocol.
 * Possible values include: 'SMB', 'NFS'
 * @readonly
 * @enum {string}
 */
export type AccessProtocol = 'SMB' | 'NFS';

/**
 * Defines values for AddressValidationStatus.
 * Possible values include: 'Valid', 'Invalid', 'Ambiguous'
 * @readonly
 * @enum {string}
 */
export type AddressValidationStatus = 'Valid' | 'Invalid' | 'Ambiguous';

/**
 * Defines values for AddressType.
 * Possible values include: 'None', 'Residential', 'Commercial'
 * @readonly
 * @enum {string}
 */
export type AddressType = 'None' | 'Residential' | 'Commercial';

/**
 * Defines values for TransferType.
 * Possible values include: 'ImportToAzure', 'ExportFromAzure'
 * @readonly
 * @enum {string}
 */
export type TransferType = 'ImportToAzure' | 'ExportFromAzure';

/**
 * Defines values for SkuName.
 * Possible values include: 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'DataBox' | 'DataBoxDisk' | 'DataBoxHeavy';

/**
 * Defines values for SkuDisabledReason.
 * Possible values include: 'None', 'Country', 'Region', 'Feature', 'OfferType',
 * 'NoSubscriptionInfo'
 * @readonly
 * @enum {string}
 */
export type SkuDisabledReason = 'None' | 'Country' | 'Region' | 'Feature' | 'OfferType' | 'NoSubscriptionInfo';

/**
 * Defines values for NotificationStageName.
 * Possible values include: 'DevicePrepared', 'Dispatched', 'Delivered', 'PickedUp', 'AtAzureDC',
 * 'DataCopy'
 * @readonly
 * @enum {string}
 */
export type NotificationStageName = 'DevicePrepared' | 'Dispatched' | 'Delivered' | 'PickedUp' | 'AtAzureDC' | 'DataCopy';

/**
 * Defines values for ValidationStatus.
 * Possible values include: 'Valid', 'Invalid', 'Skipped'
 * @readonly
 * @enum {string}
 */
export type ValidationStatus = 'Valid' | 'Invalid' | 'Skipped';

/**
 * Defines values for CopyStatus.
 * Possible values include: 'NotStarted', 'InProgress', 'Completed', 'CompletedWithErrors',
 * 'Failed', 'NotReturned', 'HardwareError', 'DeviceFormatted', 'DeviceMetadataModified',
 * 'StorageAccountNotAccessible', 'UnsupportedData'
 * @readonly
 * @enum {string}
 */
export type CopyStatus = 'NotStarted' | 'InProgress' | 'Completed' | 'CompletedWithErrors' | 'Failed' | 'NotReturned' | 'HardwareError' | 'DeviceFormatted' | 'DeviceMetadataModified' | 'StorageAccountNotAccessible' | 'UnsupportedData';

/**
 * Defines values for TransferConfigurationType.
 * Possible values include: 'TransferAll', 'TransferUsingFilter'
 * @readonly
 * @enum {string}
 */
export type TransferConfigurationType = 'TransferAll' | 'TransferUsingFilter';

/**
 * Defines values for FilterFileType.
 * Possible values include: 'AzureBlob', 'AzureFile'
 * @readonly
 * @enum {string}
 */
export type FilterFileType = 'AzureBlob' | 'AzureFile';

/**
 * Defines values for LogCollectionLevel.
 * Possible values include: 'Error', 'Verbose'
 * @readonly
 * @enum {string}
 */
export type LogCollectionLevel = 'Error' | 'Verbose';

/**
 * Defines values for DoubleEncryption.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type DoubleEncryption = 'Enabled' | 'Disabled';

/**
 * Defines values for StageName.
 * Possible values include: 'DeviceOrdered', 'DevicePrepared', 'Dispatched', 'Delivered',
 * 'PickedUp', 'AtAzureDC', 'DataCopy', 'Completed', 'CompletedWithErrors', 'Cancelled',
 * 'Failed_IssueReportedAtCustomer', 'Failed_IssueDetectedAtAzureDC', 'Aborted',
 * 'CompletedWithWarnings', 'ReadyToDispatchFromAzureDC', 'ReadyToReceiveAtAzureDC'
 * @readonly
 * @enum {string}
 */
export type StageName = 'DeviceOrdered' | 'DevicePrepared' | 'Dispatched' | 'Delivered' | 'PickedUp' | 'AtAzureDC' | 'DataCopy' | 'Completed' | 'CompletedWithErrors' | 'Cancelled' | 'Failed_IssueReportedAtCustomer' | 'Failed_IssueDetectedAtAzureDC' | 'Aborted' | 'CompletedWithWarnings' | 'ReadyToDispatchFromAzureDC' | 'ReadyToReceiveAtAzureDC';

/**
 * Defines values for StageStatus.
 * Possible values include: 'None', 'InProgress', 'Succeeded', 'Failed', 'Cancelled', 'Cancelling',
 * 'SucceededWithErrors', 'WaitingForCustomerAction', 'SucceededWithWarnings'
 * @readonly
 * @enum {string}
 */
export type StageStatus = 'None' | 'InProgress' | 'Succeeded' | 'Failed' | 'Cancelled' | 'Cancelling' | 'SucceededWithErrors' | 'WaitingForCustomerAction' | 'SucceededWithWarnings';

/**
 * Defines values for TransportShipmentTypes.
 * Possible values include: 'CustomerManaged', 'MicrosoftManaged'
 * @readonly
 * @enum {string}
 */
export type TransportShipmentTypes = 'CustomerManaged' | 'MicrosoftManaged';

/**
 * Defines values for KekType.
 * Possible values include: 'MicrosoftManaged', 'CustomerManaged'
 * @readonly
 * @enum {string}
 */
export type KekType = 'MicrosoftManaged' | 'CustomerManaged';

/**
 * Defines values for JobDeliveryType.
 * Possible values include: 'NonScheduled', 'Scheduled'
 * @readonly
 * @enum {string}
 */
export type JobDeliveryType = 'NonScheduled' | 'Scheduled';

/**
 * Defines values for OverallValidationStatus.
 * Possible values include: 'AllValidToProceed', 'InputsRevisitRequired',
 * 'CertainInputValidationsSkipped'
 * @readonly
 * @enum {string}
 */
export type OverallValidationStatus = 'AllValidToProceed' | 'InputsRevisitRequired' | 'CertainInputValidationsSkipped';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type JobsListResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type JobsListByResourceGroupResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type JobsCreateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type JobsUpdateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the bookShipmentPickUp operation.
 */
export type JobsBookShipmentPickUpResponse = ShipmentPickUpResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShipmentPickUpResponse;
    };
};

/**
 * Contains response data for the listCredentials operation.
 */
export type JobsListCredentialsResponse = UnencryptedCredentialsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UnencryptedCredentialsList;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type JobsBeginCreateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type JobsBeginUpdateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type JobsListNextResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type JobsListByResourceGroupNextResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the listAvailableSkusByResourceGroup operation.
 */
export type ServiceListAvailableSkusByResourceGroupResponse = AvailableSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableSkusResult;
    };
};

/**
 * Contains response data for the validateAddressMethod operation.
 */
export type ServiceValidateAddressMethodResponse = AddressValidationOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddressValidationOutput;
    };
};

/**
 * Contains response data for the validateInputsByResourceGroup operation.
 */
export type ServiceValidateInputsByResourceGroupResponse = ValidationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidationResponse;
    };
};

/**
 * Contains response data for the validateInputs operation.
 */
export type ServiceValidateInputsResponse = ValidationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidationResponse;
    };
};

/**
 * Contains response data for the regionConfiguration operation.
 */
export type ServiceRegionConfigurationResponse = RegionConfigurationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegionConfigurationResponse;
    };
};

/**
 * Contains response data for the regionConfigurationByResourceGroup operation.
 */
export type ServiceRegionConfigurationByResourceGroupResponse = RegionConfigurationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegionConfigurationResponse;
    };
};

/**
 * Contains response data for the listAvailableSkusByResourceGroupNext operation.
 */
export type ServiceListAvailableSkusByResourceGroupNextResponse = AvailableSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableSkusResult;
    };
};
