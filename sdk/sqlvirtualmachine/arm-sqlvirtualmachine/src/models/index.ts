/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A load balancer configuration for an availability group listener. */
export interface LoadBalancerConfiguration {
  /** Private IP address. */
  privateIpAddress?: PrivateIPAddress;
  /** Resource id of the public IP. */
  publicIpAddressResourceId?: string;
  /** Resource id of the load balancer. */
  loadBalancerResourceId?: string;
  /** Probe port. */
  probePort?: number;
  /** List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener. */
  sqlVirtualMachineInstances?: string[];
}

/** A private IP address bound to the availability group listener. */
export interface PrivateIPAddress {
  /** Private IP address bound to the availability group listener. */
  ipAddress?: string;
  /** Subnet used to include private IP. */
  subnetResourceId?: string;
}

/** Multi subnet ip configuration for an availability group listener. */
export interface MultiSubnetIpConfiguration {
  /** Private IP address. */
  privateIpAddress: PrivateIPAddress;
  /** SQL virtual machine instance resource id that are enrolled into the availability group listener. */
  sqlVirtualMachineInstance: string;
}

/** Availability group configuration. */
export interface AgConfiguration {
  /** Replica configurations. */
  replicas?: AgReplica[];
}

/** Availability group replica configuration. */
export interface AgReplica {
  /** Sql VirtualMachine Instance Id. */
  sqlVirtualMachineInstanceId?: string;
  /** Replica Role in availability group. */
  role?: Role;
  /** Replica commit mode in availability group. */
  commit?: Commit;
  /** Replica failover mode in availability group. */
  failover?: Failover;
  /** Replica readable secondary mode in availability group. */
  readableSecondary?: ReadableSecondary;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** ARM resource. */
export interface Resource {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** A list of availability group listeners. */
export interface AvailabilityGroupListenerListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: AvailabilityGroupListener[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Result of the request to list SQL operations. */
export interface OperationListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** SQL REST API operation definition. */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The localized display information for this particular operation / action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly display?: OperationDisplay;
  /**
   * The intended executor of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: OperationOrigin;
  /**
   * Additional descriptions for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: { [propertyName: string]: Record<string, unknown> };
}

/** Display metadata associated with the operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Active Directory account details to operate Windows Server Failover Cluster. */
export interface WsfcDomainProfile {
  /** Fully qualified name of the domain. */
  domainFqdn?: string;
  /** Organizational Unit path in which the nodes and cluster will be present. */
  ouPath?: string;
  /** Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain). */
  clusterBootstrapAccount?: string;
  /** Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster. */
  clusterOperatorAccount?: string;
  /** Account name under which SQL service will run on all participating SQL virtual machines in the cluster. */
  sqlServiceAccount?: string;
  /** Optional path for fileshare witness. */
  fileShareWitnessPath?: string;
  /** Fully qualified ARM resource id of the witness storage account. */
  storageAccountUrl?: string;
  /** Primary key of the witness storage account. */
  storageAccountPrimaryKey?: string;
  /** Cluster subnet type. */
  clusterSubnetType?: ClusterSubnetType;
}

/** An update to a SQL virtual machine group. */
export interface SqlVirtualMachineGroupUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** A list of SQL virtual machine groups. */
export interface SqlVirtualMachineGroupListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SqlVirtualMachineGroup[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A list of SQL virtual machines. */
export interface SqlVirtualMachineListResult {
  /**
   * Array of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SqlVirtualMachine[];
  /**
   * Link to retrieve next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Azure Active Directory identity configuration for a resource. */
export interface ResourceIdentity {
  /**
   * The Azure Active Directory principal id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /** The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource. */
  type?: IdentityType;
  /**
   * The Azure Active Directory tenant id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
}

/** Domain credentials for setting up Windows Server Failover Cluster for SQL availability group. */
export interface WsfcDomainCredentials {
  /** Cluster bootstrap account password. */
  clusterBootstrapAccountPassword?: string;
  /** Cluster operator account password. */
  clusterOperatorAccountPassword?: string;
  /** SQL service account password. */
  sqlServiceAccountPassword?: string;
}

/** Set a patching window during which Windows and SQL patches will be applied. */
export interface AutoPatchingSettings {
  /** Enable or disable autopatching on SQL virtual machine. */
  enable?: boolean;
  /** Day of week to apply the patch on. */
  dayOfWeek?: DayOfWeek;
  /** Hour of the day when patching is initiated. Local VM time. */
  maintenanceWindowStartingHour?: number;
  /** Duration of patching. */
  maintenanceWindowDuration?: number;
}

/** Configure backups for databases in your SQL virtual machine. */
export interface AutoBackupSettings {
  /** Enable or disable autobackup on SQL virtual machine. */
  enable?: boolean;
  /** Enable or disable encryption for backup on SQL virtual machine. */
  enableEncryption?: boolean;
  /** Retention period of backup: 1-90 days. */
  retentionPeriod?: number;
  /** Storage account url where backup will be taken to. */
  storageAccountUrl?: string;
  /** Storage container name where backup will be taken to. */
  storageContainerName?: string;
  /** Storage account key where backup will be taken to. */
  storageAccessKey?: string;
  /** Password for encryption on backup. */
  password?: string;
  /** Include or exclude system databases from auto backup. */
  backupSystemDbs?: boolean;
  /** Backup schedule type. */
  backupScheduleType?: BackupScheduleType;
  /** Frequency of full backups. In both cases, full backups begin during the next scheduled time window. */
  fullBackupFrequency?: FullBackupFrequencyType;
  /** Days of the week for the backups when FullBackupFrequency is set to Weekly. */
  daysOfWeek?: AutoBackupDaysOfWeek[];
  /** Start time of a given day during which full backups can take place. 0-23 hours. */
  fullBackupStartTime?: number;
  /** Duration of the time window of a given day during which full backups can take place. 1-23 hours. */
  fullBackupWindowHours?: number;
  /** Frequency of log backups. 5-60 minutes. */
  logBackupFrequency?: number;
}

/** Configure your SQL virtual machine to be able to connect to the Azure Key Vault service. */
export interface KeyVaultCredentialSettings {
  /** Enable or disable key vault credential setting. */
  enable?: boolean;
  /** Credential name. */
  credentialName?: string;
  /** Azure Key Vault url. */
  azureKeyVaultUrl?: string;
  /** Service principal name to access key vault. */
  servicePrincipalName?: string;
  /** Service principal name secret to access key vault. */
  servicePrincipalSecret?: string;
}

/** Set the connectivity, storage and workload settings. */
export interface ServerConfigurationsManagementSettings {
  /** SQL connectivity type settings. */
  sqlConnectivityUpdateSettings?: SqlConnectivityUpdateSettings;
  /** SQL workload type settings. */
  sqlWorkloadTypeUpdateSettings?: SqlWorkloadTypeUpdateSettings;
  /** SQL storage update settings. */
  sqlStorageUpdateSettings?: SqlStorageUpdateSettings;
  /** Additional SQL feature settings. */
  additionalFeaturesServerConfigurations?: AdditionalFeaturesServerConfigurations;
  /** SQL Instance settings. */
  sqlInstanceSettings?: SQLInstanceSettings;
  /** Azure AD authentication Settings. */
  azureAdAuthenticationSettings?: AADAuthenticationSettings;
}

/** Set the access level and network port settings for SQL Server. */
export interface SqlConnectivityUpdateSettings {
  /** SQL Server connectivity option. */
  connectivityType?: ConnectivityType;
  /** SQL Server port. */
  port?: number;
  /** SQL Server sysadmin login to create. */
  sqlAuthUpdateUserName?: string;
  /** SQL Server sysadmin login password. */
  sqlAuthUpdatePassword?: string;
}

/** Set workload type to optimize storage for SQL Server. */
export interface SqlWorkloadTypeUpdateSettings {
  /** SQL Server workload type. */
  sqlWorkloadType?: SqlWorkloadType;
}

/** Set disk storage settings for SQL Server. */
export interface SqlStorageUpdateSettings {
  /** Virtual machine disk count. */
  diskCount?: number;
  /** Device id of the first disk to be updated. */
  startingDeviceId?: number;
  /** Disk configuration to apply to SQL Server. */
  diskConfigurationType?: DiskConfigurationType;
}

/** Additional SQL Server feature settings. */
export interface AdditionalFeaturesServerConfigurations {
  /** Enable or disable R services (SQL 2016 onwards). */
  isRServicesEnabled?: boolean;
}

/** Set the server/instance-level settings for SQL Server. */
export interface SQLInstanceSettings {
  /** SQL Server Collation. */
  collation?: string;
  /** SQL Server MAXDOP. */
  maxDop?: number;
  /** SQL Server Optimize for Adhoc workloads. */
  isOptimizeForAdHocWorkloadsEnabled?: boolean;
  /** SQL Server minimum memory. */
  minServerMemoryMB?: number;
  /** SQL Server maximum memory. */
  maxServerMemoryMB?: number;
  /** SQL Server LPIM. */
  isLpimEnabled?: boolean;
  /** SQL Server IFI. */
  isIfiEnabled?: boolean;
}

/** Enable AAD authentication for SQL VM. */
export interface AADAuthenticationSettings {
  /** The client Id of the Managed Identity to query Microsoft Graph API. An empty string must be used for the system assigned Managed Identity */
  clientId?: string;
}

/** Storage Configurations for SQL Data, Log and TempDb. */
export interface StorageConfigurationSettings {
  /** SQL Server Data Storage Settings. */
  sqlDataSettings?: SQLStorageSettings;
  /** SQL Server Log Storage Settings. */
  sqlLogSettings?: SQLStorageSettings;
  /** SQL Server TempDb Storage Settings. */
  sqlTempDbSettings?: SQLTempDbSettings;
  /** SQL Server SystemDb Storage on DataPool if true. */
  sqlSystemDbOnDataDisk?: boolean;
  /** Disk configuration to apply to SQL Server. */
  diskConfigurationType?: DiskConfigurationType;
  /** Storage workload type. */
  storageWorkloadType?: StorageWorkloadType;
}

/** Set disk storage settings for SQL Server. */
export interface SQLStorageSettings {
  /** Logical Unit Numbers for the disks. */
  luns?: number[];
  /** SQL Server default file path */
  defaultFilePath?: string;
}

/** Set tempDb storage settings for SQL Server. */
export interface SQLTempDbSettings {
  /** SQL Server tempdb data file size */
  dataFileSize?: number;
  /** SQL Server tempdb data file autoGrowth size */
  dataGrowth?: number;
  /** SQL Server tempdb log file size */
  logFileSize?: number;
  /** SQL Server tempdb log file autoGrowth size */
  logGrowth?: number;
  /** SQL Server tempdb data file count */
  dataFileCount?: number;
  /** SQL Server tempdb persist folder choice */
  persistFolder?: boolean;
  /** SQL Server tempdb persist folder location */
  persistFolderPath?: string;
  /** Logical Unit Numbers for the disks. */
  luns?: number[];
  /** SQL Server default file path */
  defaultFilePath?: string;
}

/** Status of last troubleshooting operation on this SQL VM */
export interface TroubleshootingStatus {
  /**
   * Root cause of the issue
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rootCause?: string;
  /**
   * Last troubleshooting trigger time in UTC timezone
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastTriggerTimeUtc?: Date;
  /**
   * Start time in UTC timezone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTimeUtc?: Date;
  /**
   * End time in UTC timezone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTimeUtc?: Date;
  /**
   * SQL VM troubleshooting scenario.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly troubleshootingScenario?: TroubleshootingScenario;
  /**
   * Troubleshooting properties
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: TroubleshootingAdditionalProperties;
}

/** SQL VM Troubleshooting additional properties. */
export interface TroubleshootingAdditionalProperties {
  /** The unhealthy replica information */
  unhealthyReplicaInfo?: UnhealthyReplicaInfo;
}

/** SQL VM Troubleshoot UnhealthyReplica scenario information. */
export interface UnhealthyReplicaInfo {
  /** The name of the availability group */
  availabilityGroupName?: string;
}

/** Configure SQL best practices Assessment for databases in your SQL virtual machine. */
export interface AssessmentSettings {
  /** Enable or disable SQL best practices Assessment feature on SQL virtual machine. */
  enable?: boolean;
  /** Run SQL best practices Assessment immediately on SQL virtual machine. */
  runImmediately?: boolean;
  /** Schedule for SQL best practices Assessment. */
  schedule?: Schedule;
}

/** Set assessment schedule for SQL Server. */
export interface Schedule {
  /** Enable or disable assessment schedule on SQL virtual machine. */
  enable?: boolean;
  /** Number of weeks to schedule between 2 assessment runs. Takes value from 1-6 */
  weeklyInterval?: number;
  /** Occurrence of the DayOfWeek day within a month to schedule assessment. Takes values: 1,2,3,4 and -1. Use -1 for last DayOfWeek day of the month */
  monthlyOccurrence?: number;
  /** Day of the week to run assessment. */
  dayOfWeek?: AssessmentDayOfWeek;
  /** Time of the day in HH:mm format. Eg. 17:30 */
  startTime?: string;
}

/** An update to a SQL virtual machine. */
export interface SqlVirtualMachineUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Details required for SQL VM troubleshooting */
export interface SqlVmTroubleshooting {
  /** Start time in UTC timezone. */
  startTimeUtc?: Date;
  /** End time in UTC timezone. */
  endTimeUtc?: Date;
  /** SQL VM troubleshooting scenario. */
  troubleshootingScenario?: TroubleshootingScenario;
  /** Troubleshooting properties */
  properties?: TroubleshootingAdditionalProperties;
  /**
   * Virtual machine resource id for response.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly virtualMachineResourceId?: string;
}

/** ARM proxy resource. */
export interface ProxyResource extends Resource {}

/** ARM tracked top level resource. */
export interface TrackedResource extends Resource {
  /** Resource location. */
  location: string;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** A SQL Server availability group listener. */
export interface AvailabilityGroupListener extends ProxyResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Provisioning state to track the async operation status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** Name of the availability group. */
  availabilityGroupName?: string;
  /** List of load balancer configurations for an availability group listener. */
  loadBalancerConfigurations?: LoadBalancerConfiguration[];
  /** List of multi subnet IP configurations for an AG listener. */
  multiSubnetIpConfigurations?: MultiSubnetIpConfiguration[];
  /** Create a default availability group if it does not exist. */
  createDefaultAvailabilityGroupIfNotExist?: boolean;
  /** Listener port. */
  port?: number;
  /** Availability Group configuration. */
  availabilityGroupConfiguration?: AgConfiguration;
}

/** A SQL virtual machine group. */
export interface SqlVirtualMachineGroup extends TrackedResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Provisioning state to track the async operation status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016. */
  sqlImageOffer?: string;
  /** SQL image sku. */
  sqlImageSku?: SqlVmGroupImageSku;
  /**
   * Scale type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scaleType?: ScaleType;
  /**
   * Type of cluster manager: Windows Server Failover Cluster (WSFC), implied by the scale type of the group and the OS type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterManagerType?: ClusterManagerType;
  /**
   * Cluster type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterConfiguration?: ClusterConfiguration;
  /** Cluster Active Directory domain profile. */
  wsfcDomainProfile?: WsfcDomainProfile;
}

/** A SQL virtual machine. */
export interface SqlVirtualMachine extends TrackedResource {
  /** Azure Active Directory identity of the server. */
  identity?: ResourceIdentity;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** ARM Resource id of underlying virtual machine created from SQL marketplace image. */
  virtualMachineResourceId?: string;
  /**
   * Provisioning state to track the async operation status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016. */
  sqlImageOffer?: string;
  /** SQL Server license type. */
  sqlServerLicenseType?: SqlServerLicenseType;
  /** SQL Server Management type. */
  sqlManagement?: SqlManagementMode;
  /** SQL IaaS Agent least privilege mode. */
  leastPrivilegeMode?: LeastPrivilegeMode;
  /** SQL Server edition type. */
  sqlImageSku?: SqlImageSku;
  /** ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of. */
  sqlVirtualMachineGroupResourceId?: string;
  /** Domain credentials for setting up Windows Server Failover Cluster for SQL availability group. */
  wsfcDomainCredentials?: WsfcDomainCredentials;
  /** Domain credentials for setting up Windows Server Failover Cluster for SQL availability group. */
  wsfcStaticIp?: string;
  /** Auto patching settings for applying critical security updates to SQL virtual machine. */
  autoPatchingSettings?: AutoPatchingSettings;
  /** Auto backup settings for SQL Server. */
  autoBackupSettings?: AutoBackupSettings;
  /** Key vault credential settings. */
  keyVaultCredentialSettings?: KeyVaultCredentialSettings;
  /** SQL Server configuration management settings. */
  serverConfigurationsManagementSettings?: ServerConfigurationsManagementSettings;
  /** Storage Configuration Settings. */
  storageConfigurationSettings?: StorageConfigurationSettings;
  /**
   * Troubleshooting status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly troubleshootingStatus?: TroubleshootingStatus;
  /** SQL best practices Assessment Settings. */
  assessmentSettings?: AssessmentSettings;
  /** Enable automatic upgrade of Sql IaaS extension Agent. */
  enableAutomaticUpgrade?: boolean;
}

/** Defines headers for AvailabilityGroupListeners_delete operation. */
export interface AvailabilityGroupListenersDeleteHeaders {
  location?: string;
}

/** Defines headers for SqlVirtualMachineGroups_delete operation. */
export interface SqlVirtualMachineGroupsDeleteHeaders {
  location?: string;
}

/** Defines headers for SqlVirtualMachines_delete operation. */
export interface SqlVirtualMachinesDeleteHeaders {
  location?: string;
}

/** Defines headers for SqlVirtualMachines_startAssessment operation. */
export interface SqlVirtualMachinesStartAssessmentHeaders {
  location?: string;
}

/** Defines headers for SqlVirtualMachines_redeploy operation. */
export interface SqlVirtualMachinesRedeployHeaders {
  location?: string;
}

/** Defines headers for SqlVirtualMachineTroubleshoot_troubleshoot operation. */
export interface SqlVirtualMachineTroubleshootTroubleshootHeaders {
  location?: string;
}

/** Known values of {@link Role} that the service accepts. */
export enum KnownRole {
  /** Primary */
  Primary = "PRIMARY",
  /** Secondary */
  Secondary = "SECONDARY"
}

/**
 * Defines values for Role. \
 * {@link KnownRole} can be used interchangeably with Role,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PRIMARY** \
 * **SECONDARY**
 */
export type Role = string;

/** Known values of {@link Commit} that the service accepts. */
export enum KnownCommit {
  /** SynchronousCommit */
  SynchronousCommit = "SYNCHRONOUS_COMMIT",
  /** AsynchronousCommit */
  AsynchronousCommit = "ASYNCHRONOUS_COMMIT"
}

/**
 * Defines values for Commit. \
 * {@link KnownCommit} can be used interchangeably with Commit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SYNCHRONOUS_COMMIT** \
 * **ASYNCHRONOUS_COMMIT**
 */
export type Commit = string;

/** Known values of {@link Failover} that the service accepts. */
export enum KnownFailover {
  /** Automatic */
  Automatic = "AUTOMATIC",
  /** Manual */
  Manual = "MANUAL"
}

/**
 * Defines values for Failover. \
 * {@link KnownFailover} can be used interchangeably with Failover,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AUTOMATIC** \
 * **MANUAL**
 */
export type Failover = string;

/** Known values of {@link ReadableSecondary} that the service accepts. */
export enum KnownReadableSecondary {
  /** NO */
  NO = "NO",
  /** ALL */
  ALL = "ALL",
  /** ReadOnly */
  ReadOnly = "READ_ONLY"
}

/**
 * Defines values for ReadableSecondary. \
 * {@link KnownReadableSecondary} can be used interchangeably with ReadableSecondary,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NO** \
 * **ALL** \
 * **READ_ONLY**
 */
export type ReadableSecondary = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link OperationOrigin} that the service accepts. */
export enum KnownOperationOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system"
}

/**
 * Defines values for OperationOrigin. \
 * {@link KnownOperationOrigin} can be used interchangeably with OperationOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system**
 */
export type OperationOrigin = string;

/** Known values of {@link SqlVmGroupImageSku} that the service accepts. */
export enum KnownSqlVmGroupImageSku {
  /** Developer */
  Developer = "Developer",
  /** Enterprise */
  Enterprise = "Enterprise"
}

/**
 * Defines values for SqlVmGroupImageSku. \
 * {@link KnownSqlVmGroupImageSku} can be used interchangeably with SqlVmGroupImageSku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Developer** \
 * **Enterprise**
 */
export type SqlVmGroupImageSku = string;

/** Known values of {@link ScaleType} that the service accepts. */
export enum KnownScaleType {
  /** HA */
  HA = "HA"
}

/**
 * Defines values for ScaleType. \
 * {@link KnownScaleType} can be used interchangeably with ScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HA**
 */
export type ScaleType = string;

/** Known values of {@link ClusterManagerType} that the service accepts. */
export enum KnownClusterManagerType {
  /** Wsfc */
  Wsfc = "WSFC"
}

/**
 * Defines values for ClusterManagerType. \
 * {@link KnownClusterManagerType} can be used interchangeably with ClusterManagerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **WSFC**
 */
export type ClusterManagerType = string;

/** Known values of {@link ClusterConfiguration} that the service accepts. */
export enum KnownClusterConfiguration {
  /** Domainful */
  Domainful = "Domainful"
}

/**
 * Defines values for ClusterConfiguration. \
 * {@link KnownClusterConfiguration} can be used interchangeably with ClusterConfiguration,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Domainful**
 */
export type ClusterConfiguration = string;

/** Known values of {@link ClusterSubnetType} that the service accepts. */
export enum KnownClusterSubnetType {
  /** SingleSubnet */
  SingleSubnet = "SingleSubnet",
  /** MultiSubnet */
  MultiSubnet = "MultiSubnet"
}

/**
 * Defines values for ClusterSubnetType. \
 * {@link KnownClusterSubnetType} can be used interchangeably with ClusterSubnetType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SingleSubnet** \
 * **MultiSubnet**
 */
export type ClusterSubnetType = string;

/** Known values of {@link IdentityType} that the service accepts. */
export enum KnownIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned"
}

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned**
 */
export type IdentityType = string;

/** Known values of {@link SqlServerLicenseType} that the service accepts. */
export enum KnownSqlServerLicenseType {
  /** Payg */
  Payg = "PAYG",
  /** Ahub */
  Ahub = "AHUB",
  /** DR */
  DR = "DR"
}

/**
 * Defines values for SqlServerLicenseType. \
 * {@link KnownSqlServerLicenseType} can be used interchangeably with SqlServerLicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PAYG** \
 * **AHUB** \
 * **DR**
 */
export type SqlServerLicenseType = string;

/** Known values of {@link SqlManagementMode} that the service accepts. */
export enum KnownSqlManagementMode {
  /** Full */
  Full = "Full",
  /** LightWeight */
  LightWeight = "LightWeight",
  /** NoAgent */
  NoAgent = "NoAgent"
}

/**
 * Defines values for SqlManagementMode. \
 * {@link KnownSqlManagementMode} can be used interchangeably with SqlManagementMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Full** \
 * **LightWeight** \
 * **NoAgent**
 */
export type SqlManagementMode = string;

/** Known values of {@link LeastPrivilegeMode} that the service accepts. */
export enum KnownLeastPrivilegeMode {
  /** Enabled */
  Enabled = "Enabled",
  /** NotSet */
  NotSet = "NotSet"
}

/**
 * Defines values for LeastPrivilegeMode. \
 * {@link KnownLeastPrivilegeMode} can be used interchangeably with LeastPrivilegeMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **NotSet**
 */
export type LeastPrivilegeMode = string;

/** Known values of {@link SqlImageSku} that the service accepts. */
export enum KnownSqlImageSku {
  /** Developer */
  Developer = "Developer",
  /** Express */
  Express = "Express",
  /** Standard */
  Standard = "Standard",
  /** Enterprise */
  Enterprise = "Enterprise",
  /** Web */
  Web = "Web"
}

/**
 * Defines values for SqlImageSku. \
 * {@link KnownSqlImageSku} can be used interchangeably with SqlImageSku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Developer** \
 * **Express** \
 * **Standard** \
 * **Enterprise** \
 * **Web**
 */
export type SqlImageSku = string;

/** Known values of {@link BackupScheduleType} that the service accepts. */
export enum KnownBackupScheduleType {
  /** Manual */
  Manual = "Manual",
  /** Automated */
  Automated = "Automated"
}

/**
 * Defines values for BackupScheduleType. \
 * {@link KnownBackupScheduleType} can be used interchangeably with BackupScheduleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Manual** \
 * **Automated**
 */
export type BackupScheduleType = string;

/** Known values of {@link FullBackupFrequencyType} that the service accepts. */
export enum KnownFullBackupFrequencyType {
  /** Daily */
  Daily = "Daily",
  /** Weekly */
  Weekly = "Weekly"
}

/**
 * Defines values for FullBackupFrequencyType. \
 * {@link KnownFullBackupFrequencyType} can be used interchangeably with FullBackupFrequencyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Daily** \
 * **Weekly**
 */
export type FullBackupFrequencyType = string;

/** Known values of {@link AutoBackupDaysOfWeek} that the service accepts. */
export enum KnownAutoBackupDaysOfWeek {
  /** Monday */
  Monday = "Monday",
  /** Tuesday */
  Tuesday = "Tuesday",
  /** Wednesday */
  Wednesday = "Wednesday",
  /** Thursday */
  Thursday = "Thursday",
  /** Friday */
  Friday = "Friday",
  /** Saturday */
  Saturday = "Saturday",
  /** Sunday */
  Sunday = "Sunday"
}

/**
 * Defines values for AutoBackupDaysOfWeek. \
 * {@link KnownAutoBackupDaysOfWeek} can be used interchangeably with AutoBackupDaysOfWeek,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Monday** \
 * **Tuesday** \
 * **Wednesday** \
 * **Thursday** \
 * **Friday** \
 * **Saturday** \
 * **Sunday**
 */
export type AutoBackupDaysOfWeek = string;

/** Known values of {@link ConnectivityType} that the service accepts. */
export enum KnownConnectivityType {
  /** Local */
  Local = "LOCAL",
  /** Private */
  Private = "PRIVATE",
  /** Public */
  Public = "PUBLIC"
}

/**
 * Defines values for ConnectivityType. \
 * {@link KnownConnectivityType} can be used interchangeably with ConnectivityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LOCAL** \
 * **PRIVATE** \
 * **PUBLIC**
 */
export type ConnectivityType = string;

/** Known values of {@link SqlWorkloadType} that the service accepts. */
export enum KnownSqlWorkloadType {
  /** General */
  General = "GENERAL",
  /** Oltp */
  Oltp = "OLTP",
  /** DW */
  DW = "DW"
}

/**
 * Defines values for SqlWorkloadType. \
 * {@link KnownSqlWorkloadType} can be used interchangeably with SqlWorkloadType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GENERAL** \
 * **OLTP** \
 * **DW**
 */
export type SqlWorkloadType = string;

/** Known values of {@link DiskConfigurationType} that the service accepts. */
export enum KnownDiskConfigurationType {
  /** NEW */
  NEW = "NEW",
  /** Extend */
  Extend = "EXTEND",
  /** ADD */
  ADD = "ADD"
}

/**
 * Defines values for DiskConfigurationType. \
 * {@link KnownDiskConfigurationType} can be used interchangeably with DiskConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NEW** \
 * **EXTEND** \
 * **ADD**
 */
export type DiskConfigurationType = string;

/** Known values of {@link StorageWorkloadType} that the service accepts. */
export enum KnownStorageWorkloadType {
  /** General */
  General = "GENERAL",
  /** Oltp */
  Oltp = "OLTP",
  /** DW */
  DW = "DW"
}

/**
 * Defines values for StorageWorkloadType. \
 * {@link KnownStorageWorkloadType} can be used interchangeably with StorageWorkloadType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GENERAL** \
 * **OLTP** \
 * **DW**
 */
export type StorageWorkloadType = string;

/** Known values of {@link TroubleshootingScenario} that the service accepts. */
export enum KnownTroubleshootingScenario {
  /** UnhealthyReplica */
  UnhealthyReplica = "UnhealthyReplica"
}

/**
 * Defines values for TroubleshootingScenario. \
 * {@link KnownTroubleshootingScenario} can be used interchangeably with TroubleshootingScenario,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UnhealthyReplica**
 */
export type TroubleshootingScenario = string;
/** Defines values for DayOfWeek. */
export type DayOfWeek =
  | "Everyday"
  | "Monday"
  | "Tuesday"
  | "Wednesday"
  | "Thursday"
  | "Friday"
  | "Saturday"
  | "Sunday";
/** Defines values for AssessmentDayOfWeek. */
export type AssessmentDayOfWeek =
  | "Monday"
  | "Tuesday"
  | "Wednesday"
  | "Thursday"
  | "Friday"
  | "Saturday"
  | "Sunday";

/** Optional parameters. */
export interface AvailabilityGroupListenersGetOptionalParams
  extends coreClient.OperationOptions {
  /** The child resources to include in the response. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type AvailabilityGroupListenersGetResponse = AvailabilityGroupListener;

/** Optional parameters. */
export interface AvailabilityGroupListenersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AvailabilityGroupListenersCreateOrUpdateResponse = AvailabilityGroupListener;

/** Optional parameters. */
export interface AvailabilityGroupListenersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AvailabilityGroupListenersListByGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByGroup operation. */
export type AvailabilityGroupListenersListByGroupResponse = AvailabilityGroupListenerListResult;

/** Optional parameters. */
export interface AvailabilityGroupListenersListByGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByGroupNext operation. */
export type AvailabilityGroupListenersListByGroupNextResponse = AvailabilityGroupListenerListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface SqlVirtualMachineGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SqlVirtualMachineGroupsGetResponse = SqlVirtualMachineGroup;

/** Optional parameters. */
export interface SqlVirtualMachineGroupsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SqlVirtualMachineGroupsCreateOrUpdateResponse = SqlVirtualMachineGroup;

/** Optional parameters. */
export interface SqlVirtualMachineGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SqlVirtualMachineGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SqlVirtualMachineGroupsUpdateResponse = SqlVirtualMachineGroup;

/** Optional parameters. */
export interface SqlVirtualMachineGroupsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SqlVirtualMachineGroupsListByResourceGroupResponse = SqlVirtualMachineGroupListResult;

/** Optional parameters. */
export interface SqlVirtualMachineGroupsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SqlVirtualMachineGroupsListResponse = SqlVirtualMachineGroupListResult;

/** Optional parameters. */
export interface SqlVirtualMachineGroupsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SqlVirtualMachineGroupsListByResourceGroupNextResponse = SqlVirtualMachineGroupListResult;

/** Optional parameters. */
export interface SqlVirtualMachineGroupsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SqlVirtualMachineGroupsListNextResponse = SqlVirtualMachineGroupListResult;

/** Optional parameters. */
export interface SqlVirtualMachinesListBySqlVmGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySqlVmGroup operation. */
export type SqlVirtualMachinesListBySqlVmGroupResponse = SqlVirtualMachineListResult;

/** Optional parameters. */
export interface SqlVirtualMachinesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SqlVirtualMachinesListResponse = SqlVirtualMachineListResult;

/** Optional parameters. */
export interface SqlVirtualMachinesGetOptionalParams
  extends coreClient.OperationOptions {
  /** The child resources to include in the response. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type SqlVirtualMachinesGetResponse = SqlVirtualMachine;

/** Optional parameters. */
export interface SqlVirtualMachinesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SqlVirtualMachinesCreateOrUpdateResponse = SqlVirtualMachine;

/** Optional parameters. */
export interface SqlVirtualMachinesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SqlVirtualMachinesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SqlVirtualMachinesUpdateResponse = SqlVirtualMachine;

/** Optional parameters. */
export interface SqlVirtualMachinesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SqlVirtualMachinesListByResourceGroupResponse = SqlVirtualMachineListResult;

/** Optional parameters. */
export interface SqlVirtualMachinesStartAssessmentOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SqlVirtualMachinesRedeployOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SqlVirtualMachinesListBySqlVmGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySqlVmGroupNext operation. */
export type SqlVirtualMachinesListBySqlVmGroupNextResponse = SqlVirtualMachineListResult;

/** Optional parameters. */
export interface SqlVirtualMachinesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SqlVirtualMachinesListNextResponse = SqlVirtualMachineListResult;

/** Optional parameters. */
export interface SqlVirtualMachinesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SqlVirtualMachinesListByResourceGroupNextResponse = SqlVirtualMachineListResult;

/** Optional parameters. */
export interface SqlVirtualMachineTroubleshootTroubleshootOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the troubleshoot operation. */
export type SqlVirtualMachineTroubleshootTroubleshootResponse = SqlVmTroubleshooting;

/** Optional parameters. */
export interface SqlVirtualMachineManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
