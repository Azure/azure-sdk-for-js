/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  SapMonitor,
  SapMonitorsListOptionalParams,
  SapMonitorsGetOptionalParams,
  SapMonitorsGetResponse,
  SapMonitorsCreateOptionalParams,
  SapMonitorsCreateResponse,
  SapMonitorsDeleteOptionalParams,
  Tags,
  SapMonitorsUpdateOptionalParams,
  SapMonitorsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SapMonitors. */
export interface SapMonitors {
  /**
   * Gets a list of SAP monitors in the specified subscription. The operations returns various properties
   * of each SAP monitor.
   * @param options The options parameters.
   */
  list(
    options?: SapMonitorsListOptionalParams
  ): PagedAsyncIterableIterator<SapMonitor>;
  /**
   * Gets properties of a SAP monitor for the specified subscription, resource group, and resource name.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sapMonitorName: string,
    options?: SapMonitorsGetOptionalParams
  ): Promise<SapMonitorsGetResponse>;
  /**
   * Creates a SAP monitor for the specified subscription, resource group, and resource name.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param sapMonitorParameter Request body representing a SAP Monitor
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    sapMonitorName: string,
    sapMonitorParameter: SapMonitor,
    options?: SapMonitorsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<SapMonitorsCreateResponse>,
      SapMonitorsCreateResponse
    >
  >;
  /**
   * Creates a SAP monitor for the specified subscription, resource group, and resource name.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param sapMonitorParameter Request body representing a SAP Monitor
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    sapMonitorName: string,
    sapMonitorParameter: SapMonitor,
    options?: SapMonitorsCreateOptionalParams
  ): Promise<SapMonitorsCreateResponse>;
  /**
   * Deletes a SAP monitor with the specified subscription, resource group, and monitor name.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    sapMonitorName: string,
    options?: SapMonitorsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a SAP monitor with the specified subscription, resource group, and monitor name.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    sapMonitorName: string,
    options?: SapMonitorsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Patches the Tags field of a SAP monitor for the specified subscription, resource group, and monitor
   * name.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param tagsParameter Request body that only contains the new Tags field
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    sapMonitorName: string,
    tagsParameter: Tags,
    options?: SapMonitorsUpdateOptionalParams
  ): Promise<SapMonitorsUpdateResponse>;
}
