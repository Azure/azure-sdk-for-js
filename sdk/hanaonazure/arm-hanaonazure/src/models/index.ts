/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** List of HANA operations */
export interface OperationList {
  /** List of HANA operations */
  value?: Operation[];
}

/** HANA operation information */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object. This name should match the action name that appears in RBAC / the event service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Displayed HANA operation information */
  display?: Display;
}

/** Detailed HANA operation information */
export interface Display {
  /**
   * The localized friendly form of the resource provider name. This form is also expected to include the publisher/company responsible. Use Title Casing. Begin with "Microsoft" for 1st party services.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation. This form should match the public documentation for the resource provider. Use Title Casing. For examples, refer to the “name” section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation as shown to the user. This name should be concise (to fit in drop downs), but clear (self-documenting). Use Title Casing and include the entity/resource to which it applies.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation as shown to the user. This description should be thorough, yet concise. It will be used in tool-tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is 'user,system'
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: string;
}

/** Describes the format of Error response. */
export interface ErrorResponse {
  /** Describes the error object. */
  error?: ErrorResponseError;
}

/** Describes the error object. */
export interface ErrorResponseError {
  /**
   * Error code
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** The response from the List SAP monitors operation. */
export interface SapMonitorListResult {
  /** The list of SAP monitors. */
  value?: SapMonitor[];
  /** The URL to get the next set of SAP monitors. */
  nextLink?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Tags field of the resource. */
export interface Tags {
  /** Tags field of the resource. */
  tags?: { [propertyName: string]: string };
}

/** The response from the List provider instances operation. */
export interface ProviderInstanceListResult {
  /** The list of provider instances. */
  value?: ProviderInstance[];
  /** The URL to get the next set of provider instances. */
  nextLink?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export type ProxyResource = Resource & {};

/** SAP monitor info on Azure (ARM properties and SAP monitor properties) */
export type SapMonitor = TrackedResource & {
  /**
   * State of provisioning of the HanaInstance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: HanaProvisioningStatesEnum;
  /**
   * The name of the resource group the SAP Monitor resources get deployed into.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managedResourceGroupName?: string;
  /** The ARM ID of the Log Analytics Workspace that is used for monitoring */
  logAnalyticsWorkspaceArmId?: string;
  /** The value indicating whether to send analytics to Microsoft */
  enableCustomerAnalytics?: boolean;
  /** The workspace ID of the log analytics workspace to be used for monitoring */
  logAnalyticsWorkspaceId?: string;
  /** The shared key of the log analytics workspace that is used for monitoring */
  logAnalyticsWorkspaceSharedKey?: string;
  /**
   * The version of the payload running in the Collector VM
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sapMonitorCollectorVersion?: string;
  /** The subnet which the SAP monitor will be deployed in */
  monitorSubnet?: string;
};

/** A provider instance associated with a SAP monitor. */
export type ProviderInstance = ProxyResource & {
  /** The type of provider instance. */
  typePropertiesType?: string;
  /** A JSON string containing the properties of the provider instance. */
  properties?: string;
  /** A JSON string containing metadata of the provider instance. */
  metadata?: string;
  /**
   * State of provisioning of the provider instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: HanaProvisioningStatesEnum;
};

/** Known values of {@link HanaProvisioningStatesEnum} that the service accepts. */
export enum KnownHanaProvisioningStatesEnum {
  Accepted = "Accepted",
  Creating = "Creating",
  Updating = "Updating",
  Failed = "Failed",
  Succeeded = "Succeeded",
  Deleting = "Deleting",
  Migrating = "Migrating"
}

/**
 * Defines values for HanaProvisioningStatesEnum. \
 * {@link KnownHanaProvisioningStatesEnum} can be used interchangeably with HanaProvisioningStatesEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Failed** \
 * **Succeeded** \
 * **Deleting** \
 * **Migrating**
 */
export type HanaProvisioningStatesEnum = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationList;

/** Optional parameters. */
export interface SapMonitorsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SapMonitorsListResponse = SapMonitorListResult;

/** Optional parameters. */
export interface SapMonitorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SapMonitorsGetResponse = SapMonitor;

/** Optional parameters. */
export interface SapMonitorsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SapMonitorsCreateResponse = SapMonitor;

/** Optional parameters. */
export interface SapMonitorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SapMonitorsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type SapMonitorsUpdateResponse = SapMonitor;

/** Optional parameters. */
export interface SapMonitorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SapMonitorsListNextResponse = SapMonitorListResult;

/** Optional parameters. */
export interface ProviderInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProviderInstancesListResponse = ProviderInstanceListResult;

/** Optional parameters. */
export interface ProviderInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProviderInstancesGetResponse = ProviderInstance;

/** Optional parameters. */
export interface ProviderInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ProviderInstancesCreateResponse = ProviderInstance;

/** Optional parameters. */
export interface ProviderInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ProviderInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProviderInstancesListNextResponse = ProviderInstanceListResult;

/** Optional parameters. */
export interface HanaManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
