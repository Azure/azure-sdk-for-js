/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  LabVirtualMachine,
  VirtualMachinesListOptionalParams,
  VirtualMachinesGetOptionalParams,
  VirtualMachinesGetResponse,
  VirtualMachinesCreateOrUpdateOptionalParams,
  VirtualMachinesCreateOrUpdateResponse,
  VirtualMachinesDeleteOptionalParams,
  LabVirtualMachineFragment,
  VirtualMachinesUpdateOptionalParams,
  VirtualMachinesUpdateResponse,
  DataDiskProperties,
  VirtualMachinesAddDataDiskOptionalParams,
  ApplyArtifactsRequest,
  VirtualMachinesApplyArtifactsOptionalParams,
  VirtualMachinesClaimOptionalParams,
  DetachDataDiskProperties,
  VirtualMachinesDetachDataDiskOptionalParams,
  VirtualMachinesGetRdpFileContentsOptionalParams,
  VirtualMachinesGetRdpFileContentsResponse,
  VirtualMachinesListApplicableSchedulesOptionalParams,
  VirtualMachinesListApplicableSchedulesResponse,
  VirtualMachinesRedeployOptionalParams,
  ResizeLabVirtualMachineProperties,
  VirtualMachinesResizeOptionalParams,
  VirtualMachinesRestartOptionalParams,
  VirtualMachinesStartOptionalParams,
  VirtualMachinesStopOptionalParams,
  VirtualMachinesTransferDisksOptionalParams,
  VirtualMachinesUnClaimOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualMachines. */
export interface VirtualMachines {
  /**
   * List virtual machines in a given lab.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    labName: string,
    options?: VirtualMachinesListOptionalParams
  ): PagedAsyncIterableIterator<LabVirtualMachine>;
  /**
   * Get virtual machine.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesGetOptionalParams
  ): Promise<VirtualMachinesGetResponse>;
  /**
   * Create or replace an existing virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param labVirtualMachine A virtual machine.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    labName: string,
    name: string,
    labVirtualMachine: LabVirtualMachine,
    options?: VirtualMachinesCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VirtualMachinesCreateOrUpdateResponse>,
      VirtualMachinesCreateOrUpdateResponse
    >
  >;
  /**
   * Create or replace an existing virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param labVirtualMachine A virtual machine.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    labVirtualMachine: LabVirtualMachine,
    options?: VirtualMachinesCreateOrUpdateOptionalParams
  ): Promise<VirtualMachinesCreateOrUpdateResponse>;
  /**
   * Delete virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Allows modifying tags of virtual machines. All other properties will be ignored.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param labVirtualMachine A virtual machine.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    labName: string,
    name: string,
    labVirtualMachine: LabVirtualMachineFragment,
    options?: VirtualMachinesUpdateOptionalParams
  ): Promise<VirtualMachinesUpdateResponse>;
  /**
   * Attach a new or existing data disk to virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param dataDiskProperties Request body for adding a new or existing data disk to a virtual machine.
   * @param options The options parameters.
   */
  beginAddDataDisk(
    resourceGroupName: string,
    labName: string,
    name: string,
    dataDiskProperties: DataDiskProperties,
    options?: VirtualMachinesAddDataDiskOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Attach a new or existing data disk to virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param dataDiskProperties Request body for adding a new or existing data disk to a virtual machine.
   * @param options The options parameters.
   */
  beginAddDataDiskAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    dataDiskProperties: DataDiskProperties,
    options?: VirtualMachinesAddDataDiskOptionalParams
  ): Promise<void>;
  /**
   * Apply artifacts to virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param applyArtifactsRequest Request body for applying artifacts to a virtual machine.
   * @param options The options parameters.
   */
  beginApplyArtifacts(
    resourceGroupName: string,
    labName: string,
    name: string,
    applyArtifactsRequest: ApplyArtifactsRequest,
    options?: VirtualMachinesApplyArtifactsOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Apply artifacts to virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param applyArtifactsRequest Request body for applying artifacts to a virtual machine.
   * @param options The options parameters.
   */
  beginApplyArtifactsAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    applyArtifactsRequest: ApplyArtifactsRequest,
    options?: VirtualMachinesApplyArtifactsOptionalParams
  ): Promise<void>;
  /**
   * Take ownership of an existing virtual machine This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginClaim(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesClaimOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Take ownership of an existing virtual machine This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginClaimAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesClaimOptionalParams
  ): Promise<void>;
  /**
   * Detach the specified disk from the virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param detachDataDiskProperties Request body for detaching data disk from a virtual machine.
   * @param options The options parameters.
   */
  beginDetachDataDisk(
    resourceGroupName: string,
    labName: string,
    name: string,
    detachDataDiskProperties: DetachDataDiskProperties,
    options?: VirtualMachinesDetachDataDiskOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Detach the specified disk from the virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param detachDataDiskProperties Request body for detaching data disk from a virtual machine.
   * @param options The options parameters.
   */
  beginDetachDataDiskAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    detachDataDiskProperties: DetachDataDiskProperties,
    options?: VirtualMachinesDetachDataDiskOptionalParams
  ): Promise<void>;
  /**
   * Gets a string that represents the contents of the RDP file for the virtual machine
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  getRdpFileContents(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesGetRdpFileContentsOptionalParams
  ): Promise<VirtualMachinesGetRdpFileContentsResponse>;
  /**
   * Lists the applicable start/stop schedules, if any.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  listApplicableSchedules(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesListApplicableSchedulesOptionalParams
  ): Promise<VirtualMachinesListApplicableSchedulesResponse>;
  /**
   * Redeploy a virtual machine This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginRedeploy(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesRedeployOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Redeploy a virtual machine This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginRedeployAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesRedeployOptionalParams
  ): Promise<void>;
  /**
   * Resize Virtual Machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param resizeLabVirtualMachineProperties Request body for resizing a virtual machine.
   * @param options The options parameters.
   */
  beginResize(
    resourceGroupName: string,
    labName: string,
    name: string,
    resizeLabVirtualMachineProperties: ResizeLabVirtualMachineProperties,
    options?: VirtualMachinesResizeOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Resize Virtual Machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param resizeLabVirtualMachineProperties Request body for resizing a virtual machine.
   * @param options The options parameters.
   */
  beginResizeAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    resizeLabVirtualMachineProperties: ResizeLabVirtualMachineProperties,
    options?: VirtualMachinesResizeOptionalParams
  ): Promise<void>;
  /**
   * Restart a virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginRestart(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesRestartOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Restart a virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginRestartAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesRestartOptionalParams
  ): Promise<void>;
  /**
   * Start a virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesStartOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Start a virtual machine. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesStartOptionalParams
  ): Promise<void>;
  /**
   * Stop a virtual machine This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginStop(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesStopOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Stop a virtual machine This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginStopAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesStopOptionalParams
  ): Promise<void>;
  /**
   * Transfers all data disks attached to the virtual machine to be owned by the current user. This
   * operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginTransferDisks(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesTransferDisksOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Transfers all data disks attached to the virtual machine to be owned by the current user. This
   * operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginTransferDisksAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesTransferDisksOptionalParams
  ): Promise<void>;
  /**
   * Release ownership of an existing virtual machine This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginUnClaim(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesUnClaimOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Release ownership of an existing virtual machine This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the virtual machine.
   * @param options The options parameters.
   */
  beginUnClaimAndWait(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: VirtualMachinesUnClaimOptionalParams
  ): Promise<void>;
}
