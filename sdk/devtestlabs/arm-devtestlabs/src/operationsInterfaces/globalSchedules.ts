/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Schedule,
  GlobalSchedulesListBySubscriptionOptionalParams,
  GlobalSchedulesListByResourceGroupOptionalParams,
  GlobalSchedulesGetOptionalParams,
  GlobalSchedulesGetResponse,
  GlobalSchedulesCreateOrUpdateOptionalParams,
  GlobalSchedulesCreateOrUpdateResponse,
  GlobalSchedulesDeleteOptionalParams,
  ScheduleFragment,
  GlobalSchedulesUpdateOptionalParams,
  GlobalSchedulesUpdateResponse,
  GlobalSchedulesExecuteOptionalParams,
  RetargetScheduleProperties,
  GlobalSchedulesRetargetOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GlobalSchedules. */
export interface GlobalSchedules {
  /**
   * List schedules in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: GlobalSchedulesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Schedule>;
  /**
   * List schedules in a resource group.
   * @param resourceGroupName The name of the resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: GlobalSchedulesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Schedule>;
  /**
   * Get schedule.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the schedule.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    name: string,
    options?: GlobalSchedulesGetOptionalParams
  ): Promise<GlobalSchedulesGetResponse>;
  /**
   * Create or replace an existing schedule.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the schedule.
   * @param schedule A schedule.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    name: string,
    schedule: Schedule,
    options?: GlobalSchedulesCreateOrUpdateOptionalParams
  ): Promise<GlobalSchedulesCreateOrUpdateResponse>;
  /**
   * Delete schedule.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the schedule.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    name: string,
    options?: GlobalSchedulesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Allows modifying tags of schedules. All other properties will be ignored.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the schedule.
   * @param schedule A schedule.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    name: string,
    schedule: ScheduleFragment,
    options?: GlobalSchedulesUpdateOptionalParams
  ): Promise<GlobalSchedulesUpdateResponse>;
  /**
   * Execute a schedule. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the schedule.
   * @param options The options parameters.
   */
  beginExecute(
    resourceGroupName: string,
    name: string,
    options?: GlobalSchedulesExecuteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Execute a schedule. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the schedule.
   * @param options The options parameters.
   */
  beginExecuteAndWait(
    resourceGroupName: string,
    name: string,
    options?: GlobalSchedulesExecuteOptionalParams
  ): Promise<void>;
  /**
   * Updates a schedule's target resource Id. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the schedule.
   * @param retargetScheduleProperties Properties for retargeting a virtual machine schedule.
   * @param options The options parameters.
   */
  beginRetarget(
    resourceGroupName: string,
    name: string,
    retargetScheduleProperties: RetargetScheduleProperties,
    options?: GlobalSchedulesRetargetOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Updates a schedule's target resource Id. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the schedule.
   * @param retargetScheduleProperties Properties for retargeting a virtual machine schedule.
   * @param options The options parameters.
   */
  beginRetargetAndWait(
    resourceGroupName: string,
    name: string,
    retargetScheduleProperties: RetargetScheduleProperties,
    options?: GlobalSchedulesRetargetOptionalParams
  ): Promise<void>;
}
