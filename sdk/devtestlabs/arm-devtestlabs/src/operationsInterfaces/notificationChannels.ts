/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  NotificationChannel,
  NotificationChannelsListOptionalParams,
  NotificationChannelsGetOptionalParams,
  NotificationChannelsGetResponse,
  NotificationChannelsCreateOrUpdateOptionalParams,
  NotificationChannelsCreateOrUpdateResponse,
  NotificationChannelsDeleteOptionalParams,
  NotificationChannelFragment,
  NotificationChannelsUpdateOptionalParams,
  NotificationChannelsUpdateResponse,
  NotifyParameters,
  NotificationChannelsNotifyOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NotificationChannels. */
export interface NotificationChannels {
  /**
   * List notification channels in a given lab.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    labName: string,
    options?: NotificationChannelsListOptionalParams
  ): PagedAsyncIterableIterator<NotificationChannel>;
  /**
   * Get notification channel.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the notification channel.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: NotificationChannelsGetOptionalParams
  ): Promise<NotificationChannelsGetResponse>;
  /**
   * Create or replace an existing notification channel.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the notification channel.
   * @param notificationChannel A notification.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    labName: string,
    name: string,
    notificationChannel: NotificationChannel,
    options?: NotificationChannelsCreateOrUpdateOptionalParams
  ): Promise<NotificationChannelsCreateOrUpdateResponse>;
  /**
   * Delete notification channel.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the notification channel.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    labName: string,
    name: string,
    options?: NotificationChannelsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Allows modifying tags of notification channels. All other properties will be ignored.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the notification channel.
   * @param notificationChannel A notification.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    labName: string,
    name: string,
    notificationChannel: NotificationChannelFragment,
    options?: NotificationChannelsUpdateOptionalParams
  ): Promise<NotificationChannelsUpdateResponse>;
  /**
   * Send notification to provided channel.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param name The name of the notification channel.
   * @param notifyParameters Properties for generating a Notification.
   * @param options The options parameters.
   */
  notify(
    resourceGroupName: string,
    labName: string,
    name: string,
    notifyParameters: NotifyParameters,
    options?: NotificationChannelsNotifyOptionalParams
  ): Promise<void>;
}
