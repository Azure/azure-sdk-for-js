/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  DtlEnvironment,
  EnvironmentsListOptionalParams,
  EnvironmentsGetOptionalParams,
  EnvironmentsGetResponse,
  EnvironmentsCreateOrUpdateOptionalParams,
  EnvironmentsCreateOrUpdateResponse,
  EnvironmentsDeleteOptionalParams,
  DtlEnvironmentFragment,
  EnvironmentsUpdateOptionalParams,
  EnvironmentsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Environments. */
export interface Environments {
  /**
   * List environments in a given user profile.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param userName The name of the user profile.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    labName: string,
    userName: string,
    options?: EnvironmentsListOptionalParams
  ): PagedAsyncIterableIterator<DtlEnvironment>;
  /**
   * Get environment.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param userName The name of the user profile.
   * @param name The name of the environment.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    labName: string,
    userName: string,
    name: string,
    options?: EnvironmentsGetOptionalParams
  ): Promise<EnvironmentsGetResponse>;
  /**
   * Create or replace an existing environment. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param userName The name of the user profile.
   * @param name The name of the environment.
   * @param dtlEnvironment An environment, which is essentially an ARM template deployment.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    labName: string,
    userName: string,
    name: string,
    dtlEnvironment: DtlEnvironment,
    options?: EnvironmentsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<EnvironmentsCreateOrUpdateResponse>,
      EnvironmentsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or replace an existing environment. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param userName The name of the user profile.
   * @param name The name of the environment.
   * @param dtlEnvironment An environment, which is essentially an ARM template deployment.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    labName: string,
    userName: string,
    name: string,
    dtlEnvironment: DtlEnvironment,
    options?: EnvironmentsCreateOrUpdateOptionalParams
  ): Promise<EnvironmentsCreateOrUpdateResponse>;
  /**
   * Delete environment. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param userName The name of the user profile.
   * @param name The name of the environment.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    labName: string,
    userName: string,
    name: string,
    options?: EnvironmentsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete environment. This operation can take a while to complete.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param userName The name of the user profile.
   * @param name The name of the environment.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    labName: string,
    userName: string,
    name: string,
    options?: EnvironmentsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Allows modifying tags of environments. All other properties will be ignored.
   * @param resourceGroupName The name of the resource group.
   * @param labName The name of the lab.
   * @param userName The name of the user profile.
   * @param name The name of the environment.
   * @param dtlEnvironment An environment, which is essentially an ARM template deployment.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    labName: string,
    userName: string,
    name: string,
    dtlEnvironment: DtlEnvironmentFragment,
    options?: EnvironmentsUpdateOptionalParams
  ): Promise<EnvironmentsUpdateResponse>;
}
