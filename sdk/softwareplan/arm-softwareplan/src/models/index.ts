/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Error object returned by the RP */
export interface ErrorModel {
  /** Error code */
  code?: ErrorCode;
  /** A user readable error message. Localized based on x-ms-effective-locale header in the request */
  message?: string;
}

/** List of hybrid use benefits */
export interface HybridUseBenefitListResult {
  /** List of hybrid use benefits */
  value?: HybridUseBenefitModel[];
  /** Url to get the next page of items. */
  nextLink?: string;
}

/** The SKU to be applied for this resource */
export interface Sku {
  /** Name of the SKU to be applied */
  name?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** List all the operations. */
export interface OperationList {
  /** List of all operations */
  value?: OperationResponse[];
  /** Url to get the next page of items. */
  nextLink?: string;
}

/** Operation response. */
export interface OperationResponse {
  /** Name of the operation */
  name?: string;
  /** Display properties for the operation */
  display?: OperationDisplay;
  /** Origin of the response */
  origin?: string;
}

/** Display fields for an operation. */
export interface OperationDisplay {
  /** Resource Provider name */
  provider?: string;
  /** Resource that is acted upon */
  resource?: string;
  /** Operation to be performed */
  operation?: string;
  /** Description of the operation */
  description?: string;
}

/** Response on GET of a hybrid use benefit */
export interface HybridUseBenefitModel extends Resource {
  /** Hybrid use benefit SKU */
  sku: Sku;
  /**
   * Indicates the revision of the hybrid use benefit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: number;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Created date
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDate?: Date;
  /**
   * Last updated date
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedDate?: Date;
}

/** Known values of {@link ErrorCode} that the service accepts. */
export enum KnownErrorCode {
  /** InvalidRequestParameter */
  InvalidRequestParameter = "InvalidRequestParameter",
  /** MissingRequestParameter */
  MissingRequestParameter = "MissingRequestParameter"
}

/**
 * Defines values for ErrorCode. \
 * {@link KnownErrorCode} can be used interchangeably with ErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InvalidRequestParameter** \
 * **MissingRequestParameter**
 */
export type ErrorCode = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Cancelled** \
 * **Failed**
 */
export type ProvisioningState = string;

/** Optional parameters. */
export interface SoftwarePlanRegisterOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface HybridUseBenefitListOptionalParams
  extends coreClient.OperationOptions {
  /** Supports applying filter on the type of SKU */
  filter?: string;
}

/** Contains response data for the list operation. */
export type HybridUseBenefitListResponse = HybridUseBenefitListResult;

/** Optional parameters. */
export interface HybridUseBenefitCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type HybridUseBenefitCreateResponse = HybridUseBenefitModel;

/** Optional parameters. */
export interface HybridUseBenefitUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type HybridUseBenefitUpdateResponse = HybridUseBenefitModel;

/** Optional parameters. */
export interface HybridUseBenefitGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type HybridUseBenefitGetResponse = HybridUseBenefitModel;

/** Optional parameters. */
export interface HybridUseBenefitDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface HybridUseBenefitListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Supports applying filter on the type of SKU */
  filter?: string;
}

/** Contains response data for the listNext operation. */
export type HybridUseBenefitListNextResponse = HybridUseBenefitListResult;

/** Optional parameters. */
export interface HybridUseBenefitRevisionListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type HybridUseBenefitRevisionListResponse = HybridUseBenefitListResult;

/** Optional parameters. */
export interface HybridUseBenefitRevisionListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type HybridUseBenefitRevisionListNextResponse = HybridUseBenefitListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationList;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationList;

/** Optional parameters. */
export interface SoftwarePlanRPOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
