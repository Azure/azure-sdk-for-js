/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SoftwarePlan } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SoftwarePlanRP } from "../softwarePlanRP";
import { SoftwarePlanRegisterOptionalParams } from "../models";

/** Class containing SoftwarePlan operations. */
export class SoftwarePlanImpl implements SoftwarePlan {
  private readonly client: SoftwarePlanRP;

  /**
   * Initialize a new instance of the class SoftwarePlan class.
   * @param client Reference to the service client
   */
  constructor(client: SoftwarePlanRP) {
    this.client = client;
  }

  /**
   * Register to Microsoft.SoftwarePlan resource provider.
   * @param options The options parameters.
   */
  register(options?: SoftwarePlanRegisterOptionalParams): Promise<void> {
    return this.client.sendOperationRequest({ options }, registerOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const registerOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.SoftwarePlan/register",
  httpMethod: "POST",
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer
};
