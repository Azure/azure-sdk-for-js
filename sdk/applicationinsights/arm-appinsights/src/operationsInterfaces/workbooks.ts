/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Workbook,
  CategoryType,
  WorkbooksListBySubscriptionOptionalParams,
  WorkbooksListByResourceGroupOptionalParams,
  WorkbooksRevisionsListOptionalParams,
  WorkbooksGetOptionalParams,
  WorkbooksGetResponse,
  WorkbooksDeleteOptionalParams,
  WorkbooksCreateOrUpdateOptionalParams,
  WorkbooksCreateOrUpdateResponse,
  WorkbooksUpdateOptionalParams,
  WorkbooksUpdateResponse,
  WorkbooksRevisionGetOptionalParams,
  WorkbooksRevisionGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Workbooks. */
export interface Workbooks {
  /**
   * Get all Workbooks defined within a specified subscription and category.
   * @param category Category of workbook to return.
   * @param options The options parameters.
   */
  listBySubscription(
    category: CategoryType,
    options?: WorkbooksListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Workbook>;
  /**
   * Get all Workbooks defined within a specified resource group and category.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param category Category of workbook to return.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    category: CategoryType,
    options?: WorkbooksListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Workbook>;
  /**
   * Get the revisions for the workbook defined by its resourceName.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  listRevisionsList(
    resourceGroupName: string,
    resourceName: string,
    options?: WorkbooksRevisionsListOptionalParams
  ): PagedAsyncIterableIterator<Workbook>;
  /**
   * Get a single workbook by its resourceName.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    options?: WorkbooksGetOptionalParams
  ): Promise<WorkbooksGetResponse>;
  /**
   * Delete a workbook.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    resourceName: string,
    options?: WorkbooksDeleteOptionalParams
  ): Promise<void>;
  /**
   * Create a new workbook.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the resource.
   * @param workbookProperties Properties that need to be specified to create a new workbook.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    workbookProperties: Workbook,
    options?: WorkbooksCreateOrUpdateOptionalParams
  ): Promise<WorkbooksCreateOrUpdateResponse>;
  /**
   * Updates a workbook that has already been added.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the resource.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    resourceName: string,
    options?: WorkbooksUpdateOptionalParams
  ): Promise<WorkbooksUpdateResponse>;
  /**
   * Get a single workbook revision defined by its revisionId.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the resource.
   * @param revisionId The id of the workbook's revision.
   * @param options The options parameters.
   */
  revisionGet(
    resourceGroupName: string,
    resourceName: string,
    revisionId: string,
    options?: WorkbooksRevisionGetOptionalParams
  ): Promise<WorkbooksRevisionGetResponse>;
}
