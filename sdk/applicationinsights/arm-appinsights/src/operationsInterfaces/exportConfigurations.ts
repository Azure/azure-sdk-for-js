/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  ExportConfigurationsListOptionalParams,
  ExportConfigurationsListResponse,
  ApplicationInsightsComponentExportRequest,
  ExportConfigurationsCreateOptionalParams,
  ExportConfigurationsCreateResponse,
  ExportConfigurationsDeleteOptionalParams,
  ExportConfigurationsDeleteResponse,
  ExportConfigurationsGetOptionalParams,
  ExportConfigurationsGetResponse,
  ExportConfigurationsUpdateOptionalParams,
  ExportConfigurationsUpdateResponse
} from "../models";

/** Interface representing a ExportConfigurations. */
export interface ExportConfigurations {
  /**
   * Gets a list of Continuous Export configuration of an Application Insights component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    resourceName: string,
    options?: ExportConfigurationsListOptionalParams
  ): Promise<ExportConfigurationsListResponse>;
  /**
   * Create a Continuous Export configuration of an Application Insights component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportProperties Properties that need to be specified to create a Continuous Export
   *                         configuration of a Application Insights component.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    resourceName: string,
    exportProperties: ApplicationInsightsComponentExportRequest,
    options?: ExportConfigurationsCreateOptionalParams
  ): Promise<ExportConfigurationsCreateResponse>;
  /**
   * Delete a Continuous Export configuration of an Application Insights component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application Insights
   *                 component.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    resourceName: string,
    exportId: string,
    options?: ExportConfigurationsDeleteOptionalParams
  ): Promise<ExportConfigurationsDeleteResponse>;
  /**
   * Get the Continuous Export configuration for this export id.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application Insights
   *                 component.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    exportId: string,
    options?: ExportConfigurationsGetOptionalParams
  ): Promise<ExportConfigurationsGetResponse>;
  /**
   * Update the Continuous Export configuration for this export id.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application Insights
   *                 component.
   * @param exportProperties Properties that need to be specified to update the Continuous Export
   *                         configuration.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    resourceName: string,
    exportId: string,
    exportProperties: ApplicationInsightsComponentExportRequest,
    options?: ExportConfigurationsUpdateOptionalParams
  ): Promise<ExportConfigurationsUpdateResponse>;
}
