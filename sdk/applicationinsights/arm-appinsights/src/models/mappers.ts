/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const Annotation: msRest.CompositeMapper = {
  serializedName: "Annotation",
  type: {
    name: "Composite",
    className: "Annotation",
    modelProperties: {
      annotationName: {
        serializedName: "AnnotationName",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "Category",
        type: {
          name: "String"
        }
      },
      eventTime: {
        serializedName: "EventTime",
        type: {
          name: "DateTime"
        }
      },
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "Properties",
        type: {
          name: "String"
        }
      },
      relatedAnnotation: {
        serializedName: "RelatedAnnotation",
        defaultValue: 'null',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InnerError: msRest.CompositeMapper = {
  serializedName: "InnerError",
  type: {
    name: "Composite",
    className: "InnerError",
    modelProperties: {
      diagnosticcontext: {
        serializedName: "diagnosticcontext",
        type: {
          name: "String"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AnnotationError: msRest.CompositeMapper = {
  serializedName: "AnnotationError",
  type: {
    name: "Composite",
    className: "AnnotationError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "InnerError"
        }
      }
    }
  }
};

export const APIKeyRequest: msRest.CompositeMapper = {
  serializedName: "APIKeyRequest",
  type: {
    name: "Composite",
    className: "APIKeyRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      linkedReadProperties: {
        serializedName: "linkedReadProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      linkedWriteProperties: {
        serializedName: "linkedWriteProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApplicationInsightsComponentAPIKey: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentAPIKey",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentAPIKey",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      apiKey: {
        readOnly: true,
        serializedName: "apiKey",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      linkedReadProperties: {
        serializedName: "linkedReadProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      linkedWriteProperties: {
        serializedName: "linkedWriteProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApplicationInsightsComponentExportRequest: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentExportRequest",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentExportRequest",
    modelProperties: {
      recordTypes: {
        serializedName: "RecordTypes",
        type: {
          name: "String"
        }
      },
      destinationType: {
        serializedName: "DestinationType",
        type: {
          name: "String"
        }
      },
      destinationAddress: {
        serializedName: "DestinationAddress",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "IsEnabled",
        type: {
          name: "String"
        }
      },
      notificationQueueEnabled: {
        serializedName: "NotificationQueueEnabled",
        type: {
          name: "String"
        }
      },
      notificationQueueUri: {
        serializedName: "NotificationQueueUri",
        type: {
          name: "String"
        }
      },
      destinationStorageSubscriptionId: {
        serializedName: "DestinationStorageSubscriptionId",
        type: {
          name: "String"
        }
      },
      destinationStorageLocationId: {
        serializedName: "DestinationStorageLocationId",
        type: {
          name: "String"
        }
      },
      destinationAccountId: {
        serializedName: "DestinationAccountId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentExportConfiguration: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentExportConfiguration",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentExportConfiguration",
    modelProperties: {
      exportId: {
        readOnly: true,
        serializedName: "ExportId",
        type: {
          name: "String"
        }
      },
      instrumentationKey: {
        readOnly: true,
        serializedName: "InstrumentationKey",
        type: {
          name: "String"
        }
      },
      recordTypes: {
        serializedName: "RecordTypes",
        type: {
          name: "String"
        }
      },
      applicationName: {
        readOnly: true,
        serializedName: "ApplicationName",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        readOnly: true,
        serializedName: "SubscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        readOnly: true,
        serializedName: "ResourceGroup",
        type: {
          name: "String"
        }
      },
      destinationStorageSubscriptionId: {
        readOnly: true,
        serializedName: "DestinationStorageSubscriptionId",
        type: {
          name: "String"
        }
      },
      destinationStorageLocationId: {
        readOnly: true,
        serializedName: "DestinationStorageLocationId",
        type: {
          name: "String"
        }
      },
      destinationAccountId: {
        readOnly: true,
        serializedName: "DestinationAccountId",
        type: {
          name: "String"
        }
      },
      destinationType: {
        readOnly: true,
        serializedName: "DestinationType",
        type: {
          name: "String"
        }
      },
      isUserEnabled: {
        readOnly: true,
        serializedName: "IsUserEnabled",
        type: {
          name: "String"
        }
      },
      lastUserUpdate: {
        readOnly: true,
        serializedName: "LastUserUpdate",
        type: {
          name: "String"
        }
      },
      notificationQueueEnabled: {
        serializedName: "NotificationQueueEnabled",
        type: {
          name: "String"
        }
      },
      exportStatus: {
        readOnly: true,
        serializedName: "ExportStatus",
        type: {
          name: "String"
        }
      },
      lastSuccessTime: {
        readOnly: true,
        serializedName: "LastSuccessTime",
        type: {
          name: "String"
        }
      },
      lastGapTime: {
        readOnly: true,
        serializedName: "LastGapTime",
        type: {
          name: "String"
        }
      },
      permanentErrorReason: {
        readOnly: true,
        serializedName: "PermanentErrorReason",
        type: {
          name: "String"
        }
      },
      storageName: {
        readOnly: true,
        serializedName: "StorageName",
        type: {
          name: "String"
        }
      },
      containerName: {
        readOnly: true,
        serializedName: "ContainerName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentDataVolumeCap: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentDataVolumeCap",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentDataVolumeCap",
    modelProperties: {
      cap: {
        serializedName: "Cap",
        type: {
          name: "Number"
        }
      },
      resetTime: {
        readOnly: true,
        serializedName: "ResetTime",
        type: {
          name: "Number"
        }
      },
      warningThreshold: {
        serializedName: "WarningThreshold",
        type: {
          name: "Number"
        }
      },
      stopSendNotificationWhenHitThreshold: {
        serializedName: "StopSendNotificationWhenHitThreshold",
        type: {
          name: "Boolean"
        }
      },
      stopSendNotificationWhenHitCap: {
        serializedName: "StopSendNotificationWhenHitCap",
        type: {
          name: "Boolean"
        }
      },
      maxHistoryCap: {
        readOnly: true,
        serializedName: "MaxHistoryCap",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentBillingFeatures: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentBillingFeatures",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentBillingFeatures",
    modelProperties: {
      dataVolumeCap: {
        serializedName: "DataVolumeCap",
        type: {
          name: "Composite",
          className: "ApplicationInsightsComponentDataVolumeCap"
        }
      },
      currentBillingFeatures: {
        serializedName: "CurrentBillingFeatures",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApplicationInsightsComponentQuotaStatus: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentQuotaStatus",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentQuotaStatus",
    modelProperties: {
      appId: {
        readOnly: true,
        serializedName: "AppId",
        type: {
          name: "String"
        }
      },
      shouldBeThrottled: {
        readOnly: true,
        serializedName: "ShouldBeThrottled",
        type: {
          name: "Boolean"
        }
      },
      expirationTime: {
        readOnly: true,
        serializedName: "ExpirationTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentFeatureCapabilities: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentFeatureCapabilities",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentFeatureCapabilities",
    modelProperties: {
      supportExportData: {
        readOnly: true,
        serializedName: "SupportExportData",
        type: {
          name: "Boolean"
        }
      },
      burstThrottlePolicy: {
        readOnly: true,
        serializedName: "BurstThrottlePolicy",
        type: {
          name: "String"
        }
      },
      metadataClass: {
        readOnly: true,
        serializedName: "MetadataClass",
        type: {
          name: "String"
        }
      },
      liveStreamMetrics: {
        readOnly: true,
        serializedName: "LiveStreamMetrics",
        type: {
          name: "Boolean"
        }
      },
      applicationMap: {
        readOnly: true,
        serializedName: "ApplicationMap",
        type: {
          name: "Boolean"
        }
      },
      workItemIntegration: {
        readOnly: true,
        serializedName: "WorkItemIntegration",
        type: {
          name: "Boolean"
        }
      },
      powerBIIntegration: {
        readOnly: true,
        serializedName: "PowerBIIntegration",
        type: {
          name: "Boolean"
        }
      },
      openSchema: {
        readOnly: true,
        serializedName: "OpenSchema",
        type: {
          name: "Boolean"
        }
      },
      proactiveDetection: {
        readOnly: true,
        serializedName: "ProactiveDetection",
        type: {
          name: "Boolean"
        }
      },
      analyticsIntegration: {
        readOnly: true,
        serializedName: "AnalyticsIntegration",
        type: {
          name: "Boolean"
        }
      },
      multipleStepWebTest: {
        readOnly: true,
        serializedName: "MultipleStepWebTest",
        type: {
          name: "Boolean"
        }
      },
      apiAccessLevel: {
        readOnly: true,
        serializedName: "ApiAccessLevel",
        type: {
          name: "String"
        }
      },
      trackingType: {
        readOnly: true,
        serializedName: "TrackingType",
        type: {
          name: "String"
        }
      },
      dailyCap: {
        readOnly: true,
        serializedName: "DailyCap",
        type: {
          name: "Number"
        }
      },
      dailyCapResetTime: {
        readOnly: true,
        serializedName: "DailyCapResetTime",
        type: {
          name: "Number"
        }
      },
      throttleRate: {
        readOnly: true,
        serializedName: "ThrottleRate",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentFeatureCapability: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentFeatureCapability",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentFeatureCapability",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "Name",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "Description",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "Value",
        type: {
          name: "String"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "Unit",
        type: {
          name: "String"
        }
      },
      meterId: {
        readOnly: true,
        serializedName: "MeterId",
        type: {
          name: "String"
        }
      },
      meterRateFrequency: {
        readOnly: true,
        serializedName: "MeterRateFrequency",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentFeature: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentFeature",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentFeature",
    modelProperties: {
      featureName: {
        readOnly: true,
        serializedName: "FeatureName",
        type: {
          name: "String"
        }
      },
      meterId: {
        readOnly: true,
        serializedName: "MeterId",
        type: {
          name: "String"
        }
      },
      meterRateFrequency: {
        readOnly: true,
        serializedName: "MeterRateFrequency",
        type: {
          name: "String"
        }
      },
      resouceId: {
        readOnly: true,
        serializedName: "ResouceId",
        type: {
          name: "String"
        }
      },
      isHidden: {
        readOnly: true,
        serializedName: "IsHidden",
        type: {
          name: "Boolean"
        }
      },
      capabilities: {
        readOnly: true,
        serializedName: "Capabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationInsightsComponentFeatureCapability"
            }
          }
        }
      },
      title: {
        readOnly: true,
        serializedName: "Title",
        type: {
          name: "String"
        }
      },
      isMainFeature: {
        readOnly: true,
        serializedName: "IsMainFeature",
        type: {
          name: "Boolean"
        }
      },
      supportedAddonFeatures: {
        readOnly: true,
        serializedName: "SupportedAddonFeatures",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentAvailableFeatures: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentAvailableFeatures",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentAvailableFeatures",
    modelProperties: {
      result: {
        readOnly: true,
        serializedName: "Result",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationInsightsComponentFeature"
            }
          }
        }
      }
    }
  }
};

export const ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentProactiveDetectionConfiguration_RuleDefinitions",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions",
    modelProperties: {
      name: {
        serializedName: "Name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "DisplayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "Description",
        type: {
          name: "String"
        }
      },
      helpUrl: {
        serializedName: "HelpUrl",
        type: {
          name: "String"
        }
      },
      isHidden: {
        serializedName: "IsHidden",
        type: {
          name: "Boolean"
        }
      },
      isEnabledByDefault: {
        serializedName: "IsEnabledByDefault",
        type: {
          name: "Boolean"
        }
      },
      isInPreview: {
        serializedName: "IsInPreview",
        type: {
          name: "Boolean"
        }
      },
      supportsEmailNotifications: {
        serializedName: "SupportsEmailNotifications",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentProactiveDetectionConfiguration: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentProactiveDetectionConfiguration",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentProactiveDetectionConfiguration",
    modelProperties: {
      name: {
        serializedName: "Name",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "Enabled",
        type: {
          name: "Boolean"
        }
      },
      sendEmailsToSubscriptionOwners: {
        serializedName: "SendEmailsToSubscriptionOwners",
        type: {
          name: "Boolean"
        }
      },
      customEmails: {
        serializedName: "CustomEmails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      lastUpdatedTime: {
        serializedName: "LastUpdatedTime",
        type: {
          name: "String"
        }
      },
      ruleDefinitions: {
        serializedName: "RuleDefinitions",
        type: {
          name: "Composite",
          className: "ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions"
        }
      }
    }
  }
};

export const WorkItemConfiguration: msRest.CompositeMapper = {
  serializedName: "WorkItemConfiguration",
  type: {
    name: "Composite",
    className: "WorkItemConfiguration",
    modelProperties: {
      connectorId: {
        serializedName: "ConnectorId",
        type: {
          name: "String"
        }
      },
      configDisplayName: {
        serializedName: "ConfigDisplayName",
        type: {
          name: "String"
        }
      },
      isDefault: {
        serializedName: "IsDefault",
        type: {
          name: "Boolean"
        }
      },
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      configProperties: {
        serializedName: "ConfigProperties",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkItemCreateConfiguration: msRest.CompositeMapper = {
  serializedName: "WorkItemCreateConfiguration",
  type: {
    name: "Composite",
    className: "WorkItemCreateConfiguration",
    modelProperties: {
      connectorId: {
        serializedName: "ConnectorId",
        type: {
          name: "String"
        }
      },
      connectorDataConfiguration: {
        serializedName: "ConnectorDataConfiguration",
        type: {
          name: "String"
        }
      },
      validateOnly: {
        serializedName: "ValidateOnly",
        type: {
          name: "Boolean"
        }
      },
      workItemProperties: {
        serializedName: "WorkItemProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const WorkItemConfigurationError: msRest.CompositeMapper = {
  serializedName: "WorkItemConfigurationError",
  type: {
    name: "Composite",
    className: "WorkItemConfigurationError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "InnerError"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentFavorite: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentFavorite",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentFavorite",
    modelProperties: {
      name: {
        serializedName: "Name",
        type: {
          name: "String"
        }
      },
      config: {
        serializedName: "Config",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      favoriteId: {
        readOnly: true,
        serializedName: "FavoriteId",
        type: {
          name: "String"
        }
      },
      favoriteType: {
        serializedName: "FavoriteType",
        type: {
          name: "Enum",
          allowedValues: [
            "shared",
            "user"
          ]
        }
      },
      sourceType: {
        serializedName: "SourceType",
        type: {
          name: "String"
        }
      },
      timeModified: {
        readOnly: true,
        serializedName: "TimeModified",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "Tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      category: {
        serializedName: "Category",
        type: {
          name: "String"
        }
      },
      isGeneratedFromTemplate: {
        serializedName: "IsGeneratedFromTemplate",
        type: {
          name: "Boolean"
        }
      },
      userId: {
        readOnly: true,
        serializedName: "UserId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentWebTestLocation: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentWebTestLocation",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentWebTestLocation",
    modelProperties: {
      displayName: {
        readOnly: true,
        serializedName: "DisplayName",
        type: {
          name: "String"
        }
      },
      tag: {
        readOnly: true,
        serializedName: "Tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebtestsResource: msRest.CompositeMapper = {
  serializedName: "WebtestsResource",
  type: {
    name: "Composite",
    className: "WebtestsResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TagsResource: msRest.CompositeMapper = {
  serializedName: "TagsResource",
  type: {
    name: "Composite",
    className: "TagsResource",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const WebTestGeolocation: msRest.CompositeMapper = {
  serializedName: "WebTestGeolocation",
  type: {
    name: "Composite",
    className: "WebTestGeolocation",
    modelProperties: {
      location: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebTestPropertiesConfiguration: msRest.CompositeMapper = {
  serializedName: "WebTestProperties_Configuration",
  type: {
    name: "Composite",
    className: "WebTestPropertiesConfiguration",
    modelProperties: {
      webTest: {
        serializedName: "WebTest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WebTest: msRest.CompositeMapper = {
  serializedName: "WebTest",
  type: {
    name: "Composite",
    className: "WebTest",
    modelProperties: {
      ...WebtestsResource.type.modelProperties,
      kind: {
        serializedName: "kind",
        defaultValue: 'ping',
        type: {
          name: "Enum",
          allowedValues: [
            "ping",
            "multistep"
          ]
        }
      },
      syntheticMonitorId: {
        required: true,
        serializedName: "properties.SyntheticMonitorId",
        type: {
          name: "String"
        }
      },
      webTestName: {
        required: true,
        serializedName: "properties.Name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.Description",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "properties.Enabled",
        type: {
          name: "Boolean"
        }
      },
      frequency: {
        serializedName: "properties.Frequency",
        defaultValue: 300,
        type: {
          name: "Number"
        }
      },
      timeout: {
        serializedName: "properties.Timeout",
        defaultValue: 30,
        type: {
          name: "Number"
        }
      },
      webTestKind: {
        required: true,
        serializedName: "properties.Kind",
        defaultValue: 'ping',
        type: {
          name: "Enum",
          allowedValues: [
            "ping",
            "multistep"
          ]
        }
      },
      retryEnabled: {
        serializedName: "properties.RetryEnabled",
        type: {
          name: "Boolean"
        }
      },
      locations: {
        required: true,
        serializedName: "properties.Locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebTestGeolocation"
            }
          }
        }
      },
      configuration: {
        serializedName: "properties.Configuration",
        type: {
          name: "Composite",
          className: "WebTestPropertiesConfiguration"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentAnalyticsItemProperties: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentAnalyticsItemProperties",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentAnalyticsItemProperties",
    modelProperties: {
      functionAlias: {
        serializedName: "functionAlias",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponentAnalyticsItem: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentAnalyticsItem",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentAnalyticsItem",
    modelProperties: {
      id: {
        serializedName: "Id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "Name",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "Content",
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "Version",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "Scope",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "Type",
        type: {
          name: "String"
        }
      },
      timeCreated: {
        readOnly: true,
        serializedName: "TimeCreated",
        type: {
          name: "String"
        }
      },
      timeModified: {
        readOnly: true,
        serializedName: "TimeModified",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "Properties",
        type: {
          name: "Composite",
          className: "ApplicationInsightsComponentAnalyticsItemProperties"
        }
      }
    }
  }
};

export const WorkbookResource: msRest.CompositeMapper = {
  serializedName: "WorkbookResource",
  type: {
    name: "Composite",
    className: "WorkbookResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Workbook: msRest.CompositeMapper = {
  serializedName: "Workbook",
  type: {
    name: "Composite",
    className: "Workbook",
    modelProperties: {
      ...WorkbookResource.type.modelProperties,
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      workbookName: {
        required: true,
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      serializedData: {
        required: true,
        serializedName: "properties.serializedData",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      workbookId: {
        required: true,
        serializedName: "properties.workbookId",
        type: {
          name: "String"
        }
      },
      sharedTypeKind: {
        required: true,
        serializedName: "properties.kind",
        defaultValue: 'shared',
        type: {
          name: "String"
        }
      },
      timeModified: {
        readOnly: true,
        serializedName: "properties.timeModified",
        type: {
          name: "String"
        }
      },
      category: {
        required: true,
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      workbookTags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userId: {
        required: true,
        serializedName: "properties.userId",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "properties.sourceResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkProperties: msRest.CompositeMapper = {
  serializedName: "LinkProperties",
  type: {
    name: "Composite",
    className: "LinkProperties",
    modelProperties: {
      sourceId: {
        serializedName: "sourceId",
        type: {
          name: "String"
        }
      },
      targetId: {
        serializedName: "targetId",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorFieldContract: msRest.CompositeMapper = {
  serializedName: "ErrorFieldContract",
  type: {
    name: "Composite",
    className: "ErrorFieldContract",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkbookError: msRest.CompositeMapper = {
  serializedName: "WorkbookError",
  type: {
    name: "Composite",
    className: "WorkbookError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorFieldContract"
            }
          }
        }
      }
    }
  }
};

export const MyWorkbookResource: msRest.CompositeMapper = {
  serializedName: "MyWorkbookResource",
  type: {
    name: "Composite",
    className: "MyWorkbookResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MyWorkbook: msRest.CompositeMapper = {
  serializedName: "MyWorkbook",
  type: {
    name: "Composite",
    className: "MyWorkbook",
    modelProperties: {
      ...MyWorkbookResource.type.modelProperties,
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      serializedData: {
        required: true,
        serializedName: "properties.serializedData",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      timeModified: {
        readOnly: true,
        serializedName: "properties.timeModified",
        type: {
          name: "String"
        }
      },
      category: {
        required: true,
        serializedName: "properties.category",
        type: {
          name: "String"
        }
      },
      myWorkbookTags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      userId: {
        readOnly: true,
        serializedName: "properties.userId",
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "properties.sourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MyWorkbookError: msRest.CompositeMapper = {
  serializedName: "MyWorkbookError",
  type: {
    name: "Composite",
    className: "MyWorkbookError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorFieldContract"
            }
          }
        }
      }
    }
  }
};

export const ComponentsResource: msRest.CompositeMapper = {
  serializedName: "ComponentsResource",
  type: {
    name: "Composite",
    className: "ComponentsResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkScopedResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkScopedResource",
  type: {
    name: "Composite",
    className: "PrivateLinkScopedResource",
    modelProperties: {
      resourceId: {
        serializedName: "ResourceId",
        type: {
          name: "String"
        }
      },
      scopeId: {
        serializedName: "ScopeId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationInsightsComponent: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponent",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponent",
    modelProperties: {
      ...ComponentsResource.type.modelProperties,
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      applicationId: {
        readOnly: true,
        serializedName: "properties.ApplicationId",
        type: {
          name: "String"
        }
      },
      appId: {
        readOnly: true,
        serializedName: "properties.AppId",
        type: {
          name: "String"
        }
      },
      applicationType: {
        required: true,
        serializedName: "properties.Application_Type",
        defaultValue: 'web',
        type: {
          name: "String"
        }
      },
      flowType: {
        serializedName: "properties.Flow_Type",
        defaultValue: 'Bluefield',
        type: {
          name: "String"
        }
      },
      requestSource: {
        serializedName: "properties.Request_Source",
        defaultValue: 'rest',
        type: {
          name: "String"
        }
      },
      instrumentationKey: {
        readOnly: true,
        serializedName: "properties.InstrumentationKey",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.CreationDate",
        type: {
          name: "DateTime"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.TenantId",
        type: {
          name: "String"
        }
      },
      hockeyAppId: {
        serializedName: "properties.HockeyAppId",
        type: {
          name: "String"
        }
      },
      hockeyAppToken: {
        readOnly: true,
        serializedName: "properties.HockeyAppToken",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      samplingPercentage: {
        serializedName: "properties.SamplingPercentage",
        type: {
          name: "Number"
        }
      },
      connectionString: {
        readOnly: true,
        serializedName: "properties.ConnectionString",
        type: {
          name: "String"
        }
      },
      retentionInDays: {
        serializedName: "properties.RetentionInDays",
        defaultValue: 90,
        type: {
          name: "Number"
        }
      },
      disableIpMasking: {
        serializedName: "properties.DisableIpMasking",
        type: {
          name: "Boolean"
        }
      },
      immediatePurgeDataOn30Days: {
        serializedName: "properties.ImmediatePurgeDataOn30Days",
        type: {
          name: "Boolean"
        }
      },
      privateLinkScopedResources: {
        readOnly: true,
        serializedName: "properties.PrivateLinkScopedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkScopedResource"
            }
          }
        }
      },
      publicNetworkAccessForIngestion: {
        serializedName: "properties.publicNetworkAccessForIngestion",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      publicNetworkAccessForQuery: {
        serializedName: "properties.publicNetworkAccessForQuery",
        defaultValue: 'Enabled',
        type: {
          name: "String"
        }
      },
      ingestionMode: {
        serializedName: "properties.IngestionMode",
        defaultValue: 'ApplicationInsights',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentPurgeBodyFilters: msRest.CompositeMapper = {
  serializedName: "ComponentPurgeBodyFilters",
  type: {
    name: "Composite",
    className: "ComponentPurgeBodyFilters",
    modelProperties: {
      column: {
        serializedName: "column",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Object"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentPurgeBody: msRest.CompositeMapper = {
  serializedName: "ComponentPurgeBody",
  type: {
    name: "Composite",
    className: "ComponentPurgeBody",
    modelProperties: {
      table: {
        required: true,
        serializedName: "table",
        type: {
          name: "String"
        }
      },
      filters: {
        required: true,
        serializedName: "filters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentPurgeBodyFilters"
            }
          }
        }
      }
    }
  }
};

export const ComponentPurgeResponse: msRest.CompositeMapper = {
  serializedName: "ComponentPurgeResponse",
  type: {
    name: "Composite",
    className: "ComponentPurgeResponse",
    modelProperties: {
      operationId: {
        required: true,
        serializedName: "operationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentPurgeStatusResponse: msRest.CompositeMapper = {
  serializedName: "ComponentPurgeStatusResponse",
  type: {
    name: "Composite",
    className: "ComponentPurgeStatusResponse",
    modelProperties: {
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ComponentLinkedStorageAccounts: msRest.CompositeMapper = {
  serializedName: "ComponentLinkedStorageAccounts",
  type: {
    name: "Composite",
    className: "ComponentLinkedStorageAccounts",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      linkedStorageAccount: {
        serializedName: "properties.linkedStorageAccount",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentLinkedStorageAccountsPatch: msRest.CompositeMapper = {
  serializedName: "ComponentLinkedStorageAccountsPatch",
  type: {
    name: "Composite",
    className: "ComponentLinkedStorageAccountsPatch",
    modelProperties: {
      linkedStorageAccount: {
        serializedName: "properties.linkedStorageAccount",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LiveTokenResponse: msRest.CompositeMapper = {
  serializedName: "LiveTokenResponse",
  type: {
    name: "Composite",
    className: "LiveTokenResponse",
    modelProperties: {
      liveToken: {
        readOnly: true,
        serializedName: "liveToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationInfo: msRest.CompositeMapper = {
  serializedName: "OperationInfo",
  type: {
    name: "Composite",
    className: "OperationInfo",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationLive: msRest.CompositeMapper = {
  serializedName: "OperationLive",
  type: {
    name: "Composite",
    className: "OperationLive",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationInfo"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationsListResult: msRest.CompositeMapper = {
  serializedName: "OperationsListResult",
  type: {
    name: "Composite",
    className: "OperationsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationLive"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnnotationsListResult: msRest.CompositeMapper = {
  serializedName: "AnnotationsListResult",
  type: {
    name: "Composite",
    className: "AnnotationsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Annotation"
            }
          }
        }
      }
    }
  }
};

export const ApplicationInsightsComponentAPIKeyListResult: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentAPIKeyListResult",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentAPIKeyListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationInsightsComponentAPIKey"
            }
          }
        }
      }
    }
  }
};

export const WorkItemConfigurationsListResult: msRest.CompositeMapper = {
  serializedName: "WorkItemConfigurationsListResult",
  type: {
    name: "Composite",
    className: "WorkItemConfigurationsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkItemConfiguration"
            }
          }
        }
      }
    }
  }
};

export const ApplicationInsightsWebTestLocationsListResult: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsWebTestLocationsListResult",
  type: {
    name: "Composite",
    className: "ApplicationInsightsWebTestLocationsListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationInsightsComponentWebTestLocation"
            }
          }
        }
      }
    }
  }
};

export const WebTestListResult: msRest.CompositeMapper = {
  serializedName: "webTestListResult",
  type: {
    name: "Composite",
    className: "WebTestListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebTest"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkbooksListResult: msRest.CompositeMapper = {
  serializedName: "WorkbooksListResult",
  type: {
    name: "Composite",
    className: "WorkbooksListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workbook"
            }
          }
        }
      }
    }
  }
};

export const MyWorkbooksListResult: msRest.CompositeMapper = {
  serializedName: "MyWorkbooksListResult",
  type: {
    name: "Composite",
    className: "MyWorkbooksListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MyWorkbook"
            }
          }
        }
      }
    }
  }
};

export const ApplicationInsightsComponentListResult: msRest.CompositeMapper = {
  serializedName: "ApplicationInsightsComponentListResult",
  type: {
    name: "Composite",
    className: "ApplicationInsightsComponentListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationInsightsComponent"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
