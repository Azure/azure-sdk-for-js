/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Error response indicates Insights service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * Error code.
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Cdn
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  operation?: string;
}

/**
 * CDN REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Annotation associated with an application insights resource.
 */
export interface Annotation {
  /**
   * Name of annotation
   */
  annotationName?: string;
  /**
   * Category of annotation, free form
   */
  category?: string;
  /**
   * Time when event occurred
   */
  eventTime?: Date;
  /**
   * Unique Id for annotation
   */
  id?: string;
  /**
   * Serialized JSON object for detailed properties
   */
  properties?: string;
  /**
   * Related parent annotation if any. Default value: 'null'.
   */
  relatedAnnotation?: string;
}

/**
 * Inner error
 */
export interface InnerError {
  /**
   * Provides correlation for request
   */
  diagnosticcontext?: string;
  /**
   * Request time
   */
  time?: Date;
}

/**
 * Error associated with trying to create annotation with Id that already exist
 */
export interface AnnotationError {
  /**
   * Error detail code and explanation
   */
  code?: string;
  /**
   * Error message
   */
  message?: string;
  innererror?: InnerError;
}

/**
 * An Application Insights component API Key creation request definition.
 */
export interface APIKeyRequest {
  /**
   * The name of the API Key.
   */
  name?: string;
  /**
   * The read access rights of this API Key.
   */
  linkedReadProperties?: string[];
  /**
   * The write access rights of this API Key.
   */
  linkedWriteProperties?: string[];
}

/**
 * Properties that define an API key of an Application Insights Component.
 */
export interface ApplicationInsightsComponentAPIKey {
  /**
   * The unique ID of the API key inside an Application Insights component. It is auto generated
   * when the API key is created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The API key value. It will be only return once when the API Key was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiKey?: string;
  /**
   * The create date of this API key.
   */
  createdDate?: string;
  /**
   * The name of the API key.
   */
  name?: string;
  /**
   * The read access rights of this API Key.
   */
  linkedReadProperties?: string[];
  /**
   * The write access rights of this API Key.
   */
  linkedWriteProperties?: string[];
}

/**
 * An Application Insights component Continuous Export configuration request definition.
 */
export interface ApplicationInsightsComponentExportRequest {
  /**
   * The document types to be exported, as comma separated values. Allowed values include
   * 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
   * 'PerformanceCounters', 'Availability', 'Messages'.
   */
  recordTypes?: string;
  /**
   * The Continuous Export destination type. This has to be 'Blob'.
   */
  destinationType?: string;
  /**
   * The SAS URL for the destination storage container. It must grant write permission.
   */
  destinationAddress?: string;
  /**
   * Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to
   * 'false'.
   */
  isEnabled?: string;
  /**
   * Deprecated
   */
  notificationQueueEnabled?: string;
  /**
   * Deprecated
   */
  notificationQueueUri?: string;
  /**
   * The subscription ID of the destination storage container.
   */
  destinationStorageSubscriptionId?: string;
  /**
   * The location ID of the destination storage container.
   */
  destinationStorageLocationId?: string;
  /**
   * The name of destination storage account.
   */
  destinationAccountId?: string;
}

/**
 * Properties that define a Continuous Export configuration.
 */
export interface ApplicationInsightsComponentExportConfiguration {
  /**
   * The unique ID of the export configuration inside an Application Insights component. It is auto
   * generated when the Continuous Export configuration is created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly exportId?: string;
  /**
   * The instrumentation key of the Application Insights component.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instrumentationKey?: string;
  /**
   * This comma separated list of document types that will be exported. The possible values include
   * 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
   * 'PerformanceCounters', 'Availability', 'Messages'.
   */
  recordTypes?: string;
  /**
   * The name of the Application Insights component.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly applicationName?: string;
  /**
   * The subscription of the Application Insights component.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The resource group of the Application Insights component.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroup?: string;
  /**
   * The destination storage account subscription ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly destinationStorageSubscriptionId?: string;
  /**
   * The destination account location ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly destinationStorageLocationId?: string;
  /**
   * The name of destination account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly destinationAccountId?: string;
  /**
   * The destination type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly destinationType?: string;
  /**
   * This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be
   * 'false'.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUserEnabled?: string;
  /**
   * Last time the Continuous Export configuration was updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUserUpdate?: string;
  /**
   * Deprecated
   */
  notificationQueueEnabled?: string;
  /**
   * This indicates current Continuous Export configuration status. The possible values are
   * 'Preparing', 'Success', 'Failure'.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly exportStatus?: string;
  /**
   * The last time data was successfully delivered to the destination storage container for this
   * Continuous Export configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastSuccessTime?: string;
  /**
   * The last time the Continuous Export configuration started failing.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastGapTime?: string;
  /**
   * This is the reason the Continuous Export configuration started failing. It can be
   * 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly permanentErrorReason?: string;
  /**
   * The name of the destination storage account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageName?: string;
  /**
   * The name of the destination storage container.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly containerName?: string;
}

/**
 * An Application Insights component daily data volume cap
 */
export interface ApplicationInsightsComponentDataVolumeCap {
  /**
   * Daily data volume cap in GB.
   */
  cap?: number;
  /**
   * Daily data volume cap UTC reset hour.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resetTime?: number;
  /**
   * Reserved, not used for now.
   */
  warningThreshold?: number;
  /**
   * Reserved, not used for now.
   */
  stopSendNotificationWhenHitThreshold?: boolean;
  /**
   * Do not send a notification email when the daily data volume cap is met.
   */
  stopSendNotificationWhenHitCap?: boolean;
  /**
   * Maximum daily data volume cap that the user can set for this component.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxHistoryCap?: number;
}

/**
 * An Application Insights component billing features
 */
export interface ApplicationInsightsComponentBillingFeatures {
  /**
   * An Application Insights component daily data volume cap
   */
  dataVolumeCap?: ApplicationInsightsComponentDataVolumeCap;
  /**
   * Current enabled pricing plan. When the component is in the Enterprise plan, this will list
   * both 'Basic' and 'Application Insights Enterprise'.
   */
  currentBillingFeatures?: string[];
}

/**
 * An Application Insights component daily data volume cap status
 */
export interface ApplicationInsightsComponentQuotaStatus {
  /**
   * The Application ID for the Application Insights component.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly appId?: string;
  /**
   * The daily data volume cap is met, and data ingestion will be stopped.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shouldBeThrottled?: boolean;
  /**
   * Date and time when the daily data volume cap will be reset, and data ingestion will resume.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expirationTime?: string;
}

/**
 * An Application Insights component feature capabilities
 */
export interface ApplicationInsightsComponentFeatureCapabilities {
  /**
   * Whether allow to use continuous export feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportExportData?: boolean;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly burstThrottlePolicy?: string;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metadataClass?: string;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly liveStreamMetrics?: boolean;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly applicationMap?: boolean;
  /**
   * Whether allow to use work item integration feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly workItemIntegration?: boolean;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly powerBIIntegration?: boolean;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly openSchema?: boolean;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly proactiveDetection?: boolean;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly analyticsIntegration?: boolean;
  /**
   * Whether allow to use multiple steps web test feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly multipleStepWebTest?: boolean;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiAccessLevel?: string;
  /**
   * The application insights component used tracking type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trackingType?: string;
  /**
   * Daily data volume cap in GB.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dailyCap?: number;
  /**
   * Daily data volume cap UTC reset hour.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dailyCapResetTime?: number;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly throttleRate?: number;
}

/**
 * An Application Insights component feature capability
 */
export interface ApplicationInsightsComponentFeatureCapability {
  /**
   * The name of the capability.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The description of the capability.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * The value of the capability.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
  /**
   * The unit of the capability.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * The meter used for the capability.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterId?: string;
  /**
   * The meter rate of the meter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterRateFrequency?: string;
}

/**
 * An Application Insights component daily data volume cap status
 */
export interface ApplicationInsightsComponentFeature {
  /**
   * The pricing feature name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly featureName?: string;
  /**
   * The meter id used for the feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterId?: string;
  /**
   * The meter rate for the feature's meter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterRateFrequency?: string;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resouceId?: string;
  /**
   * Reserved, not used now.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isHidden?: boolean;
  /**
   * A list of Application Insights component feature capability.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: ApplicationInsightsComponentFeatureCapability[];
  /**
   * Display name of the feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly title?: string;
  /**
   * Whether can apply addon feature on to it.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isMainFeature?: boolean;
  /**
   * The add on features on main feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly supportedAddonFeatures?: string;
}

/**
 * An Application Insights component available features.
 */
export interface ApplicationInsightsComponentAvailableFeatures {
  /**
   * A list of Application Insights component feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: ApplicationInsightsComponentFeature[];
}

/**
 * Static definitions of the ProactiveDetection configuration rule (same values for all
 * components).
 */
export interface ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions {
  /**
   * The rule name
   */
  name?: string;
  /**
   * The rule name as it is displayed in UI
   */
  displayName?: string;
  /**
   * The rule description
   */
  description?: string;
  /**
   * URL which displays additional info about the proactive detection rule
   */
  helpUrl?: string;
  /**
   * A flag indicating whether the rule is hidden (from the UI)
   */
  isHidden?: boolean;
  /**
   * A flag indicating whether the rule is enabled by default
   */
  isEnabledByDefault?: boolean;
  /**
   * A flag indicating whether the rule is in preview
   */
  isInPreview?: boolean;
  /**
   * A flag indicating whether email notifications are supported for detections for this rule
   */
  supportsEmailNotifications?: boolean;
}

/**
 * Properties that define a ProactiveDetection configuration.
 */
export interface ApplicationInsightsComponentProactiveDetectionConfiguration extends BaseResource {
  /**
   * The rule name
   */
  name?: string;
  /**
   * A flag that indicates whether this rule is enabled by the user
   */
  enabled?: boolean;
  /**
   * A flag that indicated whether notifications on this rule should be sent to subscription owners
   */
  sendEmailsToSubscriptionOwners?: boolean;
  /**
   * Custom email addresses for this rule notifications
   */
  customEmails?: string[];
  /**
   * The last time this rule was updated
   */
  lastUpdatedTime?: string;
  /**
   * Static definitions of the ProactiveDetection configuration rule (same values for all
   * components).
   */
  ruleDefinitions?: ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions;
}

/**
 * Work item configuration associated with an application insights resource.
 */
export interface WorkItemConfiguration {
  /**
   * Connector identifier where work item is created
   */
  connectorId?: string;
  /**
   * Configuration friendly name
   */
  configDisplayName?: string;
  /**
   * Boolean value indicating whether configuration is default
   */
  isDefault?: boolean;
  /**
   * Unique Id for work item
   */
  id?: string;
  /**
   * Serialized JSON object for detailed properties
   */
  configProperties?: string;
}

/**
 * Work item configuration creation payload
 */
export interface WorkItemCreateConfiguration {
  /**
   * Unique connector id
   */
  connectorId?: string;
  /**
   * Serialized JSON object for detailed properties
   */
  connectorDataConfiguration?: string;
  /**
   * Boolean indicating validate only
   */
  validateOnly?: boolean;
  /**
   * Custom work item properties
   */
  workItemProperties?: { [propertyName: string]: string };
}

/**
 * Error associated with trying to get work item configuration or configurations
 */
export interface WorkItemConfigurationError {
  /**
   * Error detail code and explanation
   */
  code?: string;
  /**
   * Error message
   */
  message?: string;
  innererror?: InnerError;
}

/**
 * Properties that define a favorite that is associated to an Application Insights component.
 */
export interface ApplicationInsightsComponentFavorite {
  /**
   * The user-defined name of the favorite.
   */
  name?: string;
  /**
   * Configuration of this particular favorite, which are driven by the Azure portal UX.
   * Configuration data is a string containing valid JSON
   */
  config?: string;
  /**
   * This instance's version of the data model. This can change as new features are added that can
   * be marked favorite. Current examples include MetricsExplorer (ME) and Search.
   */
  version?: string;
  /**
   * Internally assigned unique id of the favorite definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly favoriteId?: string;
  /**
   * Enum indicating if this favorite definition is owned by a specific user or is shared between
   * all users with access to the Application Insights component. Possible values include:
   * 'shared', 'user'
   */
  favoriteType?: FavoriteType;
  /**
   * The source of the favorite definition.
   */
  sourceType?: string;
  /**
   * Date and time in UTC of the last modification that was made to this favorite definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeModified?: string;
  /**
   * A list of 0 or more tags that are associated with this favorite definition
   */
  tags?: string[];
  /**
   * Favorite category, as defined by the user at creation time.
   */
  category?: string;
  /**
   * Flag denoting wether or not this favorite was generated from a template.
   */
  isGeneratedFromTemplate?: boolean;
  /**
   * Unique user id of the specific user that owns this favorite.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userId?: string;
}

/**
 * Properties that define a web test location available to an Application Insights Component.
 */
export interface ApplicationInsightsComponentWebTestLocation {
  /**
   * The display name of the web test location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * Internally defined geographic location tag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tag?: string;
}

/**
 * An azure resource object
 */
export interface WebtestsResource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A container holding only the Tags for a resource, allowing the user to update the tags on a
 * WebTest instance.
 */
export interface TagsResource {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Geo-physical location to run a web test from. You must specify one or more locations for the
 * test to run from.
 */
export interface WebTestGeolocation {
  /**
   * Location ID for the webtest to run from.
   */
  location?: string;
}

/**
 * An XML configuration specification for a WebTest.
 */
export interface WebTestPropertiesConfiguration {
  /**
   * The XML specification of a WebTest to run against an application.
   */
  webTest?: string;
}

/**
 * An Application Insights web test definition.
 */
export interface WebTest extends WebtestsResource {
  /**
   * The kind of web test that this web test watches. Choices are ping and multistep. Possible
   * values include: 'ping', 'multistep'. Default value: 'ping'.
   */
  kind?: WebTestKind;
  /**
   * Unique ID of this WebTest. This is typically the same value as the Name field.
   */
  syntheticMonitorId: string;
  /**
   * User defined name if this WebTest.
   */
  webTestName: string;
  /**
   * Purpose/user defined descriptive test for this WebTest.
   */
  description?: string;
  /**
   * Is the test actively being monitored.
   */
  enabled?: boolean;
  /**
   * Interval in seconds between test runs for this WebTest. Default value is 300. Default value:
   * 300.
   */
  frequency?: number;
  /**
   * Seconds until this WebTest will timeout and fail. Default value is 30. Default value: 30.
   */
  timeout?: number;
  /**
   * The kind of web test this is, valid choices are ping and multistep. Possible values include:
   * 'ping', 'multistep'. Default value: 'ping'.
   */
  webTestKind: WebTestKind;
  /**
   * Allow for retries should this WebTest fail.
   */
  retryEnabled?: boolean;
  /**
   * A list of where to physically run the tests from to give global coverage for accessibility of
   * your application.
   */
  locations: WebTestGeolocation[];
  /**
   * An XML configuration specification for a WebTest.
   */
  configuration?: WebTestPropertiesConfiguration;
  /**
   * Current state of this component, whether or not is has been provisioned within the resource
   * group it is defined. Users cannot change this value but are able to read from it. Values will
   * include Succeeded, Deploying, Canceled, and Failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * A set of properties that can be defined in the context of a specific item type. Each type may
 * have its own properties.
 */
export interface ApplicationInsightsComponentAnalyticsItemProperties {
  /**
   * A function alias, used when the type of the item is Function
   */
  functionAlias?: string;
}

/**
 * Properties that define an Analytics item that is associated to an Application Insights
 * component.
 */
export interface ApplicationInsightsComponentAnalyticsItem {
  /**
   * Internally assigned unique id of the item definition.
   */
  id?: string;
  /**
   * The user-defined name of the item.
   */
  name?: string;
  /**
   * The content of this item
   */
  content?: string;
  /**
   * This instance's version of the data model. This can change as new features are added.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * Enum indicating if this item definition is owned by a specific user or is shared between all
   * users with access to the Application Insights component. Possible values include: 'shared',
   * 'user'
   */
  scope?: ItemScope;
  /**
   * Enum indicating the type of the Analytics item. Possible values include: 'query', 'function',
   * 'folder', 'recent'
   */
  type?: ItemType;
  /**
   * Date and time in UTC when this item was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: string;
  /**
   * Date and time in UTC of the last modification that was made to this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeModified?: string;
  properties?: ApplicationInsightsComponentAnalyticsItemProperties;
}

/**
 * An azure resource object
 */
export interface WorkbookResource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An Application Insights workbook definition.
 */
export interface Workbook extends WorkbookResource {
  /**
   * The kind of workbook. Choices are user and shared. Possible values include: 'user', 'shared'
   */
  kind?: SharedTypeKind;
  /**
   * The user-defined name of the workbook.
   */
  workbookName: string;
  /**
   * Configuration of this particular workbook. Configuration data is a string containing valid
   * JSON
   */
  serializedData: string;
  /**
   * This instance's version of the data model. This can change as new features are added that can
   * be marked workbook.
   */
  version?: string;
  /**
   * Internally assigned unique id of the workbook definition.
   */
  workbookId: string;
  /**
   * Enum indicating if this workbook definition is owned by a specific user or is shared between
   * all users with access to the Application Insights component. Possible values include: 'user',
   * 'shared'. Default value: 'shared'.
   */
  sharedTypeKind: SharedTypeKind;
  /**
   * Date and time in UTC of the last modification that was made to this workbook definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeModified?: string;
  /**
   * Workbook category, as defined by the user at creation time.
   */
  category: string;
  /**
   * A list of 0 or more tags that are associated with this workbook definition
   */
  workbookTags?: string[];
  /**
   * Unique user id of the specific user that owns this workbook.
   */
  userId: string;
  /**
   * Optional resourceId for a source resource.
   */
  sourceResourceId?: string;
}

/**
 * Contains a sourceId and workbook resource id to link two resources.
 */
export interface LinkProperties {
  /**
   * The source Azure resource id
   */
  sourceId?: string;
  /**
   * The workbook Azure resource id
   */
  targetId?: string;
  /**
   * The category of workbook
   */
  category?: string;
}

/**
 * Error Field contract.
 */
export interface ErrorFieldContract {
  /**
   * Property level error code.
   */
  code?: string;
  /**
   * Human-readable representation of property-level error.
   */
  message?: string;
  /**
   * Property name.
   */
  target?: string;
}

/**
 * Error message body that will indicate why the operation failed.
 */
export interface WorkbookError {
  /**
   * Service-defined error code. This code serves as a sub-status for the HTTP error code specified
   * in the response.
   */
  code?: string;
  /**
   * Human-readable representation of the error.
   */
  message?: string;
  /**
   * The list of invalid fields send in request, in case of validation error.
   */
  details?: ErrorFieldContract[];
}

/**
 * An azure resource object
 */
export interface MyWorkbookResource extends BaseResource {
  /**
   * Azure resource Id
   */
  id?: string;
  /**
   * Azure resource name
   */
  name?: string;
  /**
   * Azure resource type
   */
  type?: string;
  /**
   * Resource location
   */
  location?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An Application Insights private workbook definition.
 */
export interface MyWorkbook extends MyWorkbookResource {
  /**
   * The kind of workbook. Choices are user and shared. Possible values include: 'user', 'shared'
   */
  kind?: SharedTypeKind;
  /**
   * The user-defined name of the private workbook.
   */
  displayName: string;
  /**
   * Configuration of this particular private workbook. Configuration data is a string containing
   * valid JSON
   */
  serializedData: string;
  /**
   * This instance's version of the data model. This can change as new features are added that can
   * be marked private workbook.
   */
  version?: string;
  /**
   * Date and time in UTC of the last modification that was made to this private workbook
   * definition.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeModified?: string;
  /**
   * Workbook category, as defined by the user at creation time.
   */
  category: string;
  /**
   * A list of 0 or more tags that are associated with this private workbook definition
   */
  myWorkbookTags?: string[];
  /**
   * Unique user id of the specific user that owns this private workbook.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userId?: string;
  /**
   * Optional resourceId for a source resource.
   */
  sourceId?: string;
}

/**
 * Error message body that will indicate why the operation failed.
 */
export interface MyWorkbookError {
  /**
   * Service-defined error code. This code serves as a sub-status for the HTTP error code specified
   * in the response.
   */
  code?: string;
  /**
   * Human-readable representation of the error.
   */
  message?: string;
  /**
   * The list of invalid fields send in request, in case of validation error.
   */
  details?: ErrorFieldContract[];
}

/**
 * An azure resource object
 */
export interface ComponentsResource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The private link scope resource reference.
 */
export interface PrivateLinkScopedResource {
  /**
   * The full resource Id of the private link scope resource.
   */
  resourceId?: string;
  /**
   * The private link scope unique Identifier.
   */
  scopeId?: string;
}

/**
 * An Application Insights component definition.
 */
export interface ApplicationInsightsComponent extends ComponentsResource {
  /**
   * The kind of application that this component refers to, used to customize UI. This value is a
   * freeform string, values should typically be one of the following: web, ios, other, store,
   * java, phone.
   */
  kind: string;
  /**
   * The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly applicationId?: string;
  /**
   * Application Insights Unique ID for your Application.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly appId?: string;
  /**
   * Type of application being monitored. Possible values include: 'web', 'other'. Default value:
   * 'web'.
   */
  applicationType: ApplicationType;
  /**
   * Used by the Application Insights system to determine what kind of flow this component was
   * created by. This is to be set to 'Bluefield' when creating/updating a component via the REST
   * API. Possible values include: 'Bluefield'. Default value: 'Bluefield'.
   */
  flowType?: FlowType;
  /**
   * Describes what tool created this Application Insights component. Customers using this API
   * should set this to the default 'rest'. Possible values include: 'rest'. Default value: 'rest'.
   */
  requestSource?: RequestSource;
  /**
   * Application Insights Instrumentation key. A read-only value that applications can use to
   * identify the destination for all telemetry sent to Azure Application Insights. This value will
   * be supplied upon construction of each new Application Insights component.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instrumentationKey?: string;
  /**
   * Creation Date for the Application Insights component, in ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * Azure Tenant Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The unique application ID created when a new application is added to HockeyApp, used for
   * communications with HockeyApp.
   */
  hockeyAppId?: string;
  /**
   * Token used to authenticate communications with between Application Insights and HockeyApp.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hockeyAppToken?: string;
  /**
   * Current state of this component: whether or not is has been provisioned within the resource
   * group it is defined. Users cannot change this value but are able to read from it. Values will
   * include Succeeded, Deploying, Canceled, and Failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Percentage of the data produced by the application being monitored that is being sampled for
   * Application Insights telemetry.
   */
  samplingPercentage?: number;
  /**
   * Application Insights component connection string.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly connectionString?: string;
  /**
   * Retention period in days. Default value: 90.
   */
  retentionInDays?: number;
  /**
   * Disable IP masking.
   */
  disableIpMasking?: boolean;
  /**
   * Purge data immediately after 30 days.
   */
  immediatePurgeDataOn30Days?: boolean;
  /**
   * List of linked private link scope resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateLinkScopedResources?: PrivateLinkScopedResource[];
  /**
   * The network access type for accessing Application Insights ingestion. Possible values include:
   * 'Enabled', 'Disabled'. Default value: 'Enabled'.
   */
  publicNetworkAccessForIngestion?: PublicNetworkAccessType;
  /**
   * The network access type for accessing Application Insights query. Possible values include:
   * 'Enabled', 'Disabled'. Default value: 'Enabled'.
   */
  publicNetworkAccessForQuery?: PublicNetworkAccessType;
  /**
   * Indicates the flow of the ingestion. Possible values include: 'ApplicationInsights',
   * 'ApplicationInsightsWithDiagnosticSettings', 'LogAnalytics'. Default value:
   * 'ApplicationInsights'.
   */
  ingestionMode?: IngestionMode;
}

/**
 * User-defined filters to return data which will be purged from the table.
 */
export interface ComponentPurgeBodyFilters {
  /**
   * The column of the table over which the given query should run
   */
  column?: string;
  /**
   * A query operator to evaluate over the provided column and value(s). Supported operators are
   * ==, =~, in, in~, >, >=, <, <=, between, and have the same behavior as they would in a KQL
   * query.
   */
  operator?: string;
  /**
   * the value for the operator to function over. This can be a number (e.g., > 100), a string
   * (timestamp >= '2017-09-01') or array of values.
   */
  value?: any;
  /**
   * When filtering over custom dimensions, this key will be used as the name of the custom
   * dimension.
   */
  key?: string;
}

/**
 * Describes the body of a purge request for an App Insights component
 */
export interface ComponentPurgeBody {
  /**
   * Table from which to purge data.
   */
  table: string;
  /**
   * The set of columns and filters (queries) to run over them to purge the resulting data.
   */
  filters: ComponentPurgeBodyFilters[];
}

/**
 * Response containing operationId for a specific purge action.
 */
export interface ComponentPurgeResponse {
  /**
   * Id to use when querying for status for a particular purge operation.
   */
  operationId: string;
}

/**
 * Response containing status for a specific purge operation.
 */
export interface ComponentPurgeStatusResponse {
  /**
   * Status of the operation represented by the requested Id. Possible values include: 'pending',
   * 'completed'
   */
  status: PurgeState;
}

/**
 * An interface representing Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource Id for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or
   * Microsoft.Storage/storageAccounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than
 * required location and tags
 */
export interface ProxyResource extends Resource {
}

/**
 * An Application Insights component linked storage accounts
 */
export interface ComponentLinkedStorageAccounts extends ProxyResource {
  /**
   * Linked storage account resource ID
   */
  linkedStorageAccount?: string;
}

/**
 * An Application Insights component linked storage accounts patch
 */
export interface ComponentLinkedStorageAccountsPatch {
  /**
   * Linked storage account resource ID
   */
  linkedStorageAccount?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * The resource model definition for a Azure Resource Manager resource with an etag.
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * The response to a live token query.
 */
export interface LiveTokenResponse {
  /**
   * JWT token for accessing live metrics stream data.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly liveToken?: string;
}

/**
 * Information about an operation
 */
export interface OperationInfo {
  /**
   * Name of the provider
   */
  provider?: string;
  /**
   * Name of the resource type
   */
  resource?: string;
  /**
   * Name of the operation
   */
  operation?: string;
  /**
   * Description of the operation
   */
  description?: string;
}

/**
 * Represents an operation returned by the GetOperations request
 */
export interface OperationLive {
  /**
   * Name of the operation
   */
  name?: string;
  /**
   * Display name of the operation
   */
  display?: OperationInfo;
  /**
   * Origin of the operation
   */
  origin?: string;
  /**
   * Properties of the operation
   */
  properties?: any;
}

/**
 * Optional Parameters.
 */
export interface FavoritesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The type of favorite. Value can be either shared or user. Possible values include: 'shared',
   * 'user'. Default value: 'shared'.
   */
  favoriteType?: FavoriteType;
  /**
   * Source type of favorite to return. When left out, the source type defaults to 'other' (not
   * present in this enum). Possible values include: 'retention', 'notebook', 'sessions', 'events',
   * 'userflows', 'funnel', 'impact', 'segmentation'
   */
  sourceType?: FavoriteSourceType;
  /**
   * Flag indicating whether or not to return the full content for each applicable favorite. If
   * false, only return summary content for favorites.
   */
  canFetchContent?: boolean;
  /**
   * Tags that must be present on each favorite returned.
   */
  tags?: string[];
}

/**
 * Optional Parameters.
 */
export interface AnalyticsItemsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Enum indicating if this item definition is owned by a specific user or is shared between all
   * users with access to the Application Insights component. Possible values include: 'shared',
   * 'user'. Default value: 'shared'.
   */
  scope?: ItemScope;
  /**
   * Enum indicating the type of the Analytics item. Possible values include: 'none', 'query',
   * 'function', 'folder', 'recent'. Default value: 'none'.
   */
  type?: ItemTypeParameter;
  /**
   * Flag indicating whether or not to return the content of each applicable item. If false, only
   * return the item information.
   */
  includeContent?: boolean;
}

/**
 * Optional Parameters.
 */
export interface AnalyticsItemsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The Id of a specific item defined in the Application Insights component
   */
  id?: string;
  /**
   * The name of a specific item defined in the Application Insights component
   */
  name?: string;
}

/**
 * Optional Parameters.
 */
export interface AnalyticsItemsPutOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Flag indicating whether or not to force save an item. This allows overriding an item if it
   * already exists.
   */
  overrideItem?: boolean;
}

/**
 * Optional Parameters.
 */
export interface AnalyticsItemsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The Id of a specific item defined in the Application Insights component
   */
  id?: string;
  /**
   * The name of a specific item defined in the Application Insights component
   */
  name?: string;
}

/**
 * Optional Parameters.
 */
export interface WorkbooksListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tags presents on each workbook returned.
   */
  tags?: string[];
  /**
   * Flag indicating whether or not to return the full content for each applicable workbook. If
   * false, only return summary content for workbooks.
   */
  canFetchContent?: boolean;
}

/**
 * Optional Parameters.
 */
export interface MyWorkbooksListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tags presents on each workbook returned.
   */
  tags?: string[];
  /**
   * Flag indicating whether or not to return the full content for each applicable workbook. If
   * false, only return summary content for workbooks.
   */
  canFetchContent?: boolean;
}

/**
 * Optional Parameters.
 */
export interface MyWorkbooksListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tags presents on each workbook returned.
   */
  tags?: string[];
  /**
   * Flag indicating whether or not to return the full content for each applicable workbook. If
   * false, only return summary content for workbooks.
   */
  canFetchContent?: boolean;
}

/**
 * An interface representing ApplicationInsightsManagementClientOptions.
 */
export interface ApplicationInsightsManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the request to list CDN operations. It contains a list of operations and a URL link to
 * get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the List Operations operation
 * @extends Array<OperationLive>
 */
export interface OperationsListResult extends Array<OperationLive> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Annotations list result.
 * @extends Array<Annotation>
 */
export interface AnnotationsListResult extends Array<Annotation> {
}

/**
 * @interface
 * Describes the list of API Keys of an Application Insights Component.
 * @extends Array<ApplicationInsightsComponentAPIKey>
 */
export interface ApplicationInsightsComponentAPIKeyListResult extends Array<ApplicationInsightsComponentAPIKey> {
}

/**
 * @interface
 * Work item configuration list result.
 * @extends Array<WorkItemConfiguration>
 */
export interface WorkItemConfigurationsListResult extends Array<WorkItemConfiguration> {
}

/**
 * @interface
 * Describes the list of web test locations available to an Application Insights Component.
 * @extends Array<ApplicationInsightsComponentWebTestLocation>
 */
export interface ApplicationInsightsWebTestLocationsListResult extends Array<ApplicationInsightsComponentWebTestLocation> {
}

/**
 * @interface
 * A list of 0 or more Application Insights web test definitions.
 * @extends Array<WebTest>
 */
export interface WebTestListResult extends Array<WebTest> {
  /**
   * The link to get the next part of the returned list of web tests, should the return set be too
   * large for a single request. May be null.
   */
  nextLink?: string;
}

/**
 * @interface
 * Workbook list result.
 * @extends Array<Workbook>
 */
export interface WorkbooksListResult extends Array<Workbook> {
}

/**
 * @interface
 * Workbook list result.
 * @extends Array<MyWorkbook>
 */
export interface MyWorkbooksListResult extends Array<MyWorkbook> {
}

/**
 * @interface
 * Describes the list of Application Insights Resources.
 * @extends Array<ApplicationInsightsComponent>
 */
export interface ApplicationInsightsComponentListResult extends Array<ApplicationInsightsComponent> {
  /**
   * The URI to get the next set of Application Insights component definitions if too many
   * components where returned in the result set.
   */
  nextLink?: string;
}

/**
 * Defines values for FavoriteType.
 * Possible values include: 'shared', 'user'
 * @readonly
 * @enum {string}
 */
export type FavoriteType = 'shared' | 'user';

/**
 * Defines values for WebTestKind.
 * Possible values include: 'ping', 'multistep'
 * @readonly
 * @enum {string}
 */
export type WebTestKind = 'ping' | 'multistep';

/**
 * Defines values for ItemScope.
 * Possible values include: 'shared', 'user'
 * @readonly
 * @enum {string}
 */
export type ItemScope = 'shared' | 'user';

/**
 * Defines values for ItemType.
 * Possible values include: 'query', 'function', 'folder', 'recent'
 * @readonly
 * @enum {string}
 */
export type ItemType = 'query' | 'function' | 'folder' | 'recent';

/**
 * Defines values for SharedTypeKind.
 * Possible values include: 'user', 'shared'
 * @readonly
 * @enum {string}
 */
export type SharedTypeKind = 'user' | 'shared';

/**
 * Defines values for ApplicationType.
 * Possible values include: 'web', 'other'
 * @readonly
 * @enum {string}
 */
export type ApplicationType = 'web' | 'other';

/**
 * Defines values for FlowType.
 * Possible values include: 'Bluefield'
 * @readonly
 * @enum {string}
 */
export type FlowType = 'Bluefield';

/**
 * Defines values for RequestSource.
 * Possible values include: 'rest'
 * @readonly
 * @enum {string}
 */
export type RequestSource = 'rest';

/**
 * Defines values for PublicNetworkAccessType.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type PublicNetworkAccessType = 'Enabled' | 'Disabled';

/**
 * Defines values for IngestionMode.
 * Possible values include: 'ApplicationInsights', 'ApplicationInsightsWithDiagnosticSettings',
 * 'LogAnalytics'
 * @readonly
 * @enum {string}
 */
export type IngestionMode = 'ApplicationInsights' | 'ApplicationInsightsWithDiagnosticSettings' | 'LogAnalytics';

/**
 * Defines values for PurgeState.
 * Possible values include: 'pending', 'completed'
 * @readonly
 * @enum {string}
 */
export type PurgeState = 'pending' | 'completed';

/**
 * Defines values for FavoriteSourceType.
 * Possible values include: 'retention', 'notebook', 'sessions', 'events', 'userflows', 'funnel',
 * 'impact', 'segmentation'
 * @readonly
 * @enum {string}
 */
export type FavoriteSourceType = 'retention' | 'notebook' | 'sessions' | 'events' | 'userflows' | 'funnel' | 'impact' | 'segmentation';

/**
 * Defines values for ItemScopePath.
 * Possible values include: 'analyticsItems', 'myanalyticsItems'
 * @readonly
 * @enum {string}
 */
export type ItemScopePath = 'analyticsItems' | 'myanalyticsItems';

/**
 * Defines values for ItemTypeParameter.
 * Possible values include: 'none', 'query', 'function', 'folder', 'recent'
 * @readonly
 * @enum {string}
 */
export type ItemTypeParameter = 'none' | 'query' | 'function' | 'folder' | 'recent';

/**
 * Defines values for CategoryType.
 * Possible values include: 'workbook', 'TSG', 'performance', 'retention'
 * @readonly
 * @enum {string}
 */
export type CategoryType = 'workbook' | 'TSG' | 'performance' | 'retention';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the list1 operation.
 */
export type OperationsList1Response = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the list1Next operation.
 */
export type OperationsList1NextResponse = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AnnotationsListResponse = AnnotationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AnnotationsListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type AnnotationsCreateResponse = Array<Annotation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Annotation[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type AnnotationsGetResponse = Array<Annotation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Annotation[];
    };
};

/**
 * Contains response data for the list operation.
 */
export type APIKeysListResponse = ApplicationInsightsComponentAPIKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentAPIKeyListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type APIKeysCreateResponse = ApplicationInsightsComponentAPIKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentAPIKey;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type APIKeysDeleteMethodResponse = ApplicationInsightsComponentAPIKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentAPIKey;
    };
};

/**
 * Contains response data for the get operation.
 */
export type APIKeysGetResponse = ApplicationInsightsComponentAPIKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentAPIKey;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ExportConfigurationsListResponse = Array<ApplicationInsightsComponentExportConfiguration> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentExportConfiguration[];
    };
};

/**
 * Contains response data for the create operation.
 */
export type ExportConfigurationsCreateResponse = Array<ApplicationInsightsComponentExportConfiguration> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentExportConfiguration[];
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ExportConfigurationsDeleteMethodResponse = ApplicationInsightsComponentExportConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentExportConfiguration;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExportConfigurationsGetResponse = ApplicationInsightsComponentExportConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentExportConfiguration;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ExportConfigurationsUpdateResponse = ApplicationInsightsComponentExportConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentExportConfiguration;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ComponentCurrentBillingFeaturesGetResponse = ApplicationInsightsComponentBillingFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentBillingFeatures;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ComponentCurrentBillingFeaturesUpdateResponse = ApplicationInsightsComponentBillingFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentBillingFeatures;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ComponentQuotaStatusGetResponse = ApplicationInsightsComponentQuotaStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentQuotaStatus;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ComponentFeatureCapabilitiesGetResponse = ApplicationInsightsComponentFeatureCapabilities & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentFeatureCapabilities;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ComponentAvailableFeaturesGetResponse = ApplicationInsightsComponentAvailableFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentAvailableFeatures;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ProactiveDetectionConfigurationsListResponse = Array<ApplicationInsightsComponentProactiveDetectionConfiguration> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentProactiveDetectionConfiguration[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProactiveDetectionConfigurationsGetResponse = ApplicationInsightsComponentProactiveDetectionConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentProactiveDetectionConfiguration;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ProactiveDetectionConfigurationsUpdateResponse = ApplicationInsightsComponentProactiveDetectionConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentProactiveDetectionConfiguration;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkItemConfigurationsListResponse = WorkItemConfigurationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkItemConfigurationsListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type WorkItemConfigurationsCreateResponse = WorkItemConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkItemConfiguration;
    };
};

/**
 * Contains response data for the getDefault operation.
 */
export type WorkItemConfigurationsGetDefaultResponse = WorkItemConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkItemConfiguration;
    };
};

/**
 * Contains response data for the getItem operation.
 */
export type WorkItemConfigurationsGetItemResponse = WorkItemConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkItemConfiguration;
    };
};

/**
 * Contains response data for the updateItem operation.
 */
export type WorkItemConfigurationsUpdateItemResponse = WorkItemConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkItemConfiguration;
    };
};

/**
 * Contains response data for the list operation.
 */
export type FavoritesListResponse = Array<ApplicationInsightsComponentFavorite> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentFavorite[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type FavoritesGetResponse = ApplicationInsightsComponentFavorite & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentFavorite;
    };
};

/**
 * Contains response data for the add operation.
 */
export type FavoritesAddResponse = ApplicationInsightsComponentFavorite & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentFavorite;
    };
};

/**
 * Contains response data for the update operation.
 */
export type FavoritesUpdateResponse = ApplicationInsightsComponentFavorite & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentFavorite;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WebTestLocationsListResponse = ApplicationInsightsWebTestLocationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsWebTestLocationsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WebTestsListByResourceGroupResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WebTestsGetResponse = WebTest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTest;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WebTestsCreateOrUpdateResponse = WebTest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTest;
    };
};

/**
 * Contains response data for the updateTags operation.
 */
export type WebTestsUpdateTagsResponse = WebTest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTest;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WebTestsListResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the listByComponent operation.
 */
export type WebTestsListByComponentResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WebTestsListByResourceGroupNextResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WebTestsListNextResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the listByComponentNext operation.
 */
export type WebTestsListByComponentNextResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AnalyticsItemsListResponse = Array<ApplicationInsightsComponentAnalyticsItem> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentAnalyticsItem[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type AnalyticsItemsGetResponse = ApplicationInsightsComponentAnalyticsItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentAnalyticsItem;
    };
};

/**
 * Contains response data for the put operation.
 */
export type AnalyticsItemsPutResponse = ApplicationInsightsComponentAnalyticsItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentAnalyticsItem;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkbooksListByResourceGroupResponse = WorkbooksListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkbooksListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkbooksGetResponse = Workbook & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workbook;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkbooksCreateOrUpdateResponse = Workbook & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workbook;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WorkbooksUpdateResponse = Workbook & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workbook;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type MyWorkbooksListByResourceGroupResponse = MyWorkbooksListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MyWorkbooksListResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type MyWorkbooksListBySubscriptionResponse = MyWorkbooksListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MyWorkbooksListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MyWorkbooksGetResponse = MyWorkbook & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MyWorkbook;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MyWorkbooksCreateOrUpdateResponse = MyWorkbook & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MyWorkbook;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MyWorkbooksUpdateResponse = MyWorkbook & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MyWorkbook;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ComponentsListResponse = ApplicationInsightsComponentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ComponentsListByResourceGroupResponse = ApplicationInsightsComponentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ComponentsGetResponse = ApplicationInsightsComponent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponent;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ComponentsCreateOrUpdateResponse = ApplicationInsightsComponent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponent;
    };
};

/**
 * Contains response data for the updateTags operation.
 */
export type ComponentsUpdateTagsResponse = ApplicationInsightsComponent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponent;
    };
};

/**
 * Contains response data for the purge operation.
 */
export type ComponentsPurgeResponse = ComponentPurgeResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComponentPurgeResponse;
    };
};

/**
 * Contains response data for the getPurgeStatus operation.
 */
export type ComponentsGetPurgeStatusResponse = ComponentPurgeStatusResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComponentPurgeStatusResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ComponentsListNextResponse = ApplicationInsightsComponentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ComponentsListByResourceGroupNextResponse = ApplicationInsightsComponentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInsightsComponentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ComponentLinkedStorageAccountsGetResponse = ComponentLinkedStorageAccounts & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComponentLinkedStorageAccounts;
    };
};

/**
 * Contains response data for the createAndUpdate operation.
 */
export type ComponentLinkedStorageAccountsCreateAndUpdateResponse = ComponentLinkedStorageAccounts & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComponentLinkedStorageAccounts;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ComponentLinkedStorageAccountsUpdateResponse = ComponentLinkedStorageAccounts & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComponentLinkedStorageAccounts;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LiveTokenGetResponse = LiveTokenResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LiveTokenResponse;
    };
};
