/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Annotations list result. */
export interface AnnotationsListResult {
  /**
   * An array of annotations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Annotation[];
}

/** Annotation associated with an application insights resource. */
export interface Annotation {
  /** Name of annotation */
  annotationName?: string;
  /** Category of annotation, free form */
  category?: string;
  /** Time when event occurred */
  eventTime?: Date;
  /** Unique Id for annotation */
  id?: string;
  /** Serialized JSON object for detailed properties */
  properties?: string;
  /** Related parent annotation if any */
  relatedAnnotation?: string;
}

/** Error associated with trying to create annotation with Id that already exist */
export interface AnnotationError {
  /** Error detail code and explanation */
  code?: string;
  /** Error message */
  message?: string;
  /** Inner error */
  innererror?: InnerError;
}

/** Inner error */
export interface InnerError {
  /** Provides correlation for request */
  diagnosticcontext?: string;
  /** Request time */
  time?: Date;
}

/** Describes the list of API Keys of an Application Insights Component. */
export interface ApplicationInsightsComponentAPIKeyListResult {
  /** List of API Key definitions. */
  value: ApplicationInsightsComponentAPIKey[];
}

/** Properties that define an API key of an Application Insights Component. */
export interface ApplicationInsightsComponentAPIKey {
  /**
   * The unique ID of the API key inside an Application Insights component. It is auto generated when the API key is created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The API key value. It will be only return once when the API Key was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiKey?: string;
  /** The create date of this API key. */
  createdDate?: string;
  /** The name of the API key. */
  name?: string;
  /** The read access rights of this API Key. */
  linkedReadProperties?: string[];
  /** The write access rights of this API Key. */
  linkedWriteProperties?: string[];
}

/** An Application Insights component API Key creation request definition. */
export interface APIKeyRequest {
  /** The name of the API Key. */
  name?: string;
  /** The read access rights of this API Key. */
  linkedReadProperties?: string[];
  /** The write access rights of this API Key. */
  linkedWriteProperties?: string[];
}

/** Properties that define a Continuous Export configuration. */
export interface ApplicationInsightsComponentExportConfiguration {
  /**
   * The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration is created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exportId?: string;
  /**
   * The instrumentation key of the Application Insights component.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly instrumentationKey?: string;
  /** This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'. */
  recordTypes?: string;
  /**
   * The name of the Application Insights component.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applicationName?: string;
  /**
   * The subscription of the Application Insights component.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The resource group of the Application Insights component.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceGroup?: string;
  /**
   * The destination storage account subscription ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly destinationStorageSubscriptionId?: string;
  /**
   * The destination account location ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly destinationStorageLocationId?: string;
  /**
   * The name of destination account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly destinationAccountId?: string;
  /**
   * The destination type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly destinationType?: string;
  /**
   * This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isUserEnabled?: string;
  /**
   * Last time the Continuous Export configuration was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUserUpdate?: string;
  /** Deprecated */
  notificationQueueEnabled?: string;
  /**
   * This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exportStatus?: string;
  /**
   * The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessTime?: string;
  /**
   * The last time the Continuous Export configuration started failing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastGapTime?: string;
  /**
   * This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly permanentErrorReason?: string;
  /**
   * The name of the destination storage account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageName?: string;
  /**
   * The name of the destination storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly containerName?: string;
}

/** An Application Insights component Continuous Export configuration request definition. */
export interface ApplicationInsightsComponentExportRequest {
  /** The document types to be exported, as comma separated values. Allowed values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'. */
  recordTypes?: string;
  /** The Continuous Export destination type. This has to be 'Blob'. */
  destinationType?: string;
  /** The SAS URL for the destination storage container. It must grant write permission. */
  destinationAddress?: string;
  /** Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to 'false'. */
  isEnabled?: string;
  /** Deprecated */
  notificationQueueEnabled?: string;
  /** Deprecated */
  notificationQueueUri?: string;
  /** The subscription ID of the destination storage container. */
  destinationStorageSubscriptionId?: string;
  /** The location ID of the destination storage container. */
  destinationStorageLocationId?: string;
  /** The name of destination storage account. */
  destinationAccountId?: string;
}

/** An Application Insights component billing features */
export interface ApplicationInsightsComponentBillingFeatures {
  /** An Application Insights component daily data volume cap */
  dataVolumeCap?: ApplicationInsightsComponentDataVolumeCap;
  /** Current enabled pricing plan. When the component is in the Enterprise plan, this will list both 'Basic' and 'Application Insights Enterprise'. */
  currentBillingFeatures?: string[];
}

/** An Application Insights component daily data volume cap */
export interface ApplicationInsightsComponentDataVolumeCap {
  /** Daily data volume cap in GB. */
  cap?: number;
  /**
   * Daily data volume cap UTC reset hour.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resetTime?: number;
  /** Reserved, not used for now. */
  warningThreshold?: number;
  /** Reserved, not used for now. */
  stopSendNotificationWhenHitThreshold?: boolean;
  /** Do not send a notification email when the daily data volume cap is met. */
  stopSendNotificationWhenHitCap?: boolean;
  /**
   * Maximum daily data volume cap that the user can set for this component.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxHistoryCap?: number;
}

/** An Application Insights component daily data volume cap status */
export interface ApplicationInsightsComponentQuotaStatus {
  /**
   * The Application ID for the Application Insights component.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appId?: string;
  /**
   * The daily data volume cap is met, and data ingestion will be stopped.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shouldBeThrottled?: boolean;
  /**
   * Date and time when the daily data volume cap will be reset, and data ingestion will resume.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: string;
}

/** An Application Insights component feature capabilities */
export interface ApplicationInsightsComponentFeatureCapabilities {
  /**
   * Whether allow to use continuous export feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportExportData?: boolean;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly burstThrottlePolicy?: string;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly metadataClass?: string;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly liveStreamMetrics?: boolean;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applicationMap?: boolean;
  /**
   * Whether allow to use work item integration feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly workItemIntegration?: boolean;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly powerBIIntegration?: boolean;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly openSchema?: boolean;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly proactiveDetection?: boolean;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly analyticsIntegration?: boolean;
  /**
   * Whether allow to use multiple steps web test feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly multipleStepWebTest?: boolean;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiAccessLevel?: string;
  /**
   * The application insights component used tracking type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly trackingType?: string;
  /**
   * Daily data volume cap in GB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dailyCap?: number;
  /**
   * Daily data volume cap UTC reset hour.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dailyCapResetTime?: number;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly throttleRate?: number;
}

/** An Application Insights component available features. */
export interface ApplicationInsightsComponentAvailableFeatures {
  /**
   * A list of Application Insights component feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly result?: ApplicationInsightsComponentFeature[];
}

/** An Application Insights component daily data volume cap status */
export interface ApplicationInsightsComponentFeature {
  /**
   * The pricing feature name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly featureName?: string;
  /**
   * The meter id used for the feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly meterId?: string;
  /**
   * The meter rate for the feature's meter.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly meterRateFrequency?: string;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resouceId?: string;
  /**
   * Reserved, not used now.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isHidden?: boolean;
  /**
   * A list of Application Insights component feature capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: ApplicationInsightsComponentFeatureCapability[];
  /**
   * Display name of the feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly title?: string;
  /**
   * Whether can apply addon feature on to it.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMainFeature?: boolean;
  /**
   * The add on features on main feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportedAddonFeatures?: string;
}

/** An Application Insights component feature capability */
export interface ApplicationInsightsComponentFeatureCapability {
  /**
   * The name of the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The description of the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The value of the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
  /**
   * The unit of the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly unit?: string;
  /**
   * The meter used for the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly meterId?: string;
  /**
   * The meter rate of the meter.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly meterRateFrequency?: string;
}

/** Properties that define a ProactiveDetection configuration. */
export interface ApplicationInsightsComponentProactiveDetectionConfiguration {
  /** The rule name */
  name?: string;
  /** A flag that indicates whether this rule is enabled by the user */
  enabled?: boolean;
  /** A flag that indicated whether notifications on this rule should be sent to subscription owners */
  sendEmailsToSubscriptionOwners?: boolean;
  /** Custom email addresses for this rule notifications */
  customEmails?: string[];
  /** The last time this rule was updated */
  lastUpdatedTime?: string;
  /** Static definitions of the ProactiveDetection configuration rule (same values for all components). */
  ruleDefinitions?: ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions;
}

/** Static definitions of the ProactiveDetection configuration rule (same values for all components). */
export interface ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions {
  /** The rule name */
  name?: string;
  /** The rule name as it is displayed in UI */
  displayName?: string;
  /** The rule description */
  description?: string;
  /** URL which displays additional info about the proactive detection rule */
  helpUrl?: string;
  /** A flag indicating whether the rule is hidden (from the UI) */
  isHidden?: boolean;
  /** A flag indicating whether the rule is enabled by default */
  isEnabledByDefault?: boolean;
  /** A flag indicating whether the rule is in preview */
  isInPreview?: boolean;
  /** A flag indicating whether email notifications are supported for detections for this rule */
  supportsEmailNotifications?: boolean;
}

/** Work item configuration list result. */
export interface WorkItemConfigurationsListResult {
  /**
   * An array of work item configurations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: WorkItemConfiguration[];
}

/** Work item configuration associated with an application insights resource. */
export interface WorkItemConfiguration {
  /** Connector identifier where work item is created */
  connectorId?: string;
  /** Configuration friendly name */
  configDisplayName?: string;
  /** Boolean value indicating whether configuration is default */
  isDefault?: boolean;
  /** Unique Id for work item */
  id?: string;
  /** Serialized JSON object for detailed properties */
  configProperties?: string;
}

/** Error associated with trying to get work item configuration or configurations */
export interface WorkItemConfigurationError {
  /** Error detail code and explanation */
  code?: string;
  /** Error message */
  message?: string;
  /** Inner error */
  innererror?: InnerError;
}

/** Work item configuration creation payload */
export interface WorkItemCreateConfiguration {
  /** Unique connector id */
  connectorId?: string;
  /** Serialized JSON object for detailed properties */
  connectorDataConfiguration?: string;
  /** Boolean indicating validate only */
  validateOnly?: boolean;
  /** Custom work item properties */
  workItemProperties?: { [propertyName: string]: string };
}

/** Properties that define a favorite that is associated to an Application Insights component. */
export interface ApplicationInsightsComponentFavorite {
  /** The user-defined name of the favorite. */
  name?: string;
  /** Configuration of this particular favorite, which are driven by the Azure portal UX. Configuration data is a string containing valid JSON */
  config?: string;
  /** This instance's version of the data model. This can change as new features are added that can be marked favorite. Current examples include MetricsExplorer (ME) and Search. */
  version?: string;
  /**
   * Internally assigned unique id of the favorite definition.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly favoriteId?: string;
  /** Enum indicating if this favorite definition is owned by a specific user or is shared between all users with access to the Application Insights component. */
  favoriteType?: FavoriteType;
  /** The source of the favorite definition. */
  sourceType?: string;
  /**
   * Date and time in UTC of the last modification that was made to this favorite definition.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeModified?: string;
  /** A list of 0 or more tags that are associated with this favorite definition */
  tags?: string[];
  /** Favorite category, as defined by the user at creation time. */
  category?: string;
  /** Flag denoting wether or not this favorite was generated from a template. */
  isGeneratedFromTemplate?: boolean;
  /**
   * Unique user id of the specific user that owns this favorite.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userId?: string;
}

/** Describes the list of web test locations available to an Application Insights Component. */
export interface ApplicationInsightsWebTestLocationsListResult {
  /** List of web test locations. */
  value: ApplicationInsightsComponentWebTestLocation[];
}

/** Properties that define a web test location available to an Application Insights Component. */
export interface ApplicationInsightsComponentWebTestLocation {
  /**
   * The display name of the web test location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Internally defined geographic location tag.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tag?: string;
}

/** A list of 0 or more Application Insights web test definitions. */
export interface WebTestListResult {
  /** Set of Application Insights web test definitions. */
  value: WebTest[];
  /** The link to get the next part of the returned list of web tests, should the return set be too large for a single request. May be null. */
  nextLink?: string;
}

/** Geo-physical location to run a web test from. You must specify one or more locations for the test to run from. */
export interface WebTestGeolocation {
  /** Location ID for the webtest to run from. */
  location?: string;
}

/** An XML configuration specification for a WebTest. */
export interface WebTestPropertiesConfiguration {
  /** The XML specification of a WebTest to run against an application. */
  webTest?: string;
}

/** An azure resource object */
export interface WebtestsResource {
  /**
   * Azure resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Azure resource name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Azure resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource location */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** A container holding only the Tags for a resource, allowing the user to update the tags on a WebTest instance. */
export interface TagsResource {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** Properties that define an Analytics item that is associated to an Application Insights component. */
export interface ApplicationInsightsComponentAnalyticsItem {
  /** Internally assigned unique id of the item definition. */
  id?: string;
  /** The user-defined name of the item. */
  name?: string;
  /** The content of this item */
  content?: string;
  /**
   * This instance's version of the data model. This can change as new features are added.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /** Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. */
  scope?: ItemScope;
  /** Enum indicating the type of the Analytics item. */
  type?: ItemType;
  /**
   * Date and time in UTC when this item was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: string;
  /**
   * Date and time in UTC of the last modification that was made to this item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeModified?: string;
  /** A set of properties that can be defined in the context of a specific item type. Each type may have its own properties. */
  properties?: ApplicationInsightsComponentAnalyticsItemProperties;
}

/** A set of properties that can be defined in the context of a specific item type. Each type may have its own properties. */
export interface ApplicationInsightsComponentAnalyticsItemProperties {
  /** A function alias, used when the type of the item is Function */
  functionAlias?: string;
}

/** WorkbookTemplate list result. */
export interface WorkbookTemplatesListResult {
  /** An array of workbook templates. */
  value?: WorkbookTemplate[];
}

/** Gallery information for a workbook template. */
export interface WorkbookTemplateGallery {
  /** Name of the workbook template in the gallery. */
  name?: string;
  /** Category for the gallery. */
  category?: string;
  /** Type of workbook supported by the workbook template. */
  type?: string;
  /** Order of the template within the gallery. */
  order?: number;
  /** Azure resource type supported by the gallery. */
  resourceType?: string;
}

/** Localized template data and gallery information. */
export interface WorkbookTemplateLocalizedGallery {
  /** Valid JSON object containing workbook template payload. */
  templateData?: Record<string, unknown>;
  /** Workbook galleries supported by the template. */
  galleries?: WorkbookTemplateGallery[];
}

/** An azure resource object */
export interface WorkbookTemplateResource {
  /**
   * Azure resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Azure resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Azure resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource location */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** Error message that will indicate why the operation failed. */
export interface WorkbookTemplateError {
  /** Error message object that will indicate why the operation failed. */
  error?: WorkbookTemplateErrorBody;
}

/** Error message body that will indicate why the operation failed. */
export interface WorkbookTemplateErrorBody {
  /** Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response. */
  code?: string;
  /** Human-readable representation of the error. */
  message?: string;
  /** The list of invalid fields send in request, in case of validation error. */
  details?: WorkbookTemplateErrorFieldContract[];
}

/** Error Field contract. */
export interface WorkbookTemplateErrorFieldContract {
  /** Property level error code. */
  code?: string;
  /** Human-readable representation of property-level error. */
  message?: string;
  /** Property name. */
  target?: string;
}

/** The parameters that can be provided when updating workbook template. */
export interface WorkbookTemplateUpdateParameters {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** Priority of the template. Determines which template to open when a workbook gallery is opened in viewer mode. */
  priority?: number;
  /** Information about the author of the workbook template. */
  author?: string;
  /** Valid JSON object containing workbook template payload. */
  templateData?: Record<string, unknown>;
  /** Workbook galleries supported by the template. */
  galleries?: WorkbookTemplateGallery[];
  /** Key value pair of localized gallery. Each key is the locale code of languages supported by the Azure portal. */
  localized?: { [propertyName: string]: WorkbookTemplateLocalizedGallery[] };
}

/** Workbook list result. */
export interface MyWorkbooksListResult {
  /**
   * An array of private workbooks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: MyWorkbook[];
  nextLink?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** An azure resource object */
export interface MyWorkbookResource {
  /** Identity used for BYOS */
  identity?: MyWorkbookManagedIdentity;
  /** Azure resource Id */
  id?: string;
  /** Azure resource name */
  name?: string;
  /** Azure resource type */
  type?: string;
  /** Resource location */
  location?: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** Resource etag */
  etag?: { [propertyName: string]: string };
}

/** Customer Managed Identity */
export interface MyWorkbookManagedIdentity {
  /** Customer Managed Identity */
  userAssignedIdentities?: MyWorkbookUserAssignedIdentities;
  /** The identity type. */
  type?: MyWorkbookManagedIdentityType;
}

/** Customer Managed Identity */
export interface MyWorkbookUserAssignedIdentities {
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
}

/** Error response. */
export interface MyWorkbookError {
  /** The error details. */
  error?: ErrorDefinition;
}

/** Error definition. */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Description of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly innererror?: any;
}

/** Workbook list result. */
export interface WorkbooksListResult {
  /**
   * An array of workbooks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Workbook[];
  nextLink?: string;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Error response. */
export interface WorkbookError {
  /** The error details. */
  error?: WorkbookErrorDefinition;
}

/** Error definition. */
export interface WorkbookErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Description of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly innerError?: any;
}

/** The parameters that can be provided when updating workbook properties properties. */
export interface WorkbookUpdateParameters {
  /** The kind of workbook. Only valid value is shared. */
  kind?: WorkbookUpdateSharedTypeKind;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The user-defined name (display name) of the workbook. */
  displayName?: string;
  /** Configuration of this particular workbook. Configuration data is a string containing valid JSON */
  serializedData?: string;
  /** Workbook category, as defined by the user at creation time. */
  category?: string;
  /** A list of 0 or more tags that are associated with this workbook definition */
  tagsPropertiesTags?: string[];
  /** The description of the workbook. */
  description?: string;
  /** The unique revision id for this workbook definition */
  revision?: string;
}

/** Describes the list of Application Insights Resources. */
export interface ApplicationInsightsComponentListResult {
  /** List of Application Insights component definitions. */
  value: ApplicationInsightsComponent[];
  /** The URI to get the next set of Application Insights component definitions if too many components where returned in the result set. */
  nextLink?: string;
}

/** The private link scope resource reference. */
export interface PrivateLinkScopedResource {
  /** The full resource Id of the private link scope resource. */
  resourceId?: string;
  /** The private link scope unique Identifier. */
  scopeId?: string;
}

/** An azure resource object */
export interface ComponentsResource {
  /**
   * Azure resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Azure resource name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Azure resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource location */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

export interface ErrorResponseComponents {
  /** Error response indicates Insights service is not able to process the incoming request. The reason is provided in the error message. */
  error?: ErrorResponseComponentsError;
}

/** Error response indicates Insights service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponseComponentsError {
  /**
   * Error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Describes the body of a purge request for an App Insights component */
export interface ComponentPurgeBody {
  /** Table from which to purge data. */
  table: string;
  /** The set of columns and filters (queries) to run over them to purge the resulting data. */
  filters: ComponentPurgeBodyFilters[];
}

/** User-defined filters to return data which will be purged from the table. */
export interface ComponentPurgeBodyFilters {
  /** The column of the table over which the given query should run */
  column?: string;
  /** A query operator to evaluate over the provided column and value(s). Supported operators are ==, =~, in, in~, >, >=, <, <=, between, and have the same behavior as they would in a KQL query. */
  operator?: string;
  /** the value for the operator to function over. This can be a number (e.g., > 100), a string (timestamp >= '2017-09-01') or array of values. */
  value?: any;
  /** When filtering over custom dimensions, this key will be used as the name of the custom dimension. */
  key?: string;
}

/** Response containing operationId for a specific purge action. */
export interface ComponentPurgeResponse {
  /** Id to use when querying for status for a particular purge operation. */
  operationId: string;
}

/** Response containing status for a specific purge operation. */
export interface ComponentPurgeStatusResponse {
  /** Status of the operation represented by the requested Id. */
  status: PurgeState;
}

export interface ErrorResponseLinkedStorage {
  /** Error response indicates Insights service is not able to process the incoming request. The reason is provided in the error message. */
  error?: ErrorResponseLinkedStorageError;
}

/** Error response indicates Insights service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponseLinkedStorageError {
  /**
   * Error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** An Application Insights component linked storage accounts patch */
export interface ComponentLinkedStorageAccountsPatch {
  /** Linked storage account resource ID */
  linkedStorageAccount?: string;
}

/** The response to a live token query. */
export interface LiveTokenResponse {
  /**
   * JWT token for accessing live metrics stream data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly liveToken?: string;
}

/** Error response indicates Insights service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponse {
  /** Error code. */
  code?: string;
  /** Error message indicating why the operation failed. */
  message?: string;
}

/** CDN REST API operation */
export interface Operation {
  /** Operation name: {provider}/{resource}/{operation} */
  name?: string;
  /** The object that represents the operation. */
  display?: OperationDisplay;
}

/** The object that represents the operation. */
export interface OperationDisplay {
  /** Service provider: Microsoft.Cdn */
  provider?: string;
  /** Resource on which the operation is performed: Profile, endpoint, etc. */
  resource?: string;
  /** Operation type: Read, write, delete, etc. */
  operation?: string;
}

/** Result of the request to list CDN operations. It contains a list of operations and a URL link to get the next set of results. */
export interface OperationListResult {
  /** List of CDN operations supported by the CDN resource provider. */
  value?: Operation[];
  /** URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** Error details */
export interface InnerErrorTrace {
  /**
   * detailed error trace
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly trace?: string[];
}

/** Error details */
export interface WorkbookInnerErrorTrace {
  /**
   * detailed error trace
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly trace?: string[];
}

/** Result of the List Operations operation */
export interface OperationsListResult {
  /** A collection of operations */
  value?: OperationLive[];
  /** URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** Represents an operation returned by the GetOperations request */
export interface OperationLive {
  /** Name of the operation */
  name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** Display name of the operation */
  display?: OperationInfo;
  /** Origin of the operation */
  origin?: string;
  /** Properties of the operation */
  properties?: Record<string, unknown>;
}

/** Information about an operation */
export interface OperationInfo {
  /** Name of the provider */
  provider?: string;
  /** Name of the resource type */
  resource?: string;
  /** Name of the operation */
  operation?: string;
  /** Description of the operation */
  description?: string;
}

/** An Application Insights web test definition. */
export interface WebTest extends WebtestsResource {
  /** The kind of web test that this web test watches. Choices are ping and multistep. */
  kind?: WebTestKind;
  /** Unique ID of this WebTest. This is typically the same value as the Name field. */
  syntheticMonitorId?: string;
  /** User defined name if this WebTest. */
  webTestName?: string;
  /** Purpose/user defined descriptive test for this WebTest. */
  description?: string;
  /** Is the test actively being monitored. */
  enabled?: boolean;
  /** Interval in seconds between test runs for this WebTest. Default value is 300. */
  frequency?: number;
  /** Seconds until this WebTest will timeout and fail. Default value is 30. */
  timeout?: number;
  /** The kind of web test this is, valid choices are ping and multistep. */
  webTestKind?: WebTestKind;
  /** Allow for retries should this WebTest fail. */
  retryEnabled?: boolean;
  /** A list of where to physically run the tests from to give global coverage for accessibility of your application. */
  locations?: WebTestGeolocation[];
  /** An XML configuration specification for a WebTest. */
  configuration?: WebTestPropertiesConfiguration;
  /**
   * Current state of this component, whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** An Application Insights workbook template definition. */
export interface WorkbookTemplate extends WorkbookTemplateResource {
  /** Priority of the template. Determines which template to open when a workbook gallery is opened in viewer mode. */
  priority?: number;
  /** Information about the author of the workbook template. */
  author?: string;
  /** Valid JSON object containing workbook template payload. */
  templateData?: Record<string, unknown>;
  /** Workbook galleries supported by the template. */
  galleries?: WorkbookTemplateGallery[];
  /** Key value pair of localized gallery. Each key is the locale code of languages supported by the Azure portal. */
  localized?: { [propertyName: string]: WorkbookTemplateLocalizedGallery[] };
}

/** An Application Insights private workbook definition. */
export interface MyWorkbook extends MyWorkbookResource {
  /** The kind of workbook. Choices are user and shared. */
  kind?: Kind;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The user-defined name of the private workbook. */
  displayName?: string;
  /** Configuration of this particular private workbook. Configuration data is a string containing valid JSON */
  serializedData?: string;
  /** This instance's version of the data model. This can change as new features are added that can be marked private workbook. */
  version?: string;
  /**
   * Date and time in UTC of the last modification that was made to this private workbook definition.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeModified?: string;
  /** Workbook category, as defined by the user at creation time. */
  category?: string;
  /** A list of 0 or more tags that are associated with this private workbook definition */
  tagsPropertiesTags?: string[];
  /**
   * Unique user id of the specific user that owns this private workbook.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userId?: string;
  /** Optional resourceId for a source resource. */
  sourceId?: string;
  /** BYOS Storage Account URI */
  storageUri?: string;
}

/** Identity used for BYOS */
export interface WorkbookResourceIdentity extends ManagedServiceIdentity {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** An Application Insights component definition. */
export interface ApplicationInsightsComponent extends ComponentsResource {
  /** The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone. */
  kind: string;
  /** Resource etag */
  etag?: string;
  /**
   * The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applicationId?: string;
  /**
   * Application Insights Unique ID for your Application.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appId?: string;
  /**
   * Application name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly namePropertiesName?: string;
  /** Type of application being monitored. */
  applicationType?: ApplicationType;
  /** Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API. */
  flowType?: FlowType;
  /** Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'. */
  requestSource?: RequestSource;
  /**
   * Application Insights Instrumentation key. A read-only value that applications can use to identify the destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of each new Application Insights component.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly instrumentationKey?: string;
  /**
   * Creation Date for the Application Insights component, in ISO 8601 format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationDate?: Date;
  /**
   * Azure Tenant Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The unique application ID created when a new application is added to HockeyApp, used for communications with HockeyApp. */
  hockeyAppId?: string;
  /**
   * Token used to authenticate communications with between Application Insights and HockeyApp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hockeyAppToken?: string;
  /**
   * Current state of this component: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /** Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry. */
  samplingPercentage?: number;
  /**
   * Application Insights component connection string.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionString?: string;
  /** Retention period in days. */
  retentionInDays?: number;
  /** Disable IP masking. */
  disableIpMasking?: boolean;
  /** Purge data immediately after 30 days. */
  immediatePurgeDataOn30Days?: boolean;
  /** Resource Id of the log analytics workspace which the data will be ingested to. This property is required to create an application with this API version. Applications from older versions will not have this property. */
  workspaceResourceId?: string;
  /**
   * The date which the component got migrated to LA, in ISO 8601 format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly laMigrationDate?: Date;
  /**
   * List of linked private link scope resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateLinkScopedResources?: PrivateLinkScopedResource[];
  /** The network access type for accessing Application Insights ingestion. */
  publicNetworkAccessForIngestion?: PublicNetworkAccessType;
  /** The network access type for accessing Application Insights query. */
  publicNetworkAccessForQuery?: PublicNetworkAccessType;
  /** Indicates the flow of the ingestion. */
  ingestionMode?: IngestionMode;
  /** Disable Non-AAD based Auth. */
  disableLocalAuth?: boolean;
  /** Force users to create their own storage account for profiler and debugger. */
  forceCustomerStorageForProfiler?: boolean;
}

/** An azure resource object */
export interface WorkbookResource extends TrackedResource {
  /** Identity used for BYOS */
  identity?: WorkbookResourceIdentity;
  /** The kind of workbook. Only valid value is shared. */
  kind?: WorkbookSharedTypeKind;
  /** Resource etag */
  etag?: string;
}

/** An Application Insights component linked storage accounts */
export interface ComponentLinkedStorageAccounts extends ProxyResource {
  /** Linked storage account resource ID */
  linkedStorageAccount?: string;
}

/** A workbook definition. */
export interface Workbook extends WorkbookResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The user-defined name (display name) of the workbook. */
  displayName?: string;
  /** Configuration of this particular workbook. Configuration data is a string containing valid JSON */
  serializedData?: string;
  /** Workbook schema version format, like 'Notebook/1.0', which should match the workbook in serializedData */
  version?: string;
  /**
   * Date and time in UTC of the last modification that was made to this workbook definition.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeModified?: Date;
  /** Workbook category, as defined by the user at creation time. */
  category?: string;
  /** Being deprecated, please use the other tags field */
  tagsPropertiesTags?: string[];
  /**
   * Unique user id of the specific user that owns this workbook.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userId?: string;
  /** ResourceId for a source resource. */
  sourceId?: string;
  /** The resourceId to the storage account when bring your own storage is used */
  storageUri?: string;
  /** The description of the workbook. */
  description?: string;
  /**
   * The unique revision id for this workbook definition
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly revision?: string;
}

/** Known values of {@link FavoriteSourceType} that the service accepts. */
export enum KnownFavoriteSourceType {
  /** Retention */
  Retention = "retention",
  /** Notebook */
  Notebook = "notebook",
  /** Sessions */
  Sessions = "sessions",
  /** Events */
  Events = "events",
  /** Userflows */
  Userflows = "userflows",
  /** Funnel */
  Funnel = "funnel",
  /** Impact */
  Impact = "impact",
  /** Segmentation */
  Segmentation = "segmentation"
}

/**
 * Defines values for FavoriteSourceType. \
 * {@link KnownFavoriteSourceType} can be used interchangeably with FavoriteSourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **retention** \
 * **notebook** \
 * **sessions** \
 * **events** \
 * **userflows** \
 * **funnel** \
 * **impact** \
 * **segmentation**
 */
export type FavoriteSourceType = string;

/** Known values of {@link ItemScopePath} that the service accepts. */
export enum KnownItemScopePath {
  /** AnalyticsItems */
  AnalyticsItems = "analyticsItems",
  /** MyanalyticsItems */
  MyanalyticsItems = "myanalyticsItems"
}

/**
 * Defines values for ItemScopePath. \
 * {@link KnownItemScopePath} can be used interchangeably with ItemScopePath,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **analyticsItems** \
 * **myanalyticsItems**
 */
export type ItemScopePath = string;

/** Known values of {@link ItemScope} that the service accepts. */
export enum KnownItemScope {
  /** Shared */
  Shared = "shared",
  /** User */
  User = "user"
}

/**
 * Defines values for ItemScope. \
 * {@link KnownItemScope} can be used interchangeably with ItemScope,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **shared** \
 * **user**
 */
export type ItemScope = string;

/** Known values of {@link ItemTypeParameter} that the service accepts. */
export enum KnownItemTypeParameter {
  /** None */
  None = "none",
  /** Query */
  Query = "query",
  /** Function */
  Function = "function",
  /** Folder */
  Folder = "folder",
  /** Recent */
  Recent = "recent"
}

/**
 * Defines values for ItemTypeParameter. \
 * {@link KnownItemTypeParameter} can be used interchangeably with ItemTypeParameter,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **none** \
 * **query** \
 * **function** \
 * **folder** \
 * **recent**
 */
export type ItemTypeParameter = string;

/** Known values of {@link ItemType} that the service accepts. */
export enum KnownItemType {
  /** None */
  None = "none",
  /** Query */
  Query = "query",
  /** Recent */
  Recent = "recent",
  /** Function */
  Function = "function"
}

/**
 * Defines values for ItemType. \
 * {@link KnownItemType} can be used interchangeably with ItemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **none** \
 * **query** \
 * **recent** \
 * **function**
 */
export type ItemType = string;

/** Known values of {@link CategoryType} that the service accepts. */
export enum KnownCategoryType {
  /** Workbook */
  Workbook = "workbook",
  /** TSG */
  TSG = "TSG",
  /** Performance */
  Performance = "performance",
  /** Retention */
  Retention = "retention"
}

/**
 * Defines values for CategoryType. \
 * {@link KnownCategoryType} can be used interchangeably with CategoryType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **workbook** \
 * **TSG** \
 * **performance** \
 * **retention**
 */
export type CategoryType = string;

/** Known values of {@link Kind} that the service accepts. */
export enum KnownKind {
  /** User */
  User = "user",
  /** Shared */
  Shared = "shared"
}

/**
 * Defines values for Kind. \
 * {@link KnownKind} can be used interchangeably with Kind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **shared**
 */
export type Kind = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link MyWorkbookManagedIdentityType} that the service accepts. */
export enum KnownMyWorkbookManagedIdentityType {
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** None */
  None = "None"
}

/**
 * Defines values for MyWorkbookManagedIdentityType. \
 * {@link KnownMyWorkbookManagedIdentityType} can be used interchangeably with MyWorkbookManagedIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UserAssigned** \
 * **None**
 */
export type MyWorkbookManagedIdentityType = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned"
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link WorkbookSharedTypeKind} that the service accepts. */
export enum KnownWorkbookSharedTypeKind {
  /** Shared */
  Shared = "shared"
}

/**
 * Defines values for WorkbookSharedTypeKind. \
 * {@link KnownWorkbookSharedTypeKind} can be used interchangeably with WorkbookSharedTypeKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **shared**
 */
export type WorkbookSharedTypeKind = string;

/** Known values of {@link WorkbookUpdateSharedTypeKind} that the service accepts. */
export enum KnownWorkbookUpdateSharedTypeKind {
  /** Shared */
  Shared = "shared"
}

/**
 * Defines values for WorkbookUpdateSharedTypeKind. \
 * {@link KnownWorkbookUpdateSharedTypeKind} can be used interchangeably with WorkbookUpdateSharedTypeKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **shared**
 */
export type WorkbookUpdateSharedTypeKind = string;

/** Known values of {@link ApplicationType} that the service accepts. */
export enum KnownApplicationType {
  /** Web */
  Web = "web",
  /** Other */
  Other = "other"
}

/**
 * Defines values for ApplicationType. \
 * {@link KnownApplicationType} can be used interchangeably with ApplicationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **web** \
 * **other**
 */
export type ApplicationType = string;

/** Known values of {@link FlowType} that the service accepts. */
export enum KnownFlowType {
  /** Bluefield */
  Bluefield = "Bluefield"
}

/**
 * Defines values for FlowType. \
 * {@link KnownFlowType} can be used interchangeably with FlowType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Bluefield**
 */
export type FlowType = string;

/** Known values of {@link RequestSource} that the service accepts. */
export enum KnownRequestSource {
  /** Rest */
  Rest = "rest"
}

/**
 * Defines values for RequestSource. \
 * {@link KnownRequestSource} can be used interchangeably with RequestSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **rest**
 */
export type RequestSource = string;

/** Known values of {@link PublicNetworkAccessType} that the service accepts. */
export enum KnownPublicNetworkAccessType {
  /** Enables connectivity to Application Insights through public DNS. */
  Enabled = "Enabled",
  /** Disables public connectivity to Application Insights through public DNS. */
  Disabled = "Disabled"
}

/**
 * Defines values for PublicNetworkAccessType. \
 * {@link KnownPublicNetworkAccessType} can be used interchangeably with PublicNetworkAccessType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled**: Enables connectivity to Application Insights through public DNS. \
 * **Disabled**: Disables public connectivity to Application Insights through public DNS.
 */
export type PublicNetworkAccessType = string;

/** Known values of {@link IngestionMode} that the service accepts. */
export enum KnownIngestionMode {
  /** ApplicationInsights */
  ApplicationInsights = "ApplicationInsights",
  /** ApplicationInsightsWithDiagnosticSettings */
  ApplicationInsightsWithDiagnosticSettings = "ApplicationInsightsWithDiagnosticSettings",
  /** LogAnalytics */
  LogAnalytics = "LogAnalytics"
}

/**
 * Defines values for IngestionMode. \
 * {@link KnownIngestionMode} can be used interchangeably with IngestionMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ApplicationInsights** \
 * **ApplicationInsightsWithDiagnosticSettings** \
 * **LogAnalytics**
 */
export type IngestionMode = string;

/** Known values of {@link PurgeState} that the service accepts. */
export enum KnownPurgeState {
  /** Pending */
  Pending = "pending",
  /** Completed */
  Completed = "completed"
}

/**
 * Defines values for PurgeState. \
 * {@link KnownPurgeState} can be used interchangeably with PurgeState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **pending** \
 * **completed**
 */
export type PurgeState = string;

/** Known values of {@link StorageType} that the service accepts. */
export enum KnownStorageType {
  /** ServiceProfiler */
  ServiceProfiler = "ServiceProfiler"
}

/**
 * Defines values for StorageType. \
 * {@link KnownStorageType} can be used interchangeably with StorageType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ServiceProfiler**
 */
export type StorageType = string;
/** Defines values for FavoriteType. */
export type FavoriteType = "shared" | "user";
/** Defines values for WebTestKind. */
export type WebTestKind = "ping" | "multistep";

/** Optional parameters. */
export interface AnnotationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AnnotationsListResponse = AnnotationsListResult;

/** Optional parameters. */
export interface AnnotationsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type AnnotationsCreateResponse = Annotation[];

/** Optional parameters. */
export interface AnnotationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AnnotationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AnnotationsGetResponse = Annotation[];

/** Optional parameters. */
export interface APIKeysListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type APIKeysListResponse = ApplicationInsightsComponentAPIKeyListResult;

/** Optional parameters. */
export interface APIKeysCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type APIKeysCreateResponse = ApplicationInsightsComponentAPIKey;

/** Optional parameters. */
export interface APIKeysDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type APIKeysDeleteResponse = ApplicationInsightsComponentAPIKey;

/** Optional parameters. */
export interface APIKeysGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type APIKeysGetResponse = ApplicationInsightsComponentAPIKey;

/** Optional parameters. */
export interface ExportConfigurationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ExportConfigurationsListResponse = ApplicationInsightsComponentExportConfiguration[];

/** Optional parameters. */
export interface ExportConfigurationsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type ExportConfigurationsCreateResponse = ApplicationInsightsComponentExportConfiguration[];

/** Optional parameters. */
export interface ExportConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type ExportConfigurationsDeleteResponse = ApplicationInsightsComponentExportConfiguration;

/** Optional parameters. */
export interface ExportConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ExportConfigurationsGetResponse = ApplicationInsightsComponentExportConfiguration;

/** Optional parameters. */
export interface ExportConfigurationsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ExportConfigurationsUpdateResponse = ApplicationInsightsComponentExportConfiguration;

/** Optional parameters. */
export interface ComponentCurrentBillingFeaturesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ComponentCurrentBillingFeaturesGetResponse = ApplicationInsightsComponentBillingFeatures;

/** Optional parameters. */
export interface ComponentCurrentBillingFeaturesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ComponentCurrentBillingFeaturesUpdateResponse = ApplicationInsightsComponentBillingFeatures;

/** Optional parameters. */
export interface ComponentQuotaStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ComponentQuotaStatusGetResponse = ApplicationInsightsComponentQuotaStatus;

/** Optional parameters. */
export interface ComponentFeatureCapabilitiesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ComponentFeatureCapabilitiesGetResponse = ApplicationInsightsComponentFeatureCapabilities;

/** Optional parameters. */
export interface ComponentAvailableFeaturesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ComponentAvailableFeaturesGetResponse = ApplicationInsightsComponentAvailableFeatures;

/** Optional parameters. */
export interface ProactiveDetectionConfigurationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProactiveDetectionConfigurationsListResponse = ApplicationInsightsComponentProactiveDetectionConfiguration[];

/** Optional parameters. */
export interface ProactiveDetectionConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProactiveDetectionConfigurationsGetResponse = ApplicationInsightsComponentProactiveDetectionConfiguration;

/** Optional parameters. */
export interface ProactiveDetectionConfigurationsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ProactiveDetectionConfigurationsUpdateResponse = ApplicationInsightsComponentProactiveDetectionConfiguration;

/** Optional parameters. */
export interface WorkItemConfigurationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type WorkItemConfigurationsListResponse = WorkItemConfigurationsListResult;

/** Optional parameters. */
export interface WorkItemConfigurationsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type WorkItemConfigurationsCreateResponse = WorkItemConfiguration;

/** Optional parameters. */
export interface WorkItemConfigurationsGetDefaultOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDefault operation. */
export type WorkItemConfigurationsGetDefaultResponse = WorkItemConfiguration;

/** Optional parameters. */
export interface WorkItemConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WorkItemConfigurationsGetItemOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getItem operation. */
export type WorkItemConfigurationsGetItemResponse = WorkItemConfiguration;

/** Optional parameters. */
export interface WorkItemConfigurationsUpdateItemOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateItem operation. */
export type WorkItemConfigurationsUpdateItemResponse = WorkItemConfiguration;

/** Optional parameters. */
export interface FavoritesListOptionalParams
  extends coreClient.OperationOptions {
  /** The type of favorite. Value can be either shared or user. */
  favoriteType?: FavoriteType;
  /** Source type of favorite to return. When left out, the source type defaults to 'other' (not present in this enum). */
  sourceType?: FavoriteSourceType;
  /** Flag indicating whether or not to return the full content for each applicable favorite. If false, only return summary content for favorites. */
  canFetchContent?: boolean;
  /** Tags that must be present on each favorite returned. */
  tags?: string[];
}

/** Contains response data for the list operation. */
export type FavoritesListResponse = ApplicationInsightsComponentFavorite[];

/** Optional parameters. */
export interface FavoritesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FavoritesGetResponse = ApplicationInsightsComponentFavorite;

/** Optional parameters. */
export interface FavoritesAddOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the add operation. */
export type FavoritesAddResponse = ApplicationInsightsComponentFavorite;

/** Optional parameters. */
export interface FavoritesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type FavoritesUpdateResponse = ApplicationInsightsComponentFavorite;

/** Optional parameters. */
export interface FavoritesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WebTestLocationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type WebTestLocationsListResponse = ApplicationInsightsWebTestLocationsListResult;

/** Optional parameters. */
export interface WebTestsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type WebTestsListByResourceGroupResponse = WebTestListResult;

/** Optional parameters. */
export interface WebTestsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WebTestsGetResponse = WebTest;

/** Optional parameters. */
export interface WebTestsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type WebTestsCreateOrUpdateResponse = WebTest;

/** Optional parameters. */
export interface WebTestsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type WebTestsUpdateTagsResponse = WebTest;

/** Optional parameters. */
export interface WebTestsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WebTestsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type WebTestsListResponse = WebTestListResult;

/** Optional parameters. */
export interface WebTestsListByComponentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByComponent operation. */
export type WebTestsListByComponentResponse = WebTestListResult;

/** Optional parameters. */
export interface WebTestsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type WebTestsListByResourceGroupNextResponse = WebTestListResult;

/** Optional parameters. */
export interface WebTestsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WebTestsListNextResponse = WebTestListResult;

/** Optional parameters. */
export interface WebTestsListByComponentNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByComponentNext operation. */
export type WebTestsListByComponentNextResponse = WebTestListResult;

/** Optional parameters. */
export interface AnalyticsItemsListOptionalParams
  extends coreClient.OperationOptions {
  /** Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component. */
  scope?: ItemScope;
  /** Enum indicating the type of the Analytics item. */
  typeParam?: ItemTypeParameter;
  /** Flag indicating whether or not to return the content of each applicable item. If false, only return the item information. */
  includeContent?: boolean;
}

/** Contains response data for the list operation. */
export type AnalyticsItemsListResponse = ApplicationInsightsComponentAnalyticsItem[];

/** Optional parameters. */
export interface AnalyticsItemsGetOptionalParams
  extends coreClient.OperationOptions {
  /** The Id of a specific item defined in the Application Insights component */
  id?: string;
  /** The name of a specific item defined in the Application Insights component */
  name?: string;
}

/** Contains response data for the get operation. */
export type AnalyticsItemsGetResponse = ApplicationInsightsComponentAnalyticsItem;

/** Optional parameters. */
export interface AnalyticsItemsPutOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to force save an item. This allows overriding an item if it already exists. */
  overrideItem?: boolean;
}

/** Contains response data for the put operation. */
export type AnalyticsItemsPutResponse = ApplicationInsightsComponentAnalyticsItem;

/** Optional parameters. */
export interface AnalyticsItemsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** The Id of a specific item defined in the Application Insights component */
  id?: string;
  /** The name of a specific item defined in the Application Insights component */
  name?: string;
}

/** Optional parameters. */
export interface WorkbookTemplatesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type WorkbookTemplatesListByResourceGroupResponse = WorkbookTemplatesListResult;

/** Optional parameters. */
export interface WorkbookTemplatesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkbookTemplatesGetResponse = WorkbookTemplate;

/** Optional parameters. */
export interface WorkbookTemplatesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WorkbookTemplatesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type WorkbookTemplatesCreateOrUpdateResponse = WorkbookTemplate;

/** Optional parameters. */
export interface WorkbookTemplatesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Properties that need to be specified to patch a workbook template. */
  workbookTemplateUpdateParameters?: WorkbookTemplateUpdateParameters;
}

/** Contains response data for the update operation. */
export type WorkbookTemplatesUpdateResponse = WorkbookTemplate;

/** Optional parameters. */
export interface MyWorkbooksListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
  /** Tags presents on each workbook returned. */
  tags?: string[];
  /** Azure Resource Id that will fetch all linked workbooks. */
  sourceId?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export type MyWorkbooksListByResourceGroupResponse = MyWorkbooksListResult;

/** Optional parameters. */
export interface MyWorkbooksListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
  /** Tags presents on each workbook returned. */
  tags?: string[];
}

/** Contains response data for the listBySubscription operation. */
export type MyWorkbooksListBySubscriptionResponse = MyWorkbooksListResult;

/** Optional parameters. */
export interface MyWorkbooksGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MyWorkbooksGetResponse = MyWorkbook;

/** Optional parameters. */
export interface MyWorkbooksDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface MyWorkbooksCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Azure Resource Id that will fetch all linked workbooks. */
  sourceId?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type MyWorkbooksCreateOrUpdateResponse = MyWorkbook;

/** Optional parameters. */
export interface MyWorkbooksUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Azure Resource Id that will fetch all linked workbooks. */
  sourceId?: string;
}

/** Contains response data for the update operation. */
export type MyWorkbooksUpdateResponse = MyWorkbook;

/** Optional parameters. */
export interface MyWorkbooksListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
  /** Tags presents on each workbook returned. */
  tags?: string[];
  /** Azure Resource Id that will fetch all linked workbooks. */
  sourceId?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type MyWorkbooksListByResourceGroupNextResponse = MyWorkbooksListResult;

/** Optional parameters. */
export interface MyWorkbooksListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
  /** Tags presents on each workbook returned. */
  tags?: string[];
}

/** Contains response data for the listBySubscriptionNext operation. */
export type MyWorkbooksListBySubscriptionNextResponse = MyWorkbooksListResult;

/** Optional parameters. */
export interface WorkbooksListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
  /** Tags presents on each workbook returned. */
  tags?: string[];
}

/** Contains response data for the listBySubscription operation. */
export type WorkbooksListBySubscriptionResponse = WorkbooksListResult;

/** Optional parameters. */
export interface WorkbooksListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
  /** Tags presents on each workbook returned. */
  tags?: string[];
  /** Azure Resource Id that will fetch all linked workbooks. */
  sourceId?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export type WorkbooksListByResourceGroupResponse = WorkbooksListResult;

/** Optional parameters. */
export interface WorkbooksGetOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
}

/** Contains response data for the get operation. */
export type WorkbooksGetResponse = Workbook;

/** Optional parameters. */
export interface WorkbooksDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WorkbooksCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Azure Resource Id that will fetch all linked workbooks. */
  sourceId?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type WorkbooksCreateOrUpdateResponse = Workbook;

/** Optional parameters. */
export interface WorkbooksUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Azure Resource Id that will fetch all linked workbooks. */
  sourceId?: string;
  /** Properties that need to be specified to create a new workbook. */
  workbookUpdateParameters?: WorkbookUpdateParameters;
}

/** Contains response data for the update operation. */
export type WorkbooksUpdateResponse = Workbook;

/** Optional parameters. */
export interface WorkbooksRevisionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the revisionsList operation. */
export type WorkbooksRevisionsListResponse = WorkbooksListResult;

/** Optional parameters. */
export interface WorkbooksRevisionGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the revisionGet operation. */
export type WorkbooksRevisionGetResponse = Workbook;

/** Optional parameters. */
export interface WorkbooksListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
  /** Tags presents on each workbook returned. */
  tags?: string[];
}

/** Contains response data for the listBySubscriptionNext operation. */
export type WorkbooksListBySubscriptionNextResponse = WorkbooksListResult;

/** Optional parameters. */
export interface WorkbooksListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks. */
  canFetchContent?: boolean;
  /** Tags presents on each workbook returned. */
  tags?: string[];
  /** Azure Resource Id that will fetch all linked workbooks. */
  sourceId?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type WorkbooksListByResourceGroupNextResponse = WorkbooksListResult;

/** Optional parameters. */
export interface WorkbooksRevisionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the revisionsListNext operation. */
export type WorkbooksRevisionsListNextResponse = WorkbooksListResult;

/** Optional parameters. */
export interface ComponentsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ComponentsListResponse = ApplicationInsightsComponentListResult;

/** Optional parameters. */
export interface ComponentsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ComponentsListByResourceGroupResponse = ApplicationInsightsComponentListResult;

/** Optional parameters. */
export interface ComponentsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ComponentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ComponentsGetResponse = ApplicationInsightsComponent;

/** Optional parameters. */
export interface ComponentsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ComponentsCreateOrUpdateResponse = ApplicationInsightsComponent;

/** Optional parameters. */
export interface ComponentsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type ComponentsUpdateTagsResponse = ApplicationInsightsComponent;

/** Optional parameters. */
export interface ComponentsPurgeOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the purge operation. */
export type ComponentsPurgeResponse = ComponentPurgeResponse;

/** Optional parameters. */
export interface ComponentsGetPurgeStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getPurgeStatus operation. */
export type ComponentsGetPurgeStatusResponse = ComponentPurgeStatusResponse;

/** Optional parameters. */
export interface ComponentsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ComponentsListNextResponse = ApplicationInsightsComponentListResult;

/** Optional parameters. */
export interface ComponentsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ComponentsListByResourceGroupNextResponse = ApplicationInsightsComponentListResult;

/** Optional parameters. */
export interface ComponentLinkedStorageAccountsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ComponentLinkedStorageAccountsGetResponse = ComponentLinkedStorageAccounts;

/** Optional parameters. */
export interface ComponentLinkedStorageAccountsCreateAndUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createAndUpdate operation. */
export type ComponentLinkedStorageAccountsCreateAndUpdateResponse = ComponentLinkedStorageAccounts;

/** Optional parameters. */
export interface ComponentLinkedStorageAccountsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ComponentLinkedStorageAccountsUpdateResponse = ComponentLinkedStorageAccounts;

/** Optional parameters. */
export interface ComponentLinkedStorageAccountsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface LiveTokenGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LiveTokenGetResponse = LiveTokenResponse;

/** Optional parameters. */
export interface ApplicationInsightsManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
