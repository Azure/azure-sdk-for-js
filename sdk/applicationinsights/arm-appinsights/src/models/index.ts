/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * An azure resource object
 */
export interface WebtestsResource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A container holding only the Tags for a resource, allowing the user to update the tags on a
 * WebTest instance.
 */
export interface TagsResource {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Geo-physical location to run a WebTest from. You must specify one or more locations for the test
 * to run from.
 */
export interface WebTestGeolocation {
  /**
   * Location ID for the WebTest to run from.
   */
  location?: string;
}

/**
 * An XML configuration specification for a WebTest.
 */
export interface WebTestPropertiesConfiguration {
  /**
   * The XML specification of a WebTest to run against an application.
   */
  webTest?: string;
}

/**
 * A header to add to the WebTest.
 */
export interface HeaderField {
  /**
   * The name of the header.
   */
  headerFieldName?: string;
  /**
   * The value of the header.
   */
  headerFieldValue?: string;
}

/**
 * The collection of request properties
 */
export interface WebTestPropertiesRequest {
  /**
   * Url location to test.
   */
  requestUrl?: string;
  /**
   * List of headers and their values to add to the WebTest call.
   */
  headers?: HeaderField[];
  /**
   * Http verb to use for this web test.
   */
  httpVerb?: string;
  /**
   * Base64 encoded string body to send with this web test.
   */
  requestBody?: string;
  /**
   * Parse Dependent request for this WebTest.
   */
  parseDependentRequests?: boolean;
  /**
   * Follow redirects for this web test.
   */
  followRedirects?: boolean;
}

/**
 * The collection of content validation properties
 */
export interface WebTestPropertiesContentValidation {
  /**
   * Content to look for in the return of the WebTest.
   */
  contentMatch?: string;
  /**
   * When set, this value makes the ContentMatch validation case insensitive.
   */
  ignoreCase?: boolean;
  /**
   * When true, validation will pass if there is a match for the ContentMatch string.  If false,
   * validation will fail if there is a match
   */
  passIfTextFound?: boolean;
}

/**
 * An Application Insights WebTest definition.
 */
export interface WebTest extends WebtestsResource {
  /**
   * The kind of WebTest that this web test watches. Choices are ping and multistep. Possible
   * values include: 'ping', 'multistep'. Default value: 'ping'.
   */
  kind?: WebTestKind;
  /**
   * Unique ID of this WebTest. This is typically the same value as the Name field.
   */
  syntheticMonitorId: string;
  /**
   * User defined name if this WebTest.
   */
  webTestName: string;
  /**
   * User defined description for this WebTest.
   */
  description?: string;
  /**
   * Is the test actively being monitored.
   */
  enabled?: boolean;
  /**
   * Interval in seconds between test runs for this WebTest. Default value is 300. Default value:
   * 300.
   */
  frequency?: number;
  /**
   * Seconds until this WebTest will timeout and fail. Default value is 30. Default value: 30.
   */
  timeout?: number;
  /**
   * The kind of web test this is, valid choices are ping, multistep, basic, and standard. Possible
   * values include: 'ping', 'multistep', 'basic', 'standard'. Default value: 'ping'.
   */
  webTestKind: WebTestKindEnum;
  /**
   * Allow for retries should this WebTest fail.
   */
  retryEnabled?: boolean;
  /**
   * A list of where to physically run the tests from to give global coverage for accessibility of
   * your application.
   */
  locations: WebTestGeolocation[];
  /**
   * An XML configuration specification for a WebTest.
   */
  configuration?: WebTestPropertiesConfiguration;
  /**
   * Current state of this component, whether or not is has been provisioned within the resource
   * group it is defined. Users cannot change this value but are able to read from it. Values will
   * include Succeeded, Deploying, Canceled, and Failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The collection of request properties
   */
  request?: WebTestPropertiesRequest;
  /**
   * The collection of content validation properties
   */
  contentValidation?: WebTestPropertiesContentValidation;
  /**
   * Checks to see if the SSL cert is still valid.
   */
  sSLCheck?: boolean;
  /**
   * A number of days to check still remain before the the existing SSL cert expires.
   */
  sSLCertRemainingLifetimeCheck?: number;
  /**
   * Validate that the WebTest returns the http status code provided.
   */
  expectedHttpStatusCode?: number;
  /**
   * When set, validation will ignore the status code.
   */
  ignoreHttpsStatusCode?: boolean;
}

/**
 * Information about an operation
 */
export interface OperationInfo {
  /**
   * Name of the provider
   */
  provider?: string;
  /**
   * Name of the resource type
   */
  resource?: string;
  /**
   * Name of the operation
   */
  operation?: string;
  /**
   * Description of the operation
   */
  description?: string;
}

/**
 * Represents an operation returned by the GetOperations request
 */
export interface Operation {
  /**
   * Name of the operation
   */
  name?: string;
  /**
   * Display name of the operation
   */
  display?: OperationInfo;
  /**
   * Origin of the operation
   */
  origin?: string;
  /**
   * Properties of the operation
   */
  properties?: any;
}

/**
 * An interface representing ApplicationInsightsManagementClientOptions.
 */
export interface ApplicationInsightsManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the List Operations operation
 * @extends Array<Operation>
 */
export interface OperationsListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of 0 or more Application Insights WebTest definitions.
 * @extends Array<WebTest>
 */
export interface WebTestListResult extends Array<WebTest> {
  /**
   * The link to get the next part of the returned list of WebTest, should the return set be too
   * large for a single request. May be null.
   */
  nextLink?: string;
}

/**
 * Defines values for WebTestKind.
 * Possible values include: 'ping', 'multistep'
 * @readonly
 * @enum {string}
 */
export type WebTestKind = 'ping' | 'multistep';

/**
 * Defines values for WebTestKindEnum.
 * Possible values include: 'ping', 'multistep', 'basic', 'standard'
 * @readonly
 * @enum {string}
 */
export type WebTestKindEnum = 'ping' | 'multistep' | 'basic' | 'standard';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WebTestsListByResourceGroupResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WebTestsGetResponse = WebTest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTest;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WebTestsCreateOrUpdateResponse = WebTest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTest;
    };
};

/**
 * Contains response data for the updateTags operation.
 */
export type WebTestsUpdateTagsResponse = WebTest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTest;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WebTestsListResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the listByComponent operation.
 */
export type WebTestsListByComponentResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WebTestsListByResourceGroupNextResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WebTestsListNextResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};

/**
 * Contains response data for the listByComponentNext operation.
 */
export type WebTestsListByComponentNextResponse = WebTestListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebTestListResult;
    };
};
