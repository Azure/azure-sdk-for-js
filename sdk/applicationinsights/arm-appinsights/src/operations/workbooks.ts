/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/workbooksMappers";
import * as Parameters from "../models/parameters";
import { ApplicationInsightsManagementClientContext } from "../applicationInsightsManagementClientContext";

/** Class representing a Workbooks. */
export class Workbooks {
  private readonly client: ApplicationInsightsManagementClientContext;

  /**
   * Create a Workbooks.
   * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
   */
  constructor(client: ApplicationInsightsManagementClientContext) {
    this.client = client;
  }

  /**
   * Get all private workbooks defined within a specified subscription and category.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksListBySubscriptionResponse>
   */
  listBySubscription(category: Models.CategoryType, options?: Models.WorkbooksListBySubscriptionOptionalParams): Promise<Models.WorkbooksListBySubscriptionResponse>;
  /**
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param callback The callback
   */
  listBySubscription(category: Models.CategoryType, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  /**
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(category: Models.CategoryType, options: Models.WorkbooksListBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  listBySubscription(category: Models.CategoryType, options?: Models.WorkbooksListBySubscriptionOptionalParams | msRest.ServiceCallback<Models.WorkbooksListResult>, callback?: msRest.ServiceCallback<Models.WorkbooksListResult>): Promise<Models.WorkbooksListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        category,
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.WorkbooksListBySubscriptionResponse>;
  }

  /**
   * Get all Workbooks defined within a specified resource group and category.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, options?: Models.WorkbooksListByResourceGroupOptionalParams): Promise<Models.WorkbooksListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, options: Models.WorkbooksListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  listByResourceGroup(resourceGroupName: string, category: Models.CategoryType, options?: Models.WorkbooksListByResourceGroupOptionalParams | msRest.ServiceCallback<Models.WorkbooksListResult>, callback?: msRest.ServiceCallback<Models.WorkbooksListResult>): Promise<Models.WorkbooksListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        category,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.WorkbooksListByResourceGroupResponse>;
  }

  /**
   * Get a single workbook by its resourceName.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksGetResponse>
   */
  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkbooksGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.Workbook>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Workbook>): void;
  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Workbook>, callback?: msRest.ServiceCallback<Models.Workbook>): Promise<Models.WorkbooksGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.WorkbooksGetResponse>;
  }

  /**
   * Delete a workbook.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Create a new workbook.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param workbookProperties Properties that need to be specified to create a new workbook.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.Workbook, options?: Models.WorkbooksCreateOrUpdateOptionalParams): Promise<Models.WorkbooksCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param workbookProperties Properties that need to be specified to create a new workbook.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.Workbook, callback: msRest.ServiceCallback<Models.Workbook>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param workbookProperties Properties that need to be specified to create a new workbook.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.Workbook, options: Models.WorkbooksCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.Workbook>): void;
  createOrUpdate(resourceGroupName: string, resourceName: string, workbookProperties: Models.Workbook, options?: Models.WorkbooksCreateOrUpdateOptionalParams | msRest.ServiceCallback<Models.Workbook>, callback?: msRest.ServiceCallback<Models.Workbook>): Promise<Models.WorkbooksCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        workbookProperties,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.WorkbooksCreateOrUpdateResponse>;
  }

  /**
   * Updates a workbook that has already been added.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksUpdateResponse>
   */
  update(resourceGroupName: string, resourceName: string, options?: Models.WorkbooksUpdateOptionalParams): Promise<Models.WorkbooksUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param callback The callback
   */
  update(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.Workbook>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, resourceName: string, options: Models.WorkbooksUpdateOptionalParams, callback: msRest.ServiceCallback<Models.Workbook>): void;
  update(resourceGroupName: string, resourceName: string, options?: Models.WorkbooksUpdateOptionalParams | msRest.ServiceCallback<Models.Workbook>, callback?: msRest.ServiceCallback<Models.Workbook>): Promise<Models.WorkbooksUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.WorkbooksUpdateResponse>;
  }

  /**
   * Get the revisions for the workbook defined by its resourceName.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksRevisionsListResponse>
   */
  revisionsList(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkbooksRevisionsListResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param callback The callback
   */
  revisionsList(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  revisionsList(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  revisionsList(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkbooksListResult>, callback?: msRest.ServiceCallback<Models.WorkbooksListResult>): Promise<Models.WorkbooksRevisionsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      revisionsListOperationSpec,
      callback) as Promise<Models.WorkbooksRevisionsListResponse>;
  }

  /**
   * Get a single workbook revision defined by its revisionId.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param revisionId The id of the workbook's revision.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksRevisionGetResponse>
   */
  revisionGet(resourceGroupName: string, resourceName: string, revisionId: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkbooksRevisionGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param revisionId The id of the workbook's revision.
   * @param callback The callback
   */
  revisionGet(resourceGroupName: string, resourceName: string, revisionId: string, callback: msRest.ServiceCallback<Models.Workbook>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param revisionId The id of the workbook's revision.
   * @param options The optional parameters
   * @param callback The callback
   */
  revisionGet(resourceGroupName: string, resourceName: string, revisionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Workbook>): void;
  revisionGet(resourceGroupName: string, resourceName: string, revisionId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Workbook>, callback?: msRest.ServiceCallback<Models.Workbook>): Promise<Models.WorkbooksRevisionGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        revisionId,
        options
      },
      revisionGetOperationSpec,
      callback) as Promise<Models.WorkbooksRevisionGetResponse>;
  }

  /**
   * Get all private workbooks defined within a specified subscription and category.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, options?: Models.WorkbooksListBySubscriptionNextOptionalParams): Promise<Models.WorkbooksListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, options: Models.WorkbooksListBySubscriptionNextOptionalParams, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  listBySubscriptionNext(nextPageLink: string, category: Models.CategoryType, options?: Models.WorkbooksListBySubscriptionNextOptionalParams | msRest.ServiceCallback<Models.WorkbooksListResult>, callback?: msRest.ServiceCallback<Models.WorkbooksListResult>): Promise<Models.WorkbooksListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        category,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.WorkbooksListBySubscriptionNextResponse>;
  }

  /**
   * Get all Workbooks defined within a specified resource group and category.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, options?: Models.WorkbooksListByResourceGroupNextOptionalParams): Promise<Models.WorkbooksListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param category Category of workbook to return. Possible values include: 'workbook', 'TSG',
   * 'performance', 'retention'
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, options: Models.WorkbooksListByResourceGroupNextOptionalParams, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  listByResourceGroupNext(nextPageLink: string, category: Models.CategoryType, options?: Models.WorkbooksListByResourceGroupNextOptionalParams | msRest.ServiceCallback<Models.WorkbooksListResult>, callback?: msRest.ServiceCallback<Models.WorkbooksListResult>): Promise<Models.WorkbooksListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        category,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.WorkbooksListByResourceGroupNextResponse>;
  }

  /**
   * Get the revisions for the workbook defined by its resourceName.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkbooksRevisionsListNextResponse>
   */
  revisionsListNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkbooksRevisionsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  revisionsListNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  revisionsListNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkbooksListResult>): void;
  revisionsListNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkbooksListResult>, callback?: msRest.ServiceCallback<Models.WorkbooksListResult>): Promise<Models.WorkbooksRevisionsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      revisionsListNextOperationSpec,
      callback) as Promise<Models.WorkbooksRevisionsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Insights/workbooks",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.category,
    Parameters.tags,
    Parameters.canFetchContent,
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkbooksListResult
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.category,
    Parameters.tags,
    Parameters.sourceId,
    Parameters.canFetchContent,
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkbooksListResult
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Workbook
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.sourceId,
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workbookProperties",
    mapper: {
      ...Mappers.Workbook,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Workbook
    },
    201: {
      bodyMapper: Mappers.Workbook
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.sourceId,
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "workbookUpdateParameters"
    ],
    mapper: Mappers.WorkbookUpdateParameters
  },
  responses: {
    201: {
      bodyMapper: Mappers.Workbook
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const revisionsListOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}/revisions",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkbooksListResult
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const revisionGetOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}/revisions/{revisionId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceName,
    Parameters.revisionId
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Workbook
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.category,
    Parameters.tags,
    Parameters.canFetchContent,
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkbooksListResult
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.category,
    Parameters.tags,
    Parameters.sourceId,
    Parameters.canFetchContent,
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkbooksListResult
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};

const revisionsListNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion4
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkbooksListResult
    },
    default: {
      bodyMapper: Mappers.WorkbookError
    }
  },
  serializer
};
