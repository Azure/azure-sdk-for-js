/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/liveTokenMappers";
import * as Parameters from "../models/parameters";
import { ApplicationInsightsManagementClientContext } from "../applicationInsightsManagementClientContext";

/** Class representing a LiveToken. */
export class LiveToken {
  private readonly client: ApplicationInsightsManagementClientContext;

  /**
   * Create a LiveToken.
   * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
   */
  constructor(client: ApplicationInsightsManagementClientContext) {
    this.client = client;
  }

  /**
   * **Gets an access token for live metrics stream data.**
   * @param resourceUri The identifier of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.LiveTokenGetResponse>
   */
  get(resourceUri: string, options?: msRest.RequestOptionsBase): Promise<Models.LiveTokenGetResponse>;
  /**
   * @param resourceUri The identifier of the resource.
   * @param callback The callback
   */
  get(resourceUri: string, callback: msRest.ServiceCallback<Models.LiveTokenResponse>): void;
  /**
   * @param resourceUri The identifier of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceUri: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LiveTokenResponse>): void;
  get(resourceUri: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LiveTokenResponse>, callback?: msRest.ServiceCallback<Models.LiveTokenResponse>): Promise<Models.LiveTokenGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceUri,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.LiveTokenGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "{resourceUri}/providers/microsoft.insights/generatelivetoken",
  urlParameters: [
    Parameters.resourceUri
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LiveTokenResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
