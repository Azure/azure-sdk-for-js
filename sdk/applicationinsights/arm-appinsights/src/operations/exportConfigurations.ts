/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/exportConfigurationsMappers";
import * as Parameters from "../models/parameters";
import { ApplicationInsightsManagementClientContext } from "../applicationInsightsManagementClientContext";

/** Class representing a ExportConfigurations. */
export class ExportConfigurations {
  private readonly client: ApplicationInsightsManagementClientContext;

  /**
   * Create a ExportConfigurations.
   * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
   */
  constructor(client: ApplicationInsightsManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets a list of Continuous Export configuration of an Application Insights component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportConfigurationsListResponse>
   */
  list(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ExportConfigurationsListResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param callback The callback
   */
  list(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration[]>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration[]>): void;
  list(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration[]>, callback?: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration[]>): Promise<Models.ExportConfigurationsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ExportConfigurationsListResponse>;
  }

  /**
   * Create a Continuous Export configuration of an Application Insights component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportProperties Properties that need to be specified to create a Continuous Export
   * configuration of a Application Insights component.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportConfigurationsCreateResponse>
   */
  create(resourceGroupName: string, resourceName: string, exportProperties: Models.ApplicationInsightsComponentExportRequest, options?: msRest.RequestOptionsBase): Promise<Models.ExportConfigurationsCreateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportProperties Properties that need to be specified to create a Continuous Export
   * configuration of a Application Insights component.
   * @param callback The callback
   */
  create(resourceGroupName: string, resourceName: string, exportProperties: Models.ApplicationInsightsComponentExportRequest, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration[]>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportProperties Properties that need to be specified to create a Continuous Export
   * configuration of a Application Insights component.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceGroupName: string, resourceName: string, exportProperties: Models.ApplicationInsightsComponentExportRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration[]>): void;
  create(resourceGroupName: string, resourceName: string, exportProperties: Models.ApplicationInsightsComponentExportRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration[]>, callback?: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration[]>): Promise<Models.ExportConfigurationsCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        exportProperties,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.ExportConfigurationsCreateResponse>;
  }

  /**
   * Delete a Continuous Export configuration of an Application Insights component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportConfigurationsDeleteMethodResponse>
   */
  deleteMethod(resourceGroupName: string, resourceName: string, exportId: string, options?: msRest.RequestOptionsBase): Promise<Models.ExportConfigurationsDeleteMethodResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, resourceName: string, exportId: string, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, resourceName: string, exportId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): void;
  deleteMethod(resourceGroupName: string, resourceName: string, exportId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>, callback?: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): Promise<Models.ExportConfigurationsDeleteMethodResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        exportId,
        options
      },
      deleteMethodOperationSpec,
      callback) as Promise<Models.ExportConfigurationsDeleteMethodResponse>;
  }

  /**
   * Get the Continuous Export configuration for this export id.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportConfigurationsGetResponse>
   */
  get(resourceGroupName: string, resourceName: string, exportId: string, options?: msRest.RequestOptionsBase): Promise<Models.ExportConfigurationsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceName: string, exportId: string, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceName: string, exportId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): void;
  get(resourceGroupName: string, resourceName: string, exportId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>, callback?: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): Promise<Models.ExportConfigurationsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        exportId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ExportConfigurationsGetResponse>;
  }

  /**
   * Update the Continuous Export configuration for this export id.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param exportProperties Properties that need to be specified to update the Continuous Export
   * configuration.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExportConfigurationsUpdateResponse>
   */
  update(resourceGroupName: string, resourceName: string, exportId: string, exportProperties: Models.ApplicationInsightsComponentExportRequest, options?: msRest.RequestOptionsBase): Promise<Models.ExportConfigurationsUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param exportProperties Properties that need to be specified to update the Continuous Export
   * configuration.
   * @param callback The callback
   */
  update(resourceGroupName: string, resourceName: string, exportId: string, exportProperties: Models.ApplicationInsightsComponentExportRequest, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName The name of the Application Insights component resource.
   * @param exportId The Continuous Export configuration ID. This is unique within a Application
   * Insights component.
   * @param exportProperties Properties that need to be specified to update the Continuous Export
   * configuration.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, resourceName: string, exportId: string, exportProperties: Models.ApplicationInsightsComponentExportRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): void;
  update(resourceGroupName: string, resourceName: string, exportId: string, exportProperties: Models.ApplicationInsightsComponentExportRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>, callback?: msRest.ServiceCallback<Models.ApplicationInsightsComponentExportConfiguration>): Promise<Models.ExportConfigurationsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceName,
        exportId,
        exportProperties,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.ExportConfigurationsUpdateResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationInsightsComponentExportConfiguration"
            }
          }
        }
      }
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "exportProperties",
    mapper: {
      ...Mappers.ApplicationInsightsComponentExportRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationInsightsComponentExportConfiguration"
            }
          }
        }
      }
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration/{exportId}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.exportId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ApplicationInsightsComponentExportConfiguration
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration/{exportId}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.exportId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ApplicationInsightsComponentExportConfiguration
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}/exportconfiguration/{exportId}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.exportId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "exportProperties",
    mapper: {
      ...Mappers.ApplicationInsightsComponentExportRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ApplicationInsightsComponentExportConfiguration
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
