/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  VirtualNetwork,
  VirtualNetworksListOptionalParams,
  VirtualNetworksListByResourceGroupOptionalParams,
  VirtualNetworksCreateOptionalParams,
  VirtualNetworksCreateResponse,
  VirtualNetworksGetOptionalParams,
  VirtualNetworksGetResponse,
  VirtualNetworksUpdateOptionalParams,
  VirtualNetworksUpdateResponse,
  VirtualNetworksDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualNetworks. */
export interface VirtualNetworks {
  /**
   * List of virtualNetworks in a subscription.
   * @param options The options parameters.
   */
  list(
    options?: VirtualNetworksListOptionalParams
  ): PagedAsyncIterableIterator<VirtualNetwork>;
  /**
   * List of virtualNetworks in a resource group.
   * @param resourceGroupName The Resource Group Name.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: VirtualNetworksListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<VirtualNetwork>;
  /**
   * Create Or Update virtual network.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualNetworkName Name of the virtual network resource.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VirtualNetworksCreateResponse>,
      VirtualNetworksCreateResponse
    >
  >;
  /**
   * Create Or Update virtual network.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualNetworkName Name of the virtual network resource.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksCreateOptionalParams
  ): Promise<VirtualNetworksCreateResponse>;
  /**
   * Implements virtual network GET method.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualNetworkName Name of the virtual network resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksGetOptionalParams
  ): Promise<VirtualNetworksGetResponse>;
  /**
   * API to update certain properties of the virtual network resource.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualNetworkName Name of the virtual network resource.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksUpdateOptionalParams
  ): Promise<VirtualNetworksUpdateResponse>;
  /**
   * Implements virtual network DELETE method.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualNetworkName Name of the virtual network resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Implements virtual network DELETE method.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualNetworkName Name of the virtual network resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksDeleteOptionalParams
  ): Promise<void>;
}
