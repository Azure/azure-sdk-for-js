/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  VirtualMachine,
  VirtualMachinesListOptionalParams,
  VirtualMachinesListByResourceGroupOptionalParams,
  VirtualMachinesAssessPatchesOptionalParams,
  VirtualMachinesAssessPatchesResponse,
  VirtualMachineInstallPatchesParameters,
  VirtualMachinesInstallPatchesOptionalParams,
  VirtualMachinesInstallPatchesResponse,
  VirtualMachinesCreateOptionalParams,
  VirtualMachinesCreateResponse,
  VirtualMachinesGetOptionalParams,
  VirtualMachinesGetResponse,
  VirtualMachinesUpdateOptionalParams,
  VirtualMachinesUpdateResponse,
  VirtualMachinesDeleteOptionalParams,
  VirtualMachinesStopOptionalParams,
  VirtualMachinesStartOptionalParams,
  VirtualMachinesRestartOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualMachines. */
export interface VirtualMachines {
  /**
   * List of virtualMachines in a subscription.
   * @param options The options parameters.
   */
  list(
    options?: VirtualMachinesListOptionalParams
  ): PagedAsyncIterableIterator<VirtualMachine>;
  /**
   * List of virtualMachines in a resource group.
   * @param resourceGroupName The Resource Group Name.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: VirtualMachinesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<VirtualMachine>;
  /**
   * The operation to assess patches on a vSphere VMware machine identity in Azure.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the vSphere VMware machine.
   * @param options The options parameters.
   */
  beginAssessPatches(
    resourceGroupName: string,
    name: string,
    options?: VirtualMachinesAssessPatchesOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VirtualMachinesAssessPatchesResponse>,
      VirtualMachinesAssessPatchesResponse
    >
  >;
  /**
   * The operation to assess patches on a vSphere VMware machine identity in Azure.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the vSphere VMware machine.
   * @param options The options parameters.
   */
  beginAssessPatchesAndWait(
    resourceGroupName: string,
    name: string,
    options?: VirtualMachinesAssessPatchesOptionalParams
  ): Promise<VirtualMachinesAssessPatchesResponse>;
  /**
   * The operation to install patches on a vSphere VMware machine identity in Azure.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the vSphere VMware machine.
   * @param installPatchesInput Input for InstallPatches as directly received by the API
   * @param options The options parameters.
   */
  beginInstallPatches(
    resourceGroupName: string,
    name: string,
    installPatchesInput: VirtualMachineInstallPatchesParameters,
    options?: VirtualMachinesInstallPatchesOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VirtualMachinesInstallPatchesResponse>,
      VirtualMachinesInstallPatchesResponse
    >
  >;
  /**
   * The operation to install patches on a vSphere VMware machine identity in Azure.
   * @param resourceGroupName The name of the resource group.
   * @param name The name of the vSphere VMware machine.
   * @param installPatchesInput Input for InstallPatches as directly received by the API
   * @param options The options parameters.
   */
  beginInstallPatchesAndWait(
    resourceGroupName: string,
    name: string,
    installPatchesInput: VirtualMachineInstallPatchesParameters,
    options?: VirtualMachinesInstallPatchesOptionalParams
  ): Promise<VirtualMachinesInstallPatchesResponse>;
  /**
   * Create Or Update virtual machine.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VirtualMachinesCreateResponse>,
      VirtualMachinesCreateResponse
    >
  >;
  /**
   * Create Or Update virtual machine.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesCreateOptionalParams
  ): Promise<VirtualMachinesCreateResponse>;
  /**
   * Implements virtual machine GET method.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesGetOptionalParams
  ): Promise<VirtualMachinesGetResponse>;
  /**
   * API to update certain properties of the virtual machine resource.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VirtualMachinesUpdateResponse>,
      VirtualMachinesUpdateResponse
    >
  >;
  /**
   * API to update certain properties of the virtual machine resource.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesUpdateOptionalParams
  ): Promise<VirtualMachinesUpdateResponse>;
  /**
   * Implements virtual machine DELETE method.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Implements virtual machine DELETE method.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Stop virtual machine.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginStop(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStopOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Stop virtual machine.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginStopAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStopOptionalParams
  ): Promise<void>;
  /**
   * Start virtual machine.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStartOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Start virtual machine.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesStartOptionalParams
  ): Promise<void>;
  /**
   * Restart virtual machine.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginRestart(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesRestartOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Restart virtual machine.
   * @param resourceGroupName The Resource Group Name.
   * @param virtualMachineName Name of the virtual machine resource.
   * @param options The options parameters.
   */
  beginRestartAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: VirtualMachinesRestartOptionalParams
  ): Promise<void>;
}
