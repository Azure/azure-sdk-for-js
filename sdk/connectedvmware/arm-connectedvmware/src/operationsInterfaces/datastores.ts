/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Datastore,
  DatastoresListOptionalParams,
  DatastoresListByResourceGroupOptionalParams,
  DatastoresCreateOptionalParams,
  DatastoresCreateResponse,
  DatastoresGetOptionalParams,
  DatastoresGetResponse,
  DatastoresUpdateOptionalParams,
  DatastoresUpdateResponse,
  DatastoresDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Datastores. */
export interface Datastores {
  /**
   * List of datastores in a subscription.
   * @param options The options parameters.
   */
  list(
    options?: DatastoresListOptionalParams
  ): PagedAsyncIterableIterator<Datastore>;
  /**
   * List of datastores in a resource group.
   * @param resourceGroupName The Resource Group Name.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: DatastoresListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Datastore>;
  /**
   * Create Or Update datastore.
   * @param resourceGroupName The Resource Group Name.
   * @param datastoreName Name of the datastore.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    datastoreName: string,
    options?: DatastoresCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DatastoresCreateResponse>,
      DatastoresCreateResponse
    >
  >;
  /**
   * Create Or Update datastore.
   * @param resourceGroupName The Resource Group Name.
   * @param datastoreName Name of the datastore.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    datastoreName: string,
    options?: DatastoresCreateOptionalParams
  ): Promise<DatastoresCreateResponse>;
  /**
   * Implements datastore GET method.
   * @param resourceGroupName The Resource Group Name.
   * @param datastoreName Name of the datastore.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    datastoreName: string,
    options?: DatastoresGetOptionalParams
  ): Promise<DatastoresGetResponse>;
  /**
   * API to update certain properties of the datastore resource.
   * @param resourceGroupName The Resource Group Name.
   * @param datastoreName Name of the datastore.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    datastoreName: string,
    options?: DatastoresUpdateOptionalParams
  ): Promise<DatastoresUpdateResponse>;
  /**
   * Implements datastore DELETE method.
   * @param resourceGroupName The Resource Group Name.
   * @param datastoreName Name of the datastore.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    datastoreName: string,
    options?: DatastoresDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Implements datastore DELETE method.
   * @param resourceGroupName The Resource Group Name.
   * @param datastoreName Name of the datastore.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    datastoreName: string,
    options?: DatastoresDeleteOptionalParams
  ): Promise<void>;
}
