/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ResourcePool,
  ResourcePoolsListOptionalParams,
  ResourcePoolsListByResourceGroupOptionalParams,
  ResourcePoolsCreateOptionalParams,
  ResourcePoolsCreateResponse,
  ResourcePoolsGetOptionalParams,
  ResourcePoolsGetResponse,
  ResourcePoolsUpdateOptionalParams,
  ResourcePoolsUpdateResponse,
  ResourcePoolsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ResourcePools. */
export interface ResourcePools {
  /**
   * List of resourcePools in a subscription.
   * @param options The options parameters.
   */
  list(
    options?: ResourcePoolsListOptionalParams
  ): PagedAsyncIterableIterator<ResourcePool>;
  /**
   * List of resourcePools in a resource group.
   * @param resourceGroupName The Resource Group Name.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ResourcePoolsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ResourcePool>;
  /**
   * Create Or Update resourcePool.
   * @param resourceGroupName The Resource Group Name.
   * @param resourcePoolName Name of the resourcePool.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    resourcePoolName: string,
    options?: ResourcePoolsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ResourcePoolsCreateResponse>,
      ResourcePoolsCreateResponse
    >
  >;
  /**
   * Create Or Update resourcePool.
   * @param resourceGroupName The Resource Group Name.
   * @param resourcePoolName Name of the resourcePool.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    resourcePoolName: string,
    options?: ResourcePoolsCreateOptionalParams
  ): Promise<ResourcePoolsCreateResponse>;
  /**
   * Implements resourcePool GET method.
   * @param resourceGroupName The Resource Group Name.
   * @param resourcePoolName Name of the resourcePool.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourcePoolName: string,
    options?: ResourcePoolsGetOptionalParams
  ): Promise<ResourcePoolsGetResponse>;
  /**
   * API to update certain properties of the resourcePool resource.
   * @param resourceGroupName The Resource Group Name.
   * @param resourcePoolName Name of the resourcePool.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    resourcePoolName: string,
    options?: ResourcePoolsUpdateOptionalParams
  ): Promise<ResourcePoolsUpdateResponse>;
  /**
   * Implements resourcePool DELETE method.
   * @param resourceGroupName The Resource Group Name.
   * @param resourcePoolName Name of the resourcePool.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourcePoolName: string,
    options?: ResourcePoolsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Implements resourcePool DELETE method.
   * @param resourceGroupName The Resource Group Name.
   * @param resourcePoolName Name of the resourcePool.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourcePoolName: string,
    options?: ResourcePoolsDeleteOptionalParams
  ): Promise<void>;
}
