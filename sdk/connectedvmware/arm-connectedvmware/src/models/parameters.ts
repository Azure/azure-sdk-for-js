/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  VirtualMachineInstallPatchesParameters as VirtualMachineInstallPatchesParametersMapper,
  VirtualMachine as VirtualMachineMapper,
  VirtualMachineUpdate as VirtualMachineUpdateMapper,
  StopVirtualMachineOptions as StopVirtualMachineOptionsMapper,
  ResourcePool as ResourcePoolMapper,
  ResourcePatch as ResourcePatchMapper,
  Cluster as ClusterMapper,
  Host as HostMapper,
  Datastore as DatastoreMapper,
  VCenter as VCenterMapper,
  VirtualMachineTemplate as VirtualMachineTemplateMapper,
  VirtualNetwork as VirtualNetworkMapper,
  InventoryItem as InventoryItemMapper,
  HybridIdentityMetadata as HybridIdentityMetadataMapper,
  MachineExtension as MachineExtensionMapper,
  MachineExtensionUpdate as MachineExtensionUpdateMapper,
  GuestAgent as GuestAgentMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-01-10-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const name: OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    serializedName: "name",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const installPatchesInput: OperationParameter = {
  parameterPath: "installPatchesInput",
  mapper: VirtualMachineInstallPatchesParametersMapper
};

export const body: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: VirtualMachineMapper
};

export const virtualMachineName: OperationURLParameter = {
  parameterPath: "virtualMachineName",
  mapper: {
    serializedName: "virtualMachineName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body1: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: VirtualMachineUpdateMapper
};

export const force: OperationQueryParameter = {
  parameterPath: ["options", "force"],
  mapper: {
    serializedName: "force",
    type: {
      name: "Boolean"
    }
  }
};

export const retain: OperationQueryParameter = {
  parameterPath: ["options", "retain"],
  mapper: {
    serializedName: "retain",
    type: {
      name: "Boolean"
    }
  }
};

export const body2: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: StopVirtualMachineOptionsMapper
};

export const body3: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: ResourcePoolMapper
};

export const resourcePoolName: OperationURLParameter = {
  parameterPath: "resourcePoolName",
  mapper: {
    serializedName: "resourcePoolName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body4: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: ResourcePatchMapper
};

export const body5: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: ClusterMapper
};

export const clusterName: OperationURLParameter = {
  parameterPath: "clusterName",
  mapper: {
    serializedName: "clusterName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body6: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: HostMapper
};

export const hostName: OperationURLParameter = {
  parameterPath: "hostName",
  mapper: {
    serializedName: "hostName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body7: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: DatastoreMapper
};

export const datastoreName: OperationURLParameter = {
  parameterPath: "datastoreName",
  mapper: {
    serializedName: "datastoreName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body8: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: VCenterMapper
};

export const vcenterName: OperationURLParameter = {
  parameterPath: "vcenterName",
  mapper: {
    serializedName: "vcenterName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body9: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: VirtualMachineTemplateMapper
};

export const virtualMachineTemplateName: OperationURLParameter = {
  parameterPath: "virtualMachineTemplateName",
  mapper: {
    serializedName: "virtualMachineTemplateName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body10: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: VirtualNetworkMapper
};

export const virtualNetworkName: OperationURLParameter = {
  parameterPath: "virtualNetworkName",
  mapper: {
    serializedName: "virtualNetworkName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body11: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: InventoryItemMapper
};

export const inventoryItemName: OperationURLParameter = {
  parameterPath: "inventoryItemName",
  mapper: {
    serializedName: "inventoryItemName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const body12: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: HybridIdentityMetadataMapper
};

export const metadataName: OperationURLParameter = {
  parameterPath: "metadataName",
  mapper: {
    serializedName: "metadataName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const extensionParameters: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: MachineExtensionMapper
};

export const extensionName: OperationURLParameter = {
  parameterPath: "extensionName",
  mapper: {
    serializedName: "extensionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const extensionParameters1: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: MachineExtensionUpdateMapper
};

export const expand: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const body13: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: GuestAgentMapper
};
