/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  HybridConnection,
  HybridConnectionsListByNamespaceOptionalParams,
  AuthorizationRule,
  HybridConnectionsListAuthorizationRulesOptionalParams,
  HybridConnectionsCreateOrUpdateOptionalParams,
  HybridConnectionsCreateOrUpdateResponse,
  HybridConnectionsDeleteOptionalParams,
  HybridConnectionsGetOptionalParams,
  HybridConnectionsGetResponse,
  HybridConnectionsCreateOrUpdateAuthorizationRuleOptionalParams,
  HybridConnectionsCreateOrUpdateAuthorizationRuleResponse,
  HybridConnectionsDeleteAuthorizationRuleOptionalParams,
  HybridConnectionsGetAuthorizationRuleOptionalParams,
  HybridConnectionsGetAuthorizationRuleResponse,
  HybridConnectionsListKeysOptionalParams,
  HybridConnectionsListKeysResponse,
  RegenerateAccessKeyParameters,
  HybridConnectionsRegenerateKeysOptionalParams,
  HybridConnectionsRegenerateKeysResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HybridConnections. */
export interface HybridConnections {
  /**
   * Lists the hybrid connection within the namespace.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param options The options parameters.
   */
  listByNamespace(
    resourceGroupName: string,
    namespaceName: string,
    options?: HybridConnectionsListByNamespaceOptionalParams
  ): PagedAsyncIterableIterator<HybridConnection>;
  /**
   * Authorization rules for a hybrid connection.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param options The options parameters.
   */
  listAuthorizationRules(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    options?: HybridConnectionsListAuthorizationRulesOptionalParams
  ): PagedAsyncIterableIterator<AuthorizationRule>;
  /**
   * Creates or updates a service hybrid connection. This operation is idempotent.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param parameters Parameters supplied to create a hybrid connection.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    parameters: HybridConnection,
    options?: HybridConnectionsCreateOrUpdateOptionalParams
  ): Promise<HybridConnectionsCreateOrUpdateResponse>;
  /**
   * Deletes a hybrid connection.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    options?: HybridConnectionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Returns the description for the specified hybrid connection.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    options?: HybridConnectionsGetOptionalParams
  ): Promise<HybridConnectionsGetResponse>;
  /**
   * Creates or updates an authorization rule for a hybrid connection.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param authorizationRuleName The authorization rule name.
   * @param parameters The authorization rule parameters.
   * @param options The options parameters.
   */
  createOrUpdateAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    authorizationRuleName: string,
    parameters: AuthorizationRule,
    options?: HybridConnectionsCreateOrUpdateAuthorizationRuleOptionalParams
  ): Promise<HybridConnectionsCreateOrUpdateAuthorizationRuleResponse>;
  /**
   * Deletes a hybrid connection authorization rule.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  deleteAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    authorizationRuleName: string,
    options?: HybridConnectionsDeleteAuthorizationRuleOptionalParams
  ): Promise<void>;
  /**
   * Hybrid connection authorization rule for a hybrid connection by name.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  getAuthorizationRule(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    authorizationRuleName: string,
    options?: HybridConnectionsGetAuthorizationRuleOptionalParams
  ): Promise<HybridConnectionsGetAuthorizationRuleResponse>;
  /**
   * Primary and secondary connection strings to the hybrid connection.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param authorizationRuleName The authorization rule name.
   * @param options The options parameters.
   */
  listKeys(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    authorizationRuleName: string,
    options?: HybridConnectionsListKeysOptionalParams
  ): Promise<HybridConnectionsListKeysResponse>;
  /**
   * Regenerates the primary or secondary connection strings to the hybrid connection.
   * @param resourceGroupName Name of the Resource group within the Azure subscription.
   * @param namespaceName The namespace name
   * @param hybridConnectionName The hybrid connection name.
   * @param authorizationRuleName The authorization rule name.
   * @param parameters Parameters supplied to regenerate authorization rule.
   * @param options The options parameters.
   */
  regenerateKeys(
    resourceGroupName: string,
    namespaceName: string,
    hybridConnectionName: string,
    authorizationRuleName: string,
    parameters: RegenerateAccessKeyParameters,
    options?: HybridConnectionsRegenerateKeysOptionalParams
  ): Promise<HybridConnectionsRegenerateKeysResponse>;
}
