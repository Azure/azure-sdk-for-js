/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDefinition: msRest.CompositeMapper = {
  serializedName: "ErrorDefinition",
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDefinition"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDefinition"
        }
      }
    }
  }
};

export const TestBaseAccountSKUCapability: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountSKUCapability",
  type: {
    name: "Composite",
    className: "TestBaseAccountSKUCapability",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountSKU: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountSKU",
  type: {
    name: "Composite",
    className: "TestBaseAccountSKU",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        required: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      capabilities: {
        readOnly: true,
        serializedName: "capabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestBaseAccountSKUCapability"
            }
          }
        }
      },
      locations: {
        serializedName: "locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "SystemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const TestBaseAccountResource: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountResource",
  type: {
    name: "Composite",
    className: "TestBaseAccountResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      sku: {
        required: true,
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "TestBaseAccountSKU"
        }
      },
      accessLevel: {
        readOnly: true,
        serializedName: "properties.accessLevel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountUpdateParameters: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountUpdateParameters",
  type: {
    name: "Composite",
    className: "TestBaseAccountUpdateParameters",
    modelProperties: {
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "TestBaseAccountSKU"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TestBaseAccountUsageName: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountUsageName",
  type: {
    name: "Composite",
    className: "TestBaseAccountUsageName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountUsageData: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountUsageData",
  type: {
    name: "Composite",
    className: "TestBaseAccountUsageData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "TestBaseAccountUsageName"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      currentValue: {
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GetFileUploadURLParameters: msRest.CompositeMapper = {
  serializedName: "GetFileUploadURLParameters",
  type: {
    name: "Composite",
    className: "GetFileUploadURLParameters",
    modelProperties: {
      blobName: {
        serializedName: "blobName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileUploadURLResponse: msRest.CompositeMapper = {
  serializedName: "FileUploadURLResponse",
  type: {
    name: "Composite",
    className: "FileUploadURLResponse",
    modelProperties: {
      uploadUrl: {
        readOnly: true,
        serializedName: "uploadUrl",
        type: {
          name: "String"
        }
      },
      blobPath: {
        readOnly: true,
        serializedName: "blobPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailableOSResource: msRest.CompositeMapper = {
  serializedName: "AvailableOSResource",
  type: {
    name: "Composite",
    className: "AvailableOSResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      osId: {
        serializedName: "properties.osId",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "properties.osVersion",
        type: {
          name: "String"
        }
      },
      insiderChannel: {
        serializedName: "properties.insiderChannel",
        type: {
          name: "String"
        }
      },
      osUpdateType: {
        serializedName: "properties.osUpdateType",
        type: {
          name: "String"
        }
      },
      osPlatform: {
        serializedName: "properties.osPlatform",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FlightingRingResource: msRest.CompositeMapper = {
  serializedName: "FlightingRingResource",
  type: {
    name: "Composite",
    className: "FlightingRingResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      actualFlightingRingName: {
        serializedName: "properties.actualFlightingRingName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestTypeResource: msRest.CompositeMapper = {
  serializedName: "TestTypeResource",
  type: {
    name: "Composite",
    className: "TestTypeResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      actualTestTypeName: {
        serializedName: "properties.actualTestTypeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageCheckNameAvailabilityParameters: msRest.CompositeMapper = {
  serializedName: "PackageCheckNameAvailabilityParameters",
  type: {
    name: "Composite",
    className: "PackageCheckNameAvailabilityParameters",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      applicationName: {
        required: true,
        serializedName: "applicationName",
        type: {
          name: "String"
        }
      },
      version: {
        required: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResult: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityResult",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResult",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TargetOSInfo: msRest.CompositeMapper = {
  serializedName: "TargetOSInfo",
  type: {
    name: "Composite",
    className: "TargetOSInfo",
    modelProperties: {
      osUpdateType: {
        required: true,
        serializedName: "osUpdateType",
        type: {
          name: "String"
        }
      },
      targetOSs: {
        required: true,
        serializedName: "targetOSs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PackageValidationResult: msRest.CompositeMapper = {
  serializedName: "PackageValidationResult",
  type: {
    name: "Composite",
    className: "PackageValidationResult",
    modelProperties: {
      validationName: {
        readOnly: true,
        serializedName: "validationName",
        type: {
          name: "String"
        }
      },
      isValid: {
        readOnly: true,
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Command: msRest.CompositeMapper = {
  serializedName: "Command",
  type: {
    name: "Composite",
    className: "Command",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      action: {
        required: true,
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      contentType: {
        required: true,
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      content: {
        required: true,
        serializedName: "content",
        type: {
          name: "String"
        }
      },
      runElevated: {
        serializedName: "runElevated",
        type: {
          name: "Boolean"
        }
      },
      restartAfter: {
        serializedName: "restartAfter",
        type: {
          name: "Boolean"
        }
      },
      maxRunTime: {
        serializedName: "maxRunTime",
        type: {
          name: "Number"
        }
      },
      runAsInteractive: {
        serializedName: "runAsInteractive",
        type: {
          name: "Boolean"
        }
      },
      alwaysRun: {
        serializedName: "alwaysRun",
        type: {
          name: "Boolean"
        }
      },
      applyUpdateBefore: {
        serializedName: "applyUpdateBefore",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Test: msRest.CompositeMapper = {
  serializedName: "Test",
  type: {
    name: "Composite",
    className: "Test",
    modelProperties: {
      testType: {
        required: true,
        serializedName: "testType",
        type: {
          name: "String"
        }
      },
      validationRunStatus: {
        readOnly: true,
        serializedName: "validationRunStatus",
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "isActive",
        type: {
          name: "Boolean"
        }
      },
      commands: {
        required: true,
        serializedName: "commands",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Command"
            }
          }
        }
      }
    }
  }
};

export const PackageResource: msRest.CompositeMapper = {
  serializedName: "PackageResource",
  type: {
    name: "Composite",
    className: "PackageResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      applicationName: {
        required: true,
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      version: {
        required: true,
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      testTypes: {
        readOnly: true,
        serializedName: "properties.testTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      targetOSList: {
        required: true,
        serializedName: "properties.targetOSList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetOSInfo"
            }
          }
        }
      },
      packageStatus: {
        readOnly: true,
        serializedName: "properties.packageStatus",
        type: {
          name: "String"
        }
      },
      lastModifiedTime: {
        readOnly: true,
        serializedName: "properties.lastModifiedTime",
        type: {
          name: "DateTime"
        }
      },
      flightingRing: {
        required: true,
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        readOnly: true,
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      },
      blobPath: {
        required: true,
        serializedName: "properties.blobPath",
        type: {
          name: "String"
        }
      },
      validationResults: {
        readOnly: true,
        serializedName: "properties.validationResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageValidationResult"
            }
          }
        }
      },
      tests: {
        required: true,
        serializedName: "properties.tests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Test"
            }
          }
        }
      }
    }
  }
};

export const PackageUpdateParameters: msRest.CompositeMapper = {
  serializedName: "PackageUpdateParameters",
  type: {
    name: "Composite",
    className: "PackageUpdateParameters",
    modelProperties: {
      targetOSList: {
        serializedName: "properties.targetOSList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetOSInfo"
            }
          }
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      },
      blobPath: {
        serializedName: "properties.blobPath",
        type: {
          name: "String"
        }
      },
      tests: {
        serializedName: "properties.tests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Test"
            }
          }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DownloadURLResponse: msRest.CompositeMapper = {
  serializedName: "DownloadURLResponse",
  type: {
    name: "Composite",
    className: "DownloadURLResponse",
    modelProperties: {
      downloadUrl: {
        readOnly: true,
        serializedName: "downloadUrl",
        type: {
          name: "String"
        }
      },
      expirationTime: {
        readOnly: true,
        serializedName: "expirationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const OSUpdateTestSummary: msRest.CompositeMapper = {
  serializedName: "OSUpdateTestSummary",
  type: {
    name: "Composite",
    className: "OSUpdateTestSummary",
    modelProperties: {
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      releaseName: {
        serializedName: "releaseName",
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "buildVersion",
        type: {
          name: "String"
        }
      },
      buildRevision: {
        serializedName: "buildRevision",
        type: {
          name: "String"
        }
      },
      releaseVersionDate: {
        serializedName: "releaseVersionDate",
        type: {
          name: "DateTime"
        }
      },
      flightingRing: {
        serializedName: "flightingRing",
        type: {
          name: "String"
        }
      },
      executionStatus: {
        serializedName: "executionStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      testRunTime: {
        serializedName: "testRunTime",
        type: {
          name: "String"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OSUpdatesTestSummary: msRest.CompositeMapper = {
  serializedName: "OSUpdatesTestSummary",
  type: {
    name: "Composite",
    className: "OSUpdatesTestSummary",
    modelProperties: {
      executionStatus: {
        serializedName: "executionStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      testRunTime: {
        serializedName: "testRunTime",
        type: {
          name: "String"
        }
      },
      osUpdateTestSummaries: {
        serializedName: "osUpdateTestSummaries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OSUpdateTestSummary"
            }
          }
        }
      }
    }
  }
};

export const TestSummaryResource: msRest.CompositeMapper = {
  serializedName: "TestSummaryResource",
  type: {
    name: "Composite",
    className: "TestSummaryResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      testSummaryId: {
        serializedName: "properties.testSummaryId",
        type: {
          name: "String"
        }
      },
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      applicationName: {
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      applicationVersion: {
        serializedName: "properties.applicationVersion",
        type: {
          name: "String"
        }
      },
      executionStatus: {
        serializedName: "properties.executionStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "properties.grade",
        type: {
          name: "String"
        }
      },
      testRunTime: {
        serializedName: "properties.testRunTime",
        type: {
          name: "String"
        }
      },
      featureUpdatesTestSummary: {
        serializedName: "properties.featureUpdatesTestSummary",
        type: {
          name: "Composite",
          className: "OSUpdatesTestSummary"
        }
      },
      securityUpdatesTestSummary: {
        serializedName: "properties.securityUpdatesTestSummary",
        type: {
          name: "Composite",
          className: "OSUpdatesTestSummary"
        }
      }
    }
  }
};

export const TestResultAnalysisSummary: msRest.CompositeMapper = {
  serializedName: "TestResultAnalysisSummary",
  type: {
    name: "Composite",
    className: "TestResultAnalysisSummary",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      analysisStatus: {
        serializedName: "analysisStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestResultResource: msRest.CompositeMapper = {
  serializedName: "TestResultResource",
  type: {
    name: "Composite",
    className: "TestResultResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      baselineTestResultId: {
        serializedName: "properties.baselineTestResultId",
        type: {
          name: "String"
        }
      },
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      applicationName: {
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      applicationVersion: {
        serializedName: "properties.applicationVersion",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      releaseName: {
        serializedName: "properties.releaseName",
        type: {
          name: "String"
        }
      },
      releaseVersionDate: {
        serializedName: "properties.releaseVersionDate",
        type: {
          name: "DateTime"
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "properties.buildVersion",
        type: {
          name: "String"
        }
      },
      buildRevision: {
        serializedName: "properties.buildRevision",
        type: {
          name: "String"
        }
      },
      testType: {
        serializedName: "properties.testType",
        type: {
          name: "String"
        }
      },
      testRunTime: {
        serializedName: "properties.testRunTime",
        type: {
          name: "String"
        }
      },
      isDownloadDataAvailable: {
        serializedName: "properties.isDownloadDataAvailable",
        type: {
          name: "Boolean"
        }
      },
      isVideoAvailable: {
        serializedName: "properties.isVideoAvailable",
        type: {
          name: "Boolean"
        }
      },
      executionStatus: {
        serializedName: "properties.executionStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "properties.grade",
        type: {
          name: "String"
        }
      },
      kbNumber: {
        serializedName: "properties.kbNumber",
        type: {
          name: "String"
        }
      },
      packageVersion: {
        serializedName: "properties.packageVersion",
        type: {
          name: "String"
        }
      },
      analysisSummaries: {
        serializedName: "properties.analysisSummaries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestResultAnalysisSummary"
            }
          }
        }
      }
    }
  }
};

export const OSUpdateResource: msRest.CompositeMapper = {
  serializedName: "OSUpdateResource",
  type: {
    name: "Composite",
    className: "OSUpdateResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      osName: {
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      release: {
        serializedName: "properties.release",
        type: {
          name: "String"
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "properties.buildVersion",
        type: {
          name: "String"
        }
      },
      buildRevision: {
        serializedName: "properties.buildRevision",
        type: {
          name: "String"
        }
      },
      oSUpdateResourceType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      releaseVersionDate: {
        serializedName: "properties.releaseVersionDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const FavoriteProcessResource: msRest.CompositeMapper = {
  serializedName: "FavoriteProcessResource",
  type: {
    name: "Composite",
    className: "FavoriteProcessResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      actualProcessName: {
        required: true,
        serializedName: "properties.actualProcessName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisResultSingletonResourceProperties: msRest.CompositeMapper = {
  serializedName: "AnalysisResultSingletonResourceProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "analysisResultType",
      clientName: "analysisResultType"
    },
    uberParent: "AnalysisResultSingletonResourceProperties",
    className: "AnalysisResultSingletonResourceProperties",
    modelProperties: {
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      analysisResultType: {
        required: true,
        serializedName: "analysisResultType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisResultSingletonResource: msRest.CompositeMapper = {
  serializedName: "AnalysisResultSingletonResource",
  type: {
    name: "Composite",
    className: "AnalysisResultSingletonResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      grade: {
        serializedName: "properties.grade",
        type: {
          name: "String"
        }
      },
      analysisResultType: {
        required: true,
        serializedName: "properties.analysisResultType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScriptExecutionResult: msRest.CompositeMapper = {
  serializedName: "ScriptExecutionResult",
  type: {
    name: "Composite",
    className: "ScriptExecutionResult",
    modelProperties: {
      scriptName: {
        serializedName: "scriptName",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      exitCode: {
        serializedName: "exitCode",
        type: {
          name: "Number"
        }
      },
      timeOut: {
        serializedName: "timeOut",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ScriptExecutionResultSingletonResourceProperties: msRest.CompositeMapper = {
  serializedName: "ScriptExecution",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    uberParent: "AnalysisResultSingletonResourceProperties",
    className: "ScriptExecutionResultSingletonResourceProperties",
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      scriptExecutionResults: {
        serializedName: "scriptExecutionResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScriptExecutionResult"
            }
          }
        }
      }
    }
  }
};

export const RegressionTestDetails: msRest.CompositeMapper = {
  serializedName: "RegressionTestDetails",
  type: {
    name: "Composite",
    className: "RegressionTestDetails",
    modelProperties: {
      diff: {
        serializedName: "diff",
        type: {
          name: "Number"
        }
      },
      isRegressed: {
        serializedName: "isRegressed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReliabilityResult: msRest.CompositeMapper = {
  serializedName: "ReliabilityResult",
  type: {
    name: "Composite",
    className: "ReliabilityResult",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      launchCount: {
        serializedName: "launchCount",
        type: {
          name: "Number"
        }
      },
      crashCount: {
        serializedName: "crashCount",
        type: {
          name: "Number"
        }
      },
      hangCount: {
        serializedName: "hangCount",
        type: {
          name: "Number"
        }
      },
      regressionGrade: {
        serializedName: "regressionGrade",
        type: {
          name: "String"
        }
      },
      crashRegressionGrade: {
        serializedName: "crashRegressionGrade",
        type: {
          name: "String"
        }
      },
      crashRegressionTestDetails: {
        serializedName: "crashRegressionTestDetails",
        type: {
          name: "Composite",
          className: "RegressionTestDetails"
        }
      },
      hangRegressionGrade: {
        serializedName: "hangRegressionGrade",
        type: {
          name: "String"
        }
      },
      hangRegressionTestDetails: {
        serializedName: "hangRegressionTestDetails",
        type: {
          name: "Composite",
          className: "RegressionTestDetails"
        }
      }
    }
  }
};

export const ReliabilityResultSingletonResourceProperties: msRest.CompositeMapper = {
  serializedName: "Reliability",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    uberParent: "AnalysisResultSingletonResourceProperties",
    className: "ReliabilityResultSingletonResourceProperties",
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      reliabilityResults: {
        serializedName: "reliabilityResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReliabilityResult"
            }
          }
        }
      }
    }
  }
};

export const UtilizationBound: msRest.CompositeMapper = {
  serializedName: "UtilizationBound",
  type: {
    name: "Composite",
    className: "UtilizationBound",
    modelProperties: {
      percentile: {
        serializedName: "percentile",
        type: {
          name: "Number"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const UtilizationEntry: msRest.CompositeMapper = {
  serializedName: "UtilizationEntry",
  type: {
    name: "Composite",
    className: "UtilizationEntry",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const UtilizationResult: msRest.CompositeMapper = {
  serializedName: "UtilizationResult",
  type: {
    name: "Composite",
    className: "UtilizationResult",
    modelProperties: {
      process: {
        serializedName: "process",
        type: {
          name: "String"
        }
      },
      upperBound: {
        serializedName: "upperBound",
        type: {
          name: "Composite",
          className: "UtilizationBound"
        }
      },
      lowerBound: {
        serializedName: "lowerBound",
        type: {
          name: "Composite",
          className: "UtilizationBound"
        }
      },
      utilization: {
        serializedName: "utilization",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UtilizationEntry"
            }
          }
        }
      }
    }
  }
};

export const CPUUtilizationResultSingletonResourceProperties: msRest.CompositeMapper = {
  serializedName: "CPUUtilization",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    uberParent: "AnalysisResultSingletonResourceProperties",
    className: "CPUUtilizationResultSingletonResourceProperties",
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      cpuUtilizationResults: {
        serializedName: "cpuUtilizationResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UtilizationResult"
            }
          }
        }
      }
    }
  }
};

export const MemoryUtilizationResultSingletonResourceProperties: msRest.CompositeMapper = {
  serializedName: "MemoryUtilization",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    uberParent: "AnalysisResultSingletonResourceProperties",
    className: "MemoryUtilizationResultSingletonResourceProperties",
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      memoryUtilizationResults: {
        serializedName: "memoryUtilizationResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UtilizationResult"
            }
          }
        }
      }
    }
  }
};

export const RegressionResult: msRest.CompositeMapper = {
  serializedName: "RegressionResult",
  type: {
    name: "Composite",
    className: "RegressionResult",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "String"
        }
      },
      diff: {
        serializedName: "diff",
        type: {
          name: "Number"
        }
      },
      isRegressed: {
        serializedName: "isRegressed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const CPURegressionResultSingletonResourceProperties: msRest.CompositeMapper = {
  serializedName: "CPURegression",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    uberParent: "AnalysisResultSingletonResourceProperties",
    className: "CPURegressionResultSingletonResourceProperties",
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      cpuRegressionResults: {
        serializedName: "cpuRegressionResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegressionResult"
            }
          }
        }
      }
    }
  }
};

export const MemoryRegressionResultSingletonResourceProperties: msRest.CompositeMapper = {
  serializedName: "MemoryRegression",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    uberParent: "AnalysisResultSingletonResourceProperties",
    className: "MemoryRegressionResultSingletonResourceProperties",
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      memoryRegressionResults: {
        serializedName: "memoryRegressionResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegressionResult"
            }
          }
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        readOnly: true,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const TestBaseAccountCreateHeaders: msRest.CompositeMapper = {
  serializedName: "testbaseaccount-create-headers",
  type: {
    name: "Composite",
    className: "TestBaseAccountCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "testbaseaccount-update-headers",
  type: {
    name: "Composite",
    className: "TestBaseAccountUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      locationHeader: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "testbaseaccount-delete-headers",
  type: {
    name: "Composite",
    className: "TestBaseAccountDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountOffboardHeaders: msRest.CompositeMapper = {
  serializedName: "testbaseaccount-offboard-headers",
  type: {
    name: "Composite",
    className: "TestBaseAccountOffboardHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageCreateHeaders: msRest.CompositeMapper = {
  serializedName: "package-create-headers",
  type: {
    name: "Composite",
    className: "PackageCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "package-update-headers",
  type: {
    name: "Composite",
    className: "PackageUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      locationHeader: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "package-delete-headers",
  type: {
    name: "Composite",
    className: "PackageDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageHardDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "package-harddelete-headers",
  type: {
    name: "Composite",
    className: "PackageHardDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountSKUListResult: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountSKUListResult",
  type: {
    name: "Composite",
    className: "TestBaseAccountSKUListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestBaseAccountSKU"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountListResult: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountListResult",
  type: {
    name: "Composite",
    className: "TestBaseAccountListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestBaseAccountResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountUsageDataList: msRest.CompositeMapper = {
  serializedName: "TestBaseAccountUsageDataList",
  type: {
    name: "Composite",
    className: "TestBaseAccountUsageDataList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestBaseAccountUsageData"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailableOSListResult: msRest.CompositeMapper = {
  serializedName: "AvailableOSListResult",
  type: {
    name: "Composite",
    className: "AvailableOSListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvailableOSResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FlightingRingListResult: msRest.CompositeMapper = {
  serializedName: "FlightingRingListResult",
  type: {
    name: "Composite",
    className: "FlightingRingListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FlightingRingResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestTypeListResult: msRest.CompositeMapper = {
  serializedName: "TestTypeListResult",
  type: {
    name: "Composite",
    className: "TestTypeListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestTypeResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageListResult: msRest.CompositeMapper = {
  serializedName: "PackageListResult",
  type: {
    name: "Composite",
    className: "PackageListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestSummaryListResult: msRest.CompositeMapper = {
  serializedName: "TestSummaryListResult",
  type: {
    name: "Composite",
    className: "TestSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestSummaryResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestResultListResult: msRest.CompositeMapper = {
  serializedName: "TestResultListResult",
  type: {
    name: "Composite",
    className: "TestResultListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestResultResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OSUpdateListResult: msRest.CompositeMapper = {
  serializedName: "OSUpdateListResult",
  type: {
    name: "Composite",
    className: "OSUpdateListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OSUpdateResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FavoriteProcessListResult: msRest.CompositeMapper = {
  serializedName: "FavoriteProcessListResult",
  type: {
    name: "Composite",
    className: "FavoriteProcessListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FavoriteProcessResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisResultListResult: msRest.CompositeMapper = {
  serializedName: "AnalysisResultListResult",
  type: {
    name: "Composite",
    className: "AnalysisResultListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AnalysisResultSingletonResource"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'AnalysisResultSingletonResourceProperties' : AnalysisResultSingletonResourceProperties,
  'AnalysisResultSingletonResourceProperties.ScriptExecution' : ScriptExecutionResultSingletonResourceProperties,
  'AnalysisResultSingletonResourceProperties.Reliability' : ReliabilityResultSingletonResourceProperties,
  'AnalysisResultSingletonResourceProperties.CPUUtilization' : CPUUtilizationResultSingletonResourceProperties,
  'AnalysisResultSingletonResourceProperties.MemoryUtilization' : MemoryUtilizationResultSingletonResourceProperties,
  'AnalysisResultSingletonResourceProperties.CPURegression' : CPURegressionResultSingletonResourceProperties,
  'AnalysisResultSingletonResourceProperties.MemoryRegression' : MemoryRegressionResultSingletonResourceProperties

};
