/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const analysisResultName: msRest.OperationURLParameter = {
  parameterPath: "analysisResultName",
  mapper: {
    required: true,
    serializedName: "analysisResultName",
    type: {
      name: "String"
    }
  }
};
export const analysisResultType: msRest.OperationQueryParameter = {
  parameterPath: "analysisResultType",
  mapper: {
    required: true,
    serializedName: "analysisResultType",
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const availableOSResourceName: msRest.OperationURLParameter = {
  parameterPath: "availableOSResourceName",
  mapper: {
    required: true,
    serializedName: "availableOSResourceName",
    type: {
      name: "String"
    }
  }
};
export const favoriteProcessResourceName: msRest.OperationURLParameter = {
  parameterPath: "favoriteProcessResourceName",
  mapper: {
    required: true,
    serializedName: "favoriteProcessResourceName",
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const flightingRingResourceName: msRest.OperationURLParameter = {
  parameterPath: "flightingRingResourceName",
  mapper: {
    required: true,
    serializedName: "flightingRingResourceName",
    type: {
      name: "String"
    }
  }
};
export const getDeleted: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "getDeleted"
  ],
  mapper: {
    serializedName: "getDeleted",
    type: {
      name: "Boolean"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const osUpdateResourceName: msRest.OperationURLParameter = {
  parameterPath: "osUpdateResourceName",
  mapper: {
    required: true,
    serializedName: "osUpdateResourceName",
    type: {
      name: "String"
    }
  }
};
export const osUpdateType: msRest.OperationQueryParameter = {
  parameterPath: "osUpdateType",
  mapper: {
    required: true,
    serializedName: "osUpdateType",
    type: {
      name: "String"
    }
  }
};
export const packageName: msRest.OperationURLParameter = {
  parameterPath: "packageName",
  mapper: {
    required: true,
    serializedName: "packageName",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const restore: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "restore"
  ],
  mapper: {
    serializedName: "restore",
    type: {
      name: "Boolean"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const testBaseAccountName: msRest.OperationURLParameter = {
  parameterPath: "testBaseAccountName",
  mapper: {
    required: true,
    serializedName: "testBaseAccountName",
    type: {
      name: "String"
    }
  }
};
export const testResultName: msRest.OperationURLParameter = {
  parameterPath: "testResultName",
  mapper: {
    required: true,
    serializedName: "testResultName",
    type: {
      name: "String"
    }
  }
};
export const testSummaryName: msRest.OperationURLParameter = {
  parameterPath: "testSummaryName",
  mapper: {
    required: true,
    serializedName: "testSummaryName",
    type: {
      name: "String"
    }
  }
};
export const testTypeResourceName: msRest.OperationURLParameter = {
  parameterPath: "testTypeResourceName",
  mapper: {
    required: true,
    serializedName: "testTypeResourceName",
    type: {
      name: "String"
    }
  }
};
