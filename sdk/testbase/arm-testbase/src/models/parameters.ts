/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  TestBaseAccountResource as TestBaseAccountResourceMapper,
  TestBaseAccountUpdateParameters as TestBaseAccountUpdateParametersMapper,
  GetFileUploadURLParameters as GetFileUploadURLParametersMapper,
  PackageCheckNameAvailabilityParameters as PackageCheckNameAvailabilityParametersMapper,
  PackageResource as PackageResourceMapper,
  PackageUpdateParameters as PackageUpdateParametersMapper,
  FavoriteProcessResource as FavoriteProcessResourceMapper,
  CustomerEventResource as CustomerEventResourceMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2020-12-16-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const getDeleted: OperationQueryParameter = {
  parameterPath: ["options", "getDeleted"],
  mapper: {
    serializedName: "getDeleted",
    type: {
      name: "Boolean"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: TestBaseAccountResourceMapper
};

export const testBaseAccountName: OperationURLParameter = {
  parameterPath: "testBaseAccountName",
  mapper: {
    serializedName: "testBaseAccountName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const restore: OperationQueryParameter = {
  parameterPath: ["options", "restore"],
  mapper: {
    serializedName: "restore",
    type: {
      name: "Boolean"
    }
  }
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: TestBaseAccountUpdateParametersMapper
};

export const parameters2: OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: GetFileUploadURLParametersMapper
};

export const parameters3: OperationParameter = {
  parameterPath: "parameters",
  mapper: PackageCheckNameAvailabilityParametersMapper
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const osUpdateType: OperationQueryParameter = {
  parameterPath: "osUpdateType",
  mapper: {
    serializedName: "osUpdateType",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const availableOSResourceName: OperationURLParameter = {
  parameterPath: "availableOSResourceName",
  mapper: {
    serializedName: "availableOSResourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const flightingRingResourceName: OperationURLParameter = {
  parameterPath: "flightingRingResourceName",
  mapper: {
    serializedName: "flightingRingResourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const testTypeResourceName: OperationURLParameter = {
  parameterPath: "testTypeResourceName",
  mapper: {
    serializedName: "testTypeResourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters4: OperationParameter = {
  parameterPath: "parameters",
  mapper: PackageResourceMapper
};

export const packageName: OperationURLParameter = {
  parameterPath: "packageName",
  mapper: {
    serializedName: "packageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters5: OperationParameter = {
  parameterPath: "parameters",
  mapper: PackageUpdateParametersMapper
};

export const testSummaryName: OperationURLParameter = {
  parameterPath: "testSummaryName",
  mapper: {
    serializedName: "testSummaryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const testResultName: OperationURLParameter = {
  parameterPath: "testResultName",
  mapper: {
    serializedName: "testResultName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const osUpdateResourceName: OperationURLParameter = {
  parameterPath: "osUpdateResourceName",
  mapper: {
    serializedName: "osUpdateResourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters6: OperationParameter = {
  parameterPath: "parameters",
  mapper: FavoriteProcessResourceMapper
};

export const favoriteProcessResourceName: OperationURLParameter = {
  parameterPath: "favoriteProcessResourceName",
  mapper: {
    serializedName: "favoriteProcessResourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const analysisResultType: OperationQueryParameter = {
  parameterPath: "analysisResultType",
  mapper: {
    serializedName: "analysisResultType",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const analysisResultName: OperationURLParameter = {
  parameterPath: "analysisResultName",
  mapper: {
    serializedName: "analysisResultName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const emailEventResourceName: OperationURLParameter = {
  parameterPath: "emailEventResourceName",
  mapper: {
    serializedName: "emailEventResourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters7: OperationParameter = {
  parameterPath: "parameters",
  mapper: CustomerEventResourceMapper
};

export const customerEventName: OperationURLParameter = {
  parameterPath: "customerEventName",
  mapper: {
    serializedName: "customerEventName",
    required: true,
    type: {
      name: "String"
    }
  }
};
