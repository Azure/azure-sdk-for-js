/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  CustomerEventResource,
  CustomerEventsListByTestBaseAccountOptionalParams,
  CustomerEventsCreateOptionalParams,
  CustomerEventsCreateResponse,
  CustomerEventsDeleteOptionalParams,
  CustomerEventsGetOptionalParams,
  CustomerEventsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CustomerEvents. */
export interface CustomerEvents {
  /**
   * Lists all notification events subscribed under a Test Base Account.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param options The options parameters.
   */
  listByTestBaseAccount(
    resourceGroupName: string,
    testBaseAccountName: string,
    options?: CustomerEventsListByTestBaseAccountOptionalParams
  ): PagedAsyncIterableIterator<CustomerEventResource>;
  /**
   * Create or replace a Test Base Customer Event.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customerEventName The resource name of the Test Base Customer event.
   * @param parameters Parameters supplied to create a Test Base CustomerEvent.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    testBaseAccountName: string,
    customerEventName: string,
    parameters: CustomerEventResource,
    options?: CustomerEventsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<CustomerEventsCreateResponse>,
      CustomerEventsCreateResponse
    >
  >;
  /**
   * Create or replace a Test Base Customer Event.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customerEventName The resource name of the Test Base Customer event.
   * @param parameters Parameters supplied to create a Test Base CustomerEvent.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    customerEventName: string,
    parameters: CustomerEventResource,
    options?: CustomerEventsCreateOptionalParams
  ): Promise<CustomerEventsCreateResponse>;
  /**
   * Deletes a Test Base Customer Event.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customerEventName The resource name of the Test Base Customer event.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    testBaseAccountName: string,
    customerEventName: string,
    options?: CustomerEventsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a Test Base Customer Event.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customerEventName The resource name of the Test Base Customer event.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    customerEventName: string,
    options?: CustomerEventsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets a Test Base CustomerEvent.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customerEventName The resource name of the Test Base Customer event.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    testBaseAccountName: string,
    customerEventName: string,
    options?: CustomerEventsGetOptionalParams
  ): Promise<CustomerEventsGetResponse>;
}
