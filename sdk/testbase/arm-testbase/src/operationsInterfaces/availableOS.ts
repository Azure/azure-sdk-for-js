/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  AvailableOSResource,
  OsUpdateType,
  AvailableOSListOptionalParams,
  AvailableOSGetOptionalParams,
  AvailableOSGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AvailableOS. */
export interface AvailableOS {
  /**
   * Lists all the available OSs to run a package under a Test Base Account.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param osUpdateType The type of the OS Update.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    testBaseAccountName: string,
    osUpdateType: OsUpdateType,
    options?: AvailableOSListOptionalParams
  ): PagedAsyncIterableIterator<AvailableOSResource>;
  /**
   * Gets an available OS to run a package under a Test Base Account.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param availableOSResourceName The resource name of an Available OS.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    testBaseAccountName: string,
    availableOSResourceName: string,
    options?: AvailableOSGetOptionalParams
  ): Promise<AvailableOSGetResponse>;
}
