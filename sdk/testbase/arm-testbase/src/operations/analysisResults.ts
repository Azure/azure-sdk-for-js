/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/analysisResultsMappers";
import * as Parameters from "../models/parameters";
import { RESTAPIforTestBaseContext } from "../rESTAPIforTestBaseContext";

/** Class representing a AnalysisResults. */
export class AnalysisResults {
  private readonly client: RESTAPIforTestBaseContext;

  /**
   * Create a AnalysisResults.
   * @param {RESTAPIforTestBaseContext} client Reference to the service client.
   */
  constructor(client: RESTAPIforTestBaseContext) {
    this.client = client;
  }

  /**
   * Lists the Analysis Results of a Test Result. The result collection will only contain one element
   * as all the data will be nested in a singleton object.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
   * @param analysisResultType The type of the Analysis Result of a Test Result. Possible values
   * include: 'ScriptExecution', 'Reliability', 'MemoryUtilization', 'CPUUtilization',
   * 'MemoryRegression', 'CPURegression'
   * @param [options] The optional parameters
   * @returns Promise<Models.AnalysisResultsListResponse>
   */
  list(resourceGroupName: string, testBaseAccountName: string, packageName: string, testResultName: string, analysisResultType: Models.AnalysisResultType, options?: msRest.RequestOptionsBase): Promise<Models.AnalysisResultsListResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
   * @param analysisResultType The type of the Analysis Result of a Test Result. Possible values
   * include: 'ScriptExecution', 'Reliability', 'MemoryUtilization', 'CPUUtilization',
   * 'MemoryRegression', 'CPURegression'
   * @param callback The callback
   */
  list(resourceGroupName: string, testBaseAccountName: string, packageName: string, testResultName: string, analysisResultType: Models.AnalysisResultType, callback: msRest.ServiceCallback<Models.AnalysisResultListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param testResultName The Test Result Name. It equals to {osName}-{TestResultId} string.
   * @param analysisResultType The type of the Analysis Result of a Test Result. Possible values
   * include: 'ScriptExecution', 'Reliability', 'MemoryUtilization', 'CPUUtilization',
   * 'MemoryRegression', 'CPURegression'
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, testBaseAccountName: string, packageName: string, testResultName: string, analysisResultType: Models.AnalysisResultType, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AnalysisResultListResult>): void;
  list(resourceGroupName: string, testBaseAccountName: string, packageName: string, testResultName: string, analysisResultType: Models.AnalysisResultType, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AnalysisResultListResult>, callback?: msRest.ServiceCallback<Models.AnalysisResultListResult>): Promise<Models.AnalysisResultsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        testBaseAccountName,
        packageName,
        testResultName,
        analysisResultType,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.AnalysisResultsListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/testResults/{testResultName}/analysisResults",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.testBaseAccountName,
    Parameters.packageName,
    Parameters.testResultName
  ],
  queryParameters: [
    Parameters.analysisResultType,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AnalysisResultListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
