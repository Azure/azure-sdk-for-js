/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/sKUsMappers";
import * as Parameters from "../models/parameters";
import { RESTAPIforTestBaseContext } from "../rESTAPIforTestBaseContext";

/** Class representing a SKUs. */
export class SKUs {
  private readonly client: RESTAPIforTestBaseContext;

  /**
   * Create a SKUs.
   * @param {RESTAPIforTestBaseContext} client Reference to the service client.
   */
  constructor(client: RESTAPIforTestBaseContext) {
    this.client = client;
  }

  /**
   * Lists the available SKUs of Test Base Account in a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.SKUsListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.SKUsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.TestBaseAccountSKUListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestBaseAccountSKUListResult>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TestBaseAccountSKUListResult>, callback?: msRest.ServiceCallback<Models.TestBaseAccountSKUListResult>): Promise<Models.SKUsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.SKUsListResponse>;
  }

  /**
   * Lists the available SKUs of Test Base Account in a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SKUsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SKUsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TestBaseAccountSKUListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestBaseAccountSKUListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TestBaseAccountSKUListResult>, callback?: msRest.ServiceCallback<Models.TestBaseAccountSKUListResult>): Promise<Models.SKUsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.SKUsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.TestBase/skus",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TestBaseAccountSKUListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TestBaseAccountSKUListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
