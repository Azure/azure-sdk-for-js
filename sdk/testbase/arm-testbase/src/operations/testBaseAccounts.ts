/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/testBaseAccountsMappers";
import * as Parameters from "../models/parameters";
import { RESTAPIforTestBaseContext } from "../rESTAPIforTestBaseContext";

/** Class representing a TestBaseAccounts. */
export class TestBaseAccounts {
  private readonly client: RESTAPIforTestBaseContext;

  /**
   * Create a TestBaseAccounts.
   * @param {RESTAPIforTestBaseContext} client Reference to the service client.
   */
  constructor(client: RESTAPIforTestBaseContext) {
    this.client = client;
  }

  /**
   * Lists all the Test Base Accounts in a subscription. This API is required by ARM guidelines.
   * @param [options] The optional parameters
   * @returns Promise<Models.TestBaseAccountsListBySubscriptionResponse>
   */
  listBySubscription(options?: Models.TestBaseAccountsListBySubscriptionOptionalParams): Promise<Models.TestBaseAccountsListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.TestBaseAccountListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: Models.TestBaseAccountsListBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.TestBaseAccountListResult>): void;
  listBySubscription(options?: Models.TestBaseAccountsListBySubscriptionOptionalParams | msRest.ServiceCallback<Models.TestBaseAccountListResult>, callback?: msRest.ServiceCallback<Models.TestBaseAccountListResult>): Promise<Models.TestBaseAccountsListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.TestBaseAccountsListBySubscriptionResponse>;
  }

  /**
   * Lists all the Test Base Accounts in a resource group.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.TestBaseAccountsListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: Models.TestBaseAccountsListByResourceGroupOptionalParams): Promise<Models.TestBaseAccountsListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.TestBaseAccountListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: Models.TestBaseAccountsListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.TestBaseAccountListResult>): void;
  listByResourceGroup(resourceGroupName: string, options?: Models.TestBaseAccountsListByResourceGroupOptionalParams | msRest.ServiceCallback<Models.TestBaseAccountListResult>, callback?: msRest.ServiceCallback<Models.TestBaseAccountListResult>): Promise<Models.TestBaseAccountsListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.TestBaseAccountsListByResourceGroupResponse>;
  }

  /**
   * Lists all the Test Base Accounts in a subscription. This API is required by ARM guidelines.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TestBaseAccountsListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: Models.TestBaseAccountsListBySubscriptionNextOptionalParams): Promise<Models.TestBaseAccountsListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TestBaseAccountListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: Models.TestBaseAccountsListBySubscriptionNextOptionalParams, callback: msRest.ServiceCallback<Models.TestBaseAccountListResult>): void;
  listBySubscriptionNext(nextPageLink: string, options?: Models.TestBaseAccountsListBySubscriptionNextOptionalParams | msRest.ServiceCallback<Models.TestBaseAccountListResult>, callback?: msRest.ServiceCallback<Models.TestBaseAccountListResult>): Promise<Models.TestBaseAccountsListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.TestBaseAccountsListBySubscriptionNextResponse>;
  }

  /**
   * Lists all the Test Base Accounts in a resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TestBaseAccountsListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: Models.TestBaseAccountsListByResourceGroupNextOptionalParams): Promise<Models.TestBaseAccountsListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TestBaseAccountListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: Models.TestBaseAccountsListByResourceGroupNextOptionalParams, callback: msRest.ServiceCallback<Models.TestBaseAccountListResult>): void;
  listByResourceGroupNext(nextPageLink: string, options?: Models.TestBaseAccountsListByResourceGroupNextOptionalParams | msRest.ServiceCallback<Models.TestBaseAccountListResult>, callback?: msRest.ServiceCallback<Models.TestBaseAccountListResult>): Promise<Models.TestBaseAccountsListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.TestBaseAccountsListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.TestBase/testBaseAccounts",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.getDeleted,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TestBaseAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.getDeleted,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TestBaseAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.getDeleted,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TestBaseAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.getDeleted,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TestBaseAccountListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
