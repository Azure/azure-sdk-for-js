{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "metadata": {
          "description": "The location of the resource. By default, this is the same as the resource group."
        }
      }
    },
    "testApplicationOid": {
      "type": "string",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "metadata": {
        "description": "The tenant ID to which the application and resources belong."
      }
    },
    "testApplicationId": {
      "type": "string",
      "metadata": {
        "description": "The application client ID used to run tests."
      }
    },
    "testApplicationSecret": {
      "type": "string",
      "metadata": {
        "description": "The application client secret used to run tests."
      }
    },
    "enableVersioning": {
      "type": "bool",
      "defaultValue": false
    },
    "cognitiveServicesEndpointSuffix": {
      "type": "string",
      "defaultValue": ".cognitiveservices.azure.com"
    },
    "storageRoleUniqueId": {
      "defaultValue": "[newGuid()]",
      "type": "String"
    },
    "storageServicesEndpointSuffix": {
      "type": "string",
      "defaultValue": ".blob.core.windows.net"
    }
  },
  "variables": {
    "taRoleId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/a97b65f3-24c7-4388-baec-2e87135dc908')]",
    "cognitiveAccountName": "[format('textanalytics-{0}', parameters('baseName'))]",
    "cognitiveApiVersion": "2022-12-01",
    "storageApiVersion": "2022-09-01",
    "storageAccountName": "[parameters('baseName')]",
    "authorizationApiVersion": "2018-09-01-preview",
    "blobDataContributorRoleId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
    "blobDataOwnerRoleId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
    "encryption": {
      "services": {
        "file": {
          "enabled": true
        },
        "blob": {
          "enabled": true
        }
      },
      "keySource": "Microsoft.Storage"
    },
    "networkAcls": {
      "bypass": "AzureServices",
      "virtualNetworkRules": [],
      "ipRules": [],
      "defaultAction": "Allow"
    },
    "containerName": "documents"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid(concat(resourceGroup().id, '/', variables('blobDataOwnerRoleId'), '/', parameters('storageRoleUniqueId'))))]",
      "dependsOn": [
        "[variables('storageAccountName')]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveAccountName'))]"
      ],
      "location": "[parameters('location')]",
      "properties": {
        "roleDefinitionId": "[variables('blobDataOwnerRoleId')]",
        "principalId": "[reference(concat('Microsoft.CognitiveServices/accounts/', variables('cognitiveAccountName')), variables('cognitiveApiVersion'), 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "[variables('authorizationApiVersion')]",
      "name": "[guid(concat('blobDataContributorRoleId', variables('storageAccountName')))]",
      "dependsOn": [
        "[variables('storageAccountName')]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('blobDataContributorRoleId')]",
        "principalId": "[parameters('testApplicationOid')]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "[variables('authorizationApiVersion')]",
      "name": "[guid(concat('blobDataOwnerRoleId', variables('storageAccountName')))]",
      "dependsOn": [
        "[variables('storageAccountName')]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('blobDataOwnerRoleId')]",
        "principalId": "[parameters('testApplicationOid')]"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/providers/roleAssignments",
      "apiVersion": "[variables('authorizationApiVersion')]",
      "name": "[format('{0}/Microsoft.Authorization/{1}', variables('cognitiveAccountName'), guid(variables('cognitiveAccountName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveAccountName'))]"
      ],
      "properties": {
        "principalId": "[parameters('testApplicationOid')]",
        "roleDefinitionId": "[variables('taRoleId')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": "[variables('networkAcls')]",
        "supportsHttpsTrafficOnly": true,
        "encryption": "[variables('encryption')]",
        "accessTier": "Hot"
      },
      "resources": [
        {
          "name": "default",
          "type": "blobServices",
          "apiVersion": "[variables('storageApiVersion')]",
          "dependsOn": [
            "[variables('storageAccountName')]"
          ],
          "properties": {
            "isVersioningEnabled": "[parameters('enableVersioning')]",
            "cors": {
              "corsRules": [
                {
                  "allowedOrigins": [
                    "*"
                  ],
                  "allowedMethods": [
                    "DELETE",
                    "GET",
                    "HEAD",
                    "MERGE",
                    "POST",
                    "OPTIONS",
                    "PUT",
                    "PATCH"
                  ],
                  "maxAgeInSeconds": 86400,
                  "exposedHeaders": [
                    "*"
                  ],
                  "allowedHeaders": [
                    "*"
                  ]
                }
              ]
            },
            "lastAccessTimeTrackingPolicy": {
              "enable": true,
              "name": "AccessTimeTracking",
              "trackingGranularityInDays": 1,
              "blobType": [
                "blockBlob"
              ]
            }
          },
          "resources": []
        },
        {
          "name": "default",
          "type": "fileServices",
          "apiVersion": "[variables('storageApiVersion')]",
          "dependsOn": [
            "[variables('storageAccountName')]"
          ],
          "properties": {
            "cors": {
              "corsRules": [
                {
                  "allowedOrigins": [
                    "*"
                  ],
                  "allowedMethods": [
                    "DELETE",
                    "GET",
                    "HEAD",
                    "MERGE",
                    "POST",
                    "OPTIONS",
                    "PUT"
                  ],
                  "maxAgeInSeconds": 86400,
                  "exposedHeaders": [
                    "*"
                  ],
                  "allowedHeaders": [
                    "*"
                  ]
                }
              ]
            }
          },
          "resources": []
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "[variables('storageApiVersion')]",
      "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('containerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "name": "[variables('cognitiveAccountName')]",
      "apiVersion": "[variables('cognitiveApiVersion')]",
      "sku": {
        "name": "S"
      },
      "kind": "TextAnalytics",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "customSubDomainName": "[variables('cognitiveAccountName')]",
        "userOwnedStorage": [
          {
            "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          }
        ]
      },
      "identity": {
        "type": "SystemAssigned"
      }
    }
  ],
  "outputs": {
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[parameters('tenantId')]"
    },
    "AZURE_CLIENT_ID": {
      "type": "string",
      "value": "[parameters('testApplicationId')]"
    },
    "AZURE_CLIENT_SECRET": {
      "type": "string",
      "value": "[parameters('testApplicationSecret')]"
    },
    "LANGUAGE_API_KEY": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveAccountName')), variables('cognitiveApiVersion')).key1]"
    },
    "LANGUAGE_API_KEY_ALT": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cognitiveAccountName')), variables('cognitiveApiVersion')).key2]"
    },
    "ENDPOINT": {
      "type": "string",
      "value": "[concat('https://', variables('cognitiveAccountName'), parameters('cognitiveServicesEndpointSuffix'), '/')]"
    },
    "STORAGE_ENDPOINT": {
      "type": "string",
      "value": "[concat('https://', variables('storageAccountName'), parameters('storageServicesEndpointSuffix'), '/')]"
    }
  }
}
