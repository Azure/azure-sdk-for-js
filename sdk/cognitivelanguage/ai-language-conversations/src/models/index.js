"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
exports.__esModule = true;
exports.KnownSummaryAspect = exports.KnownTranscriptContentType = exports.KnownConversationPIICategory = exports.KnownRangeKind = exports.KnownRelativeTo = exports.KnownNumberKind = exports.KnownTemporalModifier = exports.KnownDateTimeSubKind = exports.KnownWeightUnit = exports.KnownTemperatureUnit = exports.KnownInformationUnit = exports.KnownLengthUnit = exports.KnownAreaUnit = exports.KnownSpeedUnit = exports.KnownVolumeUnit = exports.KnownAgeUnit = exports.KnownLogicalOperationKind = exports.KnownRankerKind = exports.KnownExtraInformationKind = exports.KnownResolutionKind = exports.KnownProjectKind = exports.KnownTargetProjectKind = exports.KnownStringIndexType = exports.KnownRole = exports.KnownTaskState = exports.KnownAnalyzeConversationResultsKind = exports.KnownJobState = exports.KnownAnalyzeConversationLROTaskKind = exports.KnownConversationDomain = exports.KnownInputModality = exports.KnownInnerErrorCode = exports.KnownErrorCode = exports.KnownAnalyzeConversationTaskResultsKind = exports.KnownAnalyzeConversationTaskKind = void 0;
/** Known values of {@link AnalyzeConversationTaskKind} that the service accepts. */
var KnownAnalyzeConversationTaskKind;
(function (KnownAnalyzeConversationTaskKind) {
    /** Conversation */
    KnownAnalyzeConversationTaskKind["Conversation"] = "Conversation";
})(KnownAnalyzeConversationTaskKind = exports.KnownAnalyzeConversationTaskKind || (exports.KnownAnalyzeConversationTaskKind = {}));
/** Known values of {@link AnalyzeConversationTaskResultsKind} that the service accepts. */
var KnownAnalyzeConversationTaskResultsKind;
(function (KnownAnalyzeConversationTaskResultsKind) {
    /** ConversationResult */
    KnownAnalyzeConversationTaskResultsKind["ConversationResult"] = "ConversationResult";
})(KnownAnalyzeConversationTaskResultsKind = exports.KnownAnalyzeConversationTaskResultsKind || (exports.KnownAnalyzeConversationTaskResultsKind = {}));
/** Known values of {@link ErrorCode} that the service accepts. */
var KnownErrorCode;
(function (KnownErrorCode) {
    /** InvalidRequest */
    KnownErrorCode["InvalidRequest"] = "InvalidRequest";
    /** InvalidArgument */
    KnownErrorCode["InvalidArgument"] = "InvalidArgument";
    /** Unauthorized */
    KnownErrorCode["Unauthorized"] = "Unauthorized";
    /** Forbidden */
    KnownErrorCode["Forbidden"] = "Forbidden";
    /** NotFound */
    KnownErrorCode["NotFound"] = "NotFound";
    /** ProjectNotFound */
    KnownErrorCode["ProjectNotFound"] = "ProjectNotFound";
    /** OperationNotFound */
    KnownErrorCode["OperationNotFound"] = "OperationNotFound";
    /** AzureCognitiveSearchNotFound */
    KnownErrorCode["AzureCognitiveSearchNotFound"] = "AzureCognitiveSearchNotFound";
    /** AzureCognitiveSearchIndexNotFound */
    KnownErrorCode["AzureCognitiveSearchIndexNotFound"] = "AzureCognitiveSearchIndexNotFound";
    /** TooManyRequests */
    KnownErrorCode["TooManyRequests"] = "TooManyRequests";
    /** AzureCognitiveSearchThrottling */
    KnownErrorCode["AzureCognitiveSearchThrottling"] = "AzureCognitiveSearchThrottling";
    /** AzureCognitiveSearchIndexLimitReached */
    KnownErrorCode["AzureCognitiveSearchIndexLimitReached"] = "AzureCognitiveSearchIndexLimitReached";
    /** InternalServerError */
    KnownErrorCode["InternalServerError"] = "InternalServerError";
    /** ServiceUnavailable */
    KnownErrorCode["ServiceUnavailable"] = "ServiceUnavailable";
    /** Timeout */
    KnownErrorCode["Timeout"] = "Timeout";
    /** QuotaExceeded */
    KnownErrorCode["QuotaExceeded"] = "QuotaExceeded";
    /** Conflict */
    KnownErrorCode["Conflict"] = "Conflict";
    /** Warning */
    KnownErrorCode["Warning"] = "Warning";
})(KnownErrorCode = exports.KnownErrorCode || (exports.KnownErrorCode = {}));
/** Known values of {@link InnerErrorCode} that the service accepts. */
var KnownInnerErrorCode;
(function (KnownInnerErrorCode) {
    /** InvalidRequest */
    KnownInnerErrorCode["InvalidRequest"] = "InvalidRequest";
    /** InvalidParameterValue */
    KnownInnerErrorCode["InvalidParameterValue"] = "InvalidParameterValue";
    /** KnowledgeBaseNotFound */
    KnownInnerErrorCode["KnowledgeBaseNotFound"] = "KnowledgeBaseNotFound";
    /** AzureCognitiveSearchNotFound */
    KnownInnerErrorCode["AzureCognitiveSearchNotFound"] = "AzureCognitiveSearchNotFound";
    /** AzureCognitiveSearchThrottling */
    KnownInnerErrorCode["AzureCognitiveSearchThrottling"] = "AzureCognitiveSearchThrottling";
    /** ExtractionFailure */
    KnownInnerErrorCode["ExtractionFailure"] = "ExtractionFailure";
    /** InvalidRequestBodyFormat */
    KnownInnerErrorCode["InvalidRequestBodyFormat"] = "InvalidRequestBodyFormat";
    /** EmptyRequest */
    KnownInnerErrorCode["EmptyRequest"] = "EmptyRequest";
    /** MissingInputDocuments */
    KnownInnerErrorCode["MissingInputDocuments"] = "MissingInputDocuments";
    /** InvalidDocument */
    KnownInnerErrorCode["InvalidDocument"] = "InvalidDocument";
    /** ModelVersionIncorrect */
    KnownInnerErrorCode["ModelVersionIncorrect"] = "ModelVersionIncorrect";
    /** InvalidDocumentBatch */
    KnownInnerErrorCode["InvalidDocumentBatch"] = "InvalidDocumentBatch";
    /** UnsupportedLanguageCode */
    KnownInnerErrorCode["UnsupportedLanguageCode"] = "UnsupportedLanguageCode";
    /** InvalidCountryHint */
    KnownInnerErrorCode["InvalidCountryHint"] = "InvalidCountryHint";
})(KnownInnerErrorCode = exports.KnownInnerErrorCode || (exports.KnownInnerErrorCode = {}));
/** Known values of {@link InputModality} that the service accepts. */
var KnownInputModality;
(function (KnownInputModality) {
    /** Transcript */
    KnownInputModality["Transcript"] = "transcript";
    /** Text */
    KnownInputModality["Text"] = "text";
})(KnownInputModality = exports.KnownInputModality || (exports.KnownInputModality = {}));
/** Known values of {@link ConversationDomain} that the service accepts. */
var KnownConversationDomain;
(function (KnownConversationDomain) {
    /** Finance */
    KnownConversationDomain["Finance"] = "finance";
    /** Healthcare */
    KnownConversationDomain["Healthcare"] = "healthcare";
    /** Generic */
    KnownConversationDomain["Generic"] = "generic";
})(KnownConversationDomain = exports.KnownConversationDomain || (exports.KnownConversationDomain = {}));
/** Known values of {@link AnalyzeConversationLROTaskKind} that the service accepts. */
var KnownAnalyzeConversationLROTaskKind;
(function (KnownAnalyzeConversationLROTaskKind) {
    /** ConversationalPIITask */
    KnownAnalyzeConversationLROTaskKind["ConversationalPIITask"] = "ConversationalPIITask";
    /** ConversationalSummarizationTask */
    KnownAnalyzeConversationLROTaskKind["ConversationalSummarizationTask"] = "ConversationalSummarizationTask";
})(KnownAnalyzeConversationLROTaskKind = exports.KnownAnalyzeConversationLROTaskKind || (exports.KnownAnalyzeConversationLROTaskKind = {}));
/** Known values of {@link JobState} that the service accepts. */
var KnownJobState;
(function (KnownJobState) {
    /** NotStarted */
    KnownJobState["NotStarted"] = "notStarted";
    /** Running */
    KnownJobState["Running"] = "running";
    /** Succeeded */
    KnownJobState["Succeeded"] = "succeeded";
    /** PartiallyCompleted */
    KnownJobState["PartiallyCompleted"] = "partiallyCompleted";
    /** Failed */
    KnownJobState["Failed"] = "failed";
    /** Cancelled */
    KnownJobState["Cancelled"] = "cancelled";
    /** Cancelling */
    KnownJobState["Cancelling"] = "cancelling";
})(KnownJobState = exports.KnownJobState || (exports.KnownJobState = {}));
/** Known values of {@link AnalyzeConversationResultsKind} that the service accepts. */
var KnownAnalyzeConversationResultsKind;
(function (KnownAnalyzeConversationResultsKind) {
    /** ConversationalPIIResults */
    KnownAnalyzeConversationResultsKind["ConversationalPIIResults"] = "ConversationalPIIResults";
    /** ConversationalSummarizationResults */
    KnownAnalyzeConversationResultsKind["ConversationalSummarizationResults"] = "ConversationalSummarizationResults";
})(KnownAnalyzeConversationResultsKind = exports.KnownAnalyzeConversationResultsKind || (exports.KnownAnalyzeConversationResultsKind = {}));
/** Known values of {@link TaskState} that the service accepts. */
var KnownTaskState;
(function (KnownTaskState) {
    /** NotStarted */
    KnownTaskState["NotStarted"] = "notStarted";
    /** Running */
    KnownTaskState["Running"] = "running";
    /** Succeeded */
    KnownTaskState["Succeeded"] = "succeeded";
    /** Failed */
    KnownTaskState["Failed"] = "failed";
    /** Cancelled */
    KnownTaskState["Cancelled"] = "cancelled";
    /** Cancelling */
    KnownTaskState["Cancelling"] = "cancelling";
})(KnownTaskState = exports.KnownTaskState || (exports.KnownTaskState = {}));
/** Known values of {@link Role} that the service accepts. */
var KnownRole;
(function (KnownRole) {
    /** Agent */
    KnownRole["Agent"] = "agent";
    /** Customer */
    KnownRole["Customer"] = "customer";
    /** Generic */
    KnownRole["Generic"] = "generic";
})(KnownRole = exports.KnownRole || (exports.KnownRole = {}));
/** Known values of {@link StringIndexType} that the service accepts. */
var KnownStringIndexType;
(function (KnownStringIndexType) {
    /** Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo. */
    KnownStringIndexType["TextElementsV8"] = "TextElements_v8";
    /** Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python. */
    KnownStringIndexType["UnicodeCodePoint"] = "UnicodeCodePoint";
    /** Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript. */
    KnownStringIndexType["Utf16CodeUnit"] = "Utf16CodeUnit";
})(KnownStringIndexType = exports.KnownStringIndexType || (exports.KnownStringIndexType = {}));
/** Known values of {@link TargetProjectKind} that the service accepts. */
var KnownTargetProjectKind;
(function (KnownTargetProjectKind) {
    /** Luis */
    KnownTargetProjectKind["Luis"] = "Luis";
    /** Conversation */
    KnownTargetProjectKind["Conversation"] = "Conversation";
    /** QuestionAnswering */
    KnownTargetProjectKind["QuestionAnswering"] = "QuestionAnswering";
    /** NonLinked */
    KnownTargetProjectKind["NonLinked"] = "NonLinked";
})(KnownTargetProjectKind = exports.KnownTargetProjectKind || (exports.KnownTargetProjectKind = {}));
/** Known values of {@link ProjectKind} that the service accepts. */
var KnownProjectKind;
(function (KnownProjectKind) {
    /** Conversation */
    KnownProjectKind["Conversation"] = "Conversation";
    /** Orchestration */
    KnownProjectKind["Orchestration"] = "Orchestration";
})(KnownProjectKind = exports.KnownProjectKind || (exports.KnownProjectKind = {}));
/** Known values of {@link ResolutionKind} that the service accepts. */
var KnownResolutionKind;
(function (KnownResolutionKind) {
    /** Boolean */
    KnownResolutionKind["Boolean"] = "Boolean";
    /** DateTime */
    KnownResolutionKind["DateTime"] = "DateTime";
    /** Number */
    KnownResolutionKind["Number"] = "Number";
    /** Ordinal */
    KnownResolutionKind["Ordinal"] = "Ordinal";
    /** Speed */
    KnownResolutionKind["Speed"] = "Speed";
    /** Weight */
    KnownResolutionKind["Weight"] = "Weight";
    /** Length */
    KnownResolutionKind["Length"] = "Length";
    /** Volume */
    KnownResolutionKind["Volume"] = "Volume";
    /** Area */
    KnownResolutionKind["Area"] = "Area";
    /** Age */
    KnownResolutionKind["Age"] = "Age";
    /** Information */
    KnownResolutionKind["Information"] = "Information";
    /** Temperature */
    KnownResolutionKind["Temperature"] = "Temperature";
    /** Currency */
    KnownResolutionKind["Currency"] = "Currency";
    /** NumericRange */
    KnownResolutionKind["NumericRange"] = "NumericRange";
    /** TemporalSpan */
    KnownResolutionKind["TemporalSpan"] = "TemporalSpan";
})(KnownResolutionKind = exports.KnownResolutionKind || (exports.KnownResolutionKind = {}));
/** Known values of {@link ExtraInformationKind} that the service accepts. */
var KnownExtraInformationKind;
(function (KnownExtraInformationKind) {
    /** EntitySubtype */
    KnownExtraInformationKind["EntitySubtype"] = "EntitySubtype";
    /** ListKey */
    KnownExtraInformationKind["ListKey"] = "ListKey";
})(KnownExtraInformationKind = exports.KnownExtraInformationKind || (exports.KnownExtraInformationKind = {}));
/** Known values of {@link RankerKind} that the service accepts. */
var KnownRankerKind;
(function (KnownRankerKind) {
    /** Question only ranker. */
    KnownRankerKind["QuestionOnly"] = "QuestionOnly";
    /** Default ranker. */
    KnownRankerKind["Default"] = "Default";
})(KnownRankerKind = exports.KnownRankerKind || (exports.KnownRankerKind = {}));
/** Known values of {@link LogicalOperationKind} that the service accepts. */
var KnownLogicalOperationKind;
(function (KnownLogicalOperationKind) {
    /** AND */
    KnownLogicalOperationKind["AND"] = "AND";
    /** OR */
    KnownLogicalOperationKind["OR"] = "OR";
})(KnownLogicalOperationKind = exports.KnownLogicalOperationKind || (exports.KnownLogicalOperationKind = {}));
/** Known values of {@link AgeUnit} that the service accepts. */
var KnownAgeUnit;
(function (KnownAgeUnit) {
    /** Unspecified */
    KnownAgeUnit["Unspecified"] = "Unspecified";
    /** Year */
    KnownAgeUnit["Year"] = "Year";
    /** Month */
    KnownAgeUnit["Month"] = "Month";
    /** Week */
    KnownAgeUnit["Week"] = "Week";
    /** Day */
    KnownAgeUnit["Day"] = "Day";
})(KnownAgeUnit = exports.KnownAgeUnit || (exports.KnownAgeUnit = {}));
/** Known values of {@link VolumeUnit} that the service accepts. */
var KnownVolumeUnit;
(function (KnownVolumeUnit) {
    /** Unspecified */
    KnownVolumeUnit["Unspecified"] = "Unspecified";
    /** CubicMeter */
    KnownVolumeUnit["CubicMeter"] = "CubicMeter";
    /** CubicCentimeter */
    KnownVolumeUnit["CubicCentimeter"] = "CubicCentimeter";
    /** CubicMillimeter */
    KnownVolumeUnit["CubicMillimeter"] = "CubicMillimeter";
    /** Hectoliter */
    KnownVolumeUnit["Hectoliter"] = "Hectoliter";
    /** Decaliter */
    KnownVolumeUnit["Decaliter"] = "Decaliter";
    /** Liter */
    KnownVolumeUnit["Liter"] = "Liter";
    /** Centiliter */
    KnownVolumeUnit["Centiliter"] = "Centiliter";
    /** Milliliter */
    KnownVolumeUnit["Milliliter"] = "Milliliter";
    /** CubicYard */
    KnownVolumeUnit["CubicYard"] = "CubicYard";
    /** CubicInch */
    KnownVolumeUnit["CubicInch"] = "CubicInch";
    /** CubicFoot */
    KnownVolumeUnit["CubicFoot"] = "CubicFoot";
    /** CubicMile */
    KnownVolumeUnit["CubicMile"] = "CubicMile";
    /** FluidOunce */
    KnownVolumeUnit["FluidOunce"] = "FluidOunce";
    /** Teaspoon */
    KnownVolumeUnit["Teaspoon"] = "Teaspoon";
    /** Tablespoon */
    KnownVolumeUnit["Tablespoon"] = "Tablespoon";
    /** Pint */
    KnownVolumeUnit["Pint"] = "Pint";
    /** Quart */
    KnownVolumeUnit["Quart"] = "Quart";
    /** Cup */
    KnownVolumeUnit["Cup"] = "Cup";
    /** Gill */
    KnownVolumeUnit["Gill"] = "Gill";
    /** Pinch */
    KnownVolumeUnit["Pinch"] = "Pinch";
    /** FluidDram */
    KnownVolumeUnit["FluidDram"] = "FluidDram";
    /** Barrel */
    KnownVolumeUnit["Barrel"] = "Barrel";
    /** Minim */
    KnownVolumeUnit["Minim"] = "Minim";
    /** Cord */
    KnownVolumeUnit["Cord"] = "Cord";
    /** Peck */
    KnownVolumeUnit["Peck"] = "Peck";
    /** Bushel */
    KnownVolumeUnit["Bushel"] = "Bushel";
    /** Hogshead */
    KnownVolumeUnit["Hogshead"] = "Hogshead";
})(KnownVolumeUnit = exports.KnownVolumeUnit || (exports.KnownVolumeUnit = {}));
/** Known values of {@link SpeedUnit} that the service accepts. */
var KnownSpeedUnit;
(function (KnownSpeedUnit) {
    /** Unspecified */
    KnownSpeedUnit["Unspecified"] = "Unspecified";
    /** MetersPerSecond */
    KnownSpeedUnit["MetersPerSecond"] = "MetersPerSecond";
    /** KilometersPerHour */
    KnownSpeedUnit["KilometersPerHour"] = "KilometersPerHour";
    /** KilometersPerMinute */
    KnownSpeedUnit["KilometersPerMinute"] = "KilometersPerMinute";
    /** KilometersPerSecond */
    KnownSpeedUnit["KilometersPerSecond"] = "KilometersPerSecond";
    /** MilesPerHour */
    KnownSpeedUnit["MilesPerHour"] = "MilesPerHour";
    /** Knot */
    KnownSpeedUnit["Knot"] = "Knot";
    /** FootPerSecond */
    KnownSpeedUnit["FootPerSecond"] = "FootPerSecond";
    /** FootPerMinute */
    KnownSpeedUnit["FootPerMinute"] = "FootPerMinute";
    /** YardsPerMinute */
    KnownSpeedUnit["YardsPerMinute"] = "YardsPerMinute";
    /** YardsPerSecond */
    KnownSpeedUnit["YardsPerSecond"] = "YardsPerSecond";
    /** MetersPerMillisecond */
    KnownSpeedUnit["MetersPerMillisecond"] = "MetersPerMillisecond";
    /** CentimetersPerMillisecond */
    KnownSpeedUnit["CentimetersPerMillisecond"] = "CentimetersPerMillisecond";
    /** KilometersPerMillisecond */
    KnownSpeedUnit["KilometersPerMillisecond"] = "KilometersPerMillisecond";
})(KnownSpeedUnit = exports.KnownSpeedUnit || (exports.KnownSpeedUnit = {}));
/** Known values of {@link AreaUnit} that the service accepts. */
var KnownAreaUnit;
(function (KnownAreaUnit) {
    /** Unspecified */
    KnownAreaUnit["Unspecified"] = "Unspecified";
    /** SquareKilometer */
    KnownAreaUnit["SquareKilometer"] = "SquareKilometer";
    /** SquareHectometer */
    KnownAreaUnit["SquareHectometer"] = "SquareHectometer";
    /** SquareDecameter */
    KnownAreaUnit["SquareDecameter"] = "SquareDecameter";
    /** SquareDecimeter */
    KnownAreaUnit["SquareDecimeter"] = "SquareDecimeter";
    /** SquareMeter */
    KnownAreaUnit["SquareMeter"] = "SquareMeter";
    /** SquareCentimeter */
    KnownAreaUnit["SquareCentimeter"] = "SquareCentimeter";
    /** SquareMillimeter */
    KnownAreaUnit["SquareMillimeter"] = "SquareMillimeter";
    /** SquareInch */
    KnownAreaUnit["SquareInch"] = "SquareInch";
    /** SquareFoot */
    KnownAreaUnit["SquareFoot"] = "SquareFoot";
    /** SquareMile */
    KnownAreaUnit["SquareMile"] = "SquareMile";
    /** SquareYard */
    KnownAreaUnit["SquareYard"] = "SquareYard";
    /** Acre */
    KnownAreaUnit["Acre"] = "Acre";
})(KnownAreaUnit = exports.KnownAreaUnit || (exports.KnownAreaUnit = {}));
/** Known values of {@link LengthUnit} that the service accepts. */
var KnownLengthUnit;
(function (KnownLengthUnit) {
    /** Unspecified */
    KnownLengthUnit["Unspecified"] = "Unspecified";
    /** Kilometer */
    KnownLengthUnit["Kilometer"] = "Kilometer";
    /** Hectometer */
    KnownLengthUnit["Hectometer"] = "Hectometer";
    /** Decameter */
    KnownLengthUnit["Decameter"] = "Decameter";
    /** Meter */
    KnownLengthUnit["Meter"] = "Meter";
    /** Decimeter */
    KnownLengthUnit["Decimeter"] = "Decimeter";
    /** Centimeter */
    KnownLengthUnit["Centimeter"] = "Centimeter";
    /** Millimeter */
    KnownLengthUnit["Millimeter"] = "Millimeter";
    /** Micrometer */
    KnownLengthUnit["Micrometer"] = "Micrometer";
    /** Nanometer */
    KnownLengthUnit["Nanometer"] = "Nanometer";
    /** Picometer */
    KnownLengthUnit["Picometer"] = "Picometer";
    /** Mile */
    KnownLengthUnit["Mile"] = "Mile";
    /** Yard */
    KnownLengthUnit["Yard"] = "Yard";
    /** Inch */
    KnownLengthUnit["Inch"] = "Inch";
    /** Foot */
    KnownLengthUnit["Foot"] = "Foot";
    /** LightYear */
    KnownLengthUnit["LightYear"] = "LightYear";
    /** Pt */
    KnownLengthUnit["Pt"] = "Pt";
})(KnownLengthUnit = exports.KnownLengthUnit || (exports.KnownLengthUnit = {}));
/** Known values of {@link InformationUnit} that the service accepts. */
var KnownInformationUnit;
(function (KnownInformationUnit) {
    /** Unspecified */
    KnownInformationUnit["Unspecified"] = "Unspecified";
    /** Bit */
    KnownInformationUnit["Bit"] = "Bit";
    /** Kilobit */
    KnownInformationUnit["Kilobit"] = "Kilobit";
    /** Megabit */
    KnownInformationUnit["Megabit"] = "Megabit";
    /** Gigabit */
    KnownInformationUnit["Gigabit"] = "Gigabit";
    /** Terabit */
    KnownInformationUnit["Terabit"] = "Terabit";
    /** Petabit */
    KnownInformationUnit["Petabit"] = "Petabit";
    /** Byte */
    KnownInformationUnit["Byte"] = "Byte";
    /** Kilobyte */
    KnownInformationUnit["Kilobyte"] = "Kilobyte";
    /** Megabyte */
    KnownInformationUnit["Megabyte"] = "Megabyte";
    /** Gigabyte */
    KnownInformationUnit["Gigabyte"] = "Gigabyte";
    /** Terabyte */
    KnownInformationUnit["Terabyte"] = "Terabyte";
    /** Petabyte */
    KnownInformationUnit["Petabyte"] = "Petabyte";
})(KnownInformationUnit = exports.KnownInformationUnit || (exports.KnownInformationUnit = {}));
/** Known values of {@link TemperatureUnit} that the service accepts. */
var KnownTemperatureUnit;
(function (KnownTemperatureUnit) {
    /** Unspecified */
    KnownTemperatureUnit["Unspecified"] = "Unspecified";
    /** Fahrenheit */
    KnownTemperatureUnit["Fahrenheit"] = "Fahrenheit";
    /** Kelvin */
    KnownTemperatureUnit["Kelvin"] = "Kelvin";
    /** Rankine */
    KnownTemperatureUnit["Rankine"] = "Rankine";
    /** Celsius */
    KnownTemperatureUnit["Celsius"] = "Celsius";
})(KnownTemperatureUnit = exports.KnownTemperatureUnit || (exports.KnownTemperatureUnit = {}));
/** Known values of {@link WeightUnit} that the service accepts. */
var KnownWeightUnit;
(function (KnownWeightUnit) {
    /** Unspecified */
    KnownWeightUnit["Unspecified"] = "Unspecified";
    /** Kilogram */
    KnownWeightUnit["Kilogram"] = "Kilogram";
    /** Gram */
    KnownWeightUnit["Gram"] = "Gram";
    /** Milligram */
    KnownWeightUnit["Milligram"] = "Milligram";
    /** Gallon */
    KnownWeightUnit["Gallon"] = "Gallon";
    /** MetricTon */
    KnownWeightUnit["MetricTon"] = "MetricTon";
    /** Ton */
    KnownWeightUnit["Ton"] = "Ton";
    /** Pound */
    KnownWeightUnit["Pound"] = "Pound";
    /** Ounce */
    KnownWeightUnit["Ounce"] = "Ounce";
    /** Grain */
    KnownWeightUnit["Grain"] = "Grain";
    /** PennyWeight */
    KnownWeightUnit["PennyWeight"] = "PennyWeight";
    /** LongTonBritish */
    KnownWeightUnit["LongTonBritish"] = "LongTonBritish";
    /** ShortTonUS */
    KnownWeightUnit["ShortTonUS"] = "ShortTonUS";
    /** ShortHundredWeightUS */
    KnownWeightUnit["ShortHundredWeightUS"] = "ShortHundredWeightUS";
    /** Stone */
    KnownWeightUnit["Stone"] = "Stone";
    /** Dram */
    KnownWeightUnit["Dram"] = "Dram";
})(KnownWeightUnit = exports.KnownWeightUnit || (exports.KnownWeightUnit = {}));
/** Known values of {@link DateTimeSubKind} that the service accepts. */
var KnownDateTimeSubKind;
(function (KnownDateTimeSubKind) {
    /** Time */
    KnownDateTimeSubKind["Time"] = "Time";
    /** Date */
    KnownDateTimeSubKind["Date"] = "Date";
    /** DateTime */
    KnownDateTimeSubKind["DateTime"] = "DateTime";
    /** Duration */
    KnownDateTimeSubKind["Duration"] = "Duration";
    /** Set */
    KnownDateTimeSubKind["Set"] = "Set";
})(KnownDateTimeSubKind = exports.KnownDateTimeSubKind || (exports.KnownDateTimeSubKind = {}));
/** Known values of {@link TemporalModifier} that the service accepts. */
var KnownTemporalModifier;
(function (KnownTemporalModifier) {
    /** AfterApprox */
    KnownTemporalModifier["AfterApprox"] = "AfterApprox";
    /** Before */
    KnownTemporalModifier["Before"] = "Before";
    /** BeforeStart */
    KnownTemporalModifier["BeforeStart"] = "BeforeStart";
    /** Approx */
    KnownTemporalModifier["Approx"] = "Approx";
    /** ReferenceUndefined */
    KnownTemporalModifier["ReferenceUndefined"] = "ReferenceUndefined";
    /** SinceEnd */
    KnownTemporalModifier["SinceEnd"] = "SinceEnd";
    /** AfterMid */
    KnownTemporalModifier["AfterMid"] = "AfterMid";
    /** Start */
    KnownTemporalModifier["Start"] = "Start";
    /** After */
    KnownTemporalModifier["After"] = "After";
    /** BeforeEnd */
    KnownTemporalModifier["BeforeEnd"] = "BeforeEnd";
    /** Until */
    KnownTemporalModifier["Until"] = "Until";
    /** End */
    KnownTemporalModifier["End"] = "End";
    /** Less */
    KnownTemporalModifier["Less"] = "Less";
    /** Since */
    KnownTemporalModifier["Since"] = "Since";
    /** AfterStart */
    KnownTemporalModifier["AfterStart"] = "AfterStart";
    /** BeforeApprox */
    KnownTemporalModifier["BeforeApprox"] = "BeforeApprox";
    /** Mid */
    KnownTemporalModifier["Mid"] = "Mid";
    /** More */
    KnownTemporalModifier["More"] = "More";
})(KnownTemporalModifier = exports.KnownTemporalModifier || (exports.KnownTemporalModifier = {}));
/** Known values of {@link NumberKind} that the service accepts. */
var KnownNumberKind;
(function (KnownNumberKind) {
    /** Integer */
    KnownNumberKind["Integer"] = "Integer";
    /** Decimal */
    KnownNumberKind["Decimal"] = "Decimal";
    /** Power */
    KnownNumberKind["Power"] = "Power";
    /** Fraction */
    KnownNumberKind["Fraction"] = "Fraction";
    /** Percent */
    KnownNumberKind["Percent"] = "Percent";
    /** Unspecified */
    KnownNumberKind["Unspecified"] = "Unspecified";
})(KnownNumberKind = exports.KnownNumberKind || (exports.KnownNumberKind = {}));
/** Known values of {@link RelativeTo} that the service accepts. */
var KnownRelativeTo;
(function (KnownRelativeTo) {
    /** Current */
    KnownRelativeTo["Current"] = "Current";
    /** End */
    KnownRelativeTo["End"] = "End";
    /** Start */
    KnownRelativeTo["Start"] = "Start";
})(KnownRelativeTo = exports.KnownRelativeTo || (exports.KnownRelativeTo = {}));
/** Known values of {@link RangeKind} that the service accepts. */
var KnownRangeKind;
(function (KnownRangeKind) {
    /** Number */
    KnownRangeKind["Number"] = "Number";
    /** Speed */
    KnownRangeKind["Speed"] = "Speed";
    /** Weight */
    KnownRangeKind["Weight"] = "Weight";
    /** Length */
    KnownRangeKind["Length"] = "Length";
    /** Volume */
    KnownRangeKind["Volume"] = "Volume";
    /** Area */
    KnownRangeKind["Area"] = "Area";
    /** Age */
    KnownRangeKind["Age"] = "Age";
    /** Information */
    KnownRangeKind["Information"] = "Information";
    /** Temperature */
    KnownRangeKind["Temperature"] = "Temperature";
    /** Currency */
    KnownRangeKind["Currency"] = "Currency";
})(KnownRangeKind = exports.KnownRangeKind || (exports.KnownRangeKind = {}));
/** Known values of {@link ConversationPIICategory} that the service accepts. */
var KnownConversationPIICategory;
(function (KnownConversationPIICategory) {
    /** Address */
    KnownConversationPIICategory["Address"] = "Address";
    /** CreditCard */
    KnownConversationPIICategory["CreditCard"] = "CreditCard";
    /** Email */
    KnownConversationPIICategory["Email"] = "Email";
    /** Name */
    KnownConversationPIICategory["Name"] = "Name";
    /** NumericIdentifier */
    KnownConversationPIICategory["NumericIdentifier"] = "NumericIdentifier";
    /** PhoneNumber */
    KnownConversationPIICategory["PhoneNumber"] = "PhoneNumber";
    /** All */
    KnownConversationPIICategory["All"] = "All";
    /** Default */
    KnownConversationPIICategory["Default"] = "Default";
})(KnownConversationPIICategory = exports.KnownConversationPIICategory || (exports.KnownConversationPIICategory = {}));
/** Known values of {@link TranscriptContentType} that the service accepts. */
var KnownTranscriptContentType;
(function (KnownTranscriptContentType) {
    /** Lexical */
    KnownTranscriptContentType["Lexical"] = "lexical";
    /** Itn */
    KnownTranscriptContentType["Itn"] = "itn";
    /** MaskedItn */
    KnownTranscriptContentType["MaskedItn"] = "maskedItn";
    /** Text */
    KnownTranscriptContentType["Text"] = "text";
})(KnownTranscriptContentType = exports.KnownTranscriptContentType || (exports.KnownTranscriptContentType = {}));
/** Known values of {@link SummaryAspect} that the service accepts. */
var KnownSummaryAspect;
(function (KnownSummaryAspect) {
    /** Issue */
    KnownSummaryAspect["Issue"] = "issue";
    /** Resolution */
    KnownSummaryAspect["Resolution"] = "resolution";
})(KnownSummaryAspect = exports.KnownSummaryAspect || (exports.KnownSummaryAspect = {}));
