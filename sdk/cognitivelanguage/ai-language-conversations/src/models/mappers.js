"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.ConversationStatistics = exports.InputWarning = exports.ConversationResultBase = exports.ConversationPIIResult = exports.Entity = exports.AudioTiming = exports.RedactedTranscriptContent = exports.ConversationPIIItemResult = exports.TaskParameters = exports.AnswerSpan = exports.KnowledgeBaseAnswerPrompt = exports.KnowledgeBaseAnswerDialog = exports.KnowledgeBaseAnswer = exports.AnswersResult = exports.QuantityResolution = exports.ShortAnswerOptions = exports.MetadataRecord = exports.MetadataFilter = exports.QueryFilters = exports.KnowledgeBaseAnswerContext = exports.AnswersOptions = exports.ConversationCallingOptions = exports.LuisCallingOptions = exports.TargetIntentResult = exports.BaseExtraInformation = exports.BaseResolution = exports.ConversationEntity = exports.ConversationIntent = exports.ConversationResult = exports.BasePrediction = exports.AnalyzeConversationResult = exports.AnalysisParameters = exports.ConversationTaskParameters = exports.ConversationItemBase = exports.ConversationAnalysisOptions = exports.RequestStatistics = exports.AnalyzeConversationJobStatistics = exports.TaskStateAutoGenerated = exports.ConversationTasksStateTasks = exports.ConversationTasksState = exports.JobStateAutoGenerated = exports.TaskIdentifier = exports.Conversation = exports.MultiLanguageConversationAnalysisInput = exports.AnalyzeConversationJobsInput = exports.InnerErrorModel = exports.ErrorModel = exports.ErrorResponse = exports.AnalyzeConversationTaskResult = exports.AnalyzeConversationTask = void 0;
exports.AnalyzeConversationPIIResult = exports.AnalyzeConversationSummarizationTask = exports.AnalyzeConversationPIITask = exports.ConversationsSummaryResultSummariesItem = exports.SummaryResult = exports.ConversationPIIResults = exports.SummaryResultConversationsItem = exports.ConversationPIIResultsConversationsItem = exports.WordLevelTiming = exports.PreBuiltTaskParameters = exports.QuestionAnsweringTargetIntentResult = exports.LuisTargetIntentResult = exports.ConversationTargetIntentResult = exports.NoneLinkedTargetIntentResult = exports.ListKey = exports.EntitySubtype = exports.NumericRangeResolution = exports.TemporalSpanResolution = exports.OrdinalResolution = exports.NumberResolution = exports.DateTimeResolution = exports.BooleanResolution = exports.CurrencyResolution = exports.WeightResolution = exports.TemperatureResolution = exports.InformationResolution = exports.LengthResolution = exports.AreaResolution = exports.SpeedResolution = exports.VolumeResolution = exports.AgeResolution = exports.OrchestrationPrediction = exports.ConversationPrediction = exports.QuestionAnsweringParameters = exports.ConversationParameters = exports.LuisParameters = exports.TranscriptConversationItem = exports.TextConversationItem = exports.ConversationRequestStatistics = exports.AnalyzeConversationJobState = exports.AnalyzeConversationJobResult = exports.AnalyzeConversationLROTask = exports.TranscriptConversation = exports.TextConversation = exports.ConversationalTaskResult = exports.ConversationalTask = exports.SummaryResultItem = exports.ConversationsSummaryResult = exports.InputError = exports.PreBuiltResult = void 0;
exports.discriminators = exports.ConversationAnalysisClientConversationAnalysisHeaders = exports.ConversationAnalysisClientAnalyzeConversationExceptionHeaders = exports.ConversationSummarizationTaskParameters = exports.ConversationPIITaskParameters = exports.AnalyzeConversationSummarizationResult = void 0;
exports.AnalyzeConversationTask = {
    type: {
        name: "Composite",
        className: "AnalyzeConversationTask",
        uberParent: "AnalyzeConversationTask",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        modelProperties: {
            kind: {
                serializedName: "kind",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AnalyzeConversationTaskResult = {
    type: {
        name: "Composite",
        className: "AnalyzeConversationTaskResult",
        uberParent: "AnalyzeConversationTaskResult",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        modelProperties: {
            kind: {
                serializedName: "kind",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorModel"
                }
            }
        }
    }
};
exports.ErrorModel = {
    type: {
        name: "Composite",
        className: "ErrorModel",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                required: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorModel"
                        }
                    }
                }
            },
            innererror: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerErrorModel"
                }
            }
        }
    }
};
exports.InnerErrorModel = {
    type: {
        name: "Composite",
        className: "InnerErrorModel",
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                required: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            innererror: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerErrorModel"
                }
            }
        }
    }
};
exports.AnalyzeConversationJobsInput = {
    type: {
        name: "Composite",
        className: "AnalyzeConversationJobsInput",
        modelProperties: {
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            analysisInput: {
                serializedName: "analysisInput",
                type: {
                    name: "Composite",
                    className: "MultiLanguageConversationAnalysisInput"
                }
            },
            tasks: {
                serializedName: "tasks",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AnalyzeConversationLROTask"
                        }
                    }
                }
            }
        }
    }
};
exports.MultiLanguageConversationAnalysisInput = {
    type: {
        name: "Composite",
        className: "MultiLanguageConversationAnalysisInput",
        modelProperties: {
            conversations: {
                serializedName: "conversations",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Conversation"
                        }
                    }
                }
            }
        }
    }
};
exports.Conversation = {
    type: {
        name: "Composite",
        className: "Conversation",
        uberParent: "Conversation",
        polymorphicDiscriminator: {
            serializedName: "modality",
            clientName: "modality"
        },
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            language: {
                serializedName: "language",
                required: true,
                type: {
                    name: "String"
                }
            },
            modality: {
                serializedName: "modality",
                required: true,
                type: {
                    name: "String"
                }
            },
            domain: {
                serializedName: "domain",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TaskIdentifier = {
    type: {
        name: "Composite",
        className: "TaskIdentifier",
        modelProperties: {
            taskName: {
                serializedName: "taskName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.JobStateAutoGenerated = {
    type: {
        name: "Composite",
        className: "JobStateAutoGenerated",
        modelProperties: {
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            createdDateTime: {
                serializedName: "createdDateTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            expirationDateTime: {
                serializedName: "expirationDateTime",
                type: {
                    name: "DateTime"
                }
            },
            jobId: {
                serializedName: "jobId",
                required: true,
                type: {
                    name: "String"
                }
            },
            lastUpdatedDateTime: {
                serializedName: "lastUpdatedDateTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorModel"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConversationTasksState = {
    type: {
        name: "Composite",
        className: "ConversationTasksState",
        modelProperties: {
            tasks: {
                serializedName: "tasks",
                type: {
                    name: "Composite",
                    className: "ConversationTasksStateTasks"
                }
            }
        }
    }
};
exports.ConversationTasksStateTasks = {
    type: {
        name: "Composite",
        className: "ConversationTasksStateTasks",
        modelProperties: {
            completed: {
                serializedName: "completed",
                required: true,
                type: {
                    name: "Number"
                }
            },
            failed: {
                serializedName: "failed",
                required: true,
                type: {
                    name: "Number"
                }
            },
            inProgress: {
                serializedName: "inProgress",
                required: true,
                type: {
                    name: "Number"
                }
            },
            total: {
                serializedName: "total",
                required: true,
                type: {
                    name: "Number"
                }
            },
            items: {
                serializedName: "items",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AnalyzeConversationJobResult"
                        }
                    }
                }
            }
        }
    }
};
exports.TaskStateAutoGenerated = {
    type: {
        name: "Composite",
        className: "TaskStateAutoGenerated",
        modelProperties: {
            lastUpdateDateTime: {
                serializedName: "lastUpdateDateTime",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AnalyzeConversationJobStatistics = {
    type: {
        name: "Composite",
        className: "AnalyzeConversationJobStatistics",
        modelProperties: {
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "ConversationRequestStatistics"
                }
            }
        }
    }
};
exports.RequestStatistics = {
    type: {
        name: "Composite",
        className: "RequestStatistics",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: {
            transactionsCount: {
                serializedName: "transactionsCount",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ConversationAnalysisOptions = {
    type: {
        name: "Composite",
        className: "ConversationAnalysisOptions",
        modelProperties: {
            conversationItem: {
                serializedName: "conversationItem",
                type: {
                    name: "Composite",
                    className: "ConversationItemBase"
                }
            }
        }
    }
};
exports.ConversationItemBase = {
    type: {
        name: "Composite",
        className: "ConversationItemBase",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            participantId: {
                serializedName: "participantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            language: {
                serializedName: "language",
                type: {
                    name: "String"
                }
            },
            modality: {
                serializedName: "modality",
                type: {
                    name: "String"
                }
            },
            role: {
                serializedName: "role",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConversationTaskParameters = {
    type: {
        name: "Composite",
        className: "ConversationTaskParameters",
        modelProperties: {
            projectName: {
                serializedName: "projectName",
                required: true,
                type: {
                    name: "String"
                }
            },
            deploymentName: {
                serializedName: "deploymentName",
                required: true,
                type: {
                    name: "String"
                }
            },
            verbose: {
                serializedName: "verbose",
                type: {
                    name: "Boolean"
                }
            },
            isLoggingEnabled: {
                serializedName: "isLoggingEnabled",
                type: {
                    name: "Boolean"
                }
            },
            stringIndexType: {
                defaultValue: "TextElements_v8",
                serializedName: "stringIndexType",
                type: {
                    name: "String"
                }
            },
            directTarget: {
                serializedName: "directTarget",
                type: {
                    name: "String"
                }
            },
            targetProjectParameters: {
                serializedName: "targetProjectParameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "AnalysisParameters" }
                    }
                }
            }
        }
    }
};
exports.AnalysisParameters = {
    type: {
        name: "Composite",
        className: "AnalysisParameters",
        uberParent: "AnalysisParameters",
        polymorphicDiscriminator: {
            serializedName: "targetProjectKind",
            clientName: "targetProjectKind"
        },
        modelProperties: {
            targetProjectKind: {
                serializedName: "targetProjectKind",
                required: true,
                type: {
                    name: "String"
                }
            },
            apiVersion: {
                serializedName: "apiVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AnalyzeConversationResult = {
    type: {
        name: "Composite",
        className: "AnalyzeConversationResult",
        modelProperties: {
            query: {
                serializedName: "query",
                required: true,
                type: {
                    name: "String"
                }
            },
            detectedLanguage: {
                serializedName: "detectedLanguage",
                type: {
                    name: "String"
                }
            },
            prediction: {
                serializedName: "prediction",
                type: {
                    name: "Composite",
                    className: "BasePrediction"
                }
            }
        }
    }
};
exports.BasePrediction = {
    type: {
        name: "Composite",
        className: "BasePrediction",
        uberParent: "BasePrediction",
        polymorphicDiscriminator: {
            serializedName: "projectKind",
            clientName: "projectKind"
        },
        modelProperties: {
            projectKind: {
                serializedName: "projectKind",
                required: true,
                type: {
                    name: "String"
                }
            },
            topIntent: {
                serializedName: "topIntent",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConversationResult = {
    type: {
        name: "Composite",
        className: "ConversationResult",
        modelProperties: {
            query: {
                serializedName: "query",
                required: true,
                type: {
                    name: "String"
                }
            },
            detectedLanguage: {
                serializedName: "detectedLanguage",
                type: {
                    name: "String"
                }
            },
            prediction: {
                serializedName: "prediction",
                type: {
                    name: "Composite",
                    className: "ConversationPrediction"
                }
            }
        }
    }
};
exports.ConversationIntent = {
    type: {
        name: "Composite",
        className: "ConversationIntent",
        modelProperties: {
            category: {
                serializedName: "category",
                required: true,
                type: {
                    name: "String"
                }
            },
            confidence: {
                constraints: {
                    InclusiveMaximum: 1,
                    InclusiveMinimum: 0
                },
                serializedName: "confidenceScore",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ConversationEntity = {
    type: {
        name: "Composite",
        className: "ConversationEntity",
        modelProperties: {
            category: {
                serializedName: "category",
                required: true,
                type: {
                    name: "String"
                }
            },
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            },
            confidence: {
                serializedName: "confidenceScore",
                required: true,
                type: {
                    name: "Number"
                }
            },
            resolutions: {
                serializedName: "resolutions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BaseResolution"
                        }
                    }
                }
            },
            extraInformation: {
                serializedName: "extraInformation",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BaseExtraInformation"
                        }
                    }
                }
            }
        }
    }
};
exports.BaseResolution = {
    type: {
        name: "Composite",
        className: "BaseResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: {
            serializedName: "resolutionKind",
            clientName: "resolutionKind"
        },
        modelProperties: {
            resolutionKind: {
                serializedName: "resolutionKind",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.BaseExtraInformation = {
    type: {
        name: "Composite",
        className: "BaseExtraInformation",
        uberParent: "BaseExtraInformation",
        polymorphicDiscriminator: {
            serializedName: "extraInformationKind",
            clientName: "extraInformationKind"
        },
        modelProperties: {
            extraInformationKind: {
                serializedName: "extraInformationKind",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TargetIntentResult = {
    type: {
        name: "Composite",
        className: "TargetIntentResult",
        uberParent: "TargetIntentResult",
        polymorphicDiscriminator: {
            serializedName: "targetProjectKind",
            clientName: "targetProjectKind"
        },
        modelProperties: {
            targetProjectKind: {
                serializedName: "targetProjectKind",
                required: true,
                type: {
                    name: "String"
                }
            },
            apiVersion: {
                serializedName: "apiVersion",
                type: {
                    name: "String"
                }
            },
            confidence: {
                constraints: {
                    InclusiveMaximum: 1,
                    InclusiveMinimum: 0
                },
                serializedName: "confidenceScore",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.LuisCallingOptions = {
    type: {
        name: "Composite",
        className: "LuisCallingOptions",
        modelProperties: {
            verbose: {
                serializedName: "verbose",
                type: {
                    name: "Boolean"
                }
            },
            log: {
                serializedName: "log",
                type: {
                    name: "Boolean"
                }
            },
            showAllIntents: {
                serializedName: "show-all-intents",
                type: {
                    name: "Boolean"
                }
            },
            timezoneOffset: {
                serializedName: "timezoneOffset",
                type: {
                    name: "Number"
                }
            },
            spellCheck: {
                serializedName: "spellCheck",
                type: {
                    name: "Boolean"
                }
            },
            bingSpellCheckSubscriptionKey: {
                serializedName: "bing-spell-check-subscription-key",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConversationCallingOptions = {
    type: {
        name: "Composite",
        className: "ConversationCallingOptions",
        modelProperties: {
            language: {
                serializedName: "language",
                type: {
                    name: "String"
                }
            },
            verbose: {
                serializedName: "verbose",
                type: {
                    name: "Boolean"
                }
            },
            isLoggingEnabled: {
                serializedName: "isLoggingEnabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.AnswersOptions = {
    type: {
        name: "Composite",
        className: "AnswersOptions",
        modelProperties: {
            qnaId: {
                serializedName: "qnaId",
                type: {
                    name: "Number"
                }
            },
            question: {
                serializedName: "question",
                type: {
                    name: "String"
                }
            },
            top: {
                serializedName: "top",
                type: {
                    name: "Number"
                }
            },
            userId: {
                serializedName: "userId",
                type: {
                    name: "String"
                }
            },
            confidenceThreshold: {
                constraints: {
                    InclusiveMaximum: 1,
                    InclusiveMinimum: 0
                },
                serializedName: "confidenceScoreThreshold",
                type: {
                    name: "Number"
                }
            },
            answerContext: {
                serializedName: "context",
                type: {
                    name: "Composite",
                    className: "KnowledgeBaseAnswerContext"
                }
            },
            rankerKind: {
                serializedName: "rankerType",
                type: {
                    name: "String"
                }
            },
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "QueryFilters"
                }
            },
            shortAnswerOptions: {
                serializedName: "answerSpanRequest",
                type: {
                    name: "Composite",
                    className: "ShortAnswerOptions"
                }
            },
            includeUnstructuredSources: {
                serializedName: "includeUnstructuredSources",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.KnowledgeBaseAnswerContext = {
    type: {
        name: "Composite",
        className: "KnowledgeBaseAnswerContext",
        modelProperties: {
            previousQnaId: {
                serializedName: "previousQnaId",
                required: true,
                type: {
                    name: "Number"
                }
            },
            previousQuestion: {
                serializedName: "previousUserQuery",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.QueryFilters = {
    type: {
        name: "Composite",
        className: "QueryFilters",
        modelProperties: {
            metadataFilter: {
                serializedName: "metadataFilter",
                type: {
                    name: "Composite",
                    className: "MetadataFilter"
                }
            },
            sourceFilter: {
                serializedName: "sourceFilter",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            logicalOperation: {
                serializedName: "logicalOperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.MetadataFilter = {
    type: {
        name: "Composite",
        className: "MetadataFilter",
        modelProperties: {
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetadataRecord"
                        }
                    }
                }
            },
            logicalOperation: {
                serializedName: "logicalOperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.MetadataRecord = {
    type: {
        name: "Composite",
        className: "MetadataRecord",
        modelProperties: {
            key: {
                serializedName: "key",
                required: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ShortAnswerOptions = {
    type: {
        name: "Composite",
        className: "ShortAnswerOptions",
        modelProperties: {
            enable: {
                defaultValue: true,
                isConstant: true,
                serializedName: "enable",
                type: {
                    name: "Boolean"
                }
            },
            confidenceThreshold: {
                constraints: {
                    InclusiveMaximum: 1,
                    InclusiveMinimum: 0
                },
                serializedName: "confidenceScoreThreshold",
                type: {
                    name: "Number"
                }
            },
            top: {
                constraints: {
                    InclusiveMaximum: 10,
                    InclusiveMinimum: 1
                },
                serializedName: "topAnswersWithSpan",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.QuantityResolution = {
    type: {
        name: "Composite",
        className: "QuantityResolution",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.AnswersResult = {
    type: {
        name: "Composite",
        className: "AnswersResult",
        modelProperties: {
            answers: {
                serializedName: "answers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "KnowledgeBaseAnswer"
                        }
                    }
                }
            }
        }
    }
};
exports.KnowledgeBaseAnswer = {
    type: {
        name: "Composite",
        className: "KnowledgeBaseAnswer",
        modelProperties: {
            questions: {
                serializedName: "questions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            answer: {
                serializedName: "answer",
                type: {
                    name: "String"
                }
            },
            confidence: {
                constraints: {
                    InclusiveMaximum: 1,
                    InclusiveMinimum: 0
                },
                serializedName: "confidenceScore",
                type: {
                    name: "Number"
                }
            },
            qnaId: {
                serializedName: "id",
                type: {
                    name: "Number"
                }
            },
            source: {
                serializedName: "source",
                type: {
                    name: "String"
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            dialog: {
                serializedName: "dialog",
                type: {
                    name: "Composite",
                    className: "KnowledgeBaseAnswerDialog"
                }
            },
            shortAnswer: {
                serializedName: "answerSpan",
                type: {
                    name: "Composite",
                    className: "AnswerSpan"
                }
            }
        }
    }
};
exports.KnowledgeBaseAnswerDialog = {
    type: {
        name: "Composite",
        className: "KnowledgeBaseAnswerDialog",
        modelProperties: {
            isContextOnly: {
                serializedName: "isContextOnly",
                type: {
                    name: "Boolean"
                }
            },
            prompts: {
                constraints: {
                    MaxItems: 20
                },
                serializedName: "prompts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "KnowledgeBaseAnswerPrompt"
                        }
                    }
                }
            }
        }
    }
};
exports.KnowledgeBaseAnswerPrompt = {
    type: {
        name: "Composite",
        className: "KnowledgeBaseAnswerPrompt",
        modelProperties: {
            displayOrder: {
                serializedName: "displayOrder",
                type: {
                    name: "Number"
                }
            },
            qnaId: {
                serializedName: "qnaId",
                type: {
                    name: "Number"
                }
            },
            displayText: {
                constraints: {
                    MaxLength: 200
                },
                serializedName: "displayText",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AnswerSpan = {
    type: {
        name: "Composite",
        className: "AnswerSpan",
        modelProperties: {
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            confidence: {
                constraints: {
                    InclusiveMaximum: 1,
                    InclusiveMinimum: 0
                },
                serializedName: "confidenceScore",
                type: {
                    name: "Number"
                }
            },
            offset: {
                serializedName: "offset",
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.TaskParameters = {
    type: {
        name: "Composite",
        className: "TaskParameters",
        modelProperties: {
            loggingOptOut: {
                defaultValue: false,
                serializedName: "loggingOptOut",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.ConversationPIIItemResult = {
    type: {
        name: "Composite",
        className: "ConversationPIIItemResult",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            redactedContent: {
                serializedName: "redactedContent",
                type: {
                    name: "Composite",
                    className: "RedactedTranscriptContent"
                }
            },
            entities: {
                serializedName: "entities",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Entity"
                        }
                    }
                }
            }
        }
    }
};
exports.RedactedTranscriptContent = {
    type: {
        name: "Composite",
        className: "RedactedTranscriptContent",
        modelProperties: {
            itn: {
                serializedName: "itn",
                type: {
                    name: "String"
                }
            },
            maskedItn: {
                serializedName: "maskedItn",
                type: {
                    name: "String"
                }
            },
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            lexical: {
                serializedName: "lexical",
                type: {
                    name: "String"
                }
            },
            audioTimings: {
                serializedName: "audioTimings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AudioTiming"
                        }
                    }
                }
            }
        }
    }
};
exports.AudioTiming = {
    type: {
        name: "Composite",
        className: "AudioTiming",
        modelProperties: {
            offset: {
                serializedName: "offset",
                type: {
                    name: "Number"
                }
            },
            duration: {
                serializedName: "duration",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.Entity = {
    type: {
        name: "Composite",
        className: "Entity",
        modelProperties: {
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            },
            category: {
                serializedName: "category",
                required: true,
                type: {
                    name: "String"
                }
            },
            subcategory: {
                serializedName: "subcategory",
                type: {
                    name: "String"
                }
            },
            offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "Number"
                }
            },
            length: {
                serializedName: "length",
                required: true,
                type: {
                    name: "Number"
                }
            },
            confidenceScore: {
                serializedName: "confidenceScore",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ConversationPIIResult = {
    type: {
        name: "Composite",
        className: "ConversationPIIResult",
        modelProperties: {
            conversationItems: {
                serializedName: "conversationItems",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConversationPIIItemResult"
                        }
                    }
                }
            }
        }
    }
};
exports.ConversationResultBase = {
    type: {
        name: "Composite",
        className: "ConversationResultBase",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            warnings: {
                serializedName: "warnings",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InputWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "ConversationStatistics"
                }
            }
        }
    }
};
exports.InputWarning = {
    type: {
        name: "Composite",
        className: "InputWarning",
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                required: true,
                type: {
                    name: "String"
                }
            },
            targetRef: {
                serializedName: "targetRef",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConversationStatistics = {
    type: {
        name: "Composite",
        className: "ConversationStatistics",
        modelProperties: {
            transactionsCount: {
                serializedName: "transactionsCount",
                required: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.PreBuiltResult = {
    type: {
        name: "Composite",
        className: "PreBuiltResult",
        modelProperties: {
            errors: {
                serializedName: "errors",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InputError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "RequestStatistics"
                }
            },
            modelVersion: {
                serializedName: "modelVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.InputError = {
    type: {
        name: "Composite",
        className: "InputError",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorModel"
                }
            }
        }
    }
};
exports.ConversationsSummaryResult = {
    type: {
        name: "Composite",
        className: "ConversationsSummaryResult",
        modelProperties: {
            summaries: {
                serializedName: "summaries",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConversationsSummaryResultSummariesItem"
                        }
                    }
                }
            }
        }
    }
};
exports.SummaryResultItem = {
    type: {
        name: "Composite",
        className: "SummaryResultItem",
        modelProperties: {
            aspect: {
                serializedName: "aspect",
                required: true,
                type: {
                    name: "String"
                }
            },
            text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConversationalTask = {
    serializedName: "Conversation",
    type: {
        name: "Composite",
        className: "ConversationalTask",
        uberParent: "AnalyzeConversationTask",
        polymorphicDiscriminator: exports.AnalyzeConversationTask.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalyzeConversationTask.type.modelProperties), { analysisInput: {
                serializedName: "analysisInput",
                type: {
                    name: "Composite",
                    className: "ConversationAnalysisOptions"
                }
            }, parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "ConversationTaskParameters"
                }
            } })
    }
};
exports.ConversationalTaskResult = {
    serializedName: "ConversationResult",
    type: {
        name: "Composite",
        className: "ConversationalTaskResult",
        uberParent: "AnalyzeConversationTaskResult",
        polymorphicDiscriminator: exports.AnalyzeConversationTaskResult.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalyzeConversationTaskResult.type.modelProperties), { result: {
                serializedName: "result",
                type: {
                    name: "Composite",
                    className: "AnalyzeConversationResult"
                }
            } })
    }
};
exports.TextConversation = {
    serializedName: "text",
    type: {
        name: "Composite",
        className: "TextConversation",
        uberParent: "Conversation",
        polymorphicDiscriminator: exports.Conversation.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.Conversation.type.modelProperties), { conversationItems: {
                serializedName: "conversationItems",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextConversationItem"
                        }
                    }
                }
            } })
    }
};
exports.TranscriptConversation = {
    serializedName: "transcript",
    type: {
        name: "Composite",
        className: "TranscriptConversation",
        uberParent: "Conversation",
        polymorphicDiscriminator: exports.Conversation.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.Conversation.type.modelProperties), { conversationItems: {
                serializedName: "conversationItems",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TranscriptConversationItem"
                        }
                    }
                }
            } })
    }
};
exports.AnalyzeConversationLROTask = {
    serializedName: "AnalyzeConversationLROTask",
    type: {
        name: "Composite",
        className: "AnalyzeConversationLROTask",
        uberParent: "TaskIdentifier",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        modelProperties: __assign(__assign({}, exports.TaskIdentifier.type.modelProperties), { kind: {
                serializedName: "kind",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.AnalyzeConversationJobResult = {
    serializedName: "AnalyzeConversationJobResult",
    type: {
        name: "Composite",
        className: "AnalyzeConversationJobResult",
        uberParent: "TaskStateAutoGenerated",
        polymorphicDiscriminator: {
            serializedName: "kind",
            clientName: "kind"
        },
        modelProperties: __assign(__assign(__assign({}, exports.TaskStateAutoGenerated.type.modelProperties), exports.TaskIdentifier.type.modelProperties), { kind: {
                serializedName: "kind",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.AnalyzeConversationJobState = {
    type: {
        name: "Composite",
        className: "AnalyzeConversationJobState",
        modelProperties: __assign(__assign(__assign({}, exports.JobStateAutoGenerated.type.modelProperties), exports.ConversationTasksState.type.modelProperties), exports.AnalyzeConversationJobStatistics.type.modelProperties)
    }
};
exports.ConversationRequestStatistics = {
    type: {
        name: "Composite",
        className: "ConversationRequestStatistics",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: __assign(__assign({}, exports.RequestStatistics.type.modelProperties), { conversationsCount: {
                serializedName: "conversationsCount",
                required: true,
                type: {
                    name: "Number"
                }
            }, validConversationsCount: {
                serializedName: "validConversationsCount",
                required: true,
                type: {
                    name: "Number"
                }
            }, erroneousConversationsCount: {
                serializedName: "erroneousConversationsCount",
                required: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
exports.TextConversationItem = {
    type: {
        name: "Composite",
        className: "TextConversationItem",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: __assign(__assign({}, exports.ConversationItemBase.type.modelProperties), { text: {
                serializedName: "text",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.TranscriptConversationItem = {
    type: {
        name: "Composite",
        className: "TranscriptConversationItem",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: __assign(__assign({}, exports.ConversationItemBase.type.modelProperties), { itn: {
                serializedName: "itn",
                type: {
                    name: "String"
                }
            }, maskedItn: {
                serializedName: "maskedItn",
                type: {
                    name: "String"
                }
            }, text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            }, lexical: {
                serializedName: "lexical",
                type: {
                    name: "String"
                }
            }, audioTimings: {
                serializedName: "audioTimings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WordLevelTiming"
                        }
                    }
                }
            } })
    }
};
exports.LuisParameters = {
    serializedName: "Luis",
    type: {
        name: "Composite",
        className: "LuisParameters",
        uberParent: "AnalysisParameters",
        additionalProperties: { type: { name: "Object" } },
        polymorphicDiscriminator: exports.AnalysisParameters.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalysisParameters.type.modelProperties), { query: {
                constraints: {
                    MaxLength: 500
                },
                serializedName: "query",
                type: {
                    name: "String"
                }
            }, callingOptions: {
                serializedName: "callingOptions",
                type: {
                    name: "Composite",
                    className: "LuisCallingOptions"
                }
            } })
    }
};
exports.ConversationParameters = {
    serializedName: "Conversation",
    type: {
        name: "Composite",
        className: "ConversationParameters",
        uberParent: "AnalysisParameters",
        polymorphicDiscriminator: exports.AnalysisParameters.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalysisParameters.type.modelProperties), { callingOptions: {
                serializedName: "callingOptions",
                type: {
                    name: "Composite",
                    className: "ConversationCallingOptions"
                }
            } })
    }
};
exports.QuestionAnsweringParameters = {
    serializedName: "QuestionAnswering",
    type: {
        name: "Composite",
        className: "QuestionAnsweringParameters",
        uberParent: "AnalysisParameters",
        polymorphicDiscriminator: exports.AnalysisParameters.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalysisParameters.type.modelProperties), { callingOptions: {
                serializedName: "callingOptions",
                type: {
                    name: "Composite",
                    className: "AnswersOptions"
                }
            } })
    }
};
exports.ConversationPrediction = {
    serializedName: "Conversation",
    type: {
        name: "Composite",
        className: "ConversationPrediction",
        uberParent: "BasePrediction",
        polymorphicDiscriminator: exports.BasePrediction.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BasePrediction.type.modelProperties), { intents: {
                serializedName: "intents",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConversationIntent"
                        }
                    }
                }
            }, entities: {
                serializedName: "entities",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConversationEntity"
                        }
                    }
                }
            } })
    }
};
exports.OrchestrationPrediction = {
    serializedName: "Orchestration",
    type: {
        name: "Composite",
        className: "OrchestrationPrediction",
        uberParent: "BasePrediction",
        polymorphicDiscriminator: exports.BasePrediction.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BasePrediction.type.modelProperties), { intents: {
                serializedName: "intents",
                required: true,
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "TargetIntentResult" }
                    }
                }
            } })
    }
};
exports.AgeResolution = {
    serializedName: "Age",
    type: {
        name: "Composite",
        className: "AgeResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.VolumeResolution = {
    serializedName: "Volume",
    type: {
        name: "Composite",
        className: "VolumeResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.SpeedResolution = {
    serializedName: "Speed",
    type: {
        name: "Composite",
        className: "SpeedResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.AreaResolution = {
    serializedName: "Area",
    type: {
        name: "Composite",
        className: "AreaResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.LengthResolution = {
    serializedName: "Length",
    type: {
        name: "Composite",
        className: "LengthResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.InformationResolution = {
    serializedName: "Information",
    type: {
        name: "Composite",
        className: "InformationResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.TemperatureResolution = {
    serializedName: "Temperature",
    type: {
        name: "Composite",
        className: "TemperatureResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.WeightResolution = {
    serializedName: "Weight",
    type: {
        name: "Composite",
        className: "WeightResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.CurrencyResolution = {
    serializedName: "Currency",
    type: {
        name: "Composite",
        className: "CurrencyResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign(__assign({}, exports.BaseResolution.type.modelProperties), exports.QuantityResolution.type.modelProperties), { iso4217: {
                serializedName: "ISO4217",
                type: {
                    name: "String"
                }
            }, unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.BooleanResolution = {
    serializedName: "Boolean",
    type: {
        name: "Composite",
        className: "BooleanResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BaseResolution.type.modelProperties), { value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
exports.DateTimeResolution = {
    serializedName: "DateTime",
    type: {
        name: "Composite",
        className: "DateTimeResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BaseResolution.type.modelProperties), { timex: {
                serializedName: "timex",
                required: true,
                type: {
                    name: "String"
                }
            }, dateTimeSubKind: {
                serializedName: "dateTimeSubKind",
                required: true,
                type: {
                    name: "String"
                }
            }, value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            }, modifier: {
                serializedName: "modifier",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.NumberResolution = {
    serializedName: "Number",
    type: {
        name: "Composite",
        className: "NumberResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BaseResolution.type.modelProperties), { numberKind: {
                serializedName: "numberKind",
                required: true,
                type: {
                    name: "String"
                }
            }, value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.OrdinalResolution = {
    serializedName: "Ordinal",
    type: {
        name: "Composite",
        className: "OrdinalResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BaseResolution.type.modelProperties), { offset: {
                serializedName: "offset",
                required: true,
                type: {
                    name: "String"
                }
            }, relativeTo: {
                serializedName: "relativeTo",
                required: true,
                type: {
                    name: "String"
                }
            }, value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
exports.TemporalSpanResolution = {
    serializedName: "TemporalSpan",
    type: {
        name: "Composite",
        className: "TemporalSpanResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BaseResolution.type.modelProperties), { begin: {
                serializedName: "begin",
                type: {
                    name: "String"
                }
            }, end: {
                serializedName: "end",
                type: {
                    name: "String"
                }
            }, duration: {
                serializedName: "duration",
                type: {
                    name: "String"
                }
            }, modifier: {
                serializedName: "modifier",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.NumericRangeResolution = {
    serializedName: "NumericRange",
    type: {
        name: "Composite",
        className: "NumericRangeResolution",
        uberParent: "BaseResolution",
        polymorphicDiscriminator: exports.BaseResolution.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BaseResolution.type.modelProperties), { rangeKind: {
                serializedName: "rangeKind",
                required: true,
                type: {
                    name: "String"
                }
            }, minimum: {
                serializedName: "minimum",
                required: true,
                type: {
                    name: "Number"
                }
            }, maximum: {
                serializedName: "maximum",
                required: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
exports.EntitySubtype = {
    serializedName: "EntitySubtype",
    type: {
        name: "Composite",
        className: "EntitySubtype",
        uberParent: "BaseExtraInformation",
        polymorphicDiscriminator: exports.BaseExtraInformation.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BaseExtraInformation.type.modelProperties), { value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.ListKey = {
    serializedName: "ListKey",
    type: {
        name: "Composite",
        className: "ListKey",
        uberParent: "BaseExtraInformation",
        polymorphicDiscriminator: exports.BaseExtraInformation.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.BaseExtraInformation.type.modelProperties), { key: {
                serializedName: "key",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.NoneLinkedTargetIntentResult = {
    serializedName: "NonLinked",
    type: {
        name: "Composite",
        className: "NoneLinkedTargetIntentResult",
        uberParent: "TargetIntentResult",
        polymorphicDiscriminator: exports.TargetIntentResult.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.TargetIntentResult.type.modelProperties), { result: {
                serializedName: "result",
                type: {
                    name: "Composite",
                    className: "ConversationResult"
                }
            } })
    }
};
exports.ConversationTargetIntentResult = {
    serializedName: "Conversation",
    type: {
        name: "Composite",
        className: "ConversationTargetIntentResult",
        uberParent: "TargetIntentResult",
        polymorphicDiscriminator: exports.TargetIntentResult.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.TargetIntentResult.type.modelProperties), { result: {
                serializedName: "result",
                type: {
                    name: "Composite",
                    className: "ConversationResult"
                }
            } })
    }
};
exports.LuisTargetIntentResult = {
    serializedName: "Luis",
    type: {
        name: "Composite",
        className: "LuisTargetIntentResult",
        uberParent: "TargetIntentResult",
        polymorphicDiscriminator: exports.TargetIntentResult.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.TargetIntentResult.type.modelProperties), { result: {
                serializedName: "result",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            } })
    }
};
exports.QuestionAnsweringTargetIntentResult = {
    serializedName: "QuestionAnswering",
    type: {
        name: "Composite",
        className: "QuestionAnsweringTargetIntentResult",
        uberParent: "TargetIntentResult",
        polymorphicDiscriminator: exports.TargetIntentResult.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.TargetIntentResult.type.modelProperties), { result: {
                serializedName: "result",
                type: {
                    name: "Composite",
                    className: "AnswersResult"
                }
            } })
    }
};
exports.PreBuiltTaskParameters = {
    type: {
        name: "Composite",
        className: "PreBuiltTaskParameters",
        modelProperties: __assign(__assign({}, exports.TaskParameters.type.modelProperties), { modelVersion: {
                defaultValue: "latest",
                serializedName: "modelVersion",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.WordLevelTiming = {
    type: {
        name: "Composite",
        className: "WordLevelTiming",
        modelProperties: __assign(__assign({}, exports.AudioTiming.type.modelProperties), { word: {
                serializedName: "word",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.ConversationPIIResultsConversationsItem = {
    type: {
        name: "Composite",
        className: "ConversationPIIResultsConversationsItem",
        modelProperties: __assign(__assign({}, exports.ConversationPIIResult.type.modelProperties), exports.ConversationResultBase.type.modelProperties)
    }
};
exports.SummaryResultConversationsItem = {
    type: {
        name: "Composite",
        className: "SummaryResultConversationsItem",
        modelProperties: __assign(__assign({}, exports.ConversationsSummaryResult.type.modelProperties), exports.ConversationResultBase.type.modelProperties)
    }
};
exports.ConversationPIIResults = {
    type: {
        name: "Composite",
        className: "ConversationPIIResults",
        modelProperties: __assign(__assign({}, exports.PreBuiltResult.type.modelProperties), { conversations: {
                serializedName: "conversations",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConversationPIIResultsConversationsItem"
                        }
                    }
                }
            } })
    }
};
exports.SummaryResult = {
    type: {
        name: "Composite",
        className: "SummaryResult",
        modelProperties: __assign(__assign({}, exports.PreBuiltResult.type.modelProperties), { conversations: {
                serializedName: "conversations",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SummaryResultConversationsItem"
                        }
                    }
                }
            } })
    }
};
exports.ConversationsSummaryResultSummariesItem = {
    type: {
        name: "Composite",
        className: "ConversationsSummaryResultSummariesItem",
        modelProperties: __assign({}, exports.SummaryResultItem.type.modelProperties)
    }
};
exports.AnalyzeConversationPIITask = {
    serializedName: "ConversationalPIITask",
    type: {
        name: "Composite",
        className: "AnalyzeConversationPIITask",
        uberParent: "TaskIdentifier",
        polymorphicDiscriminator: exports.TaskIdentifier.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalyzeConversationLROTask.type.modelProperties), { parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "ConversationPIITaskParameters"
                }
            } })
    }
};
exports.AnalyzeConversationSummarizationTask = {
    serializedName: "ConversationalSummarizationTask",
    type: {
        name: "Composite",
        className: "AnalyzeConversationSummarizationTask",
        uberParent: "TaskIdentifier",
        polymorphicDiscriminator: exports.TaskIdentifier.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalyzeConversationLROTask.type.modelProperties), { parameters: {
                serializedName: "parameters",
                type: {
                    name: "Composite",
                    className: "ConversationSummarizationTaskParameters"
                }
            } })
    }
};
exports.AnalyzeConversationPIIResult = {
    serializedName: "ConversationalPIIResults",
    type: {
        name: "Composite",
        className: "AnalyzeConversationPIIResult",
        uberParent: "TaskStateAutoGenerated",
        polymorphicDiscriminator: exports.TaskStateAutoGenerated.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalyzeConversationJobResult.type.modelProperties), { results: {
                serializedName: "results",
                type: {
                    name: "Composite",
                    className: "ConversationPIIResults"
                }
            } })
    }
};
exports.AnalyzeConversationSummarizationResult = {
    serializedName: "ConversationalSummarizationResults",
    type: {
        name: "Composite",
        className: "AnalyzeConversationSummarizationResult",
        uberParent: "TaskStateAutoGenerated",
        polymorphicDiscriminator: exports.TaskStateAutoGenerated.type.polymorphicDiscriminator,
        modelProperties: __assign(__assign({}, exports.AnalyzeConversationJobResult.type.modelProperties), { results: {
                serializedName: "results",
                type: {
                    name: "Composite",
                    className: "SummaryResult"
                }
            } })
    }
};
exports.ConversationPIITaskParameters = {
    type: {
        name: "Composite",
        className: "ConversationPIITaskParameters",
        modelProperties: __assign(__assign({}, exports.PreBuiltTaskParameters.type.modelProperties), { piiCategories: {
                constraints: {
                    UniqueItems: true
                },
                serializedName: "piiCategories",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, includeAudioRedaction: {
                defaultValue: false,
                serializedName: "includeAudioRedaction",
                type: {
                    name: "Boolean"
                }
            }, redactionSource: {
                serializedName: "redactionSource",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.ConversationSummarizationTaskParameters = {
    type: {
        name: "Composite",
        className: "ConversationSummarizationTaskParameters",
        modelProperties: __assign(__assign({}, exports.PreBuiltTaskParameters.type.modelProperties), { summaryAspects: {
                serializedName: "summaryAspects",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
exports.ConversationAnalysisClientAnalyzeConversationExceptionHeaders = {
    type: {
        name: "Composite",
        className: "ConversationAnalysisClientAnalyzeConversationExceptionHeaders",
        modelProperties: {
            xMsErrorCode: {
                serializedName: "x-ms-error-code",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConversationAnalysisClientConversationAnalysisHeaders = {
    type: {
        name: "Composite",
        className: "ConversationAnalysisClientConversationAnalysisHeaders",
        modelProperties: {
            operationLocation: {
                serializedName: "operation-location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.discriminators = {
    AnalyzeConversationTask: exports.AnalyzeConversationTask,
    AnalyzeConversationTaskResult: exports.AnalyzeConversationTaskResult,
    Conversation: exports.Conversation,
    AnalysisParameters: exports.AnalysisParameters,
    BasePrediction: exports.BasePrediction,
    BaseResolution: exports.BaseResolution,
    BaseExtraInformation: exports.BaseExtraInformation,
    TargetIntentResult: exports.TargetIntentResult,
    "AnalyzeConversationTask.Conversation": exports.ConversationalTask,
    "AnalyzeConversationTaskResult.ConversationResult": exports.ConversationalTaskResult,
    "Conversation.text": exports.TextConversation,
    "Conversation.transcript": exports.TranscriptConversation,
    "TaskIdentifier.AnalyzeConversationLROTask": exports.AnalyzeConversationLROTask,
    "TaskStateAutoGenerated.AnalyzeConversationJobResult": exports.AnalyzeConversationJobResult,
    "AnalysisParameters.Luis": exports.LuisParameters,
    "AnalysisParameters.Conversation": exports.ConversationParameters,
    "AnalysisParameters.QuestionAnswering": exports.QuestionAnsweringParameters,
    "BasePrediction.Conversation": exports.ConversationPrediction,
    "BasePrediction.Orchestration": exports.OrchestrationPrediction,
    "BaseResolution.Age": exports.AgeResolution,
    "BaseResolution.Volume": exports.VolumeResolution,
    "BaseResolution.Speed": exports.SpeedResolution,
    "BaseResolution.Area": exports.AreaResolution,
    "BaseResolution.Length": exports.LengthResolution,
    "BaseResolution.Information": exports.InformationResolution,
    "BaseResolution.Temperature": exports.TemperatureResolution,
    "BaseResolution.Weight": exports.WeightResolution,
    "BaseResolution.Currency": exports.CurrencyResolution,
    "BaseResolution.Boolean": exports.BooleanResolution,
    "BaseResolution.DateTime": exports.DateTimeResolution,
    "BaseResolution.Number": exports.NumberResolution,
    "BaseResolution.Ordinal": exports.OrdinalResolution,
    "BaseResolution.TemporalSpan": exports.TemporalSpanResolution,
    "BaseResolution.NumericRange": exports.NumericRangeResolution,
    "BaseExtraInformation.EntitySubtype": exports.EntitySubtype,
    "BaseExtraInformation.ListKey": exports.ListKey,
    "TargetIntentResult.NonLinked": exports.NoneLinkedTargetIntentResult,
    "TargetIntentResult.Conversation": exports.ConversationTargetIntentResult,
    "TargetIntentResult.Luis": exports.LuisTargetIntentResult,
    "TargetIntentResult.QuestionAnswering": exports.QuestionAnsweringTargetIntentResult,
    "TaskIdentifier.ConversationalPIITask": exports.AnalyzeConversationPIITask,
    "TaskIdentifier.ConversationalSummarizationTask": exports.AnalyzeConversationSummarizationTask,
    "TaskStateAutoGenerated.ConversationalPIIResults": exports.AnalyzeConversationPIIResult,
    "TaskStateAutoGenerated.ConversationalSummarizationResults": exports.AnalyzeConversationSummarizationResult
};
