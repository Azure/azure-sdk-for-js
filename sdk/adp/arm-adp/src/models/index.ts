/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The parameters used to check the availability of the account name
 */
export interface AccountCheckNameAvailabilityParameters {
  /**
   * The account name
   */
  name: string;
}

/**
 * The checkNameAvailability operation response
 */
export interface CheckNameAvailabilityResult {
  /**
   * Gets a boolean value that indicates whether the name is available for you to use. If true, the
   * name is available. If false, the name has already been taken or is invalid and cannot be used
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nameAvailable?: boolean;
  /**
   * Gets the reason that an account name could not be used. The reason element is only returned if
   * nameAvailable is false. Possible values include: 'Invalid', 'AlreadyExists'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reason?: CheckNameAvailabilityReason;
  /**
   * Gets an error message explaining the reason value in more detail
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * ADP account
 */
export interface Account extends TrackedResource {
  /**
   * The account's data-plane ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountId?: string;
  /**
   * Gets the status of the account at the time the operation was called. Possible values include:
   * 'Succeeded', 'Failed', 'Canceled', 'Accepted', 'Provisioning', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The system meta data relating to this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * ADP account
 */
export interface AccountPatch {
  /**
   * The account's data-plane ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountId?: string;
  /**
   * Gets the status of the account at the time the operation was called. Possible values include:
   * 'Succeeded', 'Failed', 'Canceled', 'Accepted', 'Provisioning', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  tags?: { [propertyName: string]: string };
}

/**
 * ADP Data Pool
 */
export interface DataPool extends Resource {
  /**
   * The Data Pool's data-plane ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataPoolId?: string;
  /**
   * Gets the status of the data pool at the time the operation was called. Possible values
   * include: 'Succeeded', 'Failed', 'Canceled', 'Accepted', 'Provisioning', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the collection of locations where Data Pool resources should be created
   */
  locations?: DataPoolLocation[];
  tags?: { [propertyName: string]: string };
  /**
   * The system meta data relating to this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Encryption properties of a Data Pool
 */
export interface DataPoolEncryption {
  /**
   * The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool
   * location
   */
  keyVaultUri: string;
  /**
   * The name of Key Vault key
   */
  keyName: string;
  /**
   * The version of Key Vault key
   */
  keyVersion?: string;
  /**
   * The resource ID of a user-assigned Managed Identity used to access the encryption key in the
   * Key Vault. Requires access to the key operations get, wrap, unwrap, and recover
   */
  userAssignedIdentity: string;
}

/**
 * The Storage SKU.
 */
export interface StorageSku {
  /**
   * The SKU name. Possible values include: 'Standard_LRS', 'Standard_GRS', 'Standard_Ragrs',
   * 'Standard_ZRS', 'Premium_LRS', 'Premium_ZRS', 'Standard_Gzrs', 'Standard_Ragzrs'
   */
  name: StorageSkuName;
}

/**
 * Location of a Data Pool
 */
export interface DataPoolLocation {
  /**
   * The location name
   */
  name: string;
  /**
   * Encryption properties of a Data Pool location
   */
  encryption?: DataPoolEncryption;
  /**
   * The Storage SKU. Default: Standard_ZRS.
   */
  storageSku?: StorageSku;
  /**
   * The amount of storage accounts provisioned per Data Pool. Default: 5
   */
  storageAccountCount?: number;
}

/**
 * ADP Data Pool
 */
export interface DataPoolPatch extends Resource {
  /**
   * The Data Pool's data-plane ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataPoolId?: string;
  /**
   * Gets the status of the data pool at the time the operation was called. Possible values
   * include: 'Succeeded', 'Failed', 'Canceled', 'Accepted', 'Provisioning', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the collection of locations where Data Pool resources should be created
   */
  locations?: DataPoolLocation[];
  tags?: { [propertyName: string]: string };
  /**
   * The system meta data relating to this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * Operation display payload
 */
export interface OperationDisplay {
  /**
   * Resource provider of the operation
   */
  provider?: string;
  /**
   * Resource of the operation
   */
  resource?: string;
  /**
   * Localized friendly name for the operation
   */
  operation?: string;
  /**
   * Localized friendly description for the operation
   */
  description?: string;
}

/**
 * Details about an operation related to logs
 */
export interface OperationLogSpecification {
  /**
   * The name of the log category
   */
  name?: string;
  /**
   * Localized display name
   */
  displayName?: string;
  /**
   * Blobs created in the customer storage account, per hour
   */
  blobDuration?: string;
}

/**
 * Defines how often data for a metric becomes available
 */
export interface OperationMetricAvailability {
  /**
   * The granularity for the metric
   */
  timeGrain?: string;
  /**
   * Blob created in the customer storage account, per hour
   */
  blobDuration?: string;
}

/**
 * Details about an operation related to metrics
 */
export interface OperationMetricSpecification {
  /**
   * The name of the metric
   */
  name?: string;
  /**
   * Localized display name of the metric
   */
  displayName?: string;
  /**
   * The description of the metric
   */
  displayDescription?: string;
  /**
   * The unit that the metric is measured in
   */
  unit?: string;
  /**
   * The type of metric aggregation
   */
  aggregationType?: string;
  /**
   * Whether or not the service is using regional MDM accounts
   */
  enableRegionalMdmAccount?: string;
  /**
   * The name of the MDM account
   */
  sourceMdmAccount?: string;
  /**
   * The name of the MDM namespace
   */
  sourceMdmNamespace?: string;
  /**
   * Defines how often data for metrics becomes available
   */
  availabilities?: OperationMetricAvailability[];
}

/**
 * Details about a service operation
 */
export interface OperationServiceSpecification {
  /**
   * Details about operations related to logs
   */
  logSpecifications?: OperationLogSpecification[];
  /**
   * Details about operations related to metrics
   */
  metricSpecifications?: OperationMetricSpecification[];
}

/**
 * Operation detail payload
 */
export interface Operation {
  /**
   * Name of the operation
   */
  name?: string;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction?: boolean;
  /**
   * Indicates the action type
   */
  actionType?: string;
  /**
   * Display of the operation
   */
  display?: OperationDisplay;
  /**
   * Origin of the operation
   */
  origin?: string;
  /**
   * Details about a service operation
   */
  serviceSpecification?: OperationServiceSpecification;
}

/**
 * Error definition
 */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Description of the error
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Internal error details
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDefinition[];
}

/**
 * Error response
 */
export interface ErrorResponse {
  /**
   * The error details
   */
  error?: ErrorDefinition;
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * Optional Parameters.
 */
export interface AccountsUpdateOptionalParams extends msRest.RequestOptionsBase {
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface AccountsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters to provide for the ADP account
   */
  parameters?: Account;
}

/**
 * Optional Parameters.
 */
export interface AccountsBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface AccountsBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters to provide for the ADP account
   */
  parameters?: Account;
}

/**
 * Optional Parameters.
 */
export interface DataPoolsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters to provide for the Data Pool
   */
  parameters?: DataPoolPatch;
}

/**
 * Optional Parameters.
 */
export interface DataPoolsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters to provide for the Data Pool
   */
  parameters?: DataPool;
}

/**
 * Optional Parameters.
 */
export interface DataPoolsBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters to provide for the Data Pool
   */
  parameters?: DataPoolPatch;
}

/**
 * Optional Parameters.
 */
export interface DataPoolsBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters to provide for the Data Pool
   */
  parameters?: DataPool;
}

/**
 * An interface representing AdpManagementClientOptions.
 */
export interface AdpManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Available operations of the service
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any
   */
  nextLink?: string;
}

/**
 * @interface
 * The list operation response, that contains the data pools and their properties
 * @extends Array<Account>
 */
export interface AccountList extends Array<Account> {
  /**
   * URL to get the next set of operation list results if there are any
   */
  nextLink?: string;
}

/**
 * @interface
 * The list operation response, that contains the data pools and their properties
 * @extends Array<DataPool>
 */
export interface DataPoolList extends Array<DataPool> {
  /**
   * URL to get the next set of operation list results if there are any
   */
  nextLink?: string;
}

/**
 * Defines values for CheckNameAvailabilityReason.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type CheckNameAvailabilityReason = 'Invalid' | 'AlreadyExists';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Canceled', 'Accepted', 'Provisioning',
 * 'Deleting'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Failed' | 'Canceled' | 'Accepted' | 'Provisioning' | 'Deleting';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for StorageSkuName.
 * Possible values include: 'Standard_LRS', 'Standard_GRS', 'Standard_Ragrs', 'Standard_ZRS',
 * 'Premium_LRS', 'Premium_ZRS', 'Standard_Gzrs', 'Standard_Ragzrs'
 * @readonly
 * @enum {string}
 */
export type StorageSkuName = 'Standard_LRS' | 'Standard_GRS' | 'Standard_Ragrs' | 'Standard_ZRS' | 'Premium_LRS' | 'Premium_ZRS' | 'Standard_Gzrs' | 'Standard_Ragzrs';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type AccountsCheckNameAvailabilityResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AccountsListResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AccountsListByResourceGroupResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AccountsGetResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccountsUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AccountsCreateOrUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type AccountsBeginUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AccountsBeginCreateOrUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AccountsListNextResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AccountsListByResourceGroupNextResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DataPoolsListResponse = DataPoolList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataPoolList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataPoolsGetResponse = DataPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataPool;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DataPoolsUpdateResponse = DataPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataPool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DataPoolsCreateOrUpdateResponse = DataPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataPool;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DataPoolsBeginUpdateResponse = DataPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataPool;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DataPoolsBeginCreateOrUpdateResponse = DataPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataPool;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DataPoolsListNextResponse = DataPoolList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataPoolList;
    };
};
