/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Available operations of the service */
export interface OperationListResult {
  /** List of operations supported by the Resource Provider */
  value?: Operation[];
  /** URL to get the next set of operation list results if there are any */
  nextLink?: string;
}

/** Operation detail payload */
export interface Operation {
  /** Name of the operation */
  name?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
  /** Indicates the action type */
  actionType?: string;
  /** Display of the operation */
  display?: OperationDisplay;
  /** Origin of the operation */
  origin?: string;
  /** Details about a service operation */
  serviceSpecification?: OperationServiceSpecification;
}

/** Operation display payload */
export interface OperationDisplay {
  /** Resource provider of the operation */
  provider?: string;
  /** Resource of the operation */
  resource?: string;
  /** Localized friendly name for the operation */
  operation?: string;
  /** Localized friendly description for the operation */
  description?: string;
}

/** Details about a service operation */
export interface OperationServiceSpecification {
  /** Details about operations related to logs */
  logSpecifications?: OperationLogSpecification[];
  /** Details about operations related to metrics */
  metricSpecifications?: OperationMetricSpecification[];
}

/** Details about an operation related to logs */
export interface OperationLogSpecification {
  /** The name of the log category */
  name?: string;
  /** Localized display name */
  displayName?: string;
  /** Blobs created in the customer storage account, per hour */
  blobDuration?: string;
}

/** Details about an operation related to metrics */
export interface OperationMetricSpecification {
  /** The name of the metric */
  name?: string;
  /** Localized display name of the metric */
  displayName?: string;
  /** The description of the metric */
  displayDescription?: string;
  /** The unit that the metric is measured in */
  unit?: string;
  /** The type of metric aggregation */
  aggregationType?: string;
  /** Whether or not the service is using regional MDM accounts */
  enableRegionalMdmAccount?: string;
  /** The name of the MDM account */
  sourceMdmAccount?: string;
  /** The name of the MDM namespace */
  sourceMdmNamespace?: string;
  /** Defines how often data for metrics becomes available */
  availabilities?: OperationMetricAvailability[];
}

/** Defines how often data for a metric becomes available */
export interface OperationMetricAvailability {
  /** The granularity for the metric */
  timeGrain?: string;
  /** Blob created in the customer storage account, per hour */
  blobDuration?: string;
}

/** Error response */
export interface ErrorResponse {
  /** The error details */
  error?: ErrorDefinition;
}

/** Error definition */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Description of the error
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Internal error details
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDefinition[];
}

/** The parameters used to check the availability of the account name */
export interface AccountCheckNameAvailabilityParameters {
  /** The account name */
  name: string;
  /** The type of resource, Microsoft.AutonomousDevelopmentPlatform/accounts */
  type: Type;
}

/** The checkNameAvailability operation response */
export interface CheckNameAvailabilityResult {
  /**
   * Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameAvailable?: boolean;
  /**
   * Gets the reason that an account name could not be used. The reason element is only returned if nameAvailable is false
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: CheckNameAvailabilityReason;
  /**
   * Gets an error message explaining the reason value in more detail
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** The list operation response, that contains the data pools and their properties */
export interface AccountList {
  /**
   * List of accounts and their properties
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Account[];
  /** URL to get the next set of operation list results if there are any */
  nextLink?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** ADP account */
export interface AccountPatch {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /**
   * The account's data-plane ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountId?: string;
  /**
   * Gets the status of the account at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** The list operation response, that contains the data pools and their properties */
export interface DataPoolList {
  /**
   * List of data pools and their properties
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: DataPool[];
  /** URL to get the next set of operation list results if there are any */
  nextLink?: string;
}

/** Data Pool properties */
export interface DataPoolBaseProperties {
  /**
   * The Data Pool's data-plane ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPoolId?: string;
  /**
   * Gets the status of the data pool at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Gets or sets the collection of locations where Data Pool resources should be created */
  locations?: DataPoolLocation[];
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** Location of a Data Pool */
export interface DataPoolLocation {
  /** The location name */
  name: string;
  /** Encryption properties of a Data Pool location */
  encryption?: DataPoolEncryption;
  /** The Storage SKU. Default: Standard_ZRS. */
  storageSku?: StorageSku;
  /** The amount of storage accounts provisioned per Data Pool. Default: 5 */
  storageAccountCount?: number;
}

/** Encryption properties of a Data Pool */
export interface DataPoolEncryption {
  /** The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool location */
  keyVaultUri: string;
  /** The name of Key Vault key */
  keyName: string;
  /** The version of Key Vault key */
  keyVersion?: string;
  /** The resource ID of a user-assigned Managed Identity used to access the encryption key in the Key Vault. Requires access to the key operations get, wrap, unwrap, and recover */
  userAssignedIdentity: string;
}

/** The Storage SKU. */
export interface StorageSku {
  /** The SKU name */
  name: StorageSkuName;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** ADP Data Pool */
export type DataPool = Resource & {
  /**
   * The system meta data relating to this resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * The Data Pool's data-plane ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPoolId?: string;
  /**
   * Gets the status of the data pool at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Gets or sets the collection of locations where Data Pool resources should be created */
  locations?: DataPoolLocation[];
  /** Resource tags */
  tags?: { [propertyName: string]: string };
};

/** ADP Data Pool */
export type DataPoolPatch = Resource & {
  /**
   * The system meta data relating to this resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * The Data Pool's data-plane ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPoolId?: string;
  /**
   * Gets the status of the data pool at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Gets or sets the collection of locations where Data Pool resources should be created */
  locations?: DataPoolLocation[];
  /** Resource tags */
  tags?: { [propertyName: string]: string };
};

/** Data Pool properties */
export type DataPoolProperties = DataPoolBaseProperties & {};

/** ADP account */
export type Account = TrackedResource & {
  /**
   * The system meta data relating to this resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * The account's data-plane ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountId?: string;
  /**
   * Gets the status of the account at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
};

/** Known values of {@link Type} that the service accepts. */
export enum KnownType {
  MicrosoftAutonomousDevelopmentPlatformAccounts = "Microsoft.AutonomousDevelopmentPlatform/accounts"
}

/**
 * Defines values for Type. \
 * {@link KnownType} can be used interchangeably with Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.AutonomousDevelopmentPlatform\/accounts**
 */
export type Type = string;

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export enum KnownCheckNameAvailabilityReason {
  Invalid = "Invalid",
  AlreadyExists = "AlreadyExists"
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type CheckNameAvailabilityReason = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  Succeeded = "Succeeded",
  Failed = "Failed",
  Canceled = "Canceled",
  Accepted = "Accepted",
  Provisioning = "Provisioning",
  Deleting = "Deleting"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Accepted** \
 * **Provisioning** \
 * **Deleting**
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link StorageSkuName} that the service accepts. */
export enum KnownStorageSkuName {
  StandardLRS = "Standard_LRS",
  StandardGRS = "Standard_GRS",
  StandardRagrs = "Standard_Ragrs",
  StandardZRS = "Standard_ZRS",
  PremiumLRS = "Premium_LRS",
  PremiumZRS = "Premium_ZRS",
  StandardGzrs = "Standard_Gzrs",
  StandardRagzrs = "Standard_Ragzrs"
}

/**
 * Defines values for StorageSkuName. \
 * {@link KnownStorageSkuName} can be used interchangeably with StorageSkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard_LRS** \
 * **Standard_GRS** \
 * **Standard_Ragrs** \
 * **Standard_ZRS** \
 * **Premium_LRS** \
 * **Premium_ZRS** \
 * **Standard_Gzrs** \
 * **Standard_Ragzrs**
 */
export type StorageSkuName = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface AccountsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type AccountsCheckNameAvailabilityResponse = CheckNameAvailabilityResult;

/** Optional parameters. */
export interface AccountsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AccountsListResponse = AccountList;

/** Optional parameters. */
export interface AccountsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AccountsListByResourceGroupResponse = AccountList;

/** Optional parameters. */
export interface AccountsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AccountsGetResponse = Account;

/** Optional parameters. */
export interface AccountsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The parameters to provide for the current ADP account */
  parameters?: AccountPatch;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AccountsUpdateResponse = Account;

/** Optional parameters. */
export interface AccountsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The parameters to provide for the ADP account */
  parameters?: Account;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AccountsCreateOrUpdateResponse = Account;

/** Optional parameters. */
export interface AccountsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AccountsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AccountsListNextResponse = AccountList;

/** Optional parameters. */
export interface AccountsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AccountsListByResourceGroupNextResponse = AccountList;

/** Optional parameters. */
export interface DataPoolsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DataPoolsListResponse = DataPoolList;

/** Optional parameters. */
export interface DataPoolsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DataPoolsGetResponse = DataPool;

/** Optional parameters. */
export interface DataPoolsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The parameters to provide for the Data Pool */
  parameters?: DataPoolPatch;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type DataPoolsUpdateResponse = DataPool;

/** Optional parameters. */
export interface DataPoolsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The parameters to provide for the Data Pool */
  parameters?: DataPool;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DataPoolsCreateOrUpdateResponse = DataPool;

/** Optional parameters. */
export interface DataPoolsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DataPoolsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DataPoolsListNextResponse = DataPoolList;

/** Optional parameters. */
export interface AdpManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
