/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Account,
  AccountsListOptionalParams,
  AccountsListByResourceGroupOptionalParams,
  AccountCheckNameAvailabilityParameters,
  AccountsCheckNameAvailabilityOptionalParams,
  AccountsCheckNameAvailabilityResponse,
  AccountsGetOptionalParams,
  AccountsGetResponse,
  AccountsUpdateOptionalParams,
  AccountsUpdateResponse,
  AccountsCreateOrUpdateOptionalParams,
  AccountsCreateOrUpdateResponse,
  AccountsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Accounts. */
export interface Accounts {
  /**
   * List all ADP accounts available under the subscription
   * @param options The options parameters.
   */
  list(
    options?: AccountsListOptionalParams
  ): PagedAsyncIterableIterator<Account>;
  /**
   * List all ADP accounts available under the resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AccountsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Account>;
  /**
   * Checks that the account name is valid and is not already in use
   * @param parameters The checkNameAvailability parameters.
   * @param options The options parameters.
   */
  checkNameAvailability(
    parameters: AccountCheckNameAvailabilityParameters,
    options?: AccountsCheckNameAvailabilityOptionalParams
  ): Promise<AccountsCheckNameAvailabilityResponse>;
  /**
   * Gets the properties of an ADP account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsGetOptionalParams
  ): Promise<AccountsGetResponse>;
  /**
   * Updates the properties of an existing ADP account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AccountsUpdateResponse>,
      AccountsUpdateResponse
    >
  >;
  /**
   * Updates the properties of an existing ADP account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsUpdateOptionalParams
  ): Promise<AccountsUpdateResponse>;
  /**
   * Creates or updates an ADP account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AccountsCreateOrUpdateResponse>,
      AccountsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates an ADP account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsCreateOrUpdateOptionalParams
  ): Promise<AccountsCreateOrUpdateResponse>;
  /**
   * Deletes an ADP account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes an ADP account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsDeleteOptionalParams
  ): Promise<void>;
}
