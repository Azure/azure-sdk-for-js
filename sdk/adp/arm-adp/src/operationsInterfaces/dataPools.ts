/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  DataPool,
  DataPoolsListOptionalParams,
  DataPoolsGetOptionalParams,
  DataPoolsGetResponse,
  DataPoolsUpdateOptionalParams,
  DataPoolsUpdateResponse,
  DataPoolsCreateOrUpdateOptionalParams,
  DataPoolsCreateOrUpdateResponse,
  DataPoolsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DataPools. */
export interface DataPools {
  /**
   * Lists the data pools under the ADP account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: DataPoolsListOptionalParams
  ): PagedAsyncIterableIterator<DataPool>;
  /**
   * Gets the properties of a Data Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param dataPoolName The name of the Data Pool
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    dataPoolName: string,
    options?: DataPoolsGetOptionalParams
  ): Promise<DataPoolsGetResponse>;
  /**
   * Updates the properties of an existing Data Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param dataPoolName The name of the Data Pool
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    dataPoolName: string,
    options?: DataPoolsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DataPoolsUpdateResponse>,
      DataPoolsUpdateResponse
    >
  >;
  /**
   * Updates the properties of an existing Data Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param dataPoolName The name of the Data Pool
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    dataPoolName: string,
    options?: DataPoolsUpdateOptionalParams
  ): Promise<DataPoolsUpdateResponse>;
  /**
   * Creates or updates a Data Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param dataPoolName The name of the Data Pool
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    accountName: string,
    dataPoolName: string,
    options?: DataPoolsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DataPoolsCreateOrUpdateResponse>,
      DataPoolsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a Data Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param dataPoolName The name of the Data Pool
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    dataPoolName: string,
    options?: DataPoolsCreateOrUpdateOptionalParams
  ): Promise<DataPoolsCreateOrUpdateResponse>;
  /**
   * Deletes a Data Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param dataPoolName The name of the Data Pool
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    dataPoolName: string,
    options?: DataPoolsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a Data Pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the ADP account
   * @param dataPoolName The name of the Data Pool
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    dataPoolName: string,
    options?: DataPoolsDeleteOptionalParams
  ): Promise<void>;
}
