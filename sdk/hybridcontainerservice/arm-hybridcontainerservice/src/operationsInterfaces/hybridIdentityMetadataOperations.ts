/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  HybridIdentityMetadata,
  HybridIdentityMetadataListByClusterOptionalParams,
  HybridIdentityMetadataPutOptionalParams,
  HybridIdentityMetadataPutResponse,
  HybridIdentityMetadataGetOptionalParams,
  HybridIdentityMetadataGetResponse,
  HybridIdentityMetadataDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HybridIdentityMetadataOperations. */
export interface HybridIdentityMetadataOperations {
  /**
   * Lists the hybrid identity metadata proxy resource in a cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisionedClustersName Parameter for the name of the provisioned cluster
   * @param options The options parameters.
   */
  listByCluster(
    resourceGroupName: string,
    provisionedClustersName: string,
    options?: HybridIdentityMetadataListByClusterOptionalParams
  ): PagedAsyncIterableIterator<HybridIdentityMetadata>;
  /**
   * Creates the hybrid identity metadata proxy resource that facilitates the managed identity
   * provisioning.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisionedClustersName Parameter for the name of the provisioned cluster
   * @param hybridIdentityMetadataResourceName Parameter for the name of the hybrid identity metadata
   *                                           resource.
   * @param body Defines the hybridIdentityMetadata.
   * @param options The options parameters.
   */
  put(
    resourceGroupName: string,
    provisionedClustersName: string,
    hybridIdentityMetadataResourceName: string,
    body: HybridIdentityMetadata,
    options?: HybridIdentityMetadataPutOptionalParams
  ): Promise<HybridIdentityMetadataPutResponse>;
  /**
   * Get the hybrid identity metadata proxy resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisionedClustersName Parameter for the name of the provisioned cluster
   * @param hybridIdentityMetadataResourceName Parameter for the name of the hybrid identity metadata
   *                                           resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    provisionedClustersName: string,
    hybridIdentityMetadataResourceName: string,
    options?: HybridIdentityMetadataGetOptionalParams
  ): Promise<HybridIdentityMetadataGetResponse>;
  /**
   * Deletes the hybrid identity metadata proxy resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisionedClustersName Parameter for the name of the provisioned cluster
   * @param hybridIdentityMetadataResourceName Parameter for the name of the hybrid identity metadata
   *                                           resource.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    provisionedClustersName: string,
    hybridIdentityMetadataResourceName: string,
    options?: HybridIdentityMetadataDeleteOptionalParams
  ): Promise<void>;
}
