/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  VirtualNetwork,
  VirtualNetworksListByResourceGroupOptionalParams,
  VirtualNetworksListBySubscriptionOptionalParams,
  VirtualNetworksRetrieveOptionalParams,
  VirtualNetworksRetrieveResponse,
  VirtualNetworksCreateOrUpdateOptionalParams,
  VirtualNetworksCreateOrUpdateResponse,
  VirtualNetworksDeleteOptionalParams,
  VirtualNetworksDeleteResponse,
  VirtualNetworksPatch,
  VirtualNetworksUpdateOptionalParams,
  VirtualNetworksUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualNetworks. */
export interface VirtualNetworks {
  /**
   * Lists the Hybrid AKS virtual networks by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: VirtualNetworksListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<VirtualNetwork>;
  /**
   * Lists the Hybrid AKS virtual networks by subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: VirtualNetworksListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<VirtualNetwork>;
  /**
   * Gets the Hybrid AKS virtual network
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Parameter for the name of the virtual network
   * @param options The options parameters.
   */
  retrieve(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksRetrieveOptionalParams
  ): Promise<VirtualNetworksRetrieveResponse>;
  /**
   * Puts the Hybrid AKS virtual network
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Parameter for the name of the virtual network
   * @param virtualNetworks The virtualNetworks resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    virtualNetworkName: string,
    virtualNetworks: VirtualNetwork,
    options?: VirtualNetworksCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualNetworksCreateOrUpdateResponse>,
      VirtualNetworksCreateOrUpdateResponse
    >
  >;
  /**
   * Puts the Hybrid AKS virtual network
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Parameter for the name of the virtual network
   * @param virtualNetworks The virtualNetworks resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    virtualNetworkName: string,
    virtualNetworks: VirtualNetwork,
    options?: VirtualNetworksCreateOrUpdateOptionalParams
  ): Promise<VirtualNetworksCreateOrUpdateResponse>;
  /**
   * Deletes the Hybrid AKS virtual network
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Parameter for the name of the virtual network
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualNetworksDeleteResponse>,
      VirtualNetworksDeleteResponse
    >
  >;
  /**
   * Deletes the Hybrid AKS virtual network
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Parameter for the name of the virtual network
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksDeleteOptionalParams
  ): Promise<VirtualNetworksDeleteResponse>;
  /**
   * Patches the Hybrid AKS virtual network
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Parameter for the name of the virtual network
   * @param virtualNetworks The virtualNetworks resource patch definition.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    virtualNetworkName: string,
    virtualNetworks: VirtualNetworksPatch,
    options?: VirtualNetworksUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualNetworksUpdateResponse>,
      VirtualNetworksUpdateResponse
    >
  >;
  /**
   * Patches the Hybrid AKS virtual network
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Parameter for the name of the virtual network
   * @param virtualNetworks The virtualNetworks resource patch definition.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    virtualNetworkName: string,
    virtualNetworks: VirtualNetworksPatch,
    options?: VirtualNetworksUpdateOptionalParams
  ): Promise<VirtualNetworksUpdateResponse>;
}
