/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ProvisionedClustersResponse,
  ProvisionedClustersListByResourceGroupOptionalParams,
  ProvisionedClustersListBySubscriptionOptionalParams,
  ProvisionedClustersGetOptionalParams,
  ProvisionedClustersGetResponse,
  ProvisionedClusters,
  ProvisionedClustersCreateOrUpdateOptionalParams,
  ProvisionedClustersCreateOrUpdateResponse,
  ProvisionedClustersDeleteOptionalParams,
  ProvisionedClustersPatch,
  ProvisionedClustersUpdateOptionalParams,
  ProvisionedClustersUpdateResponse,
  ProvisionedClustersGetUpgradeProfileOptionalParams,
  ProvisionedClustersGetUpgradeProfileResponse,
  ProvisionedClustersUpgradeNodeImageVersionForEntireClusterOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProvisionedClustersOperations. */
export interface ProvisionedClustersOperations {
  /**
   * Gets the Hybrid AKS provisioned cluster in a resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ProvisionedClustersListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ProvisionedClustersResponse>;
  /**
   * Gets the Hybrid AKS provisioned cluster in a subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ProvisionedClustersListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ProvisionedClustersResponse>;
  /**
   * Gets the Hybrid AKS provisioned cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    options?: ProvisionedClustersGetOptionalParams
  ): Promise<ProvisionedClustersGetResponse>;
  /**
   * Creates the Hybrid AKS provisioned cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param provisionedClusters The provisionedClusters resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    provisionedClusters: ProvisionedClusters,
    options?: ProvisionedClustersCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisionedClustersCreateOrUpdateResponse>,
      ProvisionedClustersCreateOrUpdateResponse
    >
  >;
  /**
   * Creates the Hybrid AKS provisioned cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param provisionedClusters The provisionedClusters resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    provisionedClusters: ProvisionedClusters,
    options?: ProvisionedClustersCreateOrUpdateOptionalParams
  ): Promise<ProvisionedClustersCreateOrUpdateResponse>;
  /**
   * Deletes the Hybrid AKS provisioned cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    resourceName: string,
    options?: ProvisionedClustersDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates the Hybrid AKS provisioned cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param provisionedClusters The provisionedClusters resource patch definition.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    resourceName: string,
    provisionedClusters: ProvisionedClustersPatch,
    options?: ProvisionedClustersUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisionedClustersUpdateResponse>,
      ProvisionedClustersUpdateResponse
    >
  >;
  /**
   * Updates the Hybrid AKS provisioned cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param provisionedClusters The provisionedClusters resource patch definition.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    provisionedClusters: ProvisionedClustersPatch,
    options?: ProvisionedClustersUpdateOptionalParams
  ): Promise<ProvisionedClustersUpdateResponse>;
  /**
   * Gets the upgrade profile of a provisioned cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param options The options parameters.
   */
  getUpgradeProfile(
    resourceGroupName: string,
    resourceName: string,
    options?: ProvisionedClustersGetUpgradeProfileOptionalParams
  ): Promise<ProvisionedClustersGetUpgradeProfileResponse>;
  /**
   * Upgrading the node image version of a cluster applies the newest OS and runtime updates to the
   * nodes.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param options The options parameters.
   */
  beginUpgradeNodeImageVersionForEntireCluster(
    resourceGroupName: string,
    resourceName: string,
    options?: ProvisionedClustersUpgradeNodeImageVersionForEntireClusterOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Upgrading the node image version of a cluster applies the newest OS and runtime updates to the
   * nodes.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param resourceName Parameter for the name of the provisioned cluster
   * @param options The options parameters.
   */
  beginUpgradeNodeImageVersionForEntireClusterAndWait(
    resourceGroupName: string,
    resourceName: string,
    options?: ProvisionedClustersUpgradeNodeImageVersionForEntireClusterOptionalParams
  ): Promise<void>;
}
