/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Properties of the provisioned cluster. */
export interface ProvisionedClusterProperties {
  /** The profile for Linux VMs in the provisioned cluster. */
  linuxProfile?: LinuxProfileProperties;
  /** The profile for control plane of the provisioned cluster. */
  controlPlane?: ControlPlaneProfile;
  /** The version of Kubernetes in use by the provisioned cluster. */
  kubernetesVersion?: string;
  /** The network configuration profile for the provisioned cluster. */
  networkProfile?: NetworkProfile;
  /** The storage configuration profile for the provisioned cluster. */
  storageProfile?: StorageProfile;
  /** The SSH restricted access profile for the VMs in the provisioned cluster. */
  clusterVMAccessProfile?: ClusterVMAccessProfile;
  /** The agent pool properties for the provisioned cluster. */
  agentPoolProfiles?: NamedAgentPoolProfile[];
  /** The profile for the underlying cloud infrastructure provider for the provisioned cluster. */
  cloudProviderProfile?: CloudProviderProfile;
  /**
   * The status of the latest long running operation for the provisioned cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /**
   * The observed status of the provisioned cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ProvisionedClusterPropertiesStatus;
  /** The license profile of the provisioned cluster. */
  licenseProfile?: ProvisionedClusterLicenseProfile;
  /** Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster. */
  autoScalerProfile?: ProvisionedClusterPropertiesAutoScalerProfile;
}

/** SSH profile for control plane and nodepool VMs of the provisioned cluster. */
export interface LinuxProfileProperties {
  /** SSH configuration for VMs of the provisioned cluster. */
  ssh?: LinuxProfilePropertiesSsh;
}

/** SSH configuration for VMs of the provisioned cluster. */
export interface LinuxProfilePropertiesSsh {
  /** The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified. */
  publicKeys?: LinuxProfilePropertiesSshPublicKeysItem[];
}

export interface LinuxProfilePropertiesSshPublicKeysItem {
  /** Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers. */
  keyData?: string;
}

/** The properties of the control plane nodes of the provisioned cluster */
export interface ControlPlaneProfile {
  /** Number of control plane nodes. The default value is 1, and the count should be an odd number */
  count?: number;
  /** VM sku size of the control plane nodes */
  vmSize?: string;
  /** IP Address of the Kubernetes API server */
  controlPlaneEndpoint?: ControlPlaneProfileControlPlaneEndpoint;
}

/** IP Address of the Kubernetes API server */
export interface ControlPlaneProfileControlPlaneEndpoint {
  /** IP address of the Kubernetes API server */
  hostIP?: string;
}

/** The network configuration profile for the provisioned cluster. */
export interface NetworkProfile {
  /** Profile of the HA Proxy load balancer. */
  loadBalancerProfile?: NetworkProfileLoadBalancerProfile;
  /** Network policy used for building Kubernetes network. Possible values include: 'calico'. */
  networkPolicy?: NetworkPolicy;
  /** A CIDR notation IP Address range from which to assign pod IPs. */
  podCidr?: string;
}

/** Profile of the HA Proxy load balancer. */
export interface NetworkProfileLoadBalancerProfile {
  /** Number of HA Proxy load balancer VMs. The default value is 0. */
  count?: number;
}

/** The storage configuration profile for the provisioned cluster. */
export interface StorageProfile {
  /** SMB CSI Driver settings for the storage profile. */
  smbCsiDriver?: StorageProfileSmbCSIDriver;
  /** NFS CSI Driver settings for the storage profile. */
  nfsCsiDriver?: StorageProfileNfsCSIDriver;
}

/** SMB CSI Driver settings for the storage profile. */
export interface StorageProfileSmbCSIDriver {
  /** Indicates whether to enable SMB CSI Driver. The default value is true. */
  enabled?: boolean;
}

/** NFS CSI Driver settings for the storage profile. */
export interface StorageProfileNfsCSIDriver {
  /** Indicates whether to enable NFS CSI Driver. The default value is true. */
  enabled?: boolean;
}

/** The SSH restricted access profile for the VMs in the provisioned cluster. */
export interface ClusterVMAccessProfile {
  /** IP Address or CIDR for SSH access to VMs in the provisioned cluster */
  authorizedIPRanges?: string;
}

/** Profile for agent pool properties specified during creation */
export interface AgentPoolProfile {
  /** The particular KubernetesVersion Image OS Type (Linux, Windows) */
  osType?: OsType;
  /** Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows. */
  osSKU?: Ossku;
  /** The node labels to be persisted across all nodes in agent pool. */
  nodeLabels?: { [propertyName: string]: string };
  /** Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. */
  nodeTaints?: string[];
  /** The maximum number of nodes for auto-scaling */
  maxCount?: number;
  /** The minimum number of nodes for auto-scaling */
  minCount?: number;
  /** Whether to enable auto-scaler. Default value is false */
  enableAutoScaling?: boolean;
  /** The maximum number of pods that can run on a node. */
  maxPods?: number;
}

/** Profile for agent pool properties that can be updated */
export interface AgentPoolUpdateProfile {
  /** Number of nodes in the agent pool. The default value is 1. */
  count?: number;
  /** The VM sku size of the agent pool node VMs. */
  vmSize?: string;
  /**
   * Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubernetesVersion?: string;
}

/** Name of the default Agent Pool */
export interface AgentPoolName {
  /** Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1 */
  name?: string;
}

/** The profile for the underlying cloud infrastructure provider for the provisioned cluster. */
export interface CloudProviderProfile {
  /** The profile for the infrastructure networks used by the provisioned cluster */
  infraNetworkProfile?: CloudProviderProfileInfraNetworkProfile;
}

/** The profile for the infrastructure networks used by the provisioned cluster */
export interface CloudProviderProfileInfraNetworkProfile {
  /** List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName} */
  vnetSubnetIds?: string[];
}

/** The observed status of the provisioned cluster. */
export interface ProvisionedClusterPropertiesStatus {
  /** The detailed status of the provisioned cluster components including addons. */
  controlPlaneStatus?: AddonStatusProfile[];
  /**
   * The current state of the provisioned cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentState?: ResourceProvisioningState;
  /** Error messages during a provisioned cluster operation or steady state. */
  errorMessage?: string;
}

/** The status profile of the addons and other kubernetes components */
export interface AddonStatusProfile {
  /** Name of the addon or component */
  name?: string;
  /** Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading' */
  phase?: AddonPhase;
  /** Indicates whether the addon or component is ready */
  ready?: boolean;
  /** Observed error message from the addon or component */
  errorMessage?: string;
}

/** The license profile of the provisioned cluster. */
export interface ProvisionedClusterLicenseProfile {
  /** Indicates whether Azure Hybrid Benefit is opted in. Default value is false */
  azureHybridBenefit?: AzureHybridBenefit;
}

/** Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster. */
export interface ProvisionedClusterPropertiesAutoScalerProfile {
  /** Valid values are 'true' and 'false' */
  balanceSimilarNodeGroups?: string;
  /** If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information. */
  expander?: Expander;
  /** The default is 10. */
  maxEmptyBulkDelete?: string;
  /** The default is 600. */
  maxGracefulTerminationSec?: string;
  /** The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  maxNodeProvisionTime?: string;
  /** The default is 45. The maximum is 100 and the minimum is 0. */
  maxTotalUnreadyPercentage?: string;
  /** For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc). */
  newPodScaleUpDelay?: string;
  /** This must be an integer. The default is 3. */
  okTotalUnreadyCount?: string;
  /** The default is '10'. Values must be an integer number of seconds. */
  scanInterval?: string;
  /** The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownDelayAfterAdd?: string;
  /** The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownDelayAfterDelete?: string;
  /** The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownDelayAfterFailure?: string;
  /** The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownUnneededTime?: string;
  /** The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported. */
  scaleDownUnreadyTime?: string;
  /** The default is '0.5'. */
  scaleDownUtilizationThreshold?: string;
  /** The default is true. */
  skipNodesWithLocalStorage?: string;
  /** The default is true. */
  skipNodesWithSystemPods?: string;
}

/** Extended location pointing to the underlying infrastructure */
export interface ExtendedLocation {
  /** The extended location type. Allowed value: 'CustomLocation' */
  type?: ExtendedLocationTypes;
  /** ARM Id of the extended location. */
  name?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster. */
export interface ProvisionedClusterListResult {
  value?: ProvisionedCluster[];
  nextLink?: string;
}

/** Control plane and agent pool upgrade profiles. */
export interface ProvisionedClusterUpgradeProfileProperties {
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** The list of available kubernetes version upgrades for the control plane. */
  controlPlaneProfile: ProvisionedClusterPoolUpgradeProfile;
}

/** The list of available kubernetes versions for upgrade. */
export interface ProvisionedClusterPoolUpgradeProfile {
  /**
   * The Kubernetes version (major.minor.patch).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubernetesVersion?: string;
  /**
   * The particular KubernetesVersion Image OS Type (Linux, Windows)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OsType;
  /** List of available kubernetes versions for upgrade. */
  upgrades?: ProvisionedClusterPoolUpgradeProfileProperties[];
}

/** The upgrade properties. */
export interface ProvisionedClusterPoolUpgradeProfileProperties {
  /**
   * The Kubernetes version (major.minor.patch).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubernetesVersion?: string;
  /**
   * Whether the Kubernetes version is currently in preview.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isPreview?: boolean;
}

/** Defines the resource properties for the hybrid identity metadata. */
export interface HybridIdentityMetadataProperties {
  /** Unique id of the parent provisioned cluster resource. */
  resourceUid?: string;
  /** Onboarding public key for provisioning the Managed identity for the connected cluster. */
  publicKey?: string;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** List of hybridIdentityMetadata. */
export interface HybridIdentityMetadataList {
  /** Url to follow for getting next page of hybridIdentityMetadata. */
  nextLink?: string;
  /** Array of hybridIdentityMetadata */
  value: HybridIdentityMetadata[];
}

/** The agentPool resource provisioning status definition */
export interface AgentPoolProvisioningStatus {
  /**
   * The status of the latest long running operation for the agent pool.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** The observed status of the agent pool. */
  status?: AgentPoolProvisioningStatusStatus;
}

/** The observed status of the agent pool. */
export interface AgentPoolProvisioningStatusStatus {
  /**
   * The current state of the agent pool.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentState?: ResourceProvisioningState;
  /** Error messages during an agent pool operation or steady state. */
  errorMessage?: string;
  readyReplicas?: AgentPoolUpdateProfile[];
}

/** List of all agent pool resources associated with the provisioned cluster. */
export interface AgentPoolListResult {
  value?: AgentPool[];
  nextLink?: string;
}

/** The list kubeconfig result response. */
export interface ListCredentialResponse {
  /**
   * Operation Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Operation Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * ARM Resource Id of the provisioned cluster instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ResourceProvisioningState;
  error?: ListCredentialResponseError;
  properties?: ListCredentialResponseProperties;
}

export interface ListCredentialResponseError {
  code?: string;
  message?: string;
}

export interface ListCredentialResponseProperties {
  /**
   * Base64-encoded Kubernetes configuration file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubeconfigs?: CredentialResult[];
}

/** The credential result response. */
export interface CredentialResult {
  /**
   * The name of the credential.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Base64-encoded Kubernetes configuration file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Uint8Array;
}

export interface KubernetesVersionProfileProperties {
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** List of supported Kubernetes versions */
  values?: KubernetesVersionProperties[];
}

/** Kubernetes version profile for given major.minor release */
export interface KubernetesVersionProperties {
  /**
   * major.minor version of Kubernetes release
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * Whether this version is in preview mode.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isPreview?: boolean;
  /**
   * Patch versions of a Kubernetes release
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly patchVersions?: { [propertyName: string]: KubernetesPatchVersions };
}

/** Kubernetes Patch Version profile */
export interface KubernetesPatchVersions {
  /** Indicates whether the kubernetes version image is ready or not */
  readiness?: KubernetesVersionReadiness[];
  /** Possible upgrade paths for given patch version */
  upgrades?: string[];
}

/** Indicates whether the kubernetes version image is ready or not */
export interface KubernetesVersionReadiness {
  /**
   * The particular KubernetesVersion Image OS Type (Linux, Windows)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OsType;
  /** Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows. */
  osSku?: Ossku;
  /**
   * Whether the kubernetes version image is ready or not
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ready?: boolean;
  /**
   * The error message for version not being ready
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
}

/** List of supported kubernetes versions. */
export interface KubernetesVersionProfileList {
  value?: KubernetesVersionProfile[];
  nextLink?: string;
}

export interface VmSkuProfileProperties {
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** List of supported VM SKUs. */
  values?: VmSkuProperties[];
}

/** The profile for supported VM SKUs */
export interface VmSkuProperties {
  /**
   * The type of resource the SKU applies to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: VmSkuCapabilities[];
  /**
   * The name of the VM SKU
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The tier of the VM SKU
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tier?: string;
  /**
   * The size of the VM SKU
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly size?: string;
}

/** Describes the VM SKU capabilities like MemoryGB, vCPUs, etc. */
export interface VmSkuCapabilities {
  /**
   * Name of the VM SKU capability
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Value of the VM SKU capability
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** The list of supported VM SKUs. */
export interface VmSkuProfileList {
  value?: VmSkuProfile[];
  nextLink?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Properties of the virtual network resource */
export interface VirtualNetworkProperties {
  infraVnetProfile?: VirtualNetworkPropertiesInfraVnetProfile;
  /** Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer */
  vipPool?: VirtualNetworkPropertiesVipPoolItem[];
  /** Range of IP Addresses for Kubernetes node VMs */
  vmipPool?: VirtualNetworkPropertiesVmipPoolItem[];
  /** List of DNS server IP Addresses associated with the network */
  dnsServers?: string[];
  /** IP Address of the Gateway associated with the network */
  gateway?: string;
  /** IP Address Prefix of the network */
  ipAddressPrefix?: string;
  /** VLAN Id used by the network */
  vlanID?: number;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly provisioningState?: ProvisioningState;
  /**
   * Status of the virtual network resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: VirtualNetworkPropertiesStatus;
}

export interface VirtualNetworkPropertiesInfraVnetProfile {
  /** Infrastructure network profile for HCI platform */
  hci?: VirtualNetworkPropertiesInfraVnetProfileHci;
}

/** Infrastructure network profile for HCI platform */
export interface VirtualNetworkPropertiesInfraVnetProfileHci {
  /** Group in MOC(Microsoft On-premises Cloud) */
  mocGroup?: string;
  /** Location in MOC(Microsoft On-premises Cloud) */
  mocLocation?: string;
  /** Virtual Network name in MOC(Microsoft On-premises Cloud) */
  mocVnetName?: string;
}

export interface VirtualNetworkPropertiesVipPoolItem {
  /** Ending IP address for the IP Pool */
  endIP?: string;
  /** Starting IP address for the IP Pool */
  startIP?: string;
}

export interface VirtualNetworkPropertiesVmipPoolItem {
  /** Ending IP address for the IP Pool */
  endIP?: string;
  /** Starting IP address for the IP Pool */
  startIP?: string;
}

/** Status of the virtual network resource */
export interface VirtualNetworkPropertiesStatus {
  /** The detailed status of the long running operation. */
  operationStatus?: VirtualNetworkPropertiesStatusOperationStatus;
}

/** The detailed status of the long running operation. */
export interface VirtualNetworkPropertiesStatusOperationStatus {
  /** The error if any from the operation. */
  error?: VirtualNetworkPropertiesStatusOperationStatusError;
  /** The identifier of the operation. */
  operationId?: string;
  /** The status of the operation. */
  status?: string;
}

/** The error if any from the operation. */
export interface VirtualNetworkPropertiesStatusOperationStatusError {
  /** The error code from the operation. */
  code?: string;
  /** The error message from the operation. */
  message?: string;
}

/** Extended location pointing to the underlying infrastructure */
export interface VirtualNetworkExtendedLocation {
  /** The extended location type. Allowed value: 'CustomLocation' */
  type?: ExtendedLocationTypes;
  /** ARM Id of the extended location. */
  name?: string;
}

/** The Virtual Network resource patch definition. */
export interface VirtualNetworksPatch {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** A list of virtual network resources. */
export interface VirtualNetworksListResult {
  value?: VirtualNetwork[];
  nextLink?: string;
}

/** The profile for Linux VMs in the provisioned cluster. */
export interface LinuxProfile {
  /** Profile for Linux VMs in the container service cluster. */
  linuxProfile?: LinuxProfileProperties;
}

/** Profile of the default agent pool along with a name parameter */
export interface NamedAgentPoolProfile
  extends AgentPoolProfile,
    AgentPoolUpdateProfile,
    AgentPoolName {}

/** Properties of the agent pool resource */
export interface AgentPoolProperties
  extends AgentPoolProfile,
    AgentPoolUpdateProfile,
    AgentPoolProvisioningStatus {}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The provisioned cluster resource definition. */
export interface ProvisionedCluster extends ProxyResource {
  /** Properties of the provisioned cluster. */
  properties?: ProvisionedClusterProperties;
  /** Extended location pointing to the underlying infrastructure */
  extendedLocation?: ExtendedLocation;
}

/** The list of available kubernetes version upgrades for the provisioned cluster. */
export interface ProvisionedClusterUpgradeProfile extends ProxyResource {
  /** The properties of the upgrade profile. */
  properties: ProvisionedClusterUpgradeProfileProperties;
}

/** Defines the hybridIdentityMetadata. */
export interface HybridIdentityMetadata extends ProxyResource {
  /** Resource properties. */
  properties: HybridIdentityMetadataProperties;
}

/** The agentPool resource definition */
export interface AgentPool extends ProxyResource {
  /** Properties of the agent pool resource */
  properties?: AgentPoolProperties;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** Extended location pointing to the underlying infrastructure */
  extendedLocation?: ExtendedLocation;
}

/** The supported kubernetes versions. */
export interface KubernetesVersionProfile extends ProxyResource {
  /** Extended location pointing to the underlying infrastructure */
  extendedLocation?: ExtendedLocation;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly properties?: KubernetesVersionProfileProperties;
}

/** The list of supported VM SKUs. */
export interface VmSkuProfile extends ProxyResource {
  /** Extended location pointing to the underlying infrastructure */
  extendedLocation?: ExtendedLocation;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly properties?: VmSkuProfileProperties;
}

/** The Virtual Network resource definition. */
export interface VirtualNetwork extends TrackedResource {
  /** Properties of the virtual network resource */
  properties?: VirtualNetworkProperties;
  /** Extended location pointing to the underlying infrastructure */
  extendedLocation?: VirtualNetworkExtendedLocation;
}

/** Defines headers for ProvisionedClusterInstances_delete operation. */
export interface ProvisionedClusterInstancesDeleteHeaders {
  location?: string;
}

/** Defines headers for ProvisionedClusterInstances_listUserKubeconfig operation. */
export interface ProvisionedClusterInstancesListUserKubeconfigHeaders {
  location?: string;
}

/** Defines headers for ProvisionedClusterInstances_listAdminKubeconfig operation. */
export interface ProvisionedClusterInstancesListAdminKubeconfigHeaders {
  location?: string;
}

/** Defines headers for HybridIdentityMetadata_delete operation. */
export interface HybridIdentityMetadataDeleteHeaders {
  location?: string;
}

/** Defines headers for AgentPool_delete operation. */
export interface AgentPoolDeleteHeaders {
  location?: string;
}

/** Defines headers for HybridContainerServiceClient_deleteKubernetesVersions operation. */
export interface HybridContainerServiceClientDeleteKubernetesVersionsHeaders {
  location?: string;
}

/** Defines headers for HybridContainerServiceClient_deleteVMSkus operation. */
export interface HybridContainerServiceClientDeleteVMSkusHeaders {
  location?: string;
}

/** Defines headers for VirtualNetworks_delete operation. */
export interface VirtualNetworksDeleteHeaders {
  location?: string;
}

/** Known values of {@link NetworkPolicy} that the service accepts. */
export enum KnownNetworkPolicy {
  /** Calico */
  Calico = "calico"
}

/**
 * Defines values for NetworkPolicy. \
 * {@link KnownNetworkPolicy} can be used interchangeably with NetworkPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **calico**
 */
export type NetworkPolicy = string;

/** Known values of {@link OsType} that the service accepts. */
export enum KnownOsType {
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux"
}

/**
 * Defines values for OsType. \
 * {@link KnownOsType} can be used interchangeably with OsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Windows** \
 * **Linux**
 */
export type OsType = string;

/** Known values of {@link Ossku} that the service accepts. */
export enum KnownOssku {
  /** Use Mariner as the OS for node images. */
  CBLMariner = "CBLMariner",
  /** Use Windows2019 as the OS for node images. */
  Windows2019 = "Windows2019",
  /** Use Windows2022 as the OS for node images. */
  Windows2022 = "Windows2022"
}

/**
 * Defines values for Ossku. \
 * {@link KnownOssku} can be used interchangeably with Ossku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CBLMariner**: Use Mariner as the OS for node images. \
 * **Windows2019**: Use Windows2019 as the OS for node images. \
 * **Windows2022**: Use Windows2022 as the OS for node images.
 */
export type Ossku = string;

/** Known values of {@link ResourceProvisioningState} that the service accepts. */
export enum KnownResourceProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Pending */
  Pending = "Pending",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Updating */
  Updating = "Updating",
  /** Upgrading */
  Upgrading = "Upgrading",
  /** Accepted */
  Accepted = "Accepted"
}

/**
 * Defines values for ResourceProvisioningState. \
 * {@link KnownResourceProvisioningState} can be used interchangeably with ResourceProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Pending** \
 * **Creating** \
 * **Deleting** \
 * **Updating** \
 * **Upgrading** \
 * **Accepted**
 */
export type ResourceProvisioningState = string;

/** Known values of {@link AddonPhase} that the service accepts. */
export enum KnownAddonPhase {
  /** Pending */
  Pending = "pending",
  /** Provisioning */
  Provisioning = "provisioning",
  /** ProvisioningHelmChartInstalled */
  ProvisioningHelmChartInstalled = "provisioning {HelmChartInstalled}",
  /** ProvisioningMSICertificateDownloaded */
  ProvisioningMSICertificateDownloaded = "provisioning {MSICertificateDownloaded}",
  /** Provisioned */
  Provisioned = "provisioned",
  /** Deleting */
  Deleting = "deleting",
  /** Failed */
  Failed = "failed",
  /** Upgrading */
  Upgrading = "upgrading"
}

/**
 * Defines values for AddonPhase. \
 * {@link KnownAddonPhase} can be used interchangeably with AddonPhase,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **pending** \
 * **provisioning** \
 * **provisioning {HelmChartInstalled}** \
 * **provisioning {MSICertificateDownloaded}** \
 * **provisioned** \
 * **deleting** \
 * **failed** \
 * **upgrading**
 */
export type AddonPhase = string;

/** Known values of {@link AzureHybridBenefit} that the service accepts. */
export enum KnownAzureHybridBenefit {
  /** True */
  True = "True",
  /** False */
  False = "False",
  /** NotApplicable */
  NotApplicable = "NotApplicable"
}

/**
 * Defines values for AzureHybridBenefit. \
 * {@link KnownAzureHybridBenefit} can be used interchangeably with AzureHybridBenefit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **True** \
 * **False** \
 * **NotApplicable**
 */
export type AzureHybridBenefit = string;

/** Known values of {@link Expander} that the service accepts. */
export enum KnownExpander {
  /** Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources. */
  LeastWaste = "least-waste",
  /** Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once. */
  MostPods = "most-pods",
  /** Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https:\//github.com\/kubernetes\/autoscaler\/blob\/master\/cluster-autoscaler\/expander\/priority\/readme.md). */
  Priority = "priority",
  /** Used when you don't have a particular need for the node groups to scale differently. */
  Random = "random"
}

/**
 * Defines values for Expander. \
 * {@link KnownExpander} can be used interchangeably with Expander,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **least-waste**: Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources. \
 * **most-pods**: Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once. \
 * **priority**: Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https:\/\/github.com\/kubernetes\/autoscaler\/blob\/master\/cluster-autoscaler\/expander\/priority\/readme.md). \
 * **random**: Used when you don't have a particular need for the node groups to scale differently.
 */
export type Expander = string;

/** Known values of {@link ExtendedLocationTypes} that the service accepts. */
export enum KnownExtendedLocationTypes {
  /** CustomLocation */
  CustomLocation = "CustomLocation"
}

/**
 * Defines values for ExtendedLocationTypes. \
 * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CustomLocation**
 */
export type ExtendedLocationTypes = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Pending */
  Pending = "Pending",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Updating */
  Updating = "Updating",
  /** Accepted */
  Accepted = "Accepted"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Pending** \
 * **Creating** \
 * **Deleting** \
 * **Updating** \
 * **Accepted**
 */
export type ProvisioningState = string;

/** Optional parameters. */
export interface ProvisionedClusterInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProvisionedClusterInstancesGetResponse = ProvisionedCluster;

/** Optional parameters. */
export interface ProvisionedClusterInstancesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ProvisionedClusterInstancesCreateOrUpdateResponse = ProvisionedCluster;

/** Optional parameters. */
export interface ProvisionedClusterInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ProvisionedClusterInstancesDeleteResponse = ProvisionedClusterInstancesDeleteHeaders;

/** Optional parameters. */
export interface ProvisionedClusterInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProvisionedClusterInstancesListResponse = ProvisionedClusterListResult;

/** Optional parameters. */
export interface ProvisionedClusterInstancesGetUpgradeProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpgradeProfile operation. */
export type ProvisionedClusterInstancesGetUpgradeProfileResponse = ProvisionedClusterUpgradeProfile;

/** Optional parameters. */
export interface ProvisionedClusterInstancesListUserKubeconfigOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listUserKubeconfig operation. */
export type ProvisionedClusterInstancesListUserKubeconfigResponse = ListCredentialResponse;

/** Optional parameters. */
export interface ProvisionedClusterInstancesListAdminKubeconfigOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listAdminKubeconfig operation. */
export type ProvisionedClusterInstancesListAdminKubeconfigResponse = ListCredentialResponse;

/** Optional parameters. */
export interface ProvisionedClusterInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProvisionedClusterInstancesListNextResponse = ProvisionedClusterListResult;

/** Optional parameters. */
export interface HybridIdentityMetadataPutOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the put operation. */
export type HybridIdentityMetadataPutResponse = HybridIdentityMetadata;

/** Optional parameters. */
export interface HybridIdentityMetadataGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type HybridIdentityMetadataGetResponse = HybridIdentityMetadata;

/** Optional parameters. */
export interface HybridIdentityMetadataDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type HybridIdentityMetadataDeleteResponse = HybridIdentityMetadataDeleteHeaders;

/** Optional parameters. */
export interface HybridIdentityMetadataListByClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCluster operation. */
export type HybridIdentityMetadataListByClusterResponse = HybridIdentityMetadataList;

/** Optional parameters. */
export interface HybridIdentityMetadataListByClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByClusterNext operation. */
export type HybridIdentityMetadataListByClusterNextResponse = HybridIdentityMetadataList;

/** Optional parameters. */
export interface AgentPoolGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AgentPoolGetResponse = AgentPool;

/** Optional parameters. */
export interface AgentPoolCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AgentPoolCreateOrUpdateResponse = AgentPool;

/** Optional parameters. */
export interface AgentPoolDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AgentPoolDeleteResponse = AgentPoolDeleteHeaders;

/** Optional parameters. */
export interface AgentPoolListByProvisionedClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProvisionedCluster operation. */
export type AgentPoolListByProvisionedClusterResponse = AgentPoolListResult;

/** Optional parameters. */
export interface AgentPoolListByProvisionedClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProvisionedClusterNext operation. */
export type AgentPoolListByProvisionedClusterNextResponse = AgentPoolListResult;

/** Optional parameters. */
export interface GetKubernetesVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getKubernetesVersions operation. */
export type GetKubernetesVersionsResponse = KubernetesVersionProfile;

/** Optional parameters. */
export interface PutKubernetesVersionsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the putKubernetesVersions operation. */
export type PutKubernetesVersionsResponse = KubernetesVersionProfile;

/** Optional parameters. */
export interface DeleteKubernetesVersionsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the deleteKubernetesVersions operation. */
export type DeleteKubernetesVersionsResponse = HybridContainerServiceClientDeleteKubernetesVersionsHeaders;

/** Optional parameters. */
export interface GetVMSkusOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the getVMSkus operation. */
export type GetVMSkusResponse = VmSkuProfile;

/** Optional parameters. */
export interface PutVMSkusOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the putVMSkus operation. */
export type PutVMSkusResponse = VmSkuProfile;

/** Optional parameters. */
export interface DeleteVMSkusOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the deleteVMSkus operation. */
export type DeleteVMSkusResponse = HybridContainerServiceClientDeleteVMSkusHeaders;

/** Optional parameters. */
export interface KubernetesVersionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type KubernetesVersionsListResponse = KubernetesVersionProfileList;

/** Optional parameters. */
export interface KubernetesVersionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type KubernetesVersionsListNextResponse = KubernetesVersionProfileList;

/** Optional parameters. */
export interface VMSkusListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type VMSkusListResponse = VmSkuProfileList;

/** Optional parameters. */
export interface VMSkusListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type VMSkusListNextResponse = VmSkuProfileList;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface VirtualNetworksRetrieveOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the retrieve operation. */
export type VirtualNetworksRetrieveResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualNetworksCreateOrUpdateResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type VirtualNetworksDeleteResponse = VirtualNetworksDeleteHeaders;

/** Optional parameters. */
export interface VirtualNetworksUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VirtualNetworksUpdateResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type VirtualNetworksListByResourceGroupResponse = VirtualNetworksListResult;

/** Optional parameters. */
export interface VirtualNetworksListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type VirtualNetworksListBySubscriptionResponse = VirtualNetworksListResult;

/** Optional parameters. */
export interface VirtualNetworksListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type VirtualNetworksListByResourceGroupNextResponse = VirtualNetworksListResult;

/** Optional parameters. */
export interface VirtualNetworksListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type VirtualNetworksListBySubscriptionNextResponse = VirtualNetworksListResult;

/** Optional parameters. */
export interface HybridContainerServiceClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
