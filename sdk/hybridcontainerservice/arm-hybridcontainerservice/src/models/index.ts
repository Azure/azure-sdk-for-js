/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** All properties of the provisioned cluster */
export interface ProvisionedClusterProperties {
  /** LinuxProfile - The profile for Linux VMs in the Provisioned Cluster. */
  linuxProfile?: LinuxProfileProperties;
  /** ControlPlane - ControlPlane Configuration */
  controlPlane?: ControlPlaneProfile;
  /** KubernetesVersion - Version of Kubernetes specified when creating the managed cluster. */
  kubernetesVersion?: string;
  /** NetworkProfile - Profile of network configuration. */
  networkProfile?: NetworkProfile;
  /** The agent pools of the cluster. */
  agentPoolProfiles?: NamedAgentPoolProfile[];
  /** The underlying cloud infra provider properties. */
  cloudProviderProfile?: CloudProviderProfile;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /**
   * HybridAKSClusterStatus defines the observed state of HybridAKSCluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ProvisionedClusterPropertiesStatus;
  /** The license profile of the provisioned cluster. */
  licenseProfile?: ProvisionedClusterLicenseProfile;
}

/** LinuxProfile - Profile for Linux VMs in the container service cluster. */
export interface LinuxProfileProperties {
  /** SSH - SSH configuration for Linux-based VMs running on Azure. */
  ssh?: LinuxProfilePropertiesSsh;
}

/** SSH - SSH configuration for Linux-based VMs running on Azure. */
export interface LinuxProfilePropertiesSsh {
  /** PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified. */
  publicKeys?: LinuxProfilePropertiesSshPublicKeysItem[];
}

export interface LinuxProfilePropertiesSshPublicKeysItem {
  /** KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers. */
  keyData?: string;
}

/** AgentPool configuration */
export interface AgentPoolProfile {
  /** AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones */
  availabilityZones?: string[];
  /** The particular KubernetesVersion's Image's OS Type (Linux, Windows) */
  osType?: OsType;
  /** Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows. */
  osSKU?: Ossku;
  /** The version of node image */
  nodeImageVersion?: string;
}

/** AgentPool update configuration */
export interface AgentPoolUpdateProfile {
  /** Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. */
  count?: number;
  /** VmSize - The size of the agent pool VMs. */
  vmSize?: string;
}

/** AgentPool Name */
export interface AgentPoolName {
  /** Unique name of the agent pool profile in the context of the subscription and resource group. */
  name?: string;
}

/** controlPlaneEndpoint - API server endpoint for the control plane */
export interface ControlPlaneEndpointProfile {
  /** API server endpoint for the control plane */
  controlPlaneEndpoint?: ControlPlaneEndpointProfileControlPlaneEndpoint;
}

/** API server endpoint for the control plane */
export interface ControlPlaneEndpointProfileControlPlaneEndpoint {
  /** Host IP address for API server */
  hostIP?: string;
  /** Port for the API server */
  port?: number;
}

/** LinuxProfile - Profile for Linux VMs in the container service cluster. */
export interface LinuxProfile {
  /** Profile for Linux VMs in the container service cluster. */
  linuxProfile?: LinuxProfileProperties;
}

/** NetworkProfile - Profile of network configuration. */
export interface NetworkProfile {
  /** LoadBalancerProfile - Profile of the cluster load balancer. */
  loadBalancerProfile?: NetworkProfileLoadBalancerProfile;
  /** NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico' */
  networkPolicy?: NetworkPolicy;
  /** PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used. */
  podCidr?: string;
}

/** LoadBalancerProfile - Profile of the cluster load balancer. */
export interface NetworkProfileLoadBalancerProfile {
  /** Count - Number of load balancer VMs. The default value is 0. */
  count?: number;
}

/** CloudProviderProfile - The underlying cloud infra provider properties. */
export interface CloudProviderProfile {
  /** InfraNetworkProfile - List of infra network profiles for the provisioned cluster */
  infraNetworkProfile?: CloudProviderProfileInfraNetworkProfile;
}

/** InfraNetworkProfile - List of infra network profiles for the provisioned cluster */
export interface CloudProviderProfileInfraNetworkProfile {
  /** Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName} */
  vnetSubnetIds?: string[];
}

/** HybridAKSClusterStatus defines the observed state of HybridAKSCluster */
export interface ProvisionedClusterPropertiesStatus {
  /** Status of the control plane components */
  controlPlaneStatus?: AddonStatusProfile[];
  /** ErrorMessage - Error messages during creation of cluster */
  errorMessage?: string;
  /** Contains Provisioning errors */
  operationStatus?: ProvisionedClusterPropertiesStatusOperationStatus;
}

/** Defines the addon status profile. */
export interface AddonStatusProfile {
  /** Name of the addon */
  name?: string;
  /** Observed phase of the addon on the target cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading' */
  phase?: AddonPhase;
  /** Indicates whether the addon is ready */
  ready?: boolean;
  /** Error message while deploying the addon */
  errorMessage?: string;
}

/** Contains Provisioning errors */
export interface ProvisionedClusterPropertiesStatusOperationStatus {
  error?: ProvisionedClusterPropertiesStatusOperationStatusError;
  operationId?: string;
  status?: string;
}

export interface ProvisionedClusterPropertiesStatusOperationStatusError {
  code?: string;
  message?: string;
}

/** The license profile of the provisioned cluster. */
export interface ProvisionedClusterLicenseProfile {
  /** Indicates whether Azure Hybrid Benefit is opted in */
  azureHybridBenefit?: AzureHybridBenefit;
}

/** Extended Location definition */
export interface ExtendedLocation {
  /** The extended location type. */
  type?: ExtendedLocationTypes;
  /** The extended location name. */
  name?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** A list of provisioned clusters resources. */
export interface ProvisionedClustersListResult {
  value?: ProvisionedClusters[];
  nextLink?: string;
}

/** The list of available upgrade versions. */
export interface ProvisionedClusterPoolUpgradeProfile {
  /**
   * The Kubernetes version (major.minor.patch).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubernetesVersion?: string;
  /**
   * The Agent Pool name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The particular KubernetesVersion's Image's OS Type (Linux, Windows)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OsType;
  /** List of orchestrator types and versions available for upgrade. */
  upgrades?: ProvisionedClusterPoolUpgradeProfileProperties[];
}

/** The upgrade properties. */
export interface ProvisionedClusterPoolUpgradeProfileProperties {
  /**
   * The Kubernetes version (major.minor.patch).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubernetesVersion?: string;
  /**
   * Whether the Kubernetes version is currently in preview.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isPreview?: boolean;
}

/** List of hybridIdentityMetadata. */
export interface HybridIdentityMetadataList {
  /** Url to follow for getting next page of hybridIdentityMetadata. */
  nextLink?: string;
  /** Array of hybridIdentityMetadata */
  value: HybridIdentityMetadata[];
}

/** The agentPool resource definition */
export interface AgentPool {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource Type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** The resource location */
  location?: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Extended Location definition */
  extendedLocation?: ExtendedLocation;
  /** AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones */
  availabilityZones?: string[];
  /** The particular KubernetesVersion's Image's OS Type (Linux, Windows) */
  osType?: OsType;
  /** Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows. */
  osSKU?: Ossku;
  /** The version of node image */
  nodeImageVersion?: string;
  /** Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. */
  count?: number;
  /** VmSize - The size of the agent pool VMs. */
  vmSize?: string;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** Defines the observed state of the agent pool */
  status?: AgentPoolProvisioningStatusStatus;
}

/** The agentPool resource provisioning status definition */
export interface AgentPoolProvisioningStatus {
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** Defines the observed state of the agent pool */
  status?: AgentPoolProvisioningStatusStatus;
}

/** Defines the observed state of the agent pool */
export interface AgentPoolProvisioningStatusStatus {
  /** ErrorMessage - Error messages during creation of agent pool */
  errorMessage?: string;
  /** Contains Provisioning errors */
  operationStatus?: AgentPoolProvisioningStatusOperationStatus;
  readyReplicas?: AgentPoolUpdateProfile[];
}

/** Contains Provisioning errors */
export interface AgentPoolProvisioningStatusOperationStatus {
  error?: AgentPoolProvisioningStatusOperationStatusError;
  operationId?: string;
  status?: string;
}

export interface AgentPoolProvisioningStatusOperationStatusError {
  code?: string;
  message?: string;
}

/** The agentPool resource patch definition */
export interface AgentPoolPatch {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** A list of agent pool resources. */
export interface AgentPoolListResult {
  value?: AgentPool[];
  nextLink?: string;
}

/** The list kubeconfig result response. */
export interface ListCredentialResponse {
  /**
   * Operation Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Operation Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * ARM Resource Id of the provisioned cluster instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ResourceProvisioningState;
  error?: ListCredentialResponseError;
  properties?: ListCredentialResponseProperties;
}

export interface ListCredentialResponseError {
  code?: string;
  message?: string;
}

export interface ListCredentialResponseProperties {
  /**
   * Base64-encoded Kubernetes configuration file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kubeconfigs?: CredentialResult[];
}

/** The credential result response. */
export interface CredentialResult {
  /**
   * The name of the credential.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Base64-encoded Kubernetes configuration file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Uint8Array;
}

export interface KubernetesVersionProfileProperties {
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** List of supported Kubernetes versions */
  values?: KubernetesVersionProperties[];
}

/** Kubernetes version profile for given major.minor release */
export interface KubernetesVersionProperties {
  /**
   * major.minor version of Kubernetes release
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * Capabilities on this kubernetes version
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: KubernetesVersionCapabilities;
  /**
   * Whether this version is in preview mode.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isPreview?: boolean;
  /**
   * Patch versions of a Kubernetes release
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly patchVersions?: { [propertyName: string]: KubernetesPatchVersions };
}

/** Capabilities on this kubernetes version */
export interface KubernetesVersionCapabilities {
  supportPlan?: string[];
}

/** Kubernetes Patch Version profile */
export interface KubernetesPatchVersions {
  /** Whether the kubernetes version variant (Linux, Windows, Windows2022) is ready or not */
  readiness?: KubernetesVersionReadiness[];
  /** Possible upgrade path for given patch version */
  upgrades?: string[];
}

/** Whether a particular kubernetes version's variant (CBLMariner, Windows, Windows2022) is ready or not */
export interface KubernetesVersionReadiness {
  /**
   * The particular KubernetesVersion's Image's OS Type (Linux, Windows)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: OsType;
  /** Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows. */
  osSku?: Ossku;
  /**
   * Whether or not the given image is ready
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ready?: boolean;
  /**
   * If image is not ready, the error message for version not being ready
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
}

/** A list of kubernetes version resources. */
export interface KubernetesVersionProfileList {
  value?: KubernetesVersionProfile[];
  nextLink?: string;
}

export interface VmSkuProfileProperties {
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** Array of HybridAKS Support VM Skus */
  values?: VmSkuProperties[];
}

/** The profile for supported VM skus */
export interface VmSkuProperties {
  /**
   * The resource type of the vm
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * A name value pair to describe the specific vm's capability
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: VmSkuCapabilities[];
  /**
   * The name of the VM Family
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The tier of the VM Family
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tier?: string;
  /**
   * The size of the VM Family
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly size?: string;
}

/** describes the vm sku capabilities object */
export interface VmSkuCapabilities {
  /**
   * An invariant to describe the feature
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * An invariant if the feature is measured by quantity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** A list of VM SKU resources. */
export interface VmSkuProfileList {
  value?: VmSkuProfile[];
  nextLink?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork */
export interface VirtualNetworkProperties {
  infraVnetProfile?: VirtualNetworkPropertiesInfraVnetProfile;
  /** Virtual IP Pool for Kubernetes */
  vipPool?: VirtualNetworkPropertiesVipPoolItem[];
  /** IP Pool for Virtual Machines */
  vmipPool?: VirtualNetworkPropertiesVmipPoolItem[];
  /** Address of the DHCP servers associated with the network */
  dhcpServers?: string[];
  /** Address of the DNS servers associated with the network */
  dnsServers?: string[];
  /** Address of the Gateway associated with the network */
  gateway?: string;
  /** IP Address Prefix of the network */
  ipAddressPrefix?: string;
  /** VLAN Id used by the network */
  vlanID?: number;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly provisioningState?: ProvisioningState;
  /**
   * HybridAKSNetworkStatus defines the observed state of HybridAKSNetwork
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: VirtualNetworkPropertiesStatus;
}

export interface VirtualNetworkPropertiesInfraVnetProfile {
  /** Infra network profile for HCI platform */
  hci?: VirtualNetworkPropertiesInfraVnetProfileHci;
  /** Infra network profile for VMware platform */
  vmware?: VirtualNetworkPropertiesInfraVnetProfileVmware;
}

/** Infra network profile for HCI platform */
export interface VirtualNetworkPropertiesInfraVnetProfileHci {
  /** Resource group in MOC(Microsoft On-premises Cloud) */
  mocGroup?: string;
  /** Location in MOC(Microsoft On-premises Cloud) */
  mocLocation?: string;
  /** Virtual Network name in MOC(Microsoft On-premises Cloud) */
  mocVnetName?: string;
}

/** Infra network profile for VMware platform */
export interface VirtualNetworkPropertiesInfraVnetProfileVmware {
  /** Name of the network segment in VSphere */
  segmentName?: string;
}

export interface VirtualNetworkPropertiesVipPoolItem {
  /** Ending IP address for the IP Pool */
  endIP?: string;
  /** Starting IP address for the IP Pool */
  startIP?: string;
}

export interface VirtualNetworkPropertiesVmipPoolItem {
  /** Ending IP address for the IP Pool */
  endIP?: string;
  /** Starting IP address for the IP Pool */
  startIP?: string;
}

/** HybridAKSNetworkStatus defines the observed state of HybridAKSNetwork */
export interface VirtualNetworkPropertiesStatus {
  /** Contains Provisioning errors */
  operationStatus?: VirtualNetworkPropertiesStatusOperationStatus;
}

/** Contains Provisioning errors */
export interface VirtualNetworkPropertiesStatusOperationStatus {
  error?: VirtualNetworkPropertiesStatusOperationStatusError;
  operationId?: string;
  /** Phase represents the current phase of the virtual network provisioning. E.g. Pending, Running, Terminating, Failed etc. */
  phase?: string;
  status?: string;
}

export interface VirtualNetworkPropertiesStatusOperationStatusError {
  code?: string;
  message?: string;
}

export interface VirtualNetworkExtendedLocation {
  /** The extended location type. */
  type?: string;
  /** The extended location name. */
  name?: string;
}

/** The virtualNetworks resource patch definition. */
export interface VirtualNetworksPatch {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

export interface VirtualNetworksListResult {
  value?: VirtualNetwork[];
  nextLink?: string;
}

/** Agent pool profile along with a name parameter */
export interface NamedAgentPoolProfile
  extends AgentPoolProfile,
    AgentPoolUpdateProfile,
    AgentPoolName {}

export interface AgentPoolProperties
  extends AgentPoolProfile,
    AgentPoolUpdateProfile,
    AgentPoolProvisioningStatus {}

/** ControlPlaneProfile - The control plane properties for the provisioned cluster. */
export interface ControlPlaneProfile
  extends NamedAgentPoolProfile,
    ControlPlaneEndpointProfile,
    LinuxProfile {}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The provisionedClusterInstances resource definition. */
export interface ProvisionedClusters extends ProxyResource {
  /** All properties of the provisioned cluster */
  properties?: ProvisionedClusterProperties;
  /** Extended Location definition */
  extendedLocation?: ExtendedLocation;
}

/** The list of available upgrades for compute pools. */
export interface ProvisionedClusterUpgradeProfile extends ProxyResource {
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
  /** The list of available upgrade versions for the control plane. */
  controlPlaneProfile: ProvisionedClusterPoolUpgradeProfile;
  /** The list of available upgrade versions for agent pools. */
  agentPoolProfiles: ProvisionedClusterPoolUpgradeProfile[];
}

/** Defines the hybridIdentityMetadata. */
export interface HybridIdentityMetadata extends ProxyResource {
  /** Unique id of the parent provisioned cluster resource. */
  resourceUid?: string;
  /** Onboarding public key for provisioning the Managed identity for the HybridAKS cluster. */
  publicKey?: string;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** The supported kubernetes versions. */
export interface KubernetesVersionProfile extends ProxyResource {
  /** Extended Location definition */
  extendedLocation?: ExtendedLocation;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly properties?: KubernetesVersionProfileProperties;
}

/** The list of supported VM SKUs. */
export interface VmSkuProfile extends ProxyResource {
  /** Extended Location definition */
  extendedLocation?: ExtendedLocation;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly properties?: VmSkuProfileProperties;
}

/** The virtualNetworks resource definition. */
export interface VirtualNetwork extends TrackedResource {
  /** HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork */
  properties?: VirtualNetworkProperties;
  extendedLocation?: VirtualNetworkExtendedLocation;
}

/** Defines headers for ProvisionedClusterInstances_delete operation. */
export interface ProvisionedClusterInstancesDeleteHeaders {
  location?: string;
}

/** Defines headers for ProvisionedClusterInstances_listUserKubeconfig operation. */
export interface ProvisionedClusterInstancesListUserKubeconfigHeaders {
  location?: string;
}

/** Defines headers for ProvisionedClusterInstances_listAdminKubeconfig operation. */
export interface ProvisionedClusterInstancesListAdminKubeconfigHeaders {
  location?: string;
}

/** Defines headers for HybridIdentityMetadata_delete operation. */
export interface HybridIdentityMetadataDeleteHeaders {
  location?: string;
}

/** Defines headers for AgentPool_delete operation. */
export interface AgentPoolDeleteHeaders {
  location?: string;
}

/** Defines headers for AgentPool_update operation. */
export interface AgentPoolUpdateHeaders {
  location?: string;
}

/** Defines headers for HybridContainerServiceClient_deleteKubernetesVersions operation. */
export interface HybridContainerServiceClientDeleteKubernetesVersionsHeaders {
  location?: string;
}

/** Defines headers for HybridContainerServiceClient_deleteVMSkus operation. */
export interface HybridContainerServiceClientDeleteVMSkusHeaders {
  location?: string;
}

/** Defines headers for VirtualNetworks_delete operation. */
export interface VirtualNetworksDeleteHeaders {
  location?: string;
}

/** Defines headers for VirtualNetworks_update operation. */
export interface VirtualNetworksUpdateHeaders {
  location?: string;
}

/** Known values of {@link OsType} that the service accepts. */
export enum KnownOsType {
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux"
}

/**
 * Defines values for OsType. \
 * {@link KnownOsType} can be used interchangeably with OsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Windows** \
 * **Linux**
 */
export type OsType = string;

/** Known values of {@link Ossku} that the service accepts. */
export enum KnownOssku {
  /** Use Mariner as the OS for node images. */
  CBLMariner = "CBLMariner",
  /** Use Windows2019 as the OS for node images. */
  Windows2019 = "Windows2019",
  /** Use Windows2022 as the OS for node images. */
  Windows2022 = "Windows2022"
}

/**
 * Defines values for Ossku. \
 * {@link KnownOssku} can be used interchangeably with Ossku,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CBLMariner**: Use Mariner as the OS for node images. \
 * **Windows2019**: Use Windows2019 as the OS for node images. \
 * **Windows2022**: Use Windows2022 as the OS for node images.
 */
export type Ossku = string;

/** Known values of {@link NetworkPolicy} that the service accepts. */
export enum KnownNetworkPolicy {
  /** Calico */
  Calico = "calico",
  /** Flannel */
  Flannel = "flannel"
}

/**
 * Defines values for NetworkPolicy. \
 * {@link KnownNetworkPolicy} can be used interchangeably with NetworkPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **calico** \
 * **flannel**
 */
export type NetworkPolicy = string;

/** Known values of {@link ResourceProvisioningState} that the service accepts. */
export enum KnownResourceProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Updating */
  Updating = "Updating",
  /** Upgrading */
  Upgrading = "Upgrading",
  /** InProgress */
  InProgress = "InProgress",
  /** Accepted */
  Accepted = "Accepted",
  /** Created */
  Created = "Created"
}

/**
 * Defines values for ResourceProvisioningState. \
 * {@link KnownResourceProvisioningState} can be used interchangeably with ResourceProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Creating** \
 * **Deleting** \
 * **Updating** \
 * **Upgrading** \
 * **InProgress** \
 * **Accepted** \
 * **Created**
 */
export type ResourceProvisioningState = string;

/** Known values of {@link AddonPhase} that the service accepts. */
export enum KnownAddonPhase {
  /** Pending */
  Pending = "pending",
  /** Provisioning */
  Provisioning = "provisioning",
  /** ProvisioningHelmChartInstalled */
  ProvisioningHelmChartInstalled = "provisioning {HelmChartInstalled}",
  /** ProvisioningMSICertificateDownloaded */
  ProvisioningMSICertificateDownloaded = "provisioning {MSICertificateDownloaded}",
  /** Provisioned */
  Provisioned = "provisioned",
  /** Deleting */
  Deleting = "deleting",
  /** Failed */
  Failed = "failed",
  /** Upgrading */
  Upgrading = "upgrading"
}

/**
 * Defines values for AddonPhase. \
 * {@link KnownAddonPhase} can be used interchangeably with AddonPhase,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **pending** \
 * **provisioning** \
 * **provisioning {HelmChartInstalled}** \
 * **provisioning {MSICertificateDownloaded}** \
 * **provisioned** \
 * **deleting** \
 * **failed** \
 * **upgrading**
 */
export type AddonPhase = string;

/** Known values of {@link AzureHybridBenefit} that the service accepts. */
export enum KnownAzureHybridBenefit {
  /** True */
  True = "True",
  /** False */
  False = "False",
  /** NotApplicable */
  NotApplicable = "NotApplicable"
}

/**
 * Defines values for AzureHybridBenefit. \
 * {@link KnownAzureHybridBenefit} can be used interchangeably with AzureHybridBenefit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **True** \
 * **False** \
 * **NotApplicable**
 */
export type AzureHybridBenefit = string;

/** Known values of {@link ExtendedLocationTypes} that the service accepts. */
export enum KnownExtendedLocationTypes {
  /** CustomLocation */
  CustomLocation = "CustomLocation"
}

/**
 * Defines values for ExtendedLocationTypes. \
 * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CustomLocation**
 */
export type ExtendedLocationTypes = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** InProgress */
  InProgress = "InProgress",
  /** Deleting */
  Deleting = "Deleting",
  /** Updating */
  Updating = "Updating",
  /** Accepted */
  Accepted = "Accepted",
  /** Created */
  Created = "Created"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **InProgress** \
 * **Deleting** \
 * **Updating** \
 * **Accepted** \
 * **Created**
 */
export type ProvisioningState = string;

/** Optional parameters. */
export interface ProvisionedClusterInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProvisionedClusterInstancesGetResponse = ProvisionedClusters;

/** Optional parameters. */
export interface ProvisionedClusterInstancesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ProvisionedClusterInstancesCreateOrUpdateResponse = ProvisionedClusters;

/** Optional parameters. */
export interface ProvisionedClusterInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ProvisionedClusterInstancesDeleteResponse = ProvisionedClusterInstancesDeleteHeaders;

/** Optional parameters. */
export interface ProvisionedClusterInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProvisionedClusterInstancesListResponse = ProvisionedClustersListResult;

/** Optional parameters. */
export interface ProvisionedClusterInstancesGetUpgradeProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getUpgradeProfile operation. */
export type ProvisionedClusterInstancesGetUpgradeProfileResponse = ProvisionedClusterUpgradeProfile;

/** Optional parameters. */
export interface ProvisionedClusterInstancesListUserKubeconfigOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listUserKubeconfig operation. */
export type ProvisionedClusterInstancesListUserKubeconfigResponse = ListCredentialResponse;

/** Optional parameters. */
export interface ProvisionedClusterInstancesListAdminKubeconfigOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listAdminKubeconfig operation. */
export type ProvisionedClusterInstancesListAdminKubeconfigResponse = ListCredentialResponse;

/** Optional parameters. */
export interface ProvisionedClusterInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProvisionedClusterInstancesListNextResponse = ProvisionedClustersListResult;

/** Optional parameters. */
export interface HybridIdentityMetadataPutOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the put operation. */
export type HybridIdentityMetadataPutResponse = HybridIdentityMetadata;

/** Optional parameters. */
export interface HybridIdentityMetadataGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type HybridIdentityMetadataGetResponse = HybridIdentityMetadata;

/** Optional parameters. */
export interface HybridIdentityMetadataDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type HybridIdentityMetadataDeleteResponse = HybridIdentityMetadataDeleteHeaders;

/** Optional parameters. */
export interface HybridIdentityMetadataListByClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCluster operation. */
export type HybridIdentityMetadataListByClusterResponse = HybridIdentityMetadataList;

/** Optional parameters. */
export interface HybridIdentityMetadataListByClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByClusterNext operation. */
export type HybridIdentityMetadataListByClusterNextResponse = HybridIdentityMetadataList;

/** Optional parameters. */
export interface AgentPoolGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AgentPoolGetResponse = AgentPool;

/** Optional parameters. */
export interface AgentPoolCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AgentPoolCreateOrUpdateResponse = AgentPool;

/** Optional parameters. */
export interface AgentPoolDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AgentPoolDeleteResponse = AgentPoolDeleteHeaders;

/** Optional parameters. */
export interface AgentPoolUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AgentPoolUpdateResponse = AgentPool;

/** Optional parameters. */
export interface AgentPoolListByProvisionedClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProvisionedCluster operation. */
export type AgentPoolListByProvisionedClusterResponse = AgentPoolListResult;

/** Optional parameters. */
export interface GetKubernetesVersionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getKubernetesVersions operation. */
export type GetKubernetesVersionsResponse = KubernetesVersionProfile;

/** Optional parameters. */
export interface PutKubernetesVersionsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the putKubernetesVersions operation. */
export type PutKubernetesVersionsResponse = KubernetesVersionProfile;

/** Optional parameters. */
export interface DeleteKubernetesVersionsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the deleteKubernetesVersions operation. */
export type DeleteKubernetesVersionsResponse = HybridContainerServiceClientDeleteKubernetesVersionsHeaders;

/** Optional parameters. */
export interface GetVMSkusOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the getVMSkus operation. */
export type GetVMSkusResponse = VmSkuProfile;

/** Optional parameters. */
export interface PutVMSkusOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the putVMSkus operation. */
export type PutVMSkusResponse = VmSkuProfile;

/** Optional parameters. */
export interface DeleteVMSkusOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the deleteVMSkus operation. */
export type DeleteVMSkusResponse = HybridContainerServiceClientDeleteVMSkusHeaders;

/** Optional parameters. */
export interface KubernetesVersionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type KubernetesVersionsListResponse = KubernetesVersionProfileList;

/** Optional parameters. */
export interface KubernetesVersionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type KubernetesVersionsListNextResponse = KubernetesVersionProfileList;

/** Optional parameters. */
export interface VMSkusListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type VMSkusListResponse = VmSkuProfileList;

/** Optional parameters. */
export interface VMSkusListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type VMSkusListNextResponse = VmSkuProfileList;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface VirtualNetworksRetrieveOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the retrieve operation. */
export type VirtualNetworksRetrieveResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualNetworksCreateOrUpdateResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type VirtualNetworksDeleteResponse = VirtualNetworksDeleteHeaders;

/** Optional parameters. */
export interface VirtualNetworksUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VirtualNetworksUpdateResponse = VirtualNetwork;

/** Optional parameters. */
export interface VirtualNetworksListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type VirtualNetworksListByResourceGroupResponse = VirtualNetworksListResult;

/** Optional parameters. */
export interface VirtualNetworksListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type VirtualNetworksListBySubscriptionResponse = VirtualNetworksListResult;

/** Optional parameters. */
export interface VirtualNetworksListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type VirtualNetworksListByResourceGroupNextResponse = VirtualNetworksListResult;

/** Optional parameters. */
export interface VirtualNetworksListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type VirtualNetworksListBySubscriptionNextResponse = VirtualNetworksListResult;

/** Optional parameters. */
export interface HybridContainerServiceClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
