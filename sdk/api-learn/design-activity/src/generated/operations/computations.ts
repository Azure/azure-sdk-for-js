/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { GeneratedClient } from "../generatedClient";
import {
  ComputationsComputePiOptionalParams,
  ComputationsComputePiResponse
} from "../models";

/**
 * Class representing a Computations.
 */
export class Computations {
  private readonly client: GeneratedClient;

  /**
   * Initialize a new instance of the class Computations class.
   * @param client Reference to the service client
   */
  constructor(client: GeneratedClient) {
    this.client = client;
  }

  /**
   * @param nodeName
   * @param options The options parameters.
   */
  computePi(
    nodeName: string,
    options?: ComputationsComputePiOptionalParams
  ): Promise<ComputationsComputePiResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { nodeName, options: operationOptions },
      computePiOperationSpec
    ) as Promise<ComputationsComputePiResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const computePiOperationSpec: coreHttp.OperationSpec = {
  path: "/ComputeNodes/{nodeName}/computePi",
  httpMethod: "POST",
  responses: {
    202: {
      headersMapper: Mappers.ComputationsComputePiHeaders
    }
  },
  queryParameters: [Parameters.precision],
  urlParameters: [Parameters.$host, Parameters.nodeName],
  headerParameters: [Parameters.xMsClientRequestId],
  serializer
};
