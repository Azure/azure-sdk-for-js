{"version":3,"file":"modelMetadata.js","sourceRoot":"","sources":["../../src/modelMetadata.ts"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,qGAAqG;AAErG,YAAY,CAAA;;;AAIZ,SAAS,KAAK,CAAE,KAAW;IACzB,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAA;IAC9B,OAAO,SAAS,CAAA;AAClB,CAAC;AAED,SAAS,UAAU,CAAE,KAAW;IAC9B,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAA;IACnC,OAAO,aAAa,CAAA;AACtB,CAAC;AAED,SAAS,mBAAmB,CAAE,KAAW;IACvC,MAAM,gBAAgB,GAAa,EAAE,CAAA;IACrC,IAAI,KAAK,CAAC,QAAQ,EAAE;QAClB,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAA;QAC/B,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC3B,IAAI,OAAO,CAAC,OAAO,CAAC;gBACd,CAAC,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC;gBACtC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,WAAW,CAAC,EAAE;gBACxC,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;oBACxD,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;iBACtC;aACF;QACH,CAAC,CAAC,CAAA;KACH;IACD,OAAO,gBAAgB,CAAA;AACzB,CAAC;AAED,SAAgB,gBAAgB,CAAE,KAAW;IAC3C,MAAM,SAAS,GAAW,KAAK,CAAC,KAAK,CAAC,CAAA;IACtC,MAAM,cAAc,GAAW,UAAU,CAAC,KAAK,CAAC,CAAA;IAChD,MAAM,gBAAgB,GAAa,mBAAmB,CAAC,KAAK,CAAC,CAAA;IAC7D,OAAO;QACL,EAAE,EAAE,SAAS;QACb,OAAO,EAAE,cAAc;QACvB,gBAAgB,EAAE,gBAAgB;KACnC,CAAA;AACH,CAAC;AATD,4CASC","sourcesContent":["// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\r\n\r\n'use strict'\r\n\r\nimport { DTDL } from './DTDL'\r\n\r\nfunction getId (input: DTDL): string {\r\n  const idElement = input['@id']\r\n  return idElement\r\n}\r\n\r\nfunction getExtends (input: DTDL): string {\r\n  const extendElement = input.extends\r\n  return extendElement\r\n}\r\n\r\nfunction getComponentSchemas (input: DTDL): string[] {\r\n  const componentSchemas: string[] = []\r\n  if (input.contents) {\r\n    const contents = input.contents\r\n    contents.forEach((element) => {\r\n      if (element['@type'] &&\r\n            (typeof element['@type'] === 'string') &&\r\n            (element['@type'] === 'Component')) {\r\n        if (element.schema && typeof element.schema === 'string') {\r\n          componentSchemas.push(element.schema)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return componentSchemas\r\n}\r\n\r\nexport function getModelMetadata (input: DTDL) {\r\n  const idElement: string = getId(input)\r\n  const extendsElement: string = getExtends(input)\r\n  const componentSchemas: string[] = getComponentSchemas(input)\r\n  return {\r\n    id: idElement,\r\n    extends: extendsElement,\r\n    componentSchemas: componentSchemas\r\n  }\n}\n"]}