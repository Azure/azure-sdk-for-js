{"version":3,"file":"browserTest.spec.js","sourceRoot":"","sources":["../../../test/browser/browserTest.spec.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAElC,uDAAgC;AAEhC,+BAA6B;AAC7B,qDAA8B;AAE9B,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,SAAS,CAAC,GAAG,EAAE;QACb,KAAK,CAAC,OAAO,EAAE,CAAA;IACjB,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,uCAAuC,EAAE,GAAG,EAAE;QACrD,EAAE,CAAC,IAAI,CAAC,8BAA8B,EAAE,UAAU,IAAI;YACpD,MAAM,IAAI,GAAW,iDAAiD,CAAA;YACtE,MAAM,QAAQ,GAAG,gCAAgC,CAAA;YACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC9B,QAAQ,EAAE,gBAAgB;aAC3B,CAAC,CAAA;YACF,MAAM,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;YACjD,aAAa,CAAC,IAAI,CAAC,CAAC,YAAiB,EAAE,EAAE;gBACvC,aAAM,CAAC,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,YAAY,CAAC,CAAA;gBACtE,IAAI,EAAE,CAAA;YACR,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QACnC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\nimport * as lib from '../../src'\r\n\r\nimport { assert } from 'chai'\r\nimport * as sinon from 'sinon'\r\n\r\ndescribe('resolver -  browser', () => {\r\n  afterEach(() => {\r\n    sinon.restore()\r\n  })\r\n\r\n  describe('single resolution (no pseudo-parsing)', () => {\r\n    it.only('integration works in browser', function (done) {\r\n      const dtmi: string = 'dtmi:azure:DeviceManagement:DeviceInformation;1'\r\n      const endpoint = 'https://devicemodels.azure.com'\r\n      const fakeData = JSON.stringify({\r\n        fakeDtdl: 'fakeBodyAsText'\r\n      })\r\n      const resolveResult = lib.resolve(dtmi, endpoint)\r\n      resolveResult.then((actualOutput: any) => {\r\n        assert.deepStrictEqual({ [dtmi]: JSON.parse(fakeData) }, actualOutput)\r\n        done()\r\n      }).catch((err: any) => done(err))\r\n    })\r\n  })\r\n})\n"]}