/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Extension: msRest.CompositeMapper = {
  serializedName: "Extension",
  type: {
    name: "Composite",
    className: "Extension",
    modelProperties: {
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      extensionId: {
        readOnly: true,
        serializedName: "properties.extensionId",
        constraints: {
          Pattern: /^[A-za-z]{3,50}[.][A-za-z]{3,100}$/
        },
        type: {
          name: "String"
        }
      },
      extensionCategory: {
        readOnly: true,
        serializedName: "properties.extensionCategory",
        type: {
          name: "String"
        }
      },
      installedExtensionVersion: {
        readOnly: true,
        serializedName: "properties.installedExtensionVersion",
        constraints: {
          Pattern: /^([1-9]|10).\d$/
        },
        type: {
          name: "String"
        }
      },
      extensionAuthLink: {
        readOnly: true,
        serializedName: "properties.extensionAuthLink",
        type: {
          name: "String"
        }
      },
      extensionApiDocsLink: {
        readOnly: true,
        serializedName: "properties.extensionApiDocsLink",
        type: {
          name: "String"
        }
      },
      eTag: {
        readOnly: true,
        serializedName: "eTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UnitSystemsInfo: msRest.CompositeMapper = {
  serializedName: "UnitSystemsInfo",
  type: {
    name: "Composite",
    className: "UnitSystemsInfo",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        constraints: {
          MaxLength: 100,
          MinLength: 2
        },
        type: {
          name: "String"
        }
      },
      values: {
        required: true,
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DetailedInformation: msRest.CompositeMapper = {
  serializedName: "DetailedInformation",
  type: {
    name: "Composite",
    className: "DetailedInformation",
    modelProperties: {
      apiName: {
        serializedName: "apiName",
        type: {
          name: "String"
        }
      },
      customParameters: {
        serializedName: "customParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      platformParameters: {
        serializedName: "platformParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      unitsSupported: {
        serializedName: "unitsSupported",
        type: {
          name: "Composite",
          className: "UnitSystemsInfo"
        }
      },
      apiInputParameters: {
        serializedName: "apiInputParameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const FarmBeatsExtension: msRest.CompositeMapper = {
  serializedName: "FarmBeatsExtension",
  type: {
    name: "Composite",
    className: "FarmBeatsExtension",
    modelProperties: {
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      targetResourceType: {
        readOnly: true,
        serializedName: "properties.targetResourceType",
        type: {
          name: "String"
        }
      },
      farmBeatsExtensionId: {
        readOnly: true,
        serializedName: "properties.farmBeatsExtensionId",
        constraints: {
          MaxLength: 100,
          MinLength: 2,
          Pattern: /^[A-za-z]{3,50}[.][A-za-z]{3,100}$/
        },
        type: {
          name: "String"
        }
      },
      farmBeatsExtensionName: {
        readOnly: true,
        serializedName: "properties.farmBeatsExtensionName",
        constraints: {
          MaxLength: 100,
          MinLength: 2
        },
        type: {
          name: "String"
        }
      },
      farmBeatsExtensionVersion: {
        readOnly: true,
        serializedName: "properties.farmBeatsExtensionVersion",
        constraints: {
          MaxLength: 100,
          MinLength: 2,
          Pattern: /^([1-9]|10).\d$/
        },
        type: {
          name: "String"
        }
      },
      publisherId: {
        readOnly: true,
        serializedName: "properties.publisherId",
        constraints: {
          MaxLength: 100,
          MinLength: 2
        },
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        constraints: {
          MaxLength: 500,
          MinLength: 2
        },
        type: {
          name: "String"
        }
      },
      extensionCategory: {
        readOnly: true,
        serializedName: "properties.extensionCategory",
        constraints: {
          MaxLength: 100,
          MinLength: 2
        },
        type: {
          name: "String"
        }
      },
      extensionAuthLink: {
        readOnly: true,
        serializedName: "properties.extensionAuthLink",
        type: {
          name: "String"
        }
      },
      extensionApiDocsLink: {
        readOnly: true,
        serializedName: "properties.extensionApiDocsLink",
        type: {
          name: "String"
        }
      },
      detailedInformation: {
        readOnly: true,
        serializedName: "properties.detailedInformation",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DetailedInformation"
            }
          }
        }
      }
    }
  }
};

export const FarmBeats: msRest.CompositeMapper = {
  serializedName: "FarmBeats",
  type: {
    name: "Composite",
    className: "FarmBeats",
    modelProperties: {
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      instanceUri: {
        readOnly: true,
        serializedName: "properties.instanceUri",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FarmBeatsUpdateRequestModel: msRest.CompositeMapper = {
  serializedName: "FarmBeatsUpdateRequestModel",
  type: {
    name: "Composite",
    className: "FarmBeatsUpdateRequestModel",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        readOnly: true,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      actionType: {
        readOnly: true,
        serializedName: "actionType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResponse: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityResponse",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResponse",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtensionListResponse: msRest.CompositeMapper = {
  serializedName: "ExtensionListResponse",
  type: {
    name: "Composite",
    className: "ExtensionListResponse",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Extension"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FarmBeatsExtensionListResponse: msRest.CompositeMapper = {
  serializedName: "FarmBeatsExtensionListResponse",
  type: {
    name: "Composite",
    className: "FarmBeatsExtensionListResponse",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FarmBeatsExtension"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FarmBeatsListResponse: msRest.CompositeMapper = {
  serializedName: "FarmBeatsListResponse",
  type: {
    name: "Composite",
    className: "FarmBeatsListResponse",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FarmBeats"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
