/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    constraints: {
      MinLength: 1
    },
    type: {
      name: "String"
    }
  }
};
export const extensionCategories: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "extensionCategories"
  ],
  mapper: {
    serializedName: "extensionCategories",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const extensionId: msRest.OperationURLParameter = {
  parameterPath: "extensionId",
  mapper: {
    required: true,
    serializedName: "extensionId",
    type: {
      name: "String"
    }
  }
};
export const extensionIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "extensionIds"
  ],
  mapper: {
    serializedName: "extensionIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const farmBeatsExtensionId: msRest.OperationURLParameter = {
  parameterPath: "farmBeatsExtensionId",
  mapper: {
    required: true,
    serializedName: "farmBeatsExtensionId",
    constraints: {
      Pattern: /^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$/
    },
    type: {
      name: "String"
    }
  }
};
export const farmBeatsExtensionIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "farmBeatsExtensionIds"
  ],
  mapper: {
    serializedName: "farmBeatsExtensionIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const farmBeatsExtensionNames: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "farmBeatsExtensionNames"
  ],
  mapper: {
    serializedName: "farmBeatsExtensionNames",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const farmBeatsResourceName: msRest.OperationURLParameter = {
  parameterPath: "farmBeatsResourceName",
  mapper: {
    required: true,
    serializedName: "farmBeatsResourceName",
    type: {
      name: "String"
    }
  }
};
export const maxPageSize: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "maxPageSize"
  ],
  mapper: {
    serializedName: "$maxPageSize",
    defaultValue: 50,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 10
    },
    type: {
      name: "Number"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const publisherIds: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "publisherIds"
  ],
  mapper: {
    serializedName: "publisherIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Multi
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    constraints: {
      MaxLength: 90,
      MinLength: 1
    },
    type: {
      name: "String"
    }
  }
};
export const skipToken: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skipToken"
  ],
  mapper: {
    serializedName: "$skipToken",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    constraints: {
      MinLength: 1
    },
    type: {
      name: "String"
    }
  }
};
