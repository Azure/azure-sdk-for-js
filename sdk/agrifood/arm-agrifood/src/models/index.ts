/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * Extension resource.
 */
export interface Extension extends BaseResource {
  systemData?: SystemData;
  /**
   * Extension Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extensionId?: string;
  /**
   * Extension category. e.g. weather/sensor/satellite.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extensionCategory?: string;
  /**
   * Installed extension version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly installedExtensionVersion?: string;
  /**
   * Extension auth link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extensionAuthLink?: string;
  /**
   * Extension api docs link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extensionApiDocsLink?: string;
  /**
   * The ETag value to implement optimistic concurrency.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly eTag?: string;
}

/**
 * Unit systems info for the data provider.
 */
export interface UnitSystemsInfo {
  /**
   * UnitSystem key sent as part of ProviderInput.
   */
  key: string;
  /**
   * List of unit systems supported by this data provider.
   */
  values: string[];
}

/**
 * Model to capture detailed information for farmBeatsExtensions.
 */
export interface DetailedInformation {
  /**
   * ApiName available for the farmBeatsExtension.
   */
  apiName?: string;
  /**
   * List of customParameters.
   */
  customParameters?: string[];
  /**
   * List of platformParameters.
   */
  platformParameters?: string[];
  unitsSupported?: UnitSystemsInfo;
  /**
   * List of apiInputParameters.
   */
  apiInputParameters?: string[];
}

/**
 * FarmBeats extension resource.
 */
export interface FarmBeatsExtension extends BaseResource {
  systemData?: SystemData;
  /**
   * Target ResourceType of the farmBeatsExtension.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetResourceType?: string;
  /**
   * FarmBeatsExtension ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly farmBeatsExtensionId?: string;
  /**
   * FarmBeatsExtension name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly farmBeatsExtensionName?: string;
  /**
   * FarmBeatsExtension version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly farmBeatsExtensionVersion?: string;
  /**
   * Publisher ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publisherId?: string;
  /**
   * Textual description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Category of the extension. e.g. weather/sensor/satellite.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extensionCategory?: string;
  /**
   * FarmBeatsExtension auth link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extensionAuthLink?: string;
  /**
   * FarmBeatsExtension api docs link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extensionApiDocsLink?: string;
  /**
   * Detailed information which shows summary of requested data.
   * Used in descriptive get extension metadata call.
   * Information for weather category per api included are apisSupported,
   * customParameters, PlatformParameters and Units supported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly detailedInformation?: DetailedInformation[];
}

/**
 * FarmBeats ARM Resource.
 */
export interface FarmBeats extends BaseResource {
  systemData?: SystemData;
  /**
   * Uri of the FarmBeats instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceUri?: string;
  /**
   * FarmBeats instance provisioning state. Possible values include: 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * FarmBeats update request.
 */
export interface FarmBeatsUpdateRequestModel {
  /**
   * Geo-location where the resource lives.
   */
  location?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The error detail.
 */
export interface ErrorDetail {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.).
 * @summary Error response
 */
export interface ErrorResponse {
  /**
   * The error object.
   */
  error?: ErrorDetail;
}

/**
 * Localized display information for this particular operation.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring
   * Insights" or "Microsoft Compute".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual
   * Machines" or "Job Schedule Collections".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create
   * or Update Virtual Machine", "Restart Virtual Machine".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and
   * detailed views.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * Details of a REST API operation, returned from the Resource Provider Operations API
 * @summary REST API Operation
 */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
   * "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and
   * "false" for ARM/control-plane operations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDataAction?: boolean;
  /**
   * Localized display information for this particular operation.
   */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
   * logs UX. Default value is "user,system". Possible values include: 'user', 'system',
   * 'user,system'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * Possible values include: 'Internal'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: ActionType;
}

/**
 * The check availability result.
 */
export interface CheckNameAvailabilityResponse {
  /**
   * Indicates if the resource name is available.
   */
  nameAvailable?: boolean;
  /**
   * The reason why the given name is not available. Possible values include: 'Invalid',
   * 'AlreadyExists'
   */
  reason?: CheckNameAvailabilityReason;
  /**
   * Detailed reason why the given name is available.
   */
  message?: string;
}

/**
 * The check availability request body.
 */
export interface CheckNameAvailabilityRequest {
  /**
   * The name of the resource for which availability needs to be checked.
   */
  name?: string;
  /**
   * The resource type.
   */
  type?: string;
}

/**
 * Optional Parameters.
 */
export interface ExtensionsListByFarmBeatsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Installed extension ids.
   */
  extensionIds?: string[];
  /**
   * Installed extension categories.
   */
  extensionCategories?: string[];
  /**
   * Maximum number of items needed (inclusive).
   * Minimum = 10, Maximum = 1000, Default value = 50. Default value: 50.
   */
  maxPageSize?: number;
  /**
   * Skip token for getting next set of results.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface ExtensionsListByFarmBeatsNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Installed extension ids.
   */
  extensionIds?: string[];
  /**
   * Installed extension categories.
   */
  extensionCategories?: string[];
  /**
   * Maximum number of items needed (inclusive).
   * Minimum = 10, Maximum = 1000, Default value = 50. Default value: 50.
   */
  maxPageSize?: number;
  /**
   * Skip token for getting next set of results.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface FarmBeatsExtensionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * FarmBeatsExtension ids.
   */
  farmBeatsExtensionIds?: string[];
  /**
   * FarmBeats extension names.
   */
  farmBeatsExtensionNames?: string[];
  /**
   * Extension categories.
   */
  extensionCategories?: string[];
  /**
   * Publisher ids.
   */
  publisherIds?: string[];
  /**
   * Maximum number of items needed (inclusive).
   * Minimum = 10, Maximum = 1000, Default value = 50. Default value: 50.
   */
  maxPageSize?: number;
}

/**
 * Optional Parameters.
 */
export interface FarmBeatsExtensionsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * FarmBeatsExtension ids.
   */
  farmBeatsExtensionIds?: string[];
  /**
   * FarmBeats extension names.
   */
  farmBeatsExtensionNames?: string[];
  /**
   * Extension categories.
   */
  extensionCategories?: string[];
  /**
   * Publisher ids.
   */
  publisherIds?: string[];
  /**
   * Maximum number of items needed (inclusive).
   * Minimum = 10, Maximum = 1000, Default value = 50. Default value: 50.
   */
  maxPageSize?: number;
}

/**
 * Optional Parameters.
 */
export interface FarmBeatsModelsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Maximum number of items needed (inclusive).
   * Minimum = 10, Maximum = 1000, Default value = 50. Default value: 50.
   */
  maxPageSize?: number;
  /**
   * Skip token for getting next set of results.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface FarmBeatsModelsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Maximum number of items needed (inclusive).
   * Minimum = 10, Maximum = 1000, Default value = 50. Default value: 50.
   */
  maxPageSize?: number;
  /**
   * Continuation token for getting next set of results.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface FarmBeatsModelsListBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Maximum number of items needed (inclusive).
   * Minimum = 10, Maximum = 1000, Default value = 50. Default value: 50.
   */
  maxPageSize?: number;
  /**
   * Skip token for getting next set of results.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface FarmBeatsModelsListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Maximum number of items needed (inclusive).
   * Minimum = 10, Maximum = 1000, Default value = 50. Default value: 50.
   */
  maxPageSize?: number;
  /**
   * Continuation token for getting next set of results.
   */
  skipToken?: string;
}

/**
 * An interface representing AzureAgriFoodRPServiceOptions.
 */
export interface AzureAgriFoodRPServiceOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Paged response contains list of requested objects and a URL link to get the next set of results.
 * @extends Array<Extension>
 */
export interface ExtensionListResponse extends Array<Extension> {
  /**
   * Continuation link (absolute URI) to the next page of results in the list.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged response contains list of requested objects and a URL link to get the next set of results.
 * @extends Array<FarmBeatsExtension>
 */
export interface FarmBeatsExtensionListResponse extends Array<FarmBeatsExtension> {
  /**
   * Continuation link (absolute URI) to the next page of results in the list.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paged response contains list of requested objects and a URL link to get the next set of results.
 * @extends Array<FarmBeats>
 */
export interface FarmBeatsListResponse extends Array<FarmBeats> {
  /**
   * Continuation link (absolute URI) to the next page of results in the list.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
 * to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results (if there are any).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Failed';

/**
 * Defines values for Origin.
 * Possible values include: 'user', 'system', 'user,system'
 * @readonly
 * @enum {string}
 */
export type Origin = 'user' | 'system' | 'user,system';

/**
 * Defines values for ActionType.
 * Possible values include: 'Internal'
 * @readonly
 * @enum {string}
 */
export type ActionType = 'Internal';

/**
 * Defines values for CheckNameAvailabilityReason.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type CheckNameAvailabilityReason = 'Invalid' | 'AlreadyExists';

/**
 * Contains response data for the create operation.
 */
export type ExtensionsCreateResponse = Extension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Extension;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtensionsGetResponse = Extension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Extension;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ExtensionsUpdateResponse = Extension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Extension;
    };
};

/**
 * Contains response data for the listByFarmBeats operation.
 */
export type ExtensionsListByFarmBeatsResponse = ExtensionListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionListResponse;
    };
};

/**
 * Contains response data for the listByFarmBeatsNext operation.
 */
export type ExtensionsListByFarmBeatsNextResponse = ExtensionListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionListResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type FarmBeatsExtensionsListResponse = FarmBeatsExtensionListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeatsExtensionListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FarmBeatsExtensionsGetResponse = FarmBeatsExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeatsExtension;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type FarmBeatsExtensionsListNextResponse = FarmBeatsExtensionListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeatsExtensionListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FarmBeatsModelsGetResponse = FarmBeats & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeats;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FarmBeatsModelsCreateOrUpdateResponse = FarmBeats & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeats;
    };
};

/**
 * Contains response data for the update operation.
 */
export type FarmBeatsModelsUpdateResponse = FarmBeats & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeats;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type FarmBeatsModelsListBySubscriptionResponse = FarmBeatsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeatsListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type FarmBeatsModelsListByResourceGroupResponse = FarmBeatsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeatsListResponse;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type FarmBeatsModelsListBySubscriptionNextResponse = FarmBeatsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeatsListResponse;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type FarmBeatsModelsListByResourceGroupNextResponse = FarmBeatsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FarmBeatsListResponse;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type LocationsCheckNameAvailabilityResponse = CheckNameAvailabilityResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
