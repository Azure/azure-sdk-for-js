/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Maps } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ServiceMap } from "../serviceMap";
import {
  MapRequestUnion,
  MapsGenerateOptionalParams,
  MapsGenerateResponse
} from "../models";

/** Class containing Maps operations. */
export class MapsImpl implements Maps {
  private readonly client: ServiceMap;

  /**
   * Initialize a new instance of the class Maps class.
   * @param client Reference to the service client
   */
  constructor(client: ServiceMap) {
    this.client = client;
  }

  /**
   * Generates the specified map.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param request Request options.
   * @param options The options parameters.
   */
  generate(
    resourceGroupName: string,
    workspaceName: string,
    request: MapRequestUnion,
    options?: MapsGenerateOptionalParams
  ): Promise<MapsGenerateResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workspaceName, request, options },
      generateOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const generateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/generateMap",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.MapResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.request,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
