/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/machineGroupsMappers";
import * as Parameters from "../models/parameters";
import { ServicemapManagementClientContext } from "../servicemapManagementClientContext";

/** Class representing a MachineGroups. */
export class MachineGroups {
  private readonly client: ServicemapManagementClientContext;

  /**
   * Create a MachineGroups.
   * @param {ServicemapManagementClientContext} client Reference to the service client.
   */
  constructor(client: ServicemapManagementClientContext) {
    this.client = client;
  }

  /**
   * Returns all machine groups during the specified time interval.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param [options] The optional parameters
   * @returns Promise<Models.MachineGroupsListByWorkspaceResponse>
   */
  listByWorkspace(resourceGroupName: string, workspaceName: string, options?: Models.MachineGroupsListByWorkspaceOptionalParams): Promise<Models.MachineGroupsListByWorkspaceResponse>;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param callback The callback
   */
  listByWorkspace(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByWorkspace(resourceGroupName: string, workspaceName: string, options: Models.MachineGroupsListByWorkspaceOptionalParams, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;
  listByWorkspace(resourceGroupName: string, workspaceName: string, options?: Models.MachineGroupsListByWorkspaceOptionalParams | msRest.ServiceCallback<Models.MachineGroupCollection>, callback?: msRest.ServiceCallback<Models.MachineGroupCollection>): Promise<Models.MachineGroupsListByWorkspaceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        options
      },
      listByWorkspaceOperationSpec,
      callback) as Promise<Models.MachineGroupsListByWorkspaceResponse>;
  }

  /**
   * Creates a new machine group.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroup Machine Group resource to create.
   * @param [options] The optional parameters
   * @returns Promise<Models.MachineGroupsCreateResponse>
   */
  create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsCreateResponse>;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroup Machine Group resource to create.
   * @param callback The callback
   */
  create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroup Machine Group resource to create.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
  create(resourceGroupName: string, workspaceName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MachineGroup>, callback?: msRest.ServiceCallback<Models.MachineGroup>): Promise<Models.MachineGroupsCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        machineGroup,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.MachineGroupsCreateResponse>;
  }

  /**
   * Returns the specified machine group as it existed during the specified time interval.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param [options] The optional parameters
   * @returns Promise<Models.MachineGroupsGetResponse>
   */
  get(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: Models.MachineGroupsGetOptionalParams): Promise<Models.MachineGroupsGetResponse>;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param callback The callback
   */
  get(resourceGroupName: string, workspaceName: string, machineGroupName: string, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, workspaceName: string, machineGroupName: string, options: Models.MachineGroupsGetOptionalParams, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
  get(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: Models.MachineGroupsGetOptionalParams | msRest.ServiceCallback<Models.MachineGroup>, callback?: msRest.ServiceCallback<Models.MachineGroup>): Promise<Models.MachineGroupsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        machineGroupName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.MachineGroupsGetResponse>;
  }

  /**
   * Updates a machine group.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param machineGroup Machine Group resource to update.
   * @param [options] The optional parameters
   * @returns Promise<Models.MachineGroupsUpdateResponse>
   */
  update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsUpdateResponse>;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param machineGroup Machine Group resource to update.
   * @param callback The callback
   */
  update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param machineGroup Machine Group resource to update.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroup>): void;
  update(resourceGroupName: string, workspaceName: string, machineGroupName: string, machineGroup: Models.MachineGroup, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MachineGroup>, callback?: msRest.ServiceCallback<Models.MachineGroup>): Promise<Models.MachineGroupsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        machineGroupName,
        machineGroup,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.MachineGroupsUpdateResponse>;
  }

  /**
   * Deletes the specified Machine Group.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineGroupName Machine Group resource name.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, workspaceName: string, machineGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        machineGroupName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Returns all machine groups during the specified time interval.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MachineGroupsListByWorkspaceNextResponse>
   */
  listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MachineGroupsListByWorkspaceNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByWorkspaceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByWorkspaceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineGroupCollection>): void;
  listByWorkspaceNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MachineGroupCollection>, callback?: msRest.ServiceCallback<Models.MachineGroupCollection>): Promise<Models.MachineGroupsListByWorkspaceNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByWorkspaceNextOperationSpec,
      callback) as Promise<Models.MachineGroupsListByWorkspaceNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByWorkspaceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.startTime,
    Parameters.endTime
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MachineGroupCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "machineGroup",
    mapper: {
      ...Mappers.MachineGroup,
      required: true
    }
  },
  responses: {
    201: {
      bodyMapper: Mappers.MachineGroup
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.machineGroupName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.startTime,
    Parameters.endTime
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MachineGroup
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.machineGroupName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "machineGroup",
    mapper: {
      ...Mappers.MachineGroup,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.MachineGroup
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/machineGroups/{machineGroupName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.machineGroupName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByWorkspaceNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MachineGroupCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
