/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Process,
  PortsListAcceptingProcessesOptionalParams,
  Connection,
  PortsListConnectionsOptionalParams,
  PortsGetOptionalParams,
  PortsGetResponse,
  PortsGetLivenessOptionalParams,
  PortsGetLivenessResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Ports. */
export interface Ports {
  /**
   * Returns a collection of processes accepting on the specified port
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param portName Port resource name.
   * @param options The options parameters.
   */
  listAcceptingProcesses(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    portName: string,
    options?: PortsListAcceptingProcessesOptionalParams
  ): PagedAsyncIterableIterator<Process>;
  /**
   * Returns a collection of connections established via the specified port.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param portName Port resource name.
   * @param options The options parameters.
   */
  listConnections(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    portName: string,
    options?: PortsListConnectionsOptionalParams
  ): PagedAsyncIterableIterator<Connection>;
  /**
   * Returns the specified port. The port must be live during the specified time interval. If the port is
   * not live during the interval, status 404 (Not Found) is returned.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param portName Port resource name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    portName: string,
    options?: PortsGetOptionalParams
  ): Promise<PortsGetResponse>;
  /**
   * Obtains the liveness status of the port during the specified time interval.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param portName Port resource name.
   * @param options The options parameters.
   */
  getLiveness(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    portName: string,
    options?: PortsGetLivenessOptionalParams
  ): Promise<PortsGetLivenessResponse>;
}
