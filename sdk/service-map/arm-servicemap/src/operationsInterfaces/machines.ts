/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Machine,
  MachinesListByWorkspaceOptionalParams,
  Connection,
  MachinesListConnectionsOptionalParams,
  Process,
  MachinesListProcessesOptionalParams,
  Port,
  MachinesListPortsOptionalParams,
  MachineGroup,
  MachinesListMachineGroupMembershipOptionalParams,
  MachinesGetOptionalParams,
  MachinesGetResponse,
  MachinesGetLivenessOptionalParams,
  MachinesGetLivenessResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Machines. */
export interface Machines {
  /**
   * Returns a collection of machines matching the specified conditions.  The returned collection
   * represents either machines that are active/live during the specified interval  of time (`live=true`
   * and `startTime`/`endTime` are specified) or that are known to have existed at or  some time prior to
   * the specified point in time (`live=false` and `timestamp` is specified).
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param options The options parameters.
   */
  listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    options?: MachinesListByWorkspaceOptionalParams
  ): PagedAsyncIterableIterator<Machine>;
  /**
   * Returns a collection of connections terminating or originating at the specified machine
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param options The options parameters.
   */
  listConnections(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    options?: MachinesListConnectionsOptionalParams
  ): PagedAsyncIterableIterator<Connection>;
  /**
   * Returns a collection of processes on the specified machine matching the specified conditions. The
   * returned collection represents either processes that are active/live during the specified interval
   * of time (`live=true` and `startTime`/`endTime` are specified) or that are known to have existed at
   * or  some time prior to the specified point in time (`live=false` and `timestamp` is specified).
   *
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param options The options parameters.
   */
  listProcesses(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    options?: MachinesListProcessesOptionalParams
  ): PagedAsyncIterableIterator<Process>;
  /**
   * Returns a collection of live ports on the specified machine during the specified time interval.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param options The options parameters.
   */
  listPorts(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    options?: MachinesListPortsOptionalParams
  ): PagedAsyncIterableIterator<Port>;
  /**
   * Returns a collection of machine groups this machine belongs to during the specified time interval.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param options The options parameters.
   */
  listMachineGroupMembership(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    options?: MachinesListMachineGroupMembershipOptionalParams
  ): PagedAsyncIterableIterator<MachineGroup>;
  /**
   * Returns the specified machine.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    options?: MachinesGetOptionalParams
  ): Promise<MachinesGetResponse>;
  /**
   * Obtains the liveness status of the machine during the specified time interval.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param machineName Machine resource name.
   * @param options The options parameters.
   */
  getLiveness(
    resourceGroupName: string,
    workspaceName: string,
    machineName: string,
    options?: MachinesGetLivenessOptionalParams
  ): Promise<MachinesGetLivenessResponse>;
}
