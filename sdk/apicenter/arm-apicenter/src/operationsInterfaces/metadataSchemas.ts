/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  MetadataSchema,
  MetadataSchemasListOptionalParams,
  MetadataSchemasGetOptionalParams,
  MetadataSchemasGetResponse,
  MetadataSchemasCreateOrUpdateOptionalParams,
  MetadataSchemasCreateOrUpdateResponse,
  MetadataSchemasDeleteOptionalParams,
  MetadataSchemasHeadOptionalParams,
  MetadataSchemasHeadResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MetadataSchemas. */
export interface MetadataSchemas {
  /**
   * Returns a collection of metadata schemas.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    serviceName: string,
    options?: MetadataSchemasListOptionalParams,
  ): PagedAsyncIterableIterator<MetadataSchema>;
  /**
   * Returns details of the metadata schema.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param metadataSchemaName The name of the metadata schema.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    metadataSchemaName: string,
    options?: MetadataSchemasGetOptionalParams,
  ): Promise<MetadataSchemasGetResponse>;
  /**
   * Creates new or updates existing metadata schema.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param metadataSchemaName The name of the metadata schema.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    metadataSchemaName: string,
    resource: MetadataSchema,
    options?: MetadataSchemasCreateOrUpdateOptionalParams,
  ): Promise<MetadataSchemasCreateOrUpdateResponse>;
  /**
   * Deletes specified metadata schema.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param metadataSchemaName The name of the metadata schema.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    metadataSchemaName: string,
    options?: MetadataSchemasDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Checks if specified metadata schema exists.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param metadataSchemaName The name of the metadata schema.
   * @param options The options parameters.
   */
  head(
    resourceGroupName: string,
    serviceName: string,
    metadataSchemaName: string,
    options?: MetadataSchemasHeadOptionalParams,
  ): Promise<MetadataSchemasHeadResponse>;
}
