/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Service,
  ServicesListBySubscriptionOptionalParams,
  ServicesListByResourceGroupOptionalParams,
  ServicesGetOptionalParams,
  ServicesGetResponse,
  ServicesCreateOrUpdateOptionalParams,
  ServicesCreateOrUpdateResponse,
  ServicesUpdateOptionalParams,
  ServicesUpdateResponse,
  ServicesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Services. */
export interface Services {
  /**
   * Lists services within an Azure subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ServicesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Service>;
  /**
   * Lists services within a resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ServicesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Service>;
  /**
   * Get service
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName Service name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    options?: ServicesGetOptionalParams
  ): Promise<ServicesGetResponse>;
  /**
   * Create or update service
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName Service name
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    options?: ServicesCreateOrUpdateOptionalParams
  ): Promise<ServicesCreateOrUpdateResponse>;
  /**
   * Update service
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName Service name
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    serviceName: string,
    options?: ServicesUpdateOptionalParams
  ): Promise<ServicesUpdateResponse>;
  /**
   * Delete service
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName Service name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    options?: ServicesDeleteOptionalParams
  ): Promise<void>;
}
