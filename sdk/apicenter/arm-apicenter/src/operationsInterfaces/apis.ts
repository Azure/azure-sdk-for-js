/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Api,
  ApisListOptionalParams,
  ApisGetOptionalParams,
  ApisGetResponse,
  ApisCreateOrUpdateOptionalParams,
  ApisCreateOrUpdateResponse,
  ApisDeleteOptionalParams,
  ApisHeadOptionalParams,
  ApisHeadResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Apis. */
export interface Apis {
  /**
   * Returns a collection of APIs.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    options?: ApisListOptionalParams,
  ): PagedAsyncIterableIterator<Api>;
  /**
   * Returns details of the API.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param apiName The name of the API.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    apiName: string,
    options?: ApisGetOptionalParams,
  ): Promise<ApisGetResponse>;
  /**
   * Creates new or updates existing API.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param apiName The name of the API.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    apiName: string,
    resource: Api,
    options?: ApisCreateOrUpdateOptionalParams,
  ): Promise<ApisCreateOrUpdateResponse>;
  /**
   * Deletes specified API.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param apiName The name of the API.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    apiName: string,
    options?: ApisDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Checks if specified API exists.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param apiName The name of the API.
   * @param options The options parameters.
   */
  head(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    apiName: string,
    options?: ApisHeadOptionalParams,
  ): Promise<ApisHeadResponse>;
}
