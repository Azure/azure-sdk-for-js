/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const ServiceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Service",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServiceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ServiceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceUpdate",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const MetadataSchemaExportRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSchemaExportRequest",
    modelProperties: {
      assignedTo: {
        serializedName: "assignedTo",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MetadataSchemaExportResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSchemaExportResult",
    modelProperties: {
      format: {
        serializedName: "format",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MetadataSchemaListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSchemaListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataSchema",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MetadataSchemaProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSchemaProperties",
    modelProperties: {
      schema: {
        serializedName: "schema",
        required: true,
        type: {
          name: "String",
        },
      },
      assignedTo: {
        serializedName: "assignedTo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataAssignment",
            },
          },
        },
      },
    },
  },
};

export const MetadataAssignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataAssignment",
    modelProperties: {
      entity: {
        serializedName: "entity",
        type: {
          name: "String",
        },
      },
      required: {
        serializedName: "required",
        type: {
          name: "Boolean",
        },
      },
      deprecated: {
        serializedName: "deprecated",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const WorkspaceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspaceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workspace",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkspaceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspaceProperties",
    modelProperties: {
      title: {
        constraints: {
          MaxLength: 50,
          MinLength: 1,
        },
        serializedName: "title",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Api",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiProperties",
    modelProperties: {
      title: {
        constraints: {
          MaxLength: 50,
          MinLength: 1,
        },
        serializedName: "title",
        required: true,
        type: {
          name: "String",
        },
      },
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        constraints: {
          MaxLength: 1000,
        },
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      summary: {
        constraints: {
          MaxLength: 200,
        },
        serializedName: "summary",
        type: {
          name: "String",
        },
      },
      lifecycleStage: {
        serializedName: "lifecycleStage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      termsOfService: {
        serializedName: "termsOfService",
        type: {
          name: "Composite",
          className: "TermsOfService",
        },
      },
      externalDocumentation: {
        constraints: {
          MaxItems: 20,
        },
        serializedName: "externalDocumentation",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExternalDocumentation",
            },
          },
        },
      },
      contacts: {
        serializedName: "contacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Contact",
            },
          },
        },
      },
      license: {
        serializedName: "license",
        type: {
          name: "Composite",
          className: "License",
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const TermsOfService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TermsOfService",
    modelProperties: {
      url: {
        constraints: {
          MaxLength: 200,
        },
        serializedName: "url",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExternalDocumentation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExternalDocumentation",
    modelProperties: {
      title: {
        constraints: {
          MaxLength: 50,
        },
        serializedName: "title",
        type: {
          name: "String",
        },
      },
      description: {
        constraints: {
          MaxLength: 500,
        },
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      url: {
        constraints: {
          MaxLength: 200,
        },
        serializedName: "url",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Contact: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Contact",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 100,
        },
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      url: {
        constraints: {
          MaxLength: 200,
        },
        serializedName: "url",
        type: {
          name: "String",
        },
      },
      email: {
        constraints: {
          MaxLength: 100,
        },
        serializedName: "email",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const License: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "License",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 100,
        },
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      url: {
        constraints: {
          MaxLength: 200,
        },
        serializedName: "url",
        type: {
          name: "String",
        },
      },
      identifier: {
        constraints: {
          MaxLength: 50,
        },
        serializedName: "identifier",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DeploymentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Deployment",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DeploymentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentProperties",
    modelProperties: {
      title: {
        constraints: {
          MaxLength: 50,
          MinLength: 1,
        },
        serializedName: "title",
        type: {
          name: "String",
        },
      },
      description: {
        constraints: {
          MaxLength: 500,
        },
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      environmentId: {
        serializedName: "environmentId",
        type: {
          name: "String",
        },
      },
      definitionId: {
        serializedName: "definitionId",
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        type: {
          name: "String",
        },
      },
      server: {
        serializedName: "server",
        type: {
          name: "Composite",
          className: "DeploymentServer",
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const DeploymentServer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentServer",
    modelProperties: {
      runtimeUri: {
        serializedName: "runtimeUri",
        type: {
          name: "Sequence",
          element: {
            constraints: {
              MaxLength: 200,
            },
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const ApiVersionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiVersionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiVersion",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiVersionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiVersionProperties",
    modelProperties: {
      title: {
        constraints: {
          MaxLength: 50,
          MinLength: 1,
        },
        serializedName: "title",
        required: true,
        type: {
          name: "String",
        },
      },
      lifecycleStage: {
        serializedName: "lifecycleStage",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiDefinitionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiDefinition",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiDefinitionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiDefinitionProperties",
    modelProperties: {
      title: {
        constraints: {
          MaxLength: 50,
          MinLength: 1,
        },
        serializedName: "title",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      specification: {
        serializedName: "specification",
        type: {
          name: "Composite",
          className: "ApiDefinitionPropertiesSpecification",
        },
      },
    },
  },
};

export const ApiDefinitionPropertiesSpecification: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ApiDefinitionPropertiesSpecification",
      modelProperties: {
        name: {
          serializedName: "name",
          type: {
            name: "String",
          },
        },
        version: {
          serializedName: "version",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const ApiSpecExportResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiSpecExportResult",
    modelProperties: {
      format: {
        serializedName: "format",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiSpecImportRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiSpecImportRequest",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
      format: {
        serializedName: "format",
        type: {
          name: "String",
        },
      },
      specification: {
        serializedName: "specification",
        type: {
          name: "Composite",
          className: "ApiSpecImportRequestSpecification",
        },
      },
    },
  },
};

export const ApiSpecImportRequestSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiSpecImportRequestSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EnvironmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnvironmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Environment",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EnvironmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnvironmentProperties",
    modelProperties: {
      title: {
        constraints: {
          MaxLength: 50,
          MinLength: 1,
        },
        serializedName: "title",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String",
        },
      },
      server: {
        serializedName: "server",
        type: {
          name: "Composite",
          className: "EnvironmentServer",
        },
      },
      onboarding: {
        serializedName: "onboarding",
        type: {
          name: "Composite",
          className: "Onboarding",
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const EnvironmentServer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnvironmentServer",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      managementPortalUri: {
        constraints: {
          MaxItems: 1,
        },
        serializedName: "managementPortalUri",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const Onboarding: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Onboarding",
    modelProperties: {
      instructions: {
        serializedName: "instructions",
        type: {
          name: "String",
        },
      },
      developerPortalUri: {
        constraints: {
          MaxItems: 1,
        },
        serializedName: "developerPortalUri",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const Service: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Service",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServiceProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
    },
  },
};

export const MetadataSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSchema",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MetadataSchemaProperties",
        },
      },
    },
  },
};

export const Workspace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WorkspaceProperties",
        },
      },
    },
  },
};

export const Api: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Api",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApiProperties",
        },
      },
    },
  },
};

export const Deployment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Deployment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DeploymentProperties",
        },
      },
    },
  },
};

export const ApiVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiVersion",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApiVersionProperties",
        },
      },
    },
  },
};

export const ApiDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiDefinition",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApiDefinitionProperties",
        },
      },
    },
  },
};

export const Environment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Environment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "EnvironmentProperties",
        },
      },
    },
  },
};

export const ServicesExportMetadataSchemaHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicesExportMetadataSchemaHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MetadataSchemasGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSchemasGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MetadataSchemasCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MetadataSchemasCreateOrUpdateHeaders",
      modelProperties: {
        eTag: {
          serializedName: "etag",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const WorkspacesGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspacesGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkspacesCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspacesCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApisGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApisGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApisCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApisCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DeploymentsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DeploymentsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentsCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiVersionsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiVersionsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiVersionsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiVersionsCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiDefinitionsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiDefinitionsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiDefinitionsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiDefinitionsCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiDefinitionsExportSpecificationHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ApiDefinitionsExportSpecificationHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const ApiDefinitionsImportSpecificationHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ApiDefinitionsImportSpecificationHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const EnvironmentsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnvironmentsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EnvironmentsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnvironmentsCreateOrUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};
