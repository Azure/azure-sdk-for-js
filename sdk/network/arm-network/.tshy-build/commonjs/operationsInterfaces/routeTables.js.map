{"version":3,"file":"routeTables.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/routeTables.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  RouteTable,\n  RouteTablesListOptionalParams,\n  RouteTablesListAllOptionalParams,\n  RouteTablesDeleteOptionalParams,\n  RouteTablesGetOptionalParams,\n  RouteTablesGetResponse,\n  RouteTablesCreateOrUpdateOptionalParams,\n  RouteTablesCreateOrUpdateResponse,\n  TagsObject,\n  RouteTablesUpdateTagsOptionalParams,\n  RouteTablesUpdateTagsResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a RouteTables. */\nexport interface RouteTables {\n  /**\n   * Gets all route tables in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    options?: RouteTablesListOptionalParams,\n  ): PagedAsyncIterableIterator<RouteTable>;\n  /**\n   * Gets all route tables in a subscription.\n   * @param options The options parameters.\n   */\n  listAll(\n    options?: RouteTablesListAllOptionalParams,\n  ): PagedAsyncIterableIterator<RouteTable>;\n  /**\n   * Deletes the specified route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    routeTableName: string,\n    options?: RouteTablesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    routeTableName: string,\n    options?: RouteTablesDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    routeTableName: string,\n    options?: RouteTablesGetOptionalParams,\n  ): Promise<RouteTablesGetResponse>;\n  /**\n   * Create or updates a route table in a specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param parameters Parameters supplied to the create or update route table operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    routeTableName: string,\n    parameters: RouteTable,\n    options?: RouteTablesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<RouteTablesCreateOrUpdateResponse>,\n      RouteTablesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or updates a route table in a specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param parameters Parameters supplied to the create or update route table operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    routeTableName: string,\n    parameters: RouteTable,\n    options?: RouteTablesCreateOrUpdateOptionalParams,\n  ): Promise<RouteTablesCreateOrUpdateResponse>;\n  /**\n   * Updates a route table tags.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param parameters Parameters supplied to update route table tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    routeTableName: string,\n    parameters: TagsObject,\n    options?: RouteTablesUpdateTagsOptionalParams,\n  ): Promise<RouteTablesUpdateTagsResponse>;\n}\n"]}