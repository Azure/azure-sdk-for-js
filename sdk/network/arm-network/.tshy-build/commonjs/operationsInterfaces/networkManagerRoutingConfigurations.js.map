{"version":3,"file":"networkManagerRoutingConfigurations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/networkManagerRoutingConfigurations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  NetworkManagerRoutingConfiguration,\n  NetworkManagerRoutingConfigurationsListOptionalParams,\n  NetworkManagerRoutingConfigurationsGetOptionalParams,\n  NetworkManagerRoutingConfigurationsGetResponse,\n  NetworkManagerRoutingConfigurationsCreateOrUpdateOptionalParams,\n  NetworkManagerRoutingConfigurationsCreateOrUpdateResponse,\n  NetworkManagerRoutingConfigurationsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a NetworkManagerRoutingConfigurations. */\nexport interface NetworkManagerRoutingConfigurations {\n  /**\n   * Lists all the network manager routing configurations in a network manager, in a paginated format.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    options?: NetworkManagerRoutingConfigurationsListOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkManagerRoutingConfiguration>;\n  /**\n   * Retrieves a network manager routing configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Routing Configuration.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: NetworkManagerRoutingConfigurationsGetOptionalParams,\n  ): Promise<NetworkManagerRoutingConfigurationsGetResponse>;\n  /**\n   * Creates or updates a network manager routing configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Routing Configuration.\n   * @param routingConfiguration The routing configuration to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    routingConfiguration: NetworkManagerRoutingConfiguration,\n    options?: NetworkManagerRoutingConfigurationsCreateOrUpdateOptionalParams,\n  ): Promise<NetworkManagerRoutingConfigurationsCreateOrUpdateResponse>;\n  /**\n   * Deletes a network manager routing configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Routing Configuration.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: NetworkManagerRoutingConfigurationsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a network manager routing configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Routing Configuration.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: NetworkManagerRoutingConfigurationsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}