{"version":3,"file":"ipGroups.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/ipGroups.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  IpGroup,\n  IpGroupsListByResourceGroupOptionalParams,\n  IpGroupsListOptionalParams,\n  IpGroupsGetOptionalParams,\n  IpGroupsGetResponse,\n  IpGroupsCreateOrUpdateOptionalParams,\n  IpGroupsCreateOrUpdateResponse,\n  TagsObject,\n  IpGroupsUpdateGroupsOptionalParams,\n  IpGroupsUpdateGroupsResponse,\n  IpGroupsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a IpGroups. */\nexport interface IpGroups {\n  /**\n   * Gets all IpGroups in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: IpGroupsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<IpGroup>;\n  /**\n   * Gets all IpGroups in a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: IpGroupsListOptionalParams,\n  ): PagedAsyncIterableIterator<IpGroup>;\n  /**\n   * Gets the specified ipGroups.\n   * @param resourceGroupName The name of the resource group.\n   * @param ipGroupsName The name of the ipGroups.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    ipGroupsName: string,\n    options?: IpGroupsGetOptionalParams,\n  ): Promise<IpGroupsGetResponse>;\n  /**\n   * Creates or updates an ipGroups in a specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param ipGroupsName The name of the ipGroups.\n   * @param parameters Parameters supplied to the create or update IpGroups operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    ipGroupsName: string,\n    parameters: IpGroup,\n    options?: IpGroupsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<IpGroupsCreateOrUpdateResponse>,\n      IpGroupsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates an ipGroups in a specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param ipGroupsName The name of the ipGroups.\n   * @param parameters Parameters supplied to the create or update IpGroups operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    ipGroupsName: string,\n    parameters: IpGroup,\n    options?: IpGroupsCreateOrUpdateOptionalParams,\n  ): Promise<IpGroupsCreateOrUpdateResponse>;\n  /**\n   * Updates tags of an IpGroups resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param ipGroupsName The name of the ipGroups.\n   * @param parameters Parameters supplied to the update ipGroups operation.\n   * @param options The options parameters.\n   */\n  updateGroups(\n    resourceGroupName: string,\n    ipGroupsName: string,\n    parameters: TagsObject,\n    options?: IpGroupsUpdateGroupsOptionalParams,\n  ): Promise<IpGroupsUpdateGroupsResponse>;\n  /**\n   * Deletes the specified ipGroups.\n   * @param resourceGroupName The name of the resource group.\n   * @param ipGroupsName The name of the ipGroups.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    ipGroupsName: string,\n    options?: IpGroupsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified ipGroups.\n   * @param resourceGroupName The name of the resource group.\n   * @param ipGroupsName The name of the ipGroups.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    ipGroupsName: string,\n    options?: IpGroupsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}