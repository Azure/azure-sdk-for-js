{"version":3,"file":"connectionMonitors.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/connectionMonitors.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  ConnectionMonitorResult,\n  ConnectionMonitorsListOptionalParams,\n  ConnectionMonitor,\n  ConnectionMonitorsCreateOrUpdateOptionalParams,\n  ConnectionMonitorsCreateOrUpdateResponse,\n  ConnectionMonitorsGetOptionalParams,\n  ConnectionMonitorsGetResponse,\n  ConnectionMonitorsDeleteOptionalParams,\n  TagsObject,\n  ConnectionMonitorsUpdateTagsOptionalParams,\n  ConnectionMonitorsUpdateTagsResponse,\n  ConnectionMonitorsStopOptionalParams,\n  ConnectionMonitorsStartOptionalParams,\n  ConnectionMonitorsQueryOptionalParams,\n  ConnectionMonitorsQueryResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a ConnectionMonitors. */\nexport interface ConnectionMonitors {\n  /**\n   * Lists all connection monitors for the specified Network Watcher.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    options?: ConnectionMonitorsListOptionalParams,\n  ): PagedAsyncIterableIterator<ConnectionMonitorResult>;\n  /**\n   * Create or update a connection monitor.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param parameters Parameters that define the operation to create a connection monitor.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    parameters: ConnectionMonitor,\n    options?: ConnectionMonitorsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ConnectionMonitorsCreateOrUpdateResponse>,\n      ConnectionMonitorsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or update a connection monitor.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param parameters Parameters that define the operation to create a connection monitor.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    parameters: ConnectionMonitor,\n    options?: ConnectionMonitorsCreateOrUpdateOptionalParams,\n  ): Promise<ConnectionMonitorsCreateOrUpdateResponse>;\n  /**\n   * Gets a connection monitor by name.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsGetOptionalParams,\n  ): Promise<ConnectionMonitorsGetResponse>;\n  /**\n   * Deletes the specified connection monitor.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified connection monitor.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Update tags of the specified connection monitor.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkWatcherName The name of the network watcher.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param parameters Parameters supplied to update connection monitor tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    parameters: TagsObject,\n    options?: ConnectionMonitorsUpdateTagsOptionalParams,\n  ): Promise<ConnectionMonitorsUpdateTagsResponse>;\n  /**\n   * Stops the specified connection monitor.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param options The options parameters.\n   */\n  beginStop(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsStopOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Stops the specified connection monitor.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param options The options parameters.\n   */\n  beginStopAndWait(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsStopOptionalParams,\n  ): Promise<void>;\n  /**\n   * Starts the specified connection monitor.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param options The options parameters.\n   */\n  beginStart(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsStartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Starts the specified connection monitor.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name of the connection monitor.\n   * @param options The options parameters.\n   */\n  beginStartAndWait(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsStartOptionalParams,\n  ): Promise<void>;\n  /**\n   * Query a snapshot of the most recent connection states.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name given to the connection monitor.\n   * @param options The options parameters.\n   */\n  beginQuery(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsQueryOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ConnectionMonitorsQueryResponse>,\n      ConnectionMonitorsQueryResponse\n    >\n  >;\n  /**\n   * Query a snapshot of the most recent connection states.\n   * @param resourceGroupName The name of the resource group containing Network Watcher.\n   * @param networkWatcherName The name of the Network Watcher resource.\n   * @param connectionMonitorName The name given to the connection monitor.\n   * @param options The options parameters.\n   */\n  beginQueryAndWait(\n    resourceGroupName: string,\n    networkWatcherName: string,\n    connectionMonitorName: string,\n    options?: ConnectionMonitorsQueryOptionalParams,\n  ): Promise<ConnectionMonitorsQueryResponse>;\n}\n"]}