{"version":3,"file":"routeFilterRules.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/routeFilterRules.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  RouteFilterRule,\n  RouteFilterRulesListByRouteFilterOptionalParams,\n  RouteFilterRulesDeleteOptionalParams,\n  RouteFilterRulesGetOptionalParams,\n  RouteFilterRulesGetResponse,\n  RouteFilterRulesCreateOrUpdateOptionalParams,\n  RouteFilterRulesCreateOrUpdateResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a RouteFilterRules. */\nexport interface RouteFilterRules {\n  /**\n   * Gets all RouteFilterRules in a route filter.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeFilterName The name of the route filter.\n   * @param options The options parameters.\n   */\n  listByRouteFilter(\n    resourceGroupName: string,\n    routeFilterName: string,\n    options?: RouteFilterRulesListByRouteFilterOptionalParams,\n  ): PagedAsyncIterableIterator<RouteFilterRule>;\n  /**\n   * Deletes the specified rule from a route filter.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeFilterName The name of the route filter.\n   * @param ruleName The name of the rule.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    routeFilterName: string,\n    ruleName: string,\n    options?: RouteFilterRulesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified rule from a route filter.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeFilterName The name of the route filter.\n   * @param ruleName The name of the rule.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    routeFilterName: string,\n    ruleName: string,\n    options?: RouteFilterRulesDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified rule from a route filter.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeFilterName The name of the route filter.\n   * @param ruleName The name of the rule.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    routeFilterName: string,\n    ruleName: string,\n    options?: RouteFilterRulesGetOptionalParams,\n  ): Promise<RouteFilterRulesGetResponse>;\n  /**\n   * Creates or updates a route in the specified route filter.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeFilterName The name of the route filter.\n   * @param ruleName The name of the route filter rule.\n   * @param routeFilterRuleParameters Parameters supplied to the create or update route filter rule\n   *                                  operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    routeFilterName: string,\n    ruleName: string,\n    routeFilterRuleParameters: RouteFilterRule,\n    options?: RouteFilterRulesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<RouteFilterRulesCreateOrUpdateResponse>,\n      RouteFilterRulesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a route in the specified route filter.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeFilterName The name of the route filter.\n   * @param ruleName The name of the route filter rule.\n   * @param routeFilterRuleParameters Parameters supplied to the create or update route filter rule\n   *                                  operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    routeFilterName: string,\n    ruleName: string,\n    routeFilterRuleParameters: RouteFilterRule,\n    options?: RouteFilterRulesCreateOrUpdateOptionalParams,\n  ): Promise<RouteFilterRulesCreateOrUpdateResponse>;\n}\n"]}