{"version":3,"file":"subscriptionNetworkManagerConnections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/subscriptionNetworkManagerConnections.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  NetworkManagerConnection,\n  SubscriptionNetworkManagerConnectionsListOptionalParams,\n  SubscriptionNetworkManagerConnectionsCreateOrUpdateOptionalParams,\n  SubscriptionNetworkManagerConnectionsCreateOrUpdateResponse,\n  SubscriptionNetworkManagerConnectionsGetOptionalParams,\n  SubscriptionNetworkManagerConnectionsGetResponse,\n  SubscriptionNetworkManagerConnectionsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a SubscriptionNetworkManagerConnections. */\nexport interface SubscriptionNetworkManagerConnections {\n  /**\n   * List all network manager connections created by this subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: SubscriptionNetworkManagerConnectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkManagerConnection>;\n  /**\n   * Create a network manager connection on this subscription.\n   * @param networkManagerConnectionName Name for the network manager connection.\n   * @param parameters Network manager connection to be created/updated.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    networkManagerConnectionName: string,\n    parameters: NetworkManagerConnection,\n    options?: SubscriptionNetworkManagerConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<SubscriptionNetworkManagerConnectionsCreateOrUpdateResponse>;\n  /**\n   * Get a specified connection created by this subscription.\n   * @param networkManagerConnectionName Name for the network manager connection.\n   * @param options The options parameters.\n   */\n  get(\n    networkManagerConnectionName: string,\n    options?: SubscriptionNetworkManagerConnectionsGetOptionalParams,\n  ): Promise<SubscriptionNetworkManagerConnectionsGetResponse>;\n  /**\n   * Delete specified connection created by this subscription.\n   * @param networkManagerConnectionName Name for the network manager connection.\n   * @param options The options parameters.\n   */\n  delete(\n    networkManagerConnectionName: string,\n    options?: SubscriptionNetworkManagerConnectionsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}