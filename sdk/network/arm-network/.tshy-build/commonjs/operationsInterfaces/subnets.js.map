{"version":3,"file":"subnets.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/subnets.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  Subnet,\n  SubnetsListOptionalParams,\n  SubnetsDeleteOptionalParams,\n  SubnetsGetOptionalParams,\n  SubnetsGetResponse,\n  SubnetsCreateOrUpdateOptionalParams,\n  SubnetsCreateOrUpdateResponse,\n  PrepareNetworkPoliciesRequest,\n  SubnetsPrepareNetworkPoliciesOptionalParams,\n  UnprepareNetworkPoliciesRequest,\n  SubnetsUnprepareNetworkPoliciesOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a Subnets. */\nexport interface Subnets {\n  /**\n   * Gets all subnets in a virtual network.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    options?: SubnetsListOptionalParams,\n  ): PagedAsyncIterableIterator<Subnet>;\n  /**\n   * Deletes the specified subnet.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    options?: SubnetsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified subnet.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    options?: SubnetsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified subnet by virtual network and resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    options?: SubnetsGetOptionalParams,\n  ): Promise<SubnetsGetResponse>;\n  /**\n   * Creates or updates a subnet in the specified virtual network.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param subnetParameters Parameters supplied to the create or update subnet operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    subnetParameters: Subnet,\n    options?: SubnetsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<SubnetsCreateOrUpdateResponse>,\n      SubnetsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a subnet in the specified virtual network.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param subnetParameters Parameters supplied to the create or update subnet operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    subnetParameters: Subnet,\n    options?: SubnetsCreateOrUpdateOptionalParams,\n  ): Promise<SubnetsCreateOrUpdateResponse>;\n  /**\n   * Prepares a subnet by applying network intent policies.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param prepareNetworkPoliciesRequestParameters Parameters supplied to prepare subnet by applying\n   *                                                network intent policies.\n   * @param options The options parameters.\n   */\n  beginPrepareNetworkPolicies(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    prepareNetworkPoliciesRequestParameters: PrepareNetworkPoliciesRequest,\n    options?: SubnetsPrepareNetworkPoliciesOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Prepares a subnet by applying network intent policies.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param prepareNetworkPoliciesRequestParameters Parameters supplied to prepare subnet by applying\n   *                                                network intent policies.\n   * @param options The options parameters.\n   */\n  beginPrepareNetworkPoliciesAndWait(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    prepareNetworkPoliciesRequestParameters: PrepareNetworkPoliciesRequest,\n    options?: SubnetsPrepareNetworkPoliciesOptionalParams,\n  ): Promise<void>;\n  /**\n   * Unprepares a subnet by removing network intent policies.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param unprepareNetworkPoliciesRequestParameters Parameters supplied to unprepare subnet to remove\n   *                                                  network intent policies.\n   * @param options The options parameters.\n   */\n  beginUnprepareNetworkPolicies(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    unprepareNetworkPoliciesRequestParameters: UnprepareNetworkPoliciesRequest,\n    options?: SubnetsUnprepareNetworkPoliciesOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Unprepares a subnet by removing network intent policies.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkName The name of the virtual network.\n   * @param subnetName The name of the subnet.\n   * @param unprepareNetworkPoliciesRequestParameters Parameters supplied to unprepare subnet to remove\n   *                                                  network intent policies.\n   * @param options The options parameters.\n   */\n  beginUnprepareNetworkPoliciesAndWait(\n    resourceGroupName: string,\n    virtualNetworkName: string,\n    subnetName: string,\n    unprepareNetworkPoliciesRequestParameters: UnprepareNetworkPoliciesRequest,\n    options?: SubnetsUnprepareNetworkPoliciesOptionalParams,\n  ): Promise<void>;\n}\n"]}