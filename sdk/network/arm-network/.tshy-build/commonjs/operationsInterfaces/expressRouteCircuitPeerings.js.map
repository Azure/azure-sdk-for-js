{"version":3,"file":"expressRouteCircuitPeerings.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/expressRouteCircuitPeerings.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  ExpressRouteCircuitPeering,\n  ExpressRouteCircuitPeeringsListOptionalParams,\n  ExpressRouteCircuitPeeringsDeleteOptionalParams,\n  ExpressRouteCircuitPeeringsGetOptionalParams,\n  ExpressRouteCircuitPeeringsGetResponse,\n  ExpressRouteCircuitPeeringsCreateOrUpdateOptionalParams,\n  ExpressRouteCircuitPeeringsCreateOrUpdateResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a ExpressRouteCircuitPeerings. */\nexport interface ExpressRouteCircuitPeerings {\n  /**\n   * Gets all peerings in a specified express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    circuitName: string,\n    options?: ExpressRouteCircuitPeeringsListOptionalParams,\n  ): PagedAsyncIterableIterator<ExpressRouteCircuitPeering>;\n  /**\n   * Deletes the specified peering from the specified express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    options?: ExpressRouteCircuitPeeringsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified peering from the specified express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    options?: ExpressRouteCircuitPeeringsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified peering for the express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    options?: ExpressRouteCircuitPeeringsGetOptionalParams,\n  ): Promise<ExpressRouteCircuitPeeringsGetResponse>;\n  /**\n   * Creates or updates a peering in the specified express route circuits.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param peeringParameters Parameters supplied to the create or update express route circuit peering\n   *                          operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    peeringParameters: ExpressRouteCircuitPeering,\n    options?: ExpressRouteCircuitPeeringsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteCircuitPeeringsCreateOrUpdateResponse>,\n      ExpressRouteCircuitPeeringsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a peering in the specified express route circuits.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param peeringParameters Parameters supplied to the create or update express route circuit peering\n   *                          operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    peeringParameters: ExpressRouteCircuitPeering,\n    options?: ExpressRouteCircuitPeeringsCreateOrUpdateOptionalParams,\n  ): Promise<ExpressRouteCircuitPeeringsCreateOrUpdateResponse>;\n}\n"]}