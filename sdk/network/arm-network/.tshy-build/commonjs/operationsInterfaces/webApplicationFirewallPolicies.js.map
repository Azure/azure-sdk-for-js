{"version":3,"file":"webApplicationFirewallPolicies.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/webApplicationFirewallPolicies.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  WebApplicationFirewallPolicy,\n  WebApplicationFirewallPoliciesListOptionalParams,\n  WebApplicationFirewallPoliciesListAllOptionalParams,\n  WebApplicationFirewallPoliciesGetOptionalParams,\n  WebApplicationFirewallPoliciesGetResponse,\n  WebApplicationFirewallPoliciesCreateOrUpdateOptionalParams,\n  WebApplicationFirewallPoliciesCreateOrUpdateResponse,\n  WebApplicationFirewallPoliciesDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a WebApplicationFirewallPolicies. */\nexport interface WebApplicationFirewallPolicies {\n  /**\n   * Lists all of the protection policies within a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    options?: WebApplicationFirewallPoliciesListOptionalParams,\n  ): PagedAsyncIterableIterator<WebApplicationFirewallPolicy>;\n  /**\n   * Gets all the WAF policies in a subscription.\n   * @param options The options parameters.\n   */\n  listAll(\n    options?: WebApplicationFirewallPoliciesListAllOptionalParams,\n  ): PagedAsyncIterableIterator<WebApplicationFirewallPolicy>;\n  /**\n   * Retrieve protection policy with specified name within a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param policyName The name of the policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    policyName: string,\n    options?: WebApplicationFirewallPoliciesGetOptionalParams,\n  ): Promise<WebApplicationFirewallPoliciesGetResponse>;\n  /**\n   * Creates or update policy with specified rule set name within a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param policyName The name of the policy.\n   * @param parameters Policy to be created.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    policyName: string,\n    parameters: WebApplicationFirewallPolicy,\n    options?: WebApplicationFirewallPoliciesCreateOrUpdateOptionalParams,\n  ): Promise<WebApplicationFirewallPoliciesCreateOrUpdateResponse>;\n  /**\n   * Deletes Policy.\n   * @param resourceGroupName The name of the resource group.\n   * @param policyName The name of the policy.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    policyName: string,\n    options?: WebApplicationFirewallPoliciesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes Policy.\n   * @param resourceGroupName The name of the resource group.\n   * @param policyName The name of the policy.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    policyName: string,\n    options?: WebApplicationFirewallPoliciesDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}