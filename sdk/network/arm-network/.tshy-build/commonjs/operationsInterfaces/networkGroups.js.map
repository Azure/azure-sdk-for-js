{"version":3,"file":"networkGroups.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/networkGroups.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  NetworkGroup,\n  NetworkGroupsListOptionalParams,\n  NetworkGroupsGetOptionalParams,\n  NetworkGroupsGetResponse,\n  NetworkGroupsCreateOrUpdateOptionalParams,\n  NetworkGroupsCreateOrUpdateResponse,\n  NetworkGroupsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a NetworkGroups. */\nexport interface NetworkGroups {\n  /**\n   * Lists the specified network group.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    options?: NetworkGroupsListOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkGroup>;\n  /**\n   * Gets the specified network group.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    options?: NetworkGroupsGetOptionalParams,\n  ): Promise<NetworkGroupsGetResponse>;\n  /**\n   * Creates or updates a network group.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param parameters Parameters supplied to the specify which network group need to create\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    parameters: NetworkGroup,\n    options?: NetworkGroupsCreateOrUpdateOptionalParams,\n  ): Promise<NetworkGroupsCreateOrUpdateResponse>;\n  /**\n   * Deletes a network group.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    options?: NetworkGroupsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a network group.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    options?: NetworkGroupsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}