{"version":3,"file":"virtualHubs.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/virtualHubs.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VirtualHub,\n  VirtualHubsListByResourceGroupOptionalParams,\n  VirtualHubsListOptionalParams,\n  VirtualHubsGetOptionalParams,\n  VirtualHubsGetResponse,\n  VirtualHubsCreateOrUpdateOptionalParams,\n  VirtualHubsCreateOrUpdateResponse,\n  TagsObject,\n  VirtualHubsUpdateTagsOptionalParams,\n  VirtualHubsUpdateTagsResponse,\n  VirtualHubsDeleteOptionalParams,\n  VirtualHubsGetEffectiveVirtualHubRoutesOptionalParams,\n  VirtualHubsGetEffectiveVirtualHubRoutesResponse,\n  GetInboundRoutesParameters,\n  VirtualHubsGetInboundRoutesOptionalParams,\n  VirtualHubsGetInboundRoutesResponse,\n  GetOutboundRoutesParameters,\n  VirtualHubsGetOutboundRoutesOptionalParams,\n  VirtualHubsGetOutboundRoutesResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VirtualHubs. */\nexport interface VirtualHubs {\n  /**\n   * Lists all the VirtualHubs in a resource group.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: VirtualHubsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualHub>;\n  /**\n   * Lists all the VirtualHubs in a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: VirtualHubsListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualHub>;\n  /**\n   * Retrieves the details of a VirtualHub.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: VirtualHubsGetOptionalParams,\n  ): Promise<VirtualHubsGetResponse>;\n  /**\n   * Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param virtualHubParameters Parameters supplied to create or update VirtualHub.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualHubName: string,\n    virtualHubParameters: VirtualHub,\n    options?: VirtualHubsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualHubsCreateOrUpdateResponse>,\n      VirtualHubsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param virtualHubParameters Parameters supplied to create or update VirtualHub.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    virtualHubParameters: VirtualHub,\n    options?: VirtualHubsCreateOrUpdateOptionalParams,\n  ): Promise<VirtualHubsCreateOrUpdateResponse>;\n  /**\n   * Updates VirtualHub tags.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param virtualHubParameters Parameters supplied to update VirtualHub tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    virtualHubName: string,\n    virtualHubParameters: TagsObject,\n    options?: VirtualHubsUpdateTagsOptionalParams,\n  ): Promise<VirtualHubsUpdateTagsResponse>;\n  /**\n   * Deletes a VirtualHub.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: VirtualHubsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a VirtualHub.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: VirtualHubsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the effective routes configured for the Virtual Hub resource or the specified resource .\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  beginGetEffectiveVirtualHubRoutes(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: VirtualHubsGetEffectiveVirtualHubRoutesOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualHubsGetEffectiveVirtualHubRoutesResponse>,\n      VirtualHubsGetEffectiveVirtualHubRoutesResponse\n    >\n  >;\n  /**\n   * Gets the effective routes configured for the Virtual Hub resource or the specified resource .\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  beginGetEffectiveVirtualHubRoutesAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: VirtualHubsGetEffectiveVirtualHubRoutesOptionalParams,\n  ): Promise<VirtualHubsGetEffectiveVirtualHubRoutesResponse>;\n  /**\n   * Gets the inbound routes configured for the Virtual Hub on a particular connection.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param getInboundRoutesParameters Parameters supplied to get the inbound routes for a connection\n   *                                   resource.\n   * @param options The options parameters.\n   */\n  beginGetInboundRoutes(\n    resourceGroupName: string,\n    virtualHubName: string,\n    getInboundRoutesParameters: GetInboundRoutesParameters,\n    options?: VirtualHubsGetInboundRoutesOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualHubsGetInboundRoutesResponse>,\n      VirtualHubsGetInboundRoutesResponse\n    >\n  >;\n  /**\n   * Gets the inbound routes configured for the Virtual Hub on a particular connection.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param getInboundRoutesParameters Parameters supplied to get the inbound routes for a connection\n   *                                   resource.\n   * @param options The options parameters.\n   */\n  beginGetInboundRoutesAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    getInboundRoutesParameters: GetInboundRoutesParameters,\n    options?: VirtualHubsGetInboundRoutesOptionalParams,\n  ): Promise<VirtualHubsGetInboundRoutesResponse>;\n  /**\n   * Gets the outbound routes configured for the Virtual Hub on a particular connection.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param getOutboundRoutesParameters Parameters supplied to get the outbound routes for a connection\n   *                                    resource.\n   * @param options The options parameters.\n   */\n  beginGetOutboundRoutes(\n    resourceGroupName: string,\n    virtualHubName: string,\n    getOutboundRoutesParameters: GetOutboundRoutesParameters,\n    options?: VirtualHubsGetOutboundRoutesOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualHubsGetOutboundRoutesResponse>,\n      VirtualHubsGetOutboundRoutesResponse\n    >\n  >;\n  /**\n   * Gets the outbound routes configured for the Virtual Hub on a particular connection.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param getOutboundRoutesParameters Parameters supplied to get the outbound routes for a connection\n   *                                    resource.\n   * @param options The options parameters.\n   */\n  beginGetOutboundRoutesAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    getOutboundRoutesParameters: GetOutboundRoutesParameters,\n    options?: VirtualHubsGetOutboundRoutesOptionalParams,\n  ): Promise<VirtualHubsGetOutboundRoutesResponse>;\n}\n"]}