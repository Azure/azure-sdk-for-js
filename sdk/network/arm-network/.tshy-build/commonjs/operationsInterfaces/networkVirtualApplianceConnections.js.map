{"version":3,"file":"networkVirtualApplianceConnections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/networkVirtualApplianceConnections.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  NetworkVirtualApplianceConnection,\n  NetworkVirtualApplianceConnectionsListOptionalParams,\n  NetworkVirtualApplianceConnectionsCreateOrUpdateOptionalParams,\n  NetworkVirtualApplianceConnectionsCreateOrUpdateResponse,\n  NetworkVirtualApplianceConnectionsGetOptionalParams,\n  NetworkVirtualApplianceConnectionsGetResponse,\n  NetworkVirtualApplianceConnectionsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a NetworkVirtualApplianceConnections. */\nexport interface NetworkVirtualApplianceConnections {\n  /**\n   * Lists NetworkVirtualApplianceConnections under the NVA.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of the Network Virtual Appliance.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    options?: NetworkVirtualApplianceConnectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkVirtualApplianceConnection>;\n  /**\n   * Creates a connection to Network Virtual Appliance, if it doesn't exist else updates the existing NVA\n   * connection'\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of the Network Virtual Appliance.\n   * @param connectionName The name of the NVA connection.\n   * @param networkVirtualApplianceConnectionParameters Parameters supplied in an\n   *                                                    NetworkVirtualApplianceConnection PUT operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    connectionName: string,\n    networkVirtualApplianceConnectionParameters: NetworkVirtualApplianceConnection,\n    options?: NetworkVirtualApplianceConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkVirtualApplianceConnectionsCreateOrUpdateResponse>,\n      NetworkVirtualApplianceConnectionsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a connection to Network Virtual Appliance, if it doesn't exist else updates the existing NVA\n   * connection'\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of the Network Virtual Appliance.\n   * @param connectionName The name of the NVA connection.\n   * @param networkVirtualApplianceConnectionParameters Parameters supplied in an\n   *                                                    NetworkVirtualApplianceConnection PUT operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    connectionName: string,\n    networkVirtualApplianceConnectionParameters: NetworkVirtualApplianceConnection,\n    options?: NetworkVirtualApplianceConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<NetworkVirtualApplianceConnectionsCreateOrUpdateResponse>;\n  /**\n   * Retrieves the details of specified NVA connection.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of the Network Virtual Appliance.\n   * @param connectionName The name of the NVA connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    connectionName: string,\n    options?: NetworkVirtualApplianceConnectionsGetOptionalParams,\n  ): Promise<NetworkVirtualApplianceConnectionsGetResponse>;\n  /**\n   * Deletes a NVA connection.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of the Network Virtual Appliance.\n   * @param connectionName The name of the NVA connection.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    connectionName: string,\n    options?: NetworkVirtualApplianceConnectionsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a NVA connection.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of the Network Virtual Appliance.\n   * @param connectionName The name of the NVA connection.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    connectionName: string,\n    options?: NetworkVirtualApplianceConnectionsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}