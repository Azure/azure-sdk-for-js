{"version":3,"file":"hubVirtualNetworkConnections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/hubVirtualNetworkConnections.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  HubVirtualNetworkConnection,\n  HubVirtualNetworkConnectionsListOptionalParams,\n  HubVirtualNetworkConnectionsCreateOrUpdateOptionalParams,\n  HubVirtualNetworkConnectionsCreateOrUpdateResponse,\n  HubVirtualNetworkConnectionsDeleteOptionalParams,\n  HubVirtualNetworkConnectionsGetOptionalParams,\n  HubVirtualNetworkConnectionsGetResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a HubVirtualNetworkConnections. */\nexport interface HubVirtualNetworkConnections {\n  /**\n   * Retrieves the details of all HubVirtualNetworkConnections.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: HubVirtualNetworkConnectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<HubVirtualNetworkConnection>;\n  /**\n   * Creates a hub virtual network connection if it doesn't exist else updates the existing one.\n   * @param resourceGroupName The resource group name of the HubVirtualNetworkConnection.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param connectionName The name of the HubVirtualNetworkConnection.\n   * @param hubVirtualNetworkConnectionParameters Parameters supplied to create or update a hub virtual\n   *                                              network connection.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualHubName: string,\n    connectionName: string,\n    hubVirtualNetworkConnectionParameters: HubVirtualNetworkConnection,\n    options?: HubVirtualNetworkConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<HubVirtualNetworkConnectionsCreateOrUpdateResponse>,\n      HubVirtualNetworkConnectionsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a hub virtual network connection if it doesn't exist else updates the existing one.\n   * @param resourceGroupName The resource group name of the HubVirtualNetworkConnection.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param connectionName The name of the HubVirtualNetworkConnection.\n   * @param hubVirtualNetworkConnectionParameters Parameters supplied to create or update a hub virtual\n   *                                              network connection.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    connectionName: string,\n    hubVirtualNetworkConnectionParameters: HubVirtualNetworkConnection,\n    options?: HubVirtualNetworkConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<HubVirtualNetworkConnectionsCreateOrUpdateResponse>;\n  /**\n   * Deletes a HubVirtualNetworkConnection.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param connectionName The name of the HubVirtualNetworkConnection.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualHubName: string,\n    connectionName: string,\n    options?: HubVirtualNetworkConnectionsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a HubVirtualNetworkConnection.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param connectionName The name of the HubVirtualNetworkConnection.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    connectionName: string,\n    options?: HubVirtualNetworkConnectionsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Retrieves the details of a HubVirtualNetworkConnection.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param connectionName The name of the vpn connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualHubName: string,\n    connectionName: string,\n    options?: HubVirtualNetworkConnectionsGetOptionalParams,\n  ): Promise<HubVirtualNetworkConnectionsGetResponse>;\n}\n"]}