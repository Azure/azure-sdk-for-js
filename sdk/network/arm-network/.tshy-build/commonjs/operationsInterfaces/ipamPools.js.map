{"version":3,"file":"ipamPools.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/ipamPools.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  IpamPool,\n  IpamPoolsListOptionalParams,\n  PoolAssociation,\n  IpamPoolsListAssociatedResourcesOptionalParams,\n  IpamPoolsCreateOptionalParams,\n  IpamPoolsCreateResponse,\n  IpamPoolsUpdateOptionalParams,\n  IpamPoolsUpdateResponse,\n  IpamPoolsGetOptionalParams,\n  IpamPoolsGetResponse,\n  IpamPoolsDeleteOptionalParams,\n  IpamPoolsDeleteResponse,\n  IpamPoolsGetPoolUsageOptionalParams,\n  IpamPoolsGetPoolUsageResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a IpamPools. */\nexport interface IpamPools {\n  /**\n   * Gets list of Pool resources at Network Manager level.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    options?: IpamPoolsListOptionalParams,\n  ): PagedAsyncIterableIterator<IpamPool>;\n  /**\n   * List Associated Resource in the Pool.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param poolName Pool resource name.\n   * @param options The options parameters.\n   */\n  listAssociatedResources(\n    resourceGroupName: string,\n    networkManagerName: string,\n    poolName: string,\n    options?: IpamPoolsListAssociatedResourcesOptionalParams,\n  ): PagedAsyncIterableIterator<PoolAssociation>;\n  /**\n   * Creates/Updates the Pool resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param poolName IP Address Manager Pool resource name.\n   * @param body Pool resource object to create/update.\n   * @param options The options parameters.\n   */\n  beginCreate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    poolName: string,\n    body: IpamPool,\n    options?: IpamPoolsCreateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<IpamPoolsCreateResponse>,\n      IpamPoolsCreateResponse\n    >\n  >;\n  /**\n   * Creates/Updates the Pool resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param poolName IP Address Manager Pool resource name.\n   * @param body Pool resource object to create/update.\n   * @param options The options parameters.\n   */\n  beginCreateAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    poolName: string,\n    body: IpamPool,\n    options?: IpamPoolsCreateOptionalParams,\n  ): Promise<IpamPoolsCreateResponse>;\n  /**\n   * Updates the specific Pool resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param poolName IP Address Manager Pool resource name.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    networkManagerName: string,\n    poolName: string,\n    options?: IpamPoolsUpdateOptionalParams,\n  ): Promise<IpamPoolsUpdateResponse>;\n  /**\n   * Gets the specific Pool resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param poolName Pool resource name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    poolName: string,\n    options?: IpamPoolsGetOptionalParams,\n  ): Promise<IpamPoolsGetResponse>;\n  /**\n   * Delete the Pool resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param poolName Pool resource name.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    poolName: string,\n    options?: IpamPoolsDeleteOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<IpamPoolsDeleteResponse>,\n      IpamPoolsDeleteResponse\n    >\n  >;\n  /**\n   * Delete the Pool resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param poolName Pool resource name.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    poolName: string,\n    options?: IpamPoolsDeleteOptionalParams,\n  ): Promise<IpamPoolsDeleteResponse>;\n  /**\n   * Get the Pool Usage.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param poolName Pool resource name.\n   * @param options The options parameters.\n   */\n  getPoolUsage(\n    resourceGroupName: string,\n    networkManagerName: string,\n    poolName: string,\n    options?: IpamPoolsGetPoolUsageOptionalParams,\n  ): Promise<IpamPoolsGetPoolUsageResponse>;\n}\n"]}