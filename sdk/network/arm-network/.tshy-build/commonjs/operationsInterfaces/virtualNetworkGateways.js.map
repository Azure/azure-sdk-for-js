{"version":3,"file":"virtualNetworkGateways.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/virtualNetworkGateways.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VirtualNetworkGateway,\n  VirtualNetworkGatewaysListOptionalParams,\n  VirtualNetworkGatewayConnectionListEntity,\n  VirtualNetworkGatewaysListConnectionsOptionalParams,\n  VirtualNetworkGatewaysCreateOrUpdateOptionalParams,\n  VirtualNetworkGatewaysCreateOrUpdateResponse,\n  VirtualNetworkGatewaysGetOptionalParams,\n  VirtualNetworkGatewaysGetResponse,\n  VirtualNetworkGatewaysDeleteOptionalParams,\n  TagsObject,\n  VirtualNetworkGatewaysUpdateTagsOptionalParams,\n  VirtualNetworkGatewaysUpdateTagsResponse,\n  VirtualNetworkGatewaysResetOptionalParams,\n  VirtualNetworkGatewaysResetResponse,\n  VirtualNetworkGatewaysResetVpnClientSharedKeyOptionalParams,\n  VpnClientParameters,\n  VirtualNetworkGatewaysGeneratevpnclientpackageOptionalParams,\n  VirtualNetworkGatewaysGeneratevpnclientpackageResponse,\n  VirtualNetworkGatewaysGenerateVpnProfileOptionalParams,\n  VirtualNetworkGatewaysGenerateVpnProfileResponse,\n  VirtualNetworkGatewaysGetVpnProfilePackageUrlOptionalParams,\n  VirtualNetworkGatewaysGetVpnProfilePackageUrlResponse,\n  VirtualNetworkGatewaysGetBgpPeerStatusOptionalParams,\n  VirtualNetworkGatewaysGetBgpPeerStatusResponse,\n  VirtualNetworkGatewaysSupportedVpnDevicesOptionalParams,\n  VirtualNetworkGatewaysSupportedVpnDevicesResponse,\n  VirtualNetworkGatewaysGetLearnedRoutesOptionalParams,\n  VirtualNetworkGatewaysGetLearnedRoutesResponse,\n  VirtualNetworkGatewaysGetAdvertisedRoutesOptionalParams,\n  VirtualNetworkGatewaysGetAdvertisedRoutesResponse,\n  VpnClientIPsecParameters,\n  VirtualNetworkGatewaysSetVpnclientIpsecParametersOptionalParams,\n  VirtualNetworkGatewaysSetVpnclientIpsecParametersResponse,\n  VirtualNetworkGatewaysGetVpnclientIpsecParametersOptionalParams,\n  VirtualNetworkGatewaysGetVpnclientIpsecParametersResponse,\n  VpnDeviceScriptParameters,\n  VirtualNetworkGatewaysVpnDeviceConfigurationScriptOptionalParams,\n  VirtualNetworkGatewaysVpnDeviceConfigurationScriptResponse,\n  VirtualNetworkGatewaysStartPacketCaptureOptionalParams,\n  VirtualNetworkGatewaysStartPacketCaptureResponse,\n  VpnPacketCaptureStopParameters,\n  VirtualNetworkGatewaysStopPacketCaptureOptionalParams,\n  VirtualNetworkGatewaysStopPacketCaptureResponse,\n  VirtualNetworkGatewaysGetFailoverAllTestDetailsOptionalParams,\n  VirtualNetworkGatewaysGetFailoverAllTestDetailsResponse,\n  VirtualNetworkGatewaysGetFailoverSingleTestDetailsOptionalParams,\n  VirtualNetworkGatewaysGetFailoverSingleTestDetailsResponse,\n  VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationOptionalParams,\n  VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationResponse,\n  ExpressRouteFailoverStopApiParameters,\n  VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationOptionalParams,\n  VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationResponse,\n  VirtualNetworkGatewaysGetVpnclientConnectionHealthOptionalParams,\n  VirtualNetworkGatewaysGetVpnclientConnectionHealthResponse,\n  P2SVpnConnectionRequest,\n  VirtualNetworkGatewaysDisconnectVirtualNetworkGatewayVpnConnectionsOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VirtualNetworkGateways. */\nexport interface VirtualNetworkGateways {\n  /**\n   * Gets all virtual network gateways by resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    options?: VirtualNetworkGatewaysListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualNetworkGateway>;\n  /**\n   * Gets all the connections in a virtual network gateway.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  listConnections(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysListConnectionsOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualNetworkGatewayConnectionListEntity>;\n  /**\n   * Creates or updates a virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Parameters supplied to create or update virtual network gateway operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: VirtualNetworkGateway,\n    options?: VirtualNetworkGatewaysCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysCreateOrUpdateResponse>,\n      VirtualNetworkGatewaysCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Parameters supplied to create or update virtual network gateway operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: VirtualNetworkGateway,\n    options?: VirtualNetworkGatewaysCreateOrUpdateOptionalParams,\n  ): Promise<VirtualNetworkGatewaysCreateOrUpdateResponse>;\n  /**\n   * Gets the specified virtual network gateway by resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetResponse>;\n  /**\n   * Deletes the specified virtual network gateway.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified virtual network gateway.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Updates a virtual network gateway tags.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Parameters supplied to update virtual network gateway tags.\n   * @param options The options parameters.\n   */\n  beginUpdateTags(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: TagsObject,\n    options?: VirtualNetworkGatewaysUpdateTagsOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysUpdateTagsResponse>,\n      VirtualNetworkGatewaysUpdateTagsResponse\n    >\n  >;\n  /**\n   * Updates a virtual network gateway tags.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Parameters supplied to update virtual network gateway tags.\n   * @param options The options parameters.\n   */\n  beginUpdateTagsAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: TagsObject,\n    options?: VirtualNetworkGatewaysUpdateTagsOptionalParams,\n  ): Promise<VirtualNetworkGatewaysUpdateTagsResponse>;\n  /**\n   * Resets the primary of the virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginReset(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysResetOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysResetResponse>,\n      VirtualNetworkGatewaysResetResponse\n    >\n  >;\n  /**\n   * Resets the primary of the virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginResetAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysResetOptionalParams,\n  ): Promise<VirtualNetworkGatewaysResetResponse>;\n  /**\n   * Resets the VPN client shared key of the virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginResetVpnClientSharedKey(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysResetVpnClientSharedKeyOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Resets the VPN client shared key of the virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginResetVpnClientSharedKeyAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysResetVpnClientSharedKeyOptionalParams,\n  ): Promise<void>;\n  /**\n   * Generates VPN client package for P2S client of the virtual network gateway in the specified resource\n   * group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Parameters supplied to the generate virtual network gateway VPN client package\n   *                   operation.\n   * @param options The options parameters.\n   */\n  beginGeneratevpnclientpackage(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: VpnClientParameters,\n    options?: VirtualNetworkGatewaysGeneratevpnclientpackageOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGeneratevpnclientpackageResponse>,\n      VirtualNetworkGatewaysGeneratevpnclientpackageResponse\n    >\n  >;\n  /**\n   * Generates VPN client package for P2S client of the virtual network gateway in the specified resource\n   * group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Parameters supplied to the generate virtual network gateway VPN client package\n   *                   operation.\n   * @param options The options parameters.\n   */\n  beginGeneratevpnclientpackageAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: VpnClientParameters,\n    options?: VirtualNetworkGatewaysGeneratevpnclientpackageOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGeneratevpnclientpackageResponse>;\n  /**\n   * Generates VPN profile for P2S client of the virtual network gateway in the specified resource group.\n   * Used for IKEV2 and radius based authentication.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Parameters supplied to the generate virtual network gateway VPN client package\n   *                   operation.\n   * @param options The options parameters.\n   */\n  beginGenerateVpnProfile(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: VpnClientParameters,\n    options?: VirtualNetworkGatewaysGenerateVpnProfileOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGenerateVpnProfileResponse>,\n      VirtualNetworkGatewaysGenerateVpnProfileResponse\n    >\n  >;\n  /**\n   * Generates VPN profile for P2S client of the virtual network gateway in the specified resource group.\n   * Used for IKEV2 and radius based authentication.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Parameters supplied to the generate virtual network gateway VPN client package\n   *                   operation.\n   * @param options The options parameters.\n   */\n  beginGenerateVpnProfileAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: VpnClientParameters,\n    options?: VirtualNetworkGatewaysGenerateVpnProfileOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGenerateVpnProfileResponse>;\n  /**\n   * Gets pre-generated VPN profile for P2S client of the virtual network gateway in the specified\n   * resource group. The profile needs to be generated first using generateVpnProfile.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginGetVpnProfilePackageUrl(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetVpnProfilePackageUrlOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGetVpnProfilePackageUrlResponse>,\n      VirtualNetworkGatewaysGetVpnProfilePackageUrlResponse\n    >\n  >;\n  /**\n   * Gets pre-generated VPN profile for P2S client of the virtual network gateway in the specified\n   * resource group. The profile needs to be generated first using generateVpnProfile.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginGetVpnProfilePackageUrlAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetVpnProfilePackageUrlOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetVpnProfilePackageUrlResponse>;\n  /**\n   * The GetBgpPeerStatus operation retrieves the status of all BGP peers.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginGetBgpPeerStatus(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetBgpPeerStatusOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGetBgpPeerStatusResponse>,\n      VirtualNetworkGatewaysGetBgpPeerStatusResponse\n    >\n  >;\n  /**\n   * The GetBgpPeerStatus operation retrieves the status of all BGP peers.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginGetBgpPeerStatusAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetBgpPeerStatusOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetBgpPeerStatusResponse>;\n  /**\n   * Gets a xml format representation for supported vpn devices.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  supportedVpnDevices(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysSupportedVpnDevicesOptionalParams,\n  ): Promise<VirtualNetworkGatewaysSupportedVpnDevicesResponse>;\n  /**\n   * This operation retrieves a list of routes the virtual network gateway has learned, including routes\n   * learned from BGP peers.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginGetLearnedRoutes(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetLearnedRoutesOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGetLearnedRoutesResponse>,\n      VirtualNetworkGatewaysGetLearnedRoutesResponse\n    >\n  >;\n  /**\n   * This operation retrieves a list of routes the virtual network gateway has learned, including routes\n   * learned from BGP peers.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginGetLearnedRoutesAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetLearnedRoutesOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetLearnedRoutesResponse>;\n  /**\n   * This operation retrieves a list of routes the virtual network gateway is advertising to the\n   * specified peer.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param peer The IP address of the peer.\n   * @param options The options parameters.\n   */\n  beginGetAdvertisedRoutes(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    peer: string,\n    options?: VirtualNetworkGatewaysGetAdvertisedRoutesOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGetAdvertisedRoutesResponse>,\n      VirtualNetworkGatewaysGetAdvertisedRoutesResponse\n    >\n  >;\n  /**\n   * This operation retrieves a list of routes the virtual network gateway is advertising to the\n   * specified peer.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param peer The IP address of the peer.\n   * @param options The options parameters.\n   */\n  beginGetAdvertisedRoutesAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    peer: string,\n    options?: VirtualNetworkGatewaysGetAdvertisedRoutesOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetAdvertisedRoutesResponse>;\n  /**\n   * The Set VpnclientIpsecParameters operation sets the vpnclient ipsec policy for P2S client of virtual\n   * network gateway in the specified resource group through Network resource provider.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param vpnclientIpsecParams Parameters supplied to the Begin Set vpnclient ipsec parameters of\n   *                             Virtual Network Gateway P2S client operation through Network resource provider.\n   * @param options The options parameters.\n   */\n  beginSetVpnclientIpsecParameters(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    vpnclientIpsecParams: VpnClientIPsecParameters,\n    options?: VirtualNetworkGatewaysSetVpnclientIpsecParametersOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysSetVpnclientIpsecParametersResponse>,\n      VirtualNetworkGatewaysSetVpnclientIpsecParametersResponse\n    >\n  >;\n  /**\n   * The Set VpnclientIpsecParameters operation sets the vpnclient ipsec policy for P2S client of virtual\n   * network gateway in the specified resource group through Network resource provider.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param vpnclientIpsecParams Parameters supplied to the Begin Set vpnclient ipsec parameters of\n   *                             Virtual Network Gateway P2S client operation through Network resource provider.\n   * @param options The options parameters.\n   */\n  beginSetVpnclientIpsecParametersAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    vpnclientIpsecParams: VpnClientIPsecParameters,\n    options?: VirtualNetworkGatewaysSetVpnclientIpsecParametersOptionalParams,\n  ): Promise<VirtualNetworkGatewaysSetVpnclientIpsecParametersResponse>;\n  /**\n   * The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy\n   * for P2S client of virtual network gateway in the specified resource group through Network resource\n   * provider.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The virtual network gateway name.\n   * @param options The options parameters.\n   */\n  beginGetVpnclientIpsecParameters(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetVpnclientIpsecParametersOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGetVpnclientIpsecParametersResponse>,\n      VirtualNetworkGatewaysGetVpnclientIpsecParametersResponse\n    >\n  >;\n  /**\n   * The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy\n   * for P2S client of virtual network gateway in the specified resource group through Network resource\n   * provider.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The virtual network gateway name.\n   * @param options The options parameters.\n   */\n  beginGetVpnclientIpsecParametersAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetVpnclientIpsecParametersOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetVpnclientIpsecParametersResponse>;\n  /**\n   * Gets a xml format representation for vpn device configuration script.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayConnectionName The name of the virtual network gateway connection for\n   *                                            which the configuration script is generated.\n   * @param parameters Parameters supplied to the generate vpn device script operation.\n   * @param options The options parameters.\n   */\n  vpnDeviceConfigurationScript(\n    resourceGroupName: string,\n    virtualNetworkGatewayConnectionName: string,\n    parameters: VpnDeviceScriptParameters,\n    options?: VirtualNetworkGatewaysVpnDeviceConfigurationScriptOptionalParams,\n  ): Promise<VirtualNetworkGatewaysVpnDeviceConfigurationScriptResponse>;\n  /**\n   * Starts packet capture on virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginStartPacketCapture(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysStartPacketCaptureOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysStartPacketCaptureResponse>,\n      VirtualNetworkGatewaysStartPacketCaptureResponse\n    >\n  >;\n  /**\n   * Starts packet capture on virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginStartPacketCaptureAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysStartPacketCaptureOptionalParams,\n  ): Promise<VirtualNetworkGatewaysStartPacketCaptureResponse>;\n  /**\n   * Stops packet capture on virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Virtual network gateway packet capture parameters supplied to stop packet capture\n   *                   on gateway.\n   * @param options The options parameters.\n   */\n  beginStopPacketCapture(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: VpnPacketCaptureStopParameters,\n    options?: VirtualNetworkGatewaysStopPacketCaptureOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysStopPacketCaptureResponse>,\n      VirtualNetworkGatewaysStopPacketCaptureResponse\n    >\n  >;\n  /**\n   * Stops packet capture on virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param parameters Virtual network gateway packet capture parameters supplied to stop packet capture\n   *                   on gateway.\n   * @param options The options parameters.\n   */\n  beginStopPacketCaptureAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    parameters: VpnPacketCaptureStopParameters,\n    options?: VirtualNetworkGatewaysStopPacketCaptureOptionalParams,\n  ): Promise<VirtualNetworkGatewaysStopPacketCaptureResponse>;\n  /**\n   * This operation retrieves the details of all the failover tests performed on the gateway for\n   * different peering locations\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param typeParam The type of failover test\n   * @param fetchLatest Fetch only the latest tests for each peering location\n   * @param options The options parameters.\n   */\n  beginGetFailoverAllTestDetails(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    typeParam: string,\n    fetchLatest: boolean,\n    options?: VirtualNetworkGatewaysGetFailoverAllTestDetailsOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGetFailoverAllTestDetailsResponse>,\n      VirtualNetworkGatewaysGetFailoverAllTestDetailsResponse\n    >\n  >;\n  /**\n   * This operation retrieves the details of all the failover tests performed on the gateway for\n   * different peering locations\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param typeParam The type of failover test\n   * @param fetchLatest Fetch only the latest tests for each peering location\n   * @param options The options parameters.\n   */\n  beginGetFailoverAllTestDetailsAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    typeParam: string,\n    fetchLatest: boolean,\n    options?: VirtualNetworkGatewaysGetFailoverAllTestDetailsOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetFailoverAllTestDetailsResponse>;\n  /**\n   * This operation retrieves the details of a particular failover test performed on the gateway based on\n   * the test Guid\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param peeringLocation Peering location of the test\n   * @param failoverTestId The unique Guid value which identifies the test\n   * @param options The options parameters.\n   */\n  beginGetFailoverSingleTestDetails(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    peeringLocation: string,\n    failoverTestId: string,\n    options?: VirtualNetworkGatewaysGetFailoverSingleTestDetailsOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGetFailoverSingleTestDetailsResponse>,\n      VirtualNetworkGatewaysGetFailoverSingleTestDetailsResponse\n    >\n  >;\n  /**\n   * This operation retrieves the details of a particular failover test performed on the gateway based on\n   * the test Guid\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param peeringLocation Peering location of the test\n   * @param failoverTestId The unique Guid value which identifies the test\n   * @param options The options parameters.\n   */\n  beginGetFailoverSingleTestDetailsAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    peeringLocation: string,\n    failoverTestId: string,\n    options?: VirtualNetworkGatewaysGetFailoverSingleTestDetailsOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetFailoverSingleTestDetailsResponse>;\n  /**\n   * This operation starts failover simulation on the gateway for the specified peering location\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param peeringLocation Peering location of the test\n   * @param options The options parameters.\n   */\n  beginStartExpressRouteSiteFailoverSimulation(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    peeringLocation: string,\n    options?: VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationResponse>,\n      VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationResponse\n    >\n  >;\n  /**\n   * This operation starts failover simulation on the gateway for the specified peering location\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param peeringLocation Peering location of the test\n   * @param options The options parameters.\n   */\n  beginStartExpressRouteSiteFailoverSimulationAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    peeringLocation: string,\n    options?: VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationOptionalParams,\n  ): Promise<VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationResponse>;\n  /**\n   * This operation stops failover simulation on the gateway for the specified peering location\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param stopParameters Virtual network gateway stop simulation parameters supplied to stop failover\n   *                       simulation on gateway.\n   * @param options The options parameters.\n   */\n  beginStopExpressRouteSiteFailoverSimulation(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    stopParameters: ExpressRouteFailoverStopApiParameters,\n    options?: VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationResponse>,\n      VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationResponse\n    >\n  >;\n  /**\n   * This operation stops failover simulation on the gateway for the specified peering location\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param stopParameters Virtual network gateway stop simulation parameters supplied to stop failover\n   *                       simulation on gateway.\n   * @param options The options parameters.\n   */\n  beginStopExpressRouteSiteFailoverSimulationAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    stopParameters: ExpressRouteFailoverStopApiParameters,\n    options?: VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationOptionalParams,\n  ): Promise<VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationResponse>;\n  /**\n   * Get VPN client connection health detail per P2S client connection of the virtual network gateway in\n   * the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginGetVpnclientConnectionHealth(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetVpnclientConnectionHealthOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualNetworkGatewaysGetVpnclientConnectionHealthResponse>,\n      VirtualNetworkGatewaysGetVpnclientConnectionHealthResponse\n    >\n  >;\n  /**\n   * Get VPN client connection health detail per P2S client connection of the virtual network gateway in\n   * the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param options The options parameters.\n   */\n  beginGetVpnclientConnectionHealthAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    options?: VirtualNetworkGatewaysGetVpnclientConnectionHealthOptionalParams,\n  ): Promise<VirtualNetworkGatewaysGetVpnclientConnectionHealthResponse>;\n  /**\n   * Disconnect vpn connections of virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param request The parameters are supplied to disconnect vpn connections.\n   * @param options The options parameters.\n   */\n  beginDisconnectVirtualNetworkGatewayVpnConnections(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    request: P2SVpnConnectionRequest,\n    options?: VirtualNetworkGatewaysDisconnectVirtualNetworkGatewayVpnConnectionsOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Disconnect vpn connections of virtual network gateway in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualNetworkGatewayName The name of the virtual network gateway.\n   * @param request The parameters are supplied to disconnect vpn connections.\n   * @param options The options parameters.\n   */\n  beginDisconnectVirtualNetworkGatewayVpnConnectionsAndWait(\n    resourceGroupName: string,\n    virtualNetworkGatewayName: string,\n    request: P2SVpnConnectionRequest,\n    options?: VirtualNetworkGatewaysDisconnectVirtualNetworkGatewayVpnConnectionsOptionalParams,\n  ): Promise<void>;\n}\n"]}