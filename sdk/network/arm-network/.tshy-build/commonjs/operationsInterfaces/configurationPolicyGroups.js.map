{"version":3,"file":"configurationPolicyGroups.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/configurationPolicyGroups.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VpnServerConfigurationPolicyGroup,\n  ConfigurationPolicyGroupsListByVpnServerConfigurationOptionalParams,\n  ConfigurationPolicyGroupsCreateOrUpdateOptionalParams,\n  ConfigurationPolicyGroupsCreateOrUpdateResponse,\n  ConfigurationPolicyGroupsDeleteOptionalParams,\n  ConfigurationPolicyGroupsGetOptionalParams,\n  ConfigurationPolicyGroupsGetResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a ConfigurationPolicyGroups. */\nexport interface ConfigurationPolicyGroups {\n  /**\n   * Lists all the configurationPolicyGroups in a resource group for a vpnServerConfiguration.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration.\n   * @param options The options parameters.\n   */\n  listByVpnServerConfiguration(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    options?: ConfigurationPolicyGroupsListByVpnServerConfigurationOptionalParams,\n  ): PagedAsyncIterableIterator<VpnServerConfigurationPolicyGroup>;\n  /**\n   * Creates a ConfigurationPolicyGroup if it doesn't exist else updates the existing one.\n   * @param resourceGroupName The resource group name of the ConfigurationPolicyGroup.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration.\n   * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup.\n   * @param vpnServerConfigurationPolicyGroupParameters Parameters supplied to create or update a\n   *                                                    VpnServerConfiguration PolicyGroup.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    configurationPolicyGroupName: string,\n    vpnServerConfigurationPolicyGroupParameters: VpnServerConfigurationPolicyGroup,\n    options?: ConfigurationPolicyGroupsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ConfigurationPolicyGroupsCreateOrUpdateResponse>,\n      ConfigurationPolicyGroupsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a ConfigurationPolicyGroup if it doesn't exist else updates the existing one.\n   * @param resourceGroupName The resource group name of the ConfigurationPolicyGroup.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration.\n   * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup.\n   * @param vpnServerConfigurationPolicyGroupParameters Parameters supplied to create or update a\n   *                                                    VpnServerConfiguration PolicyGroup.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    configurationPolicyGroupName: string,\n    vpnServerConfigurationPolicyGroupParameters: VpnServerConfigurationPolicyGroup,\n    options?: ConfigurationPolicyGroupsCreateOrUpdateOptionalParams,\n  ): Promise<ConfigurationPolicyGroupsCreateOrUpdateResponse>;\n  /**\n   * Deletes a ConfigurationPolicyGroup.\n   * @param resourceGroupName The resource group name of the ConfigurationPolicyGroup.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration.\n   * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    configurationPolicyGroupName: string,\n    options?: ConfigurationPolicyGroupsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a ConfigurationPolicyGroup.\n   * @param resourceGroupName The resource group name of the ConfigurationPolicyGroup.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration.\n   * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    configurationPolicyGroupName: string,\n    options?: ConfigurationPolicyGroupsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Retrieves the details of a ConfigurationPolicyGroup.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration.\n   * @param configurationPolicyGroupName The name of the ConfigurationPolicyGroup being retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    configurationPolicyGroupName: string,\n    options?: ConfigurationPolicyGroupsGetOptionalParams,\n  ): Promise<ConfigurationPolicyGroupsGetResponse>;\n}\n"]}