{"version":3,"file":"securityAdminConfigurations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/securityAdminConfigurations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  SecurityAdminConfiguration,\n  SecurityAdminConfigurationsListOptionalParams,\n  SecurityAdminConfigurationsGetOptionalParams,\n  SecurityAdminConfigurationsGetResponse,\n  SecurityAdminConfigurationsCreateOrUpdateOptionalParams,\n  SecurityAdminConfigurationsCreateOrUpdateResponse,\n  SecurityAdminConfigurationsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a SecurityAdminConfigurations. */\nexport interface SecurityAdminConfigurations {\n  /**\n   * Lists all the network manager security admin configurations in a network manager, in a paginated\n   * format.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    options?: SecurityAdminConfigurationsListOptionalParams,\n  ): PagedAsyncIterableIterator<SecurityAdminConfiguration>;\n  /**\n   * Retrieves a network manager security admin configuration.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: SecurityAdminConfigurationsGetOptionalParams,\n  ): Promise<SecurityAdminConfigurationsGetResponse>;\n  /**\n   * Creates or updates a network manager security admin configuration.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param securityAdminConfiguration The security admin configuration to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    securityAdminConfiguration: SecurityAdminConfiguration,\n    options?: SecurityAdminConfigurationsCreateOrUpdateOptionalParams,\n  ): Promise<SecurityAdminConfigurationsCreateOrUpdateResponse>;\n  /**\n   * Deletes a network manager security admin configuration.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: SecurityAdminConfigurationsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a network manager security admin configuration.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: SecurityAdminConfigurationsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}