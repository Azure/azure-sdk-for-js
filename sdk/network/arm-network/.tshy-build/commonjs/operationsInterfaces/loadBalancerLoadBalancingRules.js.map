{"version":3,"file":"loadBalancerLoadBalancingRules.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/loadBalancerLoadBalancingRules.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  LoadBalancingRule,\n  LoadBalancerLoadBalancingRulesListOptionalParams,\n  LoadBalancerLoadBalancingRulesGetOptionalParams,\n  LoadBalancerLoadBalancingRulesGetResponse,\n  LoadBalancerLoadBalancingRulesHealthOptionalParams,\n  LoadBalancerLoadBalancingRulesHealthResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a LoadBalancerLoadBalancingRules. */\nexport interface LoadBalancerLoadBalancingRules {\n  /**\n   * Gets all the load balancing rules in a load balancer.\n   * @param resourceGroupName The name of the resource group.\n   * @param loadBalancerName The name of the load balancer.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    loadBalancerName: string,\n    options?: LoadBalancerLoadBalancingRulesListOptionalParams,\n  ): PagedAsyncIterableIterator<LoadBalancingRule>;\n  /**\n   * Gets the specified load balancer load balancing rule.\n   * @param resourceGroupName The name of the resource group.\n   * @param loadBalancerName The name of the load balancer.\n   * @param loadBalancingRuleName The name of the load balancing rule.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    loadBalancerName: string,\n    loadBalancingRuleName: string,\n    options?: LoadBalancerLoadBalancingRulesGetOptionalParams,\n  ): Promise<LoadBalancerLoadBalancingRulesGetResponse>;\n  /**\n   * Get health details of a load balancing rule.\n   * @param groupName The name of the resource group.\n   * @param loadBalancerName The name of the load balancer.\n   * @param loadBalancingRuleName The name of the load balancing rule.\n   * @param options The options parameters.\n   */\n  beginHealth(\n    groupName: string,\n    loadBalancerName: string,\n    loadBalancingRuleName: string,\n    options?: LoadBalancerLoadBalancingRulesHealthOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<LoadBalancerLoadBalancingRulesHealthResponse>,\n      LoadBalancerLoadBalancingRulesHealthResponse\n    >\n  >;\n  /**\n   * Get health details of a load balancing rule.\n   * @param groupName The name of the resource group.\n   * @param loadBalancerName The name of the load balancer.\n   * @param loadBalancingRuleName The name of the load balancing rule.\n   * @param options The options parameters.\n   */\n  beginHealthAndWait(\n    groupName: string,\n    loadBalancerName: string,\n    loadBalancingRuleName: string,\n    options?: LoadBalancerLoadBalancingRulesHealthOptionalParams,\n  ): Promise<LoadBalancerLoadBalancingRulesHealthResponse>;\n}\n"]}