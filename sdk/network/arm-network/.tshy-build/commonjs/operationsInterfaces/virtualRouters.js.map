{"version":3,"file":"virtualRouters.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/virtualRouters.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VirtualRouter,\n  VirtualRoutersListByResourceGroupOptionalParams,\n  VirtualRoutersListOptionalParams,\n  VirtualRoutersDeleteOptionalParams,\n  VirtualRoutersGetOptionalParams,\n  VirtualRoutersGetResponse,\n  VirtualRoutersCreateOrUpdateOptionalParams,\n  VirtualRoutersCreateOrUpdateResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VirtualRouters. */\nexport interface VirtualRouters {\n  /**\n   * Lists all Virtual Routers in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: VirtualRoutersListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualRouter>;\n  /**\n   * Gets all the Virtual Routers in a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: VirtualRoutersListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualRouter>;\n  /**\n   * Deletes the specified Virtual Router.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    options?: VirtualRoutersDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified Virtual Router.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    options?: VirtualRoutersDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified Virtual Router.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    options?: VirtualRoutersGetOptionalParams,\n  ): Promise<VirtualRoutersGetResponse>;\n  /**\n   * Creates or updates the specified Virtual Router.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param parameters Parameters supplied to the create or update Virtual Router.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    parameters: VirtualRouter,\n    options?: VirtualRoutersCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualRoutersCreateOrUpdateResponse>,\n      VirtualRoutersCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates the specified Virtual Router.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param parameters Parameters supplied to the create or update Virtual Router.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    parameters: VirtualRouter,\n    options?: VirtualRoutersCreateOrUpdateOptionalParams,\n  ): Promise<VirtualRoutersCreateOrUpdateResponse>;\n}\n"]}