{"version":3,"file":"expressRouteCircuitConnections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/expressRouteCircuitConnections.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  ExpressRouteCircuitConnection,\n  ExpressRouteCircuitConnectionsListOptionalParams,\n  ExpressRouteCircuitConnectionsDeleteOptionalParams,\n  ExpressRouteCircuitConnectionsGetOptionalParams,\n  ExpressRouteCircuitConnectionsGetResponse,\n  ExpressRouteCircuitConnectionsCreateOrUpdateOptionalParams,\n  ExpressRouteCircuitConnectionsCreateOrUpdateResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a ExpressRouteCircuitConnections. */\nexport interface ExpressRouteCircuitConnections {\n  /**\n   * Gets all global reach connections associated with a private peering in an express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the circuit.\n   * @param peeringName The name of the peering.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    options?: ExpressRouteCircuitConnectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<ExpressRouteCircuitConnection>;\n  /**\n   * Deletes the specified Express Route Circuit Connection from the specified express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param connectionName The name of the express route circuit connection.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    connectionName: string,\n    options?: ExpressRouteCircuitConnectionsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified Express Route Circuit Connection from the specified express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param connectionName The name of the express route circuit connection.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    connectionName: string,\n    options?: ExpressRouteCircuitConnectionsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified Express Route Circuit Connection from the specified express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param connectionName The name of the express route circuit connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    connectionName: string,\n    options?: ExpressRouteCircuitConnectionsGetOptionalParams,\n  ): Promise<ExpressRouteCircuitConnectionsGetResponse>;\n  /**\n   * Creates or updates a Express Route Circuit Connection in the specified express route circuits.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param connectionName The name of the express route circuit connection.\n   * @param expressRouteCircuitConnectionParameters Parameters supplied to the create or update express\n   *                                                route circuit connection operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    connectionName: string,\n    expressRouteCircuitConnectionParameters: ExpressRouteCircuitConnection,\n    options?: ExpressRouteCircuitConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteCircuitConnectionsCreateOrUpdateResponse>,\n      ExpressRouteCircuitConnectionsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a Express Route Circuit Connection in the specified express route circuits.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param connectionName The name of the express route circuit connection.\n   * @param expressRouteCircuitConnectionParameters Parameters supplied to the create or update express\n   *                                                route circuit connection operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    connectionName: string,\n    expressRouteCircuitConnectionParameters: ExpressRouteCircuitConnection,\n    options?: ExpressRouteCircuitConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<ExpressRouteCircuitConnectionsCreateOrUpdateResponse>;\n}\n"]}