{"version":3,"file":"expressRouteGateways.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/expressRouteGateways.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  ExpressRouteGatewaysListBySubscriptionOptionalParams,\n  ExpressRouteGatewaysListBySubscriptionResponse,\n  ExpressRouteGatewaysListByResourceGroupOptionalParams,\n  ExpressRouteGatewaysListByResourceGroupResponse,\n  ExpressRouteGateway,\n  ExpressRouteGatewaysCreateOrUpdateOptionalParams,\n  ExpressRouteGatewaysCreateOrUpdateResponse,\n  TagsObject,\n  ExpressRouteGatewaysUpdateTagsOptionalParams,\n  ExpressRouteGatewaysUpdateTagsResponse,\n  ExpressRouteGatewaysGetOptionalParams,\n  ExpressRouteGatewaysGetResponse,\n  ExpressRouteGatewaysDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/** Interface representing a ExpressRouteGateways. */\nexport interface ExpressRouteGateways {\n  /**\n   * Lists ExpressRoute gateways under a given subscription.\n   * @param options The options parameters.\n   */\n  listBySubscription(\n    options?: ExpressRouteGatewaysListBySubscriptionOptionalParams,\n  ): Promise<ExpressRouteGatewaysListBySubscriptionResponse>;\n  /**\n   * Lists ExpressRoute gateways in a given resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: ExpressRouteGatewaysListByResourceGroupOptionalParams,\n  ): Promise<ExpressRouteGatewaysListByResourceGroupResponse>;\n  /**\n   * Creates or updates a ExpressRoute gateway in a specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param putExpressRouteGatewayParameters Parameters required in an ExpressRoute gateway PUT\n   *                                         operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    putExpressRouteGatewayParameters: ExpressRouteGateway,\n    options?: ExpressRouteGatewaysCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteGatewaysCreateOrUpdateResponse>,\n      ExpressRouteGatewaysCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a ExpressRoute gateway in a specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param putExpressRouteGatewayParameters Parameters required in an ExpressRoute gateway PUT\n   *                                         operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    putExpressRouteGatewayParameters: ExpressRouteGateway,\n    options?: ExpressRouteGatewaysCreateOrUpdateOptionalParams,\n  ): Promise<ExpressRouteGatewaysCreateOrUpdateResponse>;\n  /**\n   * Updates express route gateway tags.\n   * @param resourceGroupName The resource group name of the ExpressRouteGateway.\n   * @param expressRouteGatewayName The name of the gateway.\n   * @param expressRouteGatewayParameters Parameters supplied to update a virtual wan express route\n   *                                      gateway tags.\n   * @param options The options parameters.\n   */\n  beginUpdateTags(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    expressRouteGatewayParameters: TagsObject,\n    options?: ExpressRouteGatewaysUpdateTagsOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteGatewaysUpdateTagsResponse>,\n      ExpressRouteGatewaysUpdateTagsResponse\n    >\n  >;\n  /**\n   * Updates express route gateway tags.\n   * @param resourceGroupName The resource group name of the ExpressRouteGateway.\n   * @param expressRouteGatewayName The name of the gateway.\n   * @param expressRouteGatewayParameters Parameters supplied to update a virtual wan express route\n   *                                      gateway tags.\n   * @param options The options parameters.\n   */\n  beginUpdateTagsAndWait(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    expressRouteGatewayParameters: TagsObject,\n    options?: ExpressRouteGatewaysUpdateTagsOptionalParams,\n  ): Promise<ExpressRouteGatewaysUpdateTagsResponse>;\n  /**\n   * Fetches the details of a ExpressRoute gateway in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    options?: ExpressRouteGatewaysGetOptionalParams,\n  ): Promise<ExpressRouteGatewaysGetResponse>;\n  /**\n   * Deletes the specified ExpressRoute gateway in a resource group. An ExpressRoute gateway resource can\n   * only be deleted when there are no connection subresources.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    options?: ExpressRouteGatewaysDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified ExpressRoute gateway in a resource group. An ExpressRoute gateway resource can\n   * only be deleted when there are no connection subresources.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    options?: ExpressRouteGatewaysDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}