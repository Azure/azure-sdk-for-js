{"version":3,"file":"firewallPolicyIdpsSignaturesOverrides.js","sourceRoot":"","sources":["../../../src/operations/firewallPolicyIdpsSignaturesOverrides.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { FirewallPolicyIdpsSignaturesOverrides } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { NetworkManagementClient } from \"../networkManagementClient.js\";\nimport {\n  SignaturesOverrides,\n  FirewallPolicyIdpsSignaturesOverridesPatchOptionalParams,\n  FirewallPolicyIdpsSignaturesOverridesPatchResponse,\n  FirewallPolicyIdpsSignaturesOverridesPutOptionalParams,\n  FirewallPolicyIdpsSignaturesOverridesPutResponse,\n  FirewallPolicyIdpsSignaturesOverridesGetOptionalParams,\n  FirewallPolicyIdpsSignaturesOverridesGetResponse,\n  FirewallPolicyIdpsSignaturesOverridesListOptionalParams,\n  FirewallPolicyIdpsSignaturesOverridesListResponse,\n} from \"../models/index.js\";\n\n/** Class containing FirewallPolicyIdpsSignaturesOverrides operations. */\nexport class FirewallPolicyIdpsSignaturesOverridesImpl\n  implements FirewallPolicyIdpsSignaturesOverrides\n{\n  private readonly client: NetworkManagementClient;\n\n  /**\n   * Initialize a new instance of the class FirewallPolicyIdpsSignaturesOverrides class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NetworkManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Will update the status of policy's signature overrides for IDPS\n   * @param resourceGroupName The name of the resource group.\n   * @param firewallPolicyName The name of the Firewall Policy.\n   * @param parameters Will contain all properties of the object to put\n   * @param options The options parameters.\n   */\n  patch(\n    resourceGroupName: string,\n    firewallPolicyName: string,\n    parameters: SignaturesOverrides,\n    options?: FirewallPolicyIdpsSignaturesOverridesPatchOptionalParams,\n  ): Promise<FirewallPolicyIdpsSignaturesOverridesPatchResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, firewallPolicyName, parameters, options },\n      patchOperationSpec,\n    );\n  }\n\n  /**\n   * Will override/create a new signature overrides for the policy's IDPS\n   * @param resourceGroupName The name of the resource group.\n   * @param firewallPolicyName The name of the Firewall Policy.\n   * @param parameters Will contain all properties of the object to put\n   * @param options The options parameters.\n   */\n  put(\n    resourceGroupName: string,\n    firewallPolicyName: string,\n    parameters: SignaturesOverrides,\n    options?: FirewallPolicyIdpsSignaturesOverridesPutOptionalParams,\n  ): Promise<FirewallPolicyIdpsSignaturesOverridesPutResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, firewallPolicyName, parameters, options },\n      putOperationSpec,\n    );\n  }\n\n  /**\n   * Returns all signatures overrides for a specific policy.\n   * @param resourceGroupName The name of the resource group.\n   * @param firewallPolicyName The name of the Firewall Policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    firewallPolicyName: string,\n    options?: FirewallPolicyIdpsSignaturesOverridesGetOptionalParams,\n  ): Promise<FirewallPolicyIdpsSignaturesOverridesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, firewallPolicyName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Returns all signatures overrides objects for a specific policy as a list containing a single value.\n   * @param resourceGroupName The name of the resource group.\n   * @param firewallPolicyName The name of the Firewall Policy.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    firewallPolicyName: string,\n    options?: FirewallPolicyIdpsSignaturesOverridesListOptionalParams,\n  ): Promise<FirewallPolicyIdpsSignaturesOverridesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, firewallPolicyName, options },\n      listOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst patchOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignaturesOverrides,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters22,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.firewallPolicyName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst putOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignaturesOverrides,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters22,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.firewallPolicyName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignaturesOverrides,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.firewallPolicyName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignaturesOverridesList,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.firewallPolicyName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}