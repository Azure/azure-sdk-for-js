{"version":3,"file":"networkInterfaces.js","sourceRoot":"","sources":["../../../src/operations/networkInterfaces.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { NetworkInterfaces } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { NetworkManagementClient } from \"../networkManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  NetworkInterface,\n  NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesNextOptionalParams,\n  NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesOptionalParams,\n  NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesResponse,\n  NetworkInterfacesListCloudServiceNetworkInterfacesNextOptionalParams,\n  NetworkInterfacesListCloudServiceNetworkInterfacesOptionalParams,\n  NetworkInterfacesListCloudServiceNetworkInterfacesResponse,\n  NetworkInterfacesListAllNextOptionalParams,\n  NetworkInterfacesListAllOptionalParams,\n  NetworkInterfacesListAllResponse,\n  NetworkInterfacesListNextOptionalParams,\n  NetworkInterfacesListOptionalParams,\n  NetworkInterfacesListResponse,\n  NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesNextOptionalParams,\n  NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesOptionalParams,\n  NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesResponse,\n  NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesNextOptionalParams,\n  NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesOptionalParams,\n  NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesResponse,\n  NetworkInterfaceIPConfiguration,\n  NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsNextOptionalParams,\n  NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams,\n  NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsResponse,\n  NetworkInterfacesGetCloudServiceNetworkInterfaceOptionalParams,\n  NetworkInterfacesGetCloudServiceNetworkInterfaceResponse,\n  NetworkInterfacesDeleteOptionalParams,\n  NetworkInterfacesGetOptionalParams,\n  NetworkInterfacesGetResponse,\n  NetworkInterfacesCreateOrUpdateOptionalParams,\n  NetworkInterfacesCreateOrUpdateResponse,\n  TagsObject,\n  NetworkInterfacesUpdateTagsOptionalParams,\n  NetworkInterfacesUpdateTagsResponse,\n  NetworkInterfacesGetEffectiveRouteTableOptionalParams,\n  NetworkInterfacesGetEffectiveRouteTableResponse,\n  NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams,\n  NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse,\n  NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams,\n  NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceResponse,\n  NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationOptionalParams,\n  NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationResponse,\n  NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesNextResponse,\n  NetworkInterfacesListCloudServiceNetworkInterfacesNextResponse,\n  NetworkInterfacesListAllNextResponse,\n  NetworkInterfacesListNextResponse,\n  NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesNextResponse,\n  NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesNextResponse,\n  NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing NetworkInterfaces operations. */\nexport class NetworkInterfacesImpl implements NetworkInterfaces {\n  private readonly client: NetworkManagementClient;\n\n  /**\n   * Initialize a new instance of the class NetworkInterfaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NetworkManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets information about all network interfaces in a role instance in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param options The options parameters.\n   */\n  public listCloudServiceRoleInstanceNetworkInterfaces(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    options?: NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface> {\n    const iter = this.listCloudServiceRoleInstanceNetworkInterfacesPagingAll(\n      resourceGroupName,\n      cloudServiceName,\n      roleInstanceName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listCloudServiceRoleInstanceNetworkInterfacesPagingPage(\n          resourceGroupName,\n          cloudServiceName,\n          roleInstanceName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listCloudServiceRoleInstanceNetworkInterfacesPagingPage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    options?: NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<NetworkInterface[]> {\n    let result: NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listCloudServiceRoleInstanceNetworkInterfaces(\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listCloudServiceRoleInstanceNetworkInterfacesNext(\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listCloudServiceRoleInstanceNetworkInterfacesPagingAll(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    options?: NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesOptionalParams,\n  ): AsyncIterableIterator<NetworkInterface> {\n    for await (const page of this.listCloudServiceRoleInstanceNetworkInterfacesPagingPage(\n      resourceGroupName,\n      cloudServiceName,\n      roleInstanceName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all network interfaces in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param options The options parameters.\n   */\n  public listCloudServiceNetworkInterfaces(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: NetworkInterfacesListCloudServiceNetworkInterfacesOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface> {\n    const iter = this.listCloudServiceNetworkInterfacesPagingAll(\n      resourceGroupName,\n      cloudServiceName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listCloudServiceNetworkInterfacesPagingPage(\n          resourceGroupName,\n          cloudServiceName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listCloudServiceNetworkInterfacesPagingPage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: NetworkInterfacesListCloudServiceNetworkInterfacesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<NetworkInterface[]> {\n    let result: NetworkInterfacesListCloudServiceNetworkInterfacesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listCloudServiceNetworkInterfaces(\n        resourceGroupName,\n        cloudServiceName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listCloudServiceNetworkInterfacesNext(\n        resourceGroupName,\n        cloudServiceName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listCloudServiceNetworkInterfacesPagingAll(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: NetworkInterfacesListCloudServiceNetworkInterfacesOptionalParams,\n  ): AsyncIterableIterator<NetworkInterface> {\n    for await (const page of this.listCloudServiceNetworkInterfacesPagingPage(\n      resourceGroupName,\n      cloudServiceName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all network interfaces in a subscription.\n   * @param options The options parameters.\n   */\n  public listAll(\n    options?: NetworkInterfacesListAllOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface> {\n    const iter = this.listAllPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAllPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listAllPagingPage(\n    options?: NetworkInterfacesListAllOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<NetworkInterface[]> {\n    let result: NetworkInterfacesListAllResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAll(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAllNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAllPagingAll(\n    options?: NetworkInterfacesListAllOptionalParams,\n  ): AsyncIterableIterator<NetworkInterface> {\n    for await (const page of this.listAllPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all network interfaces in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: NetworkInterfacesListOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceGroupName, options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: NetworkInterfacesListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<NetworkInterface[]> {\n    let result: NetworkInterfacesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: NetworkInterfacesListOptionalParams,\n  ): AsyncIterableIterator<NetworkInterface> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets information about all network interfaces in a virtual machine in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param options The options parameters.\n   */\n  public listVirtualMachineScaleSetVMNetworkInterfaces(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface> {\n    const iter = this.listVirtualMachineScaleSetVMNetworkInterfacesPagingAll(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      virtualmachineIndex,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listVirtualMachineScaleSetVMNetworkInterfacesPagingPage(\n          resourceGroupName,\n          virtualMachineScaleSetName,\n          virtualmachineIndex,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listVirtualMachineScaleSetVMNetworkInterfacesPagingPage(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<NetworkInterface[]> {\n    let result: NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listVirtualMachineScaleSetVMNetworkInterfaces(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listVirtualMachineScaleSetVMNetworkInterfacesNext(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listVirtualMachineScaleSetVMNetworkInterfacesPagingAll(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesOptionalParams,\n  ): AsyncIterableIterator<NetworkInterface> {\n    for await (const page of this.listVirtualMachineScaleSetVMNetworkInterfacesPagingPage(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      virtualmachineIndex,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all network interfaces in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param options The options parameters.\n   */\n  public listVirtualMachineScaleSetNetworkInterfaces(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface> {\n    const iter = this.listVirtualMachineScaleSetNetworkInterfacesPagingAll(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listVirtualMachineScaleSetNetworkInterfacesPagingPage(\n          resourceGroupName,\n          virtualMachineScaleSetName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listVirtualMachineScaleSetNetworkInterfacesPagingPage(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<NetworkInterface[]> {\n    let result: NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listVirtualMachineScaleSetNetworkInterfaces(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listVirtualMachineScaleSetNetworkInterfacesNext(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listVirtualMachineScaleSetNetworkInterfacesPagingAll(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesOptionalParams,\n  ): AsyncIterableIterator<NetworkInterface> {\n    for await (const page of this.listVirtualMachineScaleSetNetworkInterfacesPagingPage(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the specified network interface ip configuration in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  public listVirtualMachineScaleSetIpConfigurations(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterfaceIPConfiguration> {\n    const iter = this.listVirtualMachineScaleSetIpConfigurationsPagingAll(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      virtualmachineIndex,\n      networkInterfaceName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listVirtualMachineScaleSetIpConfigurationsPagingPage(\n          resourceGroupName,\n          virtualMachineScaleSetName,\n          virtualmachineIndex,\n          networkInterfaceName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listVirtualMachineScaleSetIpConfigurationsPagingPage(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<NetworkInterfaceIPConfiguration[]> {\n    let result: NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listVirtualMachineScaleSetIpConfigurations(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listVirtualMachineScaleSetIpConfigurationsNext(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listVirtualMachineScaleSetIpConfigurationsPagingAll(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams,\n  ): AsyncIterableIterator<NetworkInterfaceIPConfiguration> {\n    for await (const page of this.listVirtualMachineScaleSetIpConfigurationsPagingPage(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      virtualmachineIndex,\n      networkInterfaceName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets information about all network interfaces in a role instance in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param options The options parameters.\n   */\n  private _listCloudServiceRoleInstanceNetworkInterfaces(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    options?: NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesOptionalParams,\n  ): Promise<NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, roleInstanceName, options },\n      listCloudServiceRoleInstanceNetworkInterfacesOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all network interfaces in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param options The options parameters.\n   */\n  private _listCloudServiceNetworkInterfaces(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: NetworkInterfacesListCloudServiceNetworkInterfacesOptionalParams,\n  ): Promise<NetworkInterfacesListCloudServiceNetworkInterfacesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, options },\n      listCloudServiceNetworkInterfacesOperationSpec,\n    );\n  }\n\n  /**\n   * Get the specified network interface in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  getCloudServiceNetworkInterface(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetCloudServiceNetworkInterfaceOptionalParams,\n  ): Promise<NetworkInterfacesGetCloudServiceNetworkInterfaceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        networkInterfaceName,\n        options,\n      },\n      getCloudServiceNetworkInterfaceOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes the specified network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, networkInterfaceName, options },\n      spec: deleteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the specified network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesDeleteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      networkInterfaceName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about the specified network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetOptionalParams,\n  ): Promise<NetworkInterfacesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, networkInterfaceName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Creates or updates a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param parameters Parameters supplied to the create or update network interface operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    parameters: NetworkInterface,\n    options?: NetworkInterfacesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkInterfacesCreateOrUpdateResponse>,\n      NetworkInterfacesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<NetworkInterfacesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, networkInterfaceName, parameters, options },\n      spec: createOrUpdateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      NetworkInterfacesCreateOrUpdateResponse,\n      OperationState<NetworkInterfacesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"azure-async-operation\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param parameters Parameters supplied to the create or update network interface operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    parameters: NetworkInterface,\n    options?: NetworkInterfacesCreateOrUpdateOptionalParams,\n  ): Promise<NetworkInterfacesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      networkInterfaceName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a network interface tags.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param parameters Parameters supplied to update network interface tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    parameters: TagsObject,\n    options?: NetworkInterfacesUpdateTagsOptionalParams,\n  ): Promise<NetworkInterfacesUpdateTagsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, networkInterfaceName, parameters, options },\n      updateTagsOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all network interfaces in a subscription.\n   * @param options The options parameters.\n   */\n  private _listAll(\n    options?: NetworkInterfacesListAllOptionalParams,\n  ): Promise<NetworkInterfacesListAllResponse> {\n    return this.client.sendOperationRequest({ options }, listAllOperationSpec);\n  }\n\n  /**\n   * Gets all network interfaces in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: NetworkInterfacesListOptionalParams,\n  ): Promise<NetworkInterfacesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all route tables applied to a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  async beginGetEffectiveRouteTable(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetEffectiveRouteTableOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkInterfacesGetEffectiveRouteTableResponse>,\n      NetworkInterfacesGetEffectiveRouteTableResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<NetworkInterfacesGetEffectiveRouteTableResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, networkInterfaceName, options },\n      spec: getEffectiveRouteTableOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      NetworkInterfacesGetEffectiveRouteTableResponse,\n      OperationState<NetworkInterfacesGetEffectiveRouteTableResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Gets all route tables applied to a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  async beginGetEffectiveRouteTableAndWait(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetEffectiveRouteTableOptionalParams,\n  ): Promise<NetworkInterfacesGetEffectiveRouteTableResponse> {\n    const poller = await this.beginGetEffectiveRouteTable(\n      resourceGroupName,\n      networkInterfaceName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all network security groups applied to a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  async beginListEffectiveNetworkSecurityGroups(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse>,\n      NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, networkInterfaceName, options },\n      spec: listEffectiveNetworkSecurityGroupsOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse,\n      OperationState<NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Gets all network security groups applied to a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  async beginListEffectiveNetworkSecurityGroupsAndWait(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams,\n  ): Promise<NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse> {\n    const poller = await this.beginListEffectiveNetworkSecurityGroups(\n      resourceGroupName,\n      networkInterfaceName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about all network interfaces in a virtual machine in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetVMNetworkInterfaces(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesOptionalParams,\n  ): Promise<NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        options,\n      },\n      listVirtualMachineScaleSetVMNetworkInterfacesOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all network interfaces in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetNetworkInterfaces(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesOptionalParams,\n  ): Promise<NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, virtualMachineScaleSetName, options },\n      listVirtualMachineScaleSetNetworkInterfacesOperationSpec,\n    );\n  }\n\n  /**\n   * Get the specified network interface in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  getVirtualMachineScaleSetNetworkInterface(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams,\n  ): Promise<NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        options,\n      },\n      getVirtualMachineScaleSetNetworkInterfaceOperationSpec,\n    );\n  }\n\n  /**\n   * Get the specified network interface ip configuration in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetIpConfigurations(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams,\n  ): Promise<NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        options,\n      },\n      listVirtualMachineScaleSetIpConfigurationsOperationSpec,\n    );\n  }\n\n  /**\n   * Get the specified network interface ip configuration in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param ipConfigurationName The name of the ip configuration.\n   * @param options The options parameters.\n   */\n  getVirtualMachineScaleSetIpConfiguration(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationOptionalParams,\n  ): Promise<NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        ipConfigurationName,\n        options,\n      },\n      getVirtualMachineScaleSetIpConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * ListCloudServiceRoleInstanceNetworkInterfacesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListCloudServiceRoleInstanceNetworkInterfaces method.\n   * @param options The options parameters.\n   */\n  private _listCloudServiceRoleInstanceNetworkInterfacesNext(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    nextLink: string,\n    options?: NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesNextOptionalParams,\n  ): Promise<NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        nextLink,\n        options,\n      },\n      listCloudServiceRoleInstanceNetworkInterfacesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListCloudServiceNetworkInterfacesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListCloudServiceNetworkInterfaces method.\n   * @param options The options parameters.\n   */\n  private _listCloudServiceNetworkInterfacesNext(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    nextLink: string,\n    options?: NetworkInterfacesListCloudServiceNetworkInterfacesNextOptionalParams,\n  ): Promise<NetworkInterfacesListCloudServiceNetworkInterfacesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, nextLink, options },\n      listCloudServiceNetworkInterfacesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAllNext\n   * @param nextLink The nextLink from the previous successful call to the ListAll method.\n   * @param options The options parameters.\n   */\n  private _listAllNext(\n    nextLink: string,\n    options?: NetworkInterfacesListAllNextOptionalParams,\n  ): Promise<NetworkInterfacesListAllNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAllNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: NetworkInterfacesListNextOptionalParams,\n  ): Promise<NetworkInterfacesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListVirtualMachineScaleSetVMNetworkInterfacesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListVirtualMachineScaleSetVMNetworkInterfaces method.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetVMNetworkInterfacesNext(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    nextLink: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesNextOptionalParams,\n  ): Promise<NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        nextLink,\n        options,\n      },\n      listVirtualMachineScaleSetVMNetworkInterfacesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListVirtualMachineScaleSetNetworkInterfacesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListVirtualMachineScaleSetNetworkInterfaces method.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetNetworkInterfacesNext(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    nextLink: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesNextOptionalParams,\n  ): Promise<NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, virtualMachineScaleSetName, nextLink, options },\n      listVirtualMachineScaleSetNetworkInterfacesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListVirtualMachineScaleSetIpConfigurationsNext\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListVirtualMachineScaleSetIpConfigurations method.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetIpConfigurationsNext(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    nextLink: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsNextOptionalParams,\n  ): Promise<NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        nextLink,\n        options,\n      },\n      listVirtualMachineScaleSetIpConfigurationsNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listCloudServiceRoleInstanceNetworkInterfacesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.cloudServiceName,\n      Parameters.roleInstanceName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listCloudServiceNetworkInterfacesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/networkInterfaces\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.cloudServiceName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getCloudServiceNetworkInterfaceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkInterface,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName,\n    Parameters.roleInstanceName,\n    Parameters.networkInterfaceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkInterfaceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkInterface,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkInterfaceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkInterface,\n    },\n    201: {\n      bodyMapper: Mappers.NetworkInterface,\n    },\n    202: {\n      bodyMapper: Mappers.NetworkInterface,\n    },\n    204: {\n      bodyMapper: Mappers.NetworkInterface,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkInterfaceName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkInterface,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkInterfaceName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listAllOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkInterfaceListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkInterfaceListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getEffectiveRouteTableOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveRouteTable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EffectiveRouteListResult,\n    },\n    201: {\n      bodyMapper: Mappers.EffectiveRouteListResult,\n    },\n    202: {\n      bodyMapper: Mappers.EffectiveRouteListResult,\n    },\n    204: {\n      bodyMapper: Mappers.EffectiveRouteListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkInterfaceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listEffectiveNetworkSecurityGroupsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveNetworkSecurityGroups\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.EffectiveNetworkSecurityGroupListResult,\n      },\n      201: {\n        bodyMapper: Mappers.EffectiveNetworkSecurityGroupListResult,\n      },\n      202: {\n        bodyMapper: Mappers.EffectiveNetworkSecurityGroupListResult,\n      },\n      204: {\n        bodyMapper: Mappers.EffectiveNetworkSecurityGroupListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.networkInterfaceName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listVirtualMachineScaleSetVMNetworkInterfacesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion1],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listVirtualMachineScaleSetNetworkInterfacesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion1],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.virtualMachineScaleSetName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getVirtualMachineScaleSetNetworkInterfaceOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterface,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.expand, Parameters.apiVersion1],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.networkInterfaceName,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listVirtualMachineScaleSetIpConfigurationsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipConfigurations\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceIPConfigurationListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.expand, Parameters.apiVersion1],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.networkInterfaceName,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getVirtualMachineScaleSetIpConfigurationOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipConfigurations/{ipConfigurationName}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceIPConfiguration,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.expand, Parameters.apiVersion1],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.networkInterfaceName,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n      Parameters.ipConfigurationName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listCloudServiceRoleInstanceNetworkInterfacesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.cloudServiceName,\n      Parameters.roleInstanceName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listCloudServiceNetworkInterfacesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.cloudServiceName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listAllNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkInterfaceListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkInterfaceListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listVirtualMachineScaleSetVMNetworkInterfacesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listVirtualMachineScaleSetNetworkInterfacesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.virtualMachineScaleSetName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listVirtualMachineScaleSetIpConfigurationsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.NetworkInterfaceIPConfigurationListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.networkInterfaceName,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\n"]}