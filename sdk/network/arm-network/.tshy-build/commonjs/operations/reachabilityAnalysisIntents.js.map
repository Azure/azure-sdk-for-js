{"version":3,"file":"reachabilityAnalysisIntents.js","sourceRoot":"","sources":["../../../src/operations/reachabilityAnalysisIntents.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { ReachabilityAnalysisIntents } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { NetworkManagementClient } from \"../networkManagementClient.js\";\nimport {\n  ReachabilityAnalysisIntent,\n  ReachabilityAnalysisIntentsListNextOptionalParams,\n  ReachabilityAnalysisIntentsListOptionalParams,\n  ReachabilityAnalysisIntentsListResponse,\n  ReachabilityAnalysisIntentsGetOptionalParams,\n  ReachabilityAnalysisIntentsGetResponse,\n  ReachabilityAnalysisIntentsCreateOptionalParams,\n  ReachabilityAnalysisIntentsCreateResponse,\n  ReachabilityAnalysisIntentsDeleteOptionalParams,\n  ReachabilityAnalysisIntentsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ReachabilityAnalysisIntents operations. */\nexport class ReachabilityAnalysisIntentsImpl\n  implements ReachabilityAnalysisIntents\n{\n  private readonly client: NetworkManagementClient;\n\n  /**\n   * Initialize a new instance of the class ReachabilityAnalysisIntents class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NetworkManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets list of Reachability Analysis Intents .\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param workspaceName Workspace name.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    workspaceName: string,\n    options?: ReachabilityAnalysisIntentsListOptionalParams,\n  ): PagedAsyncIterableIterator<ReachabilityAnalysisIntent> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      networkManagerName,\n      workspaceName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          networkManagerName,\n          workspaceName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    networkManagerName: string,\n    workspaceName: string,\n    options?: ReachabilityAnalysisIntentsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ReachabilityAnalysisIntent[]> {\n    let result: ReachabilityAnalysisIntentsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        networkManagerName,\n        workspaceName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        networkManagerName,\n        workspaceName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    networkManagerName: string,\n    workspaceName: string,\n    options?: ReachabilityAnalysisIntentsListOptionalParams,\n  ): AsyncIterableIterator<ReachabilityAnalysisIntent> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      networkManagerName,\n      workspaceName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets list of Reachability Analysis Intents .\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param workspaceName Workspace name.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    workspaceName: string,\n    options?: ReachabilityAnalysisIntentsListOptionalParams,\n  ): Promise<ReachabilityAnalysisIntentsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, networkManagerName, workspaceName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * Get the Reachability Analysis Intent.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param workspaceName Workspace name.\n   * @param reachabilityAnalysisIntentName Reachability Analysis Intent name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    workspaceName: string,\n    reachabilityAnalysisIntentName: string,\n    options?: ReachabilityAnalysisIntentsGetOptionalParams,\n  ): Promise<ReachabilityAnalysisIntentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        networkManagerName,\n        workspaceName,\n        reachabilityAnalysisIntentName,\n        options,\n      },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Creates Reachability Analysis Intent.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param workspaceName Workspace name.\n   * @param reachabilityAnalysisIntentName Reachability Analysis Intent name.\n   * @param body Reachability Analysis Intent object to create/update.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    networkManagerName: string,\n    workspaceName: string,\n    reachabilityAnalysisIntentName: string,\n    body: ReachabilityAnalysisIntent,\n    options?: ReachabilityAnalysisIntentsCreateOptionalParams,\n  ): Promise<ReachabilityAnalysisIntentsCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        networkManagerName,\n        workspaceName,\n        reachabilityAnalysisIntentName,\n        body,\n        options,\n      },\n      createOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes Reachability Analysis Intent.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param workspaceName Workspace name.\n   * @param reachabilityAnalysisIntentName Reachability Analysis Intent name.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    workspaceName: string,\n    reachabilityAnalysisIntentName: string,\n    options?: ReachabilityAnalysisIntentsDeleteOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        networkManagerName,\n        workspaceName,\n        reachabilityAnalysisIntentName,\n        options,\n      },\n      deleteOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param workspaceName Workspace name.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    networkManagerName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: ReachabilityAnalysisIntentsListNextOptionalParams,\n  ): Promise<ReachabilityAnalysisIntentsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        networkManagerName,\n        workspaceName,\n        nextLink,\n        options,\n      },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}/reachabilityAnalysisIntents\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReachabilityAnalysisIntentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CommonErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.skipToken,\n    Parameters.skip,\n    Parameters.top1,\n    Parameters.sortKey,\n    Parameters.sortValue,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkManagerName1,\n    Parameters.workspaceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}/reachabilityAnalysisIntents/{reachabilityAnalysisIntentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReachabilityAnalysisIntent,\n    },\n    default: {\n      bodyMapper: Mappers.CommonErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkManagerName1,\n    Parameters.workspaceName,\n    Parameters.reachabilityAnalysisIntentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}/reachabilityAnalysisIntents/{reachabilityAnalysisIntentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReachabilityAnalysisIntent,\n    },\n    201: {\n      bodyMapper: Mappers.ReachabilityAnalysisIntent,\n    },\n    default: {\n      bodyMapper: Mappers.CommonErrorResponse,\n    },\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkManagerName1,\n    Parameters.workspaceName,\n    Parameters.reachabilityAnalysisIntentName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/verifierWorkspaces/{workspaceName}/reachabilityAnalysisIntents/{reachabilityAnalysisIntentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommonErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkManagerName1,\n    Parameters.workspaceName,\n    Parameters.reachabilityAnalysisIntentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReachabilityAnalysisIntentListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CommonErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.networkManagerName1,\n    Parameters.workspaceName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}