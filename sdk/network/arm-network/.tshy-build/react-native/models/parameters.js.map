{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../../src/models/parameters.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  ApplicationGateway as ApplicationGatewayMapper,\n  TagsObject as TagsObjectMapper,\n  ApplicationGatewayOnDemandProbe as ApplicationGatewayOnDemandProbeMapper,\n  ApplicationGatewayPrivateEndpointConnection as ApplicationGatewayPrivateEndpointConnectionMapper,\n  ApplicationSecurityGroup as ApplicationSecurityGroupMapper,\n  AzureFirewall as AzureFirewallMapper,\n  FirewallPacketCaptureParameters as FirewallPacketCaptureParametersMapper,\n  BastionHost as BastionHostMapper,\n  BastionShareableLinkListRequest as BastionShareableLinkListRequestMapper,\n  BastionShareableLinkTokenListRequest as BastionShareableLinkTokenListRequestMapper,\n  SessionIds as SessionIdsMapper,\n  ActiveConfigurationParameter as ActiveConfigurationParameterMapper,\n  QueryRequestOptions as QueryRequestOptionsMapper,\n  VirtualWanVpnProfileParameters as VirtualWanVpnProfileParametersMapper,\n  NetworkInterface as NetworkInterfaceMapper,\n  PublicIPAddress as PublicIPAddressMapper,\n  SwapResource as SwapResourceMapper,\n  CustomIpPrefix as CustomIpPrefixMapper,\n  DdosCustomPolicy as DdosCustomPolicyMapper,\n  DdosProtectionPlan as DdosProtectionPlanMapper,\n  DscpConfiguration as DscpConfigurationMapper,\n  ExpressRouteCircuitAuthorization as ExpressRouteCircuitAuthorizationMapper,\n  ExpressRouteCircuitPeering as ExpressRouteCircuitPeeringMapper,\n  ExpressRouteCircuitConnection as ExpressRouteCircuitConnectionMapper,\n  ExpressRouteCircuit as ExpressRouteCircuitMapper,\n  ExpressRouteCrossConnection as ExpressRouteCrossConnectionMapper,\n  ExpressRouteCrossConnectionPeering as ExpressRouteCrossConnectionPeeringMapper,\n  ExpressRoutePort as ExpressRoutePortMapper,\n  GenerateExpressRoutePortsLOARequest as GenerateExpressRoutePortsLOARequestMapper,\n  ExpressRoutePortAuthorization as ExpressRoutePortAuthorizationMapper,\n  FirewallPolicy as FirewallPolicyMapper,\n  FirewallPolicyRuleCollectionGroup as FirewallPolicyRuleCollectionGroupMapper,\n  IdpsQueryObject as IdpsQueryObjectMapper,\n  SignaturesOverrides as SignaturesOverridesMapper,\n  SignatureOverridesFilterValuesQuery as SignatureOverridesFilterValuesQueryMapper,\n  FirewallPolicyDraft as FirewallPolicyDraftMapper,\n  FirewallPolicyRuleCollectionGroupDraft as FirewallPolicyRuleCollectionGroupDraftMapper,\n  IpamPool as IpamPoolMapper,\n  IpamPoolUpdate as IpamPoolUpdateMapper,\n  StaticCidr as StaticCidrMapper,\n  IpAllocation as IpAllocationMapper,\n  IpGroup as IpGroupMapper,\n  LoadBalancer as LoadBalancerMapper,\n  LoadBalancerVipSwapRequest as LoadBalancerVipSwapRequestMapper,\n  QueryInboundNatRulePortMappingRequest as QueryInboundNatRulePortMappingRequestMapper,\n  MigrateLoadBalancerToIpBasedRequest as MigrateLoadBalancerToIpBasedRequestMapper,\n  BackendAddressPool as BackendAddressPoolMapper,\n  InboundNatRule as InboundNatRuleMapper,\n  NatGateway as NatGatewayMapper,\n  NetworkInterfaceTapConfiguration as NetworkInterfaceTapConfigurationMapper,\n  NetworkManager as NetworkManagerMapper,\n  PatchObject as PatchObjectMapper,\n  NetworkManagerCommit as NetworkManagerCommitMapper,\n  NetworkManagerDeploymentStatusParameter as NetworkManagerDeploymentStatusParameterMapper,\n  NetworkManagerConnection as NetworkManagerConnectionMapper,\n  ConnectivityConfiguration as ConnectivityConfigurationMapper,\n  NetworkGroup as NetworkGroupMapper,\n  StaticMember as StaticMemberMapper,\n  NetworkManagerRoutingConfiguration as NetworkManagerRoutingConfigurationMapper,\n  RoutingRuleCollection as RoutingRuleCollectionMapper,\n  RoutingRule as RoutingRuleMapper,\n  ScopeConnection as ScopeConnectionMapper,\n  SecurityAdminConfiguration as SecurityAdminConfigurationMapper,\n  AdminRuleCollection as AdminRuleCollectionMapper,\n  BaseAdminRule as BaseAdminRuleMapper,\n  SecurityUserConfiguration as SecurityUserConfigurationMapper,\n  SecurityUserRuleCollection as SecurityUserRuleCollectionMapper,\n  SecurityUserRule as SecurityUserRuleMapper,\n  NetworkProfile as NetworkProfileMapper,\n  NetworkSecurityGroup as NetworkSecurityGroupMapper,\n  SecurityRule as SecurityRuleMapper,\n  ReachabilityAnalysisIntent as ReachabilityAnalysisIntentMapper,\n  ReachabilityAnalysisRun as ReachabilityAnalysisRunMapper,\n  VerifierWorkspace as VerifierWorkspaceMapper,\n  VerifierWorkspaceUpdate as VerifierWorkspaceUpdateMapper,\n  NetworkVirtualAppliance as NetworkVirtualApplianceMapper,\n  NetworkVirtualApplianceInstanceIds as NetworkVirtualApplianceInstanceIdsMapper,\n  VirtualApplianceSite as VirtualApplianceSiteMapper,\n  InboundSecurityRule as InboundSecurityRuleMapper,\n  NetworkWatcher as NetworkWatcherMapper,\n  TopologyParameters as TopologyParametersMapper,\n  VerificationIPFlowParameters as VerificationIPFlowParametersMapper,\n  NextHopParameters as NextHopParametersMapper,\n  SecurityGroupViewParameters as SecurityGroupViewParametersMapper,\n  TroubleshootingParameters as TroubleshootingParametersMapper,\n  QueryTroubleshootingParameters as QueryTroubleshootingParametersMapper,\n  FlowLogInformation as FlowLogInformationMapper,\n  FlowLogStatusParameters as FlowLogStatusParametersMapper,\n  ConnectivityParameters as ConnectivityParametersMapper,\n  AzureReachabilityReportParameters as AzureReachabilityReportParametersMapper,\n  AvailableProvidersListParameters as AvailableProvidersListParametersMapper,\n  NetworkConfigurationDiagnosticParameters as NetworkConfigurationDiagnosticParametersMapper,\n  PacketCapture as PacketCaptureMapper,\n  ConnectionMonitor as ConnectionMonitorMapper,\n  FlowLog as FlowLogMapper,\n  PrivateEndpoint as PrivateEndpointMapper,\n  PrivateDnsZoneGroup as PrivateDnsZoneGroupMapper,\n  PrivateLinkService as PrivateLinkServiceMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  CheckPrivateLinkServiceVisibilityRequest as CheckPrivateLinkServiceVisibilityRequestMapper,\n  PublicIPPrefix as PublicIPPrefixMapper,\n  RouteFilter as RouteFilterMapper,\n  RouteFilterRule as RouteFilterRuleMapper,\n  RouteTable as RouteTableMapper,\n  Route as RouteMapper,\n  SecurityPartnerProvider as SecurityPartnerProviderMapper,\n  ServiceEndpointPolicy as ServiceEndpointPolicyMapper,\n  ServiceEndpointPolicyDefinition as ServiceEndpointPolicyDefinitionMapper,\n  VirtualNetwork as VirtualNetworkMapper,\n  Subnet as SubnetMapper,\n  PrepareNetworkPoliciesRequest as PrepareNetworkPoliciesRequestMapper,\n  UnprepareNetworkPoliciesRequest as UnprepareNetworkPoliciesRequestMapper,\n  VirtualNetworkPeering as VirtualNetworkPeeringMapper,\n  VirtualNetworkGateway as VirtualNetworkGatewayMapper,\n  VpnClientParameters as VpnClientParametersMapper,\n  VpnClientIPsecParameters as VpnClientIPsecParametersMapper,\n  VpnDeviceScriptParameters as VpnDeviceScriptParametersMapper,\n  VpnPacketCaptureStartParameters as VpnPacketCaptureStartParametersMapper,\n  VpnPacketCaptureStopParameters as VpnPacketCaptureStopParametersMapper,\n  ExpressRouteFailoverStopApiParameters as ExpressRouteFailoverStopApiParametersMapper,\n  P2SVpnConnectionRequest as P2SVpnConnectionRequestMapper,\n  VirtualNetworkGatewayConnection as VirtualNetworkGatewayConnectionMapper,\n  ConnectionSharedKey as ConnectionSharedKeyMapper,\n  ConnectionResetSharedKey as ConnectionResetSharedKeyMapper,\n  LocalNetworkGateway as LocalNetworkGatewayMapper,\n  VirtualNetworkGatewayNatRule as VirtualNetworkGatewayNatRuleMapper,\n  VirtualNetworkTap as VirtualNetworkTapMapper,\n  VirtualRouter as VirtualRouterMapper,\n  VirtualRouterPeering as VirtualRouterPeeringMapper,\n  VirtualWAN as VirtualWANMapper,\n  VpnSite as VpnSiteMapper,\n  GetVpnSitesConfigurationRequest as GetVpnSitesConfigurationRequestMapper,\n  VpnServerConfiguration as VpnServerConfigurationMapper,\n  VpnServerConfigurationPolicyGroup as VpnServerConfigurationPolicyGroupMapper,\n  VirtualHub as VirtualHubMapper,\n  EffectiveRoutesParameters as EffectiveRoutesParametersMapper,\n  GetInboundRoutesParameters as GetInboundRoutesParametersMapper,\n  GetOutboundRoutesParameters as GetOutboundRoutesParametersMapper,\n  RouteMap as RouteMapMapper,\n  HubVirtualNetworkConnection as HubVirtualNetworkConnectionMapper,\n  VpnGateway as VpnGatewayMapper,\n  VpnGatewayPacketCaptureStartParameters as VpnGatewayPacketCaptureStartParametersMapper,\n  VpnGatewayPacketCaptureStopParameters as VpnGatewayPacketCaptureStopParametersMapper,\n  ConnectionSharedKeyResult as ConnectionSharedKeyResultMapper,\n  VpnConnection as VpnConnectionMapper,\n  VpnConnectionPacketCaptureStartParameters as VpnConnectionPacketCaptureStartParametersMapper,\n  VpnConnectionPacketCaptureStopParameters as VpnConnectionPacketCaptureStopParametersMapper,\n  VpnGatewayNatRule as VpnGatewayNatRuleMapper,\n  P2SVpnGateway as P2SVpnGatewayMapper,\n  P2SVpnProfileParameters as P2SVpnProfileParametersMapper,\n  P2SVpnConnectionHealthRequest as P2SVpnConnectionHealthRequestMapper,\n  VirtualHubRouteTableV2 as VirtualHubRouteTableV2Mapper,\n  ExpressRouteGateway as ExpressRouteGatewayMapper,\n  ExpressRouteConnection as ExpressRouteConnectionMapper,\n  NetworkVirtualApplianceConnection as NetworkVirtualApplianceConnectionMapper,\n  BgpConnection as BgpConnectionMapper,\n  HubIpConfiguration as HubIpConfigurationMapper,\n  HubRouteTable as HubRouteTableMapper,\n  RoutingIntent as RoutingIntentMapper,\n  WebApplicationFirewallPolicy as WebApplicationFirewallPolicyMapper,\n} from \"../models/mappers.js\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const applicationGatewayName: OperationURLParameter = {\n  parameterPath: \"applicationGatewayName\",\n  mapper: {\n    serializedName: \"applicationGatewayName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2024-05-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ApplicationGatewayMapper,\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const probeRequest: OperationParameter = {\n  parameterPath: \"probeRequest\",\n  mapper: ApplicationGatewayOnDemandProbeMapper,\n};\n\nexport const predefinedPolicyName: OperationURLParameter = {\n  parameterPath: \"predefinedPolicyName\",\n  mapper: {\n    serializedName: \"predefinedPolicyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const connectionName: OperationURLParameter = {\n  parameterPath: \"connectionName\",\n  mapper: {\n    serializedName: \"connectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ApplicationGatewayPrivateEndpointConnectionMapper,\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const applicationSecurityGroupName: OperationURLParameter = {\n  parameterPath: \"applicationSecurityGroupName\",\n  mapper: {\n    serializedName: \"applicationSecurityGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ApplicationSecurityGroupMapper,\n};\n\nexport const azureFirewallName: OperationURLParameter = {\n  parameterPath: \"azureFirewallName\",\n  mapper: {\n    serializedName: \"azureFirewallName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AzureFirewallMapper,\n};\n\nexport const azureFirewallName1: OperationURLParameter = {\n  parameterPath: \"azureFirewallName\",\n  mapper: {\n    constraints: {\n      MaxLength: 56,\n      MinLength: 1,\n    },\n    serializedName: \"azureFirewallName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FirewallPacketCaptureParametersMapper,\n};\n\nexport const azureFirewallName2: OperationURLParameter = {\n  parameterPath: \"azureFirewallName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9]\"),\n      MaxLength: 56,\n      MinLength: 1,\n    },\n    serializedName: \"azureFirewallName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const bastionHostName: OperationURLParameter = {\n  parameterPath: \"bastionHostName\",\n  mapper: {\n    serializedName: \"bastionHostName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BastionHostMapper,\n};\n\nexport const bslRequest: OperationParameter = {\n  parameterPath: \"bslRequest\",\n  mapper: BastionShareableLinkListRequestMapper,\n};\n\nexport const bslTokenRequest: OperationParameter = {\n  parameterPath: \"bslTokenRequest\",\n  mapper: BastionShareableLinkTokenListRequestMapper,\n};\n\nexport const sessionIds: OperationParameter = {\n  parameterPath: \"sessionIds\",\n  mapper: SessionIdsMapper,\n};\n\nexport const domainNameLabel: OperationQueryParameter = {\n  parameterPath: \"domainNameLabel\",\n  mapper: {\n    serializedName: \"domainNameLabel\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const providerport: OperationURLParameter = {\n  parameterPath: \"providerport\",\n  mapper: {\n    serializedName: \"providerport\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ActiveConfigurationParameterMapper,\n};\n\nexport const networkManagerName: OperationURLParameter = {\n  parameterPath: \"networkManagerName\",\n  mapper: {\n    serializedName: \"networkManagerName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 20,\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: QueryRequestOptionsMapper,\n};\n\nexport const virtualNetworkName: OperationURLParameter = {\n  parameterPath: \"virtualNetworkName\",\n  mapper: {\n    serializedName: \"virtualNetworkName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const virtualWANName: OperationURLParameter = {\n  parameterPath: \"virtualWANName\",\n  mapper: {\n    serializedName: \"virtualWANName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const vpnClientParams: OperationParameter = {\n  parameterPath: \"vpnClientParams\",\n  mapper: VirtualWanVpnProfileParametersMapper,\n};\n\nexport const cloudServiceName: OperationURLParameter = {\n  parameterPath: \"cloudServiceName\",\n  mapper: {\n    serializedName: \"cloudServiceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const roleInstanceName: OperationURLParameter = {\n  parameterPath: \"roleInstanceName\",\n  mapper: {\n    serializedName: \"roleInstanceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const networkInterfaceName: OperationURLParameter = {\n  parameterPath: \"networkInterfaceName\",\n  mapper: {\n    serializedName: \"networkInterfaceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkInterfaceMapper,\n};\n\nexport const virtualMachineScaleSetName: OperationURLParameter = {\n  parameterPath: \"virtualMachineScaleSetName\",\n  mapper: {\n    serializedName: \"virtualMachineScaleSetName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const virtualmachineIndex: OperationURLParameter = {\n  parameterPath: \"virtualmachineIndex\",\n  mapper: {\n    serializedName: \"virtualmachineIndex\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2018-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ipConfigurationName: OperationURLParameter = {\n  parameterPath: \"ipConfigurationName\",\n  mapper: {\n    serializedName: \"ipConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const publicIpAddressName: OperationURLParameter = {\n  parameterPath: \"publicIpAddressName\",\n  mapper: {\n    serializedName: \"publicIpAddressName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PublicIPAddressMapper,\n};\n\nexport const groupName: OperationURLParameter = {\n  parameterPath: \"groupName\",\n  mapper: {\n    serializedName: \"groupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const resourceName: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const singletonResource: OperationURLParameter = {\n  parameterPath: \"singletonResource\",\n  mapper: {\n    defaultValue: \"swap\",\n    isConstant: true,\n    serializedName: \"singletonResource\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters11: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SwapResourceMapper,\n};\n\nexport const customIpPrefixName: OperationURLParameter = {\n  parameterPath: \"customIpPrefixName\",\n  mapper: {\n    serializedName: \"customIpPrefixName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters12: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CustomIpPrefixMapper,\n};\n\nexport const ddosCustomPolicyName: OperationURLParameter = {\n  parameterPath: \"ddosCustomPolicyName\",\n  mapper: {\n    serializedName: \"ddosCustomPolicyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters13: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DdosCustomPolicyMapper,\n};\n\nexport const ddosProtectionPlanName: OperationURLParameter = {\n  parameterPath: \"ddosProtectionPlanName\",\n  mapper: {\n    serializedName: \"ddosProtectionPlanName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters14: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DdosProtectionPlanMapper,\n};\n\nexport const parameters15: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DscpConfigurationMapper,\n};\n\nexport const dscpConfigurationName: OperationURLParameter = {\n  parameterPath: \"dscpConfigurationName\",\n  mapper: {\n    serializedName: \"dscpConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const circuitName: OperationURLParameter = {\n  parameterPath: \"circuitName\",\n  mapper: {\n    serializedName: \"circuitName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const authorizationName: OperationURLParameter = {\n  parameterPath: \"authorizationName\",\n  mapper: {\n    serializedName: \"authorizationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const authorizationParameters: OperationParameter = {\n  parameterPath: \"authorizationParameters\",\n  mapper: ExpressRouteCircuitAuthorizationMapper,\n};\n\nexport const peeringName: OperationURLParameter = {\n  parameterPath: \"peeringName\",\n  mapper: {\n    serializedName: \"peeringName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const peeringParameters: OperationParameter = {\n  parameterPath: \"peeringParameters\",\n  mapper: ExpressRouteCircuitPeeringMapper,\n};\n\nexport const expressRouteCircuitConnectionParameters: OperationParameter = {\n  parameterPath: \"expressRouteCircuitConnectionParameters\",\n  mapper: ExpressRouteCircuitConnectionMapper,\n};\n\nexport const parameters16: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExpressRouteCircuitMapper,\n};\n\nexport const devicePath: OperationURLParameter = {\n  parameterPath: \"devicePath\",\n  mapper: {\n    serializedName: \"devicePath\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const crossConnectionName: OperationURLParameter = {\n  parameterPath: \"crossConnectionName\",\n  mapper: {\n    serializedName: \"crossConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters17: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExpressRouteCrossConnectionMapper,\n};\n\nexport const crossConnectionParameters: OperationParameter = {\n  parameterPath: \"crossConnectionParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const peeringParameters1: OperationParameter = {\n  parameterPath: \"peeringParameters\",\n  mapper: ExpressRouteCrossConnectionPeeringMapper,\n};\n\nexport const locationName: OperationURLParameter = {\n  parameterPath: \"locationName\",\n  mapper: {\n    serializedName: \"locationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expressRoutePortName: OperationURLParameter = {\n  parameterPath: \"expressRoutePortName\",\n  mapper: {\n    serializedName: \"expressRoutePortName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters18: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExpressRoutePortMapper,\n};\n\nexport const request: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: GenerateExpressRoutePortsLOARequestMapper,\n};\n\nexport const linkName: OperationURLParameter = {\n  parameterPath: \"linkName\",\n  mapper: {\n    serializedName: \"linkName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const authorizationParameters1: OperationParameter = {\n  parameterPath: \"authorizationParameters\",\n  mapper: ExpressRoutePortAuthorizationMapper,\n};\n\nexport const firewallPolicyName: OperationURLParameter = {\n  parameterPath: \"firewallPolicyName\",\n  mapper: {\n    serializedName: \"firewallPolicyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters19: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FirewallPolicyMapper,\n};\n\nexport const ruleCollectionGroupName: OperationURLParameter = {\n  parameterPath: \"ruleCollectionGroupName\",\n  mapper: {\n    serializedName: \"ruleCollectionGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters20: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FirewallPolicyRuleCollectionGroupMapper,\n};\n\nexport const parameters21: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: IdpsQueryObjectMapper,\n};\n\nexport const parameters22: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SignaturesOverridesMapper,\n};\n\nexport const parameters23: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SignatureOverridesFilterValuesQueryMapper,\n};\n\nexport const parameters24: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FirewallPolicyDraftMapper,\n};\n\nexport const firewallPolicyName1: OperationURLParameter = {\n  parameterPath: \"firewallPolicyName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[^_\\\\W][\\\\w-._]{0,79}(?<![-.])$\"),\n    },\n    serializedName: \"firewallPolicyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ruleCollectionGroupName1: OperationURLParameter = {\n  parameterPath: \"ruleCollectionGroupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[^_\\\\W][\\\\w-._]{0,79}(?<![-.])$\"),\n    },\n    serializedName: \"ruleCollectionGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters25: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FirewallPolicyRuleCollectionGroupDraftMapper,\n};\n\nexport const networkManagerName1: OperationURLParameter = {\n  parameterPath: \"networkManagerName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$\"),\n    },\n    serializedName: \"networkManagerName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const skipToken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipToken\"],\n  mapper: {\n    serializedName: \"skipToken\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const skip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    defaultValue: 0,\n    serializedName: \"skip\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const top1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    defaultValue: 50,\n    serializedName: \"top\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const sortKey: OperationQueryParameter = {\n  parameterPath: [\"options\", \"sortKey\"],\n  mapper: {\n    serializedName: \"sortKey\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sortValue: OperationQueryParameter = {\n  parameterPath: [\"options\", \"sortValue\"],\n  mapper: {\n    serializedName: \"sortValue\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: IpamPoolMapper,\n};\n\nexport const poolName: OperationURLParameter = {\n  parameterPath: \"poolName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$\"),\n    },\n    serializedName: \"poolName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: IpamPoolUpdateMapper,\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: StaticCidrMapper,\n};\n\nexport const staticCidrName: OperationURLParameter = {\n  parameterPath: \"staticCidrName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$\"),\n    },\n    serializedName: \"staticCidrName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ipAllocationName: OperationURLParameter = {\n  parameterPath: \"ipAllocationName\",\n  mapper: {\n    serializedName: \"ipAllocationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters26: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: IpAllocationMapper,\n};\n\nexport const ipGroupsName: OperationURLParameter = {\n  parameterPath: \"ipGroupsName\",\n  mapper: {\n    serializedName: \"ipGroupsName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters27: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: IpGroupMapper,\n};\n\nexport const loadBalancerName: OperationURLParameter = {\n  parameterPath: \"loadBalancerName\",\n  mapper: {\n    serializedName: \"loadBalancerName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters28: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LoadBalancerMapper,\n};\n\nexport const parameters29: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LoadBalancerVipSwapRequestMapper,\n};\n\nexport const parameters30: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: QueryInboundNatRulePortMappingRequestMapper,\n};\n\nexport const backendPoolName: OperationURLParameter = {\n  parameterPath: \"backendPoolName\",\n  mapper: {\n    serializedName: \"backendPoolName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters31: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: MigrateLoadBalancerToIpBasedRequestMapper,\n};\n\nexport const groupName1: OperationURLParameter = {\n  parameterPath: \"groupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z][a-z0-9]*$\"),\n    },\n    serializedName: \"groupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const loadBalancerName1: OperationURLParameter = {\n  parameterPath: \"loadBalancerName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z][a-z0-9]*$\"),\n    },\n    serializedName: \"loadBalancerName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const backendAddressPoolName: OperationURLParameter = {\n  parameterPath: \"backendAddressPoolName\",\n  mapper: {\n    serializedName: \"backendAddressPoolName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters32: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BackendAddressPoolMapper,\n};\n\nexport const frontendIPConfigurationName: OperationURLParameter = {\n  parameterPath: \"frontendIPConfigurationName\",\n  mapper: {\n    serializedName: \"frontendIPConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const inboundNatRuleName: OperationURLParameter = {\n  parameterPath: \"inboundNatRuleName\",\n  mapper: {\n    serializedName: \"inboundNatRuleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const inboundNatRuleParameters: OperationParameter = {\n  parameterPath: \"inboundNatRuleParameters\",\n  mapper: InboundNatRuleMapper,\n};\n\nexport const loadBalancingRuleName: OperationURLParameter = {\n  parameterPath: \"loadBalancingRuleName\",\n  mapper: {\n    serializedName: \"loadBalancingRuleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const loadBalancingRuleName1: OperationURLParameter = {\n  parameterPath: \"loadBalancingRuleName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z][a-z0-9]*$\"),\n    },\n    serializedName: \"loadBalancingRuleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const outboundRuleName: OperationURLParameter = {\n  parameterPath: \"outboundRuleName\",\n  mapper: {\n    serializedName: \"outboundRuleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const probeName: OperationURLParameter = {\n  parameterPath: \"probeName\",\n  mapper: {\n    serializedName: \"probeName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const natGatewayName: OperationURLParameter = {\n  parameterPath: \"natGatewayName\",\n  mapper: {\n    serializedName: \"natGatewayName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters33: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NatGatewayMapper,\n};\n\nexport const tapConfigurationName: OperationURLParameter = {\n  parameterPath: \"tapConfigurationName\",\n  mapper: {\n    serializedName: \"tapConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tapConfigurationParameters: OperationParameter = {\n  parameterPath: \"tapConfigurationParameters\",\n  mapper: NetworkInterfaceTapConfigurationMapper,\n};\n\nexport const parameters34: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkManagerMapper,\n};\n\nexport const force: OperationQueryParameter = {\n  parameterPath: [\"options\", \"force\"],\n  mapper: {\n    serializedName: \"force\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const parameters35: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PatchObjectMapper,\n};\n\nexport const skipToken1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipToken\"],\n  mapper: {\n    serializedName: \"$skipToken\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters36: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkManagerCommitMapper,\n};\n\nexport const parameters37: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkManagerDeploymentStatusParameterMapper,\n};\n\nexport const parameters38: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkManagerConnectionMapper,\n};\n\nexport const networkManagerConnectionName: OperationURLParameter = {\n  parameterPath: \"networkManagerConnectionName\",\n  mapper: {\n    serializedName: \"networkManagerConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const managementGroupId: OperationURLParameter = {\n  parameterPath: \"managementGroupId\",\n  mapper: {\n    serializedName: \"managementGroupId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const configurationName: OperationURLParameter = {\n  parameterPath: \"configurationName\",\n  mapper: {\n    serializedName: \"configurationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const connectivityConfiguration: OperationParameter = {\n  parameterPath: \"connectivityConfiguration\",\n  mapper: ConnectivityConfigurationMapper,\n};\n\nexport const networkGroupName: OperationURLParameter = {\n  parameterPath: \"networkGroupName\",\n  mapper: {\n    serializedName: \"networkGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters39: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkGroupMapper,\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const staticMemberName: OperationURLParameter = {\n  parameterPath: \"staticMemberName\",\n  mapper: {\n    serializedName: \"staticMemberName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters40: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StaticMemberMapper,\n};\n\nexport const resourceGroupName1: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const networkManagerName2: OperationURLParameter = {\n  parameterPath: \"networkManagerName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"networkManagerName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const configurationName1: OperationURLParameter = {\n  parameterPath: \"configurationName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"configurationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const routingConfiguration: OperationParameter = {\n  parameterPath: \"routingConfiguration\",\n  mapper: NetworkManagerRoutingConfigurationMapper,\n};\n\nexport const ruleCollectionName: OperationURLParameter = {\n  parameterPath: \"ruleCollectionName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"ruleCollectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ruleCollection: OperationParameter = {\n  parameterPath: \"ruleCollection\",\n  mapper: RoutingRuleCollectionMapper,\n};\n\nexport const ruleName: OperationURLParameter = {\n  parameterPath: \"ruleName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"ruleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const routingRule: OperationParameter = {\n  parameterPath: \"routingRule\",\n  mapper: RoutingRuleMapper,\n};\n\nexport const parameters41: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ScopeConnectionMapper,\n};\n\nexport const scopeConnectionName: OperationURLParameter = {\n  parameterPath: \"scopeConnectionName\",\n  mapper: {\n    serializedName: \"scopeConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const securityAdminConfiguration: OperationParameter = {\n  parameterPath: \"securityAdminConfiguration\",\n  mapper: SecurityAdminConfigurationMapper,\n};\n\nexport const ruleCollectionName1: OperationURLParameter = {\n  parameterPath: \"ruleCollectionName\",\n  mapper: {\n    serializedName: \"ruleCollectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ruleCollection1: OperationParameter = {\n  parameterPath: \"ruleCollection\",\n  mapper: AdminRuleCollectionMapper,\n};\n\nexport const ruleName1: OperationURLParameter = {\n  parameterPath: \"ruleName\",\n  mapper: {\n    serializedName: \"ruleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const adminRule: OperationParameter = {\n  parameterPath: \"adminRule\",\n  mapper: BaseAdminRuleMapper,\n};\n\nexport const securityUserConfiguration: OperationParameter = {\n  parameterPath: \"securityUserConfiguration\",\n  mapper: SecurityUserConfigurationMapper,\n};\n\nexport const securityUserRuleCollection: OperationParameter = {\n  parameterPath: \"securityUserRuleCollection\",\n  mapper: SecurityUserRuleCollectionMapper,\n};\n\nexport const securityUserRule: OperationParameter = {\n  parameterPath: \"securityUserRule\",\n  mapper: SecurityUserRuleMapper,\n};\n\nexport const networkProfileName: OperationURLParameter = {\n  parameterPath: \"networkProfileName\",\n  mapper: {\n    serializedName: \"networkProfileName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters42: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkProfileMapper,\n};\n\nexport const networkSecurityGroupName: OperationURLParameter = {\n  parameterPath: \"networkSecurityGroupName\",\n  mapper: {\n    serializedName: \"networkSecurityGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters43: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkSecurityGroupMapper,\n};\n\nexport const securityRuleName: OperationURLParameter = {\n  parameterPath: \"securityRuleName\",\n  mapper: {\n    serializedName: \"securityRuleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const securityRuleParameters: OperationParameter = {\n  parameterPath: \"securityRuleParameters\",\n  mapper: SecurityRuleMapper,\n};\n\nexport const defaultSecurityRuleName: OperationURLParameter = {\n  parameterPath: \"defaultSecurityRuleName\",\n  mapper: {\n    serializedName: \"defaultSecurityRuleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const workspaceName: OperationURLParameter = {\n  parameterPath: \"workspaceName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$\"),\n    },\n    serializedName: \"workspaceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const reachabilityAnalysisIntentName: OperationURLParameter = {\n  parameterPath: \"reachabilityAnalysisIntentName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$\"),\n    },\n    serializedName: \"reachabilityAnalysisIntentName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ReachabilityAnalysisIntentMapper,\n};\n\nexport const reachabilityAnalysisRunName: OperationURLParameter = {\n  parameterPath: \"reachabilityAnalysisRunName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[0-9a-zA-Z]([0-9a-zA-Z_.-]{0,62}[0-9a-zA-Z_])?$\"),\n    },\n    serializedName: \"reachabilityAnalysisRunName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ReachabilityAnalysisRunMapper,\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: VerifierWorkspaceMapper,\n};\n\nexport const body6: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: VerifierWorkspaceUpdateMapper,\n};\n\nexport const networkVirtualApplianceName: OperationURLParameter = {\n  parameterPath: \"networkVirtualApplianceName\",\n  mapper: {\n    serializedName: \"networkVirtualApplianceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters44: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkVirtualApplianceMapper,\n};\n\nexport const networkVirtualApplianceInstanceIds: OperationParameter = {\n  parameterPath: [\"options\", \"networkVirtualApplianceInstanceIds\"],\n  mapper: NetworkVirtualApplianceInstanceIdsMapper,\n};\n\nexport const siteName: OperationURLParameter = {\n  parameterPath: \"siteName\",\n  mapper: {\n    serializedName: \"siteName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters45: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualApplianceSiteMapper,\n};\n\nexport const skuName: OperationURLParameter = {\n  parameterPath: \"skuName\",\n  mapper: {\n    serializedName: \"skuName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters46: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: InboundSecurityRuleMapper,\n};\n\nexport const parameters47: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkWatcherMapper,\n};\n\nexport const networkWatcherName: OperationURLParameter = {\n  parameterPath: \"networkWatcherName\",\n  mapper: {\n    serializedName: \"networkWatcherName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters48: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TopologyParametersMapper,\n};\n\nexport const parameters49: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VerificationIPFlowParametersMapper,\n};\n\nexport const parameters50: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NextHopParametersMapper,\n};\n\nexport const parameters51: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SecurityGroupViewParametersMapper,\n};\n\nexport const parameters52: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TroubleshootingParametersMapper,\n};\n\nexport const parameters53: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: QueryTroubleshootingParametersMapper,\n};\n\nexport const parameters54: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FlowLogInformationMapper,\n};\n\nexport const parameters55: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FlowLogStatusParametersMapper,\n};\n\nexport const parameters56: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConnectivityParametersMapper,\n};\n\nexport const parameters57: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AzureReachabilityReportParametersMapper,\n};\n\nexport const parameters58: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AvailableProvidersListParametersMapper,\n};\n\nexport const parameters59: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: NetworkConfigurationDiagnosticParametersMapper,\n};\n\nexport const parameters60: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PacketCaptureMapper,\n};\n\nexport const packetCaptureName: OperationURLParameter = {\n  parameterPath: \"packetCaptureName\",\n  mapper: {\n    serializedName: \"packetCaptureName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters61: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConnectionMonitorMapper,\n};\n\nexport const connectionMonitorName: OperationURLParameter = {\n  parameterPath: \"connectionMonitorName\",\n  mapper: {\n    serializedName: \"connectionMonitorName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const migrate: OperationQueryParameter = {\n  parameterPath: [\"options\", \"migrate\"],\n  mapper: {\n    serializedName: \"migrate\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters62: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FlowLogMapper,\n};\n\nexport const flowLogName: OperationURLParameter = {\n  parameterPath: \"flowLogName\",\n  mapper: {\n    serializedName: \"flowLogName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const privateEndpointName: OperationURLParameter = {\n  parameterPath: \"privateEndpointName\",\n  mapper: {\n    serializedName: \"privateEndpointName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters63: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PrivateEndpointMapper,\n};\n\nexport const privateDnsZoneGroupName: OperationURLParameter = {\n  parameterPath: \"privateDnsZoneGroupName\",\n  mapper: {\n    serializedName: \"privateDnsZoneGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters64: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PrivateDnsZoneGroupMapper,\n};\n\nexport const serviceName: OperationURLParameter = {\n  parameterPath: \"serviceName\",\n  mapper: {\n    serializedName: \"serviceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters65: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PrivateLinkServiceMapper,\n};\n\nexport const peConnectionName: OperationURLParameter = {\n  parameterPath: \"peConnectionName\",\n  mapper: {\n    serializedName: \"peConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters66: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PrivateEndpointConnectionMapper,\n};\n\nexport const parameters67: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CheckPrivateLinkServiceVisibilityRequestMapper,\n};\n\nexport const publicIpPrefixName: OperationURLParameter = {\n  parameterPath: \"publicIpPrefixName\",\n  mapper: {\n    serializedName: \"publicIpPrefixName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters68: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PublicIPPrefixMapper,\n};\n\nexport const routeFilterName: OperationURLParameter = {\n  parameterPath: \"routeFilterName\",\n  mapper: {\n    serializedName: \"routeFilterName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const routeFilterParameters: OperationParameter = {\n  parameterPath: \"routeFilterParameters\",\n  mapper: RouteFilterMapper,\n};\n\nexport const routeFilterRuleParameters: OperationParameter = {\n  parameterPath: \"routeFilterRuleParameters\",\n  mapper: RouteFilterRuleMapper,\n};\n\nexport const routeTableName: OperationURLParameter = {\n  parameterPath: \"routeTableName\",\n  mapper: {\n    serializedName: \"routeTableName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters69: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RouteTableMapper,\n};\n\nexport const routeName: OperationURLParameter = {\n  parameterPath: \"routeName\",\n  mapper: {\n    serializedName: \"routeName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const routeParameters: OperationParameter = {\n  parameterPath: \"routeParameters\",\n  mapper: RouteMapper,\n};\n\nexport const securityPartnerProviderName: OperationURLParameter = {\n  parameterPath: \"securityPartnerProviderName\",\n  mapper: {\n    serializedName: \"securityPartnerProviderName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters70: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SecurityPartnerProviderMapper,\n};\n\nexport const serviceEndpointPolicyName: OperationURLParameter = {\n  parameterPath: \"serviceEndpointPolicyName\",\n  mapper: {\n    serializedName: \"serviceEndpointPolicyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters71: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServiceEndpointPolicyMapper,\n};\n\nexport const serviceEndpointPolicyDefinitionName: OperationURLParameter = {\n  parameterPath: \"serviceEndpointPolicyDefinitionName\",\n  mapper: {\n    serializedName: \"serviceEndpointPolicyDefinitionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const serviceEndpointPolicyDefinitions: OperationParameter = {\n  parameterPath: \"serviceEndpointPolicyDefinitions\",\n  mapper: ServiceEndpointPolicyDefinitionMapper,\n};\n\nexport const noAddressPrefixes: OperationQueryParameter = {\n  parameterPath: [\"options\", \"noAddressPrefixes\"],\n  mapper: {\n    serializedName: \"noAddressPrefixes\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const tagName: OperationQueryParameter = {\n  parameterPath: [\"options\", \"tagName\"],\n  mapper: {\n    serializedName: \"tagName\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const location1: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._ ]+$\"),\n    },\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters72: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualNetworkMapper,\n};\n\nexport const ipAddress: OperationQueryParameter = {\n  parameterPath: \"ipAddress\",\n  mapper: {\n    serializedName: \"ipAddress\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const top2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"top\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const subnetName: OperationURLParameter = {\n  parameterPath: \"subnetName\",\n  mapper: {\n    serializedName: \"subnetName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const subnetParameters: OperationParameter = {\n  parameterPath: \"subnetParameters\",\n  mapper: SubnetMapper,\n};\n\nexport const prepareNetworkPoliciesRequestParameters: OperationParameter = {\n  parameterPath: \"prepareNetworkPoliciesRequestParameters\",\n  mapper: PrepareNetworkPoliciesRequestMapper,\n};\n\nexport const unprepareNetworkPoliciesRequestParameters: OperationParameter = {\n  parameterPath: \"unprepareNetworkPoliciesRequestParameters\",\n  mapper: UnprepareNetworkPoliciesRequestMapper,\n};\n\nexport const virtualNetworkPeeringName: OperationURLParameter = {\n  parameterPath: \"virtualNetworkPeeringName\",\n  mapper: {\n    serializedName: \"virtualNetworkPeeringName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const virtualNetworkPeeringParameters: OperationParameter = {\n  parameterPath: \"virtualNetworkPeeringParameters\",\n  mapper: VirtualNetworkPeeringMapper,\n};\n\nexport const syncRemoteAddressSpace: OperationQueryParameter = {\n  parameterPath: [\"options\", \"syncRemoteAddressSpace\"],\n  mapper: {\n    serializedName: \"syncRemoteAddressSpace\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters73: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualNetworkGatewayMapper,\n};\n\nexport const virtualNetworkGatewayName: OperationURLParameter = {\n  parameterPath: \"virtualNetworkGatewayName\",\n  mapper: {\n    serializedName: \"virtualNetworkGatewayName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const gatewayVip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"gatewayVip\"],\n  mapper: {\n    serializedName: \"gatewayVip\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters74: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VpnClientParametersMapper,\n};\n\nexport const peer: OperationQueryParameter = {\n  parameterPath: [\"options\", \"peer\"],\n  mapper: {\n    serializedName: \"peer\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const peer1: OperationQueryParameter = {\n  parameterPath: \"peer\",\n  mapper: {\n    serializedName: \"peer\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const vpnclientIpsecParams: OperationParameter = {\n  parameterPath: \"vpnclientIpsecParams\",\n  mapper: VpnClientIPsecParametersMapper,\n};\n\nexport const parameters75: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VpnDeviceScriptParametersMapper,\n};\n\nexport const virtualNetworkGatewayConnectionName: OperationURLParameter = {\n  parameterPath: \"virtualNetworkGatewayConnectionName\",\n  mapper: {\n    serializedName: \"virtualNetworkGatewayConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters76: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: VpnPacketCaptureStartParametersMapper,\n};\n\nexport const parameters77: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VpnPacketCaptureStopParametersMapper,\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: \"typeParam\",\n  mapper: {\n    serializedName: \"type\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const fetchLatest: OperationQueryParameter = {\n  parameterPath: \"fetchLatest\",\n  mapper: {\n    serializedName: \"fetchLatest\",\n    required: true,\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const peeringLocation: OperationQueryParameter = {\n  parameterPath: \"peeringLocation\",\n  mapper: {\n    serializedName: \"peeringLocation\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const failoverTestId: OperationQueryParameter = {\n  parameterPath: \"failoverTestId\",\n  mapper: {\n    serializedName: \"failoverTestId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const stopParameters: OperationParameter = {\n  parameterPath: \"stopParameters\",\n  mapper: ExpressRouteFailoverStopApiParametersMapper,\n};\n\nexport const request1: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: P2SVpnConnectionRequestMapper,\n};\n\nexport const parameters78: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualNetworkGatewayConnectionMapper,\n};\n\nexport const parameters79: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConnectionSharedKeyMapper,\n};\n\nexport const parameters80: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ConnectionResetSharedKeyMapper,\n};\n\nexport const parameters81: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LocalNetworkGatewayMapper,\n};\n\nexport const localNetworkGatewayName: OperationURLParameter = {\n  parameterPath: \"localNetworkGatewayName\",\n  mapper: {\n    constraints: {\n      MinLength: 1,\n    },\n    serializedName: \"localNetworkGatewayName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const natRuleName: OperationURLParameter = {\n  parameterPath: \"natRuleName\",\n  mapper: {\n    serializedName: \"natRuleName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const natRuleParameters: OperationParameter = {\n  parameterPath: \"natRuleParameters\",\n  mapper: VirtualNetworkGatewayNatRuleMapper,\n};\n\nexport const tapName: OperationURLParameter = {\n  parameterPath: \"tapName\",\n  mapper: {\n    serializedName: \"tapName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters82: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualNetworkTapMapper,\n};\n\nexport const tapParameters: OperationParameter = {\n  parameterPath: \"tapParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const virtualRouterName: OperationURLParameter = {\n  parameterPath: \"virtualRouterName\",\n  mapper: {\n    serializedName: \"virtualRouterName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters83: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualRouterMapper,\n};\n\nexport const parameters84: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualRouterPeeringMapper,\n};\n\nexport const virtualWANName1: OperationURLParameter = {\n  parameterPath: \"virtualWANName\",\n  mapper: {\n    serializedName: \"VirtualWANName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const wANParameters: OperationParameter = {\n  parameterPath: \"wANParameters\",\n  mapper: VirtualWANMapper,\n};\n\nexport const wANParameters1: OperationParameter = {\n  parameterPath: \"wANParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const vpnSiteName: OperationURLParameter = {\n  parameterPath: \"vpnSiteName\",\n  mapper: {\n    serializedName: \"vpnSiteName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const vpnSiteParameters: OperationParameter = {\n  parameterPath: \"vpnSiteParameters\",\n  mapper: VpnSiteMapper,\n};\n\nexport const vpnSiteParameters1: OperationParameter = {\n  parameterPath: \"vpnSiteParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const vpnSiteLinkName: OperationURLParameter = {\n  parameterPath: \"vpnSiteLinkName\",\n  mapper: {\n    serializedName: \"vpnSiteLinkName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const request2: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: GetVpnSitesConfigurationRequestMapper,\n};\n\nexport const vpnServerConfigurationName: OperationURLParameter = {\n  parameterPath: \"vpnServerConfigurationName\",\n  mapper: {\n    serializedName: \"vpnServerConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const vpnServerConfigurationParameters: OperationParameter = {\n  parameterPath: \"vpnServerConfigurationParameters\",\n  mapper: VpnServerConfigurationMapper,\n};\n\nexport const vpnServerConfigurationParameters1: OperationParameter = {\n  parameterPath: \"vpnServerConfigurationParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const vpnServerConfigurationPolicyGroupParameters: OperationParameter = {\n  parameterPath: \"vpnServerConfigurationPolicyGroupParameters\",\n  mapper: VpnServerConfigurationPolicyGroupMapper,\n};\n\nexport const configurationPolicyGroupName: OperationURLParameter = {\n  parameterPath: \"configurationPolicyGroupName\",\n  mapper: {\n    serializedName: \"configurationPolicyGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const virtualHubName: OperationURLParameter = {\n  parameterPath: \"virtualHubName\",\n  mapper: {\n    serializedName: \"virtualHubName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const virtualHubParameters: OperationParameter = {\n  parameterPath: \"virtualHubParameters\",\n  mapper: VirtualHubMapper,\n};\n\nexport const virtualHubParameters1: OperationParameter = {\n  parameterPath: \"virtualHubParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const effectiveRoutesParameters: OperationParameter = {\n  parameterPath: [\"options\", \"effectiveRoutesParameters\"],\n  mapper: EffectiveRoutesParametersMapper,\n};\n\nexport const getInboundRoutesParameters: OperationParameter = {\n  parameterPath: \"getInboundRoutesParameters\",\n  mapper: GetInboundRoutesParametersMapper,\n};\n\nexport const getOutboundRoutesParameters: OperationParameter = {\n  parameterPath: \"getOutboundRoutesParameters\",\n  mapper: GetOutboundRoutesParametersMapper,\n};\n\nexport const routeMapName: OperationURLParameter = {\n  parameterPath: \"routeMapName\",\n  mapper: {\n    serializedName: \"routeMapName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const routeMapParameters: OperationParameter = {\n  parameterPath: \"routeMapParameters\",\n  mapper: RouteMapMapper,\n};\n\nexport const hubVirtualNetworkConnectionParameters: OperationParameter = {\n  parameterPath: \"hubVirtualNetworkConnectionParameters\",\n  mapper: HubVirtualNetworkConnectionMapper,\n};\n\nexport const gatewayName: OperationURLParameter = {\n  parameterPath: \"gatewayName\",\n  mapper: {\n    serializedName: \"gatewayName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const vpnGatewayParameters: OperationParameter = {\n  parameterPath: \"vpnGatewayParameters\",\n  mapper: VpnGatewayMapper,\n};\n\nexport const vpnGatewayParameters1: OperationParameter = {\n  parameterPath: \"vpnGatewayParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const ipConfigurationId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ipConfigurationId\"],\n  mapper: {\n    serializedName: \"ipConfigurationId\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters85: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: VpnGatewayPacketCaptureStartParametersMapper,\n};\n\nexport const parameters86: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: VpnGatewayPacketCaptureStopParametersMapper,\n};\n\nexport const linkConnectionName: OperationURLParameter = {\n  parameterPath: \"linkConnectionName\",\n  mapper: {\n    serializedName: \"linkConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const connectionSharedKeyParameters: OperationParameter = {\n  parameterPath: \"connectionSharedKeyParameters\",\n  mapper: ConnectionSharedKeyResultMapper,\n};\n\nexport const vpnConnectionParameters: OperationParameter = {\n  parameterPath: \"vpnConnectionParameters\",\n  mapper: VpnConnectionMapper,\n};\n\nexport const parameters87: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: VpnConnectionPacketCaptureStartParametersMapper,\n};\n\nexport const vpnConnectionName: OperationURLParameter = {\n  parameterPath: \"vpnConnectionName\",\n  mapper: {\n    serializedName: \"vpnConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters88: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: VpnConnectionPacketCaptureStopParametersMapper,\n};\n\nexport const natRuleParameters1: OperationParameter = {\n  parameterPath: \"natRuleParameters\",\n  mapper: VpnGatewayNatRuleMapper,\n};\n\nexport const p2SVpnGatewayParameters: OperationParameter = {\n  parameterPath: \"p2SVpnGatewayParameters\",\n  mapper: P2SVpnGatewayMapper,\n};\n\nexport const p2SVpnGatewayParameters1: OperationParameter = {\n  parameterPath: \"p2SVpnGatewayParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const parameters89: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: P2SVpnProfileParametersMapper,\n};\n\nexport const request3: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: P2SVpnConnectionHealthRequestMapper,\n};\n\nexport const p2SVpnGatewayName: OperationURLParameter = {\n  parameterPath: \"p2SVpnGatewayName\",\n  mapper: {\n    serializedName: \"p2sVpnGatewayName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const virtualHubRouteTableV2Parameters: OperationParameter = {\n  parameterPath: \"virtualHubRouteTableV2Parameters\",\n  mapper: VirtualHubRouteTableV2Mapper,\n};\n\nexport const putExpressRouteGatewayParameters: OperationParameter = {\n  parameterPath: \"putExpressRouteGatewayParameters\",\n  mapper: ExpressRouteGatewayMapper,\n};\n\nexport const expressRouteGatewayName: OperationURLParameter = {\n  parameterPath: \"expressRouteGatewayName\",\n  mapper: {\n    serializedName: \"expressRouteGatewayName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expressRouteGatewayParameters: OperationParameter = {\n  parameterPath: \"expressRouteGatewayParameters\",\n  mapper: TagsObjectMapper,\n};\n\nexport const putExpressRouteConnectionParameters: OperationParameter = {\n  parameterPath: \"putExpressRouteConnectionParameters\",\n  mapper: ExpressRouteConnectionMapper,\n};\n\nexport const networkVirtualApplianceConnectionParameters: OperationParameter = {\n  parameterPath: \"networkVirtualApplianceConnectionParameters\",\n  mapper: NetworkVirtualApplianceConnectionMapper,\n};\n\nexport const networkVirtualApplianceName1: OperationURLParameter = {\n  parameterPath: \"networkVirtualApplianceName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z0-9_]+\"),\n    },\n    serializedName: \"networkVirtualApplianceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const connectionName1: OperationURLParameter = {\n  parameterPath: \"connectionName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z0-9_]+\"),\n    },\n    serializedName: \"connectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters90: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BgpConnectionMapper,\n};\n\nexport const hubName: OperationURLParameter = {\n  parameterPath: \"hubName\",\n  mapper: {\n    serializedName: \"hubName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ipConfigName: OperationURLParameter = {\n  parameterPath: \"ipConfigName\",\n  mapper: {\n    serializedName: \"ipConfigName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters91: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: HubIpConfigurationMapper,\n};\n\nexport const routeTableParameters: OperationParameter = {\n  parameterPath: \"routeTableParameters\",\n  mapper: HubRouteTableMapper,\n};\n\nexport const routingIntentParameters: OperationParameter = {\n  parameterPath: \"routingIntentParameters\",\n  mapper: RoutingIntentMapper,\n};\n\nexport const routingIntentName: OperationURLParameter = {\n  parameterPath: \"routingIntentName\",\n  mapper: {\n    serializedName: \"routingIntentName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const policyName: OperationURLParameter = {\n  parameterPath: \"policyName\",\n  mapper: {\n    constraints: {\n      MaxLength: 128,\n    },\n    serializedName: \"policyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const parameters92: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WebApplicationFirewallPolicyMapper,\n};\n"]}