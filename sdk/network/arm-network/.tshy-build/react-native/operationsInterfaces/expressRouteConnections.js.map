{"version":3,"file":"expressRouteConnections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/expressRouteConnections.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  ExpressRouteConnection,\n  ExpressRouteConnectionsCreateOrUpdateOptionalParams,\n  ExpressRouteConnectionsCreateOrUpdateResponse,\n  ExpressRouteConnectionsGetOptionalParams,\n  ExpressRouteConnectionsGetResponse,\n  ExpressRouteConnectionsDeleteOptionalParams,\n  ExpressRouteConnectionsListOptionalParams,\n  ExpressRouteConnectionsListResponse,\n} from \"../models/index.js\";\n\n/** Interface representing a ExpressRouteConnections. */\nexport interface ExpressRouteConnections {\n  /**\n   * Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param connectionName The name of the connection subresource.\n   * @param putExpressRouteConnectionParameters Parameters required in an ExpressRouteConnection PUT\n   *                                            operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    connectionName: string,\n    putExpressRouteConnectionParameters: ExpressRouteConnection,\n    options?: ExpressRouteConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteConnectionsCreateOrUpdateResponse>,\n      ExpressRouteConnectionsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param connectionName The name of the connection subresource.\n   * @param putExpressRouteConnectionParameters Parameters required in an ExpressRouteConnection PUT\n   *                                            operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    connectionName: string,\n    putExpressRouteConnectionParameters: ExpressRouteConnection,\n    options?: ExpressRouteConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<ExpressRouteConnectionsCreateOrUpdateResponse>;\n  /**\n   * Gets the specified ExpressRouteConnection.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param connectionName The name of the ExpressRoute connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    connectionName: string,\n    options?: ExpressRouteConnectionsGetOptionalParams,\n  ): Promise<ExpressRouteConnectionsGetResponse>;\n  /**\n   * Deletes a connection to a ExpressRoute circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param connectionName The name of the connection subresource.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    connectionName: string,\n    options?: ExpressRouteConnectionsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a connection to a ExpressRoute circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param connectionName The name of the connection subresource.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    connectionName: string,\n    options?: ExpressRouteConnectionsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Lists ExpressRouteConnections.\n   * @param resourceGroupName The name of the resource group.\n   * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    expressRouteGatewayName: string,\n    options?: ExpressRouteConnectionsListOptionalParams,\n  ): Promise<ExpressRouteConnectionsListResponse>;\n}\n"]}