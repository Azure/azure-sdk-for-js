{"version":3,"file":"routeMaps.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/routeMaps.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  RouteMap,\n  RouteMapsListOptionalParams,\n  RouteMapsGetOptionalParams,\n  RouteMapsGetResponse,\n  RouteMapsCreateOrUpdateOptionalParams,\n  RouteMapsCreateOrUpdateResponse,\n  RouteMapsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a RouteMaps. */\nexport interface RouteMaps {\n  /**\n   * Retrieves the details of all RouteMaps.\n   * @param resourceGroupName The resource group name of the RouteMap's resource group'.\n   * @param virtualHubName The name of the VirtualHub containing the RouteMap.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: RouteMapsListOptionalParams,\n  ): PagedAsyncIterableIterator<RouteMap>;\n  /**\n   * Retrieves the details of a RouteMap.\n   * @param resourceGroupName The resource group name of the RouteMap's resource group.\n   * @param virtualHubName The name of the VirtualHub containing the RouteMap.\n   * @param routeMapName The name of the RouteMap.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeMapName: string,\n    options?: RouteMapsGetOptionalParams,\n  ): Promise<RouteMapsGetResponse>;\n  /**\n   * Creates a RouteMap if it doesn't exist else updates the existing one.\n   * @param resourceGroupName The resource group name of the RouteMap's resource group.\n   * @param virtualHubName The name of the VirtualHub containing the RouteMap.\n   * @param routeMapName The name of the RouteMap.\n   * @param routeMapParameters Parameters supplied to create or update a RouteMap.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeMapName: string,\n    routeMapParameters: RouteMap,\n    options?: RouteMapsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<RouteMapsCreateOrUpdateResponse>,\n      RouteMapsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a RouteMap if it doesn't exist else updates the existing one.\n   * @param resourceGroupName The resource group name of the RouteMap's resource group.\n   * @param virtualHubName The name of the VirtualHub containing the RouteMap.\n   * @param routeMapName The name of the RouteMap.\n   * @param routeMapParameters Parameters supplied to create or update a RouteMap.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeMapName: string,\n    routeMapParameters: RouteMap,\n    options?: RouteMapsCreateOrUpdateOptionalParams,\n  ): Promise<RouteMapsCreateOrUpdateResponse>;\n  /**\n   * Deletes a RouteMap.\n   * @param resourceGroupName The resource group name of the RouteMap's resource group.\n   * @param virtualHubName The name of the VirtualHub containing the RouteMap.\n   * @param routeMapName The name of the RouteMap.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeMapName: string,\n    options?: RouteMapsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a RouteMap.\n   * @param resourceGroupName The resource group name of the RouteMap's resource group.\n   * @param virtualHubName The name of the VirtualHub containing the RouteMap.\n   * @param routeMapName The name of the RouteMap.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeMapName: string,\n    options?: RouteMapsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}