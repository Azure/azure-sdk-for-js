{"version":3,"file":"hubRouteTables.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/hubRouteTables.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  HubRouteTable,\n  HubRouteTablesListOptionalParams,\n  HubRouteTablesCreateOrUpdateOptionalParams,\n  HubRouteTablesCreateOrUpdateResponse,\n  HubRouteTablesGetOptionalParams,\n  HubRouteTablesGetResponse,\n  HubRouteTablesDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a HubRouteTables. */\nexport interface HubRouteTables {\n  /**\n   * Retrieves the details of all RouteTables.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: HubRouteTablesListOptionalParams,\n  ): PagedAsyncIterableIterator<HubRouteTable>;\n  /**\n   * Creates a RouteTable resource if it doesn't exist else updates the existing RouteTable.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routeTableName The name of the RouteTable.\n   * @param routeTableParameters Parameters supplied to create or update RouteTable.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeTableName: string,\n    routeTableParameters: HubRouteTable,\n    options?: HubRouteTablesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<HubRouteTablesCreateOrUpdateResponse>,\n      HubRouteTablesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a RouteTable resource if it doesn't exist else updates the existing RouteTable.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routeTableName The name of the RouteTable.\n   * @param routeTableParameters Parameters supplied to create or update RouteTable.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeTableName: string,\n    routeTableParameters: HubRouteTable,\n    options?: HubRouteTablesCreateOrUpdateOptionalParams,\n  ): Promise<HubRouteTablesCreateOrUpdateResponse>;\n  /**\n   * Retrieves the details of a RouteTable.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routeTableName The name of the RouteTable.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeTableName: string,\n    options?: HubRouteTablesGetOptionalParams,\n  ): Promise<HubRouteTablesGetResponse>;\n  /**\n   * Deletes a RouteTable.\n   * @param resourceGroupName The resource group name of the RouteTable.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routeTableName The name of the RouteTable.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeTableName: string,\n    options?: HubRouteTablesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a RouteTable.\n   * @param resourceGroupName The resource group name of the RouteTable.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routeTableName The name of the RouteTable.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routeTableName: string,\n    options?: HubRouteTablesDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}