{"version":3,"file":"routingIntentOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/routingIntentOperations.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  RoutingIntent,\n  RoutingIntentListOptionalParams,\n  RoutingIntentCreateOrUpdateOptionalParams,\n  RoutingIntentCreateOrUpdateResponse,\n  RoutingIntentGetOptionalParams,\n  RoutingIntentGetResponse,\n  RoutingIntentDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a RoutingIntentOperations. */\nexport interface RoutingIntentOperations {\n  /**\n   * Retrieves the details of all RoutingIntent child resources of the VirtualHub.\n   * @param resourceGroupName The resource group name of the VirtualHub.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    virtualHubName: string,\n    options?: RoutingIntentListOptionalParams,\n  ): PagedAsyncIterableIterator<RoutingIntent>;\n  /**\n   * Creates a RoutingIntent resource if it doesn't exist else updates the existing RoutingIntent.\n   * @param resourceGroupName The resource group name of the RoutingIntent.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routingIntentName The name of the per VirtualHub singleton Routing Intent resource.\n   * @param routingIntentParameters Parameters supplied to create or update RoutingIntent.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routingIntentName: string,\n    routingIntentParameters: RoutingIntent,\n    options?: RoutingIntentCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<RoutingIntentCreateOrUpdateResponse>,\n      RoutingIntentCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a RoutingIntent resource if it doesn't exist else updates the existing RoutingIntent.\n   * @param resourceGroupName The resource group name of the RoutingIntent.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routingIntentName The name of the per VirtualHub singleton Routing Intent resource.\n   * @param routingIntentParameters Parameters supplied to create or update RoutingIntent.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routingIntentName: string,\n    routingIntentParameters: RoutingIntent,\n    options?: RoutingIntentCreateOrUpdateOptionalParams,\n  ): Promise<RoutingIntentCreateOrUpdateResponse>;\n  /**\n   * Retrieves the details of a RoutingIntent.\n   * @param resourceGroupName The resource group name of the RoutingIntent.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routingIntentName The name of the RoutingIntent.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routingIntentName: string,\n    options?: RoutingIntentGetOptionalParams,\n  ): Promise<RoutingIntentGetResponse>;\n  /**\n   * Deletes a RoutingIntent.\n   * @param resourceGroupName The resource group name of the RoutingIntent.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routingIntentName The name of the RoutingIntent.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routingIntentName: string,\n    options?: RoutingIntentDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a RoutingIntent.\n   * @param resourceGroupName The resource group name of the RoutingIntent.\n   * @param virtualHubName The name of the VirtualHub.\n   * @param routingIntentName The name of the RoutingIntent.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualHubName: string,\n    routingIntentName: string,\n    options?: RoutingIntentDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}