{"version":3,"file":"vpnServerConfigurations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/vpnServerConfigurations.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VpnServerConfiguration,\n  VpnServerConfigurationsListByResourceGroupOptionalParams,\n  VpnServerConfigurationsListOptionalParams,\n  VpnServerConfigurationsGetOptionalParams,\n  VpnServerConfigurationsGetResponse,\n  VpnServerConfigurationsCreateOrUpdateOptionalParams,\n  VpnServerConfigurationsCreateOrUpdateResponse,\n  TagsObject,\n  VpnServerConfigurationsUpdateTagsOptionalParams,\n  VpnServerConfigurationsUpdateTagsResponse,\n  VpnServerConfigurationsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VpnServerConfigurations. */\nexport interface VpnServerConfigurations {\n  /**\n   * Lists all the vpnServerConfigurations in a resource group.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: VpnServerConfigurationsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<VpnServerConfiguration>;\n  /**\n   * Lists all the VpnServerConfigurations in a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: VpnServerConfigurationsListOptionalParams,\n  ): PagedAsyncIterableIterator<VpnServerConfiguration>;\n  /**\n   * Retrieves the details of a VpnServerConfiguration.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration being retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    options?: VpnServerConfigurationsGetOptionalParams,\n  ): Promise<VpnServerConfigurationsGetResponse>;\n  /**\n   * Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing\n   * VpnServerConfiguration.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration being created or updated.\n   * @param vpnServerConfigurationParameters Parameters supplied to create or update\n   *                                         VpnServerConfiguration.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    vpnServerConfigurationParameters: VpnServerConfiguration,\n    options?: VpnServerConfigurationsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VpnServerConfigurationsCreateOrUpdateResponse>,\n      VpnServerConfigurationsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing\n   * VpnServerConfiguration.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration being created or updated.\n   * @param vpnServerConfigurationParameters Parameters supplied to create or update\n   *                                         VpnServerConfiguration.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    vpnServerConfigurationParameters: VpnServerConfiguration,\n    options?: VpnServerConfigurationsCreateOrUpdateOptionalParams,\n  ): Promise<VpnServerConfigurationsCreateOrUpdateResponse>;\n  /**\n   * Updates VpnServerConfiguration tags.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration being updated.\n   * @param vpnServerConfigurationParameters Parameters supplied to update VpnServerConfiguration tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    vpnServerConfigurationParameters: TagsObject,\n    options?: VpnServerConfigurationsUpdateTagsOptionalParams,\n  ): Promise<VpnServerConfigurationsUpdateTagsResponse>;\n  /**\n   * Deletes a VpnServerConfiguration.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration being deleted.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    options?: VpnServerConfigurationsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a VpnServerConfiguration.\n   * @param resourceGroupName The resource group name of the VpnServerConfiguration.\n   * @param vpnServerConfigurationName The name of the VpnServerConfiguration being deleted.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    vpnServerConfigurationName: string,\n    options?: VpnServerConfigurationsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}