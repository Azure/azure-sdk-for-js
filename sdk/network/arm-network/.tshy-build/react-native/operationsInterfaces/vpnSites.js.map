{"version":3,"file":"vpnSites.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/vpnSites.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VpnSite,\n  VpnSitesListByResourceGroupOptionalParams,\n  VpnSitesListOptionalParams,\n  VpnSitesGetOptionalParams,\n  VpnSitesGetResponse,\n  VpnSitesCreateOrUpdateOptionalParams,\n  VpnSitesCreateOrUpdateResponse,\n  TagsObject,\n  VpnSitesUpdateTagsOptionalParams,\n  VpnSitesUpdateTagsResponse,\n  VpnSitesDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VpnSites. */\nexport interface VpnSites {\n  /**\n   * Lists all the vpnSites in a resource group.\n   * @param resourceGroupName The resource group name of the VpnSite.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: VpnSitesListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<VpnSite>;\n  /**\n   * Lists all the VpnSites in a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: VpnSitesListOptionalParams,\n  ): PagedAsyncIterableIterator<VpnSite>;\n  /**\n   * Retrieves the details of a VPN site.\n   * @param resourceGroupName The resource group name of the VpnSite.\n   * @param vpnSiteName The name of the VpnSite being retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vpnSiteName: string,\n    options?: VpnSitesGetOptionalParams,\n  ): Promise<VpnSitesGetResponse>;\n  /**\n   * Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.\n   * @param resourceGroupName The resource group name of the VpnSite.\n   * @param vpnSiteName The name of the VpnSite being created or updated.\n   * @param vpnSiteParameters Parameters supplied to create or update VpnSite.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    vpnSiteName: string,\n    vpnSiteParameters: VpnSite,\n    options?: VpnSitesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VpnSitesCreateOrUpdateResponse>,\n      VpnSitesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.\n   * @param resourceGroupName The resource group name of the VpnSite.\n   * @param vpnSiteName The name of the VpnSite being created or updated.\n   * @param vpnSiteParameters Parameters supplied to create or update VpnSite.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vpnSiteName: string,\n    vpnSiteParameters: VpnSite,\n    options?: VpnSitesCreateOrUpdateOptionalParams,\n  ): Promise<VpnSitesCreateOrUpdateResponse>;\n  /**\n   * Updates VpnSite tags.\n   * @param resourceGroupName The resource group name of the VpnSite.\n   * @param vpnSiteName The name of the VpnSite being updated.\n   * @param vpnSiteParameters Parameters supplied to update VpnSite tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    vpnSiteName: string,\n    vpnSiteParameters: TagsObject,\n    options?: VpnSitesUpdateTagsOptionalParams,\n  ): Promise<VpnSitesUpdateTagsResponse>;\n  /**\n   * Deletes a VpnSite.\n   * @param resourceGroupName The resource group name of the VpnSite.\n   * @param vpnSiteName The name of the VpnSite being deleted.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    vpnSiteName: string,\n    options?: VpnSitesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a VpnSite.\n   * @param resourceGroupName The resource group name of the VpnSite.\n   * @param vpnSiteName The name of the VpnSite being deleted.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    vpnSiteName: string,\n    options?: VpnSitesDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}