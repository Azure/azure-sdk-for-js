{"version":3,"file":"expressRouteCrossConnections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/expressRouteCrossConnections.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  ExpressRouteCrossConnection,\n  ExpressRouteCrossConnectionsListOptionalParams,\n  ExpressRouteCrossConnectionsListByResourceGroupOptionalParams,\n  ExpressRouteCrossConnectionsGetOptionalParams,\n  ExpressRouteCrossConnectionsGetResponse,\n  ExpressRouteCrossConnectionsCreateOrUpdateOptionalParams,\n  ExpressRouteCrossConnectionsCreateOrUpdateResponse,\n  TagsObject,\n  ExpressRouteCrossConnectionsUpdateTagsOptionalParams,\n  ExpressRouteCrossConnectionsUpdateTagsResponse,\n  ExpressRouteCrossConnectionsListArpTableOptionalParams,\n  ExpressRouteCrossConnectionsListArpTableResponse,\n  ExpressRouteCrossConnectionsListRoutesTableSummaryOptionalParams,\n  ExpressRouteCrossConnectionsListRoutesTableSummaryResponse,\n  ExpressRouteCrossConnectionsListRoutesTableOptionalParams,\n  ExpressRouteCrossConnectionsListRoutesTableResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a ExpressRouteCrossConnections. */\nexport interface ExpressRouteCrossConnections {\n  /**\n   * Retrieves all the ExpressRouteCrossConnections in a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: ExpressRouteCrossConnectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<ExpressRouteCrossConnection>;\n  /**\n   * Retrieves all the ExpressRouteCrossConnections in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: ExpressRouteCrossConnectionsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<ExpressRouteCrossConnection>;\n  /**\n   * Gets details about the specified ExpressRouteCrossConnection.\n   * @param resourceGroupName The name of the resource group (peering location of the circuit).\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection (service key of the circuit).\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    options?: ExpressRouteCrossConnectionsGetOptionalParams,\n  ): Promise<ExpressRouteCrossConnectionsGetResponse>;\n  /**\n   * Update the specified ExpressRouteCrossConnection.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection.\n   * @param parameters Parameters supplied to the update express route crossConnection operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    parameters: ExpressRouteCrossConnection,\n    options?: ExpressRouteCrossConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteCrossConnectionsCreateOrUpdateResponse>,\n      ExpressRouteCrossConnectionsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Update the specified ExpressRouteCrossConnection.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection.\n   * @param parameters Parameters supplied to the update express route crossConnection operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    parameters: ExpressRouteCrossConnection,\n    options?: ExpressRouteCrossConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<ExpressRouteCrossConnectionsCreateOrUpdateResponse>;\n  /**\n   * Updates an express route cross connection tags.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the cross connection.\n   * @param crossConnectionParameters Parameters supplied to update express route cross connection tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    crossConnectionParameters: TagsObject,\n    options?: ExpressRouteCrossConnectionsUpdateTagsOptionalParams,\n  ): Promise<ExpressRouteCrossConnectionsUpdateTagsResponse>;\n  /**\n   * Gets the currently advertised ARP table associated with the express route cross connection in a\n   * resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection.\n   * @param peeringName The name of the peering.\n   * @param devicePath The path of the device.\n   * @param options The options parameters.\n   */\n  beginListArpTable(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    peeringName: string,\n    devicePath: string,\n    options?: ExpressRouteCrossConnectionsListArpTableOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteCrossConnectionsListArpTableResponse>,\n      ExpressRouteCrossConnectionsListArpTableResponse\n    >\n  >;\n  /**\n   * Gets the currently advertised ARP table associated with the express route cross connection in a\n   * resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection.\n   * @param peeringName The name of the peering.\n   * @param devicePath The path of the device.\n   * @param options The options parameters.\n   */\n  beginListArpTableAndWait(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    peeringName: string,\n    devicePath: string,\n    options?: ExpressRouteCrossConnectionsListArpTableOptionalParams,\n  ): Promise<ExpressRouteCrossConnectionsListArpTableResponse>;\n  /**\n   * Gets the route table summary associated with the express route cross connection in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection.\n   * @param peeringName The name of the peering.\n   * @param devicePath The path of the device.\n   * @param options The options parameters.\n   */\n  beginListRoutesTableSummary(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    peeringName: string,\n    devicePath: string,\n    options?: ExpressRouteCrossConnectionsListRoutesTableSummaryOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteCrossConnectionsListRoutesTableSummaryResponse>,\n      ExpressRouteCrossConnectionsListRoutesTableSummaryResponse\n    >\n  >;\n  /**\n   * Gets the route table summary associated with the express route cross connection in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection.\n   * @param peeringName The name of the peering.\n   * @param devicePath The path of the device.\n   * @param options The options parameters.\n   */\n  beginListRoutesTableSummaryAndWait(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    peeringName: string,\n    devicePath: string,\n    options?: ExpressRouteCrossConnectionsListRoutesTableSummaryOptionalParams,\n  ): Promise<ExpressRouteCrossConnectionsListRoutesTableSummaryResponse>;\n  /**\n   * Gets the currently advertised routes table associated with the express route cross connection in a\n   * resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection.\n   * @param peeringName The name of the peering.\n   * @param devicePath The path of the device.\n   * @param options The options parameters.\n   */\n  beginListRoutesTable(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    peeringName: string,\n    devicePath: string,\n    options?: ExpressRouteCrossConnectionsListRoutesTableOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ExpressRouteCrossConnectionsListRoutesTableResponse>,\n      ExpressRouteCrossConnectionsListRoutesTableResponse\n    >\n  >;\n  /**\n   * Gets the currently advertised routes table associated with the express route cross connection in a\n   * resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param crossConnectionName The name of the ExpressRouteCrossConnection.\n   * @param peeringName The name of the peering.\n   * @param devicePath The path of the device.\n   * @param options The options parameters.\n   */\n  beginListRoutesTableAndWait(\n    resourceGroupName: string,\n    crossConnectionName: string,\n    peeringName: string,\n    devicePath: string,\n    options?: ExpressRouteCrossConnectionsListRoutesTableOptionalParams,\n  ): Promise<ExpressRouteCrossConnectionsListRoutesTableResponse>;\n}\n"]}