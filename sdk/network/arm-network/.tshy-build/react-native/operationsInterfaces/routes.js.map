{"version":3,"file":"routes.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/routes.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  Route,\n  RoutesListOptionalParams,\n  RoutesDeleteOptionalParams,\n  RoutesGetOptionalParams,\n  RoutesGetResponse,\n  RoutesCreateOrUpdateOptionalParams,\n  RoutesCreateOrUpdateResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a Routes. */\nexport interface Routes {\n  /**\n   * Gets all routes in a route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    routeTableName: string,\n    options?: RoutesListOptionalParams,\n  ): PagedAsyncIterableIterator<Route>;\n  /**\n   * Deletes the specified route from a route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param routeName The name of the route.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    routeTableName: string,\n    routeName: string,\n    options?: RoutesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified route from a route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param routeName The name of the route.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    routeTableName: string,\n    routeName: string,\n    options?: RoutesDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified route from a route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param routeName The name of the route.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    routeTableName: string,\n    routeName: string,\n    options?: RoutesGetOptionalParams,\n  ): Promise<RoutesGetResponse>;\n  /**\n   * Creates or updates a route in the specified route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param routeName The name of the route.\n   * @param routeParameters Parameters supplied to the create or update route operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    routeTableName: string,\n    routeName: string,\n    routeParameters: Route,\n    options?: RoutesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<RoutesCreateOrUpdateResponse>,\n      RoutesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a route in the specified route table.\n   * @param resourceGroupName The name of the resource group.\n   * @param routeTableName The name of the route table.\n   * @param routeName The name of the route.\n   * @param routeParameters Parameters supplied to the create or update route operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    routeTableName: string,\n    routeName: string,\n    routeParameters: Route,\n    options?: RoutesCreateOrUpdateOptionalParams,\n  ): Promise<RoutesCreateOrUpdateResponse>;\n}\n"]}