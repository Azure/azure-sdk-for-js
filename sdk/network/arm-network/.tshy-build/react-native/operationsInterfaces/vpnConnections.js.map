{"version":3,"file":"vpnConnections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/vpnConnections.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VpnConnection,\n  VpnConnectionsListByVpnGatewayOptionalParams,\n  VpnConnectionsGetOptionalParams,\n  VpnConnectionsGetResponse,\n  VpnConnectionsCreateOrUpdateOptionalParams,\n  VpnConnectionsCreateOrUpdateResponse,\n  VpnConnectionsDeleteOptionalParams,\n  VpnConnectionsStartPacketCaptureOptionalParams,\n  VpnConnectionsStartPacketCaptureResponse,\n  VpnConnectionsStopPacketCaptureOptionalParams,\n  VpnConnectionsStopPacketCaptureResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VpnConnections. */\nexport interface VpnConnections {\n  /**\n   * Retrieves all vpn connections for a particular virtual wan vpn gateway.\n   * @param resourceGroupName The resource group name of the VpnGateway.\n   * @param gatewayName The name of the gateway.\n   * @param options The options parameters.\n   */\n  listByVpnGateway(\n    resourceGroupName: string,\n    gatewayName: string,\n    options?: VpnConnectionsListByVpnGatewayOptionalParams,\n  ): PagedAsyncIterableIterator<VpnConnection>;\n  /**\n   * Retrieves the details of a vpn connection.\n   * @param resourceGroupName The resource group name of the VpnGateway.\n   * @param gatewayName The name of the gateway.\n   * @param connectionName The name of the vpn connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    gatewayName: string,\n    connectionName: string,\n    options?: VpnConnectionsGetOptionalParams,\n  ): Promise<VpnConnectionsGetResponse>;\n  /**\n   * Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing\n   * connection.\n   * @param resourceGroupName The resource group name of the VpnGateway.\n   * @param gatewayName The name of the gateway.\n   * @param connectionName The name of the connection.\n   * @param vpnConnectionParameters Parameters supplied to create or Update a VPN Connection.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    gatewayName: string,\n    connectionName: string,\n    vpnConnectionParameters: VpnConnection,\n    options?: VpnConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VpnConnectionsCreateOrUpdateResponse>,\n      VpnConnectionsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing\n   * connection.\n   * @param resourceGroupName The resource group name of the VpnGateway.\n   * @param gatewayName The name of the gateway.\n   * @param connectionName The name of the connection.\n   * @param vpnConnectionParameters Parameters supplied to create or Update a VPN Connection.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    gatewayName: string,\n    connectionName: string,\n    vpnConnectionParameters: VpnConnection,\n    options?: VpnConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<VpnConnectionsCreateOrUpdateResponse>;\n  /**\n   * Deletes a vpn connection.\n   * @param resourceGroupName The resource group name of the VpnGateway.\n   * @param gatewayName The name of the gateway.\n   * @param connectionName The name of the connection.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    gatewayName: string,\n    connectionName: string,\n    options?: VpnConnectionsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a vpn connection.\n   * @param resourceGroupName The resource group name of the VpnGateway.\n   * @param gatewayName The name of the gateway.\n   * @param connectionName The name of the connection.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    gatewayName: string,\n    connectionName: string,\n    options?: VpnConnectionsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Starts packet capture on Vpn connection in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param gatewayName The name of the gateway.\n   * @param vpnConnectionName The name of the vpn connection.\n   * @param options The options parameters.\n   */\n  beginStartPacketCapture(\n    resourceGroupName: string,\n    gatewayName: string,\n    vpnConnectionName: string,\n    options?: VpnConnectionsStartPacketCaptureOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VpnConnectionsStartPacketCaptureResponse>,\n      VpnConnectionsStartPacketCaptureResponse\n    >\n  >;\n  /**\n   * Starts packet capture on Vpn connection in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param gatewayName The name of the gateway.\n   * @param vpnConnectionName The name of the vpn connection.\n   * @param options The options parameters.\n   */\n  beginStartPacketCaptureAndWait(\n    resourceGroupName: string,\n    gatewayName: string,\n    vpnConnectionName: string,\n    options?: VpnConnectionsStartPacketCaptureOptionalParams,\n  ): Promise<VpnConnectionsStartPacketCaptureResponse>;\n  /**\n   * Stops packet capture on Vpn connection in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param gatewayName The name of the gateway.\n   * @param vpnConnectionName The name of the vpn connection.\n   * @param options The options parameters.\n   */\n  beginStopPacketCapture(\n    resourceGroupName: string,\n    gatewayName: string,\n    vpnConnectionName: string,\n    options?: VpnConnectionsStopPacketCaptureOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VpnConnectionsStopPacketCaptureResponse>,\n      VpnConnectionsStopPacketCaptureResponse\n    >\n  >;\n  /**\n   * Stops packet capture on Vpn connection in the specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param gatewayName The name of the gateway.\n   * @param vpnConnectionName The name of the vpn connection.\n   * @param options The options parameters.\n   */\n  beginStopPacketCaptureAndWait(\n    resourceGroupName: string,\n    gatewayName: string,\n    vpnConnectionName: string,\n    options?: VpnConnectionsStopPacketCaptureOptionalParams,\n  ): Promise<VpnConnectionsStopPacketCaptureResponse>;\n}\n"]}