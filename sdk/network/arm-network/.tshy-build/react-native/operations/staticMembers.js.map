{"version":3,"file":"staticMembers.js","sourceRoot":"","sources":["../../../src/operations/staticMembers.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { StaticMembers } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { NetworkManagementClient } from \"../networkManagementClient.js\";\nimport {\n  StaticMember,\n  StaticMembersListNextOptionalParams,\n  StaticMembersListOptionalParams,\n  StaticMembersListResponse,\n  StaticMembersGetOptionalParams,\n  StaticMembersGetResponse,\n  StaticMembersCreateOrUpdateOptionalParams,\n  StaticMembersCreateOrUpdateResponse,\n  StaticMembersDeleteOptionalParams,\n  StaticMembersListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing StaticMembers operations. */\nexport class StaticMembersImpl implements StaticMembers {\n  private readonly client: NetworkManagementClient;\n\n  /**\n   * Initialize a new instance of the class StaticMembers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NetworkManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the specified static member.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    options?: StaticMembersListOptionalParams,\n  ): PagedAsyncIterableIterator<StaticMember> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      networkManagerName,\n      networkGroupName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          networkManagerName,\n          networkGroupName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    options?: StaticMembersListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticMember[]> {\n    let result: StaticMembersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        networkManagerName,\n        networkGroupName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        networkManagerName,\n        networkGroupName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    options?: StaticMembersListOptionalParams,\n  ): AsyncIterableIterator<StaticMember> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      networkManagerName,\n      networkGroupName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the specified static member.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param staticMemberName The name of the static member.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    staticMemberName: string,\n    options?: StaticMembersGetOptionalParams,\n  ): Promise<StaticMembersGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        networkManagerName,\n        networkGroupName,\n        staticMemberName,\n        options,\n      },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Creates or updates a static member.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param staticMemberName The name of the static member.\n   * @param parameters Parameters supplied to the specify the static member to create\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    staticMemberName: string,\n    parameters: StaticMember,\n    options?: StaticMembersCreateOrUpdateOptionalParams,\n  ): Promise<StaticMembersCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        networkManagerName,\n        networkGroupName,\n        staticMemberName,\n        parameters,\n        options,\n      },\n      createOrUpdateOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes a static member.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param staticMemberName The name of the static member.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    staticMemberName: string,\n    options?: StaticMembersDeleteOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        networkManagerName,\n        networkGroupName,\n        staticMemberName,\n        options,\n      },\n      deleteOperationSpec,\n    );\n  }\n\n  /**\n   * Lists the specified static member.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    options?: StaticMembersListOptionalParams,\n  ): Promise<StaticMembersListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, networkManagerName, networkGroupName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param networkGroupName The name of the network group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    networkManagerName: string,\n    networkGroupName: string,\n    nextLink: string,\n    options?: StaticMembersListNextOptionalParams,\n  ): Promise<StaticMembersListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        networkManagerName,\n        networkGroupName,\n        nextLink,\n        options,\n      },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers/{staticMemberName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticMember,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkManagerName,\n    Parameters.networkGroupName,\n    Parameters.staticMemberName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers/{staticMemberName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticMember,\n    },\n    201: {\n      bodyMapper: Mappers.StaticMember,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters40,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkManagerName,\n    Parameters.networkGroupName,\n    Parameters.staticMemberName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers/{staticMemberName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkManagerName,\n    Parameters.networkGroupName,\n    Parameters.staticMemberName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/networkGroups/{networkGroupName}/staticMembers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticMemberListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.top,\n    Parameters.skipToken1,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.networkManagerName,\n    Parameters.networkGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticMemberListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.networkManagerName,\n    Parameters.networkGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}