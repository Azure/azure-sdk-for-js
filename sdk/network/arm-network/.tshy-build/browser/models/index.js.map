{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/models/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type FirewallPolicyRuleCollectionUnion =\n  | FirewallPolicyRuleCollection\n  | FirewallPolicyNatRuleCollection\n  | FirewallPolicyFilterRuleCollection;\nexport type ActiveBaseSecurityAdminRuleUnion =\n  | ActiveBaseSecurityAdminRule\n  | ActiveSecurityAdminRule\n  | ActiveDefaultSecurityAdminRule;\nexport type EffectiveBaseSecurityAdminRuleUnion =\n  | EffectiveBaseSecurityAdminRule\n  | EffectiveSecurityAdminRule\n  | EffectiveDefaultSecurityAdminRule;\nexport type FirewallPolicyRuleUnion =\n  | FirewallPolicyRule\n  | ApplicationRule\n  | NatRule\n  | NetworkRule;\nexport type BaseAdminRuleUnion = BaseAdminRule | AdminRule | DefaultAdminRule;\n\n/** An error response from the service. */\nexport interface CloudError {\n  /** Cloud error body. */\n  error?: CloudErrorBody;\n}\n\n/** An error response from the service. */\nexport interface CloudErrorBody {\n  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */\n  code?: string;\n  /** A message describing the error, intended to be suitable for display in a user interface. */\n  message?: string;\n  /** The target of the particular error. For example, the name of the property in error. */\n  target?: string;\n  /** A list of additional details about the error. */\n  details?: CloudErrorBody[];\n}\n\n/** SKU of an application gateway. */\nexport interface ApplicationGatewaySku {\n  /** Name of an application gateway SKU. */\n  name?: ApplicationGatewaySkuName;\n  /** Tier of an application gateway. */\n  tier?: ApplicationGatewayTier;\n  /** Capacity (instance count) of an application gateway. */\n  capacity?: number;\n  /** Family of an application gateway SKU. */\n  family?: ApplicationGatewaySkuFamily;\n}\n\n/** Application Gateway Ssl policy. */\nexport interface ApplicationGatewaySslPolicy {\n  /** Ssl protocols to be disabled on application gateway. */\n  disabledSslProtocols?: ApplicationGatewaySslProtocol[];\n  /** Type of Ssl Policy. */\n  policyType?: ApplicationGatewaySslPolicyType;\n  /** Name of Ssl predefined policy. */\n  policyName?: ApplicationGatewaySslPolicyName;\n  /** Ssl cipher suites to be enabled in the specified order to application gateway. */\n  cipherSuites?: ApplicationGatewaySslCipherSuite[];\n  /** Minimum version of Ssl protocol to be supported on application gateway. */\n  minProtocolVersion?: ApplicationGatewaySslProtocol;\n}\n\n/** Reference to another subresource. */\nexport interface SubResource {\n  /** Resource ID. */\n  id?: string;\n}\n\n/** Application gateway probe health response match. */\nexport interface ApplicationGatewayProbeHealthResponseMatch {\n  /** Body that must be contained in the health response. Default value is empty. */\n  body?: string;\n  /** Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399. */\n  statusCodes?: string[];\n}\n\n/** Common resource representation. */\nexport interface Resource {\n  /** Resource ID. */\n  id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location. */\n  location?: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** ExtendedLocation complex type. */\nexport interface ExtendedLocation {\n  /** The name of the extended location. */\n  name?: string;\n  /** The type of the extended location. */\n  type?: ExtendedLocationTypes;\n}\n\n/** A collection of information about the state of the connection between service consumer and provider. */\nexport interface PrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: string;\n  /** The reason for approval/rejection of the connection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionsRequired?: string;\n}\n\n/** Contains custom Dns resolution configuration from customer. */\nexport interface CustomDnsConfigPropertiesFormat {\n  /** Fqdn that resolves to private endpoint ip address. */\n  fqdn?: string;\n  /** A list of private ip addresses of the private endpoint. */\n  ipAddresses?: string[];\n}\n\n/** An IP Configuration of the private endpoint. */\nexport interface PrivateEndpointIPConfiguration {\n  /** The name of the resource that is unique within a resource group. */\n  name?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The ID of a group obtained from the remote resource that this private endpoint should connect to. */\n  groupId?: string;\n  /** The member name of a group obtained from the remote resource that this private endpoint should connect to. */\n  memberName?: string;\n  /** A private ip address obtained from the private endpoint's subnet. */\n  privateIPAddress?: string;\n}\n\n/** DNS settings of a network interface. */\nexport interface NetworkInterfaceDnsSettings {\n  /** List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection. */\n  dnsServers?: string[];\n  /**\n   * If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly appliedDnsServers?: string[];\n  /** Relative DNS name for this NIC used for internal communications between VMs in the same virtual network. */\n  internalDnsNameLabel?: string;\n  /**\n   * Fully qualified DNS name supporting internal communications between VMs in the same virtual network.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly internalFqdn?: string;\n  /**\n   * Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly internalDomainNameSuffix?: string;\n}\n\n/** The base resource set for visibility and auto-approval. */\nexport interface ResourceSet {\n  /** The list of subscriptions. */\n  subscriptions?: string[];\n}\n\n/** Parameters that define the retention policy for flow log. */\nexport interface RetentionPolicyParameters {\n  /** Number of days to retain flow log records. */\n  days?: number;\n  /** Flag to enable/disable retention. */\n  enabled?: boolean;\n}\n\n/** Parameters that define the flow log format. */\nexport interface FlowLogFormatParameters {\n  /** The file type of flow log. */\n  type?: FlowLogFormatType;\n  /** The version (revision) of the flow log. */\n  version?: number;\n}\n\n/** Parameters that define the configuration of traffic analytics. */\nexport interface TrafficAnalyticsProperties {\n  /** Parameters that define the configuration of traffic analytics. */\n  networkWatcherFlowAnalyticsConfiguration?: TrafficAnalyticsConfigurationProperties;\n}\n\n/** Parameters that define the configuration of traffic analytics. */\nexport interface TrafficAnalyticsConfigurationProperties {\n  /** Flag to enable/disable traffic analytics. */\n  enabled?: boolean;\n  /** The resource guid of the attached workspace. */\n  workspaceId?: string;\n  /** The location of the attached workspace. */\n  workspaceRegion?: string;\n  /** Resource Id of the attached workspace. */\n  workspaceResourceId?: string;\n  /** The interval in minutes which would decide how frequently TA service should do flow analytics. */\n  trafficAnalyticsInterval?: number;\n}\n\n/** Identity for the resource. */\nexport interface ManagedServiceIdentity {\n  /**\n   * The principal id of the system assigned identity. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine. */\n  type?: ResourceIdentityType;\n  /** The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: {\n    [\n      propertyName: string\n    ]: Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties;\n  };\n}\n\nexport interface Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties {\n  /**\n   * The principal id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** The service endpoint properties. */\nexport interface ServiceEndpointPropertiesFormat {\n  /** The type of the endpoint service. */\n  service?: string;\n  /** SubResource as network identifier. */\n  networkIdentifier?: SubResource;\n  /** A list of locations. */\n  locations?: string[];\n  /**\n   * The provisioning state of the service endpoint resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** SKU of a public IP address. */\nexport interface PublicIPAddressSku {\n  /** Name of a public IP address SKU. */\n  name?: PublicIPAddressSkuName;\n  /** Tier of a public IP address SKU. */\n  tier?: PublicIPAddressSkuTier;\n}\n\n/** Contains FQDN of the DNS record associated with the public IP address. */\nexport interface PublicIPAddressDnsSettings {\n  /** The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system. */\n  domainNameLabel?: string;\n  /** The domain name label scope. If a domain name label and a domain name label scope are specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system with a hashed value includes in FQDN. */\n  domainNameLabelScope?: PublicIpAddressDnsSettingsDomainNameLabelScope;\n  /** The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone. */\n  fqdn?: string;\n  /** The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. */\n  reverseFqdn?: string;\n}\n\n/** Contains the DDoS protection settings of the public IP. */\nexport interface DdosSettings {\n  /** The DDoS protection mode of the public IP */\n  protectionMode?: DdosSettingsProtectionMode;\n  /** The DDoS protection plan associated with the public IP. Can only be set if ProtectionMode is Enabled */\n  ddosProtectionPlan?: SubResource;\n}\n\n/** Contains the IpTag associated with the object. */\nexport interface IpTag {\n  /** The IP tag type. Example: FirstPartyUsage. */\n  ipTagType?: string;\n  /** The value of the IP tag associated with the public IP. Example: SQL. */\n  tag?: string;\n}\n\n/** SKU of nat gateway. */\nexport interface NatGatewaySku {\n  /** Name of Nat Gateway SKU. */\n  name?: NatGatewaySkuName;\n}\n\n/** IpamPool prefix allocation reference. */\nexport interface IpamPoolPrefixAllocation {\n  /** Number of IP addresses to allocate. */\n  numberOfIpAddresses?: string;\n  /**\n   * List of assigned IP address prefixes in the IpamPool of the associated resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly allocatedAddressPrefixes?: string[];\n  /** Resource id of the associated Azure IpamPool resource. */\n  id?: string;\n}\n\n/** Gateway load balancer tunnel interface of a load balancer backend address pool. */\nexport interface GatewayLoadBalancerTunnelInterface {\n  /** Port of gateway load balancer tunnel interface. */\n  port?: number;\n  /** Identifier of gateway load balancer tunnel interface. */\n  identifier?: number;\n  /** Protocol of gateway load balancer tunnel interface. */\n  protocol?: GatewayLoadBalancerTunnelProtocol;\n  /** Traffic type of gateway load balancer tunnel interface. */\n  type?: GatewayLoadBalancerTunnelInterfaceType;\n}\n\n/** Load balancer backend addresses. */\nexport interface LoadBalancerBackendAddress {\n  /** Name of the backend address. */\n  name?: string;\n  /** Reference to an existing virtual network. */\n  virtualNetwork?: SubResource;\n  /** Reference to an existing subnet. */\n  subnet?: SubResource;\n  /** IP Address belonging to the referenced virtual network. */\n  ipAddress?: string;\n  /**\n   * Reference to IP address defined in network interfaces.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkInterfaceIPConfiguration?: SubResource;\n  /** Reference to the frontend ip address configuration defined in regional loadbalancer. */\n  loadBalancerFrontendIPConfiguration?: SubResource;\n  /**\n   * Collection of inbound NAT rule port mappings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inboundNatRulesPortMapping?: NatRulePortMapping[];\n  /** A list of administrative states which once set can override health probe so that Load Balancer will always forward new connections to backend, or deny new connections and reset existing connections. */\n  adminState?: LoadBalancerBackendAddressAdminState;\n}\n\n/** Individual port mappings for inbound NAT rule created for backend pool. */\nexport interface NatRulePortMapping {\n  /** Name of inbound NAT rule. */\n  inboundNatRuleName?: string;\n  /** Frontend port. */\n  frontendPort?: number;\n  /** Backend port. */\n  backendPort?: number;\n}\n\n/** PrivateLinkConnection properties for the network interface. */\nexport interface NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties {\n  /**\n   * The group ID for current private link connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The required member name for current private link connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMemberName?: string;\n  /**\n   * List of FQDNs for current private link connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fqdns?: string[];\n}\n\n/** Backend address of an application gateway. */\nexport interface ApplicationGatewayBackendAddress {\n  /** Fully qualified domain name (FQDN). */\n  fqdn?: string;\n  /** IP address. */\n  ipAddress?: string;\n}\n\n/** Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration. */\nexport interface ApplicationGatewayConnectionDraining {\n  /** Whether connection draining is enabled or not. */\n  enabled: boolean;\n  /** The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds. */\n  drainTimeoutInSec: number;\n}\n\n/** Custom error of an application gateway. */\nexport interface ApplicationGatewayCustomError {\n  /** Status code of the application gateway custom error. */\n  statusCode?: ApplicationGatewayCustomErrorStatusCode;\n  /** Error page URL of the application gateway custom error. */\n  customErrorPageUrl?: string;\n}\n\n/** Application gateway client authentication configuration. */\nexport interface ApplicationGatewayClientAuthConfiguration {\n  /** Verify client certificate issuer name on the application gateway. */\n  verifyClientCertIssuerDN?: boolean;\n  /** Verify client certificate revocation status. */\n  verifyClientRevocation?: ApplicationGatewayClientRevocationOptions;\n}\n\n/** Rewrite rule of an application gateway. */\nexport interface ApplicationGatewayRewriteRule {\n  /** Name of the rewrite rule that is unique within an Application Gateway. */\n  name?: string;\n  /** Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet. */\n  ruleSequence?: number;\n  /** Conditions based on which the action set execution will be evaluated. */\n  conditions?: ApplicationGatewayRewriteRuleCondition[];\n  /** Set of actions to be done as part of the rewrite Rule. */\n  actionSet?: ApplicationGatewayRewriteRuleActionSet;\n}\n\n/** Set of conditions in the Rewrite Rule in Application Gateway. */\nexport interface ApplicationGatewayRewriteRuleCondition {\n  /** The condition parameter of the RewriteRuleCondition. */\n  variable?: string;\n  /** The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition. */\n  pattern?: string;\n  /** Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison. */\n  ignoreCase?: boolean;\n  /** Setting this value as truth will force to check the negation of the condition given by the user. */\n  negate?: boolean;\n}\n\n/** Set of actions in the Rewrite Rule in Application Gateway. */\nexport interface ApplicationGatewayRewriteRuleActionSet {\n  /** Request Header Actions in the Action Set. */\n  requestHeaderConfigurations?: ApplicationGatewayHeaderConfiguration[];\n  /** Response Header Actions in the Action Set. */\n  responseHeaderConfigurations?: ApplicationGatewayHeaderConfiguration[];\n  /** Url Configuration Action in the Action Set. */\n  urlConfiguration?: ApplicationGatewayUrlConfiguration;\n}\n\n/** Header configuration of the Actions set in Application Gateway. */\nexport interface ApplicationGatewayHeaderConfiguration {\n  /** Header name of the header configuration. */\n  headerName?: string;\n  /** An optional field under \"Rewrite Action\". It lets you capture and modify the value(s) of a specific header when multiple headers with the same name exist. Currently supported for Set-Cookie Response header only. For more details, visit https://aka.ms/appgwheadercrud */\n  headerValueMatcher?: HeaderValueMatcher;\n  /** Header value of the header configuration. */\n  headerValue?: string;\n}\n\n/** An optional field under \"Rewrite Action\". It lets you capture and modify the value(s) of a specific header when multiple headers with the same name exist. Currently supported for Set-Cookie Response header only. For more details, visit https://aka.ms/appgwheadercrud */\nexport interface HeaderValueMatcher {\n  /** The pattern, either fixed string or regular expression, that evaluates if a header value should be selected for rewrite. */\n  pattern?: string;\n  /** Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison. */\n  ignoreCase?: boolean;\n  /** Setting this value as truth will force to check the negation of the condition given by the user in the pattern field. */\n  negate?: boolean;\n}\n\n/** Url configuration of the Actions set in Application Gateway. */\nexport interface ApplicationGatewayUrlConfiguration {\n  /** Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null. */\n  modifiedPath?: string;\n  /** Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null. */\n  modifiedQueryString?: string;\n  /** If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false. */\n  reroute?: boolean;\n}\n\n/** Application gateway web application firewall configuration. */\nexport interface ApplicationGatewayWebApplicationFirewallConfiguration {\n  /** Whether the web application firewall is enabled or not. */\n  enabled: boolean;\n  /** Web application firewall mode. */\n  firewallMode: ApplicationGatewayFirewallMode;\n  /** The type of the web application firewall rule set. Possible values are: 'OWASP'. */\n  ruleSetType: string;\n  /** The version of the rule set type. */\n  ruleSetVersion: string;\n  /** The disabled rule groups. */\n  disabledRuleGroups?: ApplicationGatewayFirewallDisabledRuleGroup[];\n  /** Whether allow WAF to check request Body. */\n  requestBodyCheck?: boolean;\n  /** Maximum request body size for WAF. */\n  maxRequestBodySize?: number;\n  /** Maximum request body size in Kb for WAF. */\n  maxRequestBodySizeInKb?: number;\n  /** Maximum file upload size in Mb for WAF. */\n  fileUploadLimitInMb?: number;\n  /** The exclusion list. */\n  exclusions?: ApplicationGatewayFirewallExclusion[];\n}\n\n/** Allows to disable rules within a rule group or an entire rule group. */\nexport interface ApplicationGatewayFirewallDisabledRuleGroup {\n  /** The name of the rule group that will be disabled. */\n  ruleGroupName: string;\n  /** The list of rules that will be disabled. If null, all rules of the rule group will be disabled. */\n  rules?: number[];\n}\n\n/** Allow to exclude some variable satisfy the condition for the WAF check. */\nexport interface ApplicationGatewayFirewallExclusion {\n  /** The variable to be excluded. */\n  matchVariable: string;\n  /** When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to. */\n  selectorMatchOperator: string;\n  /** When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to. */\n  selector: string;\n}\n\n/** Application Gateway autoscale configuration. */\nexport interface ApplicationGatewayAutoscaleConfiguration {\n  /** Lower bound on number of Application Gateway capacity. */\n  minCapacity: number;\n  /** Upper bound on number of Application Gateway capacity. */\n  maxCapacity?: number;\n}\n\n/** Application Gateway global configuration. */\nexport interface ApplicationGatewayGlobalConfiguration {\n  /** Enable request buffering. */\n  enableRequestBuffering?: boolean;\n  /** Enable response buffering. */\n  enableResponseBuffering?: boolean;\n}\n\n/** Tags object for patch operations. */\nexport interface TagsObject {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Response for ListApplicationGateways API service call. */\nexport interface ApplicationGatewayListResult {\n  /** List of an application gateways in a resource group. */\n  value?: ApplicationGateway[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ApplicationGatewayBackendHealth API service call. */\nexport interface ApplicationGatewayBackendHealth {\n  /** A list of ApplicationGatewayBackendHealthPool resources. */\n  backendAddressPools?: ApplicationGatewayBackendHealthPool[];\n}\n\n/** Application gateway BackendHealth pool. */\nexport interface ApplicationGatewayBackendHealthPool {\n  /** Reference to an ApplicationGatewayBackendAddressPool resource. */\n  backendAddressPool?: ApplicationGatewayBackendAddressPool;\n  /** List of ApplicationGatewayBackendHealthHttpSettings resources. */\n  backendHttpSettingsCollection?: ApplicationGatewayBackendHealthHttpSettings[];\n}\n\n/** Application gateway BackendHealthHttp settings. */\nexport interface ApplicationGatewayBackendHealthHttpSettings {\n  /** Reference to an ApplicationGatewayBackendHttpSettings resource. */\n  backendHttpSettings?: ApplicationGatewayBackendHttpSettings;\n  /** List of ApplicationGatewayBackendHealthServer resources. */\n  servers?: ApplicationGatewayBackendHealthServer[];\n}\n\n/** Application gateway backendhealth http settings. */\nexport interface ApplicationGatewayBackendHealthServer {\n  /** IP address or FQDN of backend server. */\n  address?: string;\n  /** Reference to IP configuration of backend server. */\n  ipConfiguration?: NetworkInterfaceIPConfiguration;\n  /** Health of backend server. */\n  health?: ApplicationGatewayBackendHealthServerHealth;\n  /** Health Probe Log. */\n  healthProbeLog?: string;\n}\n\n/** Details of on demand test probe request. */\nexport interface ApplicationGatewayOnDemandProbe {\n  /** The protocol used for the probe. */\n  protocol?: ApplicationGatewayProtocol;\n  /** Host name to send the probe to. */\n  host?: string;\n  /** Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>. */\n  path?: string;\n  /** The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds. */\n  timeout?: number;\n  /** Whether the host header should be picked from the backend http settings. Default value is false. */\n  pickHostNameFromBackendHttpSettings?: boolean;\n  /** Criterion for classifying a healthy probe response. */\n  match?: ApplicationGatewayProbeHealthResponseMatch;\n  /** Reference to backend pool of application gateway to which probe request will be sent. */\n  backendAddressPool?: SubResource;\n  /** Reference to backend http setting of application gateway to be used for test probe. */\n  backendHttpSettings?: SubResource;\n}\n\n/** Result of on demand test probe. */\nexport interface ApplicationGatewayBackendHealthOnDemand {\n  /** Reference to an ApplicationGatewayBackendAddressPool resource. */\n  backendAddressPool?: ApplicationGatewayBackendAddressPool;\n  /** Application gateway BackendHealthHttp settings. */\n  backendHealthHttpSettings?: ApplicationGatewayBackendHealthHttpSettings;\n}\n\n/** Response for ListApplicationGatewayPrivateLinkResources API service call. Gets all private link resources for an application gateway. */\nexport interface ApplicationGatewayPrivateLinkResourceListResult {\n  /** List of private link resources of an application gateway. */\n  value?: ApplicationGatewayPrivateLinkResource[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListApplicationGatewayPrivateEndpointConnection API service call. Gets all private endpoint connections for an application gateway. */\nexport interface ApplicationGatewayPrivateEndpointConnectionListResult {\n  /** List of private endpoint connections on an application gateway. */\n  value?: ApplicationGatewayPrivateEndpointConnection[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Common error representation. */\nexport interface ErrorModel {\n  /** Error code. */\n  code?: string;\n  /** Error message. */\n  message?: string;\n  /** Error target. */\n  target?: string;\n  /** Error details. */\n  details?: ErrorDetails[];\n  /** Inner error message. */\n  innerError?: string;\n}\n\n/** Common error details representation. */\nexport interface ErrorDetails {\n  /** Error code. */\n  code?: string;\n  /** Error target. */\n  target?: string;\n  /** Error message. */\n  message?: string;\n}\n\n/** Response for ApplicationGatewayAvailableWafRuleSets API service call. */\nexport interface ApplicationGatewayAvailableWafRuleSetsResult {\n  /** The list of application gateway rule sets. */\n  value?: ApplicationGatewayFirewallRuleSet[];\n}\n\n/** A web application firewall rule group. */\nexport interface ApplicationGatewayFirewallRuleGroup {\n  /** The name of the web application firewall rule group. */\n  ruleGroupName: string;\n  /** The description of the web application firewall rule group. */\n  description?: string;\n  /** The rules of the web application firewall rule group. */\n  rules: ApplicationGatewayFirewallRule[];\n}\n\n/** A web application firewall rule. */\nexport interface ApplicationGatewayFirewallRule {\n  /** The identifier of the web application firewall rule. */\n  ruleId: number;\n  /** The string representation of the web application firewall rule identifier. */\n  ruleIdString?: string;\n  /** The string representation of the web application firewall rule state. */\n  state?: ApplicationGatewayWafRuleStateTypes;\n  /** The string representation of the web application firewall rule action. */\n  action?: ApplicationGatewayWafRuleActionTypes;\n  /** The string representation of the web application firewall rule sensitivity. */\n  sensitivity?: ApplicationGatewayWafRuleSensitivityTypes;\n  /** The description of the web application firewall rule. */\n  description?: string;\n}\n\n/** Response for ApplicationGatewayAvailableSslOptions API service call. */\nexport interface ApplicationGatewayAvailableSslPredefinedPolicies {\n  /** List of available Ssl predefined policy. */\n  value?: ApplicationGatewaySslPredefinedPolicy[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ApplicationGatewayWafDynamicManifest API service call. */\nexport interface ApplicationGatewayWafDynamicManifestResult {\n  /** Resource ID. */\n  id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The available rulesets. */\n  availableRuleSets?: ApplicationGatewayFirewallManifestRuleSet[];\n  /** The type of the web application firewall rule set. */\n  ruleSetType?: string;\n  /** The version of the web application firewall rule set type. */\n  ruleSetVersion?: string;\n}\n\n/** Properties of the web application firewall rule set. */\nexport interface ApplicationGatewayFirewallManifestRuleSet {\n  /** The type of the web application firewall rule set. */\n  ruleSetType: string;\n  /** The version of the web application firewall rule set type. */\n  ruleSetVersion: string;\n  /** The rule set status */\n  status?: ApplicationGatewayRuleSetStatusOptions;\n  /** Tier of an application gateway that support the rule set. */\n  tiers?: ApplicationGatewayTierTypes[];\n  /** The rule groups of the web application firewall rule set. */\n  ruleGroups: ApplicationGatewayFirewallRuleGroup[];\n}\n\n/** Response for ApplicationGatewayWafDynamicManifests API service call. */\nexport interface ApplicationGatewayWafDynamicManifestResultList {\n  /** The list of application gateway waf manifest. */\n  value?: ApplicationGatewayWafDynamicManifestResult[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** A list of application security groups. */\nexport interface ApplicationSecurityGroupListResult {\n  /** A list of application security groups. */\n  value?: ApplicationSecurityGroup[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An array of available delegations. */\nexport interface AvailableDelegationsResult {\n  /** An array of available delegations. */\n  value?: AvailableDelegation[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The serviceName of an AvailableDelegation indicates a possible delegation for a subnet. */\nexport interface AvailableDelegation {\n  /** The name of the AvailableDelegation resource. */\n  name?: string;\n  /** A unique identifier of the AvailableDelegation resource. */\n  id?: string;\n  /** Resource type. */\n  type?: string;\n  /** The name of the service and resource. */\n  serviceName?: string;\n  /** The actions permitted to the service upon delegation. */\n  actions?: string[];\n}\n\n/** An array of available service aliases. */\nexport interface AvailableServiceAliasesResult {\n  /** An array of available service aliases. */\n  value?: AvailableServiceAlias[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The available service alias. */\nexport interface AvailableServiceAlias {\n  /** The name of the service alias. */\n  name?: string;\n  /** The ID of the service alias. */\n  id?: string;\n  /** The type of the resource. */\n  type?: string;\n  /** The resource name of the service alias. */\n  resourceName?: string;\n}\n\n/** Properties of the AzureFirewallRCAction. */\nexport interface AzureFirewallRCAction {\n  /** The type of action. */\n  type?: AzureFirewallRCActionType;\n}\n\n/** Properties of an application rule. */\nexport interface AzureFirewallApplicationRule {\n  /** Name of the application rule. */\n  name?: string;\n  /** Description of the rule. */\n  description?: string;\n  /** List of source IP addresses for this rule. */\n  sourceAddresses?: string[];\n  /** Array of ApplicationRuleProtocols. */\n  protocols?: AzureFirewallApplicationRuleProtocol[];\n  /** List of FQDNs for this rule. */\n  targetFqdns?: string[];\n  /** List of FQDN Tags for this rule. */\n  fqdnTags?: string[];\n  /** List of source IpGroups for this rule. */\n  sourceIpGroups?: string[];\n}\n\n/** Properties of the application rule protocol. */\nexport interface AzureFirewallApplicationRuleProtocol {\n  /** Protocol type. */\n  protocolType?: AzureFirewallApplicationRuleProtocolType;\n  /** Port number for the protocol, cannot be greater than 64000. This field is optional. */\n  port?: number;\n}\n\n/** AzureFirewall NAT Rule Collection Action. */\nexport interface AzureFirewallNatRCAction {\n  /** The type of action. */\n  type?: AzureFirewallNatRCActionType;\n}\n\n/** Properties of a NAT rule. */\nexport interface AzureFirewallNatRule {\n  /** Name of the NAT rule. */\n  name?: string;\n  /** Description of the rule. */\n  description?: string;\n  /** List of source IP addresses for this rule. */\n  sourceAddresses?: string[];\n  /** List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags. */\n  destinationAddresses?: string[];\n  /** List of destination ports. */\n  destinationPorts?: string[];\n  /** Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule. */\n  protocols?: AzureFirewallNetworkRuleProtocol[];\n  /** The translated address for this NAT rule. */\n  translatedAddress?: string;\n  /** The translated port for this NAT rule. */\n  translatedPort?: string;\n  /** The translated FQDN for this NAT rule. */\n  translatedFqdn?: string;\n  /** List of source IpGroups for this rule. */\n  sourceIpGroups?: string[];\n}\n\n/** Properties of the network rule. */\nexport interface AzureFirewallNetworkRule {\n  /** Name of the network rule. */\n  name?: string;\n  /** Description of the rule. */\n  description?: string;\n  /** Array of AzureFirewallNetworkRuleProtocols. */\n  protocols?: AzureFirewallNetworkRuleProtocol[];\n  /** List of source IP addresses for this rule. */\n  sourceAddresses?: string[];\n  /** List of destination IP addresses. */\n  destinationAddresses?: string[];\n  /** List of destination ports. */\n  destinationPorts?: string[];\n  /** List of destination FQDNs. */\n  destinationFqdns?: string[];\n  /** List of source IpGroups for this rule. */\n  sourceIpGroups?: string[];\n  /** List of destination IpGroups for this rule. */\n  destinationIpGroups?: string[];\n}\n\n/** IP addresses associated with azure firewall. */\nexport interface HubIPAddresses {\n  /** Public IP addresses associated with azure firewall. */\n  publicIPs?: HubPublicIPAddresses;\n  /** Private IP Address associated with azure firewall. */\n  privateIPAddress?: string;\n}\n\n/** Public IP addresses associated with azure firewall. */\nexport interface HubPublicIPAddresses {\n  /** The list of Public IP addresses associated with azure firewall or IP addresses to be retained. */\n  addresses?: AzureFirewallPublicIPAddress[];\n  /** The number of Public IP addresses associated with azure firewall. */\n  count?: number;\n}\n\n/** Public IP Address associated with azure firewall. */\nexport interface AzureFirewallPublicIPAddress {\n  /** Public IP Address value. */\n  address?: string;\n}\n\n/** IpGroups associated with azure firewall. */\nexport interface AzureFirewallIpGroups {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The iteration number.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changeNumber?: string;\n}\n\n/** SKU of an Azure Firewall. */\nexport interface AzureFirewallSku {\n  /** Name of an Azure Firewall SKU. */\n  name?: AzureFirewallSkuName;\n  /** Tier of an Azure Firewall. */\n  tier?: AzureFirewallSkuTier;\n}\n\n/** Azure Firewall Autoscale Configuration parameters. */\nexport interface AzureFirewallAutoscaleConfiguration {\n  /** The minimum number of capacity units for this azure firewall. Use null to reset the value to the service default. */\n  minCapacity?: number;\n  /** The maximum number of capacity units for this azure firewall. Use null to reset the value to the service default. */\n  maxCapacity?: number;\n}\n\n/** Response for ListAzureFirewalls API service call. */\nexport interface AzureFirewallListResult {\n  /** List of Azure Firewalls in a resource group. */\n  value?: AzureFirewall[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** List of SNAT IP Prefixes learnt by firewall to not SNAT */\nexport interface IPPrefixesList {\n  /** IP Prefix value. */\n  ipPrefixes?: string[];\n}\n\n/** Azure Firewall Packet Capture Parameters. */\nexport interface FirewallPacketCaptureParameters {\n  /** Duration of packet capture in seconds. */\n  durationInSeconds?: number;\n  /** Number of packets to be captured. */\n  numberOfPacketsToCapture?: number;\n  /** Upload capture location */\n  sasUrl?: string;\n  /** Name of file to be uploaded to sasURL */\n  fileName?: string;\n  /** The protocol of packets to capture */\n  protocol?: AzureFirewallNetworkRuleProtocol;\n  /** The tcp-flag type to be captured. Used with protocol TCP */\n  flags?: AzureFirewallPacketCaptureFlags[];\n  /** Rules to filter packet captures. */\n  filters?: AzureFirewallPacketCaptureRule[];\n}\n\n/** Properties of the AzureFirewallRCAction. */\nexport interface AzureFirewallPacketCaptureFlags {\n  /** Flags to capture */\n  type?: AzureFirewallPacketCaptureFlagsType;\n}\n\n/** Group of src/dest ips and ports to be captured. */\nexport interface AzureFirewallPacketCaptureRule {\n  /** List of source IP addresses/subnets to be captured. */\n  sources?: string[];\n  /** List of destination IP addresses/subnets to be captured. */\n  destinations?: string[];\n  /** List of ports to be captured. */\n  destinationPorts?: string[];\n}\n\n/** Response for ListAzureFirewallFqdnTags API service call. */\nexport interface AzureFirewallFqdnTagListResult {\n  /** List of Azure Firewall FQDN Tags in a resource group. */\n  value?: AzureFirewallFqdnTag[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Azure Web Category Resource. */\nexport interface AzureWebCategory {\n  /** Resource ID. */\n  id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The name of the group that the category belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly group?: string;\n}\n\n/** Response for ListAzureWebCategories API service call. */\nexport interface AzureWebCategoryListResult {\n  /** List of Azure Web Categories for a given Subscription. */\n  value?: AzureWebCategory[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\nexport interface BastionHostPropertiesFormatNetworkAcls {\n  /** Sets the IP ACL rules for Developer Bastion Host. */\n  ipRules?: IPRule[];\n}\n\nexport interface IPRule {\n  /** Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed. */\n  addressPrefix?: string;\n}\n\n/** The sku of this Bastion Host. */\nexport interface Sku {\n  /** The name of the sku of this Bastion Host. */\n  name?: BastionHostSkuName;\n}\n\n/** Response for ListBastionHosts API service call. */\nexport interface BastionHostListResult {\n  /** List of Bastion Hosts in a resource group. */\n  value?: BastionHost[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Post request for Create/Delete/Get Bastion Shareable Link endpoints. */\nexport interface BastionShareableLinkListRequest {\n  /** List of VM references. */\n  vms?: BastionShareableLink[];\n}\n\n/** Bastion Shareable Link. */\nexport interface BastionShareableLink {\n  /** Reference of the virtual machine resource. */\n  vm: Vm;\n  /**\n   * The unique Bastion Shareable Link to the virtual machine.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly bsl?: string;\n  /**\n   * The time when the link was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdAt?: string;\n  /**\n   * Optional field indicating the warning or error message related to the vm in case of partial failure.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Response for all the Bastion Shareable Link endpoints. */\nexport interface BastionShareableLinkListResult {\n  /** List of Bastion Shareable Links for the request. */\n  value?: BastionShareableLink[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Post request for Delete Bastion Shareable Link By Token endpoint. */\nexport interface BastionShareableLinkTokenListRequest {\n  /** List of Bastion Shareable Link Token. */\n  tokens?: string[];\n}\n\n/** Response for GetActiveSessions. */\nexport interface BastionActiveSessionListResult {\n  /** List of active sessions on the bastion. */\n  value?: BastionActiveSession[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** The session detail for a target. */\nexport interface BastionActiveSession {\n  /**\n   * A unique id for the session.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sessionId?: string;\n  /**\n   * The time when the session started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Record<string, unknown>;\n  /**\n   * The subscription id for the target virtual machine.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetSubscriptionId?: string;\n  /**\n   * The type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The host name of the target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetHostName?: string;\n  /**\n   * The resource group of the target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResourceGroup?: string;\n  /**\n   * The user name who is active on this session.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userName?: string;\n  /**\n   * The IP Address of the target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetIpAddress?: string;\n  /**\n   * The protocol used to connect to the target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly protocol?: BastionConnectProtocol;\n  /**\n   * The resource id of the target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResourceId?: string;\n  /**\n   * Duration in mins the session has been active.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sessionDurationInMins?: number;\n}\n\n/** List of session IDs. */\nexport interface SessionIds {\n  /** List of session IDs. */\n  sessionIds?: string[];\n}\n\n/** Response for DisconnectActiveSessions. */\nexport interface BastionSessionDeleteResult {\n  /** List of sessions with their corresponding state. */\n  value?: BastionSessionState[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** The session state detail for a target. */\nexport interface BastionSessionState {\n  /**\n   * A unique id for the session.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sessionId?: string;\n  /**\n   * Used for extra information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The state of the session. Disconnected/Failed/NotFound.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n}\n\n/** Response for the CheckDnsNameAvailability API service call. */\nexport interface DnsNameAvailabilityResult {\n  /** Domain availability (True/False). */\n  available?: boolean;\n}\n\n/** Response for the ListNetworkInterface API service call. */\nexport interface NetworkInterfaceListResult {\n  /** A list of network interfaces in a resource group. */\n  value?: NetworkInterface[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListPublicIpAddresses API service call. */\nexport interface PublicIPAddressListResult {\n  /** A list of public IP addresses that exists in a resource group. */\n  value?: PublicIPAddress[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** SwapResource to represent slot type on the specified cloud service. */\nexport interface SwapResource {\n  /**\n   * Resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Swap resource properties */\n  properties?: SwapResourceProperties;\n}\n\n/** Swap resource properties */\nexport interface SwapResourceProperties {\n  /** Specifies slot info on a cloud service */\n  slotType?: SlotType;\n}\n\n/** SwapResource List with single entry to represent slot type on the specified cloud service. */\nexport interface SwapResourceListResult {\n  value?: SwapResource[];\n}\n\n/** Response for ListCustomIpPrefixes API service call. */\nexport interface CustomIpPrefixListResult {\n  /** A list of Custom IP prefixes that exists in a resource group. */\n  value?: CustomIpPrefix[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** A DDoS protection plan in a resource group. */\nexport interface DdosProtectionPlan {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location. */\n  location?: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the DDoS protection plan resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The list of public IPs associated with the DDoS protection plan resource. This list is read-only.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIPAddresses?: SubResource[];\n  /**\n   * The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualNetworks?: SubResource[];\n}\n\n/** A list of DDoS protection plans. */\nexport interface DdosProtectionPlanListResult {\n  /** A list of DDoS protection plans. */\n  value?: DdosProtectionPlan[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Qos Traffic Profiler IP Range properties. */\nexport interface QosIpRange {\n  /** Start IP Address. */\n  startIP?: string;\n  /** End IP Address. */\n  endIP?: string;\n}\n\n/** Qos Traffic Profiler Port range properties. */\nexport interface QosPortRange {\n  /** Qos Port Range start. */\n  start?: number;\n  /** Qos Port Range end. */\n  end?: number;\n}\n\n/** Quality of Service defines the traffic configuration between endpoints. Mandatory to have one marking. */\nexport interface QosDefinition {\n  /** List of markings to be used in the configuration. */\n  markings?: number[];\n  /** Source IP ranges. */\n  sourceIpRanges?: QosIpRange[];\n  /** Destination IP ranges. */\n  destinationIpRanges?: QosIpRange[];\n  /** Sources port ranges. */\n  sourcePortRanges?: QosPortRange[];\n  /** Destination port ranges. */\n  destinationPortRanges?: QosPortRange[];\n  /** RNM supported protocol types. */\n  protocol?: ProtocolType;\n}\n\n/** Response for the DscpConfigurationList API service call. */\nexport interface DscpConfigurationListResult {\n  /** A list of dscp configurations in a resource group. */\n  value?: DscpConfiguration[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for the ListAvailableEndpointServices API service call. */\nexport interface EndpointServicesListResult {\n  /** List of available endpoint services in a region. */\n  value?: EndpointServiceResult[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListAuthorizations API service call retrieves all authorizations that belongs to an ExpressRouteCircuit. */\nexport interface AuthorizationListResult {\n  /** The authorizations in an ExpressRoute Circuit. */\n  value?: ExpressRouteCircuitAuthorization[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Specifies the peering configuration. */\nexport interface ExpressRouteCircuitPeeringConfig {\n  /** The reference to AdvertisedPublicPrefixes. */\n  advertisedPublicPrefixes?: string[];\n  /** The communities of bgp peering. Specified for microsoft peering. */\n  advertisedCommunities?: string[];\n  /**\n   * The advertised public prefix state of the Peering resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly advertisedPublicPrefixesState?: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState;\n  /** The legacy mode of the peering. */\n  legacyMode?: number;\n  /** The CustomerASN of the peering. */\n  customerASN?: number;\n  /** The RoutingRegistryName of the configuration. */\n  routingRegistryName?: string;\n}\n\n/** Contains stats associated with the peering. */\nexport interface ExpressRouteCircuitStats {\n  /** The Primary BytesIn of the peering. */\n  primarybytesIn?: number;\n  /** The primary BytesOut of the peering. */\n  primarybytesOut?: number;\n  /** The secondary BytesIn of the peering. */\n  secondarybytesIn?: number;\n  /** The secondary BytesOut of the peering. */\n  secondarybytesOut?: number;\n}\n\n/** Contains IPv6 peering config. */\nexport interface Ipv6ExpressRouteCircuitPeeringConfig {\n  /** The primary address prefix. */\n  primaryPeerAddressPrefix?: string;\n  /** The secondary address prefix. */\n  secondaryPeerAddressPrefix?: string;\n  /** The Microsoft peering configuration. */\n  microsoftPeeringConfig?: ExpressRouteCircuitPeeringConfig;\n  /** The reference to the RouteFilter resource. */\n  routeFilter?: SubResource;\n  /** The state of peering. */\n  state?: ExpressRouteCircuitPeeringState;\n}\n\n/** The ID of the ExpressRouteConnection. */\nexport interface ExpressRouteConnectionId {\n  /**\n   * The ID of the ExpressRouteConnection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** IPv6 Circuit Connection properties for global reach. */\nexport interface Ipv6CircuitConnectionConfig {\n  /** /125 IP address space to carve out customer addresses for global reach. */\n  addressPrefix?: string;\n  /**\n   * Express Route Circuit connection state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly circuitConnectionStatus?: CircuitConnectionStatus;\n}\n\n/** Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCircuit. */\nexport interface ExpressRouteCircuitPeeringListResult {\n  /** The peerings in an express route circuit. */\n  value?: ExpressRouteCircuitPeering[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListConnections API service call retrieves all global reach connections that belongs to a Private Peering for an ExpressRouteCircuit. */\nexport interface ExpressRouteCircuitConnectionListResult {\n  /** The global reach connection associated with Private Peering in an ExpressRoute Circuit. */\n  value?: ExpressRouteCircuitConnection[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListPeeredConnections API service call retrieves all global reach peer circuit connections that belongs to a Private Peering for an ExpressRouteCircuit. */\nexport interface PeerExpressRouteCircuitConnectionListResult {\n  /** The global reach peer circuit connection associated with Private Peering in an ExpressRoute Circuit. */\n  value?: PeerExpressRouteCircuitConnection[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Contains SKU in an ExpressRouteCircuit. */\nexport interface ExpressRouteCircuitSku {\n  /** The name of the SKU. */\n  name?: string;\n  /** The tier of the SKU. */\n  tier?: ExpressRouteCircuitSkuTier;\n  /** The family of the SKU. */\n  family?: ExpressRouteCircuitSkuFamily;\n}\n\n/** Contains ServiceProviderProperties in an ExpressRouteCircuit. */\nexport interface ExpressRouteCircuitServiceProviderProperties {\n  /** The serviceProviderName. */\n  serviceProviderName?: string;\n  /** The peering location. */\n  peeringLocation?: string;\n  /** The BandwidthInMbps. */\n  bandwidthInMbps?: number;\n}\n\n/** Response for ListArpTable associated with the Express Route Circuits API. */\nexport interface ExpressRouteCircuitsArpTableListResult {\n  /** A list of the ARP tables. */\n  value?: ExpressRouteCircuitArpTable[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** The ARP table associated with the ExpressRouteCircuit. */\nexport interface ExpressRouteCircuitArpTable {\n  /** Entry age in minutes. */\n  age?: number;\n  /** Interface address. */\n  interface?: string;\n  /** The IP address. */\n  ipAddress?: string;\n  /** The MAC address. */\n  macAddress?: string;\n}\n\n/** Response for ListRoutesTable associated with the Express Route Circuits API. */\nexport interface ExpressRouteCircuitsRoutesTableListResult {\n  /** The list of routes table. */\n  value?: ExpressRouteCircuitRoutesTable[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** The routes table associated with the ExpressRouteCircuit. */\nexport interface ExpressRouteCircuitRoutesTable {\n  /** IP address of a network entity. */\n  network?: string;\n  /** NextHop address. */\n  nextHop?: string;\n  /** Local preference value as set with the set local-preference route-map configuration command. */\n  locPrf?: string;\n  /** Route Weight. */\n  weight?: number;\n  /** Autonomous system paths to the destination network. */\n  path?: string;\n}\n\n/** Response for ListRoutesTable associated with the Express Route Circuits API. */\nexport interface ExpressRouteCircuitsRoutesTableSummaryListResult {\n  /** A list of the routes table. */\n  value?: ExpressRouteCircuitRoutesTableSummary[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** The routes table associated with the ExpressRouteCircuit. */\nexport interface ExpressRouteCircuitRoutesTableSummary {\n  /** IP address of the neighbor. */\n  neighbor?: string;\n  /** BGP version number spoken to the neighbor. */\n  v?: number;\n  /** Autonomous system number. */\n  as?: number;\n  /** The length of time that the BGP session has been in the Established state, or the current status if not in the Established state. */\n  upDown?: string;\n  /** Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group. */\n  statePfxRcd?: string;\n}\n\n/** Response for ListExpressRouteCircuit API service call. */\nexport interface ExpressRouteCircuitListResult {\n  /** A list of ExpressRouteCircuits in a resource group. */\n  value?: ExpressRouteCircuit[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for the ListExpressRouteServiceProvider API service call. */\nexport interface ExpressRouteServiceProviderListResult {\n  /** A list of ExpressRouteResourceProvider resources. */\n  value?: ExpressRouteServiceProvider[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Contains bandwidths offered in ExpressRouteServiceProvider resources. */\nexport interface ExpressRouteServiceProviderBandwidthsOffered {\n  /** The OfferName. */\n  offerName?: string;\n  /** The ValueInMbps. */\n  valueInMbps?: number;\n}\n\n/** Response for ListExpressRouteCrossConnection API service call. */\nexport interface ExpressRouteCrossConnectionListResult {\n  /** A list of ExpressRouteCrossConnection resources. */\n  value?: ExpressRouteCrossConnection[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Reference to an express route circuit. */\nexport interface ExpressRouteCircuitReference {\n  /** Corresponding Express Route Circuit Id. */\n  id?: string;\n}\n\n/** Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCrossConnection. */\nexport interface ExpressRouteCrossConnectionPeeringList {\n  /** The peerings in an express route cross connection. */\n  value?: ExpressRouteCrossConnectionPeering[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListRoutesTable associated with the Express Route Cross Connections. */\nexport interface ExpressRouteCrossConnectionsRoutesTableSummaryListResult {\n  /** A list of the routes table. */\n  value?: ExpressRouteCrossConnectionRoutesTableSummary[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The routes table associated with the ExpressRouteCircuit. */\nexport interface ExpressRouteCrossConnectionRoutesTableSummary {\n  /** IP address of Neighbor router. */\n  neighbor?: string;\n  /** Autonomous system number. */\n  asn?: number;\n  /** The length of time that the BGP session has been in the Established state, or the current status if not in the Established state. */\n  upDown?: string;\n  /** Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group. */\n  stateOrPrefixesReceived?: string;\n}\n\n/** Response for ListExpressRoutePortsLocations API service call. */\nexport interface ExpressRoutePortsLocationListResult {\n  /** The list of all ExpressRoutePort peering locations. */\n  value?: ExpressRoutePortsLocation[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Real-time inventory of available ExpressRoute port bandwidths. */\nexport interface ExpressRoutePortsLocationBandwidths {\n  /**\n   * Bandwidth descriptive name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly offerName?: string;\n  /**\n   * Bandwidth value in Gbps.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly valueInGbps?: number;\n}\n\n/** ExpressRouteLink Mac Security Configuration. */\nexport interface ExpressRouteLinkMacSecConfig {\n  /** Keyvault Secret Identifier URL containing Mac security CKN key. */\n  cknSecretIdentifier?: string;\n  /** Keyvault Secret Identifier URL containing Mac security CAK key. */\n  cakSecretIdentifier?: string;\n  /** Mac security cipher. */\n  cipher?: ExpressRouteLinkMacSecCipher;\n  /** Sci mode enabled/disabled. */\n  sciState?: ExpressRouteLinkMacSecSciState;\n}\n\n/** Response for ListExpressRoutePorts API service call. */\nexport interface ExpressRoutePortListResult {\n  /** A list of ExpressRoutePort resources. */\n  value?: ExpressRoutePort[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListExpressRouteLinks API service call. */\nexport interface ExpressRouteLinkListResult {\n  /** The list of ExpressRouteLink sub-resources. */\n  value?: ExpressRouteLink[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** The customer name to be printed on a letter of authorization. */\nexport interface GenerateExpressRoutePortsLOARequest {\n  /** The customer name. */\n  customerName: string;\n}\n\n/** Response for GenerateExpressRoutePortsLOA API service call. */\nexport interface GenerateExpressRoutePortsLOAResult {\n  /** The content as a base64 encoded string. */\n  encodedContent?: string;\n}\n\n/** Response for ListExpressRoutePortAuthorizations API service call. */\nexport interface ExpressRoutePortAuthorizationListResult {\n  /** The authorizations in an ExpressRoute Port. */\n  value?: ExpressRoutePortAuthorization[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListExpressRouteProviderPort API service call. */\nexport interface ExpressRouteProviderPortListResult {\n  /** A list of ExpressRouteProviderPort resources. */\n  value?: ExpressRouteProviderPort[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** ThreatIntel Whitelist for Firewall Policy. */\nexport interface FirewallPolicyThreatIntelWhitelist {\n  /** List of IP addresses for the ThreatIntel Whitelist. */\n  ipAddresses?: string[];\n  /** List of FQDNs for the ThreatIntel Whitelist. */\n  fqdns?: string[];\n}\n\n/** Firewall Policy Insights. */\nexport interface FirewallPolicyInsights {\n  /** A flag to indicate if the insights are enabled on the policy. */\n  isEnabled?: boolean;\n  /** Number of days the insights should be enabled on the policy. */\n  retentionDays?: number;\n  /** Workspaces needed to configure the Firewall Policy Insights. */\n  logAnalyticsResources?: FirewallPolicyLogAnalyticsResources;\n}\n\n/** Log Analytics Resources for Firewall Policy Insights. */\nexport interface FirewallPolicyLogAnalyticsResources {\n  /** List of workspaces for Firewall Policy Insights. */\n  workspaces?: FirewallPolicyLogAnalyticsWorkspace[];\n  /** The default workspace Id for Firewall Policy Insights. */\n  defaultWorkspaceId?: SubResource;\n}\n\n/** Log Analytics Workspace for Firewall Policy Insights. */\nexport interface FirewallPolicyLogAnalyticsWorkspace {\n  /** Region to configure the Workspace. */\n  region?: string;\n  /** The workspace Id for Firewall Policy Insights. */\n  workspaceId?: SubResource;\n}\n\n/** The private IP addresses/IP ranges to which traffic will not be SNAT. */\nexport interface FirewallPolicySnat {\n  /** List of private IP addresses/IP address ranges to not be SNAT. */\n  privateRanges?: string[];\n  /** The operation mode for automatically learning private ranges to not be SNAT */\n  autoLearnPrivateRanges?: AutoLearnPrivateRangesMode;\n}\n\n/** SQL Settings in Firewall Policy. */\nexport interface FirewallPolicySQL {\n  /** A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999. */\n  allowSqlRedirect?: boolean;\n}\n\n/** DNS Proxy Settings in Firewall Policy. */\nexport interface DnsSettings {\n  /** List of Custom DNS Servers. */\n  servers?: string[];\n  /** Enable DNS Proxy on Firewalls attached to the Firewall Policy. */\n  enableProxy?: boolean;\n  /** FQDNs in Network Rules are supported when set to true. */\n  requireProxyForNetworkRules?: boolean;\n}\n\n/** Explicit Proxy Settings in Firewall Policy. */\nexport interface ExplicitProxy {\n  /** When set to true, explicit proxy mode is enabled. */\n  enableExplicitProxy?: boolean;\n  /** Port number for explicit proxy http protocol, cannot be greater than 64000. */\n  httpPort?: number;\n  /** Port number for explicit proxy https protocol, cannot be greater than 64000. */\n  httpsPort?: number;\n  /** When set to true, pac file port and url needs to be provided. */\n  enablePacFile?: boolean;\n  /** Port number for firewall to serve PAC file. */\n  pacFilePort?: number;\n  /** SAS URL for PAC file. */\n  pacFile?: string;\n}\n\n/** Configuration for intrusion detection mode and rules. */\nexport interface FirewallPolicyIntrusionDetection {\n  /** Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two. */\n  mode?: FirewallPolicyIntrusionDetectionStateType;\n  /** IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy. */\n  profile?: FirewallPolicyIntrusionDetectionProfileType;\n  /** Intrusion detection configuration properties. */\n  configuration?: FirewallPolicyIntrusionDetectionConfiguration;\n}\n\n/** The operation for configuring intrusion detection. */\nexport interface FirewallPolicyIntrusionDetectionConfiguration {\n  /** List of specific signatures states. */\n  signatureOverrides?: FirewallPolicyIntrusionDetectionSignatureSpecification[];\n  /** List of rules for traffic to bypass. */\n  bypassTrafficSettings?: FirewallPolicyIntrusionDetectionBypassTrafficSpecifications[];\n  /** IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property */\n  privateRanges?: string[];\n}\n\n/** Intrusion detection signatures specification states. */\nexport interface FirewallPolicyIntrusionDetectionSignatureSpecification {\n  /** Signature id. */\n  id?: string;\n  /** The signature state. */\n  mode?: FirewallPolicyIntrusionDetectionStateType;\n}\n\n/** Intrusion detection bypass traffic specification. */\nexport interface FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {\n  /** Name of the bypass traffic rule. */\n  name?: string;\n  /** Description of the bypass traffic rule. */\n  description?: string;\n  /** The rule bypass protocol. */\n  protocol?: FirewallPolicyIntrusionDetectionProtocol;\n  /** List of source IP addresses or ranges for this rule. */\n  sourceAddresses?: string[];\n  /** List of destination IP addresses or ranges for this rule. */\n  destinationAddresses?: string[];\n  /** List of destination ports or ranges. */\n  destinationPorts?: string[];\n  /** List of source IpGroups for this rule. */\n  sourceIpGroups?: string[];\n  /** List of destination IpGroups for this rule. */\n  destinationIpGroups?: string[];\n}\n\n/** Configuration needed to perform TLS termination & initiation. */\nexport interface FirewallPolicyTransportSecurity {\n  /** The CA used for intermediate CA generation. */\n  certificateAuthority?: FirewallPolicyCertificateAuthority;\n}\n\n/** Trusted Root certificates properties for tls. */\nexport interface FirewallPolicyCertificateAuthority {\n  /** Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault. */\n  keyVaultSecretId?: string;\n  /** Name of the CA certificate. */\n  name?: string;\n}\n\n/** SKU of Firewall policy. */\nexport interface FirewallPolicySku {\n  /** Tier of Firewall Policy. */\n  tier?: FirewallPolicySkuTier;\n}\n\n/** Response for ListFirewallPolicies API service call. */\nexport interface FirewallPolicyListResult {\n  /** List of Firewall Policies in a resource group. */\n  value?: FirewallPolicy[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Properties of the rule collection. */\nexport interface FirewallPolicyRuleCollection {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleCollectionType:\n    | \"FirewallPolicyNatRuleCollection\"\n    | \"FirewallPolicyFilterRuleCollection\";\n  /** The name of the rule collection. */\n  name?: string;\n  /** Priority of the Firewall Policy Rule Collection resource. */\n  priority?: number;\n}\n\n/** Response for ListFirewallPolicyRuleCollectionGroups API service call. */\nexport interface FirewallPolicyRuleCollectionGroupListResult {\n  /** List of FirewallPolicyRuleCollectionGroups in a FirewallPolicy. */\n  value?: FirewallPolicyRuleCollectionGroup[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Will describe the query to run against the IDPS signatures DB */\nexport interface IdpsQueryObject {\n  /** Contain all filters names and values */\n  filters?: FilterItems[];\n  /** Search term in all columns */\n  search?: string;\n  /** Column to sort response by */\n  orderBy?: OrderBy;\n  /** The number of the results to return in each page */\n  resultsPerPage?: number;\n  /** The number of records matching the filter to skip */\n  skip?: number;\n}\n\n/** Will contain the filter name and values to operate on */\nexport interface FilterItems {\n  /** The name of the field we would like to filter */\n  field?: string;\n  /** List of values to filter the current field by */\n  values?: string[];\n}\n\n/** Describes a column to sort */\nexport interface OrderBy {\n  /** Describes the actual column name to sort by */\n  field?: string;\n  /** Describes if results should be in ascending/descending order */\n  order?: FirewallPolicyIdpsQuerySortOrder;\n}\n\n/** Query result */\nexport interface QueryResults {\n  /** Number of total records matching the query. */\n  matchingRecordsCount?: number;\n  /** Array containing the results of the query */\n  signatures?: SingleQueryResult[];\n}\n\nexport interface SingleQueryResult {\n  /** The ID of the signature */\n  signatureId?: number;\n  /** The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny */\n  mode?: FirewallPolicyIdpsSignatureMode;\n  /** Describes the severity of signature: 1 - High, 2 - Medium, 3 - Low */\n  severity?: FirewallPolicyIdpsSignatureSeverity;\n  /** Describes in which direction signature is being enforced: 0 - OutBound, 1 - InBound, 2 - Any, 3 - Internal, 4 - InternalOutbound, 5 - InternalInbound */\n  direction?: FirewallPolicyIdpsSignatureDirection;\n  /** Describes the groups the signature belongs to */\n  group?: string;\n  /** Describes what is the signature enforces */\n  description?: string;\n  /** Describes the protocol the signatures is being enforced in */\n  protocol?: string;\n  /** Describes the list of source ports related to this signature */\n  sourcePorts?: string[];\n  /** Describes the list of destination ports related to this signature */\n  destinationPorts?: string[];\n  /** Describes the last updated time of the signature (provided from 3rd party vendor) */\n  lastUpdated?: string;\n  /** Describes if this override is inherited from base policy or not */\n  inheritedFromParentPolicy?: boolean;\n}\n\n/** Contains all specific policy signatures overrides for the IDPS */\nexport interface SignaturesOverrides {\n  /** Contains the name of the resource (default) */\n  name?: string;\n  /** Will contain the resource id of the signature override resource */\n  id?: string;\n  /** Will contain the type of the resource: Microsoft.Network/firewallPolicies/intrusionDetectionSignaturesOverrides */\n  type?: string;\n  /** Will contain the properties of the resource (the actual signature overrides) */\n  properties?: SignaturesOverridesProperties;\n}\n\n/** Will contain the properties of the resource (the actual signature overrides) */\nexport interface SignaturesOverridesProperties {\n  /** Dictionary of <string> */\n  signatures?: { [propertyName: string]: string };\n}\n\n/** Describes the filter values possibles for a given column */\nexport interface SignatureOverridesFilterValuesQuery {\n  /** Describes the name of the column which values will be returned */\n  filterName?: string;\n}\n\n/** Describes the list of all possible values for a specific filter value */\nexport interface SignatureOverridesFilterValuesResponse {\n  /** Describes the possible values */\n  filterValues?: string[];\n}\n\n/** Describes an object containing an array with a single item */\nexport interface SignaturesOverridesList {\n  /** Describes a list consisting exactly one item describing the policy's signature override status */\n  value?: SignaturesOverrides[];\n}\n\n/** List of IpamPool */\nexport interface IpamPoolList {\n  value?: IpamPool[];\n  /** The link used to get the next page of operations. */\n  nextLink?: string;\n}\n\n/** Properties of IpamPool resource properties which are specific to the Pool resource. */\nexport interface IpamPoolProperties {\n  description?: string;\n  /** String representing a friendly name for the resource. */\n  displayName?: string;\n  /**\n   * List of IP address type for the IpamPool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipAddressType?: IpType[];\n  /** String representing parent IpamPool resource name. If empty the IpamPool will be a root pool. */\n  parentPoolName?: string;\n  /** List of IP address prefixes of the resource. */\n  addressPrefixes: string[];\n  /** Provisioning states of a resource. */\n  provisioningState?: ProvisioningState;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface CommonResource {\n  /**\n   * Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The type of identity that last modified the resource. */\n  lastModifiedAt?: Date;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface CommonErrorResponse {\n  /** The error object. */\n  error?: CommonErrorDetail;\n}\n\n/** The error detail. */\nexport interface CommonErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: CommonErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: CommonErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface CommonErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** Represents the IpamPool update API request interface. */\nexport interface IpamPoolUpdate {\n  /** Dictionary of <string> */\n  tags?: { [propertyName: string]: string };\n  /** Represents the IpamPool update properties. */\n  properties?: IpamPoolUpdateProperties;\n}\n\n/** Represents the IpamPool update properties. */\nexport interface IpamPoolUpdateProperties {\n  description?: string;\n  /** String representing a friendly name for the resource. */\n  displayName?: string;\n}\n\n/** IpamPool usage information. */\nexport interface PoolUsage {\n  /**\n   * List of IP address prefixes of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly addressPrefixes?: string[];\n  /**\n   * List of IpamPool that are children of this IpamPool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly childPools?: ResourceBasics[];\n  /**\n   * List of assigned IP address prefixes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly allocatedAddressPrefixes?: string[];\n  /**\n   * List of reserved IP address prefixes. These IP addresses could be reclaimed if not assigned in the given time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservedAddressPrefixes?: string[];\n  /**\n   * List of available IP address prefixes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly availableAddressPrefixes?: string[];\n  /**\n   * Total number of IP addresses managed in the IpamPool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalNumberOfIPAddresses?: string;\n  /**\n   * Total number of assigned IP addresses in the IpamPool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfAllocatedIPAddresses?: string;\n  /**\n   * Total number of reserved IP addresses in the IpamPool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfReservedIPAddresses?: string;\n  /**\n   * Total number of available IP addresses in the IpamPool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfAvailableIPAddresses?: string;\n}\n\n/** Representation of basic resource information. */\nexport interface ResourceBasics {\n  /** ResourceId of the Azure resource. */\n  resourceId?: string;\n  /** List of IP address prefixes of the resource. */\n  addressPrefixes?: string[];\n}\n\n/** List of PoolAssociation */\nexport interface PoolAssociationList {\n  value?: PoolAssociation[];\n  /** The link used to get the next page of operations. */\n  nextLink?: string;\n}\n\n/** IpamPool association information. */\nexport interface PoolAssociation {\n  /** Resource id of the associated Azure resource. */\n  resourceId: string;\n  /** IpamPool id for which the resource is associated to. */\n  poolId?: string;\n  description?: string;\n  /**\n   * List of assigned IP address prefixes in the IpamPool of the associated resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly addressPrefixes?: string[];\n  /**\n   * List of reserved IP address prefixes in the IpamPool of the associated resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservedPrefixes?: string[];\n  /**\n   * Total number of assigned IP addresses of the association.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalNumberOfIPAddresses?: string;\n  /**\n   * Total number of reserved IP addresses of the association.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfReservedIPAddresses?: string;\n  /**\n   * Creation time of the association.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdAt?: Date;\n  /**\n   * Expire time for IP addresses reserved.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationExpiresAt?: Date;\n}\n\n/** List of StaticCidr */\nexport interface StaticCidrList {\n  value?: StaticCidr[];\n  /** The link used to get the next page of operations. */\n  nextLink?: string;\n}\n\n/** Properties of static CIDR resource. */\nexport interface StaticCidrProperties {\n  description?: string;\n  /** Number of IP addresses to allocate for a static CIDR resource. The IP addresses will be assigned based on IpamPools available space. */\n  numberOfIPAddressesToAllocate?: string;\n  /** List of IP address prefixes of the resource. */\n  addressPrefixes?: string[];\n  /**\n   * Total number of IP addresses allocated for the static CIDR resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalNumberOfIPAddresses?: string;\n  /** Provisioning states of a resource. */\n  provisioningState?: ProvisioningState;\n}\n\n/** Response for the ListIpAllocations API service call. */\nexport interface IpAllocationListResult {\n  /** A list of IpAllocation resources. */\n  value?: IpAllocation[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for the ListIpGroups API service call. */\nexport interface IpGroupListResult {\n  /** The list of IpGroups information resources. */\n  value?: IpGroup[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** SKU of a load balancer. */\nexport interface LoadBalancerSku {\n  /** Name of a load balancer SKU. */\n  name?: LoadBalancerSkuName;\n  /** Tier of a load balancer SKU. */\n  tier?: LoadBalancerSkuTier;\n}\n\n/** Response for ListLoadBalancers API service call. */\nexport interface LoadBalancerListResult {\n  /** A list of load balancers in a resource group. */\n  value?: LoadBalancer[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListBackendAddressPool API service call. */\nexport interface LoadBalancerBackendAddressPoolListResult {\n  /** A list of backend address pools in a load balancer. */\n  value?: BackendAddressPool[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListFrontendIPConfiguration API service call. */\nexport interface LoadBalancerFrontendIPConfigurationListResult {\n  /** A list of frontend IP configurations in a load balancer. */\n  value?: FrontendIPConfiguration[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListInboundNatRule API service call. */\nexport interface InboundNatRuleListResult {\n  /** A list of inbound NAT rules in a load balancer. */\n  value?: InboundNatRule[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListLoadBalancingRule API service call. */\nexport interface LoadBalancerLoadBalancingRuleListResult {\n  /** A list of load balancing rules in a load balancer. */\n  value?: LoadBalancingRule[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListOutboundRule API service call. */\nexport interface LoadBalancerOutboundRuleListResult {\n  /** A list of outbound rules in a load balancer. */\n  value?: OutboundRule[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListProbe API service call. */\nexport interface LoadBalancerProbeListResult {\n  /** A list of probes in a load balancer. */\n  value?: Probe[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The request for a VIP swap. */\nexport interface LoadBalancerVipSwapRequest {\n  /** A list of frontend IP configuration resources that should swap VIPs. */\n  frontendIPConfigurations?: LoadBalancerVipSwapRequestFrontendIPConfiguration[];\n}\n\n/** VIP swap request's frontend IP configuration object. */\nexport interface LoadBalancerVipSwapRequestFrontendIPConfiguration {\n  /** The ID of frontend IP configuration resource. */\n  id?: string;\n  /** A reference to public IP address resource. */\n  publicIPAddress?: SubResource;\n}\n\n/** The request for a QueryInboundNatRulePortMapping API. Either IpConfiguration or IpAddress should be set */\nexport interface QueryInboundNatRulePortMappingRequest {\n  /** NetworkInterfaceIPConfiguration set in load balancer backend address. */\n  ipConfiguration?: SubResource;\n  /** IP address set in load balancer backend address. */\n  ipAddress?: string;\n}\n\n/** The response for a QueryInboundNatRulePortMapping API. */\nexport interface BackendAddressInboundNatRulePortMappings {\n  /** Collection of inbound NAT rule port mappings. */\n  inboundNatRulePortMappings?: InboundNatRulePortMapping[];\n}\n\n/** Individual port mappings for inbound NAT rule created for backend pool. */\nexport interface InboundNatRulePortMapping {\n  /**\n   * Name of inbound NAT rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inboundNatRuleName?: string;\n  /**\n   * The reference to the transport protocol used by the inbound NAT rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly protocol?: TransportProtocol;\n  /**\n   * Frontend port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly frontendPort?: number;\n  /**\n   * Backend port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backendPort?: number;\n}\n\n/** The response for a Health API. */\nexport interface LoadBalancerHealthPerRule {\n  /** Number of backend instances associated to the LB rule that are considered healthy. */\n  up?: number;\n  /** Number of backend instances associated to the LB rule that are considered unhealthy. */\n  down?: number;\n  /** Information about the health per rule of the backend addresses. */\n  loadBalancerBackendAddresses?: LoadBalancerHealthPerRulePerBackendAddress[];\n}\n\n/** The information about health per rule per backend address. */\nexport interface LoadBalancerHealthPerRulePerBackendAddress {\n  /** The IP address belonging to the backend address. */\n  ipAddress?: string;\n  /** The id of the network interface ip configuration belonging to the backend address */\n  networkInterfaceIPConfigurationId?: NetworkInterfaceIPConfiguration;\n  /** The current health of the backend instances that is associated to the LB rule. */\n  state?: string;\n  /** The explanation of the State */\n  reason?: string;\n}\n\n/** The request for a migrateToIpBased API. */\nexport interface MigrateLoadBalancerToIpBasedRequest {\n  /** A list of pool names that should be migrated from Nic based to IP based pool */\n  pools?: string[];\n}\n\n/** The response for a migrateToIpBased API. */\nexport interface MigratedPools {\n  /** A list of pools migrated from Nic based to IP based pool */\n  migratedPools?: string[];\n}\n\n/** Response for ListNatGateways API service call. */\nexport interface NatGatewayListResult {\n  /** A list of Nat Gateways that exists in a resource group. */\n  value?: NatGateway[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for list effective route API service call. */\nexport interface EffectiveRouteListResult {\n  /** A list of effective routes. */\n  value?: EffectiveRoute[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Effective Route. */\nexport interface EffectiveRoute {\n  /** The name of the user defined route. This is optional. */\n  name?: string;\n  /** If true, on-premises routes are not propagated to the network interfaces in the subnet. */\n  disableBgpRoutePropagation?: boolean;\n  /** Who created the route. */\n  source?: EffectiveRouteSource;\n  /** The value of effective route. */\n  state?: EffectiveRouteState;\n  /** The address prefixes of the effective routes in CIDR notation. */\n  addressPrefix?: string[];\n  /** The IP address of the next hop of the effective route. */\n  nextHopIpAddress?: string[];\n  /** The type of Azure hop the packet should be sent to. */\n  nextHopType?: RouteNextHopType;\n}\n\n/** Response for list effective network security groups API service call. */\nexport interface EffectiveNetworkSecurityGroupListResult {\n  /** A list of effective network security groups. */\n  value?: EffectiveNetworkSecurityGroup[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Effective network security group. */\nexport interface EffectiveNetworkSecurityGroup {\n  /** The ID of network security group that is applied. */\n  networkSecurityGroup?: SubResource;\n  /** Associated resources. */\n  association?: EffectiveNetworkSecurityGroupAssociation;\n  /** A collection of effective security rules. */\n  effectiveSecurityRules?: EffectiveNetworkSecurityRule[];\n  /** Mapping of tags to list of IP Addresses included within the tag. */\n  tagMap?: string;\n}\n\n/** The effective network security group association. */\nexport interface EffectiveNetworkSecurityGroupAssociation {\n  /** The ID of the Azure network manager if assigned. */\n  networkManager?: SubResource;\n  /** The ID of the subnet if assigned. */\n  subnet?: SubResource;\n  /** The ID of the network interface if assigned. */\n  networkInterface?: SubResource;\n}\n\n/** Effective network security rules. */\nexport interface EffectiveNetworkSecurityRule {\n  /** The name of the security rule specified by the user (if created by the user). */\n  name?: string;\n  /** The network protocol this rule applies to. */\n  protocol?: EffectiveSecurityRuleProtocol;\n  /** The source port or range. */\n  sourcePortRange?: string;\n  /** The destination port or range. */\n  destinationPortRange?: string;\n  /** The source port ranges. Expected values include a single integer between 0 and 65535, a range using '-' as separator (e.g. 100-400), or an asterisk (*). */\n  sourcePortRanges?: string[];\n  /** The destination port ranges. Expected values include a single integer between 0 and 65535, a range using '-' as separator (e.g. 100-400), or an asterisk (*). */\n  destinationPortRanges?: string[];\n  /** The source address prefix. */\n  sourceAddressPrefix?: string;\n  /** The destination address prefix. */\n  destinationAddressPrefix?: string;\n  /** The source address prefixes. Expected values include CIDR IP ranges, Default Tags (VirtualNetwork, AzureLoadBalancer, Internet), System Tags, and the asterisk (*). */\n  sourceAddressPrefixes?: string[];\n  /** The destination address prefixes. Expected values include CIDR IP ranges, Default Tags (VirtualNetwork, AzureLoadBalancer, Internet), System Tags, and the asterisk (*). */\n  destinationAddressPrefixes?: string[];\n  /** The expanded source address prefix. */\n  expandedSourceAddressPrefix?: string[];\n  /** Expanded destination address prefix. */\n  expandedDestinationAddressPrefix?: string[];\n  /** Whether network traffic is allowed or denied. */\n  access?: SecurityRuleAccess;\n  /** The priority of the rule. */\n  priority?: number;\n  /** The direction of the rule. */\n  direction?: SecurityRuleDirection;\n}\n\n/** Response for list ip configurations API service call. */\nexport interface NetworkInterfaceIPConfigurationListResult {\n  /** A list of ip configurations. */\n  value?: NetworkInterfaceIPConfiguration[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for list ip configurations API service call. */\nexport interface NetworkInterfaceLoadBalancerListResult {\n  /** A list of load balancers. */\n  value?: LoadBalancer[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for list tap configurations API service call. */\nexport interface NetworkInterfaceTapConfigurationListResult {\n  /** A list of tap configurations. */\n  value?: NetworkInterfaceTapConfiguration[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Scope of Network Manager. */\nexport interface NetworkManagerPropertiesNetworkManagerScopes {\n  /** List of management groups. */\n  managementGroups?: string[];\n  /** List of subscriptions. */\n  subscriptions?: string[];\n  /**\n   * List of cross tenant scopes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly crossTenantScopes?: CrossTenantScopes[];\n}\n\n/** Cross tenant scopes. */\nexport interface CrossTenantScopes {\n  /**\n   * Tenant ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * List of management groups.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managementGroups?: string[];\n  /**\n   * List of subscriptions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptions?: string[];\n}\n\n/** Object for patch operations. */\nexport interface PatchObject {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Network Manager Commit. */\nexport interface NetworkManagerCommit {\n  /**\n   * Commit Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly commitId?: string;\n  /** List of target locations. */\n  targetLocations: string[];\n  /** List of configuration ids. */\n  configurationIds?: string[];\n  /** Commit Type. */\n  commitType: ConfigurationType;\n}\n\n/** Network Manager Deployment Status Parameter. */\nexport interface NetworkManagerDeploymentStatusParameter {\n  /** List of locations. */\n  regions?: string[];\n  /** List of deployment types. */\n  deploymentTypes?: ConfigurationType[];\n  /** Continuation token for pagination, capturing the next page size and offset, as well as the context of the query. */\n  skipToken?: string;\n}\n\n/** A list of Network Manager Deployment Status */\nexport interface NetworkManagerDeploymentStatusListResult {\n  /** Gets a page of Network Manager Deployment Status */\n  value?: NetworkManagerDeploymentStatus[];\n  /** When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data. */\n  skipToken?: string;\n}\n\n/** Network Manager Deployment Status. */\nexport interface NetworkManagerDeploymentStatus {\n  /** Commit Time. */\n  commitTime?: Date;\n  /** Region Name. */\n  region?: string;\n  /** Deployment Status. */\n  deploymentStatus?: DeploymentStatus;\n  /** List of configuration ids. */\n  configurationIds?: string[];\n  /** Configuration Deployment Type. */\n  deploymentType?: ConfigurationType;\n  /** Error Message. */\n  errorMessage?: string;\n}\n\n/** Result of the request to list NetworkManager. It contains a list of network managers and a URL link to get the next set of results. */\nexport interface NetworkManagerListResult {\n  /** Gets a page of NetworkManager */\n  value?: NetworkManager[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Effective Virtual Networks Parameter. */\nexport interface ActiveConfigurationParameter {\n  /** List of regions. */\n  regions?: string[];\n  /** When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data. */\n  skipToken?: string;\n}\n\n/** Result of the request to list active connectivity configurations. It contains a list of active connectivity configurations and a skiptoken to get the next set of results. */\nexport interface ActiveConnectivityConfigurationsListResult {\n  /** Gets a page of active connectivity configurations. */\n  value?: ActiveConnectivityConfiguration[];\n  /** When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data. */\n  skipToken?: string;\n}\n\n/** The network manager effective connectivity configuration */\nexport interface EffectiveConnectivityConfiguration {\n  /** Connectivity configuration ID. */\n  id?: string;\n  /** Effective configuration groups. */\n  configurationGroups?: ConfigurationGroup[];\n  /** A description of the connectivity configuration. */\n  description?: string;\n  /** Connectivity topology type. */\n  connectivityTopology?: ConnectivityTopology;\n  /** List of hubItems */\n  hubs?: Hub[];\n  /** Flag if global mesh is supported. */\n  isGlobal?: IsGlobal;\n  /** Groups for configuration */\n  appliesToGroups?: ConnectivityGroupItem[];\n  /**\n   * The provisioning state of the connectivity configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Flag if need to remove current existing peerings. */\n  deleteExistingPeering?: DeleteExistingPeering;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Hub Item. */\nexport interface Hub {\n  /** Resource Id. */\n  resourceId?: string;\n  /** Resource Type. */\n  resourceType?: string;\n}\n\n/** Connectivity group item. */\nexport interface ConnectivityGroupItem {\n  /** Network group Id. */\n  networkGroupId: string;\n  /** Flag if need to use hub gateway. */\n  useHubGateway?: UseHubGateway;\n  /** Flag if global is supported. */\n  isGlobal?: IsGlobal;\n  /** Group connectivity type. */\n  groupConnectivity: GroupConnectivity;\n}\n\n/** The network configuration group resource */\nexport interface ConfigurationGroup {\n  /** Network group ID. */\n  id?: string;\n  /** A description of the network group. */\n  description?: string;\n  /** The type of the group member. */\n  memberType?: GroupMemberType;\n  /**\n   * The provisioning state of the scope assignment resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Result of the request to list active security admin rules. It contains a list of active security admin rules and a skiptoken to get the next set of results. */\nexport interface ActiveSecurityAdminRulesListResult {\n  /** Gets a page of active security admin rules. */\n  value?: ActiveBaseSecurityAdminRuleUnion[];\n  /** When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data. */\n  skipToken?: string;\n}\n\n/** Network base admin rule. */\nexport interface ActiveBaseSecurityAdminRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Custom\" | \"Default\";\n  /** Resource ID. */\n  id?: string;\n  /** Deployment time string. */\n  commitTime?: Date;\n  /** Deployment region. */\n  region?: string;\n  /** A description of the security admin configuration. */\n  configurationDescription?: string;\n  /** A description of the rule collection. */\n  ruleCollectionDescription?: string;\n  /** Groups for rule collection */\n  ruleCollectionAppliesToGroups?: NetworkManagerSecurityGroupItem[];\n  /** Effective configuration groups. */\n  ruleGroups?: ConfigurationGroup[];\n}\n\n/** Network manager security group item. */\nexport interface NetworkManagerSecurityGroupItem {\n  /** Network manager group Id. */\n  networkGroupId: string;\n}\n\n/** Proxy resource representation. */\nexport interface ChildResource {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** List of network manager connections. */\nexport interface NetworkManagerConnectionListResult {\n  /** List of network manager connections. */\n  value?: NetworkManagerConnection[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Result of the request to list network manager connectivity configurations. It contains a list of configurations and a link to get the next set of results. */\nexport interface ConnectivityConfigurationListResult {\n  /** Gets a page of Connectivity Configurations */\n  value?: ConnectivityConfiguration[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Query Request Options */\nexport interface QueryRequestOptions {\n  /** When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data. */\n  skipToken?: string;\n}\n\n/** Result of the request to list networkManagerEffectiveConnectivityConfiguration. It contains a list of groups and a skiptoken to get the next set of results. */\nexport interface NetworkManagerEffectiveConnectivityConfigurationListResult {\n  /** Gets a page of NetworkManagerEffectiveConnectivityConfiguration */\n  value?: EffectiveConnectivityConfiguration[];\n  /** When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data. */\n  skipToken?: string;\n}\n\n/** Result of the request to list networkManagerEffectiveSecurityAdminRules. It contains a list of groups and a skiptoken to get the next set of results. */\nexport interface NetworkManagerEffectiveSecurityAdminRulesListResult {\n  /** Gets a page of NetworkManagerEffectiveSecurityAdminRules */\n  value?: EffectiveBaseSecurityAdminRuleUnion[];\n  /** When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data. */\n  skipToken?: string;\n}\n\n/** Network base admin rule. */\nexport interface EffectiveBaseSecurityAdminRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Custom\" | \"Default\";\n  /** Resource ID. */\n  id?: string;\n  /** A description of the security admin configuration. */\n  configurationDescription?: string;\n  /** A description of the rule collection. */\n  ruleCollectionDescription?: string;\n  /** Groups for rule collection */\n  ruleCollectionAppliesToGroups?: NetworkManagerSecurityGroupItem[];\n  /** Effective configuration groups. */\n  ruleGroups?: ConfigurationGroup[];\n}\n\n/** Result of the request to list NetworkGroup. It contains a list of groups and a URL link to get the next set of results. */\nexport interface NetworkGroupListResult {\n  /** Gets a page of NetworkGroup */\n  value?: NetworkGroup[];\n  /** Gets the URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Result of the request to list StaticMember. It contains a list of groups and a URL link to get the next set of results. */\nexport interface StaticMemberListResult {\n  /** Gets a page of StaticMember */\n  value?: StaticMember[];\n  /** Gets the URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** A list of network manager routing configurations */\nexport interface NetworkManagerRoutingConfigurationListResult {\n  /** Gets a page of routing configurations */\n  value?: NetworkManagerRoutingConfiguration[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Routing configuration rule collection list result. */\nexport interface RoutingRuleCollectionListResult {\n  /** A list of network manager routing configuration rule collections */\n  value?: RoutingRuleCollection[];\n  /** Gets the URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Network manager routing group item. */\nexport interface NetworkManagerRoutingGroupItem {\n  /** Network manager group Id. */\n  networkGroupId: string;\n}\n\n/** Routing configuration rule list result. */\nexport interface RoutingRuleListResult {\n  /** A list of routing rules. */\n  value?: RoutingRule[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Route destination. */\nexport interface RoutingRuleRouteDestination {\n  /** Destination type. */\n  type: RoutingRuleDestinationType;\n  /** Destination address. */\n  destinationAddress: string;\n}\n\n/** Next hop. */\nexport interface RoutingRuleNextHop {\n  /** Next hop type. */\n  nextHopType: RoutingRuleNextHopType;\n  /** Next hop address. Only required if the next hop type is VirtualAppliance. */\n  nextHopAddress?: string;\n}\n\n/** List of scope connections. */\nexport interface ScopeConnectionListResult {\n  /** List of scope connections. */\n  value?: ScopeConnection[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** A list of network manager security admin configurations */\nexport interface SecurityAdminConfigurationListResult {\n  /** Gets a page of security admin configurations */\n  value?: SecurityAdminConfiguration[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Security admin configuration rule collection list result. */\nexport interface AdminRuleCollectionListResult {\n  /** A list of network manager security admin configuration rule collections */\n  value?: AdminRuleCollection[];\n  /** Gets the URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** security configuration admin rule list result. */\nexport interface AdminRuleListResult {\n  /** A list of admin rules */\n  value?: BaseAdminRuleUnion[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** A list of network manager security user configurations */\nexport interface SecurityUserConfigurationListResult {\n  /** Gets a page of security user configurations */\n  value?: SecurityUserConfiguration[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Security user configuration rule collection list result. */\nexport interface SecurityUserRuleCollectionListResult {\n  /** A list of network manager security user configuration rule collections */\n  value?: SecurityUserRuleCollection[];\n  /** Gets the URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Network manager security user group item. */\nexport interface SecurityUserGroupItem {\n  /** Network manager group Id. */\n  networkGroupId: string;\n}\n\n/** security user rule list result. */\nexport interface SecurityUserRuleListResult {\n  /** A list of security user rules */\n  value?: SecurityUserRule[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Address prefix item. */\nexport interface AddressPrefixItem {\n  /** Address prefix. */\n  addressPrefix?: string;\n  /** Address prefix type. */\n  addressPrefixType?: AddressPrefixType;\n}\n\n/** The ip configuration for a container network interface. */\nexport interface ContainerNetworkInterfaceIpConfiguration {\n  /** The name of the resource. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * Sub Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The provisioning state of the container network interface IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Response for ListNetworkProfiles API service call. */\nexport interface NetworkProfileListResult {\n  /** A list of network profiles that exist in a resource group. */\n  value?: NetworkProfile[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListNetworkSecurityGroups API service call. */\nexport interface NetworkSecurityGroupListResult {\n  /** A list of NetworkSecurityGroup resources. */\n  value?: NetworkSecurityGroup[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListSecurityRule API service call. Retrieves all security rules that belongs to a network security group. */\nexport interface SecurityRuleListResult {\n  /** The security rules in a network security group. */\n  value?: SecurityRule[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** A list of Reachability Analysis Intents. */\nexport interface ReachabilityAnalysisIntentListResult {\n  /** Gets a page of Reachability Analysis Intents */\n  value?: ReachabilityAnalysisIntent[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Represents the Reachability Analysis Intent properties. */\nexport interface ReachabilityAnalysisIntentProperties {\n  /** Provisioning states of a resource. */\n  provisioningState?: ProvisioningState;\n  description?: string;\n  /** Source resource id to verify the reachability path of. */\n  sourceResourceId: string;\n  /** Destination resource id to verify the reachability path of. */\n  destinationResourceId: string;\n  /** IP traffic information. */\n  ipTraffic: IPTraffic;\n}\n\n/** IP traffic information. */\nexport interface IPTraffic {\n  /** List of source IP addresses of the traffic.. */\n  sourceIps: string[];\n  /** List of destination IP addresses of the traffic.. */\n  destinationIps: string[];\n  /** The source ports of the traffic. */\n  sourcePorts: string[];\n  /** The destination ports of the traffic. */\n  destinationPorts: string[];\n  protocols: NetworkProtocol[];\n}\n\n/** A list of Reachability Analysis Run */\nexport interface ReachabilityAnalysisRunListResult {\n  /** Gets a page of Reachability Analysis Runs. */\n  value?: ReachabilityAnalysisRun[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Represents the Reachability Analysis Run properties. */\nexport interface ReachabilityAnalysisRunProperties {\n  description?: string;\n  /** Id of the intent resource to run analysis on. */\n  intentId: string;\n  /**\n   * Intent information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly intentContent?: IntentContent;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly analysisResult?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly errorMessage?: string;\n  /** Provisioning states of a resource. */\n  provisioningState?: ProvisioningState;\n}\n\n/** Intent information. */\nexport interface IntentContent {\n  description?: string;\n  /** Source resource id of the intent. */\n  sourceResourceId: string;\n  /** Destination resource id of the intent. */\n  destinationResourceId: string;\n  /** IP traffic information. */\n  ipTraffic: IPTraffic;\n}\n\n/** A list of Verifier Workspace */\nexport interface VerifierWorkspaceListResult {\n  /** Gets a page of Verifier Workspaces. */\n  value?: VerifierWorkspace[];\n  /** Gets the URL to get the next page of results. */\n  nextLink?: string;\n}\n\n/** Properties of Verifier Workspace resource. */\nexport interface VerifierWorkspaceProperties {\n  description?: string;\n  /** Provisioning states of a resource. */\n  provisioningState?: ProvisioningState;\n}\n\n/** Represents the VerifierWorkspace update API request interface. */\nexport interface VerifierWorkspaceUpdate {\n  /** Dictionary of <string> */\n  tags?: { [propertyName: string]: string };\n  /** Represents the VerifierWorkspace update properties. */\n  properties?: VerifierWorkspaceUpdateProperties;\n}\n\n/** Represents the VerifierWorkspace update properties. */\nexport interface VerifierWorkspaceUpdateProperties {\n  description?: string;\n}\n\n/** Network Virtual Appliance Sku Properties. */\nexport interface VirtualApplianceSkuProperties {\n  /** Virtual Appliance Vendor. */\n  vendor?: string;\n  /** Virtual Appliance Scale Unit. */\n  bundledScaleUnit?: string;\n  /** Virtual Appliance Version. */\n  marketPlaceVersion?: string;\n}\n\n/** Network Virtual Appliance NIC properties. */\nexport interface VirtualApplianceNicProperties {\n  /**\n   * NIC type - PublicNic, PrivateNic, or AdditionalNic.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nicType?: NicTypeInResponse;\n  /**\n   * NIC name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Public IP address.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpAddress?: string;\n  /**\n   * Private IP address.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIpAddress?: string;\n  /**\n   * Instance on which nic is attached.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceName?: string;\n}\n\n/** Network Profile containing configurations for Public and Private NIC. */\nexport interface NetworkVirtualAppliancePropertiesFormatNetworkProfile {\n  networkInterfaceConfigurations?: VirtualApplianceNetworkInterfaceConfiguration[];\n}\n\n/** Represents a single NIC configuration. */\nexport interface VirtualApplianceNetworkInterfaceConfiguration {\n  /** NIC type. This should be either PublicNic or PrivateNic. */\n  nicType?: NicTypeInRequest;\n  /** Represents a single NIC configuration properties. */\n  properties?: VirtualApplianceNetworkInterfaceConfigurationProperties;\n}\n\n/** Represents a single NIC configuration properties. */\nexport interface VirtualApplianceNetworkInterfaceConfigurationProperties {\n  ipConfigurations?: VirtualApplianceIPConfiguration[];\n}\n\n/** Represents a single IP configuration. */\nexport interface VirtualApplianceIPConfiguration {\n  /** Name of the IP configuration. */\n  name?: string;\n  /** Represents a single IP configuration properties. */\n  properties?: VirtualApplianceIPConfigurationProperties;\n}\n\n/** Represents a single IP configuration properties. */\nexport interface VirtualApplianceIPConfigurationProperties {\n  /** Whether or not this is primary IP configuration of the NIC. */\n  primary?: boolean;\n}\n\n/** Network Virtual Appliance Additional NIC properties. */\nexport interface VirtualApplianceAdditionalNicProperties {\n  /** Name of additional nic */\n  name?: string;\n  /** Flag (true or false) for Intent for Public Ip on additional nic */\n  hasPublicIp?: boolean;\n}\n\n/** Resource Uri of Public Ip for Standard Load Balancer Frontend End. */\nexport interface InternetIngressPublicIpsProperties {\n  /** Resource Uri of Public Ip */\n  id?: string;\n}\n\n/** Properties of the delegation. */\nexport interface DelegationProperties {\n  /** The service name to which the NVA is delegated. */\n  serviceName?: string;\n  /**\n   * Provisioning states of a resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Properties of the partner managed resource. */\nexport interface PartnerManagedResourceProperties {\n  /**\n   * The partner managed resource id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The partner managed ILB resource id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly internalLoadBalancerId?: string;\n  /**\n   * The partner managed SLB resource id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly standardLoadBalancerId?: string;\n}\n\n/** Specifies a list of virtual machine instance IDs from the Network Virtual Appliance VM instances. */\nexport interface NetworkVirtualApplianceInstanceIds {\n  /** The network virtual appliance instance ids. Omitting the network virtual appliance instance ids will result in the operation being performed on all virtual machines belonging to the network virtual appliance. */\n  instanceIds?: string[];\n}\n\n/** Response for ListNetworkVirtualAppliances API service call. */\nexport interface NetworkVirtualApplianceListResult {\n  /** List of Network Virtual Appliances. */\n  value?: NetworkVirtualAppliance[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Network Virtual Appliance Sku Properties. */\nexport interface Office365PolicyProperties {\n  /** Office 365 breakout categories. */\n  breakOutCategories?: BreakOutCategoryPolicies;\n}\n\n/** Network Virtual Appliance Sku Properties. */\nexport interface BreakOutCategoryPolicies {\n  /** Flag to control breakout of o365 allow category. */\n  allow?: boolean;\n  /** Flag to control breakout of o365 optimize category. */\n  optimize?: boolean;\n  /** Flag to control breakout of o365 default category. */\n  default?: boolean;\n}\n\n/** Response for ListNetworkVirtualApplianceSites API service call. */\nexport interface NetworkVirtualApplianceSiteListResult {\n  /** List of Network Virtual Appliance sites. */\n  value?: VirtualApplianceSite[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListNetworkVirtualApplianceSkus API service call. */\nexport interface NetworkVirtualApplianceSkuListResult {\n  /** List of Network Virtual Appliance Skus that are available. */\n  value?: NetworkVirtualApplianceSku[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** List of available Sku and instances. */\nexport interface NetworkVirtualApplianceSkuInstances {\n  /**\n   * Scale Unit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scaleUnit?: string;\n  /**\n   * Instance Count.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceCount?: number;\n}\n\n/** Properties of the Inbound Security Rules resource. */\nexport interface InboundSecurityRules {\n  /** Name of the rule. */\n  name?: string;\n  /** Protocol. This should be either TCP or UDP. */\n  protocol?: InboundSecurityRulesProtocol;\n  /** The CIDR or source IP range. */\n  sourceAddressPrefix?: string;\n  /** NVA port ranges to be opened up. One needs to provide specific ports. */\n  destinationPortRange?: number;\n  /** NVA port ranges to be opened up. One can provide a range of ports. Allowed port value between 0 and 65535. */\n  destinationPortRanges?: string[];\n  /** Public IP name in case of Permanent Rule type & Interface Name in case of Auto Expire Rule type */\n  appliesOn?: string[];\n}\n\n/** The error object. */\nexport interface ErrorResponse {\n  /** The error details object. */\n  error?: ErrorDetails;\n}\n\n/** Response for ListNetworkWatchers API service call. */\nexport interface NetworkWatcherListResult {\n  /** List of network watcher resources. */\n  value?: NetworkWatcher[];\n}\n\n/** Parameters that define the representation of topology. */\nexport interface TopologyParameters {\n  /** The name of the target resource group to perform topology on. */\n  targetResourceGroupName?: string;\n  /** The reference to the Virtual Network resource. */\n  targetVirtualNetwork?: SubResource;\n  /** The reference to the Subnet resource. */\n  targetSubnet?: SubResource;\n}\n\n/** Topology of the specified resource group. */\nexport interface Topology {\n  /**\n   * GUID representing the operation id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The datetime when the topology was initially created for the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdDateTime?: Date;\n  /**\n   * The datetime when the topology was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModified?: Date;\n  /** A list of topology resources. */\n  resources?: TopologyResource[];\n}\n\n/** The network resource topology information for the given resource group. */\nexport interface TopologyResource {\n  /** Name of the resource. */\n  name?: string;\n  /** ID of the resource. */\n  id?: string;\n  /** Resource location. */\n  location?: string;\n  /** Holds the associations the resource has with other resources in the resource group. */\n  associations?: TopologyAssociation[];\n}\n\n/** Resources that have an association with the parent resource. */\nexport interface TopologyAssociation {\n  /** The name of the resource that is associated with the parent resource. */\n  name?: string;\n  /** The ID of the resource that is associated with the parent resource. */\n  resourceId?: string;\n  /** The association type of the child resource to the parent resource. */\n  associationType?: AssociationType;\n}\n\n/** Parameters that define the IP flow to be verified. */\nexport interface VerificationIPFlowParameters {\n  /** The ID of the target resource to perform next-hop on. */\n  targetResourceId: string;\n  /** The direction of the packet represented as a 5-tuple. */\n  direction: Direction;\n  /** Protocol to be verified on. */\n  protocol: IpFlowProtocol;\n  /** The local port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction. */\n  localPort: string;\n  /** The remote port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction. */\n  remotePort: string;\n  /** The local IP address. Acceptable values are valid IPv4 addresses. */\n  localIPAddress: string;\n  /** The remote IP address. Acceptable values are valid IPv4 addresses. */\n  remoteIPAddress: string;\n  /** The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of them, then this parameter must be specified. Otherwise optional). */\n  targetNicResourceId?: string;\n}\n\n/** Results of IP flow verification on the target resource. */\nexport interface VerificationIPFlowResult {\n  /** Indicates whether the traffic is allowed or denied. */\n  access?: Access;\n  /** Name of the rule. If input is not matched against any security rule, it is not displayed. */\n  ruleName?: string;\n}\n\n/** Parameters that define the source and destination endpoint. */\nexport interface NextHopParameters {\n  /** The resource identifier of the target resource against which the action is to be performed. */\n  targetResourceId: string;\n  /** The source IP address. */\n  sourceIPAddress: string;\n  /** The destination IP address. */\n  destinationIPAddress: string;\n  /** The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional). */\n  targetNicResourceId?: string;\n}\n\n/** The information about next hop from the specified VM. */\nexport interface NextHopResult {\n  /** Next hop type. */\n  nextHopType?: NextHopType;\n  /** Next hop IP Address. */\n  nextHopIpAddress?: string;\n  /** The resource identifier for the route table associated with the route being returned. If the route being returned does not correspond to any user created routes then this field will be the string 'System Route'. */\n  routeTableId?: string;\n}\n\n/** Parameters that define the VM to check security groups for. */\nexport interface SecurityGroupViewParameters {\n  /** ID of the target VM. */\n  targetResourceId: string;\n}\n\n/** The information about security rules applied to the specified VM. */\nexport interface SecurityGroupViewResult {\n  /** List of network interfaces on the specified VM. */\n  networkInterfaces?: SecurityGroupNetworkInterface[];\n}\n\n/** Network interface and all its associated security rules. */\nexport interface SecurityGroupNetworkInterface {\n  /** ID of the network interface. */\n  id?: string;\n  /** All security rules associated with the network interface. */\n  securityRuleAssociations?: SecurityRuleAssociations;\n}\n\n/** All security rules associated with the network interface. */\nexport interface SecurityRuleAssociations {\n  /** Network interface and it's custom security rules. */\n  networkInterfaceAssociation?: NetworkInterfaceAssociation;\n  /** Subnet and it's custom security rules. */\n  subnetAssociation?: SubnetAssociation;\n  /** Collection of default security rules of the network security group. */\n  defaultSecurityRules?: SecurityRule[];\n  /** Collection of effective security rules. */\n  effectiveSecurityRules?: EffectiveNetworkSecurityRule[];\n}\n\n/** Network interface and its custom security rules. */\nexport interface NetworkInterfaceAssociation {\n  /**\n   * Network interface ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** Collection of custom security rules. */\n  securityRules?: SecurityRule[];\n}\n\n/** Subnet and it's custom security rules. */\nexport interface SubnetAssociation {\n  /**\n   * Subnet ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** Collection of custom security rules. */\n  securityRules?: SecurityRule[];\n}\n\n/** Parameters that define the create packet capture operation. */\nexport interface PacketCapture {\n  /** The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported. */\n  target: string;\n  /** A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS. */\n  scope?: PacketCaptureMachineScope;\n  /** Target type of the resource provided. */\n  targetType?: PacketCaptureTargetType;\n  /** Number of bytes captured per packet, the remaining bytes are truncated. */\n  bytesToCapturePerPacket?: number;\n  /** Maximum size of the capture output. */\n  totalBytesPerSession?: number;\n  /** Maximum duration of the capture session in seconds. */\n  timeLimitInSeconds?: number;\n  /** The storage location for a packet capture session. */\n  storageLocation: PacketCaptureStorageLocation;\n  /** A list of packet capture filters. */\n  filters?: PacketCaptureFilter[];\n  /** This continuous capture is a nullable boolean, which can hold 'null', 'true' or 'false' value. If we do not pass this parameter, it would be consider as 'null', default value is 'null'. */\n  continuousCapture?: boolean;\n  /** The capture setting holds the 'FileCount', 'FileSizeInBytes', 'SessionTimeLimitInSeconds' values. */\n  captureSettings?: PacketCaptureSettings;\n}\n\n/** Parameters that define the create packet capture operation. */\nexport interface PacketCaptureParameters {\n  /** The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported. */\n  target: string;\n  /** A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS. */\n  scope?: PacketCaptureMachineScope;\n  /** Target type of the resource provided. */\n  targetType?: PacketCaptureTargetType;\n  /** Number of bytes captured per packet, the remaining bytes are truncated. */\n  bytesToCapturePerPacket?: number;\n  /** Maximum size of the capture output. */\n  totalBytesPerSession?: number;\n  /** Maximum duration of the capture session in seconds. */\n  timeLimitInSeconds?: number;\n  /** The storage location for a packet capture session. */\n  storageLocation: PacketCaptureStorageLocation;\n  /** A list of packet capture filters. */\n  filters?: PacketCaptureFilter[];\n  /** This continuous capture is a nullable boolean, which can hold 'null', 'true' or 'false' value. If we do not pass this parameter, it would be consider as 'null', default value is 'null'. */\n  continuousCapture?: boolean;\n  /** The capture setting holds the 'FileCount', 'FileSizeInBytes', 'SessionTimeLimitInSeconds' values. */\n  captureSettings?: PacketCaptureSettings;\n}\n\n/** A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS. */\nexport interface PacketCaptureMachineScope {\n  /** List of AzureVMSS instances to run packet capture on. */\n  include?: string[];\n  /** List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture. */\n  exclude?: string[];\n}\n\n/** The storage location for a packet capture session. */\nexport interface PacketCaptureStorageLocation {\n  /** The ID of the storage account to save the packet capture session. Required if no localPath or filePath is provided. */\n  storageId?: string;\n  /** The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture. */\n  storagePath?: string;\n  /** This path is invalid if 'Continuous Capture' is provided with 'true' or 'false'. A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional. */\n  filePath?: string;\n  /** This path is valid if 'Continuous Capture' is provided with 'true' or 'false' and required if no storage ID is provided, otherwise optional. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. */\n  localPath?: string;\n}\n\n/** Filter that is applied to packet capture request. Multiple filters can be applied. */\nexport interface PacketCaptureFilter {\n  /** Protocol to be filtered on. */\n  protocol?: PcProtocol;\n  /** Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. */\n  localIPAddress?: string;\n  /** Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. */\n  remoteIPAddress?: string;\n  /** Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. */\n  localPort?: string;\n  /** Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. */\n  remotePort?: string;\n}\n\n/** The storage location for a packet capture session. */\nexport interface PacketCaptureSettings {\n  /** Number of file count. Default value of count is 10 and maximum number is 10000. */\n  fileCount?: number;\n  /** Number of bytes captured per packet. Default value in bytes 104857600 (100MB) and maximum in bytes 4294967295 (4GB). */\n  fileSizeInBytes?: number;\n  /** Maximum duration of the capture session in seconds is 604800s (7 days) for a file. Default value in second 86400s (1 day). */\n  sessionTimeLimitInSeconds?: number;\n}\n\n/** Information about packet capture session. */\nexport interface PacketCaptureResult {\n  /**\n   * Name of the packet capture session.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * ID of the packet capture operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported. */\n  target?: string;\n  /** A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS. */\n  scope?: PacketCaptureMachineScope;\n  /** Target type of the resource provided. */\n  targetType?: PacketCaptureTargetType;\n  /** Number of bytes captured per packet, the remaining bytes are truncated. */\n  bytesToCapturePerPacket?: number;\n  /** Maximum size of the capture output. */\n  totalBytesPerSession?: number;\n  /** Maximum duration of the capture session in seconds. */\n  timeLimitInSeconds?: number;\n  /** The storage location for a packet capture session. */\n  storageLocation?: PacketCaptureStorageLocation;\n  /** A list of packet capture filters. */\n  filters?: PacketCaptureFilter[];\n  /** This continuous capture is a nullable boolean, which can hold 'null', 'true' or 'false' value. If we do not pass this parameter, it would be consider as 'null', default value is 'null'. */\n  continuousCapture?: boolean;\n  /** The capture setting holds the 'FileCount', 'FileSizeInBytes', 'SessionTimeLimitInSeconds' values. */\n  captureSettings?: PacketCaptureSettings;\n  /**\n   * The provisioning state of the packet capture session.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Status of packet capture session. */\nexport interface PacketCaptureQueryStatusResult {\n  /** The name of the packet capture resource. */\n  name?: string;\n  /** The ID of the packet capture resource. */\n  id?: string;\n  /** The start time of the packet capture session. */\n  captureStartTime?: Date;\n  /** The status of the packet capture session. */\n  packetCaptureStatus?: PcStatus;\n  /** The reason the current packet capture session was stopped. */\n  stopReason?: string;\n  /** List of errors of packet capture session. */\n  packetCaptureError?: PcError[];\n}\n\n/** List of packet capture sessions. */\nexport interface PacketCaptureListResult {\n  /** Information about packet capture sessions. */\n  value?: PacketCaptureResult[];\n}\n\n/** Parameters that define the resource to troubleshoot. */\nexport interface TroubleshootingParameters {\n  /** The target resource to troubleshoot. */\n  targetResourceId: string;\n  /** The ID for the storage account to save the troubleshoot result. */\n  storageId: string;\n  /** The path to the blob to save the troubleshoot result in. */\n  storagePath: string;\n}\n\n/** Troubleshooting information gained from specified resource. */\nexport interface TroubleshootingResult {\n  /** The start time of the troubleshooting. */\n  startTime?: Date;\n  /** The end time of the troubleshooting. */\n  endTime?: Date;\n  /** The result code of the troubleshooting. */\n  code?: string;\n  /** Information from troubleshooting. */\n  results?: TroubleshootingDetails[];\n}\n\n/** Information gained from troubleshooting of specified resource. */\nexport interface TroubleshootingDetails {\n  /** The id of the get troubleshoot operation. */\n  id?: string;\n  /** Reason type of failure. */\n  reasonType?: string;\n  /** A summary of troubleshooting. */\n  summary?: string;\n  /** Details on troubleshooting results. */\n  detail?: string;\n  /** List of recommended actions. */\n  recommendedActions?: TroubleshootingRecommendedActions[];\n}\n\n/** Recommended actions based on discovered issues. */\nexport interface TroubleshootingRecommendedActions {\n  /** ID of the recommended action. */\n  actionId?: string;\n  /** Description of recommended actions. */\n  actionText?: string;\n  /** The uri linking to a documentation for the recommended troubleshooting actions. */\n  actionUri?: string;\n  /** The information from the URI for the recommended troubleshooting actions. */\n  actionUriText?: string;\n}\n\n/** Parameters that define the resource to query the troubleshooting result. */\nexport interface QueryTroubleshootingParameters {\n  /** The target resource ID to query the troubleshooting result. */\n  targetResourceId: string;\n}\n\n/** Information on the configuration of flow log and traffic analytics (optional) . */\nexport interface FlowLogInformation {\n  /** The ID of the resource to configure for flow log and traffic analytics (optional) . */\n  targetResourceId: string;\n  /** Parameters that define the configuration of traffic analytics. */\n  flowAnalyticsConfiguration?: TrafficAnalyticsProperties;\n  /** FlowLog resource Managed Identity */\n  identity?: ManagedServiceIdentity;\n  /** ID of the storage account which is used to store the flow log. */\n  storageId: string;\n  /** Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort, Protocol, Encryption, Direction and Action. If not specified, all network traffic will be logged. */\n  enabledFilteringCriteria?: string;\n  /** Flag to enable/disable flow logging. */\n  enabled: boolean;\n  /** Parameters that define the retention policy for flow log. */\n  retentionPolicy?: RetentionPolicyParameters;\n  /** Parameters that define the flow log format. */\n  format?: FlowLogFormatParameters;\n}\n\n/** Parameters that define a resource to query flow log and traffic analytics (optional) status. */\nexport interface FlowLogStatusParameters {\n  /** The target resource where getting the flow log and traffic analytics (optional) status. */\n  targetResourceId: string;\n}\n\n/** Parameters that determine how the connectivity check will be performed. */\nexport interface ConnectivityParameters {\n  /** The source of the connection. */\n  source: ConnectivitySource;\n  /** The destination of connection. */\n  destination: ConnectivityDestination;\n  /** Network protocol. */\n  protocol?: Protocol;\n  /** Configuration of the protocol. */\n  protocolConfiguration?: ProtocolConfiguration;\n  /** Preferred IP version of the connection. */\n  preferredIPVersion?: IPVersion;\n}\n\n/** Parameters that define the source of the connection. */\nexport interface ConnectivitySource {\n  /** The ID of the resource from which a connectivity check will be initiated. */\n  resourceId: string;\n  /** The source port from which a connectivity check will be performed. */\n  port?: number;\n}\n\n/** Parameters that define destination of connection. */\nexport interface ConnectivityDestination {\n  /** The ID of the resource to which a connection attempt will be made. */\n  resourceId?: string;\n  /** The IP address or URI the resource to which a connection attempt will be made. */\n  address?: string;\n  /** Port on which check connectivity will be performed. */\n  port?: number;\n}\n\n/** Configuration of the protocol. */\nexport interface ProtocolConfiguration {\n  /** HTTP configuration of the connectivity check. */\n  httpConfiguration?: HttpConfiguration;\n}\n\n/** HTTP configuration of the connectivity check. */\nexport interface HttpConfiguration {\n  /** HTTP method. */\n  method?: HttpMethod;\n  /** List of HTTP headers. */\n  headers?: HttpHeader[];\n  /** Valid status codes. */\n  validStatusCodes?: number[];\n}\n\n/** The HTTP header. */\nexport interface HttpHeader {\n  /** The name in HTTP header. */\n  name?: string;\n  /** The value in HTTP header. */\n  value?: string;\n}\n\n/** Information on the connectivity status. */\nexport interface ConnectivityInformation {\n  /**\n   * List of hops between the source and the destination.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hops?: ConnectivityHop[];\n  /**\n   * The connection status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionStatus?: ConnectionStatus;\n  /**\n   * Average latency in milliseconds.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly avgLatencyInMs?: number;\n  /**\n   * Minimum latency in milliseconds.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minLatencyInMs?: number;\n  /**\n   * Maximum latency in milliseconds.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxLatencyInMs?: number;\n  /**\n   * Total number of probes sent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly probesSent?: number;\n  /**\n   * Number of failed probes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly probesFailed?: number;\n}\n\n/** Information about a hop between the source and the destination. */\nexport interface ConnectivityHop {\n  /**\n   * The type of the hop.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The ID of the hop.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The IP address of the hop.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly address?: string;\n  /**\n   * The ID of the resource corresponding to this hop.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceId?: string;\n  /**\n   * List of next hop identifiers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextHopIds?: string[];\n  /**\n   * List of previous hop identifiers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly previousHopIds?: string[];\n  /**\n   * List of hop links.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly links?: HopLink[];\n  /**\n   * List of previous hop links.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly previousLinks?: HopLink[];\n  /**\n   * List of issues.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly issues?: ConnectivityIssue[];\n}\n\n/** Hop link. */\nexport interface HopLink {\n  /**\n   * The ID of the next hop.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextHopId?: string;\n  /**\n   * Link type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly linkType?: string;\n  /**\n   * List of issues.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly issues?: ConnectivityIssue[];\n  /**\n   * Provides additional context on links.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly context?: { [propertyName: string]: string };\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceId?: string;\n  /**\n   * Minimum roundtrip time in milliseconds.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly roundTripTimeMin?: number;\n  /**\n   * Average roundtrip time in milliseconds.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly roundTripTimeAvg?: number;\n  /**\n   * Maximum roundtrip time in milliseconds.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly roundTripTimeMax?: number;\n}\n\n/** Information about an issue encountered in the process of checking for connectivity. */\nexport interface ConnectivityIssue {\n  /**\n   * The origin of the issue.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: Origin;\n  /**\n   * The severity of the issue.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly severity?: Severity;\n  /**\n   * The type of issue.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: IssueType;\n  /**\n   * Provides additional context on the issue.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly context?: { [propertyName: string]: string }[];\n}\n\n/** Geographic and time constraints for Azure reachability report. */\nexport interface AzureReachabilityReportParameters {\n  /** Parameters that define a geographic location. */\n  providerLocation: AzureReachabilityReportLocation;\n  /** List of Internet service providers. */\n  providers?: string[];\n  /** Optional Azure regions to scope the query to. */\n  azureLocations?: string[];\n  /** The start time for the Azure reachability report. */\n  startTime: Date;\n  /** The end time for the Azure reachability report. */\n  endTime: Date;\n}\n\n/** Parameters that define a geographic location. */\nexport interface AzureReachabilityReportLocation {\n  /** The name of the country. */\n  country: string;\n  /** The name of the state. */\n  state?: string;\n  /** The name of the city or town. */\n  city?: string;\n}\n\n/** Azure reachability report details. */\nexport interface AzureReachabilityReport {\n  /** The aggregation level of Azure reachability report. Can be Country, State or City. */\n  aggregationLevel: string;\n  /** Parameters that define a geographic location. */\n  providerLocation: AzureReachabilityReportLocation;\n  /** List of Azure reachability report items. */\n  reachabilityReport: AzureReachabilityReportItem[];\n}\n\n/** Azure reachability report details for a given provider location. */\nexport interface AzureReachabilityReportItem {\n  /** The Internet service provider. */\n  provider?: string;\n  /** The Azure region. */\n  azureLocation?: string;\n  /** List of latency details for each of the time series. */\n  latencies?: AzureReachabilityReportLatencyInfo[];\n}\n\n/** Details on latency for a time series. */\nexport interface AzureReachabilityReportLatencyInfo {\n  /** The time stamp. */\n  timeStamp?: Date;\n  /** The relative latency score between 1 and 100, higher values indicating a faster connection. */\n  score?: number;\n}\n\n/** Constraints that determine the list of available Internet service providers. */\nexport interface AvailableProvidersListParameters {\n  /** A list of Azure regions. */\n  azureLocations?: string[];\n  /** The country for available providers list. */\n  country?: string;\n  /** The state for available providers list. */\n  state?: string;\n  /** The city or town for available providers list. */\n  city?: string;\n}\n\n/** List of available countries with details. */\nexport interface AvailableProvidersList {\n  /** List of available countries. */\n  countries: AvailableProvidersListCountry[];\n}\n\n/** Country details. */\nexport interface AvailableProvidersListCountry {\n  /** The country name. */\n  countryName?: string;\n  /** A list of Internet service providers. */\n  providers?: string[];\n  /** List of available states in the country. */\n  states?: AvailableProvidersListState[];\n}\n\n/** State details. */\nexport interface AvailableProvidersListState {\n  /** The state name. */\n  stateName?: string;\n  /** A list of Internet service providers. */\n  providers?: string[];\n  /** List of available cities or towns in the state. */\n  cities?: AvailableProvidersListCity[];\n}\n\n/** City or town details. */\nexport interface AvailableProvidersListCity {\n  /** The city or town name. */\n  cityName?: string;\n  /** A list of Internet service providers. */\n  providers?: string[];\n}\n\n/** Parameters to get network configuration diagnostic. */\nexport interface NetworkConfigurationDiagnosticParameters {\n  /** The ID of the target resource to perform network configuration diagnostic. Valid options are VM, NetworkInterface, VMSS/NetworkInterface and Application Gateway. */\n  targetResourceId: string;\n  /** Verbosity level. */\n  verbosityLevel?: VerbosityLevel;\n  /** List of network configuration diagnostic profiles. */\n  profiles: NetworkConfigurationDiagnosticProfile[];\n}\n\n/** Parameters to compare with network configuration. */\nexport interface NetworkConfigurationDiagnosticProfile {\n  /** The direction of the traffic. */\n  direction: Direction;\n  /** Protocol to be verified on. Accepted values are '*', TCP, UDP. */\n  protocol: string;\n  /** Traffic source. Accepted values are '*', IP Address/CIDR, Service Tag. */\n  source: string;\n  /** Traffic destination. Accepted values are: '*', IP Address/CIDR, Service Tag. */\n  destination: string;\n  /** Traffic destination port. Accepted values are '*' and a single port in the range (0 - 65535). */\n  destinationPort: string;\n}\n\n/** Results of network configuration diagnostic on the target resource. */\nexport interface NetworkConfigurationDiagnosticResponse {\n  /**\n   * List of network configuration diagnostic results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly results?: NetworkConfigurationDiagnosticResult[];\n}\n\n/** Network configuration diagnostic result corresponded to provided traffic query. */\nexport interface NetworkConfigurationDiagnosticResult {\n  /** Network configuration diagnostic profile. */\n  profile?: NetworkConfigurationDiagnosticProfile;\n  /** Network security group result. */\n  networkSecurityGroupResult?: NetworkSecurityGroupResult;\n}\n\n/** Network configuration diagnostic result corresponded provided traffic query. */\nexport interface NetworkSecurityGroupResult {\n  /** The network traffic is allowed or denied. */\n  securityRuleAccessResult?: SecurityRuleAccess;\n  /**\n   * List of results network security groups diagnostic.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly evaluatedNetworkSecurityGroups?: EvaluatedNetworkSecurityGroup[];\n}\n\n/** Results of network security group evaluation. */\nexport interface EvaluatedNetworkSecurityGroup {\n  /** Network security group ID. */\n  networkSecurityGroupId?: string;\n  /** Resource ID of nic or subnet to which network security group is applied. */\n  appliedTo?: string;\n  /** Matched network security rule. */\n  matchedRule?: MatchedRule;\n  /**\n   * List of network security rules evaluation results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rulesEvaluationResult?: NetworkSecurityRulesEvaluationResult[];\n}\n\n/** Matched rule. */\nexport interface MatchedRule {\n  /** Name of the matched network security rule. */\n  ruleName?: string;\n  /** The network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'. */\n  action?: string;\n}\n\n/** Network security rules evaluation result. */\nexport interface NetworkSecurityRulesEvaluationResult {\n  /** Name of the network security rule. */\n  name?: string;\n  /** Value indicating whether protocol is matched. */\n  protocolMatched?: boolean;\n  /** Value indicating whether source is matched. */\n  sourceMatched?: boolean;\n  /** Value indicating whether source port is matched. */\n  sourcePortMatched?: boolean;\n  /** Value indicating whether destination is matched. */\n  destinationMatched?: boolean;\n  /** Value indicating whether destination port is matched. */\n  destinationPortMatched?: boolean;\n}\n\n/** Parameters that define the operation to create a connection monitor. */\nexport interface ConnectionMonitor {\n  /** Connection monitor location. */\n  location?: string;\n  /** Connection monitor tags. */\n  tags?: { [propertyName: string]: string };\n  /** Describes the source of connection monitor. */\n  source?: ConnectionMonitorSource;\n  /** Describes the destination of connection monitor. */\n  destination?: ConnectionMonitorDestination;\n  /** Determines if the connection monitor will start automatically once created. */\n  autoStart?: boolean;\n  /** Monitoring interval in seconds. */\n  monitoringIntervalInSeconds?: number;\n  /** List of connection monitor endpoints. */\n  endpoints?: ConnectionMonitorEndpoint[];\n  /** List of connection monitor test configurations. */\n  testConfigurations?: ConnectionMonitorTestConfiguration[];\n  /** List of connection monitor test groups. */\n  testGroups?: ConnectionMonitorTestGroup[];\n  /** List of connection monitor outputs. */\n  outputs?: ConnectionMonitorOutput[];\n  /** Optional notes to be associated with the connection monitor. */\n  notes?: string;\n}\n\n/** Parameters that define the operation to create a connection monitor. */\nexport interface ConnectionMonitorParameters {\n  /** Describes the source of connection monitor. */\n  source?: ConnectionMonitorSource;\n  /** Describes the destination of connection monitor. */\n  destination?: ConnectionMonitorDestination;\n  /** Determines if the connection monitor will start automatically once created. */\n  autoStart?: boolean;\n  /** Monitoring interval in seconds. */\n  monitoringIntervalInSeconds?: number;\n  /** List of connection monitor endpoints. */\n  endpoints?: ConnectionMonitorEndpoint[];\n  /** List of connection monitor test configurations. */\n  testConfigurations?: ConnectionMonitorTestConfiguration[];\n  /** List of connection monitor test groups. */\n  testGroups?: ConnectionMonitorTestGroup[];\n  /** List of connection monitor outputs. */\n  outputs?: ConnectionMonitorOutput[];\n  /** Optional notes to be associated with the connection monitor. */\n  notes?: string;\n}\n\n/** Describes the source of connection monitor. */\nexport interface ConnectionMonitorSource {\n  /** The ID of the resource used as the source by connection monitor. */\n  resourceId: string;\n  /** The source port used by connection monitor. */\n  port?: number;\n}\n\n/** Describes the destination of connection monitor. */\nexport interface ConnectionMonitorDestination {\n  /** The ID of the resource used as the destination by connection monitor. */\n  resourceId?: string;\n  /** Address of the connection monitor destination (IP or domain name). */\n  address?: string;\n  /** The destination port used by connection monitor. */\n  port?: number;\n}\n\n/** Describes the connection monitor endpoint. */\nexport interface ConnectionMonitorEndpoint {\n  /** The name of the connection monitor endpoint. */\n  name: string;\n  /** The endpoint type. */\n  type?: EndpointType;\n  /** Resource ID of the connection monitor endpoint are supported for AzureVM, AzureVMSS, AzureVNet, AzureSubnet, MMAWorkspaceMachine, MMAWorkspaceNetwork, AzureArcVM endpoint type. */\n  resourceId?: string;\n  /** Address of the connection monitor endpoint. Supported for AzureVM, ExternalAddress, ArcMachine, MMAWorkspaceMachine endpoint type. */\n  address?: string;\n  /** Filter field is getting deprecated and should not be used. Instead use Include/Exclude scope fields for it. */\n  filter?: ConnectionMonitorEndpointFilter;\n  /** Endpoint scope defines which target resource to monitor in case of compound resource endpoints like VMSS, AzureSubnet, AzureVNet, MMAWorkspaceNetwork, AzureArcNetwork. */\n  scope?: ConnectionMonitorEndpointScope;\n  /** Test coverage for the endpoint. */\n  coverageLevel?: CoverageLevel;\n  /** Location details is optional and only being used for 'AzureArcNetwork' type endpoints, which contains region details. */\n  locationDetails?: ConnectionMonitorEndpointLocationDetails;\n  /** Subscription ID for connection monitor endpoint. It's an optional parameter which is being used for 'AzureArcNetwork' type endpoint. */\n  subscriptionId?: string;\n}\n\n/** Describes the connection monitor endpoint filter. */\nexport interface ConnectionMonitorEndpointFilter {\n  /** The behavior of the endpoint filter. Currently only 'Include' is supported. */\n  type?: ConnectionMonitorEndpointFilterType;\n  /** List of items in the filter. */\n  items?: ConnectionMonitorEndpointFilterItem[];\n}\n\n/** Describes the connection monitor endpoint filter item. */\nexport interface ConnectionMonitorEndpointFilterItem {\n  /** The type of item included in the filter. Currently only 'AgentAddress' is supported. */\n  type?: ConnectionMonitorEndpointFilterItemType;\n  /** The address of the filter item. */\n  address?: string;\n}\n\n/** Describes the connection monitor endpoint scope. */\nexport interface ConnectionMonitorEndpointScope {\n  /** List of items which needs to be included to the endpoint scope. */\n  include?: ConnectionMonitorEndpointScopeItem[];\n  /** List of items which needs to be excluded from the endpoint scope. */\n  exclude?: ConnectionMonitorEndpointScopeItem[];\n}\n\n/** Describes the connection monitor endpoint scope item. */\nexport interface ConnectionMonitorEndpointScopeItem {\n  /** The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address. */\n  address?: string;\n}\n\n/** Connection monitor endpoint location details only being used for 'AzureArcNetwork' type endpoints, which contains the region details. */\nexport interface ConnectionMonitorEndpointLocationDetails {\n  /** Region for connection monitor endpoint. */\n  region?: string;\n}\n\n/** Describes a connection monitor test configuration. */\nexport interface ConnectionMonitorTestConfiguration {\n  /** The name of the connection monitor test configuration. */\n  name: string;\n  /** The frequency of test evaluation, in seconds. */\n  testFrequencySec?: number;\n  /** The protocol to use in test evaluation. */\n  protocol: ConnectionMonitorTestConfigurationProtocol;\n  /** The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters. */\n  preferredIPVersion?: PreferredIPVersion;\n  /** The parameters used to perform test evaluation over HTTP. */\n  httpConfiguration?: ConnectionMonitorHttpConfiguration;\n  /** The parameters used to perform test evaluation over TCP. */\n  tcpConfiguration?: ConnectionMonitorTcpConfiguration;\n  /** The parameters used to perform test evaluation over ICMP. */\n  icmpConfiguration?: ConnectionMonitorIcmpConfiguration;\n  /** The threshold for declaring a test successful. */\n  successThreshold?: ConnectionMonitorSuccessThreshold;\n}\n\n/** Describes the HTTP configuration. */\nexport interface ConnectionMonitorHttpConfiguration {\n  /** The port to connect to. */\n  port?: number;\n  /** The HTTP method to use. */\n  method?: HttpConfigurationMethod;\n  /** The path component of the URI. For instance, \"/dir1/dir2\". */\n  path?: string;\n  /** The HTTP headers to transmit with the request. */\n  requestHeaders?: HttpHeader[];\n  /** HTTP status codes to consider successful. For instance, \"2xx,301-304,418\". */\n  validStatusCodeRanges?: string[];\n  /** Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit. */\n  preferHttps?: boolean;\n}\n\n/** Describes the TCP configuration. */\nexport interface ConnectionMonitorTcpConfiguration {\n  /** The port to connect to. */\n  port?: number;\n  /** Value indicating whether path evaluation with trace route should be disabled. */\n  disableTraceRoute?: boolean;\n  /** Destination port behavior. */\n  destinationPortBehavior?: DestinationPortBehavior;\n}\n\n/** Describes the ICMP configuration. */\nexport interface ConnectionMonitorIcmpConfiguration {\n  /** Value indicating whether path evaluation with trace route should be disabled. */\n  disableTraceRoute?: boolean;\n}\n\n/** Describes the threshold for declaring a test successful. */\nexport interface ConnectionMonitorSuccessThreshold {\n  /** The maximum percentage of failed checks permitted for a test to evaluate as successful. */\n  checksFailedPercent?: number;\n  /** The maximum round-trip time in milliseconds permitted for a test to evaluate as successful. */\n  roundTripTimeMs?: number;\n}\n\n/** Describes the connection monitor test group. */\nexport interface ConnectionMonitorTestGroup {\n  /** The name of the connection monitor test group. */\n  name: string;\n  /** Value indicating whether test group is disabled. */\n  disable?: boolean;\n  /** List of test configuration names. */\n  testConfigurations: string[];\n  /** List of source endpoint names. */\n  sources: string[];\n  /** List of destination endpoint names. */\n  destinations: string[];\n}\n\n/** Describes a connection monitor output destination. */\nexport interface ConnectionMonitorOutput {\n  /** Connection monitor output destination type. Currently, only \"Workspace\" is supported. */\n  type?: OutputType;\n  /** Describes the settings for producing output into a log analytics workspace. */\n  workspaceSettings?: ConnectionMonitorWorkspaceSettings;\n}\n\n/** Describes the settings for producing output into a log analytics workspace. */\nexport interface ConnectionMonitorWorkspaceSettings {\n  /** Log analytics workspace resource ID. */\n  workspaceResourceId?: string;\n}\n\n/** Information about the connection monitor. */\nexport interface ConnectionMonitorResult {\n  /**\n   * Name of the connection monitor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * ID of the connection monitor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Connection monitor type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Connection monitor location. */\n  location?: string;\n  /** Connection monitor tags. */\n  tags?: { [propertyName: string]: string };\n  /** Describes the source of connection monitor. */\n  source?: ConnectionMonitorSource;\n  /** Describes the destination of connection monitor. */\n  destination?: ConnectionMonitorDestination;\n  /** Determines if the connection monitor will start automatically once created. */\n  autoStart?: boolean;\n  /** Monitoring interval in seconds. */\n  monitoringIntervalInSeconds?: number;\n  /** List of connection monitor endpoints. */\n  endpoints?: ConnectionMonitorEndpoint[];\n  /** List of connection monitor test configurations. */\n  testConfigurations?: ConnectionMonitorTestConfiguration[];\n  /** List of connection monitor test groups. */\n  testGroups?: ConnectionMonitorTestGroup[];\n  /** List of connection monitor outputs. */\n  outputs?: ConnectionMonitorOutput[];\n  /** Optional notes to be associated with the connection monitor. */\n  notes?: string;\n  /**\n   * The provisioning state of the connection monitor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The date and time when the connection monitor was started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The monitoring status of the connection monitor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly monitoringStatus?: string;\n  /**\n   * Type of connection monitor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionMonitorType?: ConnectionMonitorType;\n}\n\n/** List of connection states snapshots. */\nexport interface ConnectionMonitorQueryResult {\n  /** Status of connection monitor source. */\n  sourceStatus?: ConnectionMonitorSourceStatus;\n  /** Information about connection states. */\n  states?: ConnectionStateSnapshot[];\n}\n\n/** Connection state snapshot. */\nexport interface ConnectionStateSnapshot {\n  /** The connection state. */\n  connectionState?: ConnectionState;\n  /** The start time of the connection snapshot. */\n  startTime?: Date;\n  /** The end time of the connection snapshot. */\n  endTime?: Date;\n  /** Connectivity analysis evaluation state. */\n  evaluationState?: EvaluationState;\n  /** Average latency in ms. */\n  avgLatencyInMs?: number;\n  /** Minimum latency in ms. */\n  minLatencyInMs?: number;\n  /** Maximum latency in ms. */\n  maxLatencyInMs?: number;\n  /** The number of sent probes. */\n  probesSent?: number;\n  /** The number of failed probes. */\n  probesFailed?: number;\n  /**\n   * List of hops between the source and the destination.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hops?: ConnectivityHop[];\n}\n\n/** List of connection monitors. */\nexport interface ConnectionMonitorListResult {\n  /** Information about connection monitors. */\n  value?: ConnectionMonitorResult[];\n}\n\n/** List of flow logs. */\nexport interface FlowLogListResult {\n  /** Information about flow log resource. */\n  value?: FlowLog[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of the request to list Network operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of Network operations supported by the Network resource provider. */\n  value?: Operation[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Network REST API operation definition. */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation}. */\n  name?: string;\n  /** Display metadata associated with the operation. */\n  display?: OperationDisplay;\n  /** Origin of the operation. */\n  origin?: string;\n  /** Specification of the service. */\n  serviceSpecification?: OperationPropertiesFormatServiceSpecification;\n}\n\n/** Display metadata associated with the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft Network. */\n  provider?: string;\n  /** Resource on which the operation is performed. */\n  resource?: string;\n  /** Type of the operation: get, read, delete, etc. */\n  operation?: string;\n  /** Description of the operation. */\n  description?: string;\n}\n\n/** Specification of the service. */\nexport interface OperationPropertiesFormatServiceSpecification {\n  /** Operation service specification. */\n  metricSpecifications?: MetricSpecification[];\n  /** Operation log specification. */\n  logSpecifications?: LogSpecification[];\n}\n\n/** Description of metrics specification. */\nexport interface MetricSpecification {\n  /** The name of the metric. */\n  name?: string;\n  /** The display name of the metric. */\n  displayName?: string;\n  /** The description of the metric. */\n  displayDescription?: string;\n  /** Units the metric to be displayed in. */\n  unit?: string;\n  /** The aggregation type. */\n  aggregationType?: string;\n  /** List of availability. */\n  availabilities?: Availability[];\n  /** Whether regional MDM account enabled. */\n  enableRegionalMdmAccount?: boolean;\n  /** Whether gaps would be filled with zeros. */\n  fillGapWithZero?: boolean;\n  /** Pattern for the filter of the metric. */\n  metricFilterPattern?: string;\n  /** List of dimensions. */\n  dimensions?: Dimension[];\n  /** Whether the metric is internal. */\n  isInternal?: boolean;\n  /** The source MDM account. */\n  sourceMdmAccount?: string;\n  /** The source MDM namespace. */\n  sourceMdmNamespace?: string;\n  /** The resource Id dimension name override. */\n  resourceIdDimensionNameOverride?: string;\n}\n\n/** Availability of the metric. */\nexport interface Availability {\n  /** The time grain of the availability. */\n  timeGrain?: string;\n  /** The retention of the availability. */\n  retention?: string;\n  /** Duration of the availability blob. */\n  blobDuration?: string;\n}\n\n/** Dimension of the metric. */\nexport interface Dimension {\n  /** The name of the dimension. */\n  name?: string;\n  /** The display name of the dimension. */\n  displayName?: string;\n  /** The internal name of the dimension. */\n  internalName?: string;\n}\n\n/** Description of logging specification. */\nexport interface LogSpecification {\n  /** The name of the specification. */\n  name?: string;\n  /** The display name of the specification. */\n  displayName?: string;\n  /** Duration of the blob. */\n  blobDuration?: string;\n}\n\n/** Response for the ListPrivateEndpoints API service call. */\nexport interface PrivateEndpointListResult {\n  /** A list of private endpoint resources in a resource group. */\n  value?: PrivateEndpoint[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An array of available PrivateEndpoint types. */\nexport interface AvailablePrivateEndpointTypesResult {\n  /** An array of available privateEndpoint type. */\n  value?: AvailablePrivateEndpointType[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The information of an AvailablePrivateEndpointType. */\nexport interface AvailablePrivateEndpointType {\n  /** The name of the service and resource. */\n  name?: string;\n  /** A unique identifier of the AvailablePrivateEndpoint Type resource. */\n  id?: string;\n  /** Resource type. */\n  type?: string;\n  /** The name of the service and resource. */\n  resourceName?: string;\n  /** Display name of the resource. */\n  displayName?: string;\n}\n\n/** PrivateDnsZoneConfig resource. */\nexport interface PrivateDnsZoneConfig {\n  /** Name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /** The resource id of the private dns zone. */\n  privateDnsZoneId?: string;\n  /**\n   * A collection of information regarding a recordSet, holding information to identify private resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recordSets?: RecordSet[];\n}\n\n/** A collective group of information about the record set information. */\nexport interface RecordSet {\n  /** Resource record type. */\n  recordType?: string;\n  /** Recordset name. */\n  recordSetName?: string;\n  /** Fqdn that resolves to private endpoint ip address. */\n  fqdn?: string;\n  /**\n   * The provisioning state of the recordset.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Recordset time to live. */\n  ttl?: number;\n  /** The private ip address of the private endpoint. */\n  ipAddresses?: string[];\n}\n\n/** Response for the ListPrivateDnsZoneGroups API service call. */\nexport interface PrivateDnsZoneGroupListResult {\n  /** A list of private dns zone group resources in a private endpoint. */\n  value?: PrivateDnsZoneGroup[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for the ListPrivateLinkService API service call. */\nexport interface PrivateLinkServiceListResult {\n  /** A list of PrivateLinkService resources in a resource group. */\n  value?: PrivateLinkService[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for the ListPrivateEndpointConnection API service call. */\nexport interface PrivateEndpointConnectionListResult {\n  /** A list of PrivateEndpointConnection resources for a specific private link service. */\n  value?: PrivateEndpointConnection[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Request body of the CheckPrivateLinkServiceVisibility API service call. */\nexport interface CheckPrivateLinkServiceVisibilityRequest {\n  /** The alias of the private link service. */\n  privateLinkServiceAlias?: string;\n}\n\n/** Response for the CheckPrivateLinkServiceVisibility API service call. */\nexport interface PrivateLinkServiceVisibility {\n  /** Private Link Service Visibility (True/False). */\n  visible?: boolean;\n}\n\n/** An array of private link service id that can be linked to a private end point with auto approved. */\nexport interface AutoApprovedPrivateLinkServicesResult {\n  /** An array of auto approved private link service. */\n  value?: AutoApprovedPrivateLinkService[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The information of an AutoApprovedPrivateLinkService. */\nexport interface AutoApprovedPrivateLinkService {\n  /** The id of the private link service resource. */\n  privateLinkService?: string;\n}\n\n/** Response for GetPublicIpAddressDdosProtectionStatusOperation API service call. */\nexport interface PublicIpDdosProtectionStatusResult {\n  /** Public IP ARM resource ID */\n  publicIpAddressId?: string;\n  /** IP Address of the Public IP Resource */\n  publicIpAddress?: string;\n  /** Value indicating whether the IP address is DDoS workload protected or not. */\n  isWorkloadProtected?: IsWorkloadProtected;\n  /**  DDoS protection plan Resource Id of a if IP address is protected through a plan. */\n  ddosProtectionPlanId?: string;\n}\n\n/** SKU of a public IP prefix. */\nexport interface PublicIPPrefixSku {\n  /** Name of a public IP prefix SKU. */\n  name?: PublicIPPrefixSkuName;\n  /** Tier of a public IP prefix SKU. */\n  tier?: PublicIPPrefixSkuTier;\n}\n\n/** Reference to a public IP address. */\nexport interface ReferencedPublicIpAddress {\n  /** The PublicIPAddress Reference. */\n  id?: string;\n}\n\n/** Response for ListPublicIpPrefixes API service call. */\nexport interface PublicIPPrefixListResult {\n  /** A list of public IP prefixes that exists in a resource group. */\n  value?: PublicIPPrefix[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for the ListRouteFilters API service call. */\nexport interface RouteFilterListResult {\n  /** A list of route filters in a resource group. */\n  value?: RouteFilter[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for the ListRouteFilterRules API service call. */\nexport interface RouteFilterRuleListResult {\n  /** A list of RouteFilterRules in a resource group. */\n  value?: RouteFilterRule[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for the ListRouteTable API service call. */\nexport interface RouteTableListResult {\n  /** A list of route tables in a resource group. */\n  value?: RouteTable[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for the ListRoute API service call. */\nexport interface RouteListResult {\n  /** A list of routes in a resource group. */\n  value?: Route[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListSecurityPartnerProviders API service call. */\nexport interface SecurityPartnerProviderListResult {\n  /** List of Security Partner Providers in a resource group. */\n  value?: SecurityPartnerProvider[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for the ListServiceCommunity API service call. */\nexport interface BgpServiceCommunityListResult {\n  /** A list of service community resources. */\n  value?: BgpServiceCommunity[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Contains bgp community information offered in Service Community resources. */\nexport interface BGPCommunity {\n  /** The region which the service support. e.g. For O365, region is Global. */\n  serviceSupportedRegion?: string;\n  /** The name of the bgp community. e.g. Skype. */\n  communityName?: string;\n  /** The value of the bgp community. For more information: https://docs.microsoft.com/en-us/azure/expressroute/expressroute-routing. */\n  communityValue?: string;\n  /** The prefixes that the bgp community contains. */\n  communityPrefixes?: string[];\n  /** Customer is authorized to use bgp community or not. */\n  isAuthorizedToUse?: boolean;\n  /** The service group of the bgp community contains. */\n  serviceGroup?: string;\n}\n\n/** Response for ListServiceEndpointPolicies API service call. */\nexport interface ServiceEndpointPolicyListResult {\n  /** A list of ServiceEndpointPolicy resources. */\n  value?: ServiceEndpointPolicy[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListServiceEndpointPolicyDefinition API service call. Retrieves all service endpoint policy definition that belongs to a service endpoint policy. */\nexport interface ServiceEndpointPolicyDefinitionListResult {\n  /** The service endpoint policy definition in a service endpoint policy. */\n  value?: ServiceEndpointPolicyDefinition[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for the ListServiceTags API service call. */\nexport interface ServiceTagsListResult {\n  /**\n   * The name of the cloud.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The ID of the cloud.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The azure resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The iteration number.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changeNumber?: string;\n  /**\n   * The name of the cloud.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cloud?: string;\n  /**\n   * The list of service tag information resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly values?: ServiceTagInformation[];\n  /**\n   * The URL to get next page of service tag information resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The service tag information. */\nexport interface ServiceTagInformation {\n  /**\n   * Properties of the service tag information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: ServiceTagInformationPropertiesFormat;\n  /**\n   * The name of service tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The ID of service tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The iteration number of service tag object for region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceTagChangeNumber?: string;\n}\n\n/** Properties of the service tag information. */\nexport interface ServiceTagInformationPropertiesFormat {\n  /**\n   * The iteration number of service tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changeNumber?: string;\n  /**\n   * The region of service tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly region?: string;\n  /**\n   * The name of system service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemService?: string;\n  /**\n   * The list of IP address prefixes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly addressPrefixes?: string[];\n  /**\n   * The state of the service tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n}\n\n/** Response for Get ServiceTagInformation API service call. Retrieves the list of service tag information resources. */\nexport interface ServiceTagInformationListResult {\n  /** The list of service tag information resources. */\n  value?: ServiceTagInformation[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The list usages operation response. */\nexport interface UsagesListResult {\n  /** The list network resource usages. */\n  value?: Usage[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** The network resource usage. */\nexport interface Usage {\n  /**\n   * Resource identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** An enum describing the unit of measurement. */\n  unit: UsageUnit;\n  /** The current value of the usage. */\n  currentValue: number;\n  /** The limit of usage. */\n  limit: number;\n  /** The name of the type of usage. */\n  name: UsageName;\n}\n\n/** The usage names. */\nexport interface UsageName {\n  /** A string describing the resource name. */\n  value?: string;\n  /** A localized string describing the resource name. */\n  localizedValue?: string;\n}\n\n/** AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network. */\nexport interface AddressSpace {\n  /** A list of address blocks reserved for this virtual network in CIDR notation. */\n  addressPrefixes?: string[];\n  /** A list of IPAM Pools allocating IP address prefixes. */\n  ipamPoolPrefixAllocations?: IpamPoolPrefixAllocation[];\n}\n\n/** DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options. */\nexport interface DhcpOptions {\n  /** The list of DNS servers IP addresses. */\n  dnsServers?: string[];\n}\n\n/** Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET. */\nexport interface VirtualNetworkBgpCommunities {\n  /** The BGP community associated with the virtual network. */\n  virtualNetworkCommunity: string;\n  /**\n   * The BGP community associated with the region of the virtual network.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly regionalCommunity?: string;\n}\n\n/** Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet. */\nexport interface VirtualNetworkEncryption {\n  /** Indicates if encryption is enabled on the virtual network. */\n  enabled: boolean;\n  /** If the encrypted VNet allows VM that does not support encryption. This field is for future support, AllowUnencrypted is the only supported value at general availability. */\n  enforcement?: VirtualNetworkEncryptionEnforcement;\n}\n\n/** Response for the ListVirtualNetworks API service call. */\nexport interface VirtualNetworkListResult {\n  /** A list of VirtualNetwork resources in a resource group. */\n  value?: VirtualNetwork[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Details of PrepareNetworkPolicies for Subnet. */\nexport interface PrepareNetworkPoliciesRequest {\n  /** The name of the service for which subnet is being prepared for. */\n  serviceName?: string;\n  /** A list of NetworkIntentPolicyConfiguration. */\n  networkIntentPolicyConfigurations?: NetworkIntentPolicyConfiguration[];\n}\n\n/** Details of NetworkIntentPolicyConfiguration for PrepareNetworkPoliciesRequest. */\nexport interface NetworkIntentPolicyConfiguration {\n  /** The name of the Network Intent Policy for storing in target subscription. */\n  networkIntentPolicyName?: string;\n  /** Source network intent policy. */\n  sourceNetworkIntentPolicy?: NetworkIntentPolicy;\n}\n\n/** Details of UnprepareNetworkPolicies for Subnet. */\nexport interface UnprepareNetworkPoliciesRequest {\n  /** The name of the service for which subnet is being unprepared for. */\n  serviceName?: string;\n}\n\n/** Response for ResourceNavigationLinks_List operation. */\nexport interface ResourceNavigationLinksListResult {\n  /** The resource navigation links in a subnet. */\n  value?: ResourceNavigationLink[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ServiceAssociationLinks_List operation. */\nexport interface ServiceAssociationLinksListResult {\n  /** The service association links in a subnet. */\n  value?: ServiceAssociationLink[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for ListSubnets API service callRetrieves all subnet that belongs to a virtual network. */\nexport interface SubnetListResult {\n  /** The subnets in a virtual network. */\n  value?: Subnet[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListSubnets API service call. Retrieves all subnets that belong to a virtual network. */\nexport interface VirtualNetworkPeeringListResult {\n  /** The peerings in a virtual network. */\n  value?: VirtualNetworkPeering[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for CheckIPAddressAvailability API service call. */\nexport interface IPAddressAvailabilityResult {\n  /** Private IP address availability. */\n  available?: boolean;\n  /** Contains other available private IP addresses if the asked for address is taken. */\n  availableIPAddresses?: string[];\n  /** Private IP address platform reserved. */\n  isPlatformReserved?: boolean;\n}\n\n/** Response for the virtual networks GetUsage API service call. */\nexport interface VirtualNetworkListUsageResult {\n  /**\n   * VirtualNetwork usage stats.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: VirtualNetworkUsage[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Usage details for subnet. */\nexport interface VirtualNetworkUsage {\n  /**\n   * Indicates number of IPs used from the Subnet.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * Subnet identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Indicates the size of the subnet.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * The name containing common and localized value for usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: VirtualNetworkUsageName;\n  /**\n   * Usage units. Returns 'Count'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n}\n\n/** Usage strings container. */\nexport interface VirtualNetworkUsageName {\n  /**\n   * Localized subnet size and usage string.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n  /**\n   * Subnet size and usage string.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** Response for GetVirtualNetworkDdosProtectionStatusOperation. */\nexport interface VirtualNetworkDdosProtectionStatusResult {\n  /** The Ddos Protection Status Result for each public ip under a virtual network. */\n  value?: PublicIpDdosProtectionStatusResult[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Virtual Network Gateway Autoscale Configuration details */\nexport interface VirtualNetworkGatewayAutoScaleConfiguration {\n  /** The bounds of the autoscale configuration */\n  bounds?: VirtualNetworkGatewayAutoScaleBounds;\n}\n\nexport interface VirtualNetworkGatewayAutoScaleBounds {\n  /** Minimum scale Units for Autoscale configuration */\n  min?: number;\n  /** Maximum Scale Units for Autoscale configuration */\n  max?: number;\n}\n\n/** VirtualNetworkGatewaySku details. */\nexport interface VirtualNetworkGatewaySku {\n  /** Gateway SKU name. */\n  name?: VirtualNetworkGatewaySkuName;\n  /** Gateway SKU tier. */\n  tier?: VirtualNetworkGatewaySkuTier;\n  /**\n   * The capacity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacity?: number;\n}\n\n/** VpnClientConfiguration for P2S client. */\nexport interface VpnClientConfiguration {\n  /** The reference to the address space resource which represents Address space for P2S VpnClient. */\n  vpnClientAddressPool?: AddressSpace;\n  /** VpnClientRootCertificate for virtual network gateway. */\n  vpnClientRootCertificates?: VpnClientRootCertificate[];\n  /** VpnClientRevokedCertificate for Virtual network gateway. */\n  vpnClientRevokedCertificates?: VpnClientRevokedCertificate[];\n  /** VpnClientProtocols for Virtual network gateway. */\n  vpnClientProtocols?: VpnClientProtocol[];\n  /** VPN authentication types for the virtual network gateway.. */\n  vpnAuthenticationTypes?: VpnAuthenticationType[];\n  /** VpnClientIpsecPolicies for virtual network gateway P2S client. */\n  vpnClientIpsecPolicies?: IpsecPolicy[];\n  /** The radius server address property of the VirtualNetworkGateway resource for vpn client connection. */\n  radiusServerAddress?: string;\n  /** The radius secret property of the VirtualNetworkGateway resource for vpn client connection. */\n  radiusServerSecret?: string;\n  /** The radiusServers property for multiple radius server configuration. */\n  radiusServers?: RadiusServer[];\n  /** The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication. */\n  aadTenant?: string;\n  /** The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication. */\n  aadAudience?: string;\n  /** The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication. */\n  aadIssuer?: string;\n  /** per ip address pool connection policy for virtual network gateway P2S client. */\n  vngClientConnectionConfigurations?: VngClientConnectionConfiguration[];\n}\n\n/** An IPSec Policy configuration for a virtual network gateway connection. */\nexport interface IpsecPolicy {\n  /** The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel. */\n  saLifeTimeSeconds: number;\n  /** The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel. */\n  saDataSizeKilobytes: number;\n  /** The IPSec encryption algorithm (IKE phase 1). */\n  ipsecEncryption: IpsecEncryption;\n  /** The IPSec integrity algorithm (IKE phase 1). */\n  ipsecIntegrity: IpsecIntegrity;\n  /** The IKE encryption algorithm (IKE phase 2). */\n  ikeEncryption: IkeEncryption;\n  /** The IKE integrity algorithm (IKE phase 2). */\n  ikeIntegrity: IkeIntegrity;\n  /** The DH Group used in IKE Phase 1 for initial SA. */\n  dhGroup: DhGroup;\n  /** The Pfs Group used in IKE Phase 2 for new child SA. */\n  pfsGroup: PfsGroup;\n}\n\n/** Radius Server Settings. */\nexport interface RadiusServer {\n  /** The address of this radius server. */\n  radiusServerAddress: string;\n  /** The initial score assigned to this radius server. */\n  radiusServerScore?: number;\n  /** The secret used for this radius server. */\n  radiusServerSecret?: string;\n}\n\n/** Vpn Client Connection configuration PolicyGroup member */\nexport interface VirtualNetworkGatewayPolicyGroupMember {\n  /** Name of the VirtualNetworkGatewayPolicyGroupMember. */\n  name?: string;\n  /** The Vpn Policy member attribute type. */\n  attributeType?: VpnPolicyMemberAttributeType;\n  /** The value of Attribute used for this VirtualNetworkGatewayPolicyGroupMember. */\n  attributeValue?: string;\n}\n\n/** BGP settings details. */\nexport interface BgpSettings {\n  /** The BGP speaker's ASN. */\n  asn?: number;\n  /** The BGP peering address and BGP identifier of this BGP speaker. */\n  bgpPeeringAddress?: string;\n  /** The weight added to routes learned from this BGP speaker. */\n  peerWeight?: number;\n  /** BGP peering address with IP configuration ID for virtual network gateway. */\n  bgpPeeringAddresses?: IPConfigurationBgpPeeringAddress[];\n}\n\n/** Properties of IPConfigurationBgpPeeringAddress. */\nexport interface IPConfigurationBgpPeeringAddress {\n  /** The ID of IP configuration which belongs to gateway. */\n  ipconfigurationId?: string;\n  /**\n   * The list of default BGP peering addresses which belong to IP configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultBgpIpAddresses?: string[];\n  /** The list of custom BGP peering addresses which belong to IP configuration. */\n  customBgpIpAddresses?: string[];\n  /**\n   * The list of tunnel public IP addresses which belong to IP configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tunnelIpAddresses?: string[];\n}\n\n/** Vpn NatRule mapping. */\nexport interface VpnNatRuleMapping {\n  /** Address space for Vpn NatRule mapping. */\n  addressSpace?: string;\n  /** Port range for Vpn NatRule mapping. */\n  portRange?: string;\n}\n\n/** Response for the ListVirtualNetworkGateways API service call. */\nexport interface VirtualNetworkGatewayListResult {\n  /** A list of VirtualNetworkGateway resources that exists in a resource group. */\n  value?: VirtualNetworkGateway[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Response for the VirtualNetworkGatewayListConnections API service call. */\nexport interface VirtualNetworkGatewayListConnectionsResult {\n  /** A list of VirtualNetworkGatewayConnection resources that exists in a resource group. */\n  value?: VirtualNetworkGatewayConnectionListEntity[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A reference to VirtualNetworkGateway or LocalNetworkGateway resource. */\nexport interface VirtualNetworkConnectionGatewayReference {\n  /** The ID of VirtualNetworkGateway or LocalNetworkGateway resource. */\n  id: string;\n}\n\n/** VirtualNetworkGatewayConnection properties. */\nexport interface TunnelConnectionHealth {\n  /**\n   * Tunnel name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tunnel?: string;\n  /**\n   * Virtual Network Gateway connection status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionStatus?: VirtualNetworkGatewayConnectionStatus;\n  /**\n   * The Ingress Bytes Transferred in this connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingressBytesTransferred?: number;\n  /**\n   * The Egress Bytes Transferred in this connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly egressBytesTransferred?: number;\n  /**\n   * The time at which connection was established in Utc format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastConnectionEstablishedUtcTime?: string;\n}\n\n/** GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection. */\nexport interface GatewayCustomBgpIpAddressIpConfiguration {\n  /** The IpconfigurationId of ipconfiguration which belongs to gateway. */\n  ipConfigurationId: string;\n  /** The custom BgpPeeringAddress which belongs to IpconfigurationId. */\n  customBgpIpAddress: string;\n}\n\n/** An traffic selector policy for a virtual network gateway connection. */\nexport interface TrafficSelectorPolicy {\n  /** A collection of local address spaces in CIDR format. */\n  localAddressRanges: string[];\n  /** A collection of remote address spaces in CIDR format. */\n  remoteAddressRanges: string[];\n}\n\n/** Vpn Client Parameters for package generation. */\nexport interface VpnClientParameters {\n  /** VPN client Processor Architecture. */\n  processorArchitecture?: ProcessorArchitecture;\n  /** VPN client authentication method. */\n  authenticationMethod?: AuthenticationMethod;\n  /** The public certificate data for the radius server authentication certificate as a Base-64 encoded string. Required only if external radius authentication has been configured with EAPTLS authentication. */\n  radiusServerAuthCertificate?: string;\n  /** A list of client root certificates public certificate data encoded as Base-64 strings. Optional parameter for external radius based authentication with EAPTLS. */\n  clientRootCertificates?: string[];\n}\n\n/** Response for list BGP peer status API service call. */\nexport interface BgpPeerStatusListResult {\n  /** List of BGP peers. */\n  value?: BgpPeerStatus[];\n}\n\n/** BGP peer status details. */\nexport interface BgpPeerStatus {\n  /**\n   * The virtual network gateway's local address.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localAddress?: string;\n  /**\n   * The remote BGP peer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly neighbor?: string;\n  /**\n   * The autonomous system number of the remote BGP peer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly asn?: number;\n  /**\n   * The BGP peer state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: BgpPeerState;\n  /**\n   * For how long the peering has been up.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectedDuration?: string;\n  /**\n   * The number of routes learned from this peer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly routesReceived?: number;\n  /**\n   * The number of BGP messages sent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly messagesSent?: number;\n  /**\n   * The number of BGP messages received.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly messagesReceived?: number;\n}\n\n/** List of virtual network gateway routes. */\nexport interface GatewayRouteListResult {\n  /** List of gateway routes. */\n  value?: GatewayRoute[];\n}\n\n/** Gateway routing details. */\nexport interface GatewayRoute {\n  /**\n   * The gateway's local address.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localAddress?: string;\n  /**\n   * The route's network prefix.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly network?: string;\n  /**\n   * The route's next hop.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextHop?: string;\n  /**\n   * The peer this route was learned from.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourcePeer?: string;\n  /**\n   * The source this route was learned from.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: string;\n  /**\n   * The route's AS path sequence.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly asPath?: string;\n  /**\n   * The route's weight.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly weight?: number;\n}\n\n/** An IPSec parameters for a virtual network gateway P2S connection. */\nexport interface VpnClientIPsecParameters {\n  /** The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for P2S client. */\n  saLifeTimeSeconds: number;\n  /** The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for P2S client.. */\n  saDataSizeKilobytes: number;\n  /** The IPSec encryption algorithm (IKE phase 1). */\n  ipsecEncryption: IpsecEncryption;\n  /** The IPSec integrity algorithm (IKE phase 1). */\n  ipsecIntegrity: IpsecIntegrity;\n  /** The IKE encryption algorithm (IKE phase 2). */\n  ikeEncryption: IkeEncryption;\n  /** The IKE integrity algorithm (IKE phase 2). */\n  ikeIntegrity: IkeIntegrity;\n  /** The DH Group used in IKE Phase 1 for initial SA. */\n  dhGroup: DhGroup;\n  /** The Pfs Group used in IKE Phase 2 for new child SA. */\n  pfsGroup: PfsGroup;\n}\n\n/** Vpn device configuration script generation parameters. */\nexport interface VpnDeviceScriptParameters {\n  /** The vendor for the vpn device. */\n  vendor?: string;\n  /** The device family for the vpn device. */\n  deviceFamily?: string;\n  /** The firmware version for the vpn device. */\n  firmwareVersion?: string;\n}\n\n/** Start packet capture parameters on virtual network gateway. */\nexport interface VpnPacketCaptureStartParameters {\n  /** Start Packet capture parameters. */\n  filterData?: string;\n}\n\n/** Stop packet capture parameters. */\nexport interface VpnPacketCaptureStopParameters {\n  /** SAS url for packet capture on virtual network gateway. */\n  sasUrl?: string;\n}\n\n/** ExpressRoute failover test details */\nexport interface ExpressRouteFailoverTestDetails {\n  /** Peering location of the test */\n  peeringLocation?: string;\n  /** All circuits in the peering location */\n  circuits?: ExpressRouteFailoverCircuitResourceDetails[];\n  /** The current status of the test */\n  status?: FailoverTestStatus;\n  /** Time when the test was started */\n  startTime?: string;\n  /** Time when the test was completed */\n  endTime?: string;\n  /** All connections to the circuits in the peering location */\n  connections?: ExpressRouteFailoverConnectionResourceDetails[];\n  /** The unique GUID associated with the test */\n  testGuid?: string;\n  /** The type of failover test */\n  testType?: FailoverTestType;\n  /** A list of all issues with the test */\n  issues?: string[];\n}\n\nexport interface ExpressRouteFailoverCircuitResourceDetails {\n  /** NRP Resource URI of the circuit */\n  nrpResourceUri?: string;\n  /** Circuit Name */\n  name?: string;\n  /** Connection name associated with the circuit */\n  connectionName?: string;\n}\n\nexport interface ExpressRouteFailoverConnectionResourceDetails {\n  /** NRP Resource URI of the connection */\n  nrpResourceUri?: string;\n  /** Connection Name */\n  name?: string;\n  /** The current status of the connection */\n  status?: FailoverConnectionStatus;\n  /** Time when the connection was last updated */\n  lastUpdatedTime?: string;\n}\n\n/** ExpressRoute failover single test details */\nexport interface ExpressRouteFailoverSingleTestDetails {\n  /** Peering location of the test */\n  peeringLocation?: string;\n  /** The current status of the test */\n  status?: FailoverTestStatusForSingleTest;\n  /** Time when the test was started */\n  startTimeUtc?: string;\n  /** Time when the test was completed */\n  endTimeUtc?: string;\n  /** List of routes received from this peering as well as some other peering location */\n  redundantRoutes?: ExpressRouteFailoverRedundantRoute[];\n  /** List of al the routes that were received only from this peering location */\n  nonRedundantRoutes?: string[];\n  /** Whether the failover simulation was successful or not */\n  wasSimulationSuccessful?: boolean;\n  /** List of all the failover connections for this peering location */\n  failoverConnectionDetails?: FailoverConnectionDetails[];\n}\n\nexport interface ExpressRouteFailoverRedundantRoute {\n  /** A list of all the peering locations for the redundant routes */\n  peeringLocations?: string[];\n  /** A list of all the redundant routes in the peering locations */\n  routes?: string[];\n}\n\nexport interface FailoverConnectionDetails {\n  /** Name of the failover connection */\n  failoverConnectionName?: string;\n  /** Location of the failover connection */\n  failoverLocation?: string;\n  /** Whether the customer was able to establish connectivity through this failover connection or not */\n  isVerified?: boolean;\n}\n\n/** Start packet capture parameters on virtual network gateway. */\nexport interface ExpressRouteFailoverStopApiParameters {\n  /** Peering location of the test */\n  peeringLocation?: string;\n  /** Whether the failover simulation was successful or not */\n  wasSimulationSuccessful?: boolean;\n  /** List of all the failover connections for this peering location */\n  details?: FailoverConnectionDetails[];\n}\n\n/** Response for the ListVirtualNetworkGatewayConnections API service call. */\nexport interface VirtualNetworkGatewayConnectionListResult {\n  /** A list of VirtualNetworkGatewayConnection resources that exists in a resource group. */\n  value?: VirtualNetworkGatewayConnection[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The virtual network connection reset shared key. */\nexport interface ConnectionResetSharedKey {\n  /** The virtual network connection reset shared key length, should between 1 and 128. */\n  keyLength: number;\n}\n\n/** Response for ListLocalNetworkGateways API service call. */\nexport interface LocalNetworkGatewayListResult {\n  /** A list of local network gateways that exists in a resource group. */\n  value?: LocalNetworkGateway[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of virtual network gateway vpn client connection health. */\nexport interface VpnClientConnectionHealthDetailListResult {\n  /** List of vpn client connection health. */\n  value?: VpnClientConnectionHealthDetail[];\n}\n\n/** VPN client connection health detail. */\nexport interface VpnClientConnectionHealthDetail {\n  /**\n   * The vpn client Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vpnConnectionId?: string;\n  /**\n   * The duration time of a connected vpn client.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vpnConnectionDuration?: number;\n  /**\n   * The start time of a connected vpn client.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vpnConnectionTime?: string;\n  /**\n   * The public Ip of a connected vpn client.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpAddress?: string;\n  /**\n   * The assigned private Ip of a connected vpn client.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIpAddress?: string;\n  /**\n   * The user name of a connected vpn client.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vpnUserName?: string;\n  /**\n   * The max band width.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxBandwidth?: number;\n  /**\n   * The egress packets per second.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly egressPacketsTransferred?: number;\n  /**\n   * The egress bytes per second.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly egressBytesTransferred?: number;\n  /**\n   * The ingress packets per second.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingressPacketsTransferred?: number;\n  /**\n   * The ingress bytes per second.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingressBytesTransferred?: number;\n  /**\n   * The max packets transferred per second.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxPacketsPerSecond?: number;\n}\n\n/** List of p2s vpn connections to be disconnected. */\nexport interface P2SVpnConnectionRequest {\n  /** List of p2s vpn connection Ids. */\n  vpnConnectionIds?: string[];\n}\n\n/** Result of the request to list all nat rules to a virtual network gateway. It contains a list of Nat rules and a URL nextLink to get the next set of results. */\nexport interface ListVirtualNetworkGatewayNatRulesResult {\n  /** List of Nat Rules. */\n  value?: VirtualNetworkGatewayNatRule[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Response for ListVirtualNetworkTap API service call. */\nexport interface VirtualNetworkTapListResult {\n  /** A list of VirtualNetworkTaps in a resource group. */\n  value?: VirtualNetworkTap[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListVirtualRouters API service call. */\nexport interface VirtualRouterListResult {\n  /** List of Virtual Routers. */\n  value?: VirtualRouter[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Response for ListVirtualRouterPeerings API service call. */\nexport interface VirtualRouterPeeringListResult {\n  /** List of VirtualRouterPeerings in a VirtualRouter. */\n  value?: VirtualRouterPeering[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Result of the request to list VirtualWANs. It contains a list of VirtualWANs and a URL nextLink to get the next set of results. */\nexport interface ListVirtualWANsResult {\n  /** List of VirtualWANs. */\n  value?: VirtualWAN[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** List of properties of the device. */\nexport interface DeviceProperties {\n  /** Name of the device Vendor. */\n  deviceVendor?: string;\n  /** Model of the device. */\n  deviceModel?: string;\n  /** Link speed. */\n  linkSpeedInMbps?: number;\n}\n\n/** List of properties of a link provider. */\nexport interface VpnLinkProviderProperties {\n  /** Name of the link provider. */\n  linkProviderName?: string;\n  /** Link speed. */\n  linkSpeedInMbps?: number;\n}\n\n/** BGP settings details for a link. */\nexport interface VpnLinkBgpSettings {\n  /** The BGP speaker's ASN. */\n  asn?: number;\n  /** The BGP peering address and BGP identifier of this BGP speaker. */\n  bgpPeeringAddress?: string;\n}\n\n/** The Office365 breakout policy. */\nexport interface O365PolicyProperties {\n  /** Office365 breakout categories. */\n  breakOutCategories?: O365BreakOutCategoryPolicies;\n}\n\n/** Office365 breakout categories. */\nexport interface O365BreakOutCategoryPolicies {\n  /** Flag to control allow category. */\n  allow?: boolean;\n  /** Flag to control optimize category. */\n  optimize?: boolean;\n  /** Flag to control default category. */\n  default?: boolean;\n}\n\n/** Result of the request to list VpnSites. It contains a list of VpnSites and a URL nextLink to get the next set of results. */\nexport interface ListVpnSitesResult {\n  /** List of VpnSites. */\n  value?: VpnSite[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Result of the request to list VpnSiteLinks. It contains a list of VpnSiteLinks and a URL nextLink to get the next set of results. */\nexport interface ListVpnSiteLinksResult {\n  /** List of VpnSitesLinks. */\n  value?: VpnSiteLink[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** List of Vpn-Sites. */\nexport interface GetVpnSitesConfigurationRequest {\n  /** List of resource-ids of the vpn-sites for which config is to be downloaded. */\n  vpnSites?: string[];\n  /** The sas-url to download the configurations for vpn-sites. */\n  outputBlobSasUrl: string;\n}\n\n/** Collection of SecurityProviders. */\nexport interface VirtualWanSecurityProviders {\n  /** List of VirtualWAN security providers. */\n  supportedProviders?: VirtualWanSecurityProvider[];\n}\n\n/** Collection of SecurityProviders. */\nexport interface VirtualWanSecurityProvider {\n  /** Name of the security provider. */\n  name?: string;\n  /** Url of the security provider. */\n  url?: string;\n  /**\n   * Name of the security provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: VirtualWanSecurityProviderType;\n}\n\n/** Properties of VPN client root certificate of VpnServerConfiguration. */\nexport interface VpnServerConfigVpnClientRootCertificate {\n  /** The certificate name. */\n  name?: string;\n  /** The certificate public data. */\n  publicCertData?: string;\n}\n\n/** Properties of the revoked VPN client certificate of VpnServerConfiguration. */\nexport interface VpnServerConfigVpnClientRevokedCertificate {\n  /** The certificate name. */\n  name?: string;\n  /** The revoked VPN client certificate thumbprint. */\n  thumbprint?: string;\n}\n\n/** Properties of Radius Server root certificate of VpnServerConfiguration. */\nexport interface VpnServerConfigRadiusServerRootCertificate {\n  /** The certificate name. */\n  name?: string;\n  /** The certificate public data. */\n  publicCertData?: string;\n}\n\n/** Properties of the Radius client root certificate of VpnServerConfiguration. */\nexport interface VpnServerConfigRadiusClientRootCertificate {\n  /** The certificate name. */\n  name?: string;\n  /** The Radius client root certificate thumbprint. */\n  thumbprint?: string;\n}\n\n/** AAD Vpn authentication type related parameters. */\nexport interface AadAuthenticationParameters {\n  /** AAD Vpn authentication parameter AAD tenant. */\n  aadTenant?: string;\n  /** AAD Vpn authentication parameter AAD audience. */\n  aadAudience?: string;\n  /** AAD Vpn authentication parameter AAD issuer. */\n  aadIssuer?: string;\n}\n\n/** Routing Configuration indicating the associated and propagated route tables for this connection. */\nexport interface RoutingConfiguration {\n  /** The resource id RouteTable associated with this RoutingConfiguration. */\n  associatedRouteTable?: SubResource;\n  /** The list of RouteTables to advertise the routes to. */\n  propagatedRouteTables?: PropagatedRouteTable;\n  /** List of routes that control routing from VirtualHub into a virtual network connection. */\n  vnetRoutes?: VnetRoute;\n  /** The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes. */\n  inboundRouteMap?: SubResource;\n  /** The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes. */\n  outboundRouteMap?: SubResource;\n}\n\n/** The list of RouteTables to advertise the routes to. */\nexport interface PropagatedRouteTable {\n  /** The list of labels. */\n  labels?: string[];\n  /** The list of resource ids of all the RouteTables. */\n  ids?: SubResource[];\n}\n\n/** List of routes that control routing from VirtualHub into a virtual network connection. */\nexport interface VnetRoute {\n  /** Configuration for static routes on this HubVnetConnection. */\n  staticRoutesConfig?: StaticRoutesConfig;\n  /** List of all Static Routes. */\n  staticRoutes?: StaticRoute[];\n  /**\n   * The list of references to HubBgpConnection objects.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly bgpConnections?: SubResource[];\n}\n\n/** Configuration for static routes on this HubVnetConnectionConfiguration for static routes on this HubVnetConnection. */\nexport interface StaticRoutesConfig {\n  /**\n   * Boolean indicating whether static routes on this connection are automatically propagate to route tables which this connection propagates to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly propagateStaticRoutes?: boolean;\n  /** Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke. */\n  vnetLocalRouteOverrideCriteria?: VnetLocalRouteOverrideCriteria;\n}\n\n/** List of all Static Routes. */\nexport interface StaticRoute {\n  /** The name of the StaticRoute that is unique within a VnetRoute. */\n  name?: string;\n  /** List of all address prefixes. */\n  addressPrefixes?: string[];\n  /** The ip address of the next hop. */\n  nextHopIpAddress?: string;\n}\n\n/** VpnServerConfiguration PolicyGroup member */\nexport interface VpnServerConfigurationPolicyGroupMember {\n  /** Name of the VpnServerConfigurationPolicyGroupMember. */\n  name?: string;\n  /** The Vpn Policy member attribute type. */\n  attributeType?: VpnPolicyMemberAttributeType;\n  /** The value of Attribute used for this VpnServerConfigurationPolicyGroupMember. */\n  attributeValue?: string;\n}\n\n/** VpnClientConnectionHealth properties. */\nexport interface VpnClientConnectionHealth {\n  /**\n   * Total of the Ingress Bytes Transferred in this P2S Vpn connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalIngressBytesTransferred?: number;\n  /**\n   * Total of the Egress Bytes Transferred in this connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalEgressBytesTransferred?: number;\n  /** The total of p2s vpn clients connected at this time to this P2SVpnGateway. */\n  vpnClientConnectionsCount?: number;\n  /** List of allocated ip addresses to the connected p2s vpn clients. */\n  allocatedIpAddresses?: string[];\n}\n\n/** Result of the request to list all VpnServerConfigurations. It contains a list of VpnServerConfigurations and a URL nextLink to get the next set of results. */\nexport interface ListVpnServerConfigurationsResult {\n  /** List of VpnServerConfigurations. */\n  value?: VpnServerConfiguration[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Result of the request to list VpnServerConfigurationPolicyGroups. It contains a list of VpnServerConfigurationPolicyGroups and a URL nextLink to get the next set of results. */\nexport interface ListVpnServerConfigurationPolicyGroupsResult {\n  /** List of VpnServerConfigurationPolicyGroups. */\n  value?: VpnServerConfigurationPolicyGroup[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** VirtualHub route table. */\nexport interface VirtualHubRouteTable {\n  /** List of all routes. */\n  routes?: VirtualHubRoute[];\n}\n\n/** VirtualHub route. */\nexport interface VirtualHubRoute {\n  /** List of all addressPrefixes. */\n  addressPrefixes?: string[];\n  /** NextHop ip address. */\n  nextHopIpAddress?: string;\n}\n\n/** VirtualHubRouteTableV2 route. */\nexport interface VirtualHubRouteV2 {\n  /** The type of destinations. */\n  destinationType?: string;\n  /** List of all destinations. */\n  destinations?: string[];\n  /** The type of next hops. */\n  nextHopType?: string;\n  /** NextHops ip address. */\n  nextHops?: string[];\n}\n\n/** The VirtualHub Router autoscale configuration. */\nexport interface VirtualRouterAutoScaleConfiguration {\n  /** The minimum number of scale units for VirtualHub Router. */\n  minCapacity?: number;\n}\n\n/** Result of the request to list VirtualHubs. It contains a list of VirtualHubs and a URL nextLink to get the next set of results. */\nexport interface ListVirtualHubsResult {\n  /** List of VirtualHubs. */\n  value?: VirtualHub[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** A RouteMap Rule. */\nexport interface RouteMapRule {\n  /** The unique name for the rule. */\n  name?: string;\n  /** List of matching criterion which will be applied to traffic. */\n  matchCriteria?: Criterion[];\n  /** List of actions which will be applied on a match. */\n  actions?: Action[];\n  /** Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'. */\n  nextStepIfMatched?: NextStep;\n}\n\n/** A matching criteria which matches routes based on route prefix, community, and AS path. */\nexport interface Criterion {\n  /** List of route prefixes which this criteria matches. */\n  routePrefix?: string[];\n  /** List of BGP communities which this criteria matches. */\n  community?: string[];\n  /** List of AS paths which this criteria matches. */\n  asPath?: string[];\n  /** Match condition to apply RouteMap rules. */\n  matchCondition?: RouteMapMatchCondition;\n}\n\n/** Action to be taken on a route matching a RouteMap criterion. */\nexport interface Action {\n  /** Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.' */\n  type?: RouteMapActionType;\n  /** List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added */\n  parameters?: Parameter[];\n}\n\n/** Parameters for an Action. */\nexport interface Parameter {\n  /** List of route prefixes. */\n  routePrefix?: string[];\n  /** List of BGP communities. */\n  community?: string[];\n  /** List of AS paths. */\n  asPath?: string[];\n}\n\n/** List of RouteMaps and a URL nextLink to get the next set of results. */\nexport interface ListRouteMapsResult {\n  /** List of RouteMaps. */\n  value?: RouteMap[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** List of HubVirtualNetworkConnections and a URL nextLink to get the next set of results. */\nexport interface ListHubVirtualNetworkConnectionsResult {\n  /** List of HubVirtualNetworkConnections. */\n  value?: HubVirtualNetworkConnection[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** IP Configuration of a VPN Gateway Resource. */\nexport interface VpnGatewayIpConfiguration {\n  /** The identifier of the IP configuration for a VPN Gateway. */\n  id?: string;\n  /** The public IP address of this IP configuration. */\n  publicIpAddress?: string;\n  /** The private IP address of this IP configuration. */\n  privateIpAddress?: string;\n}\n\n/** Start packet capture parameters. */\nexport interface VpnGatewayPacketCaptureStartParameters {\n  /** Start Packet capture parameters on vpn gateway. */\n  filterData?: string;\n}\n\n/** Stop packet capture parameters. */\nexport interface VpnGatewayPacketCaptureStopParameters {\n  /** SAS url for packet capture on vpn gateway. */\n  sasUrl?: string;\n}\n\n/** The list of shared keys for the vpn link connection. It should only contain one shared key for each vpn link connection. */\nexport interface ConnectionSharedKeyResultList {\n  /** List of SharedKeys. */\n  value?: ConnectionSharedKeyResult[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Parameters for SharedKey. */\nexport interface SharedKeyProperties {\n  /** The value of the shared key for the vpn link connection. */\n  sharedKey?: string;\n  /** The length of the shared key for the vpn link connection. */\n  sharedKeyLength?: number;\n  /**\n   * The provisioning state of the SharedKey resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Result of the request to list VpnGateways. It contains a list of VpnGateways and a URL nextLink to get the next set of results. */\nexport interface ListVpnGatewaysResult {\n  /** List of VpnGateways. */\n  value?: VpnGateway[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Vpn Connection packet capture parameters supplied to start packet capture on gateway connection. */\nexport interface VpnConnectionPacketCaptureStartParameters {\n  /** Start Packet capture parameters on vpn connection. */\n  filterData?: string;\n  /** List of site link connection names. */\n  linkConnectionNames?: string[];\n}\n\n/** Vpn Connection packet capture parameters supplied to stop packet capture on gateway connection. */\nexport interface VpnConnectionPacketCaptureStopParameters {\n  /** SAS url for packet capture on vpn connection. */\n  sasUrl?: string;\n  /** List of site link connection names. */\n  linkConnectionNames?: string[];\n}\n\n/** Result of the request to list all vpn connections to a virtual wan vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results. */\nexport interface ListVpnConnectionsResult {\n  /** List of Vpn Connections. */\n  value?: VpnConnection[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Result of the request to list all vpn connections to a virtual wan vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results. */\nexport interface ListVpnSiteLinkConnectionsResult {\n  /** List of VpnSiteLinkConnections. */\n  value?: VpnSiteLinkConnection[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Result of the request to list all nat rules to a virtual wan vpn gateway. It contains a list of Nat rules and a URL nextLink to get the next set of results. */\nexport interface ListVpnGatewayNatRulesResult {\n  /** List of Nat Rules. */\n  value?: VpnGatewayNatRule[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Result of the request to list P2SVpnGateways. It contains a list of P2SVpnGateways and a URL nextLink to get the next set of results. */\nexport interface ListP2SVpnGatewaysResult {\n  /** List of P2SVpnGateways. */\n  value?: P2SVpnGateway[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Vpn Client Parameters for package generation. */\nexport interface P2SVpnProfileParameters {\n  /** VPN client authentication method. */\n  authenticationMethod?: AuthenticationMethod;\n}\n\n/** Vpn Profile Response for package generation. */\nexport interface VpnProfileResponse {\n  /** URL to the VPN profile. */\n  profileUrl?: string;\n}\n\n/** List of P2S Vpn connection health request. */\nexport interface P2SVpnConnectionHealthRequest {\n  /** The list of p2s vpn user names whose p2s vpn connection detailed health to retrieve for. */\n  vpnUserNamesFilter?: string[];\n  /** The sas-url to download the P2S Vpn connection health detail. */\n  outputBlobSasUrl?: string;\n}\n\n/** P2S Vpn connection detailed health written to sas url. */\nexport interface P2SVpnConnectionHealth {\n  /** Returned sas url of the blob to which the p2s vpn connection detailed health will be written. */\n  sasUrl?: string;\n}\n\n/** VpnServerConfigurations list associated with VirtualWan Response. */\nexport interface VpnServerConfigurationsResponse {\n  /** List of VpnServerConfigurations associated with VirtualWan. */\n  vpnServerConfigurationResourceIds?: string[];\n}\n\n/** Virtual Wan Vpn profile parameters Vpn profile generation. */\nexport interface VirtualWanVpnProfileParameters {\n  /** VpnServerConfiguration partial resource uri with which VirtualWan is associated to. */\n  vpnServerConfigurationResourceId?: string;\n  /** VPN client authentication method. */\n  authenticationMethod?: AuthenticationMethod;\n}\n\n/** List of VirtualHubRouteTableV2s and a URL nextLink to get the next set of results. */\nexport interface ListVirtualHubRouteTableV2SResult {\n  /** List of VirtualHubRouteTableV2s. */\n  value?: VirtualHubRouteTableV2[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** List of ExpressRoute gateways. */\nexport interface ExpressRouteGatewayList {\n  /** List of ExpressRoute gateways. */\n  value?: ExpressRouteGateway[];\n}\n\n/** Configuration for auto scaling. */\nexport interface ExpressRouteGatewayPropertiesAutoScaleConfiguration {\n  /** Minimum and maximum number of scale units to deploy. */\n  bounds?: ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds;\n}\n\n/** Minimum and maximum number of scale units to deploy. */\nexport interface ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds {\n  /** Minimum number of scale units deployed for ExpressRoute gateway. */\n  min?: number;\n  /** Maximum number of scale units deployed for ExpressRoute gateway. */\n  max?: number;\n}\n\n/** ExpressRoute circuit peering identifier. */\nexport interface ExpressRouteCircuitPeeringId {\n  /** The ID of the ExpressRoute circuit peering. */\n  id?: string;\n}\n\n/** Virtual Hub identifier. */\nexport interface VirtualHubId {\n  /** The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription. */\n  id?: string;\n}\n\n/** ExpressRouteConnection list. */\nexport interface ExpressRouteConnectionList {\n  /** The list of ExpressRoute connections. */\n  value?: ExpressRouteConnection[];\n}\n\n/** NetworkVirtualApplianceConnection list. */\nexport interface NetworkVirtualApplianceConnectionList {\n  /** The list of NetworkVirtualAppliance connections. */\n  value?: NetworkVirtualApplianceConnection[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** VirtualHubBgpConnections list. */\nexport interface ListVirtualHubBgpConnectionResults {\n  /** The list of VirtualHubBgpConnections. */\n  value?: BgpConnection[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Peer routing details. */\nexport interface PeerRoute {\n  /**\n   * The peer's local address.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localAddress?: string;\n  /**\n   * The route's network prefix.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly network?: string;\n  /**\n   * The route's next hop.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextHop?: string;\n  /**\n   * The peer this route was learned from.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourcePeer?: string;\n  /**\n   * The source this route was learned from.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: string;\n  /**\n   * The route's AS path sequence.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly asPath?: string;\n  /**\n   * The route's weight.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly weight?: number;\n}\n\n/** VirtualHubIpConfigurations list. */\nexport interface ListVirtualHubIpConfigurationResults {\n  /** The list of VirtualHubIpConfigurations. */\n  value?: HubIpConfiguration[];\n  /** URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** RouteTable route. */\nexport interface HubRoute {\n  /** The name of the Route that is unique within a RouteTable. This name can be used to access this route. */\n  name: string;\n  /** The type of destinations (eg: CIDR, ResourceId, Service). */\n  destinationType: string;\n  /** List of all destinations. */\n  destinations: string[];\n  /** The type of next hop (eg: ResourceId). */\n  nextHopType: string;\n  /** NextHop resource ID. */\n  nextHop: string;\n}\n\n/** List of RouteTables and a URL nextLink to get the next set of results. */\nexport interface ListHubRouteTablesResult {\n  /** List of RouteTables. */\n  value?: HubRouteTable[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** The parameters specifying the resource whose effective routes are being requested. */\nexport interface EffectiveRoutesParameters {\n  /** The resource whose effective routes are being requested. */\n  resourceId?: string;\n  /** The type of the specified resource like RouteTable, ExpressRouteConnection, HubVirtualNetworkConnection, VpnConnection and P2SConnection. */\n  virtualWanResourceType?: string;\n}\n\n/** EffectiveRoutes List. */\nexport interface VirtualHubEffectiveRouteList {\n  /** The list of effective routes configured on the virtual hub or the specified resource. */\n  value?: VirtualHubEffectiveRoute[];\n}\n\n/** The effective route configured on the virtual hub or specified resource. */\nexport interface VirtualHubEffectiveRoute {\n  /** The list of address prefixes. */\n  addressPrefixes?: string[];\n  /** The list of next hops. */\n  nextHops?: string[];\n  /** The type of the next hop. */\n  nextHopType?: string;\n  /** The ASPath of this route. */\n  asPath?: string;\n  /** The origin of this route. */\n  routeOrigin?: string;\n}\n\n/** The parameters specifying the connection resource whose inbound routes are being requested. */\nexport interface GetInboundRoutesParameters {\n  /** The connection resource whose inbound routes are being requested. */\n  resourceUri?: string;\n  /** The type of the specified connection resource like ExpressRouteConnection, HubVirtualNetworkConnection, VpnConnection and P2SConnection. */\n  connectionType?: string;\n}\n\n/** EffectiveRouteMapRoute List. */\nexport interface EffectiveRouteMapRouteList {\n  /** The list of Effective RouteMap Routes configured on the connection resource. */\n  value?: EffectiveRouteMapRoute[];\n}\n\n/** The effective RouteMap route configured on the connection resource. */\nexport interface EffectiveRouteMapRoute {\n  /** The address prefix of the route. */\n  prefix?: string;\n  /** BGP communities of the route. */\n  bgpCommunities?: string;\n  /** The ASPath of this route. */\n  asPath?: string;\n}\n\n/** The parameters specifying the connection resource whose outbound routes are being requested. */\nexport interface GetOutboundRoutesParameters {\n  /** The connection resource whose outbound routes are being requested. */\n  resourceUri?: string;\n  /** The type of the specified connection resource like ExpressRouteConnection, HubVirtualNetworkConnection, VpnConnection and P2SConnection. */\n  connectionType?: string;\n}\n\n/** The routing policy object used in a RoutingIntent resource. */\nexport interface RoutingPolicy {\n  /** The unique name for the routing policy. */\n  name: string;\n  /** List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic). */\n  destinations: string[];\n  /** The next hop resource id on which this routing policy is applicable to. */\n  nextHop: string;\n}\n\n/** List of the routing intent result and a URL nextLink to get the next set of results. */\nexport interface ListRoutingIntentResult {\n  /** List of RoutingIntent resource. */\n  value?: RoutingIntent[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Result of the request to list WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results. */\nexport interface WebApplicationFirewallPolicyListResult {\n  /**\n   * List of WebApplicationFirewallPolicies within a resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: WebApplicationFirewallPolicy[];\n  /**\n   * URL to get the next set of WebApplicationFirewallPolicy objects if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Defines contents of a web application firewall global configuration. */\nexport interface PolicySettings {\n  /** The state of the policy. */\n  state?: WebApplicationFirewallEnabledState;\n  /** The mode of the policy. */\n  mode?: WebApplicationFirewallMode;\n  /** Whether to allow WAF to check request Body. */\n  requestBodyCheck?: boolean;\n  /** Max inspection limit in KB for request body inspection for WAF. */\n  requestBodyInspectLimitInKB?: number;\n  /** Whether allow WAF to enforce request body limits. */\n  requestBodyEnforcement?: boolean;\n  /** Maximum request body size in Kb for WAF. */\n  maxRequestBodySizeInKb?: number;\n  /** Whether allow WAF to enforce file upload limits. */\n  fileUploadEnforcement?: boolean;\n  /** Maximum file upload size in Mb for WAF. */\n  fileUploadLimitInMb?: number;\n  /** If the action type is block, customer can override the response status code. */\n  customBlockResponseStatusCode?: number;\n  /** If the action type is block, customer can override the response body. The body must be specified in base64 encoding. */\n  customBlockResponseBody?: string;\n  /** To scrub sensitive log fields */\n  logScrubbing?: PolicySettingsLogScrubbing;\n  /** Web Application Firewall JavaScript Challenge Cookie Expiration time in minutes. */\n  jsChallengeCookieExpirationInMins?: number;\n}\n\n/** To scrub sensitive log fields */\nexport interface PolicySettingsLogScrubbing {\n  /** State of the log scrubbing config. Default value is Enabled. */\n  state?: WebApplicationFirewallScrubbingState;\n  /** The rules that are applied to the logs for scrubbing. */\n  scrubbingRules?: WebApplicationFirewallScrubbingRules[];\n}\n\n/** Allow certain variables to be scrubbed on WAF logs */\nexport interface WebApplicationFirewallScrubbingRules {\n  /** The variable to be scrubbed from the logs. */\n  matchVariable: ScrubbingRuleEntryMatchVariable;\n  /** When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to. */\n  selectorMatchOperator: ScrubbingRuleEntryMatchOperator;\n  /** When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to. */\n  selector?: string;\n  /** Defines the state of log scrubbing rule. Default value is Enabled. */\n  state?: ScrubbingRuleEntryState;\n}\n\n/** Defines contents of a web application rule. */\nexport interface WebApplicationFirewallCustomRule {\n  /** The name of the resource that is unique within a policy. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. */\n  priority: number;\n  /** Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified. */\n  state?: WebApplicationFirewallState;\n  /** Duration over which Rate Limit policy will be applied. Applies only when ruleType is RateLimitRule. */\n  rateLimitDuration?: ApplicationGatewayFirewallRateLimitDuration;\n  /** Rate Limit threshold to apply in case ruleType is RateLimitRule. Must be greater than or equal to 1 */\n  rateLimitThreshold?: number;\n  /** The rule type. */\n  ruleType: WebApplicationFirewallRuleType;\n  /** List of match conditions. */\n  matchConditions: MatchCondition[];\n  /** List of user session identifier group by clauses. */\n  groupByUserSession?: GroupByUserSession[];\n  /** Type of Actions. */\n  action: WebApplicationFirewallAction;\n}\n\n/** Define match conditions. */\nexport interface MatchCondition {\n  /** List of match variables. */\n  matchVariables: MatchVariable[];\n  /** The operator to be matched. */\n  operator: WebApplicationFirewallOperator;\n  /** Whether this is negate condition or not. */\n  negationConditon?: boolean;\n  /** Match value. */\n  matchValues: string[];\n  /** List of transforms. */\n  transforms?: WebApplicationFirewallTransform[];\n}\n\n/** Define match variables. */\nexport interface MatchVariable {\n  /** Match Variable. */\n  variableName: WebApplicationFirewallMatchVariable;\n  /** The selector of match variable. */\n  selector?: string;\n}\n\n/** Define user session identifier group by clauses. */\nexport interface GroupByUserSession {\n  /** List of group by clause variables. */\n  groupByVariables: GroupByVariable[];\n}\n\n/** Define user session group by clause variables. */\nexport interface GroupByVariable {\n  /** User Session clause variable. */\n  variableName: ApplicationGatewayFirewallUserSessionVariable;\n}\n\n/** Allow to exclude some variable satisfy the condition for the WAF check. */\nexport interface ManagedRulesDefinition {\n  /** The exceptions that are applied on the policy. */\n  exceptions?: ExceptionEntry[];\n  /** The Exclusions that are applied on the policy. */\n  exclusions?: OwaspCrsExclusionEntry[];\n  /** The managed rule sets that are associated with the policy. */\n  managedRuleSets: ManagedRuleSet[];\n}\n\n/** Adds exception to allow a request when the condition is satisfied. */\nexport interface ExceptionEntry {\n  /** The variable on which we evaluate the exception condition */\n  matchVariable: ExceptionEntryMatchVariable;\n  /** Allowed values for the matchVariable */\n  values?: string[];\n  /** Operates on the allowed values for the matchVariable */\n  valueMatchOperator: ExceptionEntryValueMatchOperator;\n  /** When the matchVariable points to a key-value pair (e.g, RequestHeader), this operates on the selector */\n  selectorMatchOperator?: ExceptionEntrySelectorMatchOperator;\n  /** When the matchVariable points to a key-value pair (e.g, RequestHeader), this identifies the key. */\n  selector?: string;\n  /** The managed rule sets that are associated with the exception. */\n  exceptionManagedRuleSets?: ExclusionManagedRuleSet[];\n}\n\n/** Defines a managed rule set for Exclusions. */\nexport interface ExclusionManagedRuleSet {\n  /** Defines the rule set type to use. */\n  ruleSetType: string;\n  /** Defines the version of the rule set to use. */\n  ruleSetVersion: string;\n  /** Defines the rule groups to apply to the rule set. */\n  ruleGroups?: ExclusionManagedRuleGroup[];\n}\n\n/** Defines a managed rule group to use for exclusion. */\nexport interface ExclusionManagedRuleGroup {\n  /** The managed rule group for exclusion. */\n  ruleGroupName: string;\n  /** List of rules that will be excluded. If none specified, all rules in the group will be excluded. */\n  rules?: ExclusionManagedRule[];\n}\n\n/** Defines a managed rule to use for exclusion. */\nexport interface ExclusionManagedRule {\n  /** Identifier for the managed rule. */\n  ruleId: string;\n}\n\n/** Allow to exclude some variable satisfy the condition for the WAF check. */\nexport interface OwaspCrsExclusionEntry {\n  /** The variable to be excluded. */\n  matchVariable: OwaspCrsExclusionEntryMatchVariable;\n  /** When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to. */\n  selectorMatchOperator: OwaspCrsExclusionEntrySelectorMatchOperator;\n  /** When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to. */\n  selector: string;\n  /** The managed rule sets that are associated with the exclusion. */\n  exclusionManagedRuleSets?: ExclusionManagedRuleSet[];\n}\n\n/** Defines a managed rule set. */\nexport interface ManagedRuleSet {\n  /** Defines the rule set type to use. */\n  ruleSetType: string;\n  /** Defines the version of the rule set to use. */\n  ruleSetVersion: string;\n  /** Defines the rule group overrides to apply to the rule set. */\n  ruleGroupOverrides?: ManagedRuleGroupOverride[];\n}\n\n/** Defines a managed rule group override setting. */\nexport interface ManagedRuleGroupOverride {\n  /** The managed rule group to override. */\n  ruleGroupName: string;\n  /** List of rules that will be disabled. If none specified, all rules in the group will be disabled. */\n  rules?: ManagedRuleOverride[];\n}\n\n/** Defines a managed rule group override setting. */\nexport interface ManagedRuleOverride {\n  /** Identifier for the managed rule. */\n  ruleId: string;\n  /** The state of the managed rule. Defaults to Disabled if not specified. */\n  state?: ManagedRuleEnabledState;\n  /** Describes the override action to be applied when rule matches. */\n  action?: ActionType;\n  /** Describes the override sensitivity to be applied when rule matches. */\n  sensitivity?: SensitivityType;\n}\n\n/** Defines an application gateway for containers reference. */\nexport interface ApplicationGatewayForContainersReferenceDefinition {\n  /** Resource Id of the application gateway for containers. */\n  id: string;\n}\n\n/** Properties of the FirewallPolicyNatRuleCollectionAction. */\nexport interface FirewallPolicyNatRuleCollectionAction {\n  /** The type of action. */\n  type?: FirewallPolicyNatRuleCollectionActionType;\n}\n\n/** Properties of a rule. */\nexport interface FirewallPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"ApplicationRule\" | \"NatRule\" | \"NetworkRule\";\n  /** Name of the rule. */\n  name?: string;\n  /** Description of the rule. */\n  description?: string;\n}\n\n/** Properties of the FirewallPolicyFilterRuleCollectionAction. */\nexport interface FirewallPolicyFilterRuleCollectionAction {\n  /** The type of action. */\n  type?: FirewallPolicyFilterRuleCollectionActionType;\n}\n\n/** Properties of the application rule protocol. */\nexport interface FirewallPolicyRuleApplicationProtocol {\n  /** Protocol type. */\n  protocolType?: FirewallPolicyRuleApplicationProtocolType;\n  /** Port number for the protocol, cannot be greater than 64000. */\n  port?: number;\n}\n\n/** name and value of HTTP/S header to insert */\nexport interface FirewallPolicyHttpHeaderToInsert {\n  /** Contains the name of the header */\n  headerName?: string;\n  /** Contains the value of the header */\n  headerValue?: string;\n}\n\n/** The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is in progress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure. */\nexport interface AzureAsyncOperationResult {\n  /** Status of the Azure async operation. */\n  status?: NetworkOperationStatus;\n  /** Details of the error occurred during specified asynchronous operation. */\n  error?: ErrorModel;\n}\n\n/** VpnSite Resource. */\nexport interface VpnSiteId {\n  /**\n   * The resource-uri of the vpn-site for which config is to be fetched.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vpnSite?: string;\n}\n\n/** IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed. */\nexport interface ApplicationGatewayIPConfiguration extends SubResource {\n  /** Name of the IP configuration that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Reference to the subnet resource. A subnet from where application gateway gets its private address. */\n  subnet?: SubResource;\n  /**\n   * The provisioning state of the application gateway IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Authentication certificates of an application gateway. */\nexport interface ApplicationGatewayAuthenticationCertificate\n  extends SubResource {\n  /** Name of the authentication certificate that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Certificate public data. */\n  data?: string;\n  /**\n   * The provisioning state of the authentication certificate resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Trusted Root certificates of an application gateway. */\nexport interface ApplicationGatewayTrustedRootCertificate extends SubResource {\n  /** Name of the trusted root certificate that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Certificate public data. */\n  data?: string;\n  /** Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault. */\n  keyVaultSecretId?: string;\n  /**\n   * The provisioning state of the trusted root certificate resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Trusted client certificates of an application gateway. */\nexport interface ApplicationGatewayTrustedClientCertificate\n  extends SubResource {\n  /** Name of the trusted client certificate that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Certificate public data. */\n  data?: string;\n  /**\n   * Validated certificate data.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validatedCertData?: string;\n  /**\n   * Distinguished name of client certificate issuer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientCertIssuerDN?: string;\n  /**\n   * The provisioning state of the trusted client certificate resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** SSL certificates of an application gateway. */\nexport interface ApplicationGatewaySslCertificate extends SubResource {\n  /** Name of the SSL certificate that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Base-64 encoded pfx certificate. Only applicable in PUT Request. */\n  data?: string;\n  /** Password for the pfx file specified in data. Only applicable in PUT request. */\n  password?: string;\n  /**\n   * Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicCertData?: string;\n  /** Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault. */\n  keyVaultSecretId?: string;\n  /**\n   * The provisioning state of the SSL certificate resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Frontend IP configuration of an application gateway. */\nexport interface ApplicationGatewayFrontendIPConfiguration extends SubResource {\n  /** Name of the frontend IP configuration that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** PrivateIPAddress of the network interface IP Configuration. */\n  privateIPAddress?: string;\n  /** The private IP address allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n  /** Reference to the subnet resource. */\n  subnet?: SubResource;\n  /** Reference to the PublicIP resource. */\n  publicIPAddress?: SubResource;\n  /** Reference to the application gateway private link configuration. */\n  privateLinkConfiguration?: SubResource;\n  /**\n   * The provisioning state of the frontend IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Frontend port of an application gateway. */\nexport interface ApplicationGatewayFrontendPort extends SubResource {\n  /** Name of the frontend port that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Frontend port. */\n  port?: number;\n  /**\n   * The provisioning state of the frontend port resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Probe of the application gateway. */\nexport interface ApplicationGatewayProbe extends SubResource {\n  /** Name of the probe that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The protocol used for the probe. */\n  protocol?: ApplicationGatewayProtocol;\n  /** Host name to send the probe to. */\n  host?: string;\n  /** Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>. */\n  path?: string;\n  /** The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds. */\n  interval?: number;\n  /** The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds. */\n  timeout?: number;\n  /** The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20. */\n  unhealthyThreshold?: number;\n  /** Whether the host header should be picked from the backend http settings. Default value is false. */\n  pickHostNameFromBackendHttpSettings?: boolean;\n  /** Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false. */\n  pickHostNameFromBackendSettings?: boolean;\n  /** Minimum number of servers that are always marked healthy. Default value is 0. */\n  minServers?: number;\n  /** Criterion for classifying a healthy probe response. */\n  match?: ApplicationGatewayProbeHealthResponseMatch;\n  /**\n   * The provisioning state of the probe resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Basic, Standard_v2 and WAF_v2 only. */\n  port?: number;\n}\n\n/** Tap configuration in a Network Interface. */\nexport interface NetworkInterfaceTapConfiguration extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Sub Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The reference to the Virtual Network Tap resource. */\n  virtualNetworkTap?: VirtualNetworkTap;\n  /**\n   * The provisioning state of the network interface tap configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Network security rule. */\nexport interface SecurityRule extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The type of the resource. */\n  type?: string;\n  /** A description for this rule. Restricted to 140 chars. */\n  description?: string;\n  /** Network protocol this rule applies to. */\n  protocol?: SecurityRuleProtocol;\n  /** The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports. */\n  sourcePortRange?: string;\n  /** The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports. */\n  destinationPortRange?: string;\n  /** The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. */\n  sourceAddressPrefix?: string;\n  /** The CIDR or source IP ranges. */\n  sourceAddressPrefixes?: string[];\n  /** The application security group specified as source. */\n  sourceApplicationSecurityGroups?: ApplicationSecurityGroup[];\n  /** The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. */\n  destinationAddressPrefix?: string;\n  /** The destination address prefixes. CIDR or destination IP ranges. */\n  destinationAddressPrefixes?: string[];\n  /** The application security group specified as destination. */\n  destinationApplicationSecurityGroups?: ApplicationSecurityGroup[];\n  /** The source port ranges. */\n  sourcePortRanges?: string[];\n  /** The destination port ranges. */\n  destinationPortRanges?: string[];\n  /** The network traffic is allowed or denied. */\n  access?: SecurityRuleAccess;\n  /** The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule. */\n  priority?: number;\n  /** The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. */\n  direction?: SecurityRuleDirection;\n  /**\n   * The provisioning state of the security rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** PrivateLinkServiceConnection resource. */\nexport interface PrivateLinkServiceConnection extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The provisioning state of the private link service connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The resource id of private link service. */\n  privateLinkServiceId?: string;\n  /** The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. */\n  groupIds?: string[];\n  /** A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars. */\n  requestMessage?: string;\n  /** A collection of read-only information about the state of the connection to the remote resource. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n}\n\n/** The private link service ip configuration. */\nexport interface PrivateLinkServiceIpConfiguration extends SubResource {\n  /** The name of private link service ip configuration. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The private IP address of the IP configuration. */\n  privateIPAddress?: string;\n  /** The private IP address allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n  /** The reference to the subnet resource. */\n  subnet?: Subnet;\n  /** Whether the ip configuration is primary or not. */\n  primary?: boolean;\n  /**\n   * The provisioning state of the private link service IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4. */\n  privateIPAddressVersion?: IPVersion;\n}\n\n/** PrivateEndpointConnection resource. */\nexport interface PrivateEndpointConnection extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The resource of private end point.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpoint?: PrivateEndpoint;\n  /** A collection of information about the state of the connection between service consumer and provider. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * The provisioning state of the private endpoint connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The consumer link id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly linkIdentifier?: string;\n  /**\n   * The location of the private endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointLocation?: string;\n}\n\n/** Route resource. */\nexport interface Route extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The type of the resource. */\n  type?: string;\n  /** The destination CIDR to which the route applies. */\n  addressPrefix?: string;\n  /** The type of Azure hop the packet should be sent to. */\n  nextHopType?: RouteNextHopType;\n  /** The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance. */\n  nextHopIpAddress?: string;\n  /**\n   * The provisioning state of the route resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * A value indicating whether this route overrides overlapping BGP routes regardless of LPM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasBgpOverride?: boolean;\n}\n\n/** Service Endpoint policy definitions. */\nexport interface ServiceEndpointPolicyDefinition extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The type of the resource. */\n  type?: string;\n  /** A description for this rule. Restricted to 140 chars. */\n  description?: string;\n  /** Service endpoint name. */\n  service?: string;\n  /** A list of service resources. */\n  serviceResources?: string[];\n  /**\n   * The provisioning state of the service endpoint policy definition resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** IP configuration. */\nexport interface IPConfiguration extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The private IP address of the IP configuration. */\n  privateIPAddress?: string;\n  /** The private IP address allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n  /** The reference to the subnet resource. */\n  subnet?: Subnet;\n  /** The reference to the public IP resource. */\n  publicIPAddress?: PublicIPAddress;\n  /**\n   * The provisioning state of the IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** IP configuration profile child resource. */\nexport interface IPConfigurationProfile extends SubResource {\n  /** The name of the resource. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * Sub Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The reference to the subnet resource to create a container network interface ip configuration. */\n  subnet?: Subnet;\n  /**\n   * The provisioning state of the IP configuration profile resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** ResourceNavigationLink resource. */\nexport interface ResourceNavigationLink extends SubResource {\n  /** Name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource type of the linked resource. */\n  linkedResourceType?: string;\n  /** Link to the external resource. */\n  link?: string;\n  /**\n   * The provisioning state of the resource navigation link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** ServiceAssociationLink resource. */\nexport interface ServiceAssociationLink extends SubResource {\n  /** Name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource type of the linked resource. */\n  linkedResourceType?: string;\n  /** Link to the external resource. */\n  link?: string;\n  /**\n   * The provisioning state of the service association link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** If true, the resource can be deleted. */\n  allowDelete?: boolean;\n  /** A list of locations. */\n  locations?: string[];\n}\n\n/** Details the service to which the subnet is delegated. */\nexport interface Delegation extends SubResource {\n  /** The name of the resource that is unique within a subnet. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Resource type. */\n  type?: string;\n  /** The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers). */\n  serviceName?: string;\n  /**\n   * The actions permitted to the service upon delegation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actions?: string[];\n  /**\n   * The provisioning state of the service delegation resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Subnet in a virtual network resource. */\nexport interface Subnet extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Resource type. */\n  type?: string;\n  /** The address prefix for the subnet. */\n  addressPrefix?: string;\n  /** List of address prefixes for the subnet. */\n  addressPrefixes?: string[];\n  /** The reference to the NetworkSecurityGroup resource. */\n  networkSecurityGroup?: NetworkSecurityGroup;\n  /** The reference to the RouteTable resource. */\n  routeTable?: RouteTable;\n  /** Nat gateway associated with this subnet. */\n  natGateway?: SubResource;\n  /** An array of service endpoints. */\n  serviceEndpoints?: ServiceEndpointPropertiesFormat[];\n  /** An array of service endpoint policies. */\n  serviceEndpointPolicies?: ServiceEndpointPolicy[];\n  /**\n   * An array of references to private endpoints.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpoints?: PrivateEndpoint[];\n  /**\n   * An array of references to the network interface IP configurations using subnet.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipConfigurations?: IPConfiguration[];\n  /**\n   * Array of IP configuration profiles which reference this subnet.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipConfigurationProfiles?: IPConfigurationProfile[];\n  /** Array of IpAllocation which reference this subnet. */\n  ipAllocations?: SubResource[];\n  /**\n   * An array of references to the external resources using subnet.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceNavigationLinks?: ResourceNavigationLink[];\n  /**\n   * An array of references to services injecting into this subnet.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceAssociationLinks?: ServiceAssociationLink[];\n  /** An array of references to the delegations on the subnet. */\n  delegations?: Delegation[];\n  /**\n   * A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purpose?: string;\n  /**\n   * The provisioning state of the subnet resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Enable or Disable apply network policies on private end point in the subnet. */\n  privateEndpointNetworkPolicies?: VirtualNetworkPrivateEndpointNetworkPolicies;\n  /** Enable or Disable apply network policies on private link service in the subnet. */\n  privateLinkServiceNetworkPolicies?: VirtualNetworkPrivateLinkServiceNetworkPolicies;\n  /** Application gateway IP configurations of virtual network resource. */\n  applicationGatewayIPConfigurations?: ApplicationGatewayIPConfiguration[];\n  /** Set this property to Tenant to allow sharing subnet with other subscriptions in your AAD tenant. This property can only be set if defaultOutboundAccess is set to false, both properties can only be set if subnet is empty. */\n  sharingScope?: SharingScope;\n  /** Set this property to false to disable default outbound connectivity for all VMs in the subnet. This property can only be set at the time of subnet creation and cannot be updated for an existing subnet. */\n  defaultOutboundAccess?: boolean;\n  /** A list of IPAM Pools for allocating IP address prefixes. */\n  ipamPoolPrefixAllocations?: IpamPoolPrefixAllocation[];\n}\n\n/** Frontend IP address of the load balancer. */\nexport interface FrontendIPConfiguration extends SubResource {\n  /** The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** A list of availability zones denoting the IP allocated for the resource needs to come from. */\n  zones?: string[];\n  /**\n   * An array of references to inbound rules that use this frontend IP.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inboundNatRules?: SubResource[];\n  /**\n   * An array of references to inbound pools that use this frontend IP.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inboundNatPools?: SubResource[];\n  /**\n   * An array of references to outbound rules that use this frontend IP.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outboundRules?: SubResource[];\n  /**\n   * An array of references to load balancing rules that use this frontend IP.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly loadBalancingRules?: SubResource[];\n  /** The private IP address of the IP configuration. */\n  privateIPAddress?: string;\n  /** The Private IP allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n  /** Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. */\n  privateIPAddressVersion?: IPVersion;\n  /** The reference to the subnet resource. */\n  subnet?: Subnet;\n  /** The reference to the Public IP resource. */\n  publicIPAddress?: PublicIPAddress;\n  /** The reference to the Public IP Prefix resource. */\n  publicIPPrefix?: SubResource;\n  /** The reference to gateway load balancer frontend IP. */\n  gatewayLoadBalancer?: SubResource;\n  /**\n   * The provisioning state of the frontend IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Pool of backend IP addresses. */\nexport interface BackendAddressPool extends SubResource {\n  /** The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The location of the backend address pool. */\n  location?: string;\n  /** An array of gateway load balancer tunnel interfaces. */\n  tunnelInterfaces?: GatewayLoadBalancerTunnelInterface[];\n  /** An array of backend addresses. */\n  loadBalancerBackendAddresses?: LoadBalancerBackendAddress[];\n  /**\n   * An array of references to IP addresses defined in network interfaces.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backendIPConfigurations?: NetworkInterfaceIPConfiguration[];\n  /**\n   * An array of references to load balancing rules that use this backend address pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly loadBalancingRules?: SubResource[];\n  /**\n   * A reference to an outbound rule that uses this backend address pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outboundRule?: SubResource;\n  /**\n   * An array of references to outbound rules that use this backend address pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outboundRules?: SubResource[];\n  /**\n   * An array of references to inbound NAT rules that use this backend address pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inboundNatRules?: SubResource[];\n  /**\n   * The provisioning state of the backend address pool resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Amount of seconds Load Balancer waits for before sending RESET to client and backend address. */\n  drainPeriodInSeconds?: number;\n  /** A reference to a virtual network. */\n  virtualNetwork?: SubResource;\n  /** Backend address synchronous mode for the backend pool */\n  syncMode?: SyncMode;\n}\n\n/** Inbound NAT rule of the load balancer. */\nexport interface InboundNatRule extends SubResource {\n  /** The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** A reference to frontend IP addresses. */\n  frontendIPConfiguration?: SubResource;\n  /**\n   * A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backendIPConfiguration?: NetworkInterfaceIPConfiguration;\n  /** The reference to the transport protocol used by the load balancing rule. */\n  protocol?: TransportProtocol;\n  /** The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534. */\n  frontendPort?: number;\n  /** The port used for the internal endpoint. Acceptable values range from 1 to 65535. */\n  backendPort?: number;\n  /** The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP. */\n  idleTimeoutInMinutes?: number;\n  /** Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint. */\n  enableFloatingIP?: boolean;\n  /** Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP. */\n  enableTcpReset?: boolean;\n  /** The port range start for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534. */\n  frontendPortRangeStart?: number;\n  /** The port range end for the external endpoint. This property is used together with BackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each backend address from BackendAddressPool. Acceptable values range from 1 to 65534. */\n  frontendPortRangeEnd?: number;\n  /** A reference to backendAddressPool resource. */\n  backendAddressPool?: SubResource;\n  /**\n   * The provisioning state of the inbound NAT rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** IPConfiguration in a network interface. */\nexport interface NetworkInterfaceIPConfiguration extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Resource type. */\n  type?: string;\n  /** The reference to gateway load balancer frontend IP. */\n  gatewayLoadBalancer?: SubResource;\n  /** The reference to Virtual Network Taps. */\n  virtualNetworkTaps?: VirtualNetworkTap[];\n  /** The reference to ApplicationGatewayBackendAddressPool resource. */\n  applicationGatewayBackendAddressPools?: ApplicationGatewayBackendAddressPool[];\n  /** The reference to LoadBalancerBackendAddressPool resource. */\n  loadBalancerBackendAddressPools?: BackendAddressPool[];\n  /** A list of references of LoadBalancerInboundNatRules. */\n  loadBalancerInboundNatRules?: InboundNatRule[];\n  /** Private IP address of the IP configuration. It can be a single IP address or a CIDR block in the format <address>/<prefix-length>. */\n  privateIPAddress?: string;\n  /** The private IP address prefix length. If specified and the allocation method is dynamic, the service will allocate a CIDR block instead of a single IP address. */\n  privateIPAddressPrefixLength?: number;\n  /** The private IP address allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n  /** Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4. */\n  privateIPAddressVersion?: IPVersion;\n  /** Subnet bound to the IP configuration. */\n  subnet?: Subnet;\n  /** Whether this is a primary customer address on the network interface. */\n  primary?: boolean;\n  /** Public IP address bound to the IP configuration. */\n  publicIPAddress?: PublicIPAddress;\n  /** Application security groups in which the IP configuration is included. */\n  applicationSecurityGroups?: ApplicationSecurityGroup[];\n  /**\n   * The provisioning state of the network interface IP configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * PrivateLinkConnection properties for the network interface.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateLinkConnectionProperties?: NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties;\n}\n\n/** Backend Address Pool of an application gateway. */\nexport interface ApplicationGatewayBackendAddressPool extends SubResource {\n  /** Name of the backend address pool that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Collection of references to IPs defined in network interfaces.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backendIPConfigurations?: NetworkInterfaceIPConfiguration[];\n  /** Backend addresses. */\n  backendAddresses?: ApplicationGatewayBackendAddress[];\n  /**\n   * The provisioning state of the backend address pool resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Backend address pool settings of an application gateway. */\nexport interface ApplicationGatewayBackendHttpSettings extends SubResource {\n  /** Name of the backend http settings that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The destination port on the backend. */\n  port?: number;\n  /** The protocol used to communicate with the backend. */\n  protocol?: ApplicationGatewayProtocol;\n  /** Cookie based affinity. */\n  cookieBasedAffinity?: ApplicationGatewayCookieBasedAffinity;\n  /** Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds. */\n  requestTimeout?: number;\n  /** Probe resource of an application gateway. */\n  probe?: SubResource;\n  /** Array of references to application gateway authentication certificates. */\n  authenticationCertificates?: SubResource[];\n  /** Array of references to application gateway trusted root certificates. */\n  trustedRootCertificates?: SubResource[];\n  /** Connection draining of the backend http settings resource. */\n  connectionDraining?: ApplicationGatewayConnectionDraining;\n  /** Host header to be sent to the backend servers. */\n  hostName?: string;\n  /** Whether to pick host header should be picked from the host name of the backend server. Default value is false. */\n  pickHostNameFromBackendAddress?: boolean;\n  /** Cookie name to use for the affinity cookie. */\n  affinityCookieName?: string;\n  /** Whether the probe is enabled. Default value is false. */\n  probeEnabled?: boolean;\n  /** Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null. */\n  path?: string;\n  /**\n   * The provisioning state of the backend HTTP settings resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Backend address pool settings of an application gateway. */\nexport interface ApplicationGatewayBackendSettings extends SubResource {\n  /** Name of the backend settings that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The destination port on the backend. */\n  port?: number;\n  /** The protocol used to communicate with the backend. */\n  protocol?: ApplicationGatewayProtocol;\n  /** Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds. */\n  timeout?: number;\n  /** Probe resource of an application gateway. */\n  probe?: SubResource;\n  /** Array of references to application gateway trusted root certificates. */\n  trustedRootCertificates?: SubResource[];\n  /** Server name indication to be sent to the backend servers for Tls protocol. */\n  hostName?: string;\n  /** Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false. */\n  pickHostNameFromBackendAddress?: boolean;\n  /**\n   * The provisioning state of the backend HTTP settings resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Http listener of an application gateway. */\nexport interface ApplicationGatewayHttpListener extends SubResource {\n  /** Name of the HTTP listener that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Frontend IP configuration resource of an application gateway. */\n  frontendIPConfiguration?: SubResource;\n  /** Frontend port resource of an application gateway. */\n  frontendPort?: SubResource;\n  /** Protocol of the HTTP listener. */\n  protocol?: ApplicationGatewayProtocol;\n  /** Host name of HTTP listener. */\n  hostName?: string;\n  /** SSL certificate resource of an application gateway. */\n  sslCertificate?: SubResource;\n  /** SSL profile resource of the application gateway. */\n  sslProfile?: SubResource;\n  /** Applicable only if protocol is https. Enables SNI for multi-hosting. */\n  requireServerNameIndication?: boolean;\n  /**\n   * The provisioning state of the HTTP listener resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Custom error configurations of the HTTP listener. */\n  customErrorConfigurations?: ApplicationGatewayCustomError[];\n  /** Reference to the FirewallPolicy resource. */\n  firewallPolicy?: SubResource;\n  /** List of Host names for HTTP Listener that allows special wildcard characters as well. */\n  hostNames?: string[];\n}\n\n/** Listener of an application gateway. */\nexport interface ApplicationGatewayListener extends SubResource {\n  /** Name of the listener that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Frontend IP configuration resource of an application gateway. */\n  frontendIPConfiguration?: SubResource;\n  /** Frontend port resource of an application gateway. */\n  frontendPort?: SubResource;\n  /** Protocol of the listener. */\n  protocol?: ApplicationGatewayProtocol;\n  /** SSL certificate resource of an application gateway. */\n  sslCertificate?: SubResource;\n  /** SSL profile resource of the application gateway. */\n  sslProfile?: SubResource;\n  /**\n   * The provisioning state of the listener resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** List of Server Name Indications(SNI) for TLS Multi-site Listener that allows special wildcard characters as well. */\n  hostNames?: string[];\n}\n\n/** SSL profile of an application gateway. */\nexport interface ApplicationGatewaySslProfile extends SubResource {\n  /** Name of the SSL profile that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Array of references to application gateway trusted client certificates. */\n  trustedClientCertificates?: SubResource[];\n  /** SSL policy of the application gateway resource. */\n  sslPolicy?: ApplicationGatewaySslPolicy;\n  /** Client authentication configuration of the application gateway resource. */\n  clientAuthConfiguration?: ApplicationGatewayClientAuthConfiguration;\n  /**\n   * The provisioning state of the HTTP listener resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Path rule of URL path map of an application gateway. */\nexport interface ApplicationGatewayPathRule extends SubResource {\n  /** Name of the path rule that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Path rules of URL path map. */\n  paths?: string[];\n  /** Backend address pool resource of URL path map path rule. */\n  backendAddressPool?: SubResource;\n  /** Backend http settings resource of URL path map path rule. */\n  backendHttpSettings?: SubResource;\n  /** Redirect configuration resource of URL path map path rule. */\n  redirectConfiguration?: SubResource;\n  /** Rewrite rule set resource of URL path map path rule. */\n  rewriteRuleSet?: SubResource;\n  /** Load Distribution Policy resource of URL path map path rule. */\n  loadDistributionPolicy?: SubResource;\n  /**\n   * The provisioning state of the path rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Reference to the FirewallPolicy resource. */\n  firewallPolicy?: SubResource;\n}\n\n/** UrlPathMaps give a url path to the backend mapping information for PathBasedRouting. */\nexport interface ApplicationGatewayUrlPathMap extends SubResource {\n  /** Name of the URL path map that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Default backend address pool resource of URL path map. */\n  defaultBackendAddressPool?: SubResource;\n  /** Default backend http settings resource of URL path map. */\n  defaultBackendHttpSettings?: SubResource;\n  /** Default Rewrite rule set resource of URL path map. */\n  defaultRewriteRuleSet?: SubResource;\n  /** Default redirect configuration resource of URL path map. */\n  defaultRedirectConfiguration?: SubResource;\n  /** Default Load Distribution Policy resource of URL path map. */\n  defaultLoadDistributionPolicy?: SubResource;\n  /** Path rule of URL path map resource. */\n  pathRules?: ApplicationGatewayPathRule[];\n  /**\n   * The provisioning state of the URL path map resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Request routing rule of an application gateway. */\nexport interface ApplicationGatewayRequestRoutingRule extends SubResource {\n  /** Name of the request routing rule that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Rule type. */\n  ruleType?: ApplicationGatewayRequestRoutingRuleType;\n  /** Priority of the request routing rule. */\n  priority?: number;\n  /** Backend address pool resource of the application gateway. */\n  backendAddressPool?: SubResource;\n  /** Backend http settings resource of the application gateway. */\n  backendHttpSettings?: SubResource;\n  /** Http listener resource of the application gateway. */\n  httpListener?: SubResource;\n  /** URL path map resource of the application gateway. */\n  urlPathMap?: SubResource;\n  /** Rewrite Rule Set resource in Basic rule of the application gateway. */\n  rewriteRuleSet?: SubResource;\n  /** Redirect configuration resource of the application gateway. */\n  redirectConfiguration?: SubResource;\n  /** Load Distribution Policy resource of the application gateway. */\n  loadDistributionPolicy?: SubResource;\n  /**\n   * The provisioning state of the request routing rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Routing rule of an application gateway. */\nexport interface ApplicationGatewayRoutingRule extends SubResource {\n  /** Name of the routing rule that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Rule type. */\n  ruleType?: ApplicationGatewayRequestRoutingRuleType;\n  /** Priority of the routing rule. */\n  priority?: number;\n  /** Backend address pool resource of the application gateway. */\n  backendAddressPool?: SubResource;\n  /** Backend settings resource of the application gateway. */\n  backendSettings?: SubResource;\n  /** Listener resource of the application gateway. */\n  listener?: SubResource;\n  /**\n   * The provisioning state of the request routing rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Rewrite rule set of an application gateway. */\nexport interface ApplicationGatewayRewriteRuleSet extends SubResource {\n  /** Name of the rewrite rule set that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Rewrite rules in the rewrite rule set. */\n  rewriteRules?: ApplicationGatewayRewriteRule[];\n  /**\n   * The provisioning state of the rewrite rule set resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Redirect configuration of an application gateway. */\nexport interface ApplicationGatewayRedirectConfiguration extends SubResource {\n  /** Name of the redirect configuration that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** HTTP redirection type. */\n  redirectType?: ApplicationGatewayRedirectType;\n  /** Reference to a listener to redirect the request to. */\n  targetListener?: SubResource;\n  /** Url to redirect the request to. */\n  targetUrl?: string;\n  /** Include path in the redirected url. */\n  includePath?: boolean;\n  /** Include query string in the redirected url. */\n  includeQueryString?: boolean;\n  /** Request routing specifying redirect configuration. */\n  requestRoutingRules?: SubResource[];\n  /** Url path maps specifying default redirect configuration. */\n  urlPathMaps?: SubResource[];\n  /** Path rules specifying redirect configuration. */\n  pathRules?: SubResource[];\n}\n\n/** The application gateway private link ip configuration. */\nexport interface ApplicationGatewayPrivateLinkIpConfiguration\n  extends SubResource {\n  /** The name of application gateway private link ip configuration. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The private IP address of the IP configuration. */\n  privateIPAddress?: string;\n  /** The private IP address allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n  /** Reference to the subnet resource. */\n  subnet?: SubResource;\n  /** Whether the ip configuration is primary or not. */\n  primary?: boolean;\n  /**\n   * The provisioning state of the application gateway private link IP configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Private Link Configuration on an application gateway. */\nexport interface ApplicationGatewayPrivateLinkConfiguration\n  extends SubResource {\n  /** Name of the private link configuration that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** An array of application gateway private link ip configurations. */\n  ipConfigurations?: ApplicationGatewayPrivateLinkIpConfiguration[];\n  /**\n   * The provisioning state of the application gateway private link configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Private Endpoint connection on an application gateway. */\nexport interface ApplicationGatewayPrivateEndpointConnection\n  extends SubResource {\n  /** Name of the private endpoint connection on an application gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The resource of private end point.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpoint?: PrivateEndpoint;\n  /** A collection of information about the state of the connection between service consumer and provider. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * The provisioning state of the application gateway private endpoint connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The consumer link id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly linkIdentifier?: string;\n}\n\n/** Load Distribution Target of an application gateway. */\nexport interface ApplicationGatewayLoadDistributionTarget extends SubResource {\n  /** Name of the load distribution policy that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Weight per server. Range between 1 and 100. */\n  weightPerServer?: number;\n  /** Backend address pool resource of the application gateway. */\n  backendAddressPool?: SubResource;\n}\n\n/** Load Distribution Policy of an application gateway. */\nexport interface ApplicationGatewayLoadDistributionPolicy extends SubResource {\n  /** Name of the load distribution policy that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Load Distribution Targets resource of an application gateway. */\n  loadDistributionTargets?: ApplicationGatewayLoadDistributionTarget[];\n  /** Load Distribution Targets resource of an application gateway. */\n  loadDistributionAlgorithm?: ApplicationGatewayLoadDistributionAlgorithm;\n  /**\n   * The provisioning state of the Load Distribution Policy resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** PrivateLink Resource of an application gateway. */\nexport interface ApplicationGatewayPrivateLinkResource extends SubResource {\n  /** Name of the private link resource that is unique within an Application Gateway. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Group identifier of private link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * Required member names of private link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /** Required DNS zone names of the the private link resource. */\n  requiredZoneNames?: string[];\n}\n\n/** An Ssl predefined policy. */\nexport interface ApplicationGatewaySslPredefinedPolicy extends SubResource {\n  /** Name of the Ssl predefined policy. */\n  name?: string;\n  /** Ssl cipher suites to be enabled in the specified order for application gateway. */\n  cipherSuites?: ApplicationGatewaySslCipherSuite[];\n  /** Minimum version of Ssl protocol to be supported on application gateway. */\n  minProtocolVersion?: ApplicationGatewaySslProtocol;\n}\n\n/** Application rule collection resource. */\nexport interface AzureFirewallApplicationRuleCollection extends SubResource {\n  /** The name of the resource that is unique within the Azure firewall. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Priority of the application rule collection resource. */\n  priority?: number;\n  /** The action type of a rule collection. */\n  action?: AzureFirewallRCAction;\n  /** Collection of rules used by a application rule collection. */\n  rules?: AzureFirewallApplicationRule[];\n  /**\n   * The provisioning state of the application rule collection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** NAT rule collection resource. */\nexport interface AzureFirewallNatRuleCollection extends SubResource {\n  /** The name of the resource that is unique within the Azure firewall. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Priority of the NAT rule collection resource. */\n  priority?: number;\n  /** The action type of a NAT rule collection. */\n  action?: AzureFirewallNatRCAction;\n  /** Collection of rules used by a NAT rule collection. */\n  rules?: AzureFirewallNatRule[];\n  /**\n   * The provisioning state of the NAT rule collection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Network rule collection resource. */\nexport interface AzureFirewallNetworkRuleCollection extends SubResource {\n  /** The name of the resource that is unique within the Azure firewall. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Priority of the network rule collection resource. */\n  priority?: number;\n  /** The action type of a rule collection. */\n  action?: AzureFirewallRCAction;\n  /** Collection of rules used by a network rule collection. */\n  rules?: AzureFirewallNetworkRule[];\n  /**\n   * The provisioning state of the network rule collection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** IP configuration of an Azure Firewall. */\nexport interface AzureFirewallIPConfiguration extends SubResource {\n  /** Name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIPAddress?: string;\n  /** Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'. */\n  subnet?: SubResource;\n  /** Reference to the PublicIP resource. This field is a mandatory input if subnet is not null. */\n  publicIPAddress?: SubResource;\n  /**\n   * The provisioning state of the Azure firewall IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** IP configuration of an Bastion Host. */\nexport interface BastionHostIPConfiguration extends SubResource {\n  /** Name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Ip configuration type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Reference of the subnet resource. */\n  subnet?: SubResource;\n  /** Reference of the PublicIP resource. Null for private only bastion */\n  publicIPAddress?: SubResource;\n  /**\n   * The provisioning state of the bastion host IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Private IP allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n}\n\n/** Endpoint service. */\nexport interface EndpointServiceResult extends SubResource {\n  /**\n   * Name of the endpoint service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Type of the endpoint service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Authorization in an ExpressRouteCircuit resource. */\nexport interface ExpressRouteCircuitAuthorization extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The authorization key. */\n  authorizationKey?: string;\n  /** The authorization use status. */\n  authorizationUseStatus?: AuthorizationUseStatus;\n  /**\n   * The reference to the ExpressRoute connection resource using the authorization.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionResourceUri?: string;\n  /**\n   * The provisioning state of the authorization resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Express Route Circuit Connection in an ExpressRouteCircuitPeering resource. */\nexport interface ExpressRouteCircuitConnection extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection. */\n  expressRouteCircuitPeering?: SubResource;\n  /** Reference to Express Route Circuit Private Peering Resource of the peered circuit. */\n  peerExpressRouteCircuitPeering?: SubResource;\n  /** /29 IP address space to carve out Customer addresses for tunnels. */\n  addressPrefix?: string;\n  /** The authorization key. */\n  authorizationKey?: string;\n  /** IPv6 Address PrefixProperties of the express route circuit connection. */\n  ipv6CircuitConnectionConfig?: Ipv6CircuitConnectionConfig;\n  /**\n   * Express Route Circuit connection state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly circuitConnectionStatus?: CircuitConnectionStatus;\n  /**\n   * The provisioning state of the express route circuit connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource. */\nexport interface PeerExpressRouteCircuitConnection extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Reference to Express Route Circuit Private Peering Resource of the circuit. */\n  expressRouteCircuitPeering?: SubResource;\n  /** Reference to Express Route Circuit Private Peering Resource of the peered circuit. */\n  peerExpressRouteCircuitPeering?: SubResource;\n  /** /29 IP address space to carve out Customer addresses for tunnels. */\n  addressPrefix?: string;\n  /**\n   * Express Route Circuit connection state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly circuitConnectionStatus?: CircuitConnectionStatus;\n  /** The name of the express route circuit connection resource. */\n  connectionName?: string;\n  /** The resource guid of the authorization used for the express route circuit connection. */\n  authResourceGuid?: string;\n  /**\n   * The provisioning state of the peer express route circuit connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Peering in an ExpressRouteCircuit resource. */\nexport interface ExpressRouteCircuitPeering extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The peering type. */\n  peeringType?: ExpressRoutePeeringType;\n  /** The peering state. */\n  state?: ExpressRoutePeeringState;\n  /** The Azure ASN. */\n  azureASN?: number;\n  /** The peer ASN. */\n  peerASN?: number;\n  /** The primary address prefix. */\n  primaryPeerAddressPrefix?: string;\n  /** The secondary address prefix. */\n  secondaryPeerAddressPrefix?: string;\n  /** The primary port. */\n  primaryAzurePort?: string;\n  /** The secondary port. */\n  secondaryAzurePort?: string;\n  /** The shared key. */\n  sharedKey?: string;\n  /** The VLAN ID. */\n  vlanId?: number;\n  /** The Microsoft peering configuration. */\n  microsoftPeeringConfig?: ExpressRouteCircuitPeeringConfig;\n  /** The peering stats of express route circuit. */\n  stats?: ExpressRouteCircuitStats;\n  /**\n   * The provisioning state of the express route circuit peering resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The GatewayManager Etag. */\n  gatewayManagerEtag?: string;\n  /**\n   * Who was the last to modify the peering.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedBy?: string;\n  /** The reference to the RouteFilter resource. */\n  routeFilter?: SubResource;\n  /** The IPv6 peering configuration. */\n  ipv6PeeringConfig?: Ipv6ExpressRouteCircuitPeeringConfig;\n  /** The ExpressRoute connection. */\n  expressRouteConnection?: ExpressRouteConnectionId;\n  /** The list of circuit connections associated with Azure Private Peering for this circuit. */\n  connections?: ExpressRouteCircuitConnection[];\n  /**\n   * The list of peered circuit connections associated with Azure Private Peering for this circuit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly peeredConnections?: PeerExpressRouteCircuitConnection[];\n}\n\n/** Peering in an ExpressRoute Cross Connection resource. */\nexport interface ExpressRouteCrossConnectionPeering extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The peering type. */\n  peeringType?: ExpressRoutePeeringType;\n  /** The peering state. */\n  state?: ExpressRoutePeeringState;\n  /**\n   * The Azure ASN.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureASN?: number;\n  /** The peer ASN. */\n  peerASN?: number;\n  /** The primary address prefix. */\n  primaryPeerAddressPrefix?: string;\n  /** The secondary address prefix. */\n  secondaryPeerAddressPrefix?: string;\n  /**\n   * The primary port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryAzurePort?: string;\n  /**\n   * The secondary port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryAzurePort?: string;\n  /** The shared key. */\n  sharedKey?: string;\n  /** The VLAN ID. */\n  vlanId?: number;\n  /** The Microsoft peering configuration. */\n  microsoftPeeringConfig?: ExpressRouteCircuitPeeringConfig;\n  /**\n   * The provisioning state of the express route cross connection peering resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The GatewayManager Etag. */\n  gatewayManagerEtag?: string;\n  /**\n   * Who was the last to modify the peering.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedBy?: string;\n  /** The IPv6 peering configuration. */\n  ipv6PeeringConfig?: Ipv6ExpressRouteCircuitPeeringConfig;\n}\n\n/** ExpressRouteLink child resource definition. */\nexport interface ExpressRouteLink extends SubResource {\n  /** Name of child port resource that is unique among child port resources of the parent. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Name of Azure router associated with physical port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly routerName?: string;\n  /**\n   * Name of Azure router interface.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly interfaceName?: string;\n  /**\n   * Mapping between physical port to patch panel port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly patchPanelId?: string;\n  /**\n   * Mapping of physical patch panel to rack.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rackId?: string;\n  /**\n   * Cololocation for ExpressRoute Hybrid Direct.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly coloLocation?: string;\n  /**\n   * Physical fiber port type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectorType?: ExpressRouteLinkConnectorType;\n  /** Administrative state of the physical port. */\n  adminState?: ExpressRouteLinkAdminState;\n  /**\n   * The provisioning state of the express route link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** MacSec configuration. */\n  macSecConfig?: ExpressRouteLinkMacSecConfig;\n}\n\n/** ExpressRoutePort Authorization resource definition. */\nexport interface ExpressRoutePortAuthorization extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The authorization key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly authorizationKey?: string;\n  /**\n   * The authorization use status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly authorizationUseStatus?: ExpressRoutePortAuthorizationUseStatus;\n  /**\n   * The reference to the ExpressRoute circuit resource using the authorization.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly circuitResourceUri?: string;\n  /**\n   * The provisioning state of the authorization resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Rule Collection Group resource. */\nexport interface FirewallPolicyRuleCollectionGroup extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Rule Group type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A read-only string that represents the size of the FirewallPolicyRuleCollectionGroupProperties in MB. (ex 1.2MB)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly size?: string;\n  /** Priority of the Firewall Policy Rule Collection Group resource. */\n  priority?: number;\n  /** Group of Firewall Policy rule collections. */\n  ruleCollections?: FirewallPolicyRuleCollectionUnion[];\n  /**\n   * The provisioning state of the firewall policy rule collection group resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Rule Collection Group resource. */\nexport interface FirewallPolicyRuleCollectionGroupDraft extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * Rule Group type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A read-only string that represents the size of the FirewallPolicyRuleCollectionGroupProperties in MB. (ex 1.2MB)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly size?: string;\n  /** Priority of the Firewall Policy Rule Collection Group resource. */\n  priority?: number;\n  /** Group of Firewall Policy rule collections. */\n  ruleCollections?: FirewallPolicyRuleCollectionUnion[];\n}\n\n/** A load balancing rule for a load balancer. */\nexport interface LoadBalancingRule extends SubResource {\n  /** The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** A reference to frontend IP addresses. */\n  frontendIPConfiguration?: SubResource;\n  /** A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs. */\n  backendAddressPool?: SubResource;\n  /** An array of references to pool of DIPs. */\n  backendAddressPools?: SubResource[];\n  /** The reference to the load balancer probe used by the load balancing rule. */\n  probe?: SubResource;\n  /** The reference to the transport protocol used by the load balancing rule. */\n  protocol?: TransportProtocol;\n  /** The load distribution policy for this rule. */\n  loadDistribution?: LoadDistribution;\n  /** The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables \"Any Port\". */\n  frontendPort?: number;\n  /** The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables \"Any Port\". */\n  backendPort?: number;\n  /** The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP. */\n  idleTimeoutInMinutes?: number;\n  /** Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint. */\n  enableFloatingIP?: boolean;\n  /** Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP. */\n  enableTcpReset?: boolean;\n  /** Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule. */\n  disableOutboundSnat?: boolean;\n  /**\n   * The provisioning state of the load balancing rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** A load balancer probe. */\nexport interface Probe extends SubResource {\n  /** The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The load balancer rules that use this probe.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly loadBalancingRules?: SubResource[];\n  /** The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful. */\n  protocol?: ProbeProtocol;\n  /** The port for communicating the probe. Possible values range from 1 to 65535, inclusive. */\n  port?: number;\n  /** The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5. */\n  intervalInSeconds?: number;\n  /** Determines how new connections are handled by the load balancer when all backend instances are probed down. */\n  noHealthyBackendsBehavior?: ProbeNoHealthyBackendsBehavior;\n  /** The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure. */\n  numberOfProbes?: number;\n  /** The number of consecutive successful or failed probes in order to allow or deny traffic from being delivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be taken out of rotation and require the same number of successful consecutive probes to be placed back in rotation. */\n  probeThreshold?: number;\n  /** The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value. */\n  requestPath?: string;\n  /**\n   * The provisioning state of the probe resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Inbound NAT pool of the load balancer. */\nexport interface InboundNatPool extends SubResource {\n  /** The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** A reference to frontend IP addresses. */\n  frontendIPConfiguration?: SubResource;\n  /** The reference to the transport protocol used by the inbound NAT pool. */\n  protocol?: TransportProtocol;\n  /** The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534. */\n  frontendPortRangeStart?: number;\n  /** The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535. */\n  frontendPortRangeEnd?: number;\n  /** The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535. */\n  backendPort?: number;\n  /** The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP. */\n  idleTimeoutInMinutes?: number;\n  /** Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint. */\n  enableFloatingIP?: boolean;\n  /** Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP. */\n  enableTcpReset?: boolean;\n  /**\n   * The provisioning state of the inbound NAT pool resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Outbound rule of the load balancer. */\nexport interface OutboundRule extends SubResource {\n  /** The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The number of outbound ports to be used for NAT. */\n  allocatedOutboundPorts?: number;\n  /** The Frontend IP addresses of the load balancer. */\n  frontendIPConfigurations?: SubResource[];\n  /** A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs. */\n  backendAddressPool?: SubResource;\n  /**\n   * The provisioning state of the outbound rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The protocol for the outbound rule in load balancer. */\n  protocol?: LoadBalancerOutboundRuleProtocol;\n  /** Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP. */\n  enableTcpReset?: boolean;\n  /** The timeout for the TCP idle connection. */\n  idleTimeoutInMinutes?: number;\n}\n\n/** Container network interface configuration child resource. */\nexport interface ContainerNetworkInterfaceConfiguration extends SubResource {\n  /** The name of the resource. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * Sub Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** A list of ip configurations of the container network interface configuration. */\n  ipConfigurations?: IPConfigurationProfile[];\n  /** A list of container network interfaces created from this container network interface configuration. */\n  containerNetworkInterfaces?: SubResource[];\n  /**\n   * The provisioning state of the container network interface configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Reference to container resource in remote resource provider. */\nexport interface Container extends SubResource {}\n\n/** Container network interface child resource. */\nexport interface ContainerNetworkInterface extends SubResource {\n  /** The name of the resource. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * Sub Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Container network interface configuration from which this container network interface is created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly containerNetworkInterfaceConfiguration?: ContainerNetworkInterfaceConfiguration;\n  /** Reference to the container to which this container network interface is attached. */\n  container?: Container;\n  /**\n   * Reference to the ip configuration on this container nic.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipConfigurations?: ContainerNetworkInterfaceIpConfiguration[];\n  /**\n   * The provisioning state of the container network interface resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Virtual Appliance Site resource. */\nexport interface VirtualApplianceSite extends SubResource {\n  /** Name of the virtual appliance site. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Site type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Address Prefix. */\n  addressPrefix?: string;\n  /** Office 365 Policy. */\n  o365Policy?: Office365PolicyProperties;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** NVA Inbound Security Rule resource. */\nexport interface InboundSecurityRule extends SubResource {\n  /** Name of security rule collection. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * NVA inbound security rule type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Rule Type. This should be either AutoExpire or Permanent. Auto Expire Rule only creates NSG rules. Permanent Rule creates NSG rule and SLB LB Rule. */\n  ruleType?: InboundSecurityRuleType;\n  /** List of allowed rules. */\n  rules?: InboundSecurityRules[];\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Private dns zone group resource. */\nexport interface PrivateDnsZoneGroup extends SubResource {\n  /** Name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The provisioning state of the private dns zone group resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** A collection of private dns zone configurations of the private dns zone group. */\n  privateDnsZoneConfigs?: PrivateDnsZoneConfig[];\n}\n\n/** Route Filter Rule Resource. */\nexport interface RouteFilterRule extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /** Resource location. */\n  location?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The access type of the rule. */\n  access?: Access;\n  /** The rule type of the rule. */\n  routeFilterRuleType?: RouteFilterRuleType;\n  /** The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']. */\n  communities?: string[];\n  /**\n   * The provisioning state of the route filter rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Peerings in a virtual network resource. */\nexport interface VirtualNetworkPeering extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Resource type. */\n  type?: string;\n  /** Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space. */\n  allowVirtualNetworkAccess?: boolean;\n  /** Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network. */\n  allowForwardedTraffic?: boolean;\n  /** If gateway links can be used in remote virtual networking to link to this virtual network. */\n  allowGatewayTransit?: boolean;\n  /** If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway. */\n  useRemoteGateways?: boolean;\n  /** The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering). */\n  remoteVirtualNetwork?: SubResource;\n  /** The local address space of the local virtual network that is peered. */\n  localAddressSpace?: AddressSpace;\n  /** The current local address space of the local virtual network that is peered. */\n  localVirtualNetworkAddressSpace?: AddressSpace;\n  /** The reference to the address space peered with the remote virtual network. */\n  remoteAddressSpace?: AddressSpace;\n  /** The reference to the current address space of the remote virtual network. */\n  remoteVirtualNetworkAddressSpace?: AddressSpace;\n  /** The reference to the remote virtual network's Bgp Communities. */\n  remoteBgpCommunities?: VirtualNetworkBgpCommunities;\n  /**\n   * The reference to the remote virtual network's encryption\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remoteVirtualNetworkEncryption?: VirtualNetworkEncryption;\n  /** The status of the virtual network peering. */\n  peeringState?: VirtualNetworkPeeringState;\n  /** The peering sync status of the virtual network peering. */\n  peeringSyncLevel?: VirtualNetworkPeeringLevel;\n  /**\n   * The provisioning state of the virtual network peering resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** If we need to verify the provisioning state of the remote gateway. */\n  doNotVerifyRemoteGateways?: boolean;\n  /**\n   * The resourceGuid property of the Virtual Network peering resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /** Whether complete virtual network address space is peered. */\n  peerCompleteVnets?: boolean;\n  /** Whether only Ipv6 address space is peered for subnet peering. */\n  enableOnlyIPv6Peering?: boolean;\n  /** List of local subnet names that are subnet peered with remote virtual network. */\n  localSubnetNames?: string[];\n  /** List of remote subnet names from remote virtual network that are subnet peered. */\n  remoteSubnetNames?: string[];\n}\n\n/** IP configuration for virtual network gateway. */\nexport interface VirtualNetworkGatewayIPConfiguration extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The private IP address allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n  /** The reference to the subnet resource. */\n  subnet?: SubResource;\n  /** The reference to the public IP resource. */\n  publicIPAddress?: SubResource;\n  /**\n   * Private IP Address for this gateway.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIPAddress?: string;\n  /**\n   * The provisioning state of the virtual network gateway IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** VPN client root certificate of virtual network gateway. */\nexport interface VpnClientRootCertificate extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The certificate public data. */\n  publicCertData: string;\n  /**\n   * The provisioning state of the VPN client root certificate resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** VPN client revoked certificate of virtual network gateway. */\nexport interface VpnClientRevokedCertificate extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The revoked VPN client certificate thumbprint. */\n  thumbprint?: string;\n  /**\n   * The provisioning state of the VPN client revoked certificate resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** A vpn client connection configuration for client connection configuration. */\nexport interface VngClientConnectionConfiguration extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The reference to the address space resource which represents Address space for P2S VpnClient. */\n  vpnClientAddressPool?: AddressSpace;\n  /** List of references to virtualNetworkGatewayPolicyGroups */\n  virtualNetworkGatewayPolicyGroups?: SubResource[];\n  /**\n   * The provisioning state of the VngClientConnectionConfiguration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Parameters for VirtualNetworkGatewayPolicyGroup. */\nexport interface VirtualNetworkGatewayPolicyGroup extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not. */\n  isDefault?: boolean;\n  /** Priority for VirtualNetworkGatewayPolicyGroup. */\n  priority?: number;\n  /** Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup. */\n  policyMembers?: VirtualNetworkGatewayPolicyGroupMember[];\n  /**\n   * List of references to vngClientConnectionConfigurations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vngClientConnectionConfigurations?: SubResource[];\n  /**\n   * The provisioning state of the VirtualNetworkGatewayPolicyGroup resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** VirtualNetworkGatewayNatRule Resource. */\nexport interface VirtualNetworkGatewayNatRule extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The provisioning state of the NAT Rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The type of NAT rule for VPN NAT. */\n  typePropertiesType?: VpnNatRuleType;\n  /** The Source NAT direction of a VPN NAT. */\n  mode?: VpnNatRuleMode;\n  /** The private IP address internal mapping for NAT. */\n  internalMappings?: VpnNatRuleMapping[];\n  /** The private IP address external mapping for NAT. */\n  externalMappings?: VpnNatRuleMapping[];\n  /** The IP Configuration ID this NAT rule applies to. */\n  ipConfigurationId?: string;\n}\n\n/** Response for GetConnectionSharedKey API service call. */\nexport interface ConnectionSharedKey extends SubResource {\n  /** The virtual network connection shared key value. */\n  value: string;\n}\n\n/** Virtual Router Peering resource. */\nexport interface VirtualRouterPeering extends SubResource {\n  /** Name of the virtual router peering that is unique within a virtual router. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Peering type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Peer ASN. */\n  peerAsn?: number;\n  /** Peer IP. */\n  peerIp?: string;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** VpnSiteLink Resource. */\nexport interface VpnSiteLink extends SubResource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The link provider properties. */\n  linkProperties?: VpnLinkProviderProperties;\n  /** The ip-address for the vpn-site-link. */\n  ipAddress?: string;\n  /** FQDN of vpn-site-link. */\n  fqdn?: string;\n  /** The set of bgp properties. */\n  bgpProperties?: VpnLinkBgpSettings;\n  /**\n   * The provisioning state of the VPN site link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** VpnServerConfigurationPolicyGroup Resource. */\nexport interface VpnServerConfigurationPolicyGroup extends SubResource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Shows if this is a Default VpnServerConfigurationPolicyGroup or not. */\n  isDefault?: boolean;\n  /** Priority for VpnServerConfigurationPolicyGroup. */\n  priority?: number;\n  /** Multiple PolicyMembers for VpnServerConfigurationPolicyGroup. */\n  policyMembers?: VpnServerConfigurationPolicyGroupMember[];\n  /**\n   * List of references to P2SConnectionConfigurations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly p2SConnectionConfigurations?: SubResource[];\n  /**\n   * The provisioning state of the VpnServerConfigurationPolicyGroup resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** P2SConnectionConfiguration Resource. */\nexport interface P2SConnectionConfiguration extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The reference to the address space resource which represents Address space for P2S VpnClient. */\n  vpnClientAddressPool?: AddressSpace;\n  /** The Routing Configuration indicating the associated and propagated route tables on this connection. */\n  routingConfiguration?: RoutingConfiguration;\n  /** Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not. */\n  enableInternetSecurity?: boolean;\n  /**\n   * List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly configurationPolicyGroupAssociations?: SubResource[];\n  /**\n   * List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly previousConfigurationPolicyGroupAssociations?: VpnServerConfigurationPolicyGroup[];\n  /**\n   * The provisioning state of the P2SConnectionConfiguration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** VirtualHubRouteTableV2 Resource. */\nexport interface VirtualHubRouteTableV2 extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** List of all routes. */\n  routes?: VirtualHubRouteV2[];\n  /** List of all connections attached to this route table v2. */\n  attachedConnections?: string[];\n  /**\n   * The provisioning state of the virtual hub route table v2 resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** The RouteMap child resource of a Virtual hub. */\nexport interface RouteMap extends SubResource {\n  /**\n   * The name of the resource that is unique within a resource group. This name can be used to access the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** List of connections which have this RoutMap associated for inbound traffic. */\n  associatedInboundConnections?: string[];\n  /** List of connections which have this RoutMap associated for outbound traffic. */\n  associatedOutboundConnections?: string[];\n  /** List of RouteMap rules to be applied. */\n  rules?: RouteMapRule[];\n  /**\n   * The provisioning state of the RouteMap resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** HubVirtualNetworkConnection Resource. */\nexport interface HubVirtualNetworkConnection extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Reference to the remote virtual network. */\n  remoteVirtualNetwork?: SubResource;\n  /** Deprecated: VirtualHub to RemoteVnet transit to enabled or not. */\n  allowHubToRemoteVnetTransit?: boolean;\n  /** Deprecated: Allow RemoteVnet to use Virtual Hub's gateways. */\n  allowRemoteVnetToUseHubVnetGateways?: boolean;\n  /** Enable internet security. */\n  enableInternetSecurity?: boolean;\n  /** The Routing Configuration indicating the associated and propagated route tables on this connection. */\n  routingConfiguration?: RoutingConfiguration;\n  /**\n   * The provisioning state of the hub virtual network connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** VpnSiteLinkConnection Resource. */\nexport interface VpnSiteLinkConnection extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Id of the connected vpn site link. */\n  vpnSiteLink?: SubResource;\n  /** Routing weight for vpn connection. */\n  routingWeight?: number;\n  /** Vpn link connection mode. */\n  vpnLinkConnectionMode?: VpnLinkConnectionMode;\n  /**\n   * The connection status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionStatus?: VpnConnectionStatus;\n  /** Connection protocol used for this connection. */\n  vpnConnectionProtocolType?: VirtualNetworkGatewayConnectionProtocol;\n  /**\n   * Ingress bytes transferred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingressBytesTransferred?: number;\n  /**\n   * Egress bytes transferred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly egressBytesTransferred?: number;\n  /** Expected bandwidth in MBPS. */\n  connectionBandwidth?: number;\n  /** SharedKey for the vpn connection. */\n  sharedKey?: string;\n  /** EnableBgp flag. */\n  enableBgp?: boolean;\n  /** vpnGatewayCustomBgpAddresses used by this connection. */\n  vpnGatewayCustomBgpAddresses?: GatewayCustomBgpIpAddressIpConfiguration[];\n  /** Enable policy-based traffic selectors. */\n  usePolicyBasedTrafficSelectors?: boolean;\n  /** The IPSec Policies to be considered by this connection. */\n  ipsecPolicies?: IpsecPolicy[];\n  /** EnableBgp flag. */\n  enableRateLimiting?: boolean;\n  /** Use local azure ip to initiate connection. */\n  useLocalAzureIpAddress?: boolean;\n  /**\n   * The provisioning state of the VPN site link connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** List of ingress NatRules. */\n  ingressNatRules?: SubResource[];\n  /** List of egress NatRules. */\n  egressNatRules?: SubResource[];\n  /** Dead Peer Detection timeout in seconds for VpnLink connection. */\n  dpdTimeoutSeconds?: number;\n}\n\n/** VpnConnection Resource. */\nexport interface VpnConnection extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Id of the connected vpn site. */\n  remoteVpnSite?: SubResource;\n  /** Routing weight for vpn connection. */\n  routingWeight?: number;\n  /** DPD timeout in seconds for vpn connection. */\n  dpdTimeoutSeconds?: number;\n  /**\n   * The connection status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionStatus?: VpnConnectionStatus;\n  /** Connection protocol used for this connection. */\n  vpnConnectionProtocolType?: VirtualNetworkGatewayConnectionProtocol;\n  /**\n   * Ingress bytes transferred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingressBytesTransferred?: number;\n  /**\n   * Egress bytes transferred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly egressBytesTransferred?: number;\n  /** Expected bandwidth in MBPS. */\n  connectionBandwidth?: number;\n  /** SharedKey for the vpn connection. */\n  sharedKey?: string;\n  /** EnableBgp flag. */\n  enableBgp?: boolean;\n  /** Enable policy-based traffic selectors. */\n  usePolicyBasedTrafficSelectors?: boolean;\n  /** The IPSec Policies to be considered by this connection. */\n  ipsecPolicies?: IpsecPolicy[];\n  /** The Traffic Selector Policies to be considered by this connection. */\n  trafficSelectorPolicies?: TrafficSelectorPolicy[];\n  /** EnableBgp flag. */\n  enableRateLimiting?: boolean;\n  /** Enable internet security. */\n  enableInternetSecurity?: boolean;\n  /** Use local azure ip to initiate connection. */\n  useLocalAzureIpAddress?: boolean;\n  /**\n   * The provisioning state of the VPN connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** List of all vpn site link connections to the gateway. */\n  vpnLinkConnections?: VpnSiteLinkConnection[];\n  /** The Routing Configuration indicating the associated and propagated route tables on this connection. */\n  routingConfiguration?: RoutingConfiguration;\n}\n\n/** VpnGatewayNatRule Resource. */\nexport interface VpnGatewayNatRule extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The provisioning state of the NAT Rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The type of NAT rule for VPN NAT. */\n  typePropertiesType?: VpnNatRuleType;\n  /** The Source NAT direction of a VPN NAT. */\n  mode?: VpnNatRuleMode;\n  /** The private IP address internal mapping for NAT. */\n  internalMappings?: VpnNatRuleMapping[];\n  /** The private IP address external mapping for NAT. */\n  externalMappings?: VpnNatRuleMapping[];\n  /** The IP Configuration ID this NAT rule applies to. */\n  ipConfigurationId?: string;\n  /**\n   * List of egress VpnSiteLinkConnections.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly egressVpnSiteLinkConnections?: SubResource[];\n  /**\n   * List of ingress VpnSiteLinkConnections.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingressVpnSiteLinkConnections?: SubResource[];\n}\n\n/** SharedKey Resource . */\nexport interface ConnectionSharedKeyResult extends SubResource {\n  /** Properties of the shared key. */\n  properties?: SharedKeyProperties;\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** ExpressRouteConnection resource. */\nexport interface ExpressRouteConnection extends SubResource {\n  /** The name of the resource. */\n  name: string;\n  /**\n   * The provisioning state of the express route connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The ExpressRoute circuit peering. */\n  expressRouteCircuitPeering?: ExpressRouteCircuitPeeringId;\n  /** Authorization key to establish the connection. */\n  authorizationKey?: string;\n  /** The routing weight associated to the connection. */\n  routingWeight?: number;\n  /** Enable internet security. */\n  enableInternetSecurity?: boolean;\n  /** Enable FastPath to vWan Firewall hub. */\n  expressRouteGatewayBypass?: boolean;\n  /** Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled. */\n  enablePrivateLinkFastPath?: boolean;\n  /** The Routing Configuration indicating the associated and propagated route tables on this connection. */\n  routingConfiguration?: RoutingConfiguration;\n}\n\n/** NetworkVirtualApplianceConnection resource. */\nexport interface NetworkVirtualApplianceConnection extends SubResource {\n  /** The name of the resource. */\n  name?: string;\n  /** The name of the resource. */\n  namePropertiesName?: string;\n  /**\n   * The provisioning state of the NetworkVirtualApplianceConnection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Network Virtual Appliance ASN. */\n  asn?: number;\n  /** Unique identifier for the connection. */\n  tunnelIdentifier?: number;\n  /** List of bgpPeerAddresses for the NVA instances */\n  bgpPeerAddress?: string[];\n  /** Enable internet security. */\n  enableInternetSecurity?: boolean;\n  /** The Routing Configuration indicating the associated and propagated route tables on this connection. */\n  routingConfiguration?: RoutingConfiguration;\n}\n\n/** Virtual Appliance Site resource. */\nexport interface BgpConnection extends SubResource {\n  /** Name of the connection. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Connection type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Peer ASN. */\n  peerAsn?: number;\n  /** Peer IP. */\n  peerIp?: string;\n  /** The reference to the HubVirtualNetworkConnection resource. */\n  hubVirtualNetworkConnection?: SubResource;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The current state of the VirtualHub to Peer.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionState?: HubBgpConnectionStatus;\n}\n\n/** IpConfigurations. */\nexport interface HubIpConfiguration extends SubResource {\n  /** Name of the Ip Configuration. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Ipconfiguration type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The private IP address of the IP configuration. */\n  privateIPAddress?: string;\n  /** The private IP address allocation method. */\n  privateIPAllocationMethod?: IPAllocationMethod;\n  /** The reference to the subnet resource. */\n  subnet?: Subnet;\n  /** The reference to the public IP resource. */\n  publicIPAddress?: PublicIPAddress;\n  /**\n   * The provisioning state of the IP configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** RouteTable resource in a virtual hub. */\nexport interface HubRouteTable extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** List of all routes. */\n  routes?: HubRoute[];\n  /** List of labels associated with this route table. */\n  labels?: string[];\n  /**\n   * List of all connections associated with this route table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly associatedConnections?: string[];\n  /**\n   * List of all connections that advertise to this route table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly propagatingConnections?: string[];\n  /**\n   * The provisioning state of the RouteTable resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** The routing intent child resource of a Virtual hub. */\nexport interface RoutingIntent extends SubResource {\n  /** The name of the resource that is unique within a resource group. This name can be used to access the resource. */\n  name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** List of routing policies. */\n  routingPolicies?: RoutingPolicy[];\n  /**\n   * The provisioning state of the RoutingIntent resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Route Filter Rule Resource. */\nexport interface PatchRouteFilterRule extends SubResource {\n  /**\n   * The name of the resource that is unique within a resource group. This name can be used to access the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The access type of the rule. */\n  access?: Access;\n  /** The rule type of the rule. */\n  routeFilterRuleType?: RouteFilterRuleType;\n  /** The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']. */\n  communities?: string[];\n  /**\n   * The provisioning state of the route filter rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Route Filter Resource. */\nexport interface PatchRouteFilter extends SubResource {\n  /**\n   * The name of the resource that is unique within a resource group. This name can be used to access the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** Collection of RouteFilterRules contained within a route filter. */\n  rules?: RouteFilterRule[];\n  /**\n   * A collection of references to express route circuit peerings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly peerings?: ExpressRouteCircuitPeering[];\n  /**\n   * A collection of references to express route circuit ipv6 peerings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipv6Peerings?: ExpressRouteCircuitPeering[];\n  /**\n   * The provisioning state of the route filter resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** An application security group in a resource group. */\nexport interface ApplicationSecurityGroup extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the application security group resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Private endpoint resource. */\nexport interface PrivateEndpoint extends Resource {\n  /** The extended location of the load balancer. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The ID of the subnet from which the private IP will be allocated. */\n  subnet?: Subnet;\n  /**\n   * An array of references to the network interfaces created for this private endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkInterfaces?: NetworkInterface[];\n  /**\n   * The provisioning state of the private endpoint resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** A grouping of information about the connection to the remote resource. */\n  privateLinkServiceConnections?: PrivateLinkServiceConnection[];\n  /** A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource. */\n  manualPrivateLinkServiceConnections?: PrivateLinkServiceConnection[];\n  /** An array of custom dns configurations. */\n  customDnsConfigs?: CustomDnsConfigPropertiesFormat[];\n  /** Application security groups in which the private endpoint IP configuration is included. */\n  applicationSecurityGroups?: ApplicationSecurityGroup[];\n  /** A list of IP configurations of the private endpoint. This will be used to map to the First Party Service's endpoints. */\n  ipConfigurations?: PrivateEndpointIPConfiguration[];\n  /** The custom name of the network interface attached to the private endpoint. */\n  customNetworkInterfaceName?: string;\n}\n\n/** Private link service resource. */\nexport interface PrivateLinkService extends Resource {\n  /** The extended location of the load balancer. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** An array of references to the load balancer IP configurations. */\n  loadBalancerFrontendIpConfigurations?: FrontendIPConfiguration[];\n  /** An array of private link service IP configurations. */\n  ipConfigurations?: PrivateLinkServiceIpConfiguration[];\n  /** The destination IP address of the private link service. */\n  destinationIPAddress?: string;\n  /**\n   * An array of references to the network interfaces created for this private link service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkInterfaces?: NetworkInterface[];\n  /**\n   * The provisioning state of the private link service resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * An array of list about connections to the private endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnection[];\n  /** The visibility list of the private link service. */\n  visibility?: PrivateLinkServicePropertiesVisibility;\n  /** The auto-approval list of the private link service. */\n  autoApproval?: PrivateLinkServicePropertiesAutoApproval;\n  /** The list of Fqdn. */\n  fqdns?: string[];\n  /**\n   * The alias of the private link service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly alias?: string;\n  /** Whether the private link service is enabled for proxy protocol or not. */\n  enableProxyProtocol?: boolean;\n}\n\n/** A network interface in a resource group. */\nexport interface NetworkInterface extends Resource {\n  /** The extended location of the network interface. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The reference to a virtual machine.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachine?: SubResource;\n  /** The reference to the NetworkSecurityGroup resource. */\n  networkSecurityGroup?: NetworkSecurityGroup;\n  /**\n   * A reference to the private endpoint to which the network interface is linked.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpoint?: PrivateEndpoint;\n  /** A list of IPConfigurations of the network interface. */\n  ipConfigurations?: NetworkInterfaceIPConfiguration[];\n  /**\n   * A list of TapConfigurations of the network interface.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tapConfigurations?: NetworkInterfaceTapConfiguration[];\n  /** The DNS settings in network interface. */\n  dnsSettings?: NetworkInterfaceDnsSettings;\n  /**\n   * The MAC address of the network interface.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly macAddress?: string;\n  /**\n   * Whether this is a primary network interface on a virtual machine.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primary?: boolean;\n  /**\n   * Whether the virtual machine this nic is attached to supports encryption.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vnetEncryptionSupported?: boolean;\n  /**\n   * Whether default outbound connectivity for nic was configured or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultOutboundConnectivityEnabled?: boolean;\n  /** If the network interface is configured for accelerated networking. Not applicable to VM sizes which require accelerated networking. */\n  enableAcceleratedNetworking?: boolean;\n  /** Indicates whether to disable tcp state tracking. */\n  disableTcpStateTracking?: boolean;\n  /** Indicates whether IP forwarding is enabled on this network interface. */\n  enableIPForwarding?: boolean;\n  /**\n   * A list of references to linked BareMetal resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostedWorkloads?: string[];\n  /**\n   * A reference to the dscp configuration to which the network interface is linked.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dscpConfiguration?: SubResource;\n  /**\n   * The resource GUID property of the network interface resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the network interface resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** WorkloadType of the NetworkInterface for BareMetal resources */\n  workloadType?: string;\n  /** Type of Network Interface resource. */\n  nicType?: NetworkInterfaceNicType;\n  /** Privatelinkservice of the network interface resource. */\n  privateLinkService?: PrivateLinkService;\n  /** Migration phase of Network Interface resource. */\n  migrationPhase?: NetworkInterfaceMigrationPhase;\n  /** Auxiliary mode of Network Interface resource. */\n  auxiliaryMode?: NetworkInterfaceAuxiliaryMode;\n  /** Auxiliary sku of Network Interface resource. */\n  auxiliarySku?: NetworkInterfaceAuxiliarySku;\n}\n\n/** A flow log resource. */\nexport interface FlowLog extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** FlowLog resource Managed Identity */\n  identity?: ManagedServiceIdentity;\n  /** ID of network security group to which flow log will be applied. */\n  targetResourceId?: string;\n  /**\n   * Guid of network security group to which flow log will be applied.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResourceGuid?: string;\n  /** ID of the storage account which is used to store the flow log. */\n  storageId?: string;\n  /** Optional field to filter network traffic logs based on SrcIP, SrcPort, DstIP, DstPort, Protocol, Encryption, Direction and Action. If not specified, all network traffic will be logged. */\n  enabledFilteringCriteria?: string;\n  /** Flag to enable/disable flow logging. */\n  enabled?: boolean;\n  /** Parameters that define the retention policy for flow log. */\n  retentionPolicy?: RetentionPolicyParameters;\n  /** Parameters that define the flow log format. */\n  format?: FlowLogFormatParameters;\n  /** Parameters that define the configuration of traffic analytics. */\n  flowAnalyticsConfiguration?: TrafficAnalyticsProperties;\n  /**\n   * The provisioning state of the flow log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** NetworkSecurityGroup resource. */\nexport interface NetworkSecurityGroup extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** When enabled, flows created from Network Security Group connections will be re-evaluated when rules are updates. Initial enablement will trigger re-evaluation. */\n  flushConnection?: boolean;\n  /** A collection of security rules of the network security group. */\n  securityRules?: SecurityRule[];\n  /**\n   * The default security rules of network security group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultSecurityRules?: SecurityRule[];\n  /**\n   * A collection of references to network interfaces.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkInterfaces?: NetworkInterface[];\n  /**\n   * A collection of references to subnets.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnets?: Subnet[];\n  /**\n   * A collection of references to flow log resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly flowLogs?: FlowLog[];\n  /**\n   * The resource GUID property of the network security group resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the network security group resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Route table resource. */\nexport interface RouteTable extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Collection of routes contained within a route table. */\n  routes?: Route[];\n  /**\n   * A collection of references to subnets.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnets?: Subnet[];\n  /** Whether to disable the routes learned by BGP on that route table. True means disable. */\n  disableBgpRoutePropagation?: boolean;\n  /**\n   * The provisioning state of the route table resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The resource GUID property of the route table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Service End point policy resource. */\nexport interface ServiceEndpointPolicy extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Kind of service endpoint policy. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** A collection of service endpoint policy definitions of the service endpoint policy. */\n  serviceEndpointPolicyDefinitions?: ServiceEndpointPolicyDefinition[];\n  /**\n   * A collection of references to subnets.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnets?: Subnet[];\n  /**\n   * The resource GUID property of the service endpoint policy resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the service endpoint policy resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The alias indicating if the policy belongs to a service */\n  serviceAlias?: string;\n  /** A collection of contextual service endpoint policy. */\n  contextualServiceEndpointPolicies?: string[];\n}\n\n/** Nat Gateway resource. */\nexport interface NatGateway extends Resource {\n  /** The nat gateway SKU. */\n  sku?: NatGatewaySku;\n  /** A list of availability zones denoting the zone in which Nat Gateway should be deployed. */\n  zones?: string[];\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The idle timeout of the nat gateway. */\n  idleTimeoutInMinutes?: number;\n  /** An array of public ip addresses associated with the nat gateway resource. */\n  publicIpAddresses?: SubResource[];\n  /** An array of public ip prefixes associated with the nat gateway resource. */\n  publicIpPrefixes?: SubResource[];\n  /**\n   * An array of references to the subnets using this nat gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnets?: SubResource[];\n  /**\n   * The resource GUID property of the NAT gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the NAT gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Public IP address resource. */\nexport interface PublicIPAddress extends Resource {\n  /** The extended location of the public ip address. */\n  extendedLocation?: ExtendedLocation;\n  /** The public IP address SKU. */\n  sku?: PublicIPAddressSku;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** A list of availability zones denoting the IP allocated for the resource needs to come from. */\n  zones?: string[];\n  /** The public IP address allocation method. */\n  publicIPAllocationMethod?: IPAllocationMethod;\n  /** The public IP address version. */\n  publicIPAddressVersion?: IPVersion;\n  /**\n   * The IP configuration associated with the public IP address.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipConfiguration?: IPConfiguration;\n  /** The FQDN of the DNS record associated with the public IP address. */\n  dnsSettings?: PublicIPAddressDnsSettings;\n  /** The DDoS protection custom policy associated with the public IP address. */\n  ddosSettings?: DdosSettings;\n  /** The list of tags associated with the public IP address. */\n  ipTags?: IpTag[];\n  /** The IP address associated with the public IP address resource. */\n  ipAddress?: string;\n  /** The Public IP Prefix this Public IP Address should be allocated from. */\n  publicIPPrefix?: SubResource;\n  /** The idle timeout of the public IP address. */\n  idleTimeoutInMinutes?: number;\n  /**\n   * The resource GUID property of the public IP address resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the public IP address resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The service public IP address of the public IP address resource. */\n  servicePublicIPAddress?: PublicIPAddress;\n  /** The NatGateway for the Public IP address. */\n  natGateway?: NatGateway;\n  /** Migration phase of Public IP Address. */\n  migrationPhase?: PublicIPAddressMigrationPhase;\n  /** The linked public IP address of the public IP address resource. */\n  linkedPublicIPAddress?: PublicIPAddress;\n  /** Specify what happens to the public IP address when the VM using it is deleted */\n  deleteOption?: DeleteOptions;\n}\n\n/** Virtual Network Tap resource. */\nexport interface VirtualNetworkTap extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkInterfaceTapConfigurations?: NetworkInterfaceTapConfiguration[];\n  /**\n   * The resource GUID property of the virtual network tap resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the virtual network tap resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The reference to the private IP Address of the collector nic that will receive the tap. */\n  destinationNetworkInterfaceIPConfiguration?: NetworkInterfaceIPConfiguration;\n  /** The reference to the private IP address on the internal Load Balancer that will receive the tap. */\n  destinationLoadBalancerFrontEndIPConfiguration?: FrontendIPConfiguration;\n  /** The VXLAN destination port that will receive the tapped traffic. */\n  destinationPort?: number;\n}\n\n/** Application gateway resource. */\nexport interface ApplicationGateway extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** A list of availability zones denoting where the resource needs to come from. */\n  zones?: string[];\n  /** The identity of the application gateway, if configured. */\n  identity?: ManagedServiceIdentity;\n  /** SKU of the application gateway resource. */\n  sku?: ApplicationGatewaySku;\n  /** SSL policy of the application gateway resource. */\n  sslPolicy?: ApplicationGatewaySslPolicy;\n  /**\n   * Operational state of the application gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationalState?: ApplicationGatewayOperationalState;\n  /** Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  gatewayIPConfigurations?: ApplicationGatewayIPConfiguration[];\n  /** Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  authenticationCertificates?: ApplicationGatewayAuthenticationCertificate[];\n  /** Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  trustedRootCertificates?: ApplicationGatewayTrustedRootCertificate[];\n  /** Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  trustedClientCertificates?: ApplicationGatewayTrustedClientCertificate[];\n  /** SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  sslCertificates?: ApplicationGatewaySslCertificate[];\n  /** Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  frontendIPConfigurations?: ApplicationGatewayFrontendIPConfiguration[];\n  /** Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  frontendPorts?: ApplicationGatewayFrontendPort[];\n  /** Probes of the application gateway resource. */\n  probes?: ApplicationGatewayProbe[];\n  /** Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  backendAddressPools?: ApplicationGatewayBackendAddressPool[];\n  /** Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  backendHttpSettingsCollection?: ApplicationGatewayBackendHttpSettings[];\n  /** Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  backendSettingsCollection?: ApplicationGatewayBackendSettings[];\n  /** Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  httpListeners?: ApplicationGatewayHttpListener[];\n  /** Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  listeners?: ApplicationGatewayListener[];\n  /** SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  sslProfiles?: ApplicationGatewaySslProfile[];\n  /** URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  urlPathMaps?: ApplicationGatewayUrlPathMap[];\n  /** Request routing rules of the application gateway resource. */\n  requestRoutingRules?: ApplicationGatewayRequestRoutingRule[];\n  /** Routing rules of the application gateway resource. */\n  routingRules?: ApplicationGatewayRoutingRule[];\n  /** Rewrite rules for the application gateway resource. */\n  rewriteRuleSets?: ApplicationGatewayRewriteRuleSet[];\n  /** Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits). */\n  redirectConfigurations?: ApplicationGatewayRedirectConfiguration[];\n  /** Web application firewall configuration. */\n  webApplicationFirewallConfiguration?: ApplicationGatewayWebApplicationFirewallConfiguration;\n  /** Reference to the FirewallPolicy resource. */\n  firewallPolicy?: SubResource;\n  /** Whether HTTP2 is enabled on the application gateway resource. */\n  enableHttp2?: boolean;\n  /** Whether FIPS is enabled on the application gateway resource. */\n  enableFips?: boolean;\n  /** Autoscale Configuration. */\n  autoscaleConfiguration?: ApplicationGatewayAutoscaleConfiguration;\n  /** PrivateLink configurations on application gateway. */\n  privateLinkConfigurations?: ApplicationGatewayPrivateLinkConfiguration[];\n  /**\n   * Private Endpoint connections on application gateway.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: ApplicationGatewayPrivateEndpointConnection[];\n  /**\n   * The resource GUID property of the application gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the application gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Custom error configurations of the application gateway resource. */\n  customErrorConfigurations?: ApplicationGatewayCustomError[];\n  /** If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config. */\n  forceFirewallPolicyAssociation?: boolean;\n  /** Load distribution policies of the application gateway resource. */\n  loadDistributionPolicies?: ApplicationGatewayLoadDistributionPolicy[];\n  /** Global Configuration. */\n  globalConfiguration?: ApplicationGatewayGlobalConfiguration;\n  /**\n   * The default predefined SSL Policy applied on the application gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultPredefinedSslPolicy?: ApplicationGatewaySslPolicyName;\n}\n\n/** A web application firewall rule set. */\nexport interface ApplicationGatewayFirewallRuleSet extends Resource {\n  /**\n   * The provisioning state of the web application firewall rule set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The type of the web application firewall rule set. */\n  ruleSetType?: string;\n  /** The version of the web application firewall rule set type. */\n  ruleSetVersion?: string;\n  /** The rule groups of the web application firewall rule set. */\n  ruleGroups?: ApplicationGatewayFirewallRuleGroup[];\n  /** Tier of an application gateway that support the rule set. */\n  tiers?: ApplicationGatewayTierTypes[];\n}\n\n/** Response for ApplicationGatewayAvailableSslOptions API service call. */\nexport interface ApplicationGatewayAvailableSslOptions extends Resource {\n  /** List of available Ssl predefined policy. */\n  predefinedPolicies?: SubResource[];\n  /** Name of the Ssl predefined policy applied by default to application gateway. */\n  defaultPolicy?: ApplicationGatewaySslPolicyName;\n  /** List of available Ssl cipher suites. */\n  availableCipherSuites?: ApplicationGatewaySslCipherSuite[];\n  /** List of available Ssl protocols. */\n  availableProtocols?: ApplicationGatewaySslProtocol[];\n}\n\n/** Azure Firewall resource. */\nexport interface AzureFirewall extends Resource {\n  /** A list of availability zones denoting where the resource needs to come from. */\n  zones?: string[];\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Collection of application rule collections used by Azure Firewall. */\n  applicationRuleCollections?: AzureFirewallApplicationRuleCollection[];\n  /** Collection of NAT rule collections used by Azure Firewall. */\n  natRuleCollections?: AzureFirewallNatRuleCollection[];\n  /** Collection of network rule collections used by Azure Firewall. */\n  networkRuleCollections?: AzureFirewallNetworkRuleCollection[];\n  /** IP configuration of the Azure Firewall resource. */\n  ipConfigurations?: AzureFirewallIPConfiguration[];\n  /** IP configuration of the Azure Firewall used for management traffic. */\n  managementIpConfiguration?: AzureFirewallIPConfiguration;\n  /**\n   * The provisioning state of the Azure firewall resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The operation mode for Threat Intelligence. */\n  threatIntelMode?: AzureFirewallThreatIntelMode;\n  /** The virtualHub to which the firewall belongs. */\n  virtualHub?: SubResource;\n  /** The firewallPolicy associated with this azure firewall. */\n  firewallPolicy?: SubResource;\n  /** IP addresses associated with AzureFirewall. */\n  hubIPAddresses?: HubIPAddresses;\n  /**\n   * IpGroups associated with AzureFirewall.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipGroups?: AzureFirewallIpGroups[];\n  /** The Azure Firewall Resource SKU. */\n  sku?: AzureFirewallSku;\n  /** The additional properties used to further config this azure firewall. */\n  additionalProperties?: { [propertyName: string]: string };\n  /** Properties to provide a custom autoscale configuration to this azure firewall. */\n  autoscaleConfiguration?: AzureFirewallAutoscaleConfiguration;\n}\n\n/** Azure Firewall FQDN Tag Resource. */\nexport interface AzureFirewallFqdnTag extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The provisioning state of the Azure firewall FQDN tag resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The name of this FQDN Tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fqdnTagName?: string;\n}\n\n/** Bastion Host resource. */\nexport interface BastionHost extends Resource {\n  /** A list of availability zones denoting where the resource needs to come from. */\n  zones?: string[];\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The sku of this Bastion Host. */\n  sku?: Sku;\n  /** IP configuration of the Bastion Host resource. */\n  ipConfigurations?: BastionHostIPConfiguration[];\n  /** FQDN for the endpoint on which bastion host is accessible. */\n  dnsName?: string;\n  /** Reference to an existing virtual network required for Developer Bastion Host only. */\n  virtualNetwork?: SubResource;\n  networkAcls?: BastionHostPropertiesFormatNetworkAcls;\n  /**\n   * The provisioning state of the bastion host resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The scale units for the Bastion Host resource. */\n  scaleUnits?: number;\n  /** Enable/Disable Copy/Paste feature of the Bastion Host resource. */\n  disableCopyPaste?: boolean;\n  /** Enable/Disable File Copy feature of the Bastion Host resource. */\n  enableFileCopy?: boolean;\n  /** Enable/Disable IP Connect feature of the Bastion Host resource. */\n  enableIpConnect?: boolean;\n  /** Enable/Disable Shareable Link of the Bastion Host resource. */\n  enableShareableLink?: boolean;\n  /** Enable/Disable Tunneling feature of the Bastion Host resource. */\n  enableTunneling?: boolean;\n  /** Enable/Disable Kerberos feature of the Bastion Host resource. */\n  enableKerberos?: boolean;\n  /** Enable/Disable Session Recording feature of the Bastion Host resource. */\n  enableSessionRecording?: boolean;\n  /** Enable/Disable Private Only feature of the Bastion Host resource. */\n  enablePrivateOnlyBastion?: boolean;\n}\n\n/** Describes a Virtual Machine. */\nexport interface Vm extends Resource {}\n\n/** Custom IP prefix resource. */\nexport interface CustomIpPrefix extends Resource {\n  /** The extended location of the custom IP prefix. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** A list of availability zones denoting the IP allocated for the resource needs to come from. */\n  zones?: string[];\n  /** The ASN for CIDR advertising. Should be an integer as string. */\n  asn?: string;\n  /** The prefix range in CIDR notation. Should include the start address and the prefix length. */\n  cidr?: string;\n  /** Signed message for WAN validation. */\n  signedMessage?: string;\n  /** Authorization message for WAN validation. */\n  authorizationMessage?: string;\n  /** The Parent CustomIpPrefix for IPv6 /64 CustomIpPrefix. */\n  customIpPrefixParent?: SubResource;\n  /**\n   * The list of all Children for IPv6 /48 CustomIpPrefix.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly childCustomIpPrefixes?: SubResource[];\n  /** The commissioned state of the Custom IP Prefix. */\n  commissionedState?: CommissionedState;\n  /** Whether to do express route advertise. */\n  expressRouteAdvertise?: boolean;\n  /** The Geo for CIDR advertising. Should be an Geo code. */\n  geo?: Geo;\n  /** Whether to Advertise the range to Internet. */\n  noInternetAdvertise?: boolean;\n  /** Type of custom IP prefix. Should be Singular, Parent, or Child. */\n  prefixType?: CustomIpPrefixType;\n  /**\n   * The list of all referenced PublicIpPrefixes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIpPrefixes?: SubResource[];\n  /**\n   * The resource GUID property of the custom IP prefix resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The reason why resource is in failed state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failedReason?: string;\n  /**\n   * The provisioning state of the custom IP prefix resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** A DDoS custom policy in a resource group. */\nexport interface DdosCustomPolicy extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the DDoS custom policy resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Differentiated Services Code Point configuration for any given network interface */\nexport interface DscpConfiguration extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** List of markings to be used in the configuration. */\n  markings?: number[];\n  /** Source IP ranges. */\n  sourceIpRanges?: QosIpRange[];\n  /** Destination IP ranges. */\n  destinationIpRanges?: QosIpRange[];\n  /** Sources port ranges. */\n  sourcePortRanges?: QosPortRange[];\n  /** Destination port ranges. */\n  destinationPortRanges?: QosPortRange[];\n  /** RNM supported protocol types. */\n  protocol?: ProtocolType;\n  /** QoS object definitions */\n  qosDefinitionCollection?: QosDefinition[];\n  /**\n   * Qos Collection ID generated by RNM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly qosCollectionId?: string;\n  /**\n   * Associated Network Interfaces to the DSCP Configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly associatedNetworkInterfaces?: NetworkInterface[];\n  /**\n   * The resource GUID property of the DSCP Configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the DSCP Configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** ExpressRouteCircuit resource. */\nexport interface ExpressRouteCircuit extends Resource {\n  /** The SKU. */\n  sku?: ExpressRouteCircuitSku;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Allow classic operations. */\n  allowClassicOperations?: boolean;\n  /** The CircuitProvisioningState state of the resource. */\n  circuitProvisioningState?: string;\n  /** The ServiceProviderProvisioningState state of the resource. */\n  serviceProviderProvisioningState?: ServiceProviderProvisioningState;\n  /** The list of authorizations. */\n  authorizations?: ExpressRouteCircuitAuthorization[];\n  /** The list of peerings. */\n  peerings?: ExpressRouteCircuitPeering[];\n  /** The ServiceKey. */\n  serviceKey?: string;\n  /** The ServiceProviderNotes. */\n  serviceProviderNotes?: string;\n  /** The ServiceProviderProperties. */\n  serviceProviderProperties?: ExpressRouteCircuitServiceProviderProperties;\n  /** The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource. */\n  expressRoutePort?: SubResource;\n  /** The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource. */\n  bandwidthInGbps?: number;\n  /**\n   * The identifier of the circuit traffic. Outer tag for QinQ encapsulation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly stag?: number;\n  /**\n   * The provisioning state of the express route circuit resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The GatewayManager Etag. */\n  gatewayManagerEtag?: string;\n  /** Flag denoting global reach status. */\n  globalReachEnabled?: boolean;\n  /** The authorizationKey. */\n  authorizationKey?: string;\n  /**\n   * The authorization status of the Circuit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly authorizationStatus?: string;\n  /** Flag denoting rate-limiting status of the ExpressRoute direct-port circuit. */\n  enableDirectPortRateLimit?: boolean;\n}\n\n/** A ExpressRouteResourceProvider object. */\nexport interface ExpressRouteServiceProvider extends Resource {\n  /** A list of peering locations. */\n  peeringLocations?: string[];\n  /** A list of bandwidths offered. */\n  bandwidthsOffered?: ExpressRouteServiceProviderBandwidthsOffered[];\n  /**\n   * The provisioning state of the express route service provider resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** ExpressRouteCrossConnection resource. */\nexport interface ExpressRouteCrossConnection extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The name of the primary port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryAzurePort?: string;\n  /**\n   * The name of the secondary port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryAzurePort?: string;\n  /**\n   * The identifier of the circuit traffic.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sTag?: number;\n  /**\n   * The peering location of the ExpressRoute circuit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly peeringLocation?: string;\n  /**\n   * The circuit bandwidth In Mbps.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly bandwidthInMbps?: number;\n  /** The ExpressRouteCircuit. */\n  expressRouteCircuit?: ExpressRouteCircuitReference;\n  /** The provisioning state of the circuit in the connectivity provider system. */\n  serviceProviderProvisioningState?: ServiceProviderProvisioningState;\n  /** Additional read only notes set by the connectivity provider. */\n  serviceProviderNotes?: string;\n  /**\n   * The provisioning state of the express route cross connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The list of peerings. */\n  peerings?: ExpressRouteCrossConnectionPeering[];\n}\n\n/** Definition of the ExpressRoutePorts peering location resource. */\nexport interface ExpressRoutePortsLocation extends Resource {\n  /**\n   * Address of peering location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly address?: string;\n  /**\n   * Contact details of peering locations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly contact?: string;\n  /** The inventory of available ExpressRoutePort bandwidths. */\n  availableBandwidths?: ExpressRoutePortsLocationBandwidths[];\n  /**\n   * The provisioning state of the express route port location resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** ExpressRoutePort resource definition. */\nexport interface ExpressRoutePort extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The identity of ExpressRoutePort, if configured. */\n  identity?: ManagedServiceIdentity;\n  /** The name of the peering location that the ExpressRoutePort is mapped to physically. */\n  peeringLocation?: string;\n  /** Bandwidth of procured ports in Gbps. */\n  bandwidthInGbps?: number;\n  /**\n   * Aggregate Gbps of associated circuit bandwidths.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisionedBandwidthInGbps?: number;\n  /**\n   * Maximum transmission unit of the physical port pair(s).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mtu?: string;\n  /** Encapsulation method on physical ports. */\n  encapsulation?: ExpressRoutePortsEncapsulation;\n  /**\n   * Ether type of the physical port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etherType?: string;\n  /**\n   * Date of the physical port allocation to be used in Letter of Authorization.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly allocationDate?: string;\n  /** The set of physical links of the ExpressRoutePort resource. */\n  links?: ExpressRouteLink[];\n  /**\n   * Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly circuits?: SubResource[];\n  /**\n   * The provisioning state of the express route port resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The resource GUID property of the express route port resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /** The billing type of the ExpressRoutePort resource. */\n  billingType?: ExpressRoutePortsBillingType;\n}\n\n/** ExpressRouteProviderPort resource. */\nexport interface ExpressRouteProviderPort extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The name of the port pair.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly portPairDescriptor?: string;\n  /**\n   * The name of the primary port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryAzurePort?: string;\n  /**\n   * The name of the secondary port.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryAzurePort?: string;\n  /** The peering location of the port pair. */\n  peeringLocation?: string;\n  /** Overprovisioning factor for the port pair. */\n  overprovisionFactor?: number;\n  /** Bandwidth of the port in Mbps */\n  portBandwidthInMbps?: number;\n  /** Used Bandwidth of the port in Mbps */\n  usedBandwidthInMbps?: number;\n  /** Remaining Bandwidth of the port in Mbps */\n  remainingBandwidthInMbps?: number;\n}\n\n/** FirewallPolicy Resource. */\nexport interface FirewallPolicy extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The identity of the firewall policy. */\n  identity?: ManagedServiceIdentity;\n  /**\n   * A read-only string that represents the size of the FirewallPolicyPropertiesFormat in MB. (ex 0.5MB)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly size?: string;\n  /**\n   * List of references to FirewallPolicyRuleCollectionGroups.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ruleCollectionGroups?: SubResource[];\n  /**\n   * The provisioning state of the firewall policy resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The parent firewall policy from which rules are inherited. */\n  basePolicy?: SubResource;\n  /**\n   * List of references to Azure Firewalls that this Firewall Policy is associated with.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly firewalls?: SubResource[];\n  /**\n   * List of references to Child Firewall Policies.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly childPolicies?: SubResource[];\n  /** The operation mode for Threat Intelligence. */\n  threatIntelMode?: AzureFirewallThreatIntelMode;\n  /** ThreatIntel Whitelist for Firewall Policy. */\n  threatIntelWhitelist?: FirewallPolicyThreatIntelWhitelist;\n  /** Insights on Firewall Policy. */\n  insights?: FirewallPolicyInsights;\n  /** The private IP addresses/IP ranges to which traffic will not be SNAT. */\n  snat?: FirewallPolicySnat;\n  /** SQL Settings definition. */\n  sql?: FirewallPolicySQL;\n  /** DNS Proxy Settings definition. */\n  dnsSettings?: DnsSettings;\n  /** Explicit Proxy Settings definition. */\n  explicitProxy?: ExplicitProxy;\n  /** The configuration for Intrusion detection. */\n  intrusionDetection?: FirewallPolicyIntrusionDetection;\n  /** TLS Configuration definition. */\n  transportSecurity?: FirewallPolicyTransportSecurity;\n  /** The Firewall Policy SKU. */\n  sku?: FirewallPolicySku;\n}\n\n/** FirewallPolicy Resource. */\nexport interface FirewallPolicyDraft extends Resource {\n  /** The parent firewall policy from which rules are inherited. */\n  basePolicy?: SubResource;\n  /** The operation mode for Threat Intelligence. */\n  threatIntelMode?: AzureFirewallThreatIntelMode;\n  /** ThreatIntel Whitelist for Firewall Policy. */\n  threatIntelWhitelist?: FirewallPolicyThreatIntelWhitelist;\n  /** Insights on Firewall Policy. */\n  insights?: FirewallPolicyInsights;\n  /** The private IP addresses/IP ranges to which traffic will not be SNAT. */\n  snat?: FirewallPolicySnat;\n  /** SQL Settings definition. */\n  sql?: FirewallPolicySQL;\n  /** DNS Proxy Settings definition. */\n  dnsSettings?: DnsSettings;\n  /** Explicit Proxy Settings definition. */\n  explicitProxy?: ExplicitProxy;\n  /** The configuration for Intrusion detection. */\n  intrusionDetection?: FirewallPolicyIntrusionDetection;\n}\n\n/** IpAllocation resource. */\nexport interface IpAllocation extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The Subnet that using the prefix of this IpAllocation resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnet?: SubResource;\n  /**\n   * The VirtualNetwork that using the prefix of this IpAllocation resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualNetwork?: SubResource;\n  /** The type for the IpAllocation. */\n  typePropertiesType?: IpAllocationType;\n  /** The address prefix for the IpAllocation. */\n  prefix?: string;\n  /** The address prefix length for the IpAllocation. */\n  prefixLength?: number;\n  /** The address prefix Type for the IpAllocation. */\n  prefixType?: IPVersion;\n  /** The IPAM allocation ID. */\n  ipamAllocationId?: string;\n  /** IpAllocation tags. */\n  allocationTags?: { [propertyName: string]: string };\n}\n\n/** The IpGroups resource information. */\nexport interface IpGroup extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The provisioning state of the IpGroups resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** IpAddresses/IpAddressPrefixes in the IpGroups resource. */\n  ipAddresses?: string[];\n  /**\n   * List of references to Firewall resources that this IpGroups is associated with.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly firewalls?: SubResource[];\n  /**\n   * List of references to Firewall Policies resources that this IpGroups is associated with.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly firewallPolicies?: SubResource[];\n}\n\n/** LoadBalancer resource. */\nexport interface LoadBalancer extends Resource {\n  /** The extended location of the load balancer. */\n  extendedLocation?: ExtendedLocation;\n  /** The load balancer SKU. */\n  sku?: LoadBalancerSku;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Object representing the frontend IPs to be used for the load balancer. */\n  frontendIPConfigurations?: FrontendIPConfiguration[];\n  /** Collection of backend address pools used by a load balancer. */\n  backendAddressPools?: BackendAddressPool[];\n  /** Object collection representing the load balancing rules Gets the provisioning. */\n  loadBalancingRules?: LoadBalancingRule[];\n  /** Collection of probe objects used in the load balancer. */\n  probes?: Probe[];\n  /** Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules. */\n  inboundNatRules?: InboundNatRule[];\n  /** Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules. */\n  inboundNatPools?: InboundNatPool[];\n  /** The outbound rules. */\n  outboundRules?: OutboundRule[];\n  /**\n   * The resource GUID property of the load balancer resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the load balancer resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** The Managed Network resource */\nexport interface NetworkManager extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the network manager. */\n  description?: string;\n  /** Scope of Network Manager. */\n  networkManagerScopes?: NetworkManagerPropertiesNetworkManagerScopes;\n  /** Scope Access. */\n  networkManagerScopeAccesses?: ConfigurationType[];\n  /**\n   * The provisioning state of the network manager resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Network profile resource. */\nexport interface NetworkProfile extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * List of child container network interfaces.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly containerNetworkInterfaces?: ContainerNetworkInterface[];\n  /** List of chid container network interface configurations. */\n  containerNetworkInterfaceConfigurations?: ContainerNetworkInterfaceConfiguration[];\n  /**\n   * The resource GUID property of the network profile resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the network profile resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** NetworkVirtualAppliance Resource. */\nexport interface NetworkVirtualAppliance extends Resource {\n  /** The service principal that has read access to cloud-init and config blob. */\n  identity?: ManagedServiceIdentity;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Network Virtual Appliance SKU. */\n  nvaSku?: VirtualApplianceSkuProperties;\n  /**\n   * Address Prefix.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly addressPrefix?: string;\n  /** BootStrapConfigurationBlobs storage URLs. */\n  bootStrapConfigurationBlobs?: string[];\n  /** The Virtual Hub where Network Virtual Appliance is being deployed. */\n  virtualHub?: SubResource;\n  /** CloudInitConfigurationBlob storage URLs. */\n  cloudInitConfigurationBlobs?: string[];\n  /** CloudInitConfiguration string in plain text. */\n  cloudInitConfiguration?: string;\n  /** VirtualAppliance ASN. Microsoft private, public and IANA reserved ASN are not supported. */\n  virtualApplianceAsn?: number;\n  /** Public key for SSH login. */\n  sshPublicKey?: string;\n  /**\n   * List of Virtual Appliance Network Interfaces.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualApplianceNics?: VirtualApplianceNicProperties[];\n  /** Network Profile containing configurations for Public and Private NIC. */\n  networkProfile?: NetworkVirtualAppliancePropertiesFormatNetworkProfile;\n  /** Details required for Additional Network Interface. */\n  additionalNics?: VirtualApplianceAdditionalNicProperties[];\n  /** List of Resource Uri of Public IPs for Internet Ingress Scenario. */\n  internetIngressPublicIps?: InternetIngressPublicIpsProperties[];\n  /**\n   * List of references to VirtualApplianceSite.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualApplianceSites?: SubResource[];\n  /**\n   * List of references to VirtualApplianceConnections.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualApplianceConnections?: SubResource[];\n  /**\n   * List of references to InboundSecurityRules.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inboundSecurityRules?: SubResource[];\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The deployment type. PartnerManaged for the SaaS NVA\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deploymentType?: string;\n  /** The delegation for the Virtual Appliance */\n  delegation?: DelegationProperties;\n  /** The delegation for the Virtual Appliance */\n  partnerManagedResource?: PartnerManagedResourceProperties;\n}\n\n/** Definition of the NetworkVirtualApplianceSkus resource. */\nexport interface NetworkVirtualApplianceSku extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Network Virtual Appliance Sku vendor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vendor?: string;\n  /**\n   * Available Network Virtual Appliance versions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly availableVersions?: string[];\n  /** The list of scale units available. */\n  availableScaleUnits?: NetworkVirtualApplianceSkuInstances[];\n}\n\n/** Network watcher in a resource group. */\nexport interface NetworkWatcher extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The provisioning state of the network watcher resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Public IP prefix resource. */\nexport interface PublicIPPrefix extends Resource {\n  /** The extended location of the public ip address. */\n  extendedLocation?: ExtendedLocation;\n  /** The public IP prefix SKU. */\n  sku?: PublicIPPrefixSku;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** A list of availability zones denoting the IP allocated for the resource needs to come from. */\n  zones?: string[];\n  /** The public IP address version. */\n  publicIPAddressVersion?: IPVersion;\n  /** The list of tags associated with the public IP prefix. */\n  ipTags?: IpTag[];\n  /** The Length of the Public IP Prefix. */\n  prefixLength?: number;\n  /**\n   * The allocated Prefix.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipPrefix?: string;\n  /**\n   * The list of all referenced PublicIPAddresses.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIPAddresses?: ReferencedPublicIpAddress[];\n  /**\n   * The reference to load balancer frontend IP configuration associated with the public IP prefix.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly loadBalancerFrontendIpConfiguration?: SubResource;\n  /** The customIpPrefix that this prefix is associated with. */\n  customIPPrefix?: SubResource;\n  /**\n   * The resource GUID property of the public IP prefix resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the public IP prefix resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** NatGateway of Public IP Prefix. */\n  natGateway?: NatGateway;\n}\n\n/** Route Filter Resource. */\nexport interface RouteFilter extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Collection of RouteFilterRules contained within a route filter. */\n  rules?: RouteFilterRule[];\n  /**\n   * A collection of references to express route circuit peerings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly peerings?: ExpressRouteCircuitPeering[];\n  /**\n   * A collection of references to express route circuit ipv6 peerings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipv6Peerings?: ExpressRouteCircuitPeering[];\n  /**\n   * The provisioning state of the route filter resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Security Partner Provider resource. */\nexport interface SecurityPartnerProvider extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The provisioning state of the Security Partner Provider resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The security provider name. */\n  securityProviderName?: SecurityProviderName;\n  /**\n   * The connection status with the Security Partner Provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionStatus?: SecurityPartnerProviderConnectionStatus;\n  /** The virtualHub to which the Security Partner Provider belongs. */\n  virtualHub?: SubResource;\n}\n\n/** Service Community Properties. */\nexport interface BgpServiceCommunity extends Resource {\n  /** The name of the bgp community. e.g. Skype. */\n  serviceName?: string;\n  /** A list of bgp communities. */\n  bgpCommunities?: BGPCommunity[];\n}\n\n/** Virtual Network resource. */\nexport interface VirtualNetwork extends Resource {\n  /** The extended location of the virtual network. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The AddressSpace that contains an array of IP address ranges that can be used by subnets. */\n  addressSpace?: AddressSpace;\n  /** The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network. */\n  dhcpOptions?: DhcpOptions;\n  /** The FlowTimeout value (in minutes) for the Virtual Network */\n  flowTimeoutInMinutes?: number;\n  /** A list of subnets in a Virtual Network. */\n  subnets?: Subnet[];\n  /** A list of peerings in a Virtual Network. */\n  virtualNetworkPeerings?: VirtualNetworkPeering[];\n  /**\n   * The resourceGuid property of the Virtual Network resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the virtual network resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource. */\n  enableDdosProtection?: boolean;\n  /** Indicates if VM protection is enabled for all the subnets in the virtual network. */\n  enableVmProtection?: boolean;\n  /** The DDoS protection plan associated with the virtual network. */\n  ddosProtectionPlan?: SubResource;\n  /** Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET. */\n  bgpCommunities?: VirtualNetworkBgpCommunities;\n  /** Indicates if encryption is enabled on virtual network and if VM without encryption is allowed in encrypted VNet. */\n  encryption?: VirtualNetworkEncryption;\n  /** Array of IpAllocation which reference this VNET. */\n  ipAllocations?: SubResource[];\n  /**\n   * A collection of references to flow log resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly flowLogs?: FlowLog[];\n  /** Private Endpoint VNet Policies. */\n  privateEndpointVNetPolicies?: PrivateEndpointVNetPolicies;\n}\n\n/** Network Intent Policy resource. */\nexport interface NetworkIntentPolicy extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** A common class for general resource information. */\nexport interface VirtualNetworkGateway extends Resource {\n  /** The extended location of type local virtual network gateway. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The identity of the virtual network gateway, if configured. */\n  identity?: ManagedServiceIdentity;\n  /** Autoscale configuration for virutal network gateway */\n  autoScaleConfiguration?: VirtualNetworkGatewayAutoScaleConfiguration;\n  /** IP configurations for virtual network gateway. */\n  ipConfigurations?: VirtualNetworkGatewayIPConfiguration[];\n  /** The type of this virtual network gateway. */\n  gatewayType?: VirtualNetworkGatewayType;\n  /** The type of this virtual network gateway. */\n  vpnType?: VpnType;\n  /** The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN. */\n  vpnGatewayGeneration?: VpnGatewayGeneration;\n  /** Whether BGP is enabled for this virtual network gateway or not. */\n  enableBgp?: boolean;\n  /** Whether private IP needs to be enabled on this gateway for connections or not. */\n  enablePrivateIpAddress?: boolean;\n  /** ActiveActive flag. */\n  active?: boolean;\n  /** disableIPSecReplayProtection flag. */\n  disableIPSecReplayProtection?: boolean;\n  /** The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting. */\n  gatewayDefaultSite?: SubResource;\n  /** The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway. */\n  sku?: VirtualNetworkGatewaySku;\n  /** The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations. */\n  vpnClientConfiguration?: VpnClientConfiguration;\n  /** The reference to the VirtualNetworkGatewayPolicyGroup resource which represents the available VirtualNetworkGatewayPolicyGroup for the gateway. */\n  virtualNetworkGatewayPolicyGroups?: VirtualNetworkGatewayPolicyGroup[];\n  /** Virtual network gateway's BGP speaker settings. */\n  bgpSettings?: BgpSettings;\n  /** The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient. */\n  customRoutes?: AddressSpace;\n  /**\n   * The resource GUID property of the virtual network gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the virtual network gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Whether dns forwarding is enabled or not. */\n  enableDnsForwarding?: boolean;\n  /**\n   * The IP address allocated by the gateway to which dns requests can be sent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inboundDnsForwardingEndpoint?: string;\n  /** Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet. */\n  vNetExtendedLocationResourceId?: string;\n  /** NatRules for virtual network gateway. */\n  natRules?: VirtualNetworkGatewayNatRule[];\n  /** EnableBgpRouteTranslationForNat flag. */\n  enableBgpRouteTranslationForNat?: boolean;\n  /** Configures this gateway to accept traffic from remote Virtual WAN networks. */\n  allowVirtualWanTraffic?: boolean;\n  /** Configure this gateway to accept traffic from other Azure Virtual Networks. This configuration does not support connectivity to Azure Virtual WAN. */\n  allowRemoteVnetTraffic?: boolean;\n  /** Property to indicate if the Express Route Gateway serves traffic when there are multiple Express Route Gateways in the vnet */\n  adminState?: AdminState;\n  /** Property to indicate if the Express Route Gateway has resiliency model of MultiHomed or SingleHomed */\n  resiliencyModel?: ResiliencyModel;\n}\n\n/** A common class for general resource information. */\nexport interface VirtualNetworkGatewayConnectionListEntity extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The authorizationKey. */\n  authorizationKey?: string;\n  /** The reference to virtual network gateway resource. */\n  virtualNetworkGateway1: VirtualNetworkConnectionGatewayReference;\n  /** The reference to virtual network gateway resource. */\n  virtualNetworkGateway2?: VirtualNetworkConnectionGatewayReference;\n  /** The reference to local network gateway resource. */\n  localNetworkGateway2?: VirtualNetworkConnectionGatewayReference;\n  /** Gateway connection type. */\n  connectionType: VirtualNetworkGatewayConnectionType;\n  /** Connection protocol used for this connection. */\n  connectionProtocol?: VirtualNetworkGatewayConnectionProtocol;\n  /** The routing weight. */\n  routingWeight?: number;\n  /** The connection mode for this connection. */\n  connectionMode?: VirtualNetworkGatewayConnectionMode;\n  /** The IPSec shared key. */\n  sharedKey?: string;\n  /**\n   * Virtual Network Gateway connection status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionStatus?: VirtualNetworkGatewayConnectionStatus;\n  /**\n   * Collection of all tunnels' connection health status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tunnelConnectionStatus?: TunnelConnectionHealth[];\n  /**\n   * The egress bytes transferred in this connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly egressBytesTransferred?: number;\n  /**\n   * The ingress bytes transferred in this connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingressBytesTransferred?: number;\n  /** The reference to peerings resource. */\n  peer?: SubResource;\n  /** EnableBgp flag. */\n  enableBgp?: boolean;\n  /** GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection. */\n  gatewayCustomBgpIpAddresses?: GatewayCustomBgpIpAddressIpConfiguration[];\n  /** Enable policy-based traffic selectors. */\n  usePolicyBasedTrafficSelectors?: boolean;\n  /** The IPSec Policies to be considered by this connection. */\n  ipsecPolicies?: IpsecPolicy[];\n  /** The Traffic Selector Policies to be considered by this connection. */\n  trafficSelectorPolicies?: TrafficSelectorPolicy[];\n  /**\n   * The resource GUID property of the virtual network gateway connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the virtual network gateway connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Bypass ExpressRoute Gateway for data forwarding. */\n  expressRouteGatewayBypass?: boolean;\n  /** Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled. */\n  enablePrivateLinkFastPath?: boolean;\n}\n\n/** A common class for general resource information. */\nexport interface LocalNetworkGateway extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Local network site address space. */\n  localNetworkAddressSpace?: AddressSpace;\n  /** IP address of local network gateway. */\n  gatewayIpAddress?: string;\n  /** FQDN of local network gateway. */\n  fqdn?: string;\n  /** Local network gateway's BGP speaker settings. */\n  bgpSettings?: BgpSettings;\n  /**\n   * The resource GUID property of the local network gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the local network gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** A common class for general resource information. */\nexport interface VirtualNetworkGatewayConnection extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The authorizationKey. */\n  authorizationKey?: string;\n  /** The reference to virtual network gateway resource. */\n  virtualNetworkGateway1: VirtualNetworkGateway;\n  /** The reference to virtual network gateway resource. */\n  virtualNetworkGateway2?: VirtualNetworkGateway;\n  /** The reference to local network gateway resource. */\n  localNetworkGateway2?: LocalNetworkGateway;\n  /** List of ingress NatRules. */\n  ingressNatRules?: SubResource[];\n  /** List of egress NatRules. */\n  egressNatRules?: SubResource[];\n  /** Gateway connection type. */\n  connectionType: VirtualNetworkGatewayConnectionType;\n  /** Connection protocol used for this connection. */\n  connectionProtocol?: VirtualNetworkGatewayConnectionProtocol;\n  /** The routing weight. */\n  routingWeight?: number;\n  /** The dead peer detection timeout of this connection in seconds. */\n  dpdTimeoutSeconds?: number;\n  /** The connection mode for this connection. */\n  connectionMode?: VirtualNetworkGatewayConnectionMode;\n  /** The IPSec shared key. */\n  sharedKey?: string;\n  /**\n   * Virtual Network Gateway connection status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionStatus?: VirtualNetworkGatewayConnectionStatus;\n  /**\n   * Collection of all tunnels' connection health status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tunnelConnectionStatus?: TunnelConnectionHealth[];\n  /**\n   * The egress bytes transferred in this connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly egressBytesTransferred?: number;\n  /**\n   * The ingress bytes transferred in this connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ingressBytesTransferred?: number;\n  /** The reference to peerings resource. */\n  peer?: SubResource;\n  /** EnableBgp flag. */\n  enableBgp?: boolean;\n  /** GatewayCustomBgpIpAddresses to be used for virtual network gateway Connection. */\n  gatewayCustomBgpIpAddresses?: GatewayCustomBgpIpAddressIpConfiguration[];\n  /** Use private local Azure IP for the connection. */\n  useLocalAzureIpAddress?: boolean;\n  /** Enable policy-based traffic selectors. */\n  usePolicyBasedTrafficSelectors?: boolean;\n  /** The IPSec Policies to be considered by this connection. */\n  ipsecPolicies?: IpsecPolicy[];\n  /** The Traffic Selector Policies to be considered by this connection. */\n  trafficSelectorPolicies?: TrafficSelectorPolicy[];\n  /**\n   * The resource GUID property of the virtual network gateway connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /**\n   * The provisioning state of the virtual network gateway connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Bypass ExpressRoute Gateway for data forwarding. */\n  expressRouteGatewayBypass?: boolean;\n  /** Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled. */\n  enablePrivateLinkFastPath?: boolean;\n}\n\n/** VirtualRouter Resource. */\nexport interface VirtualRouter extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** VirtualRouter ASN. */\n  virtualRouterAsn?: number;\n  /** VirtualRouter IPs. */\n  virtualRouterIps?: string[];\n  /** The Subnet on which VirtualRouter is hosted. */\n  hostedSubnet?: SubResource;\n  /** The Gateway on which VirtualRouter is hosted. */\n  hostedGateway?: SubResource;\n  /**\n   * List of references to VirtualRouterPeerings.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly peerings?: SubResource[];\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** VirtualWAN Resource. */\nexport interface VirtualWAN extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Vpn encryption to be disabled or not. */\n  disableVpnEncryption?: boolean;\n  /**\n   * List of VirtualHubs in the VirtualWAN.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualHubs?: SubResource[];\n  /**\n   * List of VpnSites in the VirtualWAN.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vpnSites?: SubResource[];\n  /** True if branch to branch traffic is allowed. */\n  allowBranchToBranchTraffic?: boolean;\n  /** True if Vnet to Vnet traffic is allowed. */\n  allowVnetToVnetTraffic?: boolean;\n  /**\n   * The office local breakout category.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly office365LocalBreakoutCategory?: OfficeTrafficCategory;\n  /**\n   * The provisioning state of the virtual WAN resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The type of the VirtualWAN. */\n  typePropertiesType?: string;\n}\n\n/** VpnSite Resource. */\nexport interface VpnSite extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The VirtualWAN to which the vpnSite belongs. */\n  virtualWan?: SubResource;\n  /** The device properties. */\n  deviceProperties?: DeviceProperties;\n  /** The ip-address for the vpn-site. */\n  ipAddress?: string;\n  /** The key for vpn-site that can be used for connections. */\n  siteKey?: string;\n  /** The AddressSpace that contains an array of IP address ranges. */\n  addressSpace?: AddressSpace;\n  /** The set of bgp properties. */\n  bgpProperties?: BgpSettings;\n  /**\n   * The provisioning state of the VPN site resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** IsSecuritySite flag. */\n  isSecuritySite?: boolean;\n  /** List of all vpn site links. */\n  vpnSiteLinks?: VpnSiteLink[];\n  /** Office365 Policy. */\n  o365Policy?: O365PolicyProperties;\n}\n\n/** P2SVpnGateway Resource. */\nexport interface P2SVpnGateway extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The VirtualHub to which the gateway belongs. */\n  virtualHub?: SubResource;\n  /** List of all p2s connection configurations of the gateway. */\n  p2SConnectionConfigurations?: P2SConnectionConfiguration[];\n  /**\n   * The provisioning state of the P2S VPN gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The scale unit for this p2s vpn gateway. */\n  vpnGatewayScaleUnit?: number;\n  /** The VpnServerConfiguration to which the p2sVpnGateway is attached to. */\n  vpnServerConfiguration?: SubResource;\n  /**\n   * All P2S VPN clients' connection health status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vpnClientConnectionHealth?: VpnClientConnectionHealth;\n  /** List of all customer specified DNS servers IP addresses. */\n  customDnsServers?: string[];\n  /** Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway. */\n  isRoutingPreferenceInternet?: boolean;\n}\n\n/** VpnServerConfiguration Resource. */\nexport interface VpnServerConfiguration extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The name of the VpnServerConfiguration that is unique within a resource group. */\n  namePropertiesName?: string;\n  /** VPN protocols for the VpnServerConfiguration. */\n  vpnProtocols?: VpnGatewayTunnelingProtocol[];\n  /** VPN authentication types for the VpnServerConfiguration. */\n  vpnAuthenticationTypes?: VpnAuthenticationType[];\n  /** VPN client root certificate of VpnServerConfiguration. */\n  vpnClientRootCertificates?: VpnServerConfigVpnClientRootCertificate[];\n  /** VPN client revoked certificate of VpnServerConfiguration. */\n  vpnClientRevokedCertificates?: VpnServerConfigVpnClientRevokedCertificate[];\n  /** Radius Server root certificate of VpnServerConfiguration. */\n  radiusServerRootCertificates?: VpnServerConfigRadiusServerRootCertificate[];\n  /** Radius client root certificate of VpnServerConfiguration. */\n  radiusClientRootCertificates?: VpnServerConfigRadiusClientRootCertificate[];\n  /** VpnClientIpsecPolicies for VpnServerConfiguration. */\n  vpnClientIpsecPolicies?: IpsecPolicy[];\n  /** The radius server address property of the VpnServerConfiguration resource for point to site client connection. */\n  radiusServerAddress?: string;\n  /** The radius secret property of the VpnServerConfiguration resource for point to site client connection. */\n  radiusServerSecret?: string;\n  /** Multiple Radius Server configuration for VpnServerConfiguration. */\n  radiusServers?: RadiusServer[];\n  /** The set of aad vpn authentication parameters. */\n  aadAuthenticationParameters?: AadAuthenticationParameters;\n  /**\n   * The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * List of references to P2SVpnGateways.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly p2SVpnGateways?: P2SVpnGateway[];\n  /** List of all VpnServerConfigurationPolicyGroups. */\n  configurationPolicyGroups?: VpnServerConfigurationPolicyGroup[];\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etagPropertiesEtag?: string;\n}\n\n/** VirtualHub Resource. */\nexport interface VirtualHub extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Kind of service virtual hub. This is metadata used for the Azure portal experience for Route Server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** The VirtualWAN to which the VirtualHub belongs. */\n  virtualWan?: SubResource;\n  /** The VpnGateway associated with this VirtualHub. */\n  vpnGateway?: SubResource;\n  /** The P2SVpnGateway associated with this VirtualHub. */\n  p2SVpnGateway?: SubResource;\n  /** The expressRouteGateway associated with this VirtualHub. */\n  expressRouteGateway?: SubResource;\n  /** The azureFirewall associated with this VirtualHub. */\n  azureFirewall?: SubResource;\n  /** The securityPartnerProvider associated with this VirtualHub. */\n  securityPartnerProvider?: SubResource;\n  /** Address-prefix for this VirtualHub. */\n  addressPrefix?: string;\n  /** The routeTable associated with this virtual hub. */\n  routeTable?: VirtualHubRouteTable;\n  /**\n   * The provisioning state of the virtual hub resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The Security Provider name. */\n  securityProviderName?: string;\n  /** List of all virtual hub route table v2s associated with this VirtualHub. */\n  virtualHubRouteTableV2S?: VirtualHubRouteTableV2[];\n  /** The sku of this VirtualHub. */\n  sku?: string;\n  /**\n   * The routing state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly routingState?: RoutingState;\n  /**\n   * List of references to Bgp Connections.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly bgpConnections?: SubResource[];\n  /**\n   * List of references to IpConfigurations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipConfigurations?: SubResource[];\n  /**\n   * List of references to RouteMaps.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly routeMaps?: SubResource[];\n  /** VirtualRouter ASN. */\n  virtualRouterAsn?: number;\n  /** VirtualRouter IPs. */\n  virtualRouterIps?: string[];\n  /** Flag to control transit for VirtualRouter hub. */\n  allowBranchToBranchTraffic?: boolean;\n  /** The preferred gateway to route on-prem traffic */\n  preferredRoutingGateway?: PreferredRoutingGateway;\n  /** The hubRoutingPreference of this VirtualHub. */\n  hubRoutingPreference?: HubRoutingPreference;\n  /** The VirtualHub Router autoscale configuration. */\n  virtualRouterAutoScaleConfiguration?: VirtualRouterAutoScaleConfiguration;\n}\n\n/** VpnGateway Resource. */\nexport interface VpnGateway extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The VirtualHub to which the gateway belongs. */\n  virtualHub?: SubResource;\n  /** List of all vpn connections to the gateway. */\n  connections?: VpnConnection[];\n  /** Local network gateway's BGP speaker settings. */\n  bgpSettings?: BgpSettings;\n  /**\n   * The provisioning state of the VPN gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The scale unit for this vpn gateway. */\n  vpnGatewayScaleUnit?: number;\n  /**\n   * List of all IPs configured on the gateway.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipConfigurations?: VpnGatewayIpConfiguration[];\n  /** Enable BGP routes translation for NAT on this VpnGateway. */\n  enableBgpRouteTranslationForNat?: boolean;\n  /** Enable Routing Preference property for the Public IP Interface of the VpnGateway. */\n  isRoutingPreferenceInternet?: boolean;\n  /** List of all the nat Rules associated with the gateway. */\n  natRules?: VpnGatewayNatRule[];\n}\n\n/** ExpressRoute gateway resource. */\nexport interface ExpressRouteGateway extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** Configuration for auto scaling. */\n  autoScaleConfiguration?: ExpressRouteGatewayPropertiesAutoScaleConfiguration;\n  /** List of ExpressRoute connections to the ExpressRoute gateway. */\n  expressRouteConnections?: ExpressRouteConnection[];\n  /**\n   * The provisioning state of the express route gateway resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The Virtual Hub where the ExpressRoute gateway is or will be deployed. */\n  virtualHub?: VirtualHubId;\n  /** Configures this gateway to accept traffic from non Virtual WAN networks. */\n  allowNonVirtualWanTraffic?: boolean;\n}\n\n/** Defines web application firewall policy. */\nexport interface WebApplicationFirewallPolicy extends Resource {\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /** The PolicySettings for policy. */\n  policySettings?: PolicySettings;\n  /** The custom rules inside the policy. */\n  customRules?: WebApplicationFirewallCustomRule[];\n  /**\n   * A collection of references to application gateways.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly applicationGateways?: ApplicationGateway[];\n  /**\n   * The provisioning state of the web application firewall policy resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Resource status of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceState?: WebApplicationFirewallPolicyResourceState;\n  /** Describes the managedRules structure. */\n  managedRules?: ManagedRulesDefinition;\n  /**\n   * A collection of references to application gateway http listeners.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly httpListeners?: SubResource[];\n  /**\n   * A collection of references to application gateway path rules.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pathBasedRules?: SubResource[];\n  /**\n   * A collection of references to application gateway for containers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly applicationGatewayForContainers?: ApplicationGatewayForContainersReferenceDefinition[];\n}\n\n/** The visibility list of the private link service. */\nexport interface PrivateLinkServicePropertiesVisibility extends ResourceSet {}\n\n/** The auto-approval list of the private link service. */\nexport interface PrivateLinkServicePropertiesAutoApproval extends ResourceSet {}\n\n/** Firewall Policy NAT Rule Collection. */\nexport interface FirewallPolicyNatRuleCollection\n  extends FirewallPolicyRuleCollection {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleCollectionType: \"FirewallPolicyNatRuleCollection\";\n  /** The action type of a Nat rule collection. */\n  action?: FirewallPolicyNatRuleCollectionAction;\n  /** List of rules included in a rule collection. */\n  rules?: FirewallPolicyRuleUnion[];\n}\n\n/** Firewall Policy Filter Rule Collection. */\nexport interface FirewallPolicyFilterRuleCollection\n  extends FirewallPolicyRuleCollection {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleCollectionType: \"FirewallPolicyFilterRuleCollection\";\n  /** The action type of a Filter rule collection. */\n  action?: FirewallPolicyFilterRuleCollectionAction;\n  /** List of rules included in a rule collection. */\n  rules?: FirewallPolicyRuleUnion[];\n}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface CommonTrackedResource extends CommonResource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface CommonProxyResource extends CommonResource {}\n\n/** Active connectivity configuration. */\nexport interface ActiveConnectivityConfiguration\n  extends EffectiveConnectivityConfiguration {\n  /** Deployment time string. */\n  commitTime?: Date;\n  /** Deployment region. */\n  region?: string;\n}\n\n/** Network admin rule. */\nexport interface ActiveSecurityAdminRule extends ActiveBaseSecurityAdminRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Custom\";\n  /** A description for this rule. Restricted to 140 chars. */\n  description?: string;\n  /** Network protocol this rule applies to. */\n  protocol?: SecurityConfigurationRuleProtocol;\n  /** The CIDR or source IP ranges. */\n  sources?: AddressPrefixItem[];\n  /** The destination address prefixes. CIDR or destination IP ranges. */\n  destinations?: AddressPrefixItem[];\n  /** The source port ranges. */\n  sourcePortRanges?: string[];\n  /** The destination port ranges. */\n  destinationPortRanges?: string[];\n  /** Indicates the access allowed for this particular rule */\n  access?: SecurityConfigurationRuleAccess;\n  /** The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule. */\n  priority?: number;\n  /** Indicates if the traffic matched against the rule in inbound or outbound. */\n  direction?: SecurityConfigurationRuleDirection;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Network default admin rule. */\nexport interface ActiveDefaultSecurityAdminRule\n  extends ActiveBaseSecurityAdminRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Default\";\n  /**\n   * A description for this rule. Restricted to 140 chars.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /** Default rule flag. */\n  flag?: string;\n  /**\n   * Network protocol this rule applies to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly protocol?: SecurityConfigurationRuleProtocol;\n  /**\n   * The CIDR or source IP ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sources?: AddressPrefixItem[];\n  /**\n   * The destination address prefixes. CIDR or destination IP ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly destinations?: AddressPrefixItem[];\n  /**\n   * The source port ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourcePortRanges?: string[];\n  /**\n   * The destination port ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly destinationPortRanges?: string[];\n  /**\n   * Indicates the access allowed for this particular rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly access?: SecurityConfigurationRuleAccess;\n  /**\n   * The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly priority?: number;\n  /**\n   * Indicates if the traffic matched against the rule in inbound or outbound.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly direction?: SecurityConfigurationRuleDirection;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** The Network Manager Connection resource */\nexport interface NetworkManagerConnection extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Network Manager Id. */\n  networkManagerId?: string;\n  /**\n   * Connection state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionState?: ScopeConnectionState;\n  /** A description of the network manager connection. */\n  description?: string;\n}\n\n/** The network manager connectivity configuration resource */\nexport interface ConnectivityConfiguration extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the connectivity configuration. */\n  description?: string;\n  /** Connectivity topology type. */\n  connectivityTopology?: ConnectivityTopology;\n  /** List of hubItems */\n  hubs?: Hub[];\n  /** Flag if global mesh is supported. */\n  isGlobal?: IsGlobal;\n  /** Groups for configuration */\n  appliesToGroups?: ConnectivityGroupItem[];\n  /**\n   * The provisioning state of the connectivity configuration resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Flag if need to remove current existing peerings. */\n  deleteExistingPeering?: DeleteExistingPeering;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** The network group resource */\nexport interface NetworkGroup extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the network group. */\n  description?: string;\n  /** The type of the group member. */\n  memberType?: GroupMemberType;\n  /**\n   * The provisioning state of the scope assignment resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** StaticMember Item. */\nexport interface StaticMember extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Resource Id. */\n  resourceId?: string;\n  /**\n   * Resource region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly region?: string;\n  /**\n   * The provisioning state of the scope assignment resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Defines the routing configuration */\nexport interface NetworkManagerRoutingConfiguration extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the routing configuration. */\n  description?: string;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Defines the routing rule collection. */\nexport interface RoutingRuleCollection extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the routing rule collection. */\n  description?: string;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /** Groups for configuration */\n  appliesTo?: NetworkManagerRoutingGroupItem[];\n  /** Determines whether BGP route propagation is enabled. Defaults to true. */\n  disableBgpRoutePropagation?: DisableBgpRoutePropagation;\n}\n\n/** Network routing rule. */\nexport interface RoutingRule extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description for this rule. */\n  description?: string;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n  /** Indicates the destination for this particular rule. */\n  destination?: RoutingRuleRouteDestination;\n  /** Indicates the next hop for this particular rule. */\n  nextHop?: RoutingRuleNextHop;\n}\n\n/** The Scope Connections resource */\nexport interface ScopeConnection extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Tenant ID. */\n  tenantId?: string;\n  /** Resource ID. */\n  resourceId?: string;\n  /**\n   * Connection State\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionState?: ScopeConnectionState;\n  /** A description of the scope connection. */\n  description?: string;\n}\n\n/** Defines the security admin configuration */\nexport interface SecurityAdminConfiguration extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the security configuration. */\n  description?: string;\n  /** Enum list of network intent policy based services. */\n  applyOnNetworkIntentPolicyBasedServices?: NetworkIntentPolicyBasedService[];\n  /** Determine update behavior for changes to network groups referenced within the rules in this configuration. */\n  networkGroupAddressSpaceAggregationOption?: AddressSpaceAggregationOption;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Defines the admin rule collection. */\nexport interface AdminRuleCollection extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the admin rule collection. */\n  description?: string;\n  /** Groups for configuration */\n  appliesToGroups?: NetworkManagerSecurityGroupItem[];\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Network base admin rule. */\nexport interface BaseAdminRule extends ChildResource {\n  /** Whether the rule is custom or default. */\n  kind: AdminRuleKind;\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Defines the security user configuration */\nexport interface SecurityUserConfiguration extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the security user configuration. */\n  description?: string;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Defines the security user rule collection. */\nexport interface SecurityUserRuleCollection extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description of the security user rule collection. */\n  description?: string;\n  /** Groups for configuration */\n  appliesToGroups?: SecurityUserGroupItem[];\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Network security user rule. */\nexport interface SecurityUserRule extends ChildResource {\n  /**\n   * The system metadata related to this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** A description for this rule. */\n  description?: string;\n  /** Network protocol this rule applies to. */\n  protocol?: SecurityConfigurationRuleProtocol;\n  /** The CIDR or source IP ranges. */\n  sources?: AddressPrefixItem[];\n  /** The destination address prefixes. CIDR or destination IP ranges. */\n  destinations?: AddressPrefixItem[];\n  /** The source port ranges. */\n  sourcePortRanges?: string[];\n  /** The destination port ranges. */\n  destinationPortRanges?: string[];\n  /** Indicates if the traffic matched against the rule in inbound or outbound. */\n  direction?: SecurityConfigurationRuleDirection;\n  /**\n   * The provisioning state of the security configuration user rule resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Network admin rule. */\nexport interface EffectiveSecurityAdminRule\n  extends EffectiveBaseSecurityAdminRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Custom\";\n  /** A description for this rule. Restricted to 140 chars. */\n  description?: string;\n  /** Network protocol this rule applies to. */\n  protocol?: SecurityConfigurationRuleProtocol;\n  /** The CIDR or source IP ranges. */\n  sources?: AddressPrefixItem[];\n  /** The destination address prefixes. CIDR or destination IP ranges. */\n  destinations?: AddressPrefixItem[];\n  /** The source port ranges. */\n  sourcePortRanges?: string[];\n  /** The destination port ranges. */\n  destinationPortRanges?: string[];\n  /** Indicates the access allowed for this particular rule */\n  access?: SecurityConfigurationRuleAccess;\n  /** The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule. */\n  priority?: number;\n  /** Indicates if the traffic matched against the rule in inbound or outbound. */\n  direction?: SecurityConfigurationRuleDirection;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Network default admin rule. */\nexport interface EffectiveDefaultSecurityAdminRule\n  extends EffectiveBaseSecurityAdminRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Default\";\n  /**\n   * A description for this rule. Restricted to 140 chars.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /** Default rule flag. */\n  flag?: string;\n  /**\n   * Network protocol this rule applies to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly protocol?: SecurityConfigurationRuleProtocol;\n  /**\n   * The CIDR or source IP ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sources?: AddressPrefixItem[];\n  /**\n   * The destination address prefixes. CIDR or destination IP ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly destinations?: AddressPrefixItem[];\n  /**\n   * The source port ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourcePortRanges?: string[];\n  /**\n   * The destination port ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly destinationPortRanges?: string[];\n  /**\n   * Indicates the access allowed for this particular rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly access?: SecurityConfigurationRuleAccess;\n  /**\n   * The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly priority?: number;\n  /**\n   * Indicates if the traffic matched against the rule in inbound or outbound.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly direction?: SecurityConfigurationRuleDirection;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** The properties of a packet capture session. */\nexport interface PacketCaptureResultProperties extends PacketCaptureParameters {\n  /**\n   * The provisioning state of the packet capture session.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n}\n\n/** Describes the properties of a connection monitor. */\nexport interface ConnectionMonitorResultProperties\n  extends ConnectionMonitorParameters {\n  /**\n   * The provisioning state of the connection monitor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The date and time when the connection monitor was started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The monitoring status of the connection monitor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly monitoringStatus?: string;\n  /**\n   * Type of connection monitor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly connectionMonitorType?: ConnectionMonitorType;\n}\n\n/** Rule of type application. */\nexport interface ApplicationRule extends FirewallPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"ApplicationRule\";\n  /** List of source IP addresses for this rule. */\n  sourceAddresses?: string[];\n  /** List of destination IP addresses or Service Tags. */\n  destinationAddresses?: string[];\n  /** Array of Application Protocols. */\n  protocols?: FirewallPolicyRuleApplicationProtocol[];\n  /** List of FQDNs for this rule. */\n  targetFqdns?: string[];\n  /** List of Urls for this rule condition. */\n  targetUrls?: string[];\n  /** List of FQDN Tags for this rule. */\n  fqdnTags?: string[];\n  /** List of source IpGroups for this rule. */\n  sourceIpGroups?: string[];\n  /** Terminate TLS connections for this rule. */\n  terminateTLS?: boolean;\n  /** List of destination azure web categories. */\n  webCategories?: string[];\n  /** List of HTTP/S headers to insert. */\n  httpHeadersToInsert?: FirewallPolicyHttpHeaderToInsert[];\n}\n\n/** Rule of type nat. */\nexport interface NatRule extends FirewallPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"NatRule\";\n  /** Array of FirewallPolicyRuleNetworkProtocols. */\n  ipProtocols?: FirewallPolicyRuleNetworkProtocol[];\n  /** List of source IP addresses for this rule. */\n  sourceAddresses?: string[];\n  /** List of destination IP addresses or Service Tags. */\n  destinationAddresses?: string[];\n  /** List of destination ports. */\n  destinationPorts?: string[];\n  /** The translated address for this NAT rule. */\n  translatedAddress?: string;\n  /** The translated port for this NAT rule. */\n  translatedPort?: string;\n  /** List of source IpGroups for this rule. */\n  sourceIpGroups?: string[];\n  /** The translated FQDN for this NAT rule. */\n  translatedFqdn?: string;\n}\n\n/** Rule of type network. */\nexport interface NetworkRule extends FirewallPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"NetworkRule\";\n  /** Array of FirewallPolicyRuleNetworkProtocols. */\n  ipProtocols?: FirewallPolicyRuleNetworkProtocol[];\n  /** List of source IP addresses for this rule. */\n  sourceAddresses?: string[];\n  /** List of destination IP addresses or Service Tags. */\n  destinationAddresses?: string[];\n  /** List of destination ports. */\n  destinationPorts?: string[];\n  /** List of source IpGroups for this rule. */\n  sourceIpGroups?: string[];\n  /** List of destination IpGroups for this rule. */\n  destinationIpGroups?: string[];\n  /** List of destination FQDNs. */\n  destinationFqdns?: string[];\n}\n\n/** Instance of Pool resource. */\nexport interface IpamPool extends CommonTrackedResource {\n  /** Properties of IpamPool resource properties which are specific to the Pool resource. */\n  properties: IpamPoolProperties;\n}\n\n/** Instance of Verifier Workspace. */\nexport interface VerifierWorkspace extends CommonTrackedResource {\n  /** Properties of Verifier Workspace resource. */\n  properties?: VerifierWorkspaceProperties;\n}\n\n/** Instance of StaticCidr resource. */\nexport interface StaticCidr extends CommonProxyResource {\n  /** Properties of static CIDR resource. */\n  properties?: StaticCidrProperties;\n}\n\n/** Configuration information or intent on which to do the analysis on. */\nexport interface ReachabilityAnalysisIntent extends CommonProxyResource {\n  /** Represents the Reachability Analysis Intent properties. */\n  properties: ReachabilityAnalysisIntentProperties;\n}\n\n/** Configuration information for analysis run. */\nexport interface ReachabilityAnalysisRun extends CommonProxyResource {\n  /** Represents the Reachability Analysis Run properties. */\n  properties: ReachabilityAnalysisRunProperties;\n}\n\n/** Network admin rule. */\nexport interface AdminRule extends BaseAdminRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Custom\";\n  /** A description for this rule. Restricted to 140 chars. */\n  description?: string;\n  /** Network protocol this rule applies to. */\n  protocol?: SecurityConfigurationRuleProtocol;\n  /** The CIDR or source IP ranges. */\n  sources?: AddressPrefixItem[];\n  /** The destination address prefixes. CIDR or destination IP ranges. */\n  destinations?: AddressPrefixItem[];\n  /** The source port ranges. */\n  sourcePortRanges?: string[];\n  /** The destination port ranges. */\n  destinationPortRanges?: string[];\n  /** Indicates the access allowed for this particular rule */\n  access?: SecurityConfigurationRuleAccess;\n  /** The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule. */\n  priority?: number;\n  /** Indicates if the traffic matched against the rule in inbound or outbound. */\n  direction?: SecurityConfigurationRuleDirection;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Network default admin rule. */\nexport interface DefaultAdminRule extends BaseAdminRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Default\";\n  /**\n   * A description for this rule. Restricted to 140 chars.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /** Default rule flag. */\n  flag?: string;\n  /**\n   * Network protocol this rule applies to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly protocol?: SecurityConfigurationRuleProtocol;\n  /**\n   * The CIDR or source IP ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sources?: AddressPrefixItem[];\n  /**\n   * The destination address prefixes. CIDR or destination IP ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly destinations?: AddressPrefixItem[];\n  /**\n   * The source port ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourcePortRanges?: string[];\n  /**\n   * The destination port ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly destinationPortRanges?: string[];\n  /**\n   * Indicates the access allowed for this particular rule\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly access?: SecurityConfigurationRuleAccess;\n  /**\n   * The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly priority?: number;\n  /**\n   * Indicates if the traffic matched against the rule in inbound or outbound.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly direction?: SecurityConfigurationRuleDirection;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Unique identifier for this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceGuid?: string;\n}\n\n/** Defines headers for AzureFirewalls_packetCapture operation. */\nexport interface AzureFirewallsPacketCaptureHeaders {\n  location?: string;\n}\n\n/** Defines headers for NetworkManagementClient_deleteBastionShareableLinkByToken operation. */\nexport interface NetworkManagementClientDeleteBastionShareableLinkByTokenHeaders {\n  location?: string;\n}\n\n/** Defines headers for PublicIPAddresses_delete operation. */\nexport interface PublicIPAddressesDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for PublicIPAddresses_ddosProtectionStatus operation. */\nexport interface PublicIPAddressesDdosProtectionStatusHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for DdosCustomPolicies_delete operation. */\nexport interface DdosCustomPoliciesDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for DdosProtectionPlans_delete operation. */\nexport interface DdosProtectionPlansDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for ExpressRoutePorts_delete operation. */\nexport interface ExpressRoutePortsDeleteHeaders {\n  /**\n   * URL for determining when an operation has completed. Send a GET request to the URL in Location header.\n   * The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n   *\n   * For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers\n   */\n  location?: string;\n  /**\n   * URL for checking the ongoing status of the operation.\n   * To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n   *\n   * For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations\n   */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for ExpressRoutePortAuthorizations_delete operation. */\nexport interface ExpressRoutePortAuthorizationsDeleteHeaders {\n  /**\n   * URL for determining when an operation has completed. Send a GET request to the URL in Location header.\n   * The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n   *\n   * For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers\n   */\n  location?: string;\n  /**\n   * URL for checking the ongoing status of the operation.\n   * To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n   *\n   * For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations\n   */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for FirewallPolicyDeployments_deploy operation. */\nexport interface FirewallPolicyDeploymentsDeployHeaders {\n  /** URL to get the status of the operation. */\n  location?: string;\n  /** URL to get the status of the operation. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for IpamPools_create operation. */\nexport interface IpamPoolsCreateHeaders {\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for IpamPools_delete operation. */\nexport interface IpamPoolsDeleteHeaders {\n  location?: string;\n}\n\n/** Defines headers for StaticCidrs_delete operation. */\nexport interface StaticCidrsDeleteHeaders {\n  location?: string;\n}\n\n/** Defines headers for IpAllocations_delete operation. */\nexport interface IpAllocationsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for LoadBalancerLoadBalancingRules_health operation. */\nexport interface LoadBalancerLoadBalancingRulesHealthHeaders {\n  /** URI to query the status of the long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for NetworkManagers_delete operation. */\nexport interface NetworkManagersDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for NetworkManagerCommits_post operation. */\nexport interface NetworkManagerCommitsPostHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for ConnectivityConfigurations_delete operation. */\nexport interface ConnectivityConfigurationsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for NetworkGroups_createOrUpdate operation. */\nexport interface NetworkGroupsCreateOrUpdateHeaders {\n  /** The current entity tag. */\n  eTag?: string;\n}\n\n/** Defines headers for NetworkGroups_delete operation. */\nexport interface NetworkGroupsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for NetworkManagerRoutingConfigurations_delete operation. */\nexport interface NetworkManagerRoutingConfigurationsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for RoutingRuleCollections_delete operation. */\nexport interface RoutingRuleCollectionsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for RoutingRules_delete operation. */\nexport interface RoutingRulesDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for SecurityAdminConfigurations_delete operation. */\nexport interface SecurityAdminConfigurationsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for AdminRuleCollections_delete operation. */\nexport interface AdminRuleCollectionsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for AdminRules_delete operation. */\nexport interface AdminRulesDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for SecurityUserConfigurations_delete operation. */\nexport interface SecurityUserConfigurationsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for SecurityUserRuleCollections_delete operation. */\nexport interface SecurityUserRuleCollectionsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for SecurityUserRules_delete operation. */\nexport interface SecurityUserRulesDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for ReachabilityAnalysisRuns_delete operation. */\nexport interface ReachabilityAnalysisRunsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for VerifierWorkspaces_delete operation. */\nexport interface VerifierWorkspacesDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for NetworkVirtualAppliances_delete operation. */\nexport interface NetworkVirtualAppliancesDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for NetworkVirtualAppliances_createOrUpdate operation. */\nexport interface NetworkVirtualAppliancesCreateOrUpdateHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for NetworkVirtualAppliances_restart operation. */\nexport interface NetworkVirtualAppliancesRestartHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Defines headers for RouteFilters_delete operation. */\nexport interface RouteFiltersDeleteHeaders {\n  /**\n   * URL for determining when an operation has completed. Send a GET request to the URL in Location header.\n   * The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n   *\n   * For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers\n   */\n  location?: string;\n  /**\n   * URL for checking the ongoing status of the operation.\n   * To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n   *\n   * For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations\n   */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for RouteFilterRules_delete operation. */\nexport interface RouteFilterRulesDeleteHeaders {\n  /**\n   * URL for determining when an operation has completed. Send a GET request to the URL in Location header.\n   * The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n   *\n   * For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers\n   */\n  location?: string;\n  /**\n   * URL for checking the ongoing status of the operation.\n   * To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n   *\n   * For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations\n   */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for VirtualNetworkGateways_getFailoverAllTestDetails operation. */\nexport interface VirtualNetworkGatewaysGetFailoverAllTestDetailsHeaders {\n  location?: string;\n}\n\n/** Defines headers for VirtualNetworkGateways_getFailoverSingleTestDetails operation. */\nexport interface VirtualNetworkGatewaysGetFailoverSingleTestDetailsHeaders {\n  location?: string;\n}\n\n/** Defines headers for VirtualNetworkGateways_startExpressRouteSiteFailoverSimulation operation. */\nexport interface VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationHeaders {\n  location?: string;\n}\n\n/** Defines headers for VirtualNetworkGateways_stopExpressRouteSiteFailoverSimulation operation. */\nexport interface VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationHeaders {\n  location?: string;\n}\n\n/** Defines headers for NetworkVirtualApplianceConnections_delete operation. */\nexport interface NetworkVirtualApplianceConnectionsDeleteHeaders {\n  /** The URL of the resource used to check the status of the asynchronous operation. */\n  location?: string;\n}\n\n/** Known values of {@link ApplicationGatewaySkuName} that the service accepts. */\nexport enum KnownApplicationGatewaySkuName {\n  /** StandardSmall */\n  StandardSmall = \"Standard_Small\",\n  /** StandardMedium */\n  StandardMedium = \"Standard_Medium\",\n  /** StandardLarge */\n  StandardLarge = \"Standard_Large\",\n  /** WAFMedium */\n  WAFMedium = \"WAF_Medium\",\n  /** WAFLarge */\n  WAFLarge = \"WAF_Large\",\n  /** StandardV2 */\n  StandardV2 = \"Standard_v2\",\n  /** WAFV2 */\n  WAFV2 = \"WAF_v2\",\n  /** Basic */\n  Basic = \"Basic\",\n}\n\n/**\n * Defines values for ApplicationGatewaySkuName. \\\n * {@link KnownApplicationGatewaySkuName} can be used interchangeably with ApplicationGatewaySkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_Small** \\\n * **Standard_Medium** \\\n * **Standard_Large** \\\n * **WAF_Medium** \\\n * **WAF_Large** \\\n * **Standard_v2** \\\n * **WAF_v2** \\\n * **Basic**\n */\nexport type ApplicationGatewaySkuName = string;\n\n/** Known values of {@link ApplicationGatewayTier} that the service accepts. */\nexport enum KnownApplicationGatewayTier {\n  /** Standard */\n  Standard = \"Standard\",\n  /** WAF */\n  WAF = \"WAF\",\n  /** StandardV2 */\n  StandardV2 = \"Standard_v2\",\n  /** WAFV2 */\n  WAFV2 = \"WAF_v2\",\n  /** Basic */\n  Basic = \"Basic\",\n}\n\n/**\n * Defines values for ApplicationGatewayTier. \\\n * {@link KnownApplicationGatewayTier} can be used interchangeably with ApplicationGatewayTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **WAF** \\\n * **Standard_v2** \\\n * **WAF_v2** \\\n * **Basic**\n */\nexport type ApplicationGatewayTier = string;\n\n/** Known values of {@link ApplicationGatewaySkuFamily} that the service accepts. */\nexport enum KnownApplicationGatewaySkuFamily {\n  /** Generation1 */\n  Generation1 = \"Generation_1\",\n  /** Generation2 */\n  Generation2 = \"Generation_2\",\n}\n\n/**\n * Defines values for ApplicationGatewaySkuFamily. \\\n * {@link KnownApplicationGatewaySkuFamily} can be used interchangeably with ApplicationGatewaySkuFamily,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Generation_1** \\\n * **Generation_2**\n */\nexport type ApplicationGatewaySkuFamily = string;\n\n/** Known values of {@link ApplicationGatewaySslProtocol} that the service accepts. */\nexport enum KnownApplicationGatewaySslProtocol {\n  /** TLSv10 */\n  TLSv10 = \"TLSv1_0\",\n  /** TLSv11 */\n  TLSv11 = \"TLSv1_1\",\n  /** TLSv12 */\n  TLSv12 = \"TLSv1_2\",\n  /** TLSv13 */\n  TLSv13 = \"TLSv1_3\",\n}\n\n/**\n * Defines values for ApplicationGatewaySslProtocol. \\\n * {@link KnownApplicationGatewaySslProtocol} can be used interchangeably with ApplicationGatewaySslProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TLSv1_0** \\\n * **TLSv1_1** \\\n * **TLSv1_2** \\\n * **TLSv1_3**\n */\nexport type ApplicationGatewaySslProtocol = string;\n\n/** Known values of {@link ApplicationGatewaySslPolicyType} that the service accepts. */\nexport enum KnownApplicationGatewaySslPolicyType {\n  /** Predefined */\n  Predefined = \"Predefined\",\n  /** Custom */\n  Custom = \"Custom\",\n  /** CustomV2 */\n  CustomV2 = \"CustomV2\",\n}\n\n/**\n * Defines values for ApplicationGatewaySslPolicyType. \\\n * {@link KnownApplicationGatewaySslPolicyType} can be used interchangeably with ApplicationGatewaySslPolicyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Predefined** \\\n * **Custom** \\\n * **CustomV2**\n */\nexport type ApplicationGatewaySslPolicyType = string;\n\n/** Known values of {@link ApplicationGatewaySslPolicyName} that the service accepts. */\nexport enum KnownApplicationGatewaySslPolicyName {\n  /** AppGwSslPolicy20150501 */\n  AppGwSslPolicy20150501 = \"AppGwSslPolicy20150501\",\n  /** AppGwSslPolicy20170401 */\n  AppGwSslPolicy20170401 = \"AppGwSslPolicy20170401\",\n  /** AppGwSslPolicy20170401S */\n  AppGwSslPolicy20170401S = \"AppGwSslPolicy20170401S\",\n  /** AppGwSslPolicy20220101 */\n  AppGwSslPolicy20220101 = \"AppGwSslPolicy20220101\",\n  /** AppGwSslPolicy20220101S */\n  AppGwSslPolicy20220101S = \"AppGwSslPolicy20220101S\",\n}\n\n/**\n * Defines values for ApplicationGatewaySslPolicyName. \\\n * {@link KnownApplicationGatewaySslPolicyName} can be used interchangeably with ApplicationGatewaySslPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AppGwSslPolicy20150501** \\\n * **AppGwSslPolicy20170401** \\\n * **AppGwSslPolicy20170401S** \\\n * **AppGwSslPolicy20220101** \\\n * **AppGwSslPolicy20220101S**\n */\nexport type ApplicationGatewaySslPolicyName = string;\n\n/** Known values of {@link ApplicationGatewaySslCipherSuite} that the service accepts. */\nexport enum KnownApplicationGatewaySslCipherSuite {\n  /** TLSEcdheRSAWithAES256CBCSHA384 */\n  TLSEcdheRSAWithAES256CBCSHA384 = \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\n  /** TLSEcdheRSAWithAES128CBCSHA256 */\n  TLSEcdheRSAWithAES128CBCSHA256 = \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\n  /** TLSEcdheRSAWithAES256CBCSHA */\n  TLSEcdheRSAWithAES256CBCSHA = \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",\n  /** TLSEcdheRSAWithAES128CBCSHA */\n  TLSEcdheRSAWithAES128CBCSHA = \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\n  /** TLSDHERSAWithAES256GCMSHA384 */\n  TLSDHERSAWithAES256GCMSHA384 = \"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\",\n  /** TLSDHERSAWithAES128GCMSHA256 */\n  TLSDHERSAWithAES128GCMSHA256 = \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\",\n  /** TLSDHERSAWithAES256CBCSHA */\n  TLSDHERSAWithAES256CBCSHA = \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",\n  /** TLSDHERSAWithAES128CBCSHA */\n  TLSDHERSAWithAES128CBCSHA = \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\n  /** TLSRSAWithAES256GCMSHA384 */\n  TLSRSAWithAES256GCMSHA384 = \"TLS_RSA_WITH_AES_256_GCM_SHA384\",\n  /** TLSRSAWithAES128GCMSHA256 */\n  TLSRSAWithAES128GCMSHA256 = \"TLS_RSA_WITH_AES_128_GCM_SHA256\",\n  /** TLSRSAWithAES256CBCSHA256 */\n  TLSRSAWithAES256CBCSHA256 = \"TLS_RSA_WITH_AES_256_CBC_SHA256\",\n  /** TLSRSAWithAES128CBCSHA256 */\n  TLSRSAWithAES128CBCSHA256 = \"TLS_RSA_WITH_AES_128_CBC_SHA256\",\n  /** TLSRSAWithAES256CBCSHA */\n  TLSRSAWithAES256CBCSHA = \"TLS_RSA_WITH_AES_256_CBC_SHA\",\n  /** TLSRSAWithAES128CBCSHA */\n  TLSRSAWithAES128CBCSHA = \"TLS_RSA_WITH_AES_128_CBC_SHA\",\n  /** TLSEcdheEcdsaWithAES256GCMSHA384 */\n  TLSEcdheEcdsaWithAES256GCMSHA384 = \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\n  /** TLSEcdheEcdsaWithAES128GCMSHA256 */\n  TLSEcdheEcdsaWithAES128GCMSHA256 = \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",\n  /** TLSEcdheEcdsaWithAES256CBCSHA384 */\n  TLSEcdheEcdsaWithAES256CBCSHA384 = \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\n  /** TLSEcdheEcdsaWithAES128CBCSHA256 */\n  TLSEcdheEcdsaWithAES128CBCSHA256 = \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\n  /** TLSEcdheEcdsaWithAES256CBCSHA */\n  TLSEcdheEcdsaWithAES256CBCSHA = \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",\n  /** TLSEcdheEcdsaWithAES128CBCSHA */\n  TLSEcdheEcdsaWithAES128CBCSHA = \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",\n  /** TLSDHEDSSWithAES256CBCSHA256 */\n  TLSDHEDSSWithAES256CBCSHA256 = \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\n  /** TLSDHEDSSWithAES128CBCSHA256 */\n  TLSDHEDSSWithAES128CBCSHA256 = \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\n  /** TLSDHEDSSWithAES256CBCSHA */\n  TLSDHEDSSWithAES256CBCSHA = \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",\n  /** TLSDHEDSSWithAES128CBCSHA */\n  TLSDHEDSSWithAES128CBCSHA = \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\n  /** TLSRSAWith3DESEDECBCSHA */\n  TLSRSAWith3DESEDECBCSHA = \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",\n  /** TLSDHEDSSWith3DESEDECBCSHA */\n  TLSDHEDSSWith3DESEDECBCSHA = \"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\n  /** TLSEcdheRSAWithAES128GCMSHA256 */\n  TLSEcdheRSAWithAES128GCMSHA256 = \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",\n  /** TLSEcdheRSAWithAES256GCMSHA384 */\n  TLSEcdheRSAWithAES256GCMSHA384 = \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",\n}\n\n/**\n * Defines values for ApplicationGatewaySslCipherSuite. \\\n * {@link KnownApplicationGatewaySslCipherSuite} can be used interchangeably with ApplicationGatewaySslCipherSuite,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384** \\\n * **TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256** \\\n * **TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA** \\\n * **TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA** \\\n * **TLS_DHE_RSA_WITH_AES_256_GCM_SHA384** \\\n * **TLS_DHE_RSA_WITH_AES_128_GCM_SHA256** \\\n * **TLS_DHE_RSA_WITH_AES_256_CBC_SHA** \\\n * **TLS_DHE_RSA_WITH_AES_128_CBC_SHA** \\\n * **TLS_RSA_WITH_AES_256_GCM_SHA384** \\\n * **TLS_RSA_WITH_AES_128_GCM_SHA256** \\\n * **TLS_RSA_WITH_AES_256_CBC_SHA256** \\\n * **TLS_RSA_WITH_AES_128_CBC_SHA256** \\\n * **TLS_RSA_WITH_AES_256_CBC_SHA** \\\n * **TLS_RSA_WITH_AES_128_CBC_SHA** \\\n * **TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384** \\\n * **TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256** \\\n * **TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384** \\\n * **TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256** \\\n * **TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA** \\\n * **TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA** \\\n * **TLS_DHE_DSS_WITH_AES_256_CBC_SHA256** \\\n * **TLS_DHE_DSS_WITH_AES_128_CBC_SHA256** \\\n * **TLS_DHE_DSS_WITH_AES_256_CBC_SHA** \\\n * **TLS_DHE_DSS_WITH_AES_128_CBC_SHA** \\\n * **TLS_RSA_WITH_3DES_EDE_CBC_SHA** \\\n * **TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA** \\\n * **TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256** \\\n * **TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384**\n */\nexport type ApplicationGatewaySslCipherSuite = string;\n\n/** Known values of {@link ApplicationGatewayOperationalState} that the service accepts. */\nexport enum KnownApplicationGatewayOperationalState {\n  /** Stopped */\n  Stopped = \"Stopped\",\n  /** Starting */\n  Starting = \"Starting\",\n  /** Running */\n  Running = \"Running\",\n  /** Stopping */\n  Stopping = \"Stopping\",\n}\n\n/**\n * Defines values for ApplicationGatewayOperationalState. \\\n * {@link KnownApplicationGatewayOperationalState} can be used interchangeably with ApplicationGatewayOperationalState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Stopped** \\\n * **Starting** \\\n * **Running** \\\n * **Stopping**\n */\nexport type ApplicationGatewayOperationalState = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Failed */\n  Failed = \"Failed\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Failed** \\\n * **Succeeded** \\\n * **Canceled** \\\n * **Creating** \\\n * **Updating** \\\n * **Deleting**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link IPAllocationMethod} that the service accepts. */\nexport enum KnownIPAllocationMethod {\n  /** Static */\n  Static = \"Static\",\n  /** Dynamic */\n  Dynamic = \"Dynamic\",\n}\n\n/**\n * Defines values for IPAllocationMethod. \\\n * {@link KnownIPAllocationMethod} can be used interchangeably with IPAllocationMethod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Static** \\\n * **Dynamic**\n */\nexport type IPAllocationMethod = string;\n\n/** Known values of {@link ApplicationGatewayProtocol} that the service accepts. */\nexport enum KnownApplicationGatewayProtocol {\n  /** Supported for httpListeners and  backendHttpSettingsCollection properties. */\n  Http = \"Http\",\n  /** Supported for httpListeners and  backendHttpSettingsCollection properties. */\n  Https = \"Https\",\n  /** Supported for listeners and backendSettingsCollection properties. */\n  Tcp = \"Tcp\",\n  /** Supported for listeners and backendSettingsCollection properties. */\n  Tls = \"Tls\",\n}\n\n/**\n * Defines values for ApplicationGatewayProtocol. \\\n * {@link KnownApplicationGatewayProtocol} can be used interchangeably with ApplicationGatewayProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Http**: Supported for httpListeners and  backendHttpSettingsCollection properties. \\\n * **Https**: Supported for httpListeners and  backendHttpSettingsCollection properties. \\\n * **Tcp**: Supported for listeners and backendSettingsCollection properties. \\\n * **Tls**: Supported for listeners and backendSettingsCollection properties.\n */\nexport type ApplicationGatewayProtocol = string;\n\n/** Known values of {@link IPVersion} that the service accepts. */\nexport enum KnownIPVersion {\n  /** IPv4 */\n  IPv4 = \"IPv4\",\n  /** IPv6 */\n  IPv6 = \"IPv6\",\n}\n\n/**\n * Defines values for IPVersion. \\\n * {@link KnownIPVersion} can be used interchangeably with IPVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IPv4** \\\n * **IPv6**\n */\nexport type IPVersion = string;\n\n/** Known values of {@link SecurityRuleProtocol} that the service accepts. */\nexport enum KnownSecurityRuleProtocol {\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** Udp */\n  Udp = \"Udp\",\n  /** Icmp */\n  Icmp = \"Icmp\",\n  /** Esp */\n  Esp = \"Esp\",\n  /** Asterisk */\n  Asterisk = \"*\",\n  /** Ah */\n  Ah = \"Ah\",\n}\n\n/**\n * Defines values for SecurityRuleProtocol. \\\n * {@link KnownSecurityRuleProtocol} can be used interchangeably with SecurityRuleProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Tcp** \\\n * **Udp** \\\n * **Icmp** \\\n * **Esp** \\\n * ***** \\\n * **Ah**\n */\nexport type SecurityRuleProtocol = string;\n\n/** Known values of {@link SecurityRuleAccess} that the service accepts. */\nexport enum KnownSecurityRuleAccess {\n  /** Allow */\n  Allow = \"Allow\",\n  /** Deny */\n  Deny = \"Deny\",\n}\n\n/**\n * Defines values for SecurityRuleAccess. \\\n * {@link KnownSecurityRuleAccess} can be used interchangeably with SecurityRuleAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow** \\\n * **Deny**\n */\nexport type SecurityRuleAccess = string;\n\n/** Known values of {@link SecurityRuleDirection} that the service accepts. */\nexport enum KnownSecurityRuleDirection {\n  /** Inbound */\n  Inbound = \"Inbound\",\n  /** Outbound */\n  Outbound = \"Outbound\",\n}\n\n/**\n * Defines values for SecurityRuleDirection. \\\n * {@link KnownSecurityRuleDirection} can be used interchangeably with SecurityRuleDirection,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inbound** \\\n * **Outbound**\n */\nexport type SecurityRuleDirection = string;\n\n/** Known values of {@link ExtendedLocationTypes} that the service accepts. */\nexport enum KnownExtendedLocationTypes {\n  /** EdgeZone */\n  EdgeZone = \"EdgeZone\",\n}\n\n/**\n * Defines values for ExtendedLocationTypes. \\\n * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationTypes = string;\n\n/** Known values of {@link NetworkInterfaceNicType} that the service accepts. */\nexport enum KnownNetworkInterfaceNicType {\n  /** Standard */\n  Standard = \"Standard\",\n  /** Elastic */\n  Elastic = \"Elastic\",\n}\n\n/**\n * Defines values for NetworkInterfaceNicType. \\\n * {@link KnownNetworkInterfaceNicType} can be used interchangeably with NetworkInterfaceNicType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **Elastic**\n */\nexport type NetworkInterfaceNicType = string;\n\n/** Known values of {@link NetworkInterfaceMigrationPhase} that the service accepts. */\nexport enum KnownNetworkInterfaceMigrationPhase {\n  /** None */\n  None = \"None\",\n  /** Prepare */\n  Prepare = \"Prepare\",\n  /** Commit */\n  Commit = \"Commit\",\n  /** Abort */\n  Abort = \"Abort\",\n  /** Committed */\n  Committed = \"Committed\",\n}\n\n/**\n * Defines values for NetworkInterfaceMigrationPhase. \\\n * {@link KnownNetworkInterfaceMigrationPhase} can be used interchangeably with NetworkInterfaceMigrationPhase,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Prepare** \\\n * **Commit** \\\n * **Abort** \\\n * **Committed**\n */\nexport type NetworkInterfaceMigrationPhase = string;\n\n/** Known values of {@link NetworkInterfaceAuxiliaryMode} that the service accepts. */\nexport enum KnownNetworkInterfaceAuxiliaryMode {\n  /** None */\n  None = \"None\",\n  /** MaxConnections */\n  MaxConnections = \"MaxConnections\",\n  /** Floating */\n  Floating = \"Floating\",\n  /** AcceleratedConnections */\n  AcceleratedConnections = \"AcceleratedConnections\",\n}\n\n/**\n * Defines values for NetworkInterfaceAuxiliaryMode. \\\n * {@link KnownNetworkInterfaceAuxiliaryMode} can be used interchangeably with NetworkInterfaceAuxiliaryMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **MaxConnections** \\\n * **Floating** \\\n * **AcceleratedConnections**\n */\nexport type NetworkInterfaceAuxiliaryMode = string;\n\n/** Known values of {@link NetworkInterfaceAuxiliarySku} that the service accepts. */\nexport enum KnownNetworkInterfaceAuxiliarySku {\n  /** None */\n  None = \"None\",\n  /** A1 */\n  A1 = \"A1\",\n  /** A2 */\n  A2 = \"A2\",\n  /** A4 */\n  A4 = \"A4\",\n  /** A8 */\n  A8 = \"A8\",\n}\n\n/**\n * Defines values for NetworkInterfaceAuxiliarySku. \\\n * {@link KnownNetworkInterfaceAuxiliarySku} can be used interchangeably with NetworkInterfaceAuxiliarySku,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **A1** \\\n * **A2** \\\n * **A4** \\\n * **A8**\n */\nexport type NetworkInterfaceAuxiliarySku = string;\n\n/** Known values of {@link FlowLogFormatType} that the service accepts. */\nexport enum KnownFlowLogFormatType {\n  /** Json */\n  Json = \"JSON\",\n}\n\n/**\n * Defines values for FlowLogFormatType. \\\n * {@link KnownFlowLogFormatType} can be used interchangeably with FlowLogFormatType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **JSON**\n */\nexport type FlowLogFormatType = string;\n\n/** Known values of {@link RouteNextHopType} that the service accepts. */\nexport enum KnownRouteNextHopType {\n  /** VirtualNetworkGateway */\n  VirtualNetworkGateway = \"VirtualNetworkGateway\",\n  /** VnetLocal */\n  VnetLocal = \"VnetLocal\",\n  /** Internet */\n  Internet = \"Internet\",\n  /** VirtualAppliance */\n  VirtualAppliance = \"VirtualAppliance\",\n  /** None */\n  None = \"None\",\n}\n\n/**\n * Defines values for RouteNextHopType. \\\n * {@link KnownRouteNextHopType} can be used interchangeably with RouteNextHopType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **VirtualNetworkGateway** \\\n * **VnetLocal** \\\n * **Internet** \\\n * **VirtualAppliance** \\\n * **None**\n */\nexport type RouteNextHopType = string;\n\n/** Known values of {@link PublicIPAddressSkuName} that the service accepts. */\nexport enum KnownPublicIPAddressSkuName {\n  /** Basic */\n  Basic = \"Basic\",\n  /** Standard */\n  Standard = \"Standard\",\n}\n\n/**\n * Defines values for PublicIPAddressSkuName. \\\n * {@link KnownPublicIPAddressSkuName} can be used interchangeably with PublicIPAddressSkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **Standard**\n */\nexport type PublicIPAddressSkuName = string;\n\n/** Known values of {@link PublicIPAddressSkuTier} that the service accepts. */\nexport enum KnownPublicIPAddressSkuTier {\n  /** Regional */\n  Regional = \"Regional\",\n  /** Global */\n  Global = \"Global\",\n}\n\n/**\n * Defines values for PublicIPAddressSkuTier. \\\n * {@link KnownPublicIPAddressSkuTier} can be used interchangeably with PublicIPAddressSkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Regional** \\\n * **Global**\n */\nexport type PublicIPAddressSkuTier = string;\n\n/** Known values of {@link DdosSettingsProtectionMode} that the service accepts. */\nexport enum KnownDdosSettingsProtectionMode {\n  /** VirtualNetworkInherited */\n  VirtualNetworkInherited = \"VirtualNetworkInherited\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for DdosSettingsProtectionMode. \\\n * {@link KnownDdosSettingsProtectionMode} can be used interchangeably with DdosSettingsProtectionMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **VirtualNetworkInherited** \\\n * **Enabled** \\\n * **Disabled**\n */\nexport type DdosSettingsProtectionMode = string;\n\n/** Known values of {@link NatGatewaySkuName} that the service accepts. */\nexport enum KnownNatGatewaySkuName {\n  /** Standard */\n  Standard = \"Standard\",\n}\n\n/**\n * Defines values for NatGatewaySkuName. \\\n * {@link KnownNatGatewaySkuName} can be used interchangeably with NatGatewaySkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard**\n */\nexport type NatGatewaySkuName = string;\n\n/** Known values of {@link PublicIPAddressMigrationPhase} that the service accepts. */\nexport enum KnownPublicIPAddressMigrationPhase {\n  /** None */\n  None = \"None\",\n  /** Prepare */\n  Prepare = \"Prepare\",\n  /** Commit */\n  Commit = \"Commit\",\n  /** Abort */\n  Abort = \"Abort\",\n  /** Committed */\n  Committed = \"Committed\",\n}\n\n/**\n * Defines values for PublicIPAddressMigrationPhase. \\\n * {@link KnownPublicIPAddressMigrationPhase} can be used interchangeably with PublicIPAddressMigrationPhase,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Prepare** \\\n * **Commit** \\\n * **Abort** \\\n * **Committed**\n */\nexport type PublicIPAddressMigrationPhase = string;\n\n/** Known values of {@link DeleteOptions} that the service accepts. */\nexport enum KnownDeleteOptions {\n  /** Delete */\n  Delete = \"Delete\",\n  /** Detach */\n  Detach = \"Detach\",\n}\n\n/**\n * Defines values for DeleteOptions. \\\n * {@link KnownDeleteOptions} can be used interchangeably with DeleteOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Delete** \\\n * **Detach**\n */\nexport type DeleteOptions = string;\n\n/** Known values of {@link VirtualNetworkPrivateEndpointNetworkPolicies} that the service accepts. */\nexport enum KnownVirtualNetworkPrivateEndpointNetworkPolicies {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** NetworkSecurityGroupEnabled */\n  NetworkSecurityGroupEnabled = \"NetworkSecurityGroupEnabled\",\n  /** RouteTableEnabled */\n  RouteTableEnabled = \"RouteTableEnabled\",\n}\n\n/**\n * Defines values for VirtualNetworkPrivateEndpointNetworkPolicies. \\\n * {@link KnownVirtualNetworkPrivateEndpointNetworkPolicies} can be used interchangeably with VirtualNetworkPrivateEndpointNetworkPolicies,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled** \\\n * **NetworkSecurityGroupEnabled** \\\n * **RouteTableEnabled**\n */\nexport type VirtualNetworkPrivateEndpointNetworkPolicies = string;\n\n/** Known values of {@link VirtualNetworkPrivateLinkServiceNetworkPolicies} that the service accepts. */\nexport enum KnownVirtualNetworkPrivateLinkServiceNetworkPolicies {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for VirtualNetworkPrivateLinkServiceNetworkPolicies. \\\n * {@link KnownVirtualNetworkPrivateLinkServiceNetworkPolicies} can be used interchangeably with VirtualNetworkPrivateLinkServiceNetworkPolicies,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type VirtualNetworkPrivateLinkServiceNetworkPolicies = string;\n\n/** Known values of {@link SharingScope} that the service accepts. */\nexport enum KnownSharingScope {\n  /** Tenant */\n  Tenant = \"Tenant\",\n  /** DelegatedServices */\n  DelegatedServices = \"DelegatedServices\",\n}\n\n/**\n * Defines values for SharingScope. \\\n * {@link KnownSharingScope} can be used interchangeably with SharingScope,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Tenant** \\\n * **DelegatedServices**\n */\nexport type SharingScope = string;\n\n/** Known values of {@link GatewayLoadBalancerTunnelProtocol} that the service accepts. */\nexport enum KnownGatewayLoadBalancerTunnelProtocol {\n  /** None */\n  None = \"None\",\n  /** Native */\n  Native = \"Native\",\n  /** Vxlan */\n  Vxlan = \"VXLAN\",\n}\n\n/**\n * Defines values for GatewayLoadBalancerTunnelProtocol. \\\n * {@link KnownGatewayLoadBalancerTunnelProtocol} can be used interchangeably with GatewayLoadBalancerTunnelProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Native** \\\n * **VXLAN**\n */\nexport type GatewayLoadBalancerTunnelProtocol = string;\n\n/** Known values of {@link GatewayLoadBalancerTunnelInterfaceType} that the service accepts. */\nexport enum KnownGatewayLoadBalancerTunnelInterfaceType {\n  /** None */\n  None = \"None\",\n  /** Internal */\n  Internal = \"Internal\",\n  /** External */\n  External = \"External\",\n}\n\n/**\n * Defines values for GatewayLoadBalancerTunnelInterfaceType. \\\n * {@link KnownGatewayLoadBalancerTunnelInterfaceType} can be used interchangeably with GatewayLoadBalancerTunnelInterfaceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Internal** \\\n * **External**\n */\nexport type GatewayLoadBalancerTunnelInterfaceType = string;\n\n/** Known values of {@link LoadBalancerBackendAddressAdminState} that the service accepts. */\nexport enum KnownLoadBalancerBackendAddressAdminState {\n  /** None */\n  None = \"None\",\n  /** Up */\n  Up = \"Up\",\n  /** Down */\n  Down = \"Down\",\n}\n\n/**\n * Defines values for LoadBalancerBackendAddressAdminState. \\\n * {@link KnownLoadBalancerBackendAddressAdminState} can be used interchangeably with LoadBalancerBackendAddressAdminState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Up** \\\n * **Down**\n */\nexport type LoadBalancerBackendAddressAdminState = string;\n\n/** Known values of {@link SyncMode} that the service accepts. */\nexport enum KnownSyncMode {\n  /** Automatic */\n  Automatic = \"Automatic\",\n  /** Manual */\n  Manual = \"Manual\",\n}\n\n/**\n * Defines values for SyncMode. \\\n * {@link KnownSyncMode} can be used interchangeably with SyncMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Automatic** \\\n * **Manual**\n */\nexport type SyncMode = string;\n\n/** Known values of {@link TransportProtocol} that the service accepts. */\nexport enum KnownTransportProtocol {\n  /** Udp */\n  Udp = \"Udp\",\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** All */\n  All = \"All\",\n}\n\n/**\n * Defines values for TransportProtocol. \\\n * {@link KnownTransportProtocol} can be used interchangeably with TransportProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Udp** \\\n * **Tcp** \\\n * **All**\n */\nexport type TransportProtocol = string;\n\n/** Known values of {@link ApplicationGatewayCookieBasedAffinity} that the service accepts. */\nexport enum KnownApplicationGatewayCookieBasedAffinity {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for ApplicationGatewayCookieBasedAffinity. \\\n * {@link KnownApplicationGatewayCookieBasedAffinity} can be used interchangeably with ApplicationGatewayCookieBasedAffinity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ApplicationGatewayCookieBasedAffinity = string;\n\n/** Known values of {@link ApplicationGatewayCustomErrorStatusCode} that the service accepts. */\nexport enum KnownApplicationGatewayCustomErrorStatusCode {\n  /** HttpStatus400 */\n  HttpStatus400 = \"HttpStatus400\",\n  /** HttpStatus403 */\n  HttpStatus403 = \"HttpStatus403\",\n  /** HttpStatus404 */\n  HttpStatus404 = \"HttpStatus404\",\n  /** HttpStatus405 */\n  HttpStatus405 = \"HttpStatus405\",\n  /** HttpStatus408 */\n  HttpStatus408 = \"HttpStatus408\",\n  /** HttpStatus500 */\n  HttpStatus500 = \"HttpStatus500\",\n  /** HttpStatus502 */\n  HttpStatus502 = \"HttpStatus502\",\n  /** HttpStatus503 */\n  HttpStatus503 = \"HttpStatus503\",\n  /** HttpStatus504 */\n  HttpStatus504 = \"HttpStatus504\",\n}\n\n/**\n * Defines values for ApplicationGatewayCustomErrorStatusCode. \\\n * {@link KnownApplicationGatewayCustomErrorStatusCode} can be used interchangeably with ApplicationGatewayCustomErrorStatusCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HttpStatus400** \\\n * **HttpStatus403** \\\n * **HttpStatus404** \\\n * **HttpStatus405** \\\n * **HttpStatus408** \\\n * **HttpStatus500** \\\n * **HttpStatus502** \\\n * **HttpStatus503** \\\n * **HttpStatus504**\n */\nexport type ApplicationGatewayCustomErrorStatusCode = string;\n\n/** Known values of {@link ApplicationGatewayClientRevocationOptions} that the service accepts. */\nexport enum KnownApplicationGatewayClientRevocationOptions {\n  /** None */\n  None = \"None\",\n  /** Ocsp */\n  Ocsp = \"OCSP\",\n}\n\n/**\n * Defines values for ApplicationGatewayClientRevocationOptions. \\\n * {@link KnownApplicationGatewayClientRevocationOptions} can be used interchangeably with ApplicationGatewayClientRevocationOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **OCSP**\n */\nexport type ApplicationGatewayClientRevocationOptions = string;\n\n/** Known values of {@link ApplicationGatewayRequestRoutingRuleType} that the service accepts. */\nexport enum KnownApplicationGatewayRequestRoutingRuleType {\n  /** Basic */\n  Basic = \"Basic\",\n  /** PathBasedRouting */\n  PathBasedRouting = \"PathBasedRouting\",\n}\n\n/**\n * Defines values for ApplicationGatewayRequestRoutingRuleType. \\\n * {@link KnownApplicationGatewayRequestRoutingRuleType} can be used interchangeably with ApplicationGatewayRequestRoutingRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **PathBasedRouting**\n */\nexport type ApplicationGatewayRequestRoutingRuleType = string;\n\n/** Known values of {@link ApplicationGatewayRedirectType} that the service accepts. */\nexport enum KnownApplicationGatewayRedirectType {\n  /** Permanent */\n  Permanent = \"Permanent\",\n  /** Found */\n  Found = \"Found\",\n  /** SeeOther */\n  SeeOther = \"SeeOther\",\n  /** Temporary */\n  Temporary = \"Temporary\",\n}\n\n/**\n * Defines values for ApplicationGatewayRedirectType. \\\n * {@link KnownApplicationGatewayRedirectType} can be used interchangeably with ApplicationGatewayRedirectType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Permanent** \\\n * **Found** \\\n * **SeeOther** \\\n * **Temporary**\n */\nexport type ApplicationGatewayRedirectType = string;\n\n/** Known values of {@link ApplicationGatewayFirewallMode} that the service accepts. */\nexport enum KnownApplicationGatewayFirewallMode {\n  /** Detection */\n  Detection = \"Detection\",\n  /** Prevention */\n  Prevention = \"Prevention\",\n}\n\n/**\n * Defines values for ApplicationGatewayFirewallMode. \\\n * {@link KnownApplicationGatewayFirewallMode} can be used interchangeably with ApplicationGatewayFirewallMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Detection** \\\n * **Prevention**\n */\nexport type ApplicationGatewayFirewallMode = string;\n\n/** Known values of {@link ApplicationGatewayLoadDistributionAlgorithm} that the service accepts. */\nexport enum KnownApplicationGatewayLoadDistributionAlgorithm {\n  /** RoundRobin */\n  RoundRobin = \"RoundRobin\",\n  /** LeastConnections */\n  LeastConnections = \"LeastConnections\",\n  /** IpHash */\n  IpHash = \"IpHash\",\n}\n\n/**\n * Defines values for ApplicationGatewayLoadDistributionAlgorithm. \\\n * {@link KnownApplicationGatewayLoadDistributionAlgorithm} can be used interchangeably with ApplicationGatewayLoadDistributionAlgorithm,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RoundRobin** \\\n * **LeastConnections** \\\n * **IpHash**\n */\nexport type ApplicationGatewayLoadDistributionAlgorithm = string;\n\n/** Known values of {@link ApplicationGatewayBackendHealthServerHealth} that the service accepts. */\nexport enum KnownApplicationGatewayBackendHealthServerHealth {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Up */\n  Up = \"Up\",\n  /** Down */\n  Down = \"Down\",\n  /** Partial */\n  Partial = \"Partial\",\n  /** Draining */\n  Draining = \"Draining\",\n}\n\n/**\n * Defines values for ApplicationGatewayBackendHealthServerHealth. \\\n * {@link KnownApplicationGatewayBackendHealthServerHealth} can be used interchangeably with ApplicationGatewayBackendHealthServerHealth,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Up** \\\n * **Down** \\\n * **Partial** \\\n * **Draining**\n */\nexport type ApplicationGatewayBackendHealthServerHealth = string;\n\n/** Known values of {@link ApplicationGatewayWafRuleStateTypes} that the service accepts. */\nexport enum KnownApplicationGatewayWafRuleStateTypes {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for ApplicationGatewayWafRuleStateTypes. \\\n * {@link KnownApplicationGatewayWafRuleStateTypes} can be used interchangeably with ApplicationGatewayWafRuleStateTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ApplicationGatewayWafRuleStateTypes = string;\n\n/** Known values of {@link ApplicationGatewayWafRuleActionTypes} that the service accepts. */\nexport enum KnownApplicationGatewayWafRuleActionTypes {\n  /** None */\n  None = \"None\",\n  /** AnomalyScoring */\n  AnomalyScoring = \"AnomalyScoring\",\n  /** Allow */\n  Allow = \"Allow\",\n  /** Block */\n  Block = \"Block\",\n  /** Log */\n  Log = \"Log\",\n}\n\n/**\n * Defines values for ApplicationGatewayWafRuleActionTypes. \\\n * {@link KnownApplicationGatewayWafRuleActionTypes} can be used interchangeably with ApplicationGatewayWafRuleActionTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **AnomalyScoring** \\\n * **Allow** \\\n * **Block** \\\n * **Log**\n */\nexport type ApplicationGatewayWafRuleActionTypes = string;\n\n/** Known values of {@link ApplicationGatewayWafRuleSensitivityTypes} that the service accepts. */\nexport enum KnownApplicationGatewayWafRuleSensitivityTypes {\n  /** None */\n  None = \"None\",\n  /** Low */\n  Low = \"Low\",\n  /** Medium */\n  Medium = \"Medium\",\n  /** High */\n  High = \"High\",\n}\n\n/**\n * Defines values for ApplicationGatewayWafRuleSensitivityTypes. \\\n * {@link KnownApplicationGatewayWafRuleSensitivityTypes} can be used interchangeably with ApplicationGatewayWafRuleSensitivityTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Low** \\\n * **Medium** \\\n * **High**\n */\nexport type ApplicationGatewayWafRuleSensitivityTypes = string;\n\n/** Known values of {@link ApplicationGatewayTierTypes} that the service accepts. */\nexport enum KnownApplicationGatewayTierTypes {\n  /** Standard */\n  Standard = \"Standard\",\n  /** WAF */\n  WAF = \"WAF\",\n  /** StandardV2 */\n  StandardV2 = \"Standard_v2\",\n  /** WAFV2 */\n  WAFV2 = \"WAF_v2\",\n}\n\n/**\n * Defines values for ApplicationGatewayTierTypes. \\\n * {@link KnownApplicationGatewayTierTypes} can be used interchangeably with ApplicationGatewayTierTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **WAF** \\\n * **Standard_v2** \\\n * **WAF_v2**\n */\nexport type ApplicationGatewayTierTypes = string;\n\n/** Known values of {@link ApplicationGatewayRuleSetStatusOptions} that the service accepts. */\nexport enum KnownApplicationGatewayRuleSetStatusOptions {\n  /** Preview */\n  Preview = \"Preview\",\n  /** GA */\n  GA = \"GA\",\n  /** Supported */\n  Supported = \"Supported\",\n  /** Deprecated */\n  Deprecated = \"Deprecated\",\n}\n\n/**\n * Defines values for ApplicationGatewayRuleSetStatusOptions. \\\n * {@link KnownApplicationGatewayRuleSetStatusOptions} can be used interchangeably with ApplicationGatewayRuleSetStatusOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Preview** \\\n * **GA** \\\n * **Supported** \\\n * **Deprecated**\n */\nexport type ApplicationGatewayRuleSetStatusOptions = string;\n\n/** Known values of {@link AzureFirewallRCActionType} that the service accepts. */\nexport enum KnownAzureFirewallRCActionType {\n  /** Allow */\n  Allow = \"Allow\",\n  /** Deny */\n  Deny = \"Deny\",\n}\n\n/**\n * Defines values for AzureFirewallRCActionType. \\\n * {@link KnownAzureFirewallRCActionType} can be used interchangeably with AzureFirewallRCActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow** \\\n * **Deny**\n */\nexport type AzureFirewallRCActionType = string;\n\n/** Known values of {@link AzureFirewallApplicationRuleProtocolType} that the service accepts. */\nexport enum KnownAzureFirewallApplicationRuleProtocolType {\n  /** Http */\n  Http = \"Http\",\n  /** Https */\n  Https = \"Https\",\n  /** Mssql */\n  Mssql = \"Mssql\",\n}\n\n/**\n * Defines values for AzureFirewallApplicationRuleProtocolType. \\\n * {@link KnownAzureFirewallApplicationRuleProtocolType} can be used interchangeably with AzureFirewallApplicationRuleProtocolType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Http** \\\n * **Https** \\\n * **Mssql**\n */\nexport type AzureFirewallApplicationRuleProtocolType = string;\n\n/** Known values of {@link AzureFirewallNatRCActionType} that the service accepts. */\nexport enum KnownAzureFirewallNatRCActionType {\n  /** Snat */\n  Snat = \"Snat\",\n  /** Dnat */\n  Dnat = \"Dnat\",\n}\n\n/**\n * Defines values for AzureFirewallNatRCActionType. \\\n * {@link KnownAzureFirewallNatRCActionType} can be used interchangeably with AzureFirewallNatRCActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Snat** \\\n * **Dnat**\n */\nexport type AzureFirewallNatRCActionType = string;\n\n/** Known values of {@link AzureFirewallNetworkRuleProtocol} that the service accepts. */\nexport enum KnownAzureFirewallNetworkRuleProtocol {\n  /** TCP */\n  TCP = \"TCP\",\n  /** UDP */\n  UDP = \"UDP\",\n  /** Any */\n  Any = \"Any\",\n  /** Icmp */\n  Icmp = \"ICMP\",\n}\n\n/**\n * Defines values for AzureFirewallNetworkRuleProtocol. \\\n * {@link KnownAzureFirewallNetworkRuleProtocol} can be used interchangeably with AzureFirewallNetworkRuleProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TCP** \\\n * **UDP** \\\n * **Any** \\\n * **ICMP**\n */\nexport type AzureFirewallNetworkRuleProtocol = string;\n\n/** Known values of {@link AzureFirewallThreatIntelMode} that the service accepts. */\nexport enum KnownAzureFirewallThreatIntelMode {\n  /** Alert */\n  Alert = \"Alert\",\n  /** Deny */\n  Deny = \"Deny\",\n  /** Off */\n  Off = \"Off\",\n}\n\n/**\n * Defines values for AzureFirewallThreatIntelMode. \\\n * {@link KnownAzureFirewallThreatIntelMode} can be used interchangeably with AzureFirewallThreatIntelMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Alert** \\\n * **Deny** \\\n * **Off**\n */\nexport type AzureFirewallThreatIntelMode = string;\n\n/** Known values of {@link AzureFirewallSkuName} that the service accepts. */\nexport enum KnownAzureFirewallSkuName {\n  /** AzfwVnet */\n  AzfwVnet = \"AZFW_VNet\",\n  /** AzfwHub */\n  AzfwHub = \"AZFW_Hub\",\n}\n\n/**\n * Defines values for AzureFirewallSkuName. \\\n * {@link KnownAzureFirewallSkuName} can be used interchangeably with AzureFirewallSkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AZFW_VNet** \\\n * **AZFW_Hub**\n */\nexport type AzureFirewallSkuName = string;\n\n/** Known values of {@link AzureFirewallSkuTier} that the service accepts. */\nexport enum KnownAzureFirewallSkuTier {\n  /** Standard */\n  Standard = \"Standard\",\n  /** Premium */\n  Premium = \"Premium\",\n  /** Basic */\n  Basic = \"Basic\",\n}\n\n/**\n * Defines values for AzureFirewallSkuTier. \\\n * {@link KnownAzureFirewallSkuTier} can be used interchangeably with AzureFirewallSkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **Premium** \\\n * **Basic**\n */\nexport type AzureFirewallSkuTier = string;\n\n/** Known values of {@link AzureFirewallPacketCaptureFlagsType} that the service accepts. */\nexport enum KnownAzureFirewallPacketCaptureFlagsType {\n  /** Fin */\n  Fin = \"fin\",\n  /** Syn */\n  Syn = \"syn\",\n  /** Rst */\n  Rst = \"rst\",\n  /** Push */\n  Push = \"push\",\n  /** Ack */\n  Ack = \"ack\",\n  /** Urg */\n  Urg = \"urg\",\n}\n\n/**\n * Defines values for AzureFirewallPacketCaptureFlagsType. \\\n * {@link KnownAzureFirewallPacketCaptureFlagsType} can be used interchangeably with AzureFirewallPacketCaptureFlagsType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **fin** \\\n * **syn** \\\n * **rst** \\\n * **push** \\\n * **ack** \\\n * **urg**\n */\nexport type AzureFirewallPacketCaptureFlagsType = string;\n\n/** Known values of {@link BastionHostSkuName} that the service accepts. */\nexport enum KnownBastionHostSkuName {\n  /** Basic */\n  Basic = \"Basic\",\n  /** Standard */\n  Standard = \"Standard\",\n  /** Developer */\n  Developer = \"Developer\",\n  /** Premium */\n  Premium = \"Premium\",\n}\n\n/**\n * Defines values for BastionHostSkuName. \\\n * {@link KnownBastionHostSkuName} can be used interchangeably with BastionHostSkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **Standard** \\\n * **Developer** \\\n * **Premium**\n */\nexport type BastionHostSkuName = string;\n\n/** Known values of {@link BastionConnectProtocol} that the service accepts. */\nexport enum KnownBastionConnectProtocol {\n  /** SSH */\n  SSH = \"SSH\",\n  /** RDP */\n  RDP = \"RDP\",\n}\n\n/**\n * Defines values for BastionConnectProtocol. \\\n * {@link KnownBastionConnectProtocol} can be used interchangeably with BastionConnectProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SSH** \\\n * **RDP**\n */\nexport type BastionConnectProtocol = string;\n\n/** Known values of {@link CommissionedState} that the service accepts. */\nexport enum KnownCommissionedState {\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Provisioned */\n  Provisioned = \"Provisioned\",\n  /** Commissioning */\n  Commissioning = \"Commissioning\",\n  /** CommissionedNoInternetAdvertise */\n  CommissionedNoInternetAdvertise = \"CommissionedNoInternetAdvertise\",\n  /** Commissioned */\n  Commissioned = \"Commissioned\",\n  /** Decommissioning */\n  Decommissioning = \"Decommissioning\",\n  /** Deprovisioning */\n  Deprovisioning = \"Deprovisioning\",\n  /** Deprovisioned */\n  Deprovisioned = \"Deprovisioned\",\n}\n\n/**\n * Defines values for CommissionedState. \\\n * {@link KnownCommissionedState} can be used interchangeably with CommissionedState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Provisioning** \\\n * **Provisioned** \\\n * **Commissioning** \\\n * **CommissionedNoInternetAdvertise** \\\n * **Commissioned** \\\n * **Decommissioning** \\\n * **Deprovisioning** \\\n * **Deprovisioned**\n */\nexport type CommissionedState = string;\n\n/** Known values of {@link Geo} that the service accepts. */\nexport enum KnownGeo {\n  /** Global */\n  Global = \"GLOBAL\",\n  /** Afri */\n  Afri = \"AFRI\",\n  /** Apac */\n  Apac = \"APAC\",\n  /** Euro */\n  Euro = \"EURO\",\n  /** Latam */\n  Latam = \"LATAM\",\n  /** NAM */\n  NAM = \"NAM\",\n  /** ME */\n  ME = \"ME\",\n  /** Oceania */\n  Oceania = \"OCEANIA\",\n  /** AQ */\n  AQ = \"AQ\",\n}\n\n/**\n * Defines values for Geo. \\\n * {@link KnownGeo} can be used interchangeably with Geo,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GLOBAL** \\\n * **AFRI** \\\n * **APAC** \\\n * **EURO** \\\n * **LATAM** \\\n * **NAM** \\\n * **ME** \\\n * **OCEANIA** \\\n * **AQ**\n */\nexport type Geo = string;\n\n/** Known values of {@link CustomIpPrefixType} that the service accepts. */\nexport enum KnownCustomIpPrefixType {\n  /** Singular */\n  Singular = \"Singular\",\n  /** Parent */\n  Parent = \"Parent\",\n  /** Child */\n  Child = \"Child\",\n}\n\n/**\n * Defines values for CustomIpPrefixType. \\\n * {@link KnownCustomIpPrefixType} can be used interchangeably with CustomIpPrefixType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Singular** \\\n * **Parent** \\\n * **Child**\n */\nexport type CustomIpPrefixType = string;\n\n/** Known values of {@link ProtocolType} that the service accepts. */\nexport enum KnownProtocolType {\n  /** DoNotUse */\n  DoNotUse = \"DoNotUse\",\n  /** Icmp */\n  Icmp = \"Icmp\",\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** Udp */\n  Udp = \"Udp\",\n  /** Gre */\n  Gre = \"Gre\",\n  /** Esp */\n  Esp = \"Esp\",\n  /** Ah */\n  Ah = \"Ah\",\n  /** Vxlan */\n  Vxlan = \"Vxlan\",\n  /** All */\n  All = \"All\",\n}\n\n/**\n * Defines values for ProtocolType. \\\n * {@link KnownProtocolType} can be used interchangeably with ProtocolType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DoNotUse** \\\n * **Icmp** \\\n * **Tcp** \\\n * **Udp** \\\n * **Gre** \\\n * **Esp** \\\n * **Ah** \\\n * **Vxlan** \\\n * **All**\n */\nexport type ProtocolType = string;\n\n/** Known values of {@link AuthorizationUseStatus} that the service accepts. */\nexport enum KnownAuthorizationUseStatus {\n  /** Available */\n  Available = \"Available\",\n  /** InUse */\n  InUse = \"InUse\",\n}\n\n/**\n * Defines values for AuthorizationUseStatus. \\\n * {@link KnownAuthorizationUseStatus} can be used interchangeably with AuthorizationUseStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Available** \\\n * **InUse**\n */\nexport type AuthorizationUseStatus = string;\n\n/** Known values of {@link ExpressRoutePeeringType} that the service accepts. */\nexport enum KnownExpressRoutePeeringType {\n  /** AzurePublicPeering */\n  AzurePublicPeering = \"AzurePublicPeering\",\n  /** AzurePrivatePeering */\n  AzurePrivatePeering = \"AzurePrivatePeering\",\n  /** MicrosoftPeering */\n  MicrosoftPeering = \"MicrosoftPeering\",\n}\n\n/**\n * Defines values for ExpressRoutePeeringType. \\\n * {@link KnownExpressRoutePeeringType} can be used interchangeably with ExpressRoutePeeringType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzurePublicPeering** \\\n * **AzurePrivatePeering** \\\n * **MicrosoftPeering**\n */\nexport type ExpressRoutePeeringType = string;\n\n/** Known values of {@link ExpressRoutePeeringState} that the service accepts. */\nexport enum KnownExpressRoutePeeringState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n}\n\n/**\n * Defines values for ExpressRoutePeeringState. \\\n * {@link KnownExpressRoutePeeringState} can be used interchangeably with ExpressRoutePeeringState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type ExpressRoutePeeringState = string;\n\n/** Known values of {@link ExpressRouteCircuitPeeringAdvertisedPublicPrefixState} that the service accepts. */\nexport enum KnownExpressRouteCircuitPeeringAdvertisedPublicPrefixState {\n  /** NotConfigured */\n  NotConfigured = \"NotConfigured\",\n  /** Configuring */\n  Configuring = \"Configuring\",\n  /** Configured */\n  Configured = \"Configured\",\n  /** ValidationNeeded */\n  ValidationNeeded = \"ValidationNeeded\",\n}\n\n/**\n * Defines values for ExpressRouteCircuitPeeringAdvertisedPublicPrefixState. \\\n * {@link KnownExpressRouteCircuitPeeringAdvertisedPublicPrefixState} can be used interchangeably with ExpressRouteCircuitPeeringAdvertisedPublicPrefixState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotConfigured** \\\n * **Configuring** \\\n * **Configured** \\\n * **ValidationNeeded**\n */\nexport type ExpressRouteCircuitPeeringAdvertisedPublicPrefixState = string;\n\n/** Known values of {@link ExpressRouteCircuitPeeringState} that the service accepts. */\nexport enum KnownExpressRouteCircuitPeeringState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n}\n\n/**\n * Defines values for ExpressRouteCircuitPeeringState. \\\n * {@link KnownExpressRouteCircuitPeeringState} can be used interchangeably with ExpressRouteCircuitPeeringState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type ExpressRouteCircuitPeeringState = string;\n\n/** Known values of {@link CircuitConnectionStatus} that the service accepts. */\nexport enum KnownCircuitConnectionStatus {\n  /** Connected */\n  Connected = \"Connected\",\n  /** Connecting */\n  Connecting = \"Connecting\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n}\n\n/**\n * Defines values for CircuitConnectionStatus. \\\n * {@link KnownCircuitConnectionStatus} can be used interchangeably with CircuitConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Connected** \\\n * **Connecting** \\\n * **Disconnected**\n */\nexport type CircuitConnectionStatus = string;\n\n/** Known values of {@link ExpressRouteCircuitSkuTier} that the service accepts. */\nexport enum KnownExpressRouteCircuitSkuTier {\n  /** Standard */\n  Standard = \"Standard\",\n  /** Premium */\n  Premium = \"Premium\",\n  /** Basic */\n  Basic = \"Basic\",\n  /** Local */\n  Local = \"Local\",\n}\n\n/**\n * Defines values for ExpressRouteCircuitSkuTier. \\\n * {@link KnownExpressRouteCircuitSkuTier} can be used interchangeably with ExpressRouteCircuitSkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **Premium** \\\n * **Basic** \\\n * **Local**\n */\nexport type ExpressRouteCircuitSkuTier = string;\n\n/** Known values of {@link ExpressRouteCircuitSkuFamily} that the service accepts. */\nexport enum KnownExpressRouteCircuitSkuFamily {\n  /** UnlimitedData */\n  UnlimitedData = \"UnlimitedData\",\n  /** MeteredData */\n  MeteredData = \"MeteredData\",\n}\n\n/**\n * Defines values for ExpressRouteCircuitSkuFamily. \\\n * {@link KnownExpressRouteCircuitSkuFamily} can be used interchangeably with ExpressRouteCircuitSkuFamily,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **UnlimitedData** \\\n * **MeteredData**\n */\nexport type ExpressRouteCircuitSkuFamily = string;\n\n/** Known values of {@link ServiceProviderProvisioningState} that the service accepts. */\nexport enum KnownServiceProviderProvisioningState {\n  /** NotProvisioned */\n  NotProvisioned = \"NotProvisioned\",\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Provisioned */\n  Provisioned = \"Provisioned\",\n  /** Deprovisioning */\n  Deprovisioning = \"Deprovisioning\",\n}\n\n/**\n * Defines values for ServiceProviderProvisioningState. \\\n * {@link KnownServiceProviderProvisioningState} can be used interchangeably with ServiceProviderProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotProvisioned** \\\n * **Provisioning** \\\n * **Provisioned** \\\n * **Deprovisioning**\n */\nexport type ServiceProviderProvisioningState = string;\n\n/** Known values of {@link ExpressRoutePortsEncapsulation} that the service accepts. */\nexport enum KnownExpressRoutePortsEncapsulation {\n  /** Dot1Q */\n  Dot1Q = \"Dot1Q\",\n  /** QinQ */\n  QinQ = \"QinQ\",\n}\n\n/**\n * Defines values for ExpressRoutePortsEncapsulation. \\\n * {@link KnownExpressRoutePortsEncapsulation} can be used interchangeably with ExpressRoutePortsEncapsulation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Dot1Q** \\\n * **QinQ**\n */\nexport type ExpressRoutePortsEncapsulation = string;\n\n/** Known values of {@link ExpressRouteLinkConnectorType} that the service accepts. */\nexport enum KnownExpressRouteLinkConnectorType {\n  /** LC */\n  LC = \"LC\",\n  /** SC */\n  SC = \"SC\",\n}\n\n/**\n * Defines values for ExpressRouteLinkConnectorType. \\\n * {@link KnownExpressRouteLinkConnectorType} can be used interchangeably with ExpressRouteLinkConnectorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LC** \\\n * **SC**\n */\nexport type ExpressRouteLinkConnectorType = string;\n\n/** Known values of {@link ExpressRouteLinkAdminState} that the service accepts. */\nexport enum KnownExpressRouteLinkAdminState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for ExpressRouteLinkAdminState. \\\n * {@link KnownExpressRouteLinkAdminState} can be used interchangeably with ExpressRouteLinkAdminState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ExpressRouteLinkAdminState = string;\n\n/** Known values of {@link ExpressRouteLinkMacSecCipher} that the service accepts. */\nexport enum KnownExpressRouteLinkMacSecCipher {\n  /** GcmAes256 */\n  GcmAes256 = \"GcmAes256\",\n  /** GcmAes128 */\n  GcmAes128 = \"GcmAes128\",\n  /** GcmAesXpn128 */\n  GcmAesXpn128 = \"GcmAesXpn128\",\n  /** GcmAesXpn256 */\n  GcmAesXpn256 = \"GcmAesXpn256\",\n}\n\n/**\n * Defines values for ExpressRouteLinkMacSecCipher. \\\n * {@link KnownExpressRouteLinkMacSecCipher} can be used interchangeably with ExpressRouteLinkMacSecCipher,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GcmAes256** \\\n * **GcmAes128** \\\n * **GcmAesXpn128** \\\n * **GcmAesXpn256**\n */\nexport type ExpressRouteLinkMacSecCipher = string;\n\n/** Known values of {@link ExpressRouteLinkMacSecSciState} that the service accepts. */\nexport enum KnownExpressRouteLinkMacSecSciState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n}\n\n/**\n * Defines values for ExpressRouteLinkMacSecSciState. \\\n * {@link KnownExpressRouteLinkMacSecSciState} can be used interchangeably with ExpressRouteLinkMacSecSciState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type ExpressRouteLinkMacSecSciState = string;\n\n/** Known values of {@link ExpressRoutePortsBillingType} that the service accepts. */\nexport enum KnownExpressRoutePortsBillingType {\n  /** MeteredData */\n  MeteredData = \"MeteredData\",\n  /** UnlimitedData */\n  UnlimitedData = \"UnlimitedData\",\n}\n\n/**\n * Defines values for ExpressRoutePortsBillingType. \\\n * {@link KnownExpressRoutePortsBillingType} can be used interchangeably with ExpressRoutePortsBillingType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MeteredData** \\\n * **UnlimitedData**\n */\nexport type ExpressRoutePortsBillingType = string;\n\n/** Known values of {@link ExpressRoutePortAuthorizationUseStatus} that the service accepts. */\nexport enum KnownExpressRoutePortAuthorizationUseStatus {\n  /** Available */\n  Available = \"Available\",\n  /** InUse */\n  InUse = \"InUse\",\n}\n\n/**\n * Defines values for ExpressRoutePortAuthorizationUseStatus. \\\n * {@link KnownExpressRoutePortAuthorizationUseStatus} can be used interchangeably with ExpressRoutePortAuthorizationUseStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Available** \\\n * **InUse**\n */\nexport type ExpressRoutePortAuthorizationUseStatus = string;\n\n/** Known values of {@link AutoLearnPrivateRangesMode} that the service accepts. */\nexport enum KnownAutoLearnPrivateRangesMode {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for AutoLearnPrivateRangesMode. \\\n * {@link KnownAutoLearnPrivateRangesMode} can be used interchangeably with AutoLearnPrivateRangesMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type AutoLearnPrivateRangesMode = string;\n\n/** Known values of {@link FirewallPolicyIntrusionDetectionStateType} that the service accepts. */\nexport enum KnownFirewallPolicyIntrusionDetectionStateType {\n  /** Off */\n  Off = \"Off\",\n  /** Alert */\n  Alert = \"Alert\",\n  /** Deny */\n  Deny = \"Deny\",\n}\n\n/**\n * Defines values for FirewallPolicyIntrusionDetectionStateType. \\\n * {@link KnownFirewallPolicyIntrusionDetectionStateType} can be used interchangeably with FirewallPolicyIntrusionDetectionStateType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Off** \\\n * **Alert** \\\n * **Deny**\n */\nexport type FirewallPolicyIntrusionDetectionStateType = string;\n\n/** Known values of {@link FirewallPolicyIntrusionDetectionProfileType} that the service accepts. */\nexport enum KnownFirewallPolicyIntrusionDetectionProfileType {\n  /** Basic */\n  Basic = \"Basic\",\n  /** Standard */\n  Standard = \"Standard\",\n  /** Advanced */\n  Advanced = \"Advanced\",\n  /** Extended */\n  Extended = \"Extended\",\n}\n\n/**\n * Defines values for FirewallPolicyIntrusionDetectionProfileType. \\\n * {@link KnownFirewallPolicyIntrusionDetectionProfileType} can be used interchangeably with FirewallPolicyIntrusionDetectionProfileType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **Standard** \\\n * **Advanced** \\\n * **Extended**\n */\nexport type FirewallPolicyIntrusionDetectionProfileType = string;\n\n/** Known values of {@link FirewallPolicyIntrusionDetectionProtocol} that the service accepts. */\nexport enum KnownFirewallPolicyIntrusionDetectionProtocol {\n  /** TCP */\n  TCP = \"TCP\",\n  /** UDP */\n  UDP = \"UDP\",\n  /** Icmp */\n  Icmp = \"ICMP\",\n  /** ANY */\n  ANY = \"ANY\",\n}\n\n/**\n * Defines values for FirewallPolicyIntrusionDetectionProtocol. \\\n * {@link KnownFirewallPolicyIntrusionDetectionProtocol} can be used interchangeably with FirewallPolicyIntrusionDetectionProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TCP** \\\n * **UDP** \\\n * **ICMP** \\\n * **ANY**\n */\nexport type FirewallPolicyIntrusionDetectionProtocol = string;\n\n/** Known values of {@link FirewallPolicySkuTier} that the service accepts. */\nexport enum KnownFirewallPolicySkuTier {\n  /** Standard */\n  Standard = \"Standard\",\n  /** Premium */\n  Premium = \"Premium\",\n  /** Basic */\n  Basic = \"Basic\",\n}\n\n/**\n * Defines values for FirewallPolicySkuTier. \\\n * {@link KnownFirewallPolicySkuTier} can be used interchangeably with FirewallPolicySkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **Premium** \\\n * **Basic**\n */\nexport type FirewallPolicySkuTier = string;\n\n/** Known values of {@link FirewallPolicyRuleCollectionType} that the service accepts. */\nexport enum KnownFirewallPolicyRuleCollectionType {\n  /** FirewallPolicyNatRuleCollection */\n  FirewallPolicyNatRuleCollection = \"FirewallPolicyNatRuleCollection\",\n  /** FirewallPolicyFilterRuleCollection */\n  FirewallPolicyFilterRuleCollection = \"FirewallPolicyFilterRuleCollection\",\n}\n\n/**\n * Defines values for FirewallPolicyRuleCollectionType. \\\n * {@link KnownFirewallPolicyRuleCollectionType} can be used interchangeably with FirewallPolicyRuleCollectionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **FirewallPolicyNatRuleCollection** \\\n * **FirewallPolicyFilterRuleCollection**\n */\nexport type FirewallPolicyRuleCollectionType = string;\n\n/** Known values of {@link FirewallPolicyIdpsQuerySortOrder} that the service accepts. */\nexport enum KnownFirewallPolicyIdpsQuerySortOrder {\n  /** Ascending */\n  Ascending = \"Ascending\",\n  /** Descending */\n  Descending = \"Descending\",\n}\n\n/**\n * Defines values for FirewallPolicyIdpsQuerySortOrder. \\\n * {@link KnownFirewallPolicyIdpsQuerySortOrder} can be used interchangeably with FirewallPolicyIdpsQuerySortOrder,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Ascending** \\\n * **Descending**\n */\nexport type FirewallPolicyIdpsQuerySortOrder = string;\n\n/** Known values of {@link IpType} that the service accepts. */\nexport enum KnownIpType {\n  /** IPv4 */\n  IPv4 = \"IPv4\",\n  /** IPv6 */\n  IPv6 = \"IPv6\",\n}\n\n/**\n * Defines values for IpType. \\\n * {@link KnownIpType} can be used interchangeably with IpType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IPv4** \\\n * **IPv6**\n */\nexport type IpType = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\",\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link IpAllocationType} that the service accepts. */\nexport enum KnownIpAllocationType {\n  /** Undefined */\n  Undefined = \"Undefined\",\n  /** Hypernet */\n  Hypernet = \"Hypernet\",\n}\n\n/**\n * Defines values for IpAllocationType. \\\n * {@link KnownIpAllocationType} can be used interchangeably with IpAllocationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Undefined** \\\n * **Hypernet**\n */\nexport type IpAllocationType = string;\n\n/** Known values of {@link LoadBalancerSkuName} that the service accepts. */\nexport enum KnownLoadBalancerSkuName {\n  /** Basic */\n  Basic = \"Basic\",\n  /** Standard */\n  Standard = \"Standard\",\n  /** Gateway */\n  Gateway = \"Gateway\",\n}\n\n/**\n * Defines values for LoadBalancerSkuName. \\\n * {@link KnownLoadBalancerSkuName} can be used interchangeably with LoadBalancerSkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **Standard** \\\n * **Gateway**\n */\nexport type LoadBalancerSkuName = string;\n\n/** Known values of {@link LoadBalancerSkuTier} that the service accepts. */\nexport enum KnownLoadBalancerSkuTier {\n  /** Regional */\n  Regional = \"Regional\",\n  /** Global */\n  Global = \"Global\",\n}\n\n/**\n * Defines values for LoadBalancerSkuTier. \\\n * {@link KnownLoadBalancerSkuTier} can be used interchangeably with LoadBalancerSkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Regional** \\\n * **Global**\n */\nexport type LoadBalancerSkuTier = string;\n\n/** Known values of {@link LoadDistribution} that the service accepts. */\nexport enum KnownLoadDistribution {\n  /** Default */\n  Default = \"Default\",\n  /** SourceIP */\n  SourceIP = \"SourceIP\",\n  /** SourceIPProtocol */\n  SourceIPProtocol = \"SourceIPProtocol\",\n}\n\n/**\n * Defines values for LoadDistribution. \\\n * {@link KnownLoadDistribution} can be used interchangeably with LoadDistribution,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **SourceIP** \\\n * **SourceIPProtocol**\n */\nexport type LoadDistribution = string;\n\n/** Known values of {@link ProbeProtocol} that the service accepts. */\nexport enum KnownProbeProtocol {\n  /** Http */\n  Http = \"Http\",\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** Https */\n  Https = \"Https\",\n}\n\n/**\n * Defines values for ProbeProtocol. \\\n * {@link KnownProbeProtocol} can be used interchangeably with ProbeProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Http** \\\n * **Tcp** \\\n * **Https**\n */\nexport type ProbeProtocol = string;\n\n/** Known values of {@link ProbeNoHealthyBackendsBehavior} that the service accepts. */\nexport enum KnownProbeNoHealthyBackendsBehavior {\n  /** No new flows will be sent to the backend pool. */\n  AllProbedDown = \"AllProbedDown\",\n  /** When all backend instances are probed down, incoming packets will be sent to all instances. */\n  AllProbedUp = \"AllProbedUp\",\n}\n\n/**\n * Defines values for ProbeNoHealthyBackendsBehavior. \\\n * {@link KnownProbeNoHealthyBackendsBehavior} can be used interchangeably with ProbeNoHealthyBackendsBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AllProbedDown**: No new flows will be sent to the backend pool. \\\n * **AllProbedUp**: When all backend instances are probed down, incoming packets will be sent to all instances.\n */\nexport type ProbeNoHealthyBackendsBehavior = string;\n\n/** Known values of {@link LoadBalancerOutboundRuleProtocol} that the service accepts. */\nexport enum KnownLoadBalancerOutboundRuleProtocol {\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** Udp */\n  Udp = \"Udp\",\n  /** All */\n  All = \"All\",\n}\n\n/**\n * Defines values for LoadBalancerOutboundRuleProtocol. \\\n * {@link KnownLoadBalancerOutboundRuleProtocol} can be used interchangeably with LoadBalancerOutboundRuleProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Tcp** \\\n * **Udp** \\\n * **All**\n */\nexport type LoadBalancerOutboundRuleProtocol = string;\n\n/** Known values of {@link EffectiveRouteSource} that the service accepts. */\nexport enum KnownEffectiveRouteSource {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** User */\n  User = \"User\",\n  /** VirtualNetworkGateway */\n  VirtualNetworkGateway = \"VirtualNetworkGateway\",\n  /** Default */\n  Default = \"Default\",\n}\n\n/**\n * Defines values for EffectiveRouteSource. \\\n * {@link KnownEffectiveRouteSource} can be used interchangeably with EffectiveRouteSource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **User** \\\n * **VirtualNetworkGateway** \\\n * **Default**\n */\nexport type EffectiveRouteSource = string;\n\n/** Known values of {@link EffectiveRouteState} that the service accepts. */\nexport enum KnownEffectiveRouteState {\n  /** Active */\n  Active = \"Active\",\n  /** Invalid */\n  Invalid = \"Invalid\",\n}\n\n/**\n * Defines values for EffectiveRouteState. \\\n * {@link KnownEffectiveRouteState} can be used interchangeably with EffectiveRouteState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Active** \\\n * **Invalid**\n */\nexport type EffectiveRouteState = string;\n\n/** Known values of {@link EffectiveSecurityRuleProtocol} that the service accepts. */\nexport enum KnownEffectiveSecurityRuleProtocol {\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** Udp */\n  Udp = \"Udp\",\n  /** All */\n  All = \"All\",\n}\n\n/**\n * Defines values for EffectiveSecurityRuleProtocol. \\\n * {@link KnownEffectiveSecurityRuleProtocol} can be used interchangeably with EffectiveSecurityRuleProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Tcp** \\\n * **Udp** \\\n * **All**\n */\nexport type EffectiveSecurityRuleProtocol = string;\n\n/** Known values of {@link ConfigurationType} that the service accepts. */\nexport enum KnownConfigurationType {\n  /** SecurityAdmin */\n  SecurityAdmin = \"SecurityAdmin\",\n  /** Connectivity */\n  Connectivity = \"Connectivity\",\n  /** SecurityUser */\n  SecurityUser = \"SecurityUser\",\n  /** Routing */\n  Routing = \"Routing\",\n}\n\n/**\n * Defines values for ConfigurationType. \\\n * {@link KnownConfigurationType} can be used interchangeably with ConfigurationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SecurityAdmin** \\\n * **Connectivity** \\\n * **SecurityUser** \\\n * **Routing**\n */\nexport type ConfigurationType = string;\n\n/** Known values of {@link DeploymentStatus} that the service accepts. */\nexport enum KnownDeploymentStatus {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** Deploying */\n  Deploying = \"Deploying\",\n  /** Deployed */\n  Deployed = \"Deployed\",\n  /** Failed */\n  Failed = \"Failed\",\n}\n\n/**\n * Defines values for DeploymentStatus. \\\n * {@link KnownDeploymentStatus} can be used interchangeably with DeploymentStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **Deploying** \\\n * **Deployed** \\\n * **Failed**\n */\nexport type DeploymentStatus = string;\n\n/** Known values of {@link ConnectivityTopology} that the service accepts. */\nexport enum KnownConnectivityTopology {\n  /** HubAndSpoke */\n  HubAndSpoke = \"HubAndSpoke\",\n  /** Mesh */\n  Mesh = \"Mesh\",\n}\n\n/**\n * Defines values for ConnectivityTopology. \\\n * {@link KnownConnectivityTopology} can be used interchangeably with ConnectivityTopology,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HubAndSpoke** \\\n * **Mesh**\n */\nexport type ConnectivityTopology = string;\n\n/** Known values of {@link IsGlobal} that the service accepts. */\nexport enum KnownIsGlobal {\n  /** False */\n  False = \"False\",\n  /** True */\n  True = \"True\",\n}\n\n/**\n * Defines values for IsGlobal. \\\n * {@link KnownIsGlobal} can be used interchangeably with IsGlobal,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **False** \\\n * **True**\n */\nexport type IsGlobal = string;\n\n/** Known values of {@link UseHubGateway} that the service accepts. */\nexport enum KnownUseHubGateway {\n  /** False */\n  False = \"False\",\n  /** True */\n  True = \"True\",\n}\n\n/**\n * Defines values for UseHubGateway. \\\n * {@link KnownUseHubGateway} can be used interchangeably with UseHubGateway,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **False** \\\n * **True**\n */\nexport type UseHubGateway = string;\n\n/** Known values of {@link GroupConnectivity} that the service accepts. */\nexport enum KnownGroupConnectivity {\n  /** None */\n  None = \"None\",\n  /** DirectlyConnected */\n  DirectlyConnected = \"DirectlyConnected\",\n}\n\n/**\n * Defines values for GroupConnectivity. \\\n * {@link KnownGroupConnectivity} can be used interchangeably with GroupConnectivity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **DirectlyConnected**\n */\nexport type GroupConnectivity = string;\n\n/** Known values of {@link DeleteExistingPeering} that the service accepts. */\nexport enum KnownDeleteExistingPeering {\n  /** False */\n  False = \"False\",\n  /** True */\n  True = \"True\",\n}\n\n/**\n * Defines values for DeleteExistingPeering. \\\n * {@link KnownDeleteExistingPeering} can be used interchangeably with DeleteExistingPeering,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **False** \\\n * **True**\n */\nexport type DeleteExistingPeering = string;\n\n/** Known values of {@link GroupMemberType} that the service accepts. */\nexport enum KnownGroupMemberType {\n  /** VirtualNetwork */\n  VirtualNetwork = \"VirtualNetwork\",\n  /** Subnet */\n  Subnet = \"Subnet\",\n}\n\n/**\n * Defines values for GroupMemberType. \\\n * {@link KnownGroupMemberType} can be used interchangeably with GroupMemberType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **VirtualNetwork** \\\n * **Subnet**\n */\nexport type GroupMemberType = string;\n\n/** Known values of {@link EffectiveAdminRuleKind} that the service accepts. */\nexport enum KnownEffectiveAdminRuleKind {\n  /** Custom */\n  Custom = \"Custom\",\n  /** Default */\n  Default = \"Default\",\n}\n\n/**\n * Defines values for EffectiveAdminRuleKind. \\\n * {@link KnownEffectiveAdminRuleKind} can be used interchangeably with EffectiveAdminRuleKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Custom** \\\n * **Default**\n */\nexport type EffectiveAdminRuleKind = string;\n\n/** Known values of {@link ScopeConnectionState} that the service accepts. */\nexport enum KnownScopeConnectionState {\n  /** Connected */\n  Connected = \"Connected\",\n  /** Pending */\n  Pending = \"Pending\",\n  /** Conflict */\n  Conflict = \"Conflict\",\n  /** Revoked */\n  Revoked = \"Revoked\",\n  /** Rejected */\n  Rejected = \"Rejected\",\n}\n\n/**\n * Defines values for ScopeConnectionState. \\\n * {@link KnownScopeConnectionState} can be used interchangeably with ScopeConnectionState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Connected** \\\n * **Pending** \\\n * **Conflict** \\\n * **Revoked** \\\n * **Rejected**\n */\nexport type ScopeConnectionState = string;\n\n/** Known values of {@link DisableBgpRoutePropagation} that the service accepts. */\nexport enum KnownDisableBgpRoutePropagation {\n  /** False */\n  False = \"False\",\n  /** True */\n  True = \"True\",\n}\n\n/**\n * Defines values for DisableBgpRoutePropagation. \\\n * {@link KnownDisableBgpRoutePropagation} can be used interchangeably with DisableBgpRoutePropagation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **False** \\\n * **True**\n */\nexport type DisableBgpRoutePropagation = string;\n\n/** Known values of {@link RoutingRuleDestinationType} that the service accepts. */\nexport enum KnownRoutingRuleDestinationType {\n  /** AddressPrefix */\n  AddressPrefix = \"AddressPrefix\",\n  /** ServiceTag */\n  ServiceTag = \"ServiceTag\",\n}\n\n/**\n * Defines values for RoutingRuleDestinationType. \\\n * {@link KnownRoutingRuleDestinationType} can be used interchangeably with RoutingRuleDestinationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AddressPrefix** \\\n * **ServiceTag**\n */\nexport type RoutingRuleDestinationType = string;\n\n/** Known values of {@link RoutingRuleNextHopType} that the service accepts. */\nexport enum KnownRoutingRuleNextHopType {\n  /** Internet */\n  Internet = \"Internet\",\n  /** NoNextHop */\n  NoNextHop = \"NoNextHop\",\n  /** VirtualAppliance */\n  VirtualAppliance = \"VirtualAppliance\",\n  /** VirtualNetworkGateway */\n  VirtualNetworkGateway = \"VirtualNetworkGateway\",\n  /** VnetLocal */\n  VnetLocal = \"VnetLocal\",\n}\n\n/**\n * Defines values for RoutingRuleNextHopType. \\\n * {@link KnownRoutingRuleNextHopType} can be used interchangeably with RoutingRuleNextHopType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Internet** \\\n * **NoNextHop** \\\n * **VirtualAppliance** \\\n * **VirtualNetworkGateway** \\\n * **VnetLocal**\n */\nexport type RoutingRuleNextHopType = string;\n\n/** Known values of {@link NetworkIntentPolicyBasedService} that the service accepts. */\nexport enum KnownNetworkIntentPolicyBasedService {\n  /** None */\n  None = \"None\",\n  /** All */\n  All = \"All\",\n  /** AllowRulesOnly */\n  AllowRulesOnly = \"AllowRulesOnly\",\n}\n\n/**\n * Defines values for NetworkIntentPolicyBasedService. \\\n * {@link KnownNetworkIntentPolicyBasedService} can be used interchangeably with NetworkIntentPolicyBasedService,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **All** \\\n * **AllowRulesOnly**\n */\nexport type NetworkIntentPolicyBasedService = string;\n\n/** Known values of {@link AddressSpaceAggregationOption} that the service accepts. */\nexport enum KnownAddressSpaceAggregationOption {\n  /** None */\n  None = \"None\",\n  /** Manual */\n  Manual = \"Manual\",\n}\n\n/**\n * Defines values for AddressSpaceAggregationOption. \\\n * {@link KnownAddressSpaceAggregationOption} can be used interchangeably with AddressSpaceAggregationOption,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Manual**\n */\nexport type AddressSpaceAggregationOption = string;\n\n/** Known values of {@link AdminRuleKind} that the service accepts. */\nexport enum KnownAdminRuleKind {\n  /** Custom */\n  Custom = \"Custom\",\n  /** Default */\n  Default = \"Default\",\n}\n\n/**\n * Defines values for AdminRuleKind. \\\n * {@link KnownAdminRuleKind} can be used interchangeably with AdminRuleKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Custom** \\\n * **Default**\n */\nexport type AdminRuleKind = string;\n\n/** Known values of {@link SecurityConfigurationRuleProtocol} that the service accepts. */\nexport enum KnownSecurityConfigurationRuleProtocol {\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** Udp */\n  Udp = \"Udp\",\n  /** Icmp */\n  Icmp = \"Icmp\",\n  /** Esp */\n  Esp = \"Esp\",\n  /** Any */\n  Any = \"Any\",\n  /** Ah */\n  Ah = \"Ah\",\n}\n\n/**\n * Defines values for SecurityConfigurationRuleProtocol. \\\n * {@link KnownSecurityConfigurationRuleProtocol} can be used interchangeably with SecurityConfigurationRuleProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Tcp** \\\n * **Udp** \\\n * **Icmp** \\\n * **Esp** \\\n * **Any** \\\n * **Ah**\n */\nexport type SecurityConfigurationRuleProtocol = string;\n\n/** Known values of {@link AddressPrefixType} that the service accepts. */\nexport enum KnownAddressPrefixType {\n  /** IPPrefix */\n  IPPrefix = \"IPPrefix\",\n  /** ServiceTag */\n  ServiceTag = \"ServiceTag\",\n  /** NetworkGroup */\n  NetworkGroup = \"NetworkGroup\",\n}\n\n/**\n * Defines values for AddressPrefixType. \\\n * {@link KnownAddressPrefixType} can be used interchangeably with AddressPrefixType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IPPrefix** \\\n * **ServiceTag** \\\n * **NetworkGroup**\n */\nexport type AddressPrefixType = string;\n\n/** Known values of {@link SecurityConfigurationRuleDirection} that the service accepts. */\nexport enum KnownSecurityConfigurationRuleDirection {\n  /** Inbound */\n  Inbound = \"Inbound\",\n  /** Outbound */\n  Outbound = \"Outbound\",\n}\n\n/**\n * Defines values for SecurityConfigurationRuleDirection. \\\n * {@link KnownSecurityConfigurationRuleDirection} can be used interchangeably with SecurityConfigurationRuleDirection,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inbound** \\\n * **Outbound**\n */\nexport type SecurityConfigurationRuleDirection = string;\n\n/** Known values of {@link NetworkProtocol} that the service accepts. */\nexport enum KnownNetworkProtocol {\n  /** Any */\n  Any = \"Any\",\n  /** TCP */\n  TCP = \"TCP\",\n  /** UDP */\n  UDP = \"UDP\",\n  /** Icmp */\n  Icmp = \"ICMP\",\n}\n\n/**\n * Defines values for NetworkProtocol. \\\n * {@link KnownNetworkProtocol} can be used interchangeably with NetworkProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Any** \\\n * **TCP** \\\n * **UDP** \\\n * **ICMP**\n */\nexport type NetworkProtocol = string;\n\n/** Known values of {@link NicTypeInResponse} that the service accepts. */\nexport enum KnownNicTypeInResponse {\n  /** PublicNic */\n  PublicNic = \"PublicNic\",\n  /** PrivateNic */\n  PrivateNic = \"PrivateNic\",\n  /** AdditionalNic */\n  AdditionalNic = \"AdditionalNic\",\n}\n\n/**\n * Defines values for NicTypeInResponse. \\\n * {@link KnownNicTypeInResponse} can be used interchangeably with NicTypeInResponse,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PublicNic** \\\n * **PrivateNic** \\\n * **AdditionalNic**\n */\nexport type NicTypeInResponse = string;\n\n/** Known values of {@link NicTypeInRequest} that the service accepts. */\nexport enum KnownNicTypeInRequest {\n  /** PublicNic */\n  PublicNic = \"PublicNic\",\n  /** PrivateNic */\n  PrivateNic = \"PrivateNic\",\n}\n\n/**\n * Defines values for NicTypeInRequest. \\\n * {@link KnownNicTypeInRequest} can be used interchangeably with NicTypeInRequest,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PublicNic** \\\n * **PrivateNic**\n */\nexport type NicTypeInRequest = string;\n\n/** Known values of {@link InboundSecurityRuleType} that the service accepts. */\nexport enum KnownInboundSecurityRuleType {\n  /** AutoExpire */\n  AutoExpire = \"AutoExpire\",\n  /** Permanent */\n  Permanent = \"Permanent\",\n}\n\n/**\n * Defines values for InboundSecurityRuleType. \\\n * {@link KnownInboundSecurityRuleType} can be used interchangeably with InboundSecurityRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AutoExpire** \\\n * **Permanent**\n */\nexport type InboundSecurityRuleType = string;\n\n/** Known values of {@link InboundSecurityRulesProtocol} that the service accepts. */\nexport enum KnownInboundSecurityRulesProtocol {\n  /** TCP */\n  TCP = \"TCP\",\n  /** UDP */\n  UDP = \"UDP\",\n}\n\n/**\n * Defines values for InboundSecurityRulesProtocol. \\\n * {@link KnownInboundSecurityRulesProtocol} can be used interchangeably with InboundSecurityRulesProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TCP** \\\n * **UDP**\n */\nexport type InboundSecurityRulesProtocol = string;\n\n/** Known values of {@link AssociationType} that the service accepts. */\nexport enum KnownAssociationType {\n  /** Associated */\n  Associated = \"Associated\",\n  /** Contains */\n  Contains = \"Contains\",\n}\n\n/**\n * Defines values for AssociationType. \\\n * {@link KnownAssociationType} can be used interchangeably with AssociationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Associated** \\\n * **Contains**\n */\nexport type AssociationType = string;\n\n/** Known values of {@link Direction} that the service accepts. */\nexport enum KnownDirection {\n  /** Inbound */\n  Inbound = \"Inbound\",\n  /** Outbound */\n  Outbound = \"Outbound\",\n}\n\n/**\n * Defines values for Direction. \\\n * {@link KnownDirection} can be used interchangeably with Direction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inbound** \\\n * **Outbound**\n */\nexport type Direction = string;\n\n/** Known values of {@link IpFlowProtocol} that the service accepts. */\nexport enum KnownIpFlowProtocol {\n  /** TCP */\n  TCP = \"TCP\",\n  /** UDP */\n  UDP = \"UDP\",\n}\n\n/**\n * Defines values for IpFlowProtocol. \\\n * {@link KnownIpFlowProtocol} can be used interchangeably with IpFlowProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TCP** \\\n * **UDP**\n */\nexport type IpFlowProtocol = string;\n\n/** Known values of {@link Access} that the service accepts. */\nexport enum KnownAccess {\n  /** Allow */\n  Allow = \"Allow\",\n  /** Deny */\n  Deny = \"Deny\",\n}\n\n/**\n * Defines values for Access. \\\n * {@link KnownAccess} can be used interchangeably with Access,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow** \\\n * **Deny**\n */\nexport type Access = string;\n\n/** Known values of {@link NextHopType} that the service accepts. */\nexport enum KnownNextHopType {\n  /** Internet */\n  Internet = \"Internet\",\n  /** VirtualAppliance */\n  VirtualAppliance = \"VirtualAppliance\",\n  /** VirtualNetworkGateway */\n  VirtualNetworkGateway = \"VirtualNetworkGateway\",\n  /** VnetLocal */\n  VnetLocal = \"VnetLocal\",\n  /** HyperNetGateway */\n  HyperNetGateway = \"HyperNetGateway\",\n  /** None */\n  None = \"None\",\n}\n\n/**\n * Defines values for NextHopType. \\\n * {@link KnownNextHopType} can be used interchangeably with NextHopType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Internet** \\\n * **VirtualAppliance** \\\n * **VirtualNetworkGateway** \\\n * **VnetLocal** \\\n * **HyperNetGateway** \\\n * **None**\n */\nexport type NextHopType = string;\n\n/** Known values of {@link PcProtocol} that the service accepts. */\nexport enum KnownPcProtocol {\n  /** TCP */\n  TCP = \"TCP\",\n  /** UDP */\n  UDP = \"UDP\",\n  /** Any */\n  Any = \"Any\",\n}\n\n/**\n * Defines values for PcProtocol. \\\n * {@link KnownPcProtocol} can be used interchangeably with PcProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TCP** \\\n * **UDP** \\\n * **Any**\n */\nexport type PcProtocol = string;\n\n/** Known values of {@link PcStatus} that the service accepts. */\nexport enum KnownPcStatus {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** Running */\n  Running = \"Running\",\n  /** Stopped */\n  Stopped = \"Stopped\",\n  /** Error */\n  Error = \"Error\",\n  /** Unknown */\n  Unknown = \"Unknown\",\n}\n\n/**\n * Defines values for PcStatus. \\\n * {@link KnownPcStatus} can be used interchangeably with PcStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **Running** \\\n * **Stopped** \\\n * **Error** \\\n * **Unknown**\n */\nexport type PcStatus = string;\n\n/** Known values of {@link PcError} that the service accepts. */\nexport enum KnownPcError {\n  /** InternalError */\n  InternalError = \"InternalError\",\n  /** AgentStopped */\n  AgentStopped = \"AgentStopped\",\n  /** CaptureFailed */\n  CaptureFailed = \"CaptureFailed\",\n  /** LocalFileFailed */\n  LocalFileFailed = \"LocalFileFailed\",\n  /** StorageFailed */\n  StorageFailed = \"StorageFailed\",\n}\n\n/**\n * Defines values for PcError. \\\n * {@link KnownPcError} can be used interchangeably with PcError,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InternalError** \\\n * **AgentStopped** \\\n * **CaptureFailed** \\\n * **LocalFileFailed** \\\n * **StorageFailed**\n */\nexport type PcError = string;\n\n/** Known values of {@link Protocol} that the service accepts. */\nexport enum KnownProtocol {\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** Http */\n  Http = \"Http\",\n  /** Https */\n  Https = \"Https\",\n  /** Icmp */\n  Icmp = \"Icmp\",\n}\n\n/**\n * Defines values for Protocol. \\\n * {@link KnownProtocol} can be used interchangeably with Protocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Tcp** \\\n * **Http** \\\n * **Https** \\\n * **Icmp**\n */\nexport type Protocol = string;\n\n/** Known values of {@link HttpMethod} that the service accepts. */\nexport enum KnownHttpMethod {\n  /** Get */\n  Get = \"Get\",\n}\n\n/**\n * Defines values for HttpMethod. \\\n * {@link KnownHttpMethod} can be used interchangeably with HttpMethod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Get**\n */\nexport type HttpMethod = string;\n\n/** Known values of {@link Origin} that the service accepts. */\nexport enum KnownOrigin {\n  /** Local */\n  Local = \"Local\",\n  /** Inbound */\n  Inbound = \"Inbound\",\n  /** Outbound */\n  Outbound = \"Outbound\",\n}\n\n/**\n * Defines values for Origin. \\\n * {@link KnownOrigin} can be used interchangeably with Origin,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Local** \\\n * **Inbound** \\\n * **Outbound**\n */\nexport type Origin = string;\n\n/** Known values of {@link Severity} that the service accepts. */\nexport enum KnownSeverity {\n  /** Error */\n  Error = \"Error\",\n  /** Warning */\n  Warning = \"Warning\",\n}\n\n/**\n * Defines values for Severity. \\\n * {@link KnownSeverity} can be used interchangeably with Severity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Error** \\\n * **Warning**\n */\nexport type Severity = string;\n\n/** Known values of {@link IssueType} that the service accepts. */\nexport enum KnownIssueType {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** AgentStopped */\n  AgentStopped = \"AgentStopped\",\n  /** GuestFirewall */\n  GuestFirewall = \"GuestFirewall\",\n  /** DnsResolution */\n  DnsResolution = \"DnsResolution\",\n  /** SocketBind */\n  SocketBind = \"SocketBind\",\n  /** NetworkSecurityRule */\n  NetworkSecurityRule = \"NetworkSecurityRule\",\n  /** UserDefinedRoute */\n  UserDefinedRoute = \"UserDefinedRoute\",\n  /** PortThrottled */\n  PortThrottled = \"PortThrottled\",\n  /** Platform */\n  Platform = \"Platform\",\n}\n\n/**\n * Defines values for IssueType. \\\n * {@link KnownIssueType} can be used interchangeably with IssueType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **AgentStopped** \\\n * **GuestFirewall** \\\n * **DnsResolution** \\\n * **SocketBind** \\\n * **NetworkSecurityRule** \\\n * **UserDefinedRoute** \\\n * **PortThrottled** \\\n * **Platform**\n */\nexport type IssueType = string;\n\n/** Known values of {@link ConnectionStatus} that the service accepts. */\nexport enum KnownConnectionStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n  /** Degraded */\n  Degraded = \"Degraded\",\n}\n\n/**\n * Defines values for ConnectionStatus. \\\n * {@link KnownConnectionStatus} can be used interchangeably with ConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Connected** \\\n * **Disconnected** \\\n * **Degraded**\n */\nexport type ConnectionStatus = string;\n\n/** Known values of {@link VerbosityLevel} that the service accepts. */\nexport enum KnownVerbosityLevel {\n  /** Normal */\n  Normal = \"Normal\",\n  /** Minimum */\n  Minimum = \"Minimum\",\n  /** Full */\n  Full = \"Full\",\n}\n\n/**\n * Defines values for VerbosityLevel. \\\n * {@link KnownVerbosityLevel} can be used interchangeably with VerbosityLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Normal** \\\n * **Minimum** \\\n * **Full**\n */\nexport type VerbosityLevel = string;\n\n/** Known values of {@link EndpointType} that the service accepts. */\nexport enum KnownEndpointType {\n  /** AzureVM */\n  AzureVM = \"AzureVM\",\n  /** AzureVNet */\n  AzureVNet = \"AzureVNet\",\n  /** AzureSubnet */\n  AzureSubnet = \"AzureSubnet\",\n  /** ExternalAddress */\n  ExternalAddress = \"ExternalAddress\",\n  /** MMAWorkspaceMachine */\n  MMAWorkspaceMachine = \"MMAWorkspaceMachine\",\n  /** MMAWorkspaceNetwork */\n  MMAWorkspaceNetwork = \"MMAWorkspaceNetwork\",\n  /** AzureArcVM */\n  AzureArcVM = \"AzureArcVM\",\n  /** AzureVmss */\n  AzureVmss = \"AzureVMSS\",\n  /** AzureArcNetwork */\n  AzureArcNetwork = \"AzureArcNetwork\",\n}\n\n/**\n * Defines values for EndpointType. \\\n * {@link KnownEndpointType} can be used interchangeably with EndpointType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureVM** \\\n * **AzureVNet** \\\n * **AzureSubnet** \\\n * **ExternalAddress** \\\n * **MMAWorkspaceMachine** \\\n * **MMAWorkspaceNetwork** \\\n * **AzureArcVM** \\\n * **AzureVMSS** \\\n * **AzureArcNetwork**\n */\nexport type EndpointType = string;\n\n/** Known values of {@link ConnectionMonitorEndpointFilterType} that the service accepts. */\nexport enum KnownConnectionMonitorEndpointFilterType {\n  /** Include */\n  Include = \"Include\",\n}\n\n/**\n * Defines values for ConnectionMonitorEndpointFilterType. \\\n * {@link KnownConnectionMonitorEndpointFilterType} can be used interchangeably with ConnectionMonitorEndpointFilterType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Include**\n */\nexport type ConnectionMonitorEndpointFilterType = string;\n\n/** Known values of {@link ConnectionMonitorEndpointFilterItemType} that the service accepts. */\nexport enum KnownConnectionMonitorEndpointFilterItemType {\n  /** AgentAddress */\n  AgentAddress = \"AgentAddress\",\n}\n\n/**\n * Defines values for ConnectionMonitorEndpointFilterItemType. \\\n * {@link KnownConnectionMonitorEndpointFilterItemType} can be used interchangeably with ConnectionMonitorEndpointFilterItemType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AgentAddress**\n */\nexport type ConnectionMonitorEndpointFilterItemType = string;\n\n/** Known values of {@link CoverageLevel} that the service accepts. */\nexport enum KnownCoverageLevel {\n  /** Default */\n  Default = \"Default\",\n  /** Low */\n  Low = \"Low\",\n  /** BelowAverage */\n  BelowAverage = \"BelowAverage\",\n  /** Average */\n  Average = \"Average\",\n  /** AboveAverage */\n  AboveAverage = \"AboveAverage\",\n  /** Full */\n  Full = \"Full\",\n}\n\n/**\n * Defines values for CoverageLevel. \\\n * {@link KnownCoverageLevel} can be used interchangeably with CoverageLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **Low** \\\n * **BelowAverage** \\\n * **Average** \\\n * **AboveAverage** \\\n * **Full**\n */\nexport type CoverageLevel = string;\n\n/** Known values of {@link ConnectionMonitorTestConfigurationProtocol} that the service accepts. */\nexport enum KnownConnectionMonitorTestConfigurationProtocol {\n  /** Tcp */\n  Tcp = \"Tcp\",\n  /** Http */\n  Http = \"Http\",\n  /** Icmp */\n  Icmp = \"Icmp\",\n}\n\n/**\n * Defines values for ConnectionMonitorTestConfigurationProtocol. \\\n * {@link KnownConnectionMonitorTestConfigurationProtocol} can be used interchangeably with ConnectionMonitorTestConfigurationProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Tcp** \\\n * **Http** \\\n * **Icmp**\n */\nexport type ConnectionMonitorTestConfigurationProtocol = string;\n\n/** Known values of {@link PreferredIPVersion} that the service accepts. */\nexport enum KnownPreferredIPVersion {\n  /** IPv4 */\n  IPv4 = \"IPv4\",\n  /** IPv6 */\n  IPv6 = \"IPv6\",\n}\n\n/**\n * Defines values for PreferredIPVersion. \\\n * {@link KnownPreferredIPVersion} can be used interchangeably with PreferredIPVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IPv4** \\\n * **IPv6**\n */\nexport type PreferredIPVersion = string;\n\n/** Known values of {@link HttpConfigurationMethod} that the service accepts. */\nexport enum KnownHttpConfigurationMethod {\n  /** Get */\n  Get = \"Get\",\n  /** Post */\n  Post = \"Post\",\n}\n\n/**\n * Defines values for HttpConfigurationMethod. \\\n * {@link KnownHttpConfigurationMethod} can be used interchangeably with HttpConfigurationMethod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Get** \\\n * **Post**\n */\nexport type HttpConfigurationMethod = string;\n\n/** Known values of {@link DestinationPortBehavior} that the service accepts. */\nexport enum KnownDestinationPortBehavior {\n  /** None */\n  None = \"None\",\n  /** ListenIfAvailable */\n  ListenIfAvailable = \"ListenIfAvailable\",\n}\n\n/**\n * Defines values for DestinationPortBehavior. \\\n * {@link KnownDestinationPortBehavior} can be used interchangeably with DestinationPortBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **ListenIfAvailable**\n */\nexport type DestinationPortBehavior = string;\n\n/** Known values of {@link OutputType} that the service accepts. */\nexport enum KnownOutputType {\n  /** Workspace */\n  Workspace = \"Workspace\",\n}\n\n/**\n * Defines values for OutputType. \\\n * {@link KnownOutputType} can be used interchangeably with OutputType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Workspace**\n */\nexport type OutputType = string;\n\n/** Known values of {@link ConnectionMonitorType} that the service accepts. */\nexport enum KnownConnectionMonitorType {\n  /** MultiEndpoint */\n  MultiEndpoint = \"MultiEndpoint\",\n  /** SingleSourceDestination */\n  SingleSourceDestination = \"SingleSourceDestination\",\n}\n\n/**\n * Defines values for ConnectionMonitorType. \\\n * {@link KnownConnectionMonitorType} can be used interchangeably with ConnectionMonitorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MultiEndpoint** \\\n * **SingleSourceDestination**\n */\nexport type ConnectionMonitorType = string;\n\n/** Known values of {@link ConnectionMonitorSourceStatus} that the service accepts. */\nexport enum KnownConnectionMonitorSourceStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Active */\n  Active = \"Active\",\n  /** Inactive */\n  Inactive = \"Inactive\",\n}\n\n/**\n * Defines values for ConnectionMonitorSourceStatus. \\\n * {@link KnownConnectionMonitorSourceStatus} can be used interchangeably with ConnectionMonitorSourceStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Active** \\\n * **Inactive**\n */\nexport type ConnectionMonitorSourceStatus = string;\n\n/** Known values of {@link ConnectionState} that the service accepts. */\nexport enum KnownConnectionState {\n  /** Reachable */\n  Reachable = \"Reachable\",\n  /** Unreachable */\n  Unreachable = \"Unreachable\",\n  /** Unknown */\n  Unknown = \"Unknown\",\n}\n\n/**\n * Defines values for ConnectionState. \\\n * {@link KnownConnectionState} can be used interchangeably with ConnectionState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Reachable** \\\n * **Unreachable** \\\n * **Unknown**\n */\nexport type ConnectionState = string;\n\n/** Known values of {@link EvaluationState} that the service accepts. */\nexport enum KnownEvaluationState {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Completed */\n  Completed = \"Completed\",\n}\n\n/**\n * Defines values for EvaluationState. \\\n * {@link KnownEvaluationState} can be used interchangeably with EvaluationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **InProgress** \\\n * **Completed**\n */\nexport type EvaluationState = string;\n\n/** Known values of {@link IsWorkloadProtected} that the service accepts. */\nexport enum KnownIsWorkloadProtected {\n  /** False */\n  False = \"False\",\n  /** True */\n  True = \"True\",\n}\n\n/**\n * Defines values for IsWorkloadProtected. \\\n * {@link KnownIsWorkloadProtected} can be used interchangeably with IsWorkloadProtected,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **False** \\\n * **True**\n */\nexport type IsWorkloadProtected = string;\n\n/** Known values of {@link PublicIPPrefixSkuName} that the service accepts. */\nexport enum KnownPublicIPPrefixSkuName {\n  /** Standard */\n  Standard = \"Standard\",\n}\n\n/**\n * Defines values for PublicIPPrefixSkuName. \\\n * {@link KnownPublicIPPrefixSkuName} can be used interchangeably with PublicIPPrefixSkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard**\n */\nexport type PublicIPPrefixSkuName = string;\n\n/** Known values of {@link PublicIPPrefixSkuTier} that the service accepts. */\nexport enum KnownPublicIPPrefixSkuTier {\n  /** Regional */\n  Regional = \"Regional\",\n  /** Global */\n  Global = \"Global\",\n}\n\n/**\n * Defines values for PublicIPPrefixSkuTier. \\\n * {@link KnownPublicIPPrefixSkuTier} can be used interchangeably with PublicIPPrefixSkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Regional** \\\n * **Global**\n */\nexport type PublicIPPrefixSkuTier = string;\n\n/** Known values of {@link RouteFilterRuleType} that the service accepts. */\nexport enum KnownRouteFilterRuleType {\n  /** Community */\n  Community = \"Community\",\n}\n\n/**\n * Defines values for RouteFilterRuleType. \\\n * {@link KnownRouteFilterRuleType} can be used interchangeably with RouteFilterRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Community**\n */\nexport type RouteFilterRuleType = string;\n\n/** Known values of {@link SecurityProviderName} that the service accepts. */\nexport enum KnownSecurityProviderName {\n  /** ZScaler */\n  ZScaler = \"ZScaler\",\n  /** IBoss */\n  IBoss = \"IBoss\",\n  /** Checkpoint */\n  Checkpoint = \"Checkpoint\",\n}\n\n/**\n * Defines values for SecurityProviderName. \\\n * {@link KnownSecurityProviderName} can be used interchangeably with SecurityProviderName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ZScaler** \\\n * **IBoss** \\\n * **Checkpoint**\n */\nexport type SecurityProviderName = string;\n\n/** Known values of {@link SecurityPartnerProviderConnectionStatus} that the service accepts. */\nexport enum KnownSecurityPartnerProviderConnectionStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** PartiallyConnected */\n  PartiallyConnected = \"PartiallyConnected\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** NotConnected */\n  NotConnected = \"NotConnected\",\n}\n\n/**\n * Defines values for SecurityPartnerProviderConnectionStatus. \\\n * {@link KnownSecurityPartnerProviderConnectionStatus} can be used interchangeably with SecurityPartnerProviderConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **PartiallyConnected** \\\n * **Connected** \\\n * **NotConnected**\n */\nexport type SecurityPartnerProviderConnectionStatus = string;\n\n/** Known values of {@link UsageUnit} that the service accepts. */\nexport enum KnownUsageUnit {\n  /** Count */\n  Count = \"Count\",\n}\n\n/**\n * Defines values for UsageUnit. \\\n * {@link KnownUsageUnit} can be used interchangeably with UsageUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count**\n */\nexport type UsageUnit = string;\n\n/** Known values of {@link VirtualNetworkEncryptionEnforcement} that the service accepts. */\nexport enum KnownVirtualNetworkEncryptionEnforcement {\n  /** DropUnencrypted */\n  DropUnencrypted = \"DropUnencrypted\",\n  /** AllowUnencrypted */\n  AllowUnencrypted = \"AllowUnencrypted\",\n}\n\n/**\n * Defines values for VirtualNetworkEncryptionEnforcement. \\\n * {@link KnownVirtualNetworkEncryptionEnforcement} can be used interchangeably with VirtualNetworkEncryptionEnforcement,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DropUnencrypted** \\\n * **AllowUnencrypted**\n */\nexport type VirtualNetworkEncryptionEnforcement = string;\n\n/** Known values of {@link VirtualNetworkPeeringState} that the service accepts. */\nexport enum KnownVirtualNetworkPeeringState {\n  /** Initiated */\n  Initiated = \"Initiated\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n}\n\n/**\n * Defines values for VirtualNetworkPeeringState. \\\n * {@link KnownVirtualNetworkPeeringState} can be used interchangeably with VirtualNetworkPeeringState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Initiated** \\\n * **Connected** \\\n * **Disconnected**\n */\nexport type VirtualNetworkPeeringState = string;\n\n/** Known values of {@link VirtualNetworkPeeringLevel} that the service accepts. */\nexport enum KnownVirtualNetworkPeeringLevel {\n  /** FullyInSync */\n  FullyInSync = \"FullyInSync\",\n  /** RemoteNotInSync */\n  RemoteNotInSync = \"RemoteNotInSync\",\n  /** LocalNotInSync */\n  LocalNotInSync = \"LocalNotInSync\",\n  /** LocalAndRemoteNotInSync */\n  LocalAndRemoteNotInSync = \"LocalAndRemoteNotInSync\",\n}\n\n/**\n * Defines values for VirtualNetworkPeeringLevel. \\\n * {@link KnownVirtualNetworkPeeringLevel} can be used interchangeably with VirtualNetworkPeeringLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **FullyInSync** \\\n * **RemoteNotInSync** \\\n * **LocalNotInSync** \\\n * **LocalAndRemoteNotInSync**\n */\nexport type VirtualNetworkPeeringLevel = string;\n\n/** Known values of {@link PrivateEndpointVNetPolicies} that the service accepts. */\nexport enum KnownPrivateEndpointVNetPolicies {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Basic */\n  Basic = \"Basic\",\n}\n\n/**\n * Defines values for PrivateEndpointVNetPolicies. \\\n * {@link KnownPrivateEndpointVNetPolicies} can be used interchangeably with PrivateEndpointVNetPolicies,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Basic**\n */\nexport type PrivateEndpointVNetPolicies = string;\n\n/** Known values of {@link SyncRemoteAddressSpace} that the service accepts. */\nexport enum KnownSyncRemoteAddressSpace {\n  /** True */\n  True = \"true\",\n}\n\n/**\n * Defines values for SyncRemoteAddressSpace. \\\n * {@link KnownSyncRemoteAddressSpace} can be used interchangeably with SyncRemoteAddressSpace,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **true**\n */\nexport type SyncRemoteAddressSpace = string;\n\n/** Known values of {@link VirtualNetworkGatewayType} that the service accepts. */\nexport enum KnownVirtualNetworkGatewayType {\n  /** Vpn */\n  Vpn = \"Vpn\",\n  /** ExpressRoute */\n  ExpressRoute = \"ExpressRoute\",\n  /** LocalGateway */\n  LocalGateway = \"LocalGateway\",\n}\n\n/**\n * Defines values for VirtualNetworkGatewayType. \\\n * {@link KnownVirtualNetworkGatewayType} can be used interchangeably with VirtualNetworkGatewayType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Vpn** \\\n * **ExpressRoute** \\\n * **LocalGateway**\n */\nexport type VirtualNetworkGatewayType = string;\n\n/** Known values of {@link VpnType} that the service accepts. */\nexport enum KnownVpnType {\n  /** PolicyBased */\n  PolicyBased = \"PolicyBased\",\n  /** RouteBased */\n  RouteBased = \"RouteBased\",\n}\n\n/**\n * Defines values for VpnType. \\\n * {@link KnownVpnType} can be used interchangeably with VpnType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PolicyBased** \\\n * **RouteBased**\n */\nexport type VpnType = string;\n\n/** Known values of {@link VpnGatewayGeneration} that the service accepts. */\nexport enum KnownVpnGatewayGeneration {\n  /** None */\n  None = \"None\",\n  /** Generation1 */\n  Generation1 = \"Generation1\",\n  /** Generation2 */\n  Generation2 = \"Generation2\",\n}\n\n/**\n * Defines values for VpnGatewayGeneration. \\\n * {@link KnownVpnGatewayGeneration} can be used interchangeably with VpnGatewayGeneration,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Generation1** \\\n * **Generation2**\n */\nexport type VpnGatewayGeneration = string;\n\n/** Known values of {@link VirtualNetworkGatewaySkuName} that the service accepts. */\nexport enum KnownVirtualNetworkGatewaySkuName {\n  /** Basic */\n  Basic = \"Basic\",\n  /** HighPerformance */\n  HighPerformance = \"HighPerformance\",\n  /** Standard */\n  Standard = \"Standard\",\n  /** UltraPerformance */\n  UltraPerformance = \"UltraPerformance\",\n  /** VpnGw1 */\n  VpnGw1 = \"VpnGw1\",\n  /** VpnGw2 */\n  VpnGw2 = \"VpnGw2\",\n  /** VpnGw3 */\n  VpnGw3 = \"VpnGw3\",\n  /** VpnGw4 */\n  VpnGw4 = \"VpnGw4\",\n  /** VpnGw5 */\n  VpnGw5 = \"VpnGw5\",\n  /** VpnGw1AZ */\n  VpnGw1AZ = \"VpnGw1AZ\",\n  /** VpnGw2AZ */\n  VpnGw2AZ = \"VpnGw2AZ\",\n  /** VpnGw3AZ */\n  VpnGw3AZ = \"VpnGw3AZ\",\n  /** VpnGw4AZ */\n  VpnGw4AZ = \"VpnGw4AZ\",\n  /** VpnGw5AZ */\n  VpnGw5AZ = \"VpnGw5AZ\",\n  /** ErGw1AZ */\n  ErGw1AZ = \"ErGw1AZ\",\n  /** ErGw2AZ */\n  ErGw2AZ = \"ErGw2AZ\",\n  /** ErGw3AZ */\n  ErGw3AZ = \"ErGw3AZ\",\n  /** ErGwScale */\n  ErGwScale = \"ErGwScale\",\n}\n\n/**\n * Defines values for VirtualNetworkGatewaySkuName. \\\n * {@link KnownVirtualNetworkGatewaySkuName} can be used interchangeably with VirtualNetworkGatewaySkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **HighPerformance** \\\n * **Standard** \\\n * **UltraPerformance** \\\n * **VpnGw1** \\\n * **VpnGw2** \\\n * **VpnGw3** \\\n * **VpnGw4** \\\n * **VpnGw5** \\\n * **VpnGw1AZ** \\\n * **VpnGw2AZ** \\\n * **VpnGw3AZ** \\\n * **VpnGw4AZ** \\\n * **VpnGw5AZ** \\\n * **ErGw1AZ** \\\n * **ErGw2AZ** \\\n * **ErGw3AZ** \\\n * **ErGwScale**\n */\nexport type VirtualNetworkGatewaySkuName = string;\n\n/** Known values of {@link VirtualNetworkGatewaySkuTier} that the service accepts. */\nexport enum KnownVirtualNetworkGatewaySkuTier {\n  /** Basic */\n  Basic = \"Basic\",\n  /** HighPerformance */\n  HighPerformance = \"HighPerformance\",\n  /** Standard */\n  Standard = \"Standard\",\n  /** UltraPerformance */\n  UltraPerformance = \"UltraPerformance\",\n  /** VpnGw1 */\n  VpnGw1 = \"VpnGw1\",\n  /** VpnGw2 */\n  VpnGw2 = \"VpnGw2\",\n  /** VpnGw3 */\n  VpnGw3 = \"VpnGw3\",\n  /** VpnGw4 */\n  VpnGw4 = \"VpnGw4\",\n  /** VpnGw5 */\n  VpnGw5 = \"VpnGw5\",\n  /** VpnGw1AZ */\n  VpnGw1AZ = \"VpnGw1AZ\",\n  /** VpnGw2AZ */\n  VpnGw2AZ = \"VpnGw2AZ\",\n  /** VpnGw3AZ */\n  VpnGw3AZ = \"VpnGw3AZ\",\n  /** VpnGw4AZ */\n  VpnGw4AZ = \"VpnGw4AZ\",\n  /** VpnGw5AZ */\n  VpnGw5AZ = \"VpnGw5AZ\",\n  /** ErGw1AZ */\n  ErGw1AZ = \"ErGw1AZ\",\n  /** ErGw2AZ */\n  ErGw2AZ = \"ErGw2AZ\",\n  /** ErGw3AZ */\n  ErGw3AZ = \"ErGw3AZ\",\n  /** ErGwScale */\n  ErGwScale = \"ErGwScale\",\n}\n\n/**\n * Defines values for VirtualNetworkGatewaySkuTier. \\\n * {@link KnownVirtualNetworkGatewaySkuTier} can be used interchangeably with VirtualNetworkGatewaySkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **HighPerformance** \\\n * **Standard** \\\n * **UltraPerformance** \\\n * **VpnGw1** \\\n * **VpnGw2** \\\n * **VpnGw3** \\\n * **VpnGw4** \\\n * **VpnGw5** \\\n * **VpnGw1AZ** \\\n * **VpnGw2AZ** \\\n * **VpnGw3AZ** \\\n * **VpnGw4AZ** \\\n * **VpnGw5AZ** \\\n * **ErGw1AZ** \\\n * **ErGw2AZ** \\\n * **ErGw3AZ** \\\n * **ErGwScale**\n */\nexport type VirtualNetworkGatewaySkuTier = string;\n\n/** Known values of {@link VpnClientProtocol} that the service accepts. */\nexport enum KnownVpnClientProtocol {\n  /** IkeV2 */\n  IkeV2 = \"IkeV2\",\n  /** Sstp */\n  Sstp = \"SSTP\",\n  /** OpenVPN */\n  OpenVPN = \"OpenVPN\",\n}\n\n/**\n * Defines values for VpnClientProtocol. \\\n * {@link KnownVpnClientProtocol} can be used interchangeably with VpnClientProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IkeV2** \\\n * **SSTP** \\\n * **OpenVPN**\n */\nexport type VpnClientProtocol = string;\n\n/** Known values of {@link VpnAuthenticationType} that the service accepts. */\nexport enum KnownVpnAuthenticationType {\n  /** Certificate */\n  Certificate = \"Certificate\",\n  /** Radius */\n  Radius = \"Radius\",\n  /** AAD */\n  AAD = \"AAD\",\n}\n\n/**\n * Defines values for VpnAuthenticationType. \\\n * {@link KnownVpnAuthenticationType} can be used interchangeably with VpnAuthenticationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Certificate** \\\n * **Radius** \\\n * **AAD**\n */\nexport type VpnAuthenticationType = string;\n\n/** Known values of {@link IpsecEncryption} that the service accepts. */\nexport enum KnownIpsecEncryption {\n  /** None */\n  None = \"None\",\n  /** DES */\n  DES = \"DES\",\n  /** DES3 */\n  DES3 = \"DES3\",\n  /** AES128 */\n  AES128 = \"AES128\",\n  /** AES192 */\n  AES192 = \"AES192\",\n  /** AES256 */\n  AES256 = \"AES256\",\n  /** Gcmaes128 */\n  Gcmaes128 = \"GCMAES128\",\n  /** Gcmaes192 */\n  Gcmaes192 = \"GCMAES192\",\n  /** Gcmaes256 */\n  Gcmaes256 = \"GCMAES256\",\n}\n\n/**\n * Defines values for IpsecEncryption. \\\n * {@link KnownIpsecEncryption} can be used interchangeably with IpsecEncryption,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **DES** \\\n * **DES3** \\\n * **AES128** \\\n * **AES192** \\\n * **AES256** \\\n * **GCMAES128** \\\n * **GCMAES192** \\\n * **GCMAES256**\n */\nexport type IpsecEncryption = string;\n\n/** Known values of {@link IpsecIntegrity} that the service accepts. */\nexport enum KnownIpsecIntegrity {\n  /** MD5 */\n  MD5 = \"MD5\",\n  /** SHA1 */\n  SHA1 = \"SHA1\",\n  /** SHA256 */\n  SHA256 = \"SHA256\",\n  /** Gcmaes128 */\n  Gcmaes128 = \"GCMAES128\",\n  /** Gcmaes192 */\n  Gcmaes192 = \"GCMAES192\",\n  /** Gcmaes256 */\n  Gcmaes256 = \"GCMAES256\",\n}\n\n/**\n * Defines values for IpsecIntegrity. \\\n * {@link KnownIpsecIntegrity} can be used interchangeably with IpsecIntegrity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MD5** \\\n * **SHA1** \\\n * **SHA256** \\\n * **GCMAES128** \\\n * **GCMAES192** \\\n * **GCMAES256**\n */\nexport type IpsecIntegrity = string;\n\n/** Known values of {@link IkeEncryption} that the service accepts. */\nexport enum KnownIkeEncryption {\n  /** DES */\n  DES = \"DES\",\n  /** DES3 */\n  DES3 = \"DES3\",\n  /** AES128 */\n  AES128 = \"AES128\",\n  /** AES192 */\n  AES192 = \"AES192\",\n  /** AES256 */\n  AES256 = \"AES256\",\n  /** Gcmaes256 */\n  Gcmaes256 = \"GCMAES256\",\n  /** Gcmaes128 */\n  Gcmaes128 = \"GCMAES128\",\n}\n\n/**\n * Defines values for IkeEncryption. \\\n * {@link KnownIkeEncryption} can be used interchangeably with IkeEncryption,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DES** \\\n * **DES3** \\\n * **AES128** \\\n * **AES192** \\\n * **AES256** \\\n * **GCMAES256** \\\n * **GCMAES128**\n */\nexport type IkeEncryption = string;\n\n/** Known values of {@link IkeIntegrity} that the service accepts. */\nexport enum KnownIkeIntegrity {\n  /** MD5 */\n  MD5 = \"MD5\",\n  /** SHA1 */\n  SHA1 = \"SHA1\",\n  /** SHA256 */\n  SHA256 = \"SHA256\",\n  /** SHA384 */\n  SHA384 = \"SHA384\",\n  /** Gcmaes256 */\n  Gcmaes256 = \"GCMAES256\",\n  /** Gcmaes128 */\n  Gcmaes128 = \"GCMAES128\",\n}\n\n/**\n * Defines values for IkeIntegrity. \\\n * {@link KnownIkeIntegrity} can be used interchangeably with IkeIntegrity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MD5** \\\n * **SHA1** \\\n * **SHA256** \\\n * **SHA384** \\\n * **GCMAES256** \\\n * **GCMAES128**\n */\nexport type IkeIntegrity = string;\n\n/** Known values of {@link DhGroup} that the service accepts. */\nexport enum KnownDhGroup {\n  /** None */\n  None = \"None\",\n  /** DHGroup1 */\n  DHGroup1 = \"DHGroup1\",\n  /** DHGroup2 */\n  DHGroup2 = \"DHGroup2\",\n  /** DHGroup14 */\n  DHGroup14 = \"DHGroup14\",\n  /** DHGroup2048 */\n  DHGroup2048 = \"DHGroup2048\",\n  /** ECP256 */\n  ECP256 = \"ECP256\",\n  /** ECP384 */\n  ECP384 = \"ECP384\",\n  /** DHGroup24 */\n  DHGroup24 = \"DHGroup24\",\n}\n\n/**\n * Defines values for DhGroup. \\\n * {@link KnownDhGroup} can be used interchangeably with DhGroup,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **DHGroup1** \\\n * **DHGroup2** \\\n * **DHGroup14** \\\n * **DHGroup2048** \\\n * **ECP256** \\\n * **ECP384** \\\n * **DHGroup24**\n */\nexport type DhGroup = string;\n\n/** Known values of {@link PfsGroup} that the service accepts. */\nexport enum KnownPfsGroup {\n  /** None */\n  None = \"None\",\n  /** PFS1 */\n  PFS1 = \"PFS1\",\n  /** PFS2 */\n  PFS2 = \"PFS2\",\n  /** PFS2048 */\n  PFS2048 = \"PFS2048\",\n  /** ECP256 */\n  ECP256 = \"ECP256\",\n  /** ECP384 */\n  ECP384 = \"ECP384\",\n  /** PFS24 */\n  PFS24 = \"PFS24\",\n  /** PFS14 */\n  PFS14 = \"PFS14\",\n  /** Pfsmm */\n  Pfsmm = \"PFSMM\",\n}\n\n/**\n * Defines values for PfsGroup. \\\n * {@link KnownPfsGroup} can be used interchangeably with PfsGroup,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **PFS1** \\\n * **PFS2** \\\n * **PFS2048** \\\n * **ECP256** \\\n * **ECP384** \\\n * **PFS24** \\\n * **PFS14** \\\n * **PFSMM**\n */\nexport type PfsGroup = string;\n\n/** Known values of {@link VpnPolicyMemberAttributeType} that the service accepts. */\nexport enum KnownVpnPolicyMemberAttributeType {\n  /** CertificateGroupId */\n  CertificateGroupId = \"CertificateGroupId\",\n  /** AADGroupId */\n  AADGroupId = \"AADGroupId\",\n  /** RadiusAzureGroupId */\n  RadiusAzureGroupId = \"RadiusAzureGroupId\",\n}\n\n/**\n * Defines values for VpnPolicyMemberAttributeType. \\\n * {@link KnownVpnPolicyMemberAttributeType} can be used interchangeably with VpnPolicyMemberAttributeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CertificateGroupId** \\\n * **AADGroupId** \\\n * **RadiusAzureGroupId**\n */\nexport type VpnPolicyMemberAttributeType = string;\n\n/** Known values of {@link VpnNatRuleType} that the service accepts. */\nexport enum KnownVpnNatRuleType {\n  /** Static */\n  Static = \"Static\",\n  /** Dynamic */\n  Dynamic = \"Dynamic\",\n}\n\n/**\n * Defines values for VpnNatRuleType. \\\n * {@link KnownVpnNatRuleType} can be used interchangeably with VpnNatRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Static** \\\n * **Dynamic**\n */\nexport type VpnNatRuleType = string;\n\n/** Known values of {@link VpnNatRuleMode} that the service accepts. */\nexport enum KnownVpnNatRuleMode {\n  /** EgressSnat */\n  EgressSnat = \"EgressSnat\",\n  /** IngressSnat */\n  IngressSnat = \"IngressSnat\",\n}\n\n/**\n * Defines values for VpnNatRuleMode. \\\n * {@link KnownVpnNatRuleMode} can be used interchangeably with VpnNatRuleMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EgressSnat** \\\n * **IngressSnat**\n */\nexport type VpnNatRuleMode = string;\n\n/** Known values of {@link AdminState} that the service accepts. */\nexport enum KnownAdminState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for AdminState. \\\n * {@link KnownAdminState} can be used interchangeably with AdminState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type AdminState = string;\n\n/** Known values of {@link ResiliencyModel} that the service accepts. */\nexport enum KnownResiliencyModel {\n  /** SingleHomed */\n  SingleHomed = \"SingleHomed\",\n  /** MultiHomed */\n  MultiHomed = \"MultiHomed\",\n}\n\n/**\n * Defines values for ResiliencyModel. \\\n * {@link KnownResiliencyModel} can be used interchangeably with ResiliencyModel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SingleHomed** \\\n * **MultiHomed**\n */\nexport type ResiliencyModel = string;\n\n/** Known values of {@link VirtualNetworkGatewayConnectionType} that the service accepts. */\nexport enum KnownVirtualNetworkGatewayConnectionType {\n  /** IPsec */\n  IPsec = \"IPsec\",\n  /** Vnet2Vnet */\n  Vnet2Vnet = \"Vnet2Vnet\",\n  /** ExpressRoute */\n  ExpressRoute = \"ExpressRoute\",\n  /** VPNClient */\n  VPNClient = \"VPNClient\",\n}\n\n/**\n * Defines values for VirtualNetworkGatewayConnectionType. \\\n * {@link KnownVirtualNetworkGatewayConnectionType} can be used interchangeably with VirtualNetworkGatewayConnectionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IPsec** \\\n * **Vnet2Vnet** \\\n * **ExpressRoute** \\\n * **VPNClient**\n */\nexport type VirtualNetworkGatewayConnectionType = string;\n\n/** Known values of {@link VirtualNetworkGatewayConnectionProtocol} that the service accepts. */\nexport enum KnownVirtualNetworkGatewayConnectionProtocol {\n  /** IKEv2 */\n  IKEv2 = \"IKEv2\",\n  /** IKEv1 */\n  IKEv1 = \"IKEv1\",\n}\n\n/**\n * Defines values for VirtualNetworkGatewayConnectionProtocol. \\\n * {@link KnownVirtualNetworkGatewayConnectionProtocol} can be used interchangeably with VirtualNetworkGatewayConnectionProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IKEv2** \\\n * **IKEv1**\n */\nexport type VirtualNetworkGatewayConnectionProtocol = string;\n\n/** Known values of {@link VirtualNetworkGatewayConnectionMode} that the service accepts. */\nexport enum KnownVirtualNetworkGatewayConnectionMode {\n  /** Default */\n  Default = \"Default\",\n  /** ResponderOnly */\n  ResponderOnly = \"ResponderOnly\",\n  /** InitiatorOnly */\n  InitiatorOnly = \"InitiatorOnly\",\n}\n\n/**\n * Defines values for VirtualNetworkGatewayConnectionMode. \\\n * {@link KnownVirtualNetworkGatewayConnectionMode} can be used interchangeably with VirtualNetworkGatewayConnectionMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **ResponderOnly** \\\n * **InitiatorOnly**\n */\nexport type VirtualNetworkGatewayConnectionMode = string;\n\n/** Known values of {@link VirtualNetworkGatewayConnectionStatus} that the service accepts. */\nexport enum KnownVirtualNetworkGatewayConnectionStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Connecting */\n  Connecting = \"Connecting\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** NotConnected */\n  NotConnected = \"NotConnected\",\n}\n\n/**\n * Defines values for VirtualNetworkGatewayConnectionStatus. \\\n * {@link KnownVirtualNetworkGatewayConnectionStatus} can be used interchangeably with VirtualNetworkGatewayConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Connecting** \\\n * **Connected** \\\n * **NotConnected**\n */\nexport type VirtualNetworkGatewayConnectionStatus = string;\n\n/** Known values of {@link ProcessorArchitecture} that the service accepts. */\nexport enum KnownProcessorArchitecture {\n  /** Amd64 */\n  Amd64 = \"Amd64\",\n  /** X86 */\n  X86 = \"X86\",\n}\n\n/**\n * Defines values for ProcessorArchitecture. \\\n * {@link KnownProcessorArchitecture} can be used interchangeably with ProcessorArchitecture,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Amd64** \\\n * **X86**\n */\nexport type ProcessorArchitecture = string;\n\n/** Known values of {@link AuthenticationMethod} that the service accepts. */\nexport enum KnownAuthenticationMethod {\n  /** Eaptls */\n  Eaptls = \"EAPTLS\",\n  /** EapmschaPv2 */\n  EapmschaPv2 = \"EAPMSCHAPv2\",\n}\n\n/**\n * Defines values for AuthenticationMethod. \\\n * {@link KnownAuthenticationMethod} can be used interchangeably with AuthenticationMethod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EAPTLS** \\\n * **EAPMSCHAPv2**\n */\nexport type AuthenticationMethod = string;\n\n/** Known values of {@link BgpPeerState} that the service accepts. */\nexport enum KnownBgpPeerState {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Stopped */\n  Stopped = \"Stopped\",\n  /** Idle */\n  Idle = \"Idle\",\n  /** Connecting */\n  Connecting = \"Connecting\",\n  /** Connected */\n  Connected = \"Connected\",\n}\n\n/**\n * Defines values for BgpPeerState. \\\n * {@link KnownBgpPeerState} can be used interchangeably with BgpPeerState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Stopped** \\\n * **Idle** \\\n * **Connecting** \\\n * **Connected**\n */\nexport type BgpPeerState = string;\n\n/** Known values of {@link FailoverTestStatus} that the service accepts. */\nexport enum KnownFailoverTestStatus {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** Starting */\n  Starting = \"Starting\",\n  /** Running */\n  Running = \"Running\",\n  /** StartFailed */\n  StartFailed = \"StartFailed\",\n  /** Stopping */\n  Stopping = \"Stopping\",\n  /** Completed */\n  Completed = \"Completed\",\n  /** StopFailed */\n  StopFailed = \"StopFailed\",\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Expired */\n  Expired = \"Expired\",\n}\n\n/**\n * Defines values for FailoverTestStatus. \\\n * {@link KnownFailoverTestStatus} can be used interchangeably with FailoverTestStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **Starting** \\\n * **Running** \\\n * **StartFailed** \\\n * **Stopping** \\\n * **Completed** \\\n * **StopFailed** \\\n * **Invalid** \\\n * **Expired**\n */\nexport type FailoverTestStatus = string;\n\n/** Known values of {@link FailoverConnectionStatus} that the service accepts. */\nexport enum KnownFailoverConnectionStatus {\n  /** Connected */\n  Connected = \"Connected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\",\n}\n\n/**\n * Defines values for FailoverConnectionStatus. \\\n * {@link KnownFailoverConnectionStatus} can be used interchangeably with FailoverConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Connected** \\\n * **Disconnected**\n */\nexport type FailoverConnectionStatus = string;\n\n/** Known values of {@link FailoverTestType} that the service accepts. */\nexport enum KnownFailoverTestType {\n  /** SingleSiteFailover */\n  SingleSiteFailover = \"SingleSiteFailover\",\n  /** MultiSiteFailover */\n  MultiSiteFailover = \"MultiSiteFailover\",\n  /** All */\n  All = \"All\",\n}\n\n/**\n * Defines values for FailoverTestType. \\\n * {@link KnownFailoverTestType} can be used interchangeably with FailoverTestType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SingleSiteFailover** \\\n * **MultiSiteFailover** \\\n * **All**\n */\nexport type FailoverTestType = string;\n\n/** Known values of {@link FailoverTestStatusForSingleTest} that the service accepts. */\nexport enum KnownFailoverTestStatusForSingleTest {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** Starting */\n  Starting = \"Starting\",\n  /** Running */\n  Running = \"Running\",\n  /** StartFailed */\n  StartFailed = \"StartFailed\",\n  /** Stopping */\n  Stopping = \"Stopping\",\n  /** Completed */\n  Completed = \"Completed\",\n  /** StopFailed */\n  StopFailed = \"StopFailed\",\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Expired */\n  Expired = \"Expired\",\n}\n\n/**\n * Defines values for FailoverTestStatusForSingleTest. \\\n * {@link KnownFailoverTestStatusForSingleTest} can be used interchangeably with FailoverTestStatusForSingleTest,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **Starting** \\\n * **Running** \\\n * **StartFailed** \\\n * **Stopping** \\\n * **Completed** \\\n * **StopFailed** \\\n * **Invalid** \\\n * **Expired**\n */\nexport type FailoverTestStatusForSingleTest = string;\n\n/** Known values of {@link OfficeTrafficCategory} that the service accepts. */\nexport enum KnownOfficeTrafficCategory {\n  /** Optimize */\n  Optimize = \"Optimize\",\n  /** OptimizeAndAllow */\n  OptimizeAndAllow = \"OptimizeAndAllow\",\n  /** All */\n  All = \"All\",\n  /** None */\n  None = \"None\",\n}\n\n/**\n * Defines values for OfficeTrafficCategory. \\\n * {@link KnownOfficeTrafficCategory} can be used interchangeably with OfficeTrafficCategory,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Optimize** \\\n * **OptimizeAndAllow** \\\n * **All** \\\n * **None**\n */\nexport type OfficeTrafficCategory = string;\n\n/** Known values of {@link VirtualWanSecurityProviderType} that the service accepts. */\nexport enum KnownVirtualWanSecurityProviderType {\n  /** External */\n  External = \"External\",\n  /** Native */\n  Native = \"Native\",\n}\n\n/**\n * Defines values for VirtualWanSecurityProviderType. \\\n * {@link KnownVirtualWanSecurityProviderType} can be used interchangeably with VirtualWanSecurityProviderType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **External** \\\n * **Native**\n */\nexport type VirtualWanSecurityProviderType = string;\n\n/** Known values of {@link VpnGatewayTunnelingProtocol} that the service accepts. */\nexport enum KnownVpnGatewayTunnelingProtocol {\n  /** IkeV2 */\n  IkeV2 = \"IkeV2\",\n  /** OpenVPN */\n  OpenVPN = \"OpenVPN\",\n}\n\n/**\n * Defines values for VpnGatewayTunnelingProtocol. \\\n * {@link KnownVpnGatewayTunnelingProtocol} can be used interchangeably with VpnGatewayTunnelingProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IkeV2** \\\n * **OpenVPN**\n */\nexport type VpnGatewayTunnelingProtocol = string;\n\n/** Known values of {@link VnetLocalRouteOverrideCriteria} that the service accepts. */\nexport enum KnownVnetLocalRouteOverrideCriteria {\n  /** Contains */\n  Contains = \"Contains\",\n  /** Equal */\n  Equal = \"Equal\",\n}\n\n/**\n * Defines values for VnetLocalRouteOverrideCriteria. \\\n * {@link KnownVnetLocalRouteOverrideCriteria} can be used interchangeably with VnetLocalRouteOverrideCriteria,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Contains** \\\n * **Equal**\n */\nexport type VnetLocalRouteOverrideCriteria = string;\n\n/** Known values of {@link RoutingState} that the service accepts. */\nexport enum KnownRoutingState {\n  /** None */\n  None = \"None\",\n  /** Provisioned */\n  Provisioned = \"Provisioned\",\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Failed */\n  Failed = \"Failed\",\n}\n\n/**\n * Defines values for RoutingState. \\\n * {@link KnownRoutingState} can be used interchangeably with RoutingState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Provisioned** \\\n * **Provisioning** \\\n * **Failed**\n */\nexport type RoutingState = string;\n\n/** Known values of {@link PreferredRoutingGateway} that the service accepts. */\nexport enum KnownPreferredRoutingGateway {\n  /** ExpressRoute */\n  ExpressRoute = \"ExpressRoute\",\n  /** VpnGateway */\n  VpnGateway = \"VpnGateway\",\n  /** None */\n  None = \"None\",\n}\n\n/**\n * Defines values for PreferredRoutingGateway. \\\n * {@link KnownPreferredRoutingGateway} can be used interchangeably with PreferredRoutingGateway,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ExpressRoute** \\\n * **VpnGateway** \\\n * **None**\n */\nexport type PreferredRoutingGateway = string;\n\n/** Known values of {@link HubRoutingPreference} that the service accepts. */\nexport enum KnownHubRoutingPreference {\n  /** ExpressRoute */\n  ExpressRoute = \"ExpressRoute\",\n  /** VpnGateway */\n  VpnGateway = \"VpnGateway\",\n  /** ASPath */\n  ASPath = \"ASPath\",\n}\n\n/**\n * Defines values for HubRoutingPreference. \\\n * {@link KnownHubRoutingPreference} can be used interchangeably with HubRoutingPreference,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ExpressRoute** \\\n * **VpnGateway** \\\n * **ASPath**\n */\nexport type HubRoutingPreference = string;\n\n/** Known values of {@link RouteMapMatchCondition} that the service accepts. */\nexport enum KnownRouteMapMatchCondition {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** Equals */\n  Equals = \"Equals\",\n  /** NotContains */\n  NotContains = \"NotContains\",\n  /** NotEquals */\n  NotEquals = \"NotEquals\",\n}\n\n/**\n * Defines values for RouteMapMatchCondition. \\\n * {@link KnownRouteMapMatchCondition} can be used interchangeably with RouteMapMatchCondition,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Contains** \\\n * **Equals** \\\n * **NotContains** \\\n * **NotEquals**\n */\nexport type RouteMapMatchCondition = string;\n\n/** Known values of {@link RouteMapActionType} that the service accepts. */\nexport enum KnownRouteMapActionType {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Remove */\n  Remove = \"Remove\",\n  /** Add */\n  Add = \"Add\",\n  /** Replace */\n  Replace = \"Replace\",\n  /** Drop */\n  Drop = \"Drop\",\n}\n\n/**\n * Defines values for RouteMapActionType. \\\n * {@link KnownRouteMapActionType} can be used interchangeably with RouteMapActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Remove** \\\n * **Add** \\\n * **Replace** \\\n * **Drop**\n */\nexport type RouteMapActionType = string;\n\n/** Known values of {@link NextStep} that the service accepts. */\nexport enum KnownNextStep {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Continue */\n  Continue = \"Continue\",\n  /** Terminate */\n  Terminate = \"Terminate\",\n}\n\n/**\n * Defines values for NextStep. \\\n * {@link KnownNextStep} can be used interchangeably with NextStep,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Continue** \\\n * **Terminate**\n */\nexport type NextStep = string;\n\n/** Known values of {@link VpnConnectionStatus} that the service accepts. */\nexport enum KnownVpnConnectionStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Connecting */\n  Connecting = \"Connecting\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** NotConnected */\n  NotConnected = \"NotConnected\",\n}\n\n/**\n * Defines values for VpnConnectionStatus. \\\n * {@link KnownVpnConnectionStatus} can be used interchangeably with VpnConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Connecting** \\\n * **Connected** \\\n * **NotConnected**\n */\nexport type VpnConnectionStatus = string;\n\n/** Known values of {@link VpnLinkConnectionMode} that the service accepts. */\nexport enum KnownVpnLinkConnectionMode {\n  /** Default */\n  Default = \"Default\",\n  /** ResponderOnly */\n  ResponderOnly = \"ResponderOnly\",\n  /** InitiatorOnly */\n  InitiatorOnly = \"InitiatorOnly\",\n}\n\n/**\n * Defines values for VpnLinkConnectionMode. \\\n * {@link KnownVpnLinkConnectionMode} can be used interchangeably with VpnLinkConnectionMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **ResponderOnly** \\\n * **InitiatorOnly**\n */\nexport type VpnLinkConnectionMode = string;\n\n/** Known values of {@link HubBgpConnectionStatus} that the service accepts. */\nexport enum KnownHubBgpConnectionStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Connecting */\n  Connecting = \"Connecting\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** NotConnected */\n  NotConnected = \"NotConnected\",\n}\n\n/**\n * Defines values for HubBgpConnectionStatus. \\\n * {@link KnownHubBgpConnectionStatus} can be used interchangeably with HubBgpConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Connecting** \\\n * **Connected** \\\n * **NotConnected**\n */\nexport type HubBgpConnectionStatus = string;\n\n/** Known values of {@link WebApplicationFirewallEnabledState} that the service accepts. */\nexport enum KnownWebApplicationFirewallEnabledState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n}\n\n/**\n * Defines values for WebApplicationFirewallEnabledState. \\\n * {@link KnownWebApplicationFirewallEnabledState} can be used interchangeably with WebApplicationFirewallEnabledState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type WebApplicationFirewallEnabledState = string;\n\n/** Known values of {@link WebApplicationFirewallMode} that the service accepts. */\nexport enum KnownWebApplicationFirewallMode {\n  /** Prevention */\n  Prevention = \"Prevention\",\n  /** Detection */\n  Detection = \"Detection\",\n}\n\n/**\n * Defines values for WebApplicationFirewallMode. \\\n * {@link KnownWebApplicationFirewallMode} can be used interchangeably with WebApplicationFirewallMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Prevention** \\\n * **Detection**\n */\nexport type WebApplicationFirewallMode = string;\n\n/** Known values of {@link WebApplicationFirewallScrubbingState} that the service accepts. */\nexport enum KnownWebApplicationFirewallScrubbingState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n}\n\n/**\n * Defines values for WebApplicationFirewallScrubbingState. \\\n * {@link KnownWebApplicationFirewallScrubbingState} can be used interchangeably with WebApplicationFirewallScrubbingState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type WebApplicationFirewallScrubbingState = string;\n\n/** Known values of {@link ScrubbingRuleEntryMatchVariable} that the service accepts. */\nexport enum KnownScrubbingRuleEntryMatchVariable {\n  /** RequestHeaderNames */\n  RequestHeaderNames = \"RequestHeaderNames\",\n  /** RequestCookieNames */\n  RequestCookieNames = \"RequestCookieNames\",\n  /** RequestArgNames */\n  RequestArgNames = \"RequestArgNames\",\n  /** RequestPostArgNames */\n  RequestPostArgNames = \"RequestPostArgNames\",\n  /** RequestJsonArgNames */\n  RequestJsonArgNames = \"RequestJSONArgNames\",\n  /** RequestIPAddress */\n  RequestIPAddress = \"RequestIPAddress\",\n}\n\n/**\n * Defines values for ScrubbingRuleEntryMatchVariable. \\\n * {@link KnownScrubbingRuleEntryMatchVariable} can be used interchangeably with ScrubbingRuleEntryMatchVariable,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RequestHeaderNames** \\\n * **RequestCookieNames** \\\n * **RequestArgNames** \\\n * **RequestPostArgNames** \\\n * **RequestJSONArgNames** \\\n * **RequestIPAddress**\n */\nexport type ScrubbingRuleEntryMatchVariable = string;\n\n/** Known values of {@link ScrubbingRuleEntryMatchOperator} that the service accepts. */\nexport enum KnownScrubbingRuleEntryMatchOperator {\n  /** Equals */\n  Equals = \"Equals\",\n  /** EqualsAny */\n  EqualsAny = \"EqualsAny\",\n}\n\n/**\n * Defines values for ScrubbingRuleEntryMatchOperator. \\\n * {@link KnownScrubbingRuleEntryMatchOperator} can be used interchangeably with ScrubbingRuleEntryMatchOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Equals** \\\n * **EqualsAny**\n */\nexport type ScrubbingRuleEntryMatchOperator = string;\n\n/** Known values of {@link ScrubbingRuleEntryState} that the service accepts. */\nexport enum KnownScrubbingRuleEntryState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n}\n\n/**\n * Defines values for ScrubbingRuleEntryState. \\\n * {@link KnownScrubbingRuleEntryState} can be used interchangeably with ScrubbingRuleEntryState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ScrubbingRuleEntryState = string;\n\n/** Known values of {@link WebApplicationFirewallState} that the service accepts. */\nexport enum KnownWebApplicationFirewallState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n}\n\n/**\n * Defines values for WebApplicationFirewallState. \\\n * {@link KnownWebApplicationFirewallState} can be used interchangeably with WebApplicationFirewallState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type WebApplicationFirewallState = string;\n\n/** Known values of {@link ApplicationGatewayFirewallRateLimitDuration} that the service accepts. */\nexport enum KnownApplicationGatewayFirewallRateLimitDuration {\n  /** OneMin */\n  OneMin = \"OneMin\",\n  /** FiveMins */\n  FiveMins = \"FiveMins\",\n}\n\n/**\n * Defines values for ApplicationGatewayFirewallRateLimitDuration. \\\n * {@link KnownApplicationGatewayFirewallRateLimitDuration} can be used interchangeably with ApplicationGatewayFirewallRateLimitDuration,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OneMin** \\\n * **FiveMins**\n */\nexport type ApplicationGatewayFirewallRateLimitDuration = string;\n\n/** Known values of {@link WebApplicationFirewallRuleType} that the service accepts. */\nexport enum KnownWebApplicationFirewallRuleType {\n  /** MatchRule */\n  MatchRule = \"MatchRule\",\n  /** RateLimitRule */\n  RateLimitRule = \"RateLimitRule\",\n  /** Invalid */\n  Invalid = \"Invalid\",\n}\n\n/**\n * Defines values for WebApplicationFirewallRuleType. \\\n * {@link KnownWebApplicationFirewallRuleType} can be used interchangeably with WebApplicationFirewallRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MatchRule** \\\n * **RateLimitRule** \\\n * **Invalid**\n */\nexport type WebApplicationFirewallRuleType = string;\n\n/** Known values of {@link WebApplicationFirewallMatchVariable} that the service accepts. */\nexport enum KnownWebApplicationFirewallMatchVariable {\n  /** RemoteAddr */\n  RemoteAddr = \"RemoteAddr\",\n  /** RequestMethod */\n  RequestMethod = \"RequestMethod\",\n  /** QueryString */\n  QueryString = \"QueryString\",\n  /** PostArgs */\n  PostArgs = \"PostArgs\",\n  /** RequestUri */\n  RequestUri = \"RequestUri\",\n  /** RequestHeaders */\n  RequestHeaders = \"RequestHeaders\",\n  /** RequestBody */\n  RequestBody = \"RequestBody\",\n  /** RequestCookies */\n  RequestCookies = \"RequestCookies\",\n}\n\n/**\n * Defines values for WebApplicationFirewallMatchVariable. \\\n * {@link KnownWebApplicationFirewallMatchVariable} can be used interchangeably with WebApplicationFirewallMatchVariable,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RemoteAddr** \\\n * **RequestMethod** \\\n * **QueryString** \\\n * **PostArgs** \\\n * **RequestUri** \\\n * **RequestHeaders** \\\n * **RequestBody** \\\n * **RequestCookies**\n */\nexport type WebApplicationFirewallMatchVariable = string;\n\n/** Known values of {@link WebApplicationFirewallOperator} that the service accepts. */\nexport enum KnownWebApplicationFirewallOperator {\n  /** IPMatch */\n  IPMatch = \"IPMatch\",\n  /** Equal */\n  Equal = \"Equal\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** LessThan */\n  LessThan = \"LessThan\",\n  /** GreaterThan */\n  GreaterThan = \"GreaterThan\",\n  /** LessThanOrEqual */\n  LessThanOrEqual = \"LessThanOrEqual\",\n  /** GreaterThanOrEqual */\n  GreaterThanOrEqual = \"GreaterThanOrEqual\",\n  /** BeginsWith */\n  BeginsWith = \"BeginsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** Regex */\n  Regex = \"Regex\",\n  /** GeoMatch */\n  GeoMatch = \"GeoMatch\",\n  /** Any */\n  Any = \"Any\",\n}\n\n/**\n * Defines values for WebApplicationFirewallOperator. \\\n * {@link KnownWebApplicationFirewallOperator} can be used interchangeably with WebApplicationFirewallOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IPMatch** \\\n * **Equal** \\\n * **Contains** \\\n * **LessThan** \\\n * **GreaterThan** \\\n * **LessThanOrEqual** \\\n * **GreaterThanOrEqual** \\\n * **BeginsWith** \\\n * **EndsWith** \\\n * **Regex** \\\n * **GeoMatch** \\\n * **Any**\n */\nexport type WebApplicationFirewallOperator = string;\n\n/** Known values of {@link WebApplicationFirewallTransform} that the service accepts. */\nexport enum KnownWebApplicationFirewallTransform {\n  /** Uppercase */\n  Uppercase = \"Uppercase\",\n  /** Lowercase */\n  Lowercase = \"Lowercase\",\n  /** Trim */\n  Trim = \"Trim\",\n  /** UrlDecode */\n  UrlDecode = \"UrlDecode\",\n  /** UrlEncode */\n  UrlEncode = \"UrlEncode\",\n  /** RemoveNulls */\n  RemoveNulls = \"RemoveNulls\",\n  /** HtmlEntityDecode */\n  HtmlEntityDecode = \"HtmlEntityDecode\",\n}\n\n/**\n * Defines values for WebApplicationFirewallTransform. \\\n * {@link KnownWebApplicationFirewallTransform} can be used interchangeably with WebApplicationFirewallTransform,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Uppercase** \\\n * **Lowercase** \\\n * **Trim** \\\n * **UrlDecode** \\\n * **UrlEncode** \\\n * **RemoveNulls** \\\n * **HtmlEntityDecode**\n */\nexport type WebApplicationFirewallTransform = string;\n\n/** Known values of {@link ApplicationGatewayFirewallUserSessionVariable} that the service accepts. */\nexport enum KnownApplicationGatewayFirewallUserSessionVariable {\n  /** ClientAddr */\n  ClientAddr = \"ClientAddr\",\n  /** GeoLocation */\n  GeoLocation = \"GeoLocation\",\n  /** None */\n  None = \"None\",\n}\n\n/**\n * Defines values for ApplicationGatewayFirewallUserSessionVariable. \\\n * {@link KnownApplicationGatewayFirewallUserSessionVariable} can be used interchangeably with ApplicationGatewayFirewallUserSessionVariable,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ClientAddr** \\\n * **GeoLocation** \\\n * **None**\n */\nexport type ApplicationGatewayFirewallUserSessionVariable = string;\n\n/** Known values of {@link WebApplicationFirewallAction} that the service accepts. */\nexport enum KnownWebApplicationFirewallAction {\n  /** Allow */\n  Allow = \"Allow\",\n  /** Block */\n  Block = \"Block\",\n  /** Log */\n  Log = \"Log\",\n  /** JSChallenge */\n  JSChallenge = \"JSChallenge\",\n}\n\n/**\n * Defines values for WebApplicationFirewallAction. \\\n * {@link KnownWebApplicationFirewallAction} can be used interchangeably with WebApplicationFirewallAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow** \\\n * **Block** \\\n * **Log** \\\n * **JSChallenge**\n */\nexport type WebApplicationFirewallAction = string;\n\n/** Known values of {@link WebApplicationFirewallPolicyResourceState} that the service accepts. */\nexport enum KnownWebApplicationFirewallPolicyResourceState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Enabling */\n  Enabling = \"Enabling\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabling */\n  Disabling = \"Disabling\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n}\n\n/**\n * Defines values for WebApplicationFirewallPolicyResourceState. \\\n * {@link KnownWebApplicationFirewallPolicyResourceState} can be used interchangeably with WebApplicationFirewallPolicyResourceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Enabling** \\\n * **Enabled** \\\n * **Disabling** \\\n * **Disabled** \\\n * **Deleting**\n */\nexport type WebApplicationFirewallPolicyResourceState = string;\n\n/** Known values of {@link ExceptionEntryMatchVariable} that the service accepts. */\nexport enum KnownExceptionEntryMatchVariable {\n  /** RequestURI */\n  RequestURI = \"RequestURI\",\n  /** RemoteAddr */\n  RemoteAddr = \"RemoteAddr\",\n  /** RequestHeader */\n  RequestHeader = \"RequestHeader\",\n}\n\n/**\n * Defines values for ExceptionEntryMatchVariable. \\\n * {@link KnownExceptionEntryMatchVariable} can be used interchangeably with ExceptionEntryMatchVariable,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RequestURI** \\\n * **RemoteAddr** \\\n * **RequestHeader**\n */\nexport type ExceptionEntryMatchVariable = string;\n\n/** Known values of {@link ExceptionEntryValueMatchOperator} that the service accepts. */\nexport enum KnownExceptionEntryValueMatchOperator {\n  /** Equals */\n  Equals = \"Equals\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** StartsWith */\n  StartsWith = \"StartsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** IPMatch */\n  IPMatch = \"IPMatch\",\n}\n\n/**\n * Defines values for ExceptionEntryValueMatchOperator. \\\n * {@link KnownExceptionEntryValueMatchOperator} can be used interchangeably with ExceptionEntryValueMatchOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Equals** \\\n * **Contains** \\\n * **StartsWith** \\\n * **EndsWith** \\\n * **IPMatch**\n */\nexport type ExceptionEntryValueMatchOperator = string;\n\n/** Known values of {@link ExceptionEntrySelectorMatchOperator} that the service accepts. */\nexport enum KnownExceptionEntrySelectorMatchOperator {\n  /** Equals */\n  Equals = \"Equals\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** StartsWith */\n  StartsWith = \"StartsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n}\n\n/**\n * Defines values for ExceptionEntrySelectorMatchOperator. \\\n * {@link KnownExceptionEntrySelectorMatchOperator} can be used interchangeably with ExceptionEntrySelectorMatchOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Equals** \\\n * **Contains** \\\n * **StartsWith** \\\n * **EndsWith**\n */\nexport type ExceptionEntrySelectorMatchOperator = string;\n\n/** Known values of {@link OwaspCrsExclusionEntryMatchVariable} that the service accepts. */\nexport enum KnownOwaspCrsExclusionEntryMatchVariable {\n  /** RequestHeaderNames */\n  RequestHeaderNames = \"RequestHeaderNames\",\n  /** RequestCookieNames */\n  RequestCookieNames = \"RequestCookieNames\",\n  /** RequestArgNames */\n  RequestArgNames = \"RequestArgNames\",\n  /** RequestHeaderKeys */\n  RequestHeaderKeys = \"RequestHeaderKeys\",\n  /** RequestHeaderValues */\n  RequestHeaderValues = \"RequestHeaderValues\",\n  /** RequestCookieKeys */\n  RequestCookieKeys = \"RequestCookieKeys\",\n  /** RequestCookieValues */\n  RequestCookieValues = \"RequestCookieValues\",\n  /** RequestArgKeys */\n  RequestArgKeys = \"RequestArgKeys\",\n  /** RequestArgValues */\n  RequestArgValues = \"RequestArgValues\",\n}\n\n/**\n * Defines values for OwaspCrsExclusionEntryMatchVariable. \\\n * {@link KnownOwaspCrsExclusionEntryMatchVariable} can be used interchangeably with OwaspCrsExclusionEntryMatchVariable,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RequestHeaderNames** \\\n * **RequestCookieNames** \\\n * **RequestArgNames** \\\n * **RequestHeaderKeys** \\\n * **RequestHeaderValues** \\\n * **RequestCookieKeys** \\\n * **RequestCookieValues** \\\n * **RequestArgKeys** \\\n * **RequestArgValues**\n */\nexport type OwaspCrsExclusionEntryMatchVariable = string;\n\n/** Known values of {@link OwaspCrsExclusionEntrySelectorMatchOperator} that the service accepts. */\nexport enum KnownOwaspCrsExclusionEntrySelectorMatchOperator {\n  /** Equals */\n  Equals = \"Equals\",\n  /** Contains */\n  Contains = \"Contains\",\n  /** StartsWith */\n  StartsWith = \"StartsWith\",\n  /** EndsWith */\n  EndsWith = \"EndsWith\",\n  /** EqualsAny */\n  EqualsAny = \"EqualsAny\",\n}\n\n/**\n * Defines values for OwaspCrsExclusionEntrySelectorMatchOperator. \\\n * {@link KnownOwaspCrsExclusionEntrySelectorMatchOperator} can be used interchangeably with OwaspCrsExclusionEntrySelectorMatchOperator,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Equals** \\\n * **Contains** \\\n * **StartsWith** \\\n * **EndsWith** \\\n * **EqualsAny**\n */\nexport type OwaspCrsExclusionEntrySelectorMatchOperator = string;\n\n/** Known values of {@link ManagedRuleEnabledState} that the service accepts. */\nexport enum KnownManagedRuleEnabledState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n}\n\n/**\n * Defines values for ManagedRuleEnabledState. \\\n * {@link KnownManagedRuleEnabledState} can be used interchangeably with ManagedRuleEnabledState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type ManagedRuleEnabledState = string;\n\n/** Known values of {@link ActionType} that the service accepts. */\nexport enum KnownActionType {\n  /** AnomalyScoring */\n  AnomalyScoring = \"AnomalyScoring\",\n  /** Allow */\n  Allow = \"Allow\",\n  /** Block */\n  Block = \"Block\",\n  /** Log */\n  Log = \"Log\",\n  /** JSChallenge */\n  JSChallenge = \"JSChallenge\",\n}\n\n/**\n * Defines values for ActionType. \\\n * {@link KnownActionType} can be used interchangeably with ActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AnomalyScoring** \\\n * **Allow** \\\n * **Block** \\\n * **Log** \\\n * **JSChallenge**\n */\nexport type ActionType = string;\n\n/** Known values of {@link SensitivityType} that the service accepts. */\nexport enum KnownSensitivityType {\n  /** None */\n  None = \"None\",\n  /** Low */\n  Low = \"Low\",\n  /** Medium */\n  Medium = \"Medium\",\n  /** High */\n  High = \"High\",\n}\n\n/**\n * Defines values for SensitivityType. \\\n * {@link KnownSensitivityType} can be used interchangeably with SensitivityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Low** \\\n * **Medium** \\\n * **High**\n */\nexport type SensitivityType = string;\n\n/** Known values of {@link FirewallPolicyNatRuleCollectionActionType} that the service accepts. */\nexport enum KnownFirewallPolicyNatRuleCollectionActionType {\n  /** Dnat */\n  Dnat = \"DNAT\",\n}\n\n/**\n * Defines values for FirewallPolicyNatRuleCollectionActionType. \\\n * {@link KnownFirewallPolicyNatRuleCollectionActionType} can be used interchangeably with FirewallPolicyNatRuleCollectionActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DNAT**\n */\nexport type FirewallPolicyNatRuleCollectionActionType = string;\n\n/** Known values of {@link FirewallPolicyRuleType} that the service accepts. */\nexport enum KnownFirewallPolicyRuleType {\n  /** ApplicationRule */\n  ApplicationRule = \"ApplicationRule\",\n  /** NetworkRule */\n  NetworkRule = \"NetworkRule\",\n  /** NatRule */\n  NatRule = \"NatRule\",\n}\n\n/**\n * Defines values for FirewallPolicyRuleType. \\\n * {@link KnownFirewallPolicyRuleType} can be used interchangeably with FirewallPolicyRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ApplicationRule** \\\n * **NetworkRule** \\\n * **NatRule**\n */\nexport type FirewallPolicyRuleType = string;\n\n/** Known values of {@link FirewallPolicyFilterRuleCollectionActionType} that the service accepts. */\nexport enum KnownFirewallPolicyFilterRuleCollectionActionType {\n  /** Allow */\n  Allow = \"Allow\",\n  /** Deny */\n  Deny = \"Deny\",\n}\n\n/**\n * Defines values for FirewallPolicyFilterRuleCollectionActionType. \\\n * {@link KnownFirewallPolicyFilterRuleCollectionActionType} can be used interchangeably with FirewallPolicyFilterRuleCollectionActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow** \\\n * **Deny**\n */\nexport type FirewallPolicyFilterRuleCollectionActionType = string;\n\n/** Known values of {@link FirewallPolicyRuleApplicationProtocolType} that the service accepts. */\nexport enum KnownFirewallPolicyRuleApplicationProtocolType {\n  /** Http */\n  Http = \"Http\",\n  /** Https */\n  Https = \"Https\",\n}\n\n/**\n * Defines values for FirewallPolicyRuleApplicationProtocolType. \\\n * {@link KnownFirewallPolicyRuleApplicationProtocolType} can be used interchangeably with FirewallPolicyRuleApplicationProtocolType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Http** \\\n * **Https**\n */\nexport type FirewallPolicyRuleApplicationProtocolType = string;\n\n/** Known values of {@link FirewallPolicyRuleNetworkProtocol} that the service accepts. */\nexport enum KnownFirewallPolicyRuleNetworkProtocol {\n  /** TCP */\n  TCP = \"TCP\",\n  /** UDP */\n  UDP = \"UDP\",\n  /** Any */\n  Any = \"Any\",\n  /** Icmp */\n  Icmp = \"ICMP\",\n}\n\n/**\n * Defines values for FirewallPolicyRuleNetworkProtocol. \\\n * {@link KnownFirewallPolicyRuleNetworkProtocol} can be used interchangeably with FirewallPolicyRuleNetworkProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TCP** \\\n * **UDP** \\\n * **Any** \\\n * **ICMP**\n */\nexport type FirewallPolicyRuleNetworkProtocol = string;\n\n/** Known values of {@link NetworkOperationStatus} that the service accepts. */\nexport enum KnownNetworkOperationStatus {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n}\n\n/**\n * Defines values for NetworkOperationStatus. \\\n * {@link KnownNetworkOperationStatus} can be used interchangeably with NetworkOperationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type NetworkOperationStatus = string;\n\n/** Known values of {@link SecurityConfigurationRuleAccess} that the service accepts. */\nexport enum KnownSecurityConfigurationRuleAccess {\n  /** Allow */\n  Allow = \"Allow\",\n  /** Deny */\n  Deny = \"Deny\",\n  /** AlwaysAllow */\n  AlwaysAllow = \"AlwaysAllow\",\n}\n\n/**\n * Defines values for SecurityConfigurationRuleAccess. \\\n * {@link KnownSecurityConfigurationRuleAccess} can be used interchangeably with SecurityConfigurationRuleAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow** \\\n * **Deny** \\\n * **AlwaysAllow**\n */\nexport type SecurityConfigurationRuleAccess = string;\n\n/** Known values of {@link TunnelConnectionStatus} that the service accepts. */\nexport enum KnownTunnelConnectionStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Connecting */\n  Connecting = \"Connecting\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** NotConnected */\n  NotConnected = \"NotConnected\",\n}\n\n/**\n * Defines values for TunnelConnectionStatus. \\\n * {@link KnownTunnelConnectionStatus} can be used interchangeably with TunnelConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Connecting** \\\n * **Connected** \\\n * **NotConnected**\n */\nexport type TunnelConnectionStatus = string;\n\n/** Known values of {@link HubVirtualNetworkConnectionStatus} that the service accepts. */\nexport enum KnownHubVirtualNetworkConnectionStatus {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Connecting */\n  Connecting = \"Connecting\",\n  /** Connected */\n  Connected = \"Connected\",\n  /** NotConnected */\n  NotConnected = \"NotConnected\",\n}\n\n/**\n * Defines values for HubVirtualNetworkConnectionStatus. \\\n * {@link KnownHubVirtualNetworkConnectionStatus} can be used interchangeably with HubVirtualNetworkConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Connecting** \\\n * **Connected** \\\n * **NotConnected**\n */\nexport type HubVirtualNetworkConnectionStatus = string;\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"UserAssigned\"\n  | \"SystemAssigned, UserAssigned\"\n  | \"None\";\n/** Defines values for PublicIpAddressDnsSettingsDomainNameLabelScope. */\nexport type PublicIpAddressDnsSettingsDomainNameLabelScope =\n  | \"TenantReuse\"\n  | \"SubscriptionReuse\"\n  | \"ResourceGroupReuse\"\n  | \"NoReuse\";\n/** Defines values for SlotType. */\nexport type SlotType = \"Production\" | \"Staging\";\n/** Defines values for FirewallPolicyIdpsSignatureMode. */\nexport type FirewallPolicyIdpsSignatureMode = 0 | 1 | 2;\n/** Defines values for FirewallPolicyIdpsSignatureSeverity. */\nexport type FirewallPolicyIdpsSignatureSeverity = 1 | 2 | 3;\n/** Defines values for FirewallPolicyIdpsSignatureDirection. */\nexport type FirewallPolicyIdpsSignatureDirection = 0 | 1 | 2 | 3 | 4 | 5;\n/** Defines values for PacketCaptureTargetType. */\nexport type PacketCaptureTargetType = \"AzureVM\" | \"AzureVMSS\";\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApplicationGatewaysGetResponse = ApplicationGateway;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ApplicationGatewaysCreateOrUpdateResponse = ApplicationGateway;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type ApplicationGatewaysUpdateTagsResponse = ApplicationGateway;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ApplicationGatewaysListResponse = ApplicationGatewayListResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type ApplicationGatewaysListAllResponse = ApplicationGatewayListResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysBackendHealthOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands BackendAddressPool and BackendHttpSettings referenced in backend health. */\n  expand?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the backendHealth operation. */\nexport type ApplicationGatewaysBackendHealthResponse =\n  ApplicationGatewayBackendHealth;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysBackendHealthOnDemandOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands BackendAddressPool and BackendHttpSettings referenced in backend health. */\n  expand?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the backendHealthOnDemand operation. */\nexport type ApplicationGatewaysBackendHealthOnDemandResponse =\n  ApplicationGatewayBackendHealthOnDemand;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAvailableServerVariablesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableServerVariables operation. */\nexport type ApplicationGatewaysListAvailableServerVariablesResponse = {\n  /** The parsed response body. */\n  body: string[];\n};\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAvailableRequestHeadersOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableRequestHeaders operation. */\nexport type ApplicationGatewaysListAvailableRequestHeadersResponse = {\n  /** The parsed response body. */\n  body: string[];\n};\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAvailableResponseHeadersOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableResponseHeaders operation. */\nexport type ApplicationGatewaysListAvailableResponseHeadersResponse = {\n  /** The parsed response body. */\n  body: string[];\n};\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAvailableWafRuleSetsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableWafRuleSets operation. */\nexport type ApplicationGatewaysListAvailableWafRuleSetsResponse =\n  ApplicationGatewayAvailableWafRuleSetsResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAvailableSslOptionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableSslOptions operation. */\nexport type ApplicationGatewaysListAvailableSslOptionsResponse =\n  ApplicationGatewayAvailableSslOptions;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAvailableSslPredefinedPoliciesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableSslPredefinedPolicies operation. */\nexport type ApplicationGatewaysListAvailableSslPredefinedPoliciesResponse =\n  ApplicationGatewayAvailableSslPredefinedPolicies;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysGetSslPredefinedPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSslPredefinedPolicy operation. */\nexport type ApplicationGatewaysGetSslPredefinedPolicyResponse =\n  ApplicationGatewaySslPredefinedPolicy;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ApplicationGatewaysListNextResponse = ApplicationGatewayListResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type ApplicationGatewaysListAllNextResponse =\n  ApplicationGatewayListResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewaysListAvailableSslPredefinedPoliciesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableSslPredefinedPoliciesNext operation. */\nexport type ApplicationGatewaysListAvailableSslPredefinedPoliciesNextResponse =\n  ApplicationGatewayAvailableSslPredefinedPolicies;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayPrivateLinkResourcesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ApplicationGatewayPrivateLinkResourcesListResponse =\n  ApplicationGatewayPrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayPrivateLinkResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ApplicationGatewayPrivateLinkResourcesListNextResponse =\n  ApplicationGatewayPrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayPrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApplicationGatewayPrivateEndpointConnectionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ApplicationGatewayPrivateEndpointConnectionsUpdateResponse =\n  ApplicationGatewayPrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayPrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApplicationGatewayPrivateEndpointConnectionsGetResponse =\n  ApplicationGatewayPrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayPrivateEndpointConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ApplicationGatewayPrivateEndpointConnectionsListResponse =\n  ApplicationGatewayPrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayPrivateEndpointConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ApplicationGatewayPrivateEndpointConnectionsListNextResponse =\n  ApplicationGatewayPrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayWafDynamicManifestsDefaultGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApplicationGatewayWafDynamicManifestsDefaultGetResponse =\n  ApplicationGatewayWafDynamicManifestResult;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayWafDynamicManifestsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApplicationGatewayWafDynamicManifestsGetResponse =\n  ApplicationGatewayWafDynamicManifestResultList;\n\n/** Optional parameters. */\nexport interface ApplicationGatewayWafDynamicManifestsGetNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getNext operation. */\nexport type ApplicationGatewayWafDynamicManifestsGetNextResponse =\n  ApplicationGatewayWafDynamicManifestResultList;\n\n/** Optional parameters. */\nexport interface ApplicationSecurityGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApplicationSecurityGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApplicationSecurityGroupsGetResponse = ApplicationSecurityGroup;\n\n/** Optional parameters. */\nexport interface ApplicationSecurityGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ApplicationSecurityGroupsCreateOrUpdateResponse =\n  ApplicationSecurityGroup;\n\n/** Optional parameters. */\nexport interface ApplicationSecurityGroupsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type ApplicationSecurityGroupsUpdateTagsResponse =\n  ApplicationSecurityGroup;\n\n/** Optional parameters. */\nexport interface ApplicationSecurityGroupsListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type ApplicationSecurityGroupsListAllResponse =\n  ApplicationSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface ApplicationSecurityGroupsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ApplicationSecurityGroupsListResponse =\n  ApplicationSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface ApplicationSecurityGroupsListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type ApplicationSecurityGroupsListAllNextResponse =\n  ApplicationSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface ApplicationSecurityGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ApplicationSecurityGroupsListNextResponse =\n  ApplicationSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface AvailableDelegationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AvailableDelegationsListResponse = AvailableDelegationsResult;\n\n/** Optional parameters. */\nexport interface AvailableDelegationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AvailableDelegationsListNextResponse = AvailableDelegationsResult;\n\n/** Optional parameters. */\nexport interface AvailableResourceGroupDelegationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AvailableResourceGroupDelegationsListResponse =\n  AvailableDelegationsResult;\n\n/** Optional parameters. */\nexport interface AvailableResourceGroupDelegationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AvailableResourceGroupDelegationsListNextResponse =\n  AvailableDelegationsResult;\n\n/** Optional parameters. */\nexport interface AvailableServiceAliasesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AvailableServiceAliasesListResponse = AvailableServiceAliasesResult;\n\n/** Optional parameters. */\nexport interface AvailableServiceAliasesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type AvailableServiceAliasesListByResourceGroupResponse =\n  AvailableServiceAliasesResult;\n\n/** Optional parameters. */\nexport interface AvailableServiceAliasesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AvailableServiceAliasesListNextResponse =\n  AvailableServiceAliasesResult;\n\n/** Optional parameters. */\nexport interface AvailableServiceAliasesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type AvailableServiceAliasesListByResourceGroupNextResponse =\n  AvailableServiceAliasesResult;\n\n/** Optional parameters. */\nexport interface AzureFirewallsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AzureFirewallsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AzureFirewallsGetResponse = AzureFirewall;\n\n/** Optional parameters. */\nexport interface AzureFirewallsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type AzureFirewallsCreateOrUpdateResponse = AzureFirewall;\n\n/** Optional parameters. */\nexport interface AzureFirewallsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateTags operation. */\nexport type AzureFirewallsUpdateTagsResponse = AzureFirewall;\n\n/** Optional parameters. */\nexport interface AzureFirewallsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AzureFirewallsListResponse = AzureFirewallListResult;\n\n/** Optional parameters. */\nexport interface AzureFirewallsListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type AzureFirewallsListAllResponse = AzureFirewallListResult;\n\n/** Optional parameters. */\nexport interface AzureFirewallsListLearnedPrefixesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listLearnedPrefixes operation. */\nexport type AzureFirewallsListLearnedPrefixesResponse = IPPrefixesList;\n\n/** Optional parameters. */\nexport interface AzureFirewallsPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the packetCapture operation. */\nexport type AzureFirewallsPacketCaptureResponse =\n  AzureFirewallsPacketCaptureHeaders;\n\n/** Optional parameters. */\nexport interface AzureFirewallsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AzureFirewallsListNextResponse = AzureFirewallListResult;\n\n/** Optional parameters. */\nexport interface AzureFirewallsListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type AzureFirewallsListAllNextResponse = AzureFirewallListResult;\n\n/** Optional parameters. */\nexport interface AzureFirewallFqdnTagsListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type AzureFirewallFqdnTagsListAllResponse =\n  AzureFirewallFqdnTagListResult;\n\n/** Optional parameters. */\nexport interface AzureFirewallFqdnTagsListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type AzureFirewallFqdnTagsListAllNextResponse =\n  AzureFirewallFqdnTagListResult;\n\n/** Optional parameters. */\nexport interface WebCategoriesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands resourceIds back referenced by the azureWebCategory resource. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type WebCategoriesGetResponse = AzureWebCategory;\n\n/** Optional parameters. */\nexport interface WebCategoriesListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type WebCategoriesListBySubscriptionResponse =\n  AzureWebCategoryListResult;\n\n/** Optional parameters. */\nexport interface WebCategoriesListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type WebCategoriesListBySubscriptionNextResponse =\n  AzureWebCategoryListResult;\n\n/** Optional parameters. */\nexport interface BastionHostsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BastionHostsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BastionHostsGetResponse = BastionHost;\n\n/** Optional parameters. */\nexport interface BastionHostsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BastionHostsCreateOrUpdateResponse = BastionHost;\n\n/** Optional parameters. */\nexport interface BastionHostsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateTags operation. */\nexport type BastionHostsUpdateTagsResponse = BastionHost;\n\n/** Optional parameters. */\nexport interface BastionHostsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BastionHostsListResponse = BastionHostListResult;\n\n/** Optional parameters. */\nexport interface BastionHostsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type BastionHostsListByResourceGroupResponse = BastionHostListResult;\n\n/** Optional parameters. */\nexport interface BastionHostsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BastionHostsListNextResponse = BastionHostListResult;\n\n/** Optional parameters. */\nexport interface BastionHostsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type BastionHostsListByResourceGroupNextResponse = BastionHostListResult;\n\n/** Optional parameters. */\nexport interface PutBastionShareableLinkOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the putBastionShareableLink operation. */\nexport type PutBastionShareableLinkResponse = BastionShareableLinkListResult;\n\n/** Optional parameters. */\nexport interface DeleteBastionShareableLinkOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeleteBastionShareableLinkByTokenOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the deleteBastionShareableLinkByToken operation. */\nexport type DeleteBastionShareableLinkByTokenResponse =\n  NetworkManagementClientDeleteBastionShareableLinkByTokenHeaders;\n\n/** Optional parameters. */\nexport interface GetBastionShareableLinkOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getBastionShareableLink operation. */\nexport type GetBastionShareableLinkResponse = BastionShareableLinkListResult;\n\n/** Optional parameters. */\nexport interface GetActiveSessionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getActiveSessions operation. */\nexport type GetActiveSessionsResponse = BastionActiveSessionListResult;\n\n/** Optional parameters. */\nexport interface DisconnectActiveSessionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the disconnectActiveSessions operation. */\nexport type DisconnectActiveSessionsResponse = BastionSessionDeleteResult;\n\n/** Optional parameters. */\nexport interface CheckDnsNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkDnsNameAvailability operation. */\nexport type CheckDnsNameAvailabilityResponse = DnsNameAvailabilityResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteProviderPortOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the expressRouteProviderPort operation. */\nexport type ExpressRouteProviderPortResponse = ExpressRouteProviderPort;\n\n/** Optional parameters. */\nexport interface ListActiveConnectivityConfigurationsOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n}\n\n/** Contains response data for the listActiveConnectivityConfigurations operation. */\nexport type ListActiveConnectivityConfigurationsResponse =\n  ActiveConnectivityConfigurationsListResult;\n\n/** Optional parameters. */\nexport interface ListActiveSecurityAdminRulesOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n}\n\n/** Contains response data for the listActiveSecurityAdminRules operation. */\nexport type ListActiveSecurityAdminRulesResponse =\n  ActiveSecurityAdminRulesListResult;\n\n/** Optional parameters. */\nexport interface ListNetworkManagerEffectiveConnectivityConfigurationsOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n}\n\n/** Contains response data for the listNetworkManagerEffectiveConnectivityConfigurations operation. */\nexport type ListNetworkManagerEffectiveConnectivityConfigurationsResponse =\n  NetworkManagerEffectiveConnectivityConfigurationListResult;\n\n/** Optional parameters. */\nexport interface ListNetworkManagerEffectiveSecurityAdminRulesOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n}\n\n/** Contains response data for the listNetworkManagerEffectiveSecurityAdminRules operation. */\nexport type ListNetworkManagerEffectiveSecurityAdminRulesResponse =\n  NetworkManagerEffectiveSecurityAdminRulesListResult;\n\n/** Optional parameters. */\nexport interface SupportedSecurityProvidersOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the supportedSecurityProviders operation. */\nexport type SupportedSecurityProvidersResponse = VirtualWanSecurityProviders;\n\n/** Optional parameters. */\nexport interface GeneratevirtualwanvpnserverconfigurationvpnprofileOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the generatevirtualwanvpnserverconfigurationvpnprofile operation. */\nexport type GeneratevirtualwanvpnserverconfigurationvpnprofileResponse =\n  VpnProfileResponse;\n\n/** Optional parameters. */\nexport interface PutBastionShareableLinkNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the putBastionShareableLinkNext operation. */\nexport type PutBastionShareableLinkNextResponse =\n  BastionShareableLinkListResult;\n\n/** Optional parameters. */\nexport interface GetBastionShareableLinkNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getBastionShareableLinkNext operation. */\nexport type GetBastionShareableLinkNextResponse =\n  BastionShareableLinkListResult;\n\n/** Optional parameters. */\nexport interface GetActiveSessionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getActiveSessionsNext operation. */\nexport type GetActiveSessionsNextResponse = BastionActiveSessionListResult;\n\n/** Optional parameters. */\nexport interface DisconnectActiveSessionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the disconnectActiveSessionsNext operation. */\nexport type DisconnectActiveSessionsNextResponse = BastionSessionDeleteResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCloudServiceRoleInstanceNetworkInterfaces operation. */\nexport type NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListCloudServiceNetworkInterfacesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCloudServiceNetworkInterfaces operation. */\nexport type NetworkInterfacesListCloudServiceNetworkInterfacesResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesGetCloudServiceNetworkInterfaceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the getCloudServiceNetworkInterface operation. */\nexport type NetworkInterfacesGetCloudServiceNetworkInterfaceResponse =\n  NetworkInterface;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkInterfacesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type NetworkInterfacesGetResponse = NetworkInterface;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkInterfacesCreateOrUpdateResponse = NetworkInterface;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type NetworkInterfacesUpdateTagsResponse = NetworkInterface;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type NetworkInterfacesListAllResponse = NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkInterfacesListResponse = NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesGetEffectiveRouteTableOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getEffectiveRouteTable operation. */\nexport type NetworkInterfacesGetEffectiveRouteTableResponse =\n  EffectiveRouteListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listEffectiveNetworkSecurityGroups operation. */\nexport type NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse =\n  EffectiveNetworkSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetVMNetworkInterfaces operation. */\nexport type NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetNetworkInterfaces operation. */\nexport type NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the getVirtualMachineScaleSetNetworkInterface operation. */\nexport type NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceResponse =\n  NetworkInterface;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the listVirtualMachineScaleSetIpConfigurations operation. */\nexport type NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsResponse =\n  NetworkInterfaceIPConfigurationListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the getVirtualMachineScaleSetIpConfiguration operation. */\nexport type NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationResponse =\n  NetworkInterfaceIPConfiguration;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCloudServiceRoleInstanceNetworkInterfacesNext operation. */\nexport type NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesNextResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListCloudServiceNetworkInterfacesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCloudServiceNetworkInterfacesNext operation. */\nexport type NetworkInterfacesListCloudServiceNetworkInterfacesNextResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type NetworkInterfacesListAllNextResponse = NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkInterfacesListNextResponse = NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetVMNetworkInterfacesNext operation. */\nexport type NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesNextResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetNetworkInterfacesNext operation. */\nexport type NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesNextResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetIpConfigurationsNext operation. */\nexport type NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsNextResponse =\n  NetworkInterfaceIPConfigurationListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListCloudServicePublicIPAddressesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCloudServicePublicIPAddresses operation. */\nexport type PublicIPAddressesListCloudServicePublicIPAddressesResponse =\n  PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCloudServiceRoleInstancePublicIPAddresses operation. */\nexport type PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesResponse =\n  PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesGetCloudServicePublicIPAddressOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the getCloudServicePublicIPAddress operation. */\nexport type PublicIPAddressesGetCloudServicePublicIPAddressResponse =\n  PublicIPAddress;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PublicIPAddressesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type PublicIPAddressesGetResponse = PublicIPAddress;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PublicIPAddressesCreateOrUpdateResponse = PublicIPAddress;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type PublicIPAddressesUpdateTagsResponse = PublicIPAddress;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type PublicIPAddressesListAllResponse = PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PublicIPAddressesListResponse = PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesDdosProtectionStatusOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the ddosProtectionStatus operation. */\nexport type PublicIPAddressesDdosProtectionStatusResponse =\n  PublicIpDdosProtectionStatusResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetPublicIPAddresses operation. */\nexport type PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesResponse =\n  PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetVMPublicIPAddresses operation. */\nexport type PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesResponse =\n  PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddressOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the getVirtualMachineScaleSetPublicIPAddress operation. */\nexport type PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddressResponse =\n  PublicIPAddress;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListCloudServicePublicIPAddressesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCloudServicePublicIPAddressesNext operation. */\nexport type PublicIPAddressesListCloudServicePublicIPAddressesNextResponse =\n  PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCloudServiceRoleInstancePublicIPAddressesNext operation. */\nexport type PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesNextResponse =\n  PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type PublicIPAddressesListAllNextResponse = PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PublicIPAddressesListNextResponse = PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetPublicIPAddressesNext operation. */\nexport type PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesNextResponse =\n  PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVirtualMachineScaleSetVMPublicIPAddressesNext operation. */\nexport type PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesNextResponse =\n  PublicIPAddressListResult;\n\n/** Optional parameters. */\nexport interface VipSwapGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VipSwapGetResponse = SwapResource;\n\n/** Optional parameters. */\nexport interface VipSwapCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VipSwapListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VipSwapListResponse = SwapResourceListResult;\n\n/** Optional parameters. */\nexport interface CustomIPPrefixesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CustomIPPrefixesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type CustomIPPrefixesGetResponse = CustomIpPrefix;\n\n/** Optional parameters. */\nexport interface CustomIPPrefixesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CustomIPPrefixesCreateOrUpdateResponse = CustomIpPrefix;\n\n/** Optional parameters. */\nexport interface CustomIPPrefixesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type CustomIPPrefixesUpdateTagsResponse = CustomIpPrefix;\n\n/** Optional parameters. */\nexport interface CustomIPPrefixesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type CustomIPPrefixesListAllResponse = CustomIpPrefixListResult;\n\n/** Optional parameters. */\nexport interface CustomIPPrefixesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type CustomIPPrefixesListResponse = CustomIpPrefixListResult;\n\n/** Optional parameters. */\nexport interface CustomIPPrefixesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type CustomIPPrefixesListAllNextResponse = CustomIpPrefixListResult;\n\n/** Optional parameters. */\nexport interface CustomIPPrefixesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type CustomIPPrefixesListNextResponse = CustomIpPrefixListResult;\n\n/** Optional parameters. */\nexport interface DdosCustomPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DdosCustomPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DdosCustomPoliciesGetResponse = DdosCustomPolicy;\n\n/** Optional parameters. */\nexport interface DdosCustomPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DdosCustomPoliciesCreateOrUpdateResponse = DdosCustomPolicy;\n\n/** Optional parameters. */\nexport interface DdosCustomPoliciesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type DdosCustomPoliciesUpdateTagsResponse = DdosCustomPolicy;\n\n/** Optional parameters. */\nexport interface DdosProtectionPlansDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DdosProtectionPlansGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DdosProtectionPlansGetResponse = DdosProtectionPlan;\n\n/** Optional parameters. */\nexport interface DdosProtectionPlansCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DdosProtectionPlansCreateOrUpdateResponse = DdosProtectionPlan;\n\n/** Optional parameters. */\nexport interface DdosProtectionPlansUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type DdosProtectionPlansUpdateTagsResponse = DdosProtectionPlan;\n\n/** Optional parameters. */\nexport interface DdosProtectionPlansListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DdosProtectionPlansListResponse = DdosProtectionPlanListResult;\n\n/** Optional parameters. */\nexport interface DdosProtectionPlansListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DdosProtectionPlansListByResourceGroupResponse =\n  DdosProtectionPlanListResult;\n\n/** Optional parameters. */\nexport interface DdosProtectionPlansListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DdosProtectionPlansListNextResponse = DdosProtectionPlanListResult;\n\n/** Optional parameters. */\nexport interface DdosProtectionPlansListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DdosProtectionPlansListByResourceGroupNextResponse =\n  DdosProtectionPlanListResult;\n\n/** Optional parameters. */\nexport interface DscpConfigurationCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DscpConfigurationCreateOrUpdateResponse = DscpConfiguration;\n\n/** Optional parameters. */\nexport interface DscpConfigurationDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DscpConfigurationGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DscpConfigurationGetResponse = DscpConfiguration;\n\n/** Optional parameters. */\nexport interface DscpConfigurationListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DscpConfigurationListResponse = DscpConfigurationListResult;\n\n/** Optional parameters. */\nexport interface DscpConfigurationListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type DscpConfigurationListAllResponse = DscpConfigurationListResult;\n\n/** Optional parameters. */\nexport interface DscpConfigurationListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DscpConfigurationListNextResponse = DscpConfigurationListResult;\n\n/** Optional parameters. */\nexport interface DscpConfigurationListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type DscpConfigurationListAllNextResponse = DscpConfigurationListResult;\n\n/** Optional parameters. */\nexport interface AvailableEndpointServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AvailableEndpointServicesListResponse = EndpointServicesListResult;\n\n/** Optional parameters. */\nexport interface AvailableEndpointServicesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AvailableEndpointServicesListNextResponse =\n  EndpointServicesListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitAuthorizationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitAuthorizationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteCircuitAuthorizationsGetResponse =\n  ExpressRouteCircuitAuthorization;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitAuthorizationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRouteCircuitAuthorizationsCreateOrUpdateResponse =\n  ExpressRouteCircuitAuthorization;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitAuthorizationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteCircuitAuthorizationsListResponse =\n  AuthorizationListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitAuthorizationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRouteCircuitAuthorizationsListNextResponse =\n  AuthorizationListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitPeeringsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitPeeringsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteCircuitPeeringsGetResponse = ExpressRouteCircuitPeering;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitPeeringsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRouteCircuitPeeringsCreateOrUpdateResponse =\n  ExpressRouteCircuitPeering;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitPeeringsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteCircuitPeeringsListResponse =\n  ExpressRouteCircuitPeeringListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitPeeringsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRouteCircuitPeeringsListNextResponse =\n  ExpressRouteCircuitPeeringListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteCircuitConnectionsGetResponse =\n  ExpressRouteCircuitConnection;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRouteCircuitConnectionsCreateOrUpdateResponse =\n  ExpressRouteCircuitConnection;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteCircuitConnectionsListResponse =\n  ExpressRouteCircuitConnectionListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRouteCircuitConnectionsListNextResponse =\n  ExpressRouteCircuitConnectionListResult;\n\n/** Optional parameters. */\nexport interface PeerExpressRouteCircuitConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PeerExpressRouteCircuitConnectionsGetResponse =\n  PeerExpressRouteCircuitConnection;\n\n/** Optional parameters. */\nexport interface PeerExpressRouteCircuitConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PeerExpressRouteCircuitConnectionsListResponse =\n  PeerExpressRouteCircuitConnectionListResult;\n\n/** Optional parameters. */\nexport interface PeerExpressRouteCircuitConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PeerExpressRouteCircuitConnectionsListNextResponse =\n  PeerExpressRouteCircuitConnectionListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteCircuitsGetResponse = ExpressRouteCircuit;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRouteCircuitsCreateOrUpdateResponse = ExpressRouteCircuit;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type ExpressRouteCircuitsUpdateTagsResponse = ExpressRouteCircuit;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsListArpTableOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listArpTable operation. */\nexport type ExpressRouteCircuitsListArpTableResponse =\n  ExpressRouteCircuitsArpTableListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsListRoutesTableOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listRoutesTable operation. */\nexport type ExpressRouteCircuitsListRoutesTableResponse =\n  ExpressRouteCircuitsRoutesTableListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsListRoutesTableSummaryOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listRoutesTableSummary operation. */\nexport type ExpressRouteCircuitsListRoutesTableSummaryResponse =\n  ExpressRouteCircuitsRoutesTableSummaryListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsGetStatsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getStats operation. */\nexport type ExpressRouteCircuitsGetStatsResponse = ExpressRouteCircuitStats;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsGetPeeringStatsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getPeeringStats operation. */\nexport type ExpressRouteCircuitsGetPeeringStatsResponse =\n  ExpressRouteCircuitStats;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteCircuitsListResponse = ExpressRouteCircuitListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type ExpressRouteCircuitsListAllResponse = ExpressRouteCircuitListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRouteCircuitsListNextResponse =\n  ExpressRouteCircuitListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCircuitsListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type ExpressRouteCircuitsListAllNextResponse =\n  ExpressRouteCircuitListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteServiceProvidersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteServiceProvidersListResponse =\n  ExpressRouteServiceProviderListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteServiceProvidersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRouteServiceProvidersListNextResponse =\n  ExpressRouteServiceProviderListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=name eq '{circuitServiceKey}'. */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteCrossConnectionsListResponse =\n  ExpressRouteCrossConnectionListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ExpressRouteCrossConnectionsListByResourceGroupResponse =\n  ExpressRouteCrossConnectionListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteCrossConnectionsGetResponse =\n  ExpressRouteCrossConnection;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRouteCrossConnectionsCreateOrUpdateResponse =\n  ExpressRouteCrossConnection;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type ExpressRouteCrossConnectionsUpdateTagsResponse =\n  ExpressRouteCrossConnection;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsListArpTableOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listArpTable operation. */\nexport type ExpressRouteCrossConnectionsListArpTableResponse =\n  ExpressRouteCircuitsArpTableListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsListRoutesTableSummaryOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listRoutesTableSummary operation. */\nexport type ExpressRouteCrossConnectionsListRoutesTableSummaryResponse =\n  ExpressRouteCrossConnectionsRoutesTableSummaryListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsListRoutesTableOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listRoutesTable operation. */\nexport type ExpressRouteCrossConnectionsListRoutesTableResponse =\n  ExpressRouteCircuitsRoutesTableListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRouteCrossConnectionsListNextResponse =\n  ExpressRouteCrossConnectionListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ExpressRouteCrossConnectionsListByResourceGroupNextResponse =\n  ExpressRouteCrossConnectionListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionPeeringsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteCrossConnectionPeeringsListResponse =\n  ExpressRouteCrossConnectionPeeringList;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionPeeringsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionPeeringsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteCrossConnectionPeeringsGetResponse =\n  ExpressRouteCrossConnectionPeering;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionPeeringsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRouteCrossConnectionPeeringsCreateOrUpdateResponse =\n  ExpressRouteCrossConnectionPeering;\n\n/** Optional parameters. */\nexport interface ExpressRouteCrossConnectionPeeringsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRouteCrossConnectionPeeringsListNextResponse =\n  ExpressRouteCrossConnectionPeeringList;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsLocationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRoutePortsLocationsListResponse =\n  ExpressRoutePortsLocationListResult;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsLocationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRoutePortsLocationsGetResponse = ExpressRoutePortsLocation;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsLocationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRoutePortsLocationsListNextResponse =\n  ExpressRoutePortsLocationListResult;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRoutePortsGetResponse = ExpressRoutePort;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRoutePortsCreateOrUpdateResponse = ExpressRoutePort;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type ExpressRoutePortsUpdateTagsResponse = ExpressRoutePort;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ExpressRoutePortsListByResourceGroupResponse =\n  ExpressRoutePortListResult;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRoutePortsListResponse = ExpressRoutePortListResult;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsGenerateLOAOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the generateLOA operation. */\nexport type ExpressRoutePortsGenerateLOAResponse =\n  GenerateExpressRoutePortsLOAResult;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ExpressRoutePortsListByResourceGroupNextResponse =\n  ExpressRoutePortListResult;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRoutePortsListNextResponse = ExpressRoutePortListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteLinksGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteLinksGetResponse = ExpressRouteLink;\n\n/** Optional parameters. */\nexport interface ExpressRouteLinksListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteLinksListResponse = ExpressRouteLinkListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteLinksListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRouteLinksListNextResponse = ExpressRouteLinkListResult;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortAuthorizationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRoutePortAuthorizationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRoutePortAuthorizationsGetResponse =\n  ExpressRoutePortAuthorization;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortAuthorizationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRoutePortAuthorizationsCreateOrUpdateResponse =\n  ExpressRoutePortAuthorization;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortAuthorizationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRoutePortAuthorizationsListResponse =\n  ExpressRoutePortAuthorizationListResult;\n\n/** Optional parameters. */\nexport interface ExpressRoutePortAuthorizationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ExpressRoutePortAuthorizationsListNextResponse =\n  ExpressRoutePortAuthorizationListResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteProviderPortsLocationListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=location eq '{state}'. */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteProviderPortsLocationListResponse =\n  ExpressRouteProviderPortListResult;\n\n/** Optional parameters. */\nexport interface FirewallPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface FirewallPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type FirewallPoliciesGetResponse = FirewallPolicy;\n\n/** Optional parameters. */\nexport interface FirewallPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type FirewallPoliciesCreateOrUpdateResponse = FirewallPolicy;\n\n/** Optional parameters. */\nexport interface FirewallPoliciesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type FirewallPoliciesUpdateTagsResponse = FirewallPolicy;\n\n/** Optional parameters. */\nexport interface FirewallPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type FirewallPoliciesListResponse = FirewallPolicyListResult;\n\n/** Optional parameters. */\nexport interface FirewallPoliciesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type FirewallPoliciesListAllResponse = FirewallPolicyListResult;\n\n/** Optional parameters. */\nexport interface FirewallPoliciesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type FirewallPoliciesListNextResponse = FirewallPolicyListResult;\n\n/** Optional parameters. */\nexport interface FirewallPoliciesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type FirewallPoliciesListAllNextResponse = FirewallPolicyListResult;\n\n/** Optional parameters. */\nexport interface FirewallPolicyRuleCollectionGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface FirewallPolicyRuleCollectionGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type FirewallPolicyRuleCollectionGroupsGetResponse =\n  FirewallPolicyRuleCollectionGroup;\n\n/** Optional parameters. */\nexport interface FirewallPolicyRuleCollectionGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type FirewallPolicyRuleCollectionGroupsCreateOrUpdateResponse =\n  FirewallPolicyRuleCollectionGroup;\n\n/** Optional parameters. */\nexport interface FirewallPolicyRuleCollectionGroupsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type FirewallPolicyRuleCollectionGroupsListResponse =\n  FirewallPolicyRuleCollectionGroupListResult;\n\n/** Optional parameters. */\nexport interface FirewallPolicyRuleCollectionGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type FirewallPolicyRuleCollectionGroupsListNextResponse =\n  FirewallPolicyRuleCollectionGroupListResult;\n\n/** Optional parameters. */\nexport interface FirewallPolicyIdpsSignaturesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type FirewallPolicyIdpsSignaturesListResponse = QueryResults;\n\n/** Optional parameters. */\nexport interface FirewallPolicyIdpsSignaturesOverridesPatchOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the patch operation. */\nexport type FirewallPolicyIdpsSignaturesOverridesPatchResponse =\n  SignaturesOverrides;\n\n/** Optional parameters. */\nexport interface FirewallPolicyIdpsSignaturesOverridesPutOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the put operation. */\nexport type FirewallPolicyIdpsSignaturesOverridesPutResponse =\n  SignaturesOverrides;\n\n/** Optional parameters. */\nexport interface FirewallPolicyIdpsSignaturesOverridesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type FirewallPolicyIdpsSignaturesOverridesGetResponse =\n  SignaturesOverrides;\n\n/** Optional parameters. */\nexport interface FirewallPolicyIdpsSignaturesOverridesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type FirewallPolicyIdpsSignaturesOverridesListResponse =\n  SignaturesOverridesList;\n\n/** Optional parameters. */\nexport interface FirewallPolicyIdpsSignaturesFilterValuesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type FirewallPolicyIdpsSignaturesFilterValuesListResponse =\n  SignatureOverridesFilterValuesResponse;\n\n/** Optional parameters. */\nexport interface FirewallPolicyDraftsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type FirewallPolicyDraftsCreateOrUpdateResponse = FirewallPolicyDraft;\n\n/** Optional parameters. */\nexport interface FirewallPolicyDraftsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface FirewallPolicyDraftsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type FirewallPolicyDraftsGetResponse = FirewallPolicyDraft;\n\n/** Optional parameters. */\nexport interface FirewallPolicyDeploymentsDeployOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the deploy operation. */\nexport type FirewallPolicyDeploymentsDeployResponse =\n  FirewallPolicyDeploymentsDeployHeaders;\n\n/** Optional parameters. */\nexport interface FirewallPolicyRuleCollectionGroupDraftsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface FirewallPolicyRuleCollectionGroupDraftsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type FirewallPolicyRuleCollectionGroupDraftsCreateOrUpdateResponse =\n  FirewallPolicyRuleCollectionGroupDraft;\n\n/** Optional parameters. */\nexport interface FirewallPolicyRuleCollectionGroupDraftsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type FirewallPolicyRuleCollectionGroupDraftsGetResponse =\n  FirewallPolicyRuleCollectionGroupDraft;\n\n/** Optional parameters. */\nexport interface IpamPoolsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional skip token. */\n  skipToken?: string;\n  /** Optional num entries to skip. */\n  skip?: number;\n  /** Optional num entries to show. */\n  top?: number;\n  /** Optional key by which to sort. */\n  sortKey?: string;\n  /** Optional sort value for pagination. */\n  sortValue?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type IpamPoolsListResponse = IpamPoolList;\n\n/** Optional parameters. */\nexport interface IpamPoolsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type IpamPoolsCreateResponse = IpamPool;\n\n/** Optional parameters. */\nexport interface IpamPoolsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Pool resource object to update partially. */\n  body?: IpamPoolUpdate;\n}\n\n/** Contains response data for the update operation. */\nexport type IpamPoolsUpdateResponse = IpamPool;\n\n/** Optional parameters. */\nexport interface IpamPoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type IpamPoolsGetResponse = IpamPool;\n\n/** Optional parameters. */\nexport interface IpamPoolsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type IpamPoolsDeleteResponse = IpamPoolsDeleteHeaders;\n\n/** Optional parameters. */\nexport interface IpamPoolsGetPoolUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getPoolUsage operation. */\nexport type IpamPoolsGetPoolUsageResponse = PoolUsage;\n\n/** Optional parameters. */\nexport interface IpamPoolsListAssociatedResourcesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAssociatedResources operation. */\nexport type IpamPoolsListAssociatedResourcesResponse = PoolAssociationList;\n\n/** Optional parameters. */\nexport interface IpamPoolsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type IpamPoolsListNextResponse = IpamPoolList;\n\n/** Optional parameters. */\nexport interface IpamPoolsListAssociatedResourcesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAssociatedResourcesNext operation. */\nexport type IpamPoolsListAssociatedResourcesNextResponse = PoolAssociationList;\n\n/** Optional parameters. */\nexport interface StaticCidrsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional skip token. */\n  skipToken?: string;\n  /** Optional num entries to skip. */\n  skip?: number;\n  /** Optional num entries to show. */\n  top?: number;\n  /** Optional key by which to sort. */\n  sortKey?: string;\n  /** Optional sort value for pagination. */\n  sortValue?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type StaticCidrsListResponse = StaticCidrList;\n\n/** Optional parameters. */\nexport interface StaticCidrsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** StaticCidr resource object to create/update. */\n  body?: StaticCidr;\n}\n\n/** Contains response data for the create operation. */\nexport type StaticCidrsCreateResponse = StaticCidr;\n\n/** Optional parameters. */\nexport interface StaticCidrsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type StaticCidrsGetResponse = StaticCidr;\n\n/** Optional parameters. */\nexport interface StaticCidrsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type StaticCidrsDeleteResponse = StaticCidrsDeleteHeaders;\n\n/** Optional parameters. */\nexport interface StaticCidrsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StaticCidrsListNextResponse = StaticCidrList;\n\n/** Optional parameters. */\nexport interface IpAllocationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface IpAllocationsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type IpAllocationsGetResponse = IpAllocation;\n\n/** Optional parameters. */\nexport interface IpAllocationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type IpAllocationsCreateOrUpdateResponse = IpAllocation;\n\n/** Optional parameters. */\nexport interface IpAllocationsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type IpAllocationsUpdateTagsResponse = IpAllocation;\n\n/** Optional parameters. */\nexport interface IpAllocationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type IpAllocationsListResponse = IpAllocationListResult;\n\n/** Optional parameters. */\nexport interface IpAllocationsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type IpAllocationsListByResourceGroupResponse = IpAllocationListResult;\n\n/** Optional parameters. */\nexport interface IpAllocationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type IpAllocationsListNextResponse = IpAllocationListResult;\n\n/** Optional parameters. */\nexport interface IpAllocationsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type IpAllocationsListByResourceGroupNextResponse =\n  IpAllocationListResult;\n\n/** Optional parameters. */\nexport interface IpGroupsGetOptionalParams extends coreClient.OperationOptions {\n  /** Expands resourceIds (of Firewalls/Network Security Groups etc.) back referenced by the IpGroups resource. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type IpGroupsGetResponse = IpGroup;\n\n/** Optional parameters. */\nexport interface IpGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type IpGroupsCreateOrUpdateResponse = IpGroup;\n\n/** Optional parameters. */\nexport interface IpGroupsUpdateGroupsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateGroups operation. */\nexport type IpGroupsUpdateGroupsResponse = IpGroup;\n\n/** Optional parameters. */\nexport interface IpGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface IpGroupsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type IpGroupsListByResourceGroupResponse = IpGroupListResult;\n\n/** Optional parameters. */\nexport interface IpGroupsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type IpGroupsListResponse = IpGroupListResult;\n\n/** Optional parameters. */\nexport interface IpGroupsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type IpGroupsListByResourceGroupNextResponse = IpGroupListResult;\n\n/** Optional parameters. */\nexport interface IpGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type IpGroupsListNextResponse = IpGroupListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface LoadBalancersGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type LoadBalancersGetResponse = LoadBalancer;\n\n/** Optional parameters. */\nexport interface LoadBalancersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LoadBalancersCreateOrUpdateResponse = LoadBalancer;\n\n/** Optional parameters. */\nexport interface LoadBalancersUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type LoadBalancersUpdateTagsResponse = LoadBalancer;\n\n/** Optional parameters. */\nexport interface LoadBalancersListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type LoadBalancersListAllResponse = LoadBalancerListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LoadBalancersListResponse = LoadBalancerListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancersSwapPublicIpAddressesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface LoadBalancersListInboundNatRulePortMappingsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listInboundNatRulePortMappings operation. */\nexport type LoadBalancersListInboundNatRulePortMappingsResponse =\n  BackendAddressInboundNatRulePortMappings;\n\n/** Optional parameters. */\nexport interface LoadBalancersMigrateToIpBasedOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters supplied to the migrateToIpBased Api. */\n  parameters?: MigrateLoadBalancerToIpBasedRequest;\n}\n\n/** Contains response data for the migrateToIpBased operation. */\nexport type LoadBalancersMigrateToIpBasedResponse = MigratedPools;\n\n/** Optional parameters. */\nexport interface LoadBalancersListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type LoadBalancersListAllNextResponse = LoadBalancerListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type LoadBalancersListNextResponse = LoadBalancerListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerBackendAddressPoolsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LoadBalancerBackendAddressPoolsListResponse =\n  LoadBalancerBackendAddressPoolListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerBackendAddressPoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LoadBalancerBackendAddressPoolsGetResponse = BackendAddressPool;\n\n/** Optional parameters. */\nexport interface LoadBalancerBackendAddressPoolsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LoadBalancerBackendAddressPoolsCreateOrUpdateResponse =\n  BackendAddressPool;\n\n/** Optional parameters. */\nexport interface LoadBalancerBackendAddressPoolsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface LoadBalancerBackendAddressPoolsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type LoadBalancerBackendAddressPoolsListNextResponse =\n  LoadBalancerBackendAddressPoolListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerFrontendIPConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LoadBalancerFrontendIPConfigurationsListResponse =\n  LoadBalancerFrontendIPConfigurationListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerFrontendIPConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LoadBalancerFrontendIPConfigurationsGetResponse =\n  FrontendIPConfiguration;\n\n/** Optional parameters. */\nexport interface LoadBalancerFrontendIPConfigurationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type LoadBalancerFrontendIPConfigurationsListNextResponse =\n  LoadBalancerFrontendIPConfigurationListResult;\n\n/** Optional parameters. */\nexport interface InboundNatRulesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type InboundNatRulesListResponse = InboundNatRuleListResult;\n\n/** Optional parameters. */\nexport interface InboundNatRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface InboundNatRulesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type InboundNatRulesGetResponse = InboundNatRule;\n\n/** Optional parameters. */\nexport interface InboundNatRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type InboundNatRulesCreateOrUpdateResponse = InboundNatRule;\n\n/** Optional parameters. */\nexport interface InboundNatRulesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type InboundNatRulesListNextResponse = InboundNatRuleListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerLoadBalancingRulesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LoadBalancerLoadBalancingRulesListResponse =\n  LoadBalancerLoadBalancingRuleListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerLoadBalancingRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LoadBalancerLoadBalancingRulesGetResponse = LoadBalancingRule;\n\n/** Optional parameters. */\nexport interface LoadBalancerLoadBalancingRulesHealthOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the health operation. */\nexport type LoadBalancerLoadBalancingRulesHealthResponse =\n  LoadBalancerHealthPerRule;\n\n/** Optional parameters. */\nexport interface LoadBalancerLoadBalancingRulesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type LoadBalancerLoadBalancingRulesListNextResponse =\n  LoadBalancerLoadBalancingRuleListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerOutboundRulesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LoadBalancerOutboundRulesListResponse =\n  LoadBalancerOutboundRuleListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerOutboundRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LoadBalancerOutboundRulesGetResponse = OutboundRule;\n\n/** Optional parameters. */\nexport interface LoadBalancerOutboundRulesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type LoadBalancerOutboundRulesListNextResponse =\n  LoadBalancerOutboundRuleListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerNetworkInterfacesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LoadBalancerNetworkInterfacesListResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerNetworkInterfacesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type LoadBalancerNetworkInterfacesListNextResponse =\n  NetworkInterfaceListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerProbesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LoadBalancerProbesListResponse = LoadBalancerProbeListResult;\n\n/** Optional parameters. */\nexport interface LoadBalancerProbesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LoadBalancerProbesGetResponse = Probe;\n\n/** Optional parameters. */\nexport interface LoadBalancerProbesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type LoadBalancerProbesListNextResponse = LoadBalancerProbeListResult;\n\n/** Optional parameters. */\nexport interface NatGatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NatGatewaysGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type NatGatewaysGetResponse = NatGateway;\n\n/** Optional parameters. */\nexport interface NatGatewaysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NatGatewaysCreateOrUpdateResponse = NatGateway;\n\n/** Optional parameters. */\nexport interface NatGatewaysUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type NatGatewaysUpdateTagsResponse = NatGateway;\n\n/** Optional parameters. */\nexport interface NatGatewaysListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type NatGatewaysListAllResponse = NatGatewayListResult;\n\n/** Optional parameters. */\nexport interface NatGatewaysListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NatGatewaysListResponse = NatGatewayListResult;\n\n/** Optional parameters. */\nexport interface NatGatewaysListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type NatGatewaysListAllNextResponse = NatGatewayListResult;\n\n/** Optional parameters. */\nexport interface NatGatewaysListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NatGatewaysListNextResponse = NatGatewayListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceIPConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkInterfaceIPConfigurationsListResponse =\n  NetworkInterfaceIPConfigurationListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceIPConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NetworkInterfaceIPConfigurationsGetResponse =\n  NetworkInterfaceIPConfiguration;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceIPConfigurationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkInterfaceIPConfigurationsListNextResponse =\n  NetworkInterfaceIPConfigurationListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceLoadBalancersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkInterfaceLoadBalancersListResponse =\n  NetworkInterfaceLoadBalancerListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceLoadBalancersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkInterfaceLoadBalancersListNextResponse =\n  NetworkInterfaceLoadBalancerListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceTapConfigurationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkInterfaceTapConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NetworkInterfaceTapConfigurationsGetResponse =\n  NetworkInterfaceTapConfiguration;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceTapConfigurationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkInterfaceTapConfigurationsCreateOrUpdateResponse =\n  NetworkInterfaceTapConfiguration;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceTapConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkInterfaceTapConfigurationsListResponse =\n  NetworkInterfaceTapConfigurationListResult;\n\n/** Optional parameters. */\nexport interface NetworkInterfaceTapConfigurationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkInterfaceTapConfigurationsListNextResponse =\n  NetworkInterfaceTapConfigurationListResult;\n\n/** Optional parameters. */\nexport interface NetworkManagersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NetworkManagersGetResponse = NetworkManager;\n\n/** Optional parameters. */\nexport interface NetworkManagersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkManagersCreateOrUpdateResponse = NetworkManager;\n\n/** Optional parameters. */\nexport interface NetworkManagersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkManagersPatchOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the patch operation. */\nexport type NetworkManagersPatchResponse = NetworkManager;\n\n/** Optional parameters. */\nexport interface NetworkManagersListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the listBySubscription operation. */\nexport type NetworkManagersListBySubscriptionResponse =\n  NetworkManagerListResult;\n\n/** Optional parameters. */\nexport interface NetworkManagersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type NetworkManagersListResponse = NetworkManagerListResult;\n\n/** Optional parameters. */\nexport interface NetworkManagersListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type NetworkManagersListBySubscriptionNextResponse =\n  NetworkManagerListResult;\n\n/** Optional parameters. */\nexport interface NetworkManagersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkManagersListNextResponse = NetworkManagerListResult;\n\n/** Optional parameters. */\nexport interface NetworkManagerCommitsPostOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the post operation. */\nexport type NetworkManagerCommitsPostResponse = NetworkManagerCommit;\n\n/** Optional parameters. */\nexport interface NetworkManagerDeploymentStatusListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type NetworkManagerDeploymentStatusListResponse =\n  NetworkManagerDeploymentStatusListResult;\n\n/** Optional parameters. */\nexport interface SubscriptionNetworkManagerConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SubscriptionNetworkManagerConnectionsCreateOrUpdateResponse =\n  NetworkManagerConnection;\n\n/** Optional parameters. */\nexport interface SubscriptionNetworkManagerConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SubscriptionNetworkManagerConnectionsGetResponse =\n  NetworkManagerConnection;\n\n/** Optional parameters. */\nexport interface SubscriptionNetworkManagerConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SubscriptionNetworkManagerConnectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type SubscriptionNetworkManagerConnectionsListResponse =\n  NetworkManagerConnectionListResult;\n\n/** Optional parameters. */\nexport interface SubscriptionNetworkManagerConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SubscriptionNetworkManagerConnectionsListNextResponse =\n  NetworkManagerConnectionListResult;\n\n/** Optional parameters. */\nexport interface ManagementGroupNetworkManagerConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagementGroupNetworkManagerConnectionsCreateOrUpdateResponse =\n  NetworkManagerConnection;\n\n/** Optional parameters. */\nexport interface ManagementGroupNetworkManagerConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagementGroupNetworkManagerConnectionsGetResponse =\n  NetworkManagerConnection;\n\n/** Optional parameters. */\nexport interface ManagementGroupNetworkManagerConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagementGroupNetworkManagerConnectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ManagementGroupNetworkManagerConnectionsListResponse =\n  NetworkManagerConnectionListResult;\n\n/** Optional parameters. */\nexport interface ManagementGroupNetworkManagerConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ManagementGroupNetworkManagerConnectionsListNextResponse =\n  NetworkManagerConnectionListResult;\n\n/** Optional parameters. */\nexport interface ConnectivityConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConnectivityConfigurationsGetResponse = ConnectivityConfiguration;\n\n/** Optional parameters. */\nexport interface ConnectivityConfigurationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConnectivityConfigurationsCreateOrUpdateResponse =\n  ConnectivityConfiguration;\n\n/** Optional parameters. */\nexport interface ConnectivityConfigurationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ConnectivityConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ConnectivityConfigurationsListResponse =\n  ConnectivityConfigurationListResult;\n\n/** Optional parameters. */\nexport interface ConnectivityConfigurationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ConnectivityConfigurationsListNextResponse =\n  ConnectivityConfigurationListResult;\n\n/** Optional parameters. */\nexport interface NetworkGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NetworkGroupsGetResponse = NetworkGroup;\n\n/** Optional parameters. */\nexport interface NetworkGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkGroupsCreateOrUpdateResponse =\n  NetworkGroupsCreateOrUpdateHeaders & NetworkGroup;\n\n/** Optional parameters. */\nexport interface NetworkGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkGroupsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type NetworkGroupsListResponse = NetworkGroupListResult;\n\n/** Optional parameters. */\nexport interface NetworkGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkGroupsListNextResponse = NetworkGroupListResult;\n\n/** Optional parameters. */\nexport interface StaticMembersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type StaticMembersGetResponse = StaticMember;\n\n/** Optional parameters. */\nexport interface StaticMembersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type StaticMembersCreateOrUpdateResponse = StaticMember;\n\n/** Optional parameters. */\nexport interface StaticMembersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface StaticMembersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type StaticMembersListResponse = StaticMemberListResult;\n\n/** Optional parameters. */\nexport interface StaticMembersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StaticMembersListNextResponse = StaticMemberListResult;\n\n/** Optional parameters. */\nexport interface NetworkManagerRoutingConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type NetworkManagerRoutingConfigurationsListResponse =\n  NetworkManagerRoutingConfigurationListResult;\n\n/** Optional parameters. */\nexport interface NetworkManagerRoutingConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NetworkManagerRoutingConfigurationsGetResponse =\n  NetworkManagerRoutingConfiguration;\n\n/** Optional parameters. */\nexport interface NetworkManagerRoutingConfigurationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkManagerRoutingConfigurationsCreateOrUpdateResponse =\n  NetworkManagerRoutingConfiguration;\n\n/** Optional parameters. */\nexport interface NetworkManagerRoutingConfigurationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkManagerRoutingConfigurationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkManagerRoutingConfigurationsListNextResponse =\n  NetworkManagerRoutingConfigurationListResult;\n\n/** Optional parameters. */\nexport interface RoutingRuleCollectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type RoutingRuleCollectionsListResponse =\n  RoutingRuleCollectionListResult;\n\n/** Optional parameters. */\nexport interface RoutingRuleCollectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoutingRuleCollectionsGetResponse = RoutingRuleCollection;\n\n/** Optional parameters. */\nexport interface RoutingRuleCollectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RoutingRuleCollectionsCreateOrUpdateResponse =\n  RoutingRuleCollection;\n\n/** Optional parameters. */\nexport interface RoutingRuleCollectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RoutingRuleCollectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RoutingRuleCollectionsListNextResponse =\n  RoutingRuleCollectionListResult;\n\n/** Optional parameters. */\nexport interface RoutingRulesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type RoutingRulesListResponse = RoutingRuleListResult;\n\n/** Optional parameters. */\nexport interface RoutingRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoutingRulesGetResponse = RoutingRule;\n\n/** Optional parameters. */\nexport interface RoutingRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RoutingRulesCreateOrUpdateResponse = RoutingRule;\n\n/** Optional parameters. */\nexport interface RoutingRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RoutingRulesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RoutingRulesListNextResponse = RoutingRuleListResult;\n\n/** Optional parameters. */\nexport interface ScopeConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ScopeConnectionsCreateOrUpdateResponse = ScopeConnection;\n\n/** Optional parameters. */\nexport interface ScopeConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ScopeConnectionsGetResponse = ScopeConnection;\n\n/** Optional parameters. */\nexport interface ScopeConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ScopeConnectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ScopeConnectionsListResponse = ScopeConnectionListResult;\n\n/** Optional parameters. */\nexport interface ScopeConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ScopeConnectionsListNextResponse = ScopeConnectionListResult;\n\n/** Optional parameters. */\nexport interface SecurityAdminConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type SecurityAdminConfigurationsListResponse =\n  SecurityAdminConfigurationListResult;\n\n/** Optional parameters. */\nexport interface SecurityAdminConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecurityAdminConfigurationsGetResponse = SecurityAdminConfiguration;\n\n/** Optional parameters. */\nexport interface SecurityAdminConfigurationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SecurityAdminConfigurationsCreateOrUpdateResponse =\n  SecurityAdminConfiguration;\n\n/** Optional parameters. */\nexport interface SecurityAdminConfigurationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SecurityAdminConfigurationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SecurityAdminConfigurationsListNextResponse =\n  SecurityAdminConfigurationListResult;\n\n/** Optional parameters. */\nexport interface AdminRuleCollectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type AdminRuleCollectionsListResponse = AdminRuleCollectionListResult;\n\n/** Optional parameters. */\nexport interface AdminRuleCollectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AdminRuleCollectionsGetResponse = AdminRuleCollection;\n\n/** Optional parameters. */\nexport interface AdminRuleCollectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type AdminRuleCollectionsCreateOrUpdateResponse = AdminRuleCollection;\n\n/** Optional parameters. */\nexport interface AdminRuleCollectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AdminRuleCollectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AdminRuleCollectionsListNextResponse =\n  AdminRuleCollectionListResult;\n\n/** Optional parameters. */\nexport interface AdminRulesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type AdminRulesListResponse = AdminRuleListResult;\n\n/** Optional parameters. */\nexport interface AdminRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AdminRulesGetResponse = BaseAdminRuleUnion;\n\n/** Optional parameters. */\nexport interface AdminRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type AdminRulesCreateOrUpdateResponse = BaseAdminRuleUnion;\n\n/** Optional parameters. */\nexport interface AdminRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AdminRulesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AdminRulesListNextResponse = AdminRuleListResult;\n\n/** Optional parameters. */\nexport interface SecurityUserConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type SecurityUserConfigurationsListResponse =\n  SecurityUserConfigurationListResult;\n\n/** Optional parameters. */\nexport interface SecurityUserConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecurityUserConfigurationsGetResponse = SecurityUserConfiguration;\n\n/** Optional parameters. */\nexport interface SecurityUserConfigurationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SecurityUserConfigurationsCreateOrUpdateResponse =\n  SecurityUserConfiguration;\n\n/** Optional parameters. */\nexport interface SecurityUserConfigurationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SecurityUserConfigurationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SecurityUserConfigurationsListNextResponse =\n  SecurityUserConfigurationListResult;\n\n/** Optional parameters. */\nexport interface SecurityUserRuleCollectionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type SecurityUserRuleCollectionsListResponse =\n  SecurityUserRuleCollectionListResult;\n\n/** Optional parameters. */\nexport interface SecurityUserRuleCollectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecurityUserRuleCollectionsGetResponse = SecurityUserRuleCollection;\n\n/** Optional parameters. */\nexport interface SecurityUserRuleCollectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SecurityUserRuleCollectionsCreateOrUpdateResponse =\n  SecurityUserRuleCollection;\n\n/** Optional parameters. */\nexport interface SecurityUserRuleCollectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SecurityUserRuleCollectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SecurityUserRuleCollectionsListNextResponse =\n  SecurityUserRuleCollectionListResult;\n\n/** Optional parameters. */\nexport interface SecurityUserRulesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An optional query parameter which specifies the maximum number of records to be returned by the server. */\n  top?: number;\n  /** SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type SecurityUserRulesListResponse = SecurityUserRuleListResult;\n\n/** Optional parameters. */\nexport interface SecurityUserRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecurityUserRulesGetResponse = SecurityUserRule;\n\n/** Optional parameters. */\nexport interface SecurityUserRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SecurityUserRulesCreateOrUpdateResponse = SecurityUserRule;\n\n/** Optional parameters. */\nexport interface SecurityUserRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete. */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SecurityUserRulesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SecurityUserRulesListNextResponse = SecurityUserRuleListResult;\n\n/** Optional parameters. */\nexport interface NetworkProfilesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkProfilesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type NetworkProfilesGetResponse = NetworkProfile;\n\n/** Optional parameters. */\nexport interface NetworkProfilesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkProfilesCreateOrUpdateResponse = NetworkProfile;\n\n/** Optional parameters. */\nexport interface NetworkProfilesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type NetworkProfilesUpdateTagsResponse = NetworkProfile;\n\n/** Optional parameters. */\nexport interface NetworkProfilesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type NetworkProfilesListAllResponse = NetworkProfileListResult;\n\n/** Optional parameters. */\nexport interface NetworkProfilesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkProfilesListResponse = NetworkProfileListResult;\n\n/** Optional parameters. */\nexport interface NetworkProfilesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type NetworkProfilesListAllNextResponse = NetworkProfileListResult;\n\n/** Optional parameters. */\nexport interface NetworkProfilesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkProfilesListNextResponse = NetworkProfileListResult;\n\n/** Optional parameters. */\nexport interface NetworkSecurityGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkSecurityGroupsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type NetworkSecurityGroupsGetResponse = NetworkSecurityGroup;\n\n/** Optional parameters. */\nexport interface NetworkSecurityGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkSecurityGroupsCreateOrUpdateResponse = NetworkSecurityGroup;\n\n/** Optional parameters. */\nexport interface NetworkSecurityGroupsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type NetworkSecurityGroupsUpdateTagsResponse = NetworkSecurityGroup;\n\n/** Optional parameters. */\nexport interface NetworkSecurityGroupsListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type NetworkSecurityGroupsListAllResponse =\n  NetworkSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface NetworkSecurityGroupsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkSecurityGroupsListResponse = NetworkSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface NetworkSecurityGroupsListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type NetworkSecurityGroupsListAllNextResponse =\n  NetworkSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface NetworkSecurityGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkSecurityGroupsListNextResponse =\n  NetworkSecurityGroupListResult;\n\n/** Optional parameters. */\nexport interface SecurityRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SecurityRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecurityRulesGetResponse = SecurityRule;\n\n/** Optional parameters. */\nexport interface SecurityRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SecurityRulesCreateOrUpdateResponse = SecurityRule;\n\n/** Optional parameters. */\nexport interface SecurityRulesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SecurityRulesListResponse = SecurityRuleListResult;\n\n/** Optional parameters. */\nexport interface SecurityRulesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SecurityRulesListNextResponse = SecurityRuleListResult;\n\n/** Optional parameters. */\nexport interface DefaultSecurityRulesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DefaultSecurityRulesListResponse = SecurityRuleListResult;\n\n/** Optional parameters. */\nexport interface DefaultSecurityRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DefaultSecurityRulesGetResponse = SecurityRule;\n\n/** Optional parameters. */\nexport interface DefaultSecurityRulesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DefaultSecurityRulesListNextResponse = SecurityRuleListResult;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisIntentsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional skip token. */\n  skipToken?: string;\n  /** Optional num entries to skip. */\n  skip?: number;\n  /** Optional num entries to show. */\n  top?: number;\n  /** Optional key by which to sort. */\n  sortKey?: string;\n  /** Optional sort value for pagination. */\n  sortValue?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ReachabilityAnalysisIntentsListResponse =\n  ReachabilityAnalysisIntentListResult;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisIntentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ReachabilityAnalysisIntentsGetResponse = ReachabilityAnalysisIntent;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisIntentsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type ReachabilityAnalysisIntentsCreateResponse =\n  ReachabilityAnalysisIntent;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisIntentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisIntentsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ReachabilityAnalysisIntentsListNextResponse =\n  ReachabilityAnalysisIntentListResult;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisRunsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional skip token. */\n  skipToken?: string;\n  /** Optional num entries to skip. */\n  skip?: number;\n  /** Optional num entries to show. */\n  top?: number;\n  /** Optional key by which to sort. */\n  sortKey?: string;\n  /** Optional sort value for pagination. */\n  sortValue?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ReachabilityAnalysisRunsListResponse =\n  ReachabilityAnalysisRunListResult;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisRunsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ReachabilityAnalysisRunsGetResponse = ReachabilityAnalysisRun;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisRunsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type ReachabilityAnalysisRunsCreateResponse = ReachabilityAnalysisRun;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisRunsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type ReachabilityAnalysisRunsDeleteResponse =\n  ReachabilityAnalysisRunsDeleteHeaders;\n\n/** Optional parameters. */\nexport interface ReachabilityAnalysisRunsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ReachabilityAnalysisRunsListNextResponse =\n  ReachabilityAnalysisRunListResult;\n\n/** Optional parameters. */\nexport interface VerifierWorkspacesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional skip token. */\n  skipToken?: string;\n  /** Optional num entries to skip. */\n  skip?: number;\n  /** Optional num entries to show. */\n  top?: number;\n  /** Optional key by which to sort. */\n  sortKey?: string;\n  /** Optional sort value for pagination. */\n  sortValue?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VerifierWorkspacesListResponse = VerifierWorkspaceListResult;\n\n/** Optional parameters. */\nexport interface VerifierWorkspacesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VerifierWorkspacesGetResponse = VerifierWorkspace;\n\n/** Optional parameters. */\nexport interface VerifierWorkspacesCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type VerifierWorkspacesCreateResponse = VerifierWorkspace;\n\n/** Optional parameters. */\nexport interface VerifierWorkspacesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Verifier Workspace object to create/update. */\n  body?: VerifierWorkspaceUpdate;\n}\n\n/** Contains response data for the update operation. */\nexport type VerifierWorkspacesUpdateResponse = VerifierWorkspace;\n\n/** Optional parameters. */\nexport interface VerifierWorkspacesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type VerifierWorkspacesDeleteResponse = VerifierWorkspacesDeleteHeaders;\n\n/** Optional parameters. */\nexport interface VerifierWorkspacesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VerifierWorkspacesListNextResponse = VerifierWorkspaceListResult;\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type NetworkVirtualAppliancesGetResponse = NetworkVirtualAppliance;\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type NetworkVirtualAppliancesUpdateTagsResponse =\n  NetworkVirtualAppliance;\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkVirtualAppliancesCreateOrUpdateResponse =\n  NetworkVirtualAppliance;\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specifies a list of virtual machine instance IDs from the Network Virtual Appliance VM instances. */\n  networkVirtualApplianceInstanceIds?: NetworkVirtualApplianceInstanceIds;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the restart operation. */\nexport type NetworkVirtualAppliancesRestartResponse =\n  NetworkVirtualApplianceInstanceIds;\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type NetworkVirtualAppliancesListByResourceGroupResponse =\n  NetworkVirtualApplianceListResult;\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkVirtualAppliancesListResponse =\n  NetworkVirtualApplianceListResult;\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type NetworkVirtualAppliancesListByResourceGroupNextResponse =\n  NetworkVirtualApplianceListResult;\n\n/** Optional parameters. */\nexport interface NetworkVirtualAppliancesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkVirtualAppliancesListNextResponse =\n  NetworkVirtualApplianceListResult;\n\n/** Optional parameters. */\nexport interface VirtualApplianceSitesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualApplianceSitesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualApplianceSitesGetResponse = VirtualApplianceSite;\n\n/** Optional parameters. */\nexport interface VirtualApplianceSitesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualApplianceSitesCreateOrUpdateResponse = VirtualApplianceSite;\n\n/** Optional parameters. */\nexport interface VirtualApplianceSitesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualApplianceSitesListResponse =\n  NetworkVirtualApplianceSiteListResult;\n\n/** Optional parameters. */\nexport interface VirtualApplianceSitesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualApplianceSitesListNextResponse =\n  NetworkVirtualApplianceSiteListResult;\n\n/** Optional parameters. */\nexport interface VirtualApplianceSkusListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualApplianceSkusListResponse =\n  NetworkVirtualApplianceSkuListResult;\n\n/** Optional parameters. */\nexport interface VirtualApplianceSkusGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualApplianceSkusGetResponse = NetworkVirtualApplianceSku;\n\n/** Optional parameters. */\nexport interface VirtualApplianceSkusListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualApplianceSkusListNextResponse =\n  NetworkVirtualApplianceSkuListResult;\n\n/** Optional parameters. */\nexport interface InboundSecurityRuleCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type InboundSecurityRuleCreateOrUpdateResponse = InboundSecurityRule;\n\n/** Optional parameters. */\nexport interface InboundSecurityRuleGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type InboundSecurityRuleGetResponse = InboundSecurityRule;\n\n/** Optional parameters. */\nexport interface NetworkWatchersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkWatchersCreateOrUpdateResponse = NetworkWatcher;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NetworkWatchersGetResponse = NetworkWatcher;\n\n/** Optional parameters. */\nexport interface NetworkWatchersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkWatchersUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type NetworkWatchersUpdateTagsResponse = NetworkWatcher;\n\n/** Optional parameters. */\nexport interface NetworkWatchersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkWatchersListResponse = NetworkWatcherListResult;\n\n/** Optional parameters. */\nexport interface NetworkWatchersListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type NetworkWatchersListAllResponse = NetworkWatcherListResult;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetTopologyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getTopology operation. */\nexport type NetworkWatchersGetTopologyResponse = Topology;\n\n/** Optional parameters. */\nexport interface NetworkWatchersVerifyIPFlowOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the verifyIPFlow operation. */\nexport type NetworkWatchersVerifyIPFlowResponse = VerificationIPFlowResult;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetNextHopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getNextHop operation. */\nexport type NetworkWatchersGetNextHopResponse = NextHopResult;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetVMSecurityRulesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getVMSecurityRules operation. */\nexport type NetworkWatchersGetVMSecurityRulesResponse = SecurityGroupViewResult;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetTroubleshootingOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getTroubleshooting operation. */\nexport type NetworkWatchersGetTroubleshootingResponse = TroubleshootingResult;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetTroubleshootingResultOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getTroubleshootingResult operation. */\nexport type NetworkWatchersGetTroubleshootingResultResponse =\n  TroubleshootingResult;\n\n/** Optional parameters. */\nexport interface NetworkWatchersSetFlowLogConfigurationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the setFlowLogConfiguration operation. */\nexport type NetworkWatchersSetFlowLogConfigurationResponse = FlowLogInformation;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetFlowLogStatusOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getFlowLogStatus operation. */\nexport type NetworkWatchersGetFlowLogStatusResponse = FlowLogInformation;\n\n/** Optional parameters. */\nexport interface NetworkWatchersCheckConnectivityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the checkConnectivity operation. */\nexport type NetworkWatchersCheckConnectivityResponse = ConnectivityInformation;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetAzureReachabilityReportOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getAzureReachabilityReport operation. */\nexport type NetworkWatchersGetAzureReachabilityReportResponse =\n  AzureReachabilityReport;\n\n/** Optional parameters. */\nexport interface NetworkWatchersListAvailableProvidersOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listAvailableProviders operation. */\nexport type NetworkWatchersListAvailableProvidersResponse =\n  AvailableProvidersList;\n\n/** Optional parameters. */\nexport interface NetworkWatchersGetNetworkConfigurationDiagnosticOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getNetworkConfigurationDiagnostic operation. */\nexport type NetworkWatchersGetNetworkConfigurationDiagnosticResponse =\n  NetworkConfigurationDiagnosticResponse;\n\n/** Optional parameters. */\nexport interface PacketCapturesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type PacketCapturesCreateResponse = PacketCaptureResult;\n\n/** Optional parameters. */\nexport interface PacketCapturesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PacketCapturesGetResponse = PacketCaptureResult;\n\n/** Optional parameters. */\nexport interface PacketCapturesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PacketCapturesStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PacketCapturesGetStatusOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getStatus operation. */\nexport type PacketCapturesGetStatusResponse = PacketCaptureQueryStatusResult;\n\n/** Optional parameters. */\nexport interface PacketCapturesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PacketCapturesListResponse = PacketCaptureListResult;\n\n/** Optional parameters. */\nexport interface ConnectionMonitorsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Value indicating whether connection monitor V1 should be migrated to V2 format. */\n  migrate?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConnectionMonitorsCreateOrUpdateResponse = ConnectionMonitorResult;\n\n/** Optional parameters. */\nexport interface ConnectionMonitorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConnectionMonitorsGetResponse = ConnectionMonitorResult;\n\n/** Optional parameters. */\nexport interface ConnectionMonitorsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ConnectionMonitorsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type ConnectionMonitorsUpdateTagsResponse = ConnectionMonitorResult;\n\n/** Optional parameters. */\nexport interface ConnectionMonitorsStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ConnectionMonitorsStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ConnectionMonitorsQueryOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the query operation. */\nexport type ConnectionMonitorsQueryResponse = ConnectionMonitorQueryResult;\n\n/** Optional parameters. */\nexport interface ConnectionMonitorsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ConnectionMonitorsListResponse = ConnectionMonitorListResult;\n\n/** Optional parameters. */\nexport interface FlowLogsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type FlowLogsCreateOrUpdateResponse = FlowLog;\n\n/** Optional parameters. */\nexport interface FlowLogsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type FlowLogsUpdateTagsResponse = FlowLog;\n\n/** Optional parameters. */\nexport interface FlowLogsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type FlowLogsGetResponse = FlowLog;\n\n/** Optional parameters. */\nexport interface FlowLogsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface FlowLogsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type FlowLogsListResponse = FlowLogListResult;\n\n/** Optional parameters. */\nexport interface FlowLogsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type FlowLogsListNextResponse = FlowLogListResult;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateEndpointsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointsGetResponse = PrivateEndpoint;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PrivateEndpointsCreateOrUpdateResponse = PrivateEndpoint;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateEndpointsListResponse = PrivateEndpointListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type PrivateEndpointsListBySubscriptionResponse =\n  PrivateEndpointListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateEndpointsListNextResponse = PrivateEndpointListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type PrivateEndpointsListBySubscriptionNextResponse =\n  PrivateEndpointListResult;\n\n/** Optional parameters. */\nexport interface AvailablePrivateEndpointTypesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AvailablePrivateEndpointTypesListResponse =\n  AvailablePrivateEndpointTypesResult;\n\n/** Optional parameters. */\nexport interface AvailablePrivateEndpointTypesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type AvailablePrivateEndpointTypesListByResourceGroupResponse =\n  AvailablePrivateEndpointTypesResult;\n\n/** Optional parameters. */\nexport interface AvailablePrivateEndpointTypesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AvailablePrivateEndpointTypesListNextResponse =\n  AvailablePrivateEndpointTypesResult;\n\n/** Optional parameters. */\nexport interface AvailablePrivateEndpointTypesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type AvailablePrivateEndpointTypesListByResourceGroupNextResponse =\n  AvailablePrivateEndpointTypesResult;\n\n/** Optional parameters. */\nexport interface PrivateDnsZoneGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateDnsZoneGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateDnsZoneGroupsGetResponse = PrivateDnsZoneGroup;\n\n/** Optional parameters. */\nexport interface PrivateDnsZoneGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PrivateDnsZoneGroupsCreateOrUpdateResponse = PrivateDnsZoneGroup;\n\n/** Optional parameters. */\nexport interface PrivateDnsZoneGroupsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateDnsZoneGroupsListResponse = PrivateDnsZoneGroupListResult;\n\n/** Optional parameters. */\nexport interface PrivateDnsZoneGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateDnsZoneGroupsListNextResponse =\n  PrivateDnsZoneGroupListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type PrivateLinkServicesGetResponse = PrivateLinkService;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PrivateLinkServicesCreateOrUpdateResponse = PrivateLinkService;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateLinkServicesListResponse = PrivateLinkServiceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type PrivateLinkServicesListBySubscriptionResponse =\n  PrivateLinkServiceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesGetPrivateEndpointConnectionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the getPrivateEndpointConnection operation. */\nexport type PrivateLinkServicesGetPrivateEndpointConnectionResponse =\n  PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesUpdatePrivateEndpointConnectionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updatePrivateEndpointConnection operation. */\nexport type PrivateLinkServicesUpdatePrivateEndpointConnectionResponse =\n  PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesDeletePrivateEndpointConnectionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListPrivateEndpointConnectionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listPrivateEndpointConnections operation. */\nexport type PrivateLinkServicesListPrivateEndpointConnectionsResponse =\n  PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesCheckPrivateLinkServiceVisibilityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the checkPrivateLinkServiceVisibility operation. */\nexport type PrivateLinkServicesCheckPrivateLinkServiceVisibilityResponse =\n  PrivateLinkServiceVisibility;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesCheckPrivateLinkServiceVisibilityByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the checkPrivateLinkServiceVisibilityByResourceGroup operation. */\nexport type PrivateLinkServicesCheckPrivateLinkServiceVisibilityByResourceGroupResponse =\n  PrivateLinkServiceVisibility;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListAutoApprovedPrivateLinkServicesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAutoApprovedPrivateLinkServices operation. */\nexport type PrivateLinkServicesListAutoApprovedPrivateLinkServicesResponse =\n  AutoApprovedPrivateLinkServicesResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListAutoApprovedPrivateLinkServicesByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAutoApprovedPrivateLinkServicesByResourceGroup operation. */\nexport type PrivateLinkServicesListAutoApprovedPrivateLinkServicesByResourceGroupResponse =\n  AutoApprovedPrivateLinkServicesResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateLinkServicesListNextResponse = PrivateLinkServiceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type PrivateLinkServicesListBySubscriptionNextResponse =\n  PrivateLinkServiceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListPrivateEndpointConnectionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listPrivateEndpointConnectionsNext operation. */\nexport type PrivateLinkServicesListPrivateEndpointConnectionsNextResponse =\n  PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListAutoApprovedPrivateLinkServicesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAutoApprovedPrivateLinkServicesNext operation. */\nexport type PrivateLinkServicesListAutoApprovedPrivateLinkServicesNextResponse =\n  AutoApprovedPrivateLinkServicesResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkServicesListAutoApprovedPrivateLinkServicesByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAutoApprovedPrivateLinkServicesByResourceGroupNext operation. */\nexport type PrivateLinkServicesListAutoApprovedPrivateLinkServicesByResourceGroupNextResponse =\n  AutoApprovedPrivateLinkServicesResult;\n\n/** Optional parameters. */\nexport interface PublicIPPrefixesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PublicIPPrefixesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type PublicIPPrefixesGetResponse = PublicIPPrefix;\n\n/** Optional parameters. */\nexport interface PublicIPPrefixesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PublicIPPrefixesCreateOrUpdateResponse = PublicIPPrefix;\n\n/** Optional parameters. */\nexport interface PublicIPPrefixesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type PublicIPPrefixesUpdateTagsResponse = PublicIPPrefix;\n\n/** Optional parameters. */\nexport interface PublicIPPrefixesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type PublicIPPrefixesListAllResponse = PublicIPPrefixListResult;\n\n/** Optional parameters. */\nexport interface PublicIPPrefixesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PublicIPPrefixesListResponse = PublicIPPrefixListResult;\n\n/** Optional parameters. */\nexport interface PublicIPPrefixesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type PublicIPPrefixesListAllNextResponse = PublicIPPrefixListResult;\n\n/** Optional parameters. */\nexport interface PublicIPPrefixesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PublicIPPrefixesListNextResponse = PublicIPPrefixListResult;\n\n/** Optional parameters. */\nexport interface RouteFiltersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RouteFiltersGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced express route bgp peering resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type RouteFiltersGetResponse = RouteFilter;\n\n/** Optional parameters. */\nexport interface RouteFiltersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RouteFiltersCreateOrUpdateResponse = RouteFilter;\n\n/** Optional parameters. */\nexport interface RouteFiltersUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type RouteFiltersUpdateTagsResponse = RouteFilter;\n\n/** Optional parameters. */\nexport interface RouteFiltersListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type RouteFiltersListByResourceGroupResponse = RouteFilterListResult;\n\n/** Optional parameters. */\nexport interface RouteFiltersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type RouteFiltersListResponse = RouteFilterListResult;\n\n/** Optional parameters. */\nexport interface RouteFiltersListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type RouteFiltersListByResourceGroupNextResponse = RouteFilterListResult;\n\n/** Optional parameters. */\nexport interface RouteFiltersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RouteFiltersListNextResponse = RouteFilterListResult;\n\n/** Optional parameters. */\nexport interface RouteFilterRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RouteFilterRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RouteFilterRulesGetResponse = RouteFilterRule;\n\n/** Optional parameters. */\nexport interface RouteFilterRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RouteFilterRulesCreateOrUpdateResponse = RouteFilterRule;\n\n/** Optional parameters. */\nexport interface RouteFilterRulesListByRouteFilterOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRouteFilter operation. */\nexport type RouteFilterRulesListByRouteFilterResponse =\n  RouteFilterRuleListResult;\n\n/** Optional parameters. */\nexport interface RouteFilterRulesListByRouteFilterNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRouteFilterNext operation. */\nexport type RouteFilterRulesListByRouteFilterNextResponse =\n  RouteFilterRuleListResult;\n\n/** Optional parameters. */\nexport interface RouteTablesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RouteTablesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type RouteTablesGetResponse = RouteTable;\n\n/** Optional parameters. */\nexport interface RouteTablesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RouteTablesCreateOrUpdateResponse = RouteTable;\n\n/** Optional parameters. */\nexport interface RouteTablesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type RouteTablesUpdateTagsResponse = RouteTable;\n\n/** Optional parameters. */\nexport interface RouteTablesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type RouteTablesListResponse = RouteTableListResult;\n\n/** Optional parameters. */\nexport interface RouteTablesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type RouteTablesListAllResponse = RouteTableListResult;\n\n/** Optional parameters. */\nexport interface RouteTablesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RouteTablesListNextResponse = RouteTableListResult;\n\n/** Optional parameters. */\nexport interface RouteTablesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type RouteTablesListAllNextResponse = RouteTableListResult;\n\n/** Optional parameters. */\nexport interface RoutesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RoutesGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoutesGetResponse = Route;\n\n/** Optional parameters. */\nexport interface RoutesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RoutesCreateOrUpdateResponse = Route;\n\n/** Optional parameters. */\nexport interface RoutesListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type RoutesListResponse = RouteListResult;\n\n/** Optional parameters. */\nexport interface RoutesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RoutesListNextResponse = RouteListResult;\n\n/** Optional parameters. */\nexport interface SecurityPartnerProvidersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SecurityPartnerProvidersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecurityPartnerProvidersGetResponse = SecurityPartnerProvider;\n\n/** Optional parameters. */\nexport interface SecurityPartnerProvidersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SecurityPartnerProvidersCreateOrUpdateResponse =\n  SecurityPartnerProvider;\n\n/** Optional parameters. */\nexport interface SecurityPartnerProvidersUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type SecurityPartnerProvidersUpdateTagsResponse =\n  SecurityPartnerProvider;\n\n/** Optional parameters. */\nexport interface SecurityPartnerProvidersListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type SecurityPartnerProvidersListByResourceGroupResponse =\n  SecurityPartnerProviderListResult;\n\n/** Optional parameters. */\nexport interface SecurityPartnerProvidersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SecurityPartnerProvidersListResponse =\n  SecurityPartnerProviderListResult;\n\n/** Optional parameters. */\nexport interface SecurityPartnerProvidersListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type SecurityPartnerProvidersListByResourceGroupNextResponse =\n  SecurityPartnerProviderListResult;\n\n/** Optional parameters. */\nexport interface SecurityPartnerProvidersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SecurityPartnerProvidersListNextResponse =\n  SecurityPartnerProviderListResult;\n\n/** Optional parameters. */\nexport interface BgpServiceCommunitiesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BgpServiceCommunitiesListResponse = BgpServiceCommunityListResult;\n\n/** Optional parameters. */\nexport interface BgpServiceCommunitiesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BgpServiceCommunitiesListNextResponse =\n  BgpServiceCommunityListResult;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServiceEndpointPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ServiceEndpointPoliciesGetResponse = ServiceEndpointPolicy;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServiceEndpointPoliciesCreateOrUpdateResponse =\n  ServiceEndpointPolicy;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPoliciesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type ServiceEndpointPoliciesUpdateTagsResponse = ServiceEndpointPolicy;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ServiceEndpointPoliciesListResponse =\n  ServiceEndpointPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPoliciesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ServiceEndpointPoliciesListByResourceGroupResponse =\n  ServiceEndpointPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPoliciesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ServiceEndpointPoliciesListNextResponse =\n  ServiceEndpointPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPoliciesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ServiceEndpointPoliciesListByResourceGroupNextResponse =\n  ServiceEndpointPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPolicyDefinitionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServiceEndpointPolicyDefinitionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServiceEndpointPolicyDefinitionsGetResponse =\n  ServiceEndpointPolicyDefinition;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPolicyDefinitionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServiceEndpointPolicyDefinitionsCreateOrUpdateResponse =\n  ServiceEndpointPolicyDefinition;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPolicyDefinitionsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ServiceEndpointPolicyDefinitionsListByResourceGroupResponse =\n  ServiceEndpointPolicyDefinitionListResult;\n\n/** Optional parameters. */\nexport interface ServiceEndpointPolicyDefinitionsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ServiceEndpointPolicyDefinitionsListByResourceGroupNextResponse =\n  ServiceEndpointPolicyDefinitionListResult;\n\n/** Optional parameters. */\nexport interface ServiceTagsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ServiceTagsListResponse = ServiceTagsListResult;\n\n/** Optional parameters. */\nexport interface ServiceTagInformationListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Do not return address prefixes for the tag(s). */\n  noAddressPrefixes?: boolean;\n  /** Return tag information for a particular tag. */\n  tagName?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ServiceTagInformationListResponse = ServiceTagInformationListResult;\n\n/** Optional parameters. */\nexport interface ServiceTagInformationListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ServiceTagInformationListNextResponse =\n  ServiceTagInformationListResult;\n\n/** Optional parameters. */\nexport interface UsagesListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type UsagesListResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface UsagesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type UsagesListNextResponse = UsagesListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworksGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualNetworksGetResponse = VirtualNetwork;\n\n/** Optional parameters. */\nexport interface VirtualNetworksCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualNetworksCreateOrUpdateResponse = VirtualNetwork;\n\n/** Optional parameters. */\nexport interface VirtualNetworksUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type VirtualNetworksUpdateTagsResponse = VirtualNetwork;\n\n/** Optional parameters. */\nexport interface VirtualNetworksListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type VirtualNetworksListAllResponse = VirtualNetworkListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualNetworksListResponse = VirtualNetworkListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksCheckIPAddressAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkIPAddressAvailability operation. */\nexport type VirtualNetworksCheckIPAddressAvailabilityResponse =\n  IPAddressAvailabilityResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksListUsageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listUsage operation. */\nexport type VirtualNetworksListUsageResponse = VirtualNetworkListUsageResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksListDdosProtectionStatusOptionalParams\n  extends coreClient.OperationOptions {\n  /** The skipToken that is given with nextLink. */\n  skipToken?: string;\n  /** The max number of ip addresses to return. */\n  top?: number;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listDdosProtectionStatus operation. */\nexport type VirtualNetworksListDdosProtectionStatusResponse =\n  VirtualNetworkDdosProtectionStatusResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type VirtualNetworksListAllNextResponse = VirtualNetworkListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualNetworksListNextResponse = VirtualNetworkListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksListUsageNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listUsageNext operation. */\nexport type VirtualNetworksListUsageNextResponse =\n  VirtualNetworkListUsageResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworksListDdosProtectionStatusNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listDdosProtectionStatusNext operation. */\nexport type VirtualNetworksListDdosProtectionStatusNextResponse =\n  VirtualNetworkDdosProtectionStatusResult;\n\n/** Optional parameters. */\nexport interface SubnetsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SubnetsGetOptionalParams extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type SubnetsGetResponse = Subnet;\n\n/** Optional parameters. */\nexport interface SubnetsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SubnetsCreateOrUpdateResponse = Subnet;\n\n/** Optional parameters. */\nexport interface SubnetsPrepareNetworkPoliciesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SubnetsUnprepareNetworkPoliciesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SubnetsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SubnetsListResponse = SubnetListResult;\n\n/** Optional parameters. */\nexport interface SubnetsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SubnetsListNextResponse = SubnetListResult;\n\n/** Optional parameters. */\nexport interface ResourceNavigationLinksListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ResourceNavigationLinksListResponse =\n  ResourceNavigationLinksListResult;\n\n/** Optional parameters. */\nexport interface ServiceAssociationLinksListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ServiceAssociationLinksListResponse =\n  ServiceAssociationLinksListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkPeeringsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkPeeringsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualNetworkPeeringsGetResponse = VirtualNetworkPeering;\n\n/** Optional parameters. */\nexport interface VirtualNetworkPeeringsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter indicates the intention to sync the peering with the current address space on the remote vNet after it's updated. */\n  syncRemoteAddressSpace?: SyncRemoteAddressSpace;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualNetworkPeeringsCreateOrUpdateResponse =\n  VirtualNetworkPeering;\n\n/** Optional parameters. */\nexport interface VirtualNetworkPeeringsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualNetworkPeeringsListResponse =\n  VirtualNetworkPeeringListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkPeeringsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualNetworkPeeringsListNextResponse =\n  VirtualNetworkPeeringListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualNetworkGatewaysCreateOrUpdateResponse =\n  VirtualNetworkGateway;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualNetworkGatewaysGetResponse = VirtualNetworkGateway;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateTags operation. */\nexport type VirtualNetworkGatewaysUpdateTagsResponse = VirtualNetworkGateway;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualNetworkGatewaysListResponse =\n  VirtualNetworkGatewayListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysListConnectionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listConnections operation. */\nexport type VirtualNetworkGatewaysListConnectionsResponse =\n  VirtualNetworkGatewayListConnectionsResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysResetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Virtual network gateway vip address supplied to the begin reset of the active-active feature enabled gateway. */\n  gatewayVip?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the reset operation. */\nexport type VirtualNetworkGatewaysResetResponse = VirtualNetworkGateway;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysResetVpnClientSharedKeyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGeneratevpnclientpackageOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the generatevpnclientpackage operation. */\nexport type VirtualNetworkGatewaysGeneratevpnclientpackageResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGenerateVpnProfileOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the generateVpnProfile operation. */\nexport type VirtualNetworkGatewaysGenerateVpnProfileResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetVpnProfilePackageUrlOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getVpnProfilePackageUrl operation. */\nexport type VirtualNetworkGatewaysGetVpnProfilePackageUrlResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetBgpPeerStatusOptionalParams\n  extends coreClient.OperationOptions {\n  /** The IP address of the peer to retrieve the status of. */\n  peer?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getBgpPeerStatus operation. */\nexport type VirtualNetworkGatewaysGetBgpPeerStatusResponse =\n  BgpPeerStatusListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysSupportedVpnDevicesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the supportedVpnDevices operation. */\nexport type VirtualNetworkGatewaysSupportedVpnDevicesResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetLearnedRoutesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getLearnedRoutes operation. */\nexport type VirtualNetworkGatewaysGetLearnedRoutesResponse =\n  GatewayRouteListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetAdvertisedRoutesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getAdvertisedRoutes operation. */\nexport type VirtualNetworkGatewaysGetAdvertisedRoutesResponse =\n  GatewayRouteListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysSetVpnclientIpsecParametersOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the setVpnclientIpsecParameters operation. */\nexport type VirtualNetworkGatewaysSetVpnclientIpsecParametersResponse =\n  VpnClientIPsecParameters;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetVpnclientIpsecParametersOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getVpnclientIpsecParameters operation. */\nexport type VirtualNetworkGatewaysGetVpnclientIpsecParametersResponse =\n  VpnClientIPsecParameters;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysVpnDeviceConfigurationScriptOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the vpnDeviceConfigurationScript operation. */\nexport type VirtualNetworkGatewaysVpnDeviceConfigurationScriptResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysStartPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Virtual network gateway packet capture parameters supplied to start packet capture on gateway. */\n  parameters?: VpnPacketCaptureStartParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the startPacketCapture operation. */\nexport type VirtualNetworkGatewaysStartPacketCaptureResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysStopPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the stopPacketCapture operation. */\nexport type VirtualNetworkGatewaysStopPacketCaptureResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetFailoverAllTestDetailsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getFailoverAllTestDetails operation. */\nexport type VirtualNetworkGatewaysGetFailoverAllTestDetailsResponse =\n  ExpressRouteFailoverTestDetails[];\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetFailoverSingleTestDetailsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getFailoverSingleTestDetails operation. */\nexport type VirtualNetworkGatewaysGetFailoverSingleTestDetailsResponse =\n  ExpressRouteFailoverSingleTestDetails[];\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the startExpressRouteSiteFailoverSimulation operation. */\nexport type VirtualNetworkGatewaysStartExpressRouteSiteFailoverSimulationResponse =\n  {\n    /** The parsed response body. */\n    body: string;\n  };\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the stopExpressRouteSiteFailoverSimulation operation. */\nexport type VirtualNetworkGatewaysStopExpressRouteSiteFailoverSimulationResponse =\n  {\n    /** The parsed response body. */\n    body: string;\n  };\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysGetVpnclientConnectionHealthOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getVpnclientConnectionHealth operation. */\nexport type VirtualNetworkGatewaysGetVpnclientConnectionHealthResponse =\n  VpnClientConnectionHealthDetailListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysDisconnectVirtualNetworkGatewayVpnConnectionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualNetworkGatewaysListNextResponse =\n  VirtualNetworkGatewayListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewaysListConnectionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listConnectionsNext operation. */\nexport type VirtualNetworkGatewaysListConnectionsNextResponse =\n  VirtualNetworkGatewayListConnectionsResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualNetworkGatewayConnectionsCreateOrUpdateResponse =\n  VirtualNetworkGatewayConnection;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualNetworkGatewayConnectionsGetResponse =\n  VirtualNetworkGatewayConnection;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateTags operation. */\nexport type VirtualNetworkGatewayConnectionsUpdateTagsResponse =\n  VirtualNetworkGatewayConnection;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsSetSharedKeyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the setSharedKey operation. */\nexport type VirtualNetworkGatewayConnectionsSetSharedKeyResponse =\n  ConnectionSharedKey;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsGetSharedKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSharedKey operation. */\nexport type VirtualNetworkGatewayConnectionsGetSharedKeyResponse =\n  ConnectionSharedKey;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualNetworkGatewayConnectionsListResponse =\n  VirtualNetworkGatewayConnectionListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsResetSharedKeyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the resetSharedKey operation. */\nexport type VirtualNetworkGatewayConnectionsResetSharedKeyResponse =\n  ConnectionResetSharedKey;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsStartPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Virtual network gateway packet capture parameters supplied to start packet capture on gateway connection. */\n  parameters?: VpnPacketCaptureStartParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the startPacketCapture operation. */\nexport type VirtualNetworkGatewayConnectionsStartPacketCaptureResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsStopPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the stopPacketCapture operation. */\nexport type VirtualNetworkGatewayConnectionsStopPacketCaptureResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsGetIkeSasOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getIkeSas operation. */\nexport type VirtualNetworkGatewayConnectionsGetIkeSasResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsResetConnectionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualNetworkGatewayConnectionsListNextResponse =\n  VirtualNetworkGatewayConnectionListResult;\n\n/** Optional parameters. */\nexport interface LocalNetworkGatewaysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LocalNetworkGatewaysCreateOrUpdateResponse = LocalNetworkGateway;\n\n/** Optional parameters. */\nexport interface LocalNetworkGatewaysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LocalNetworkGatewaysGetResponse = LocalNetworkGateway;\n\n/** Optional parameters. */\nexport interface LocalNetworkGatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface LocalNetworkGatewaysUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type LocalNetworkGatewaysUpdateTagsResponse = LocalNetworkGateway;\n\n/** Optional parameters. */\nexport interface LocalNetworkGatewaysListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LocalNetworkGatewaysListResponse = LocalNetworkGatewayListResult;\n\n/** Optional parameters. */\nexport interface LocalNetworkGatewaysListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type LocalNetworkGatewaysListNextResponse =\n  LocalNetworkGatewayListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayNatRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualNetworkGatewayNatRulesGetResponse =\n  VirtualNetworkGatewayNatRule;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayNatRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualNetworkGatewayNatRulesCreateOrUpdateResponse =\n  VirtualNetworkGatewayNatRule;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayNatRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayNatRulesListByVirtualNetworkGatewayOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVirtualNetworkGateway operation. */\nexport type VirtualNetworkGatewayNatRulesListByVirtualNetworkGatewayResponse =\n  ListVirtualNetworkGatewayNatRulesResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkGatewayNatRulesListByVirtualNetworkGatewayNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVirtualNetworkGatewayNext operation. */\nexport type VirtualNetworkGatewayNatRulesListByVirtualNetworkGatewayNextResponse =\n  ListVirtualNetworkGatewayNatRulesResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkTapsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkTapsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualNetworkTapsGetResponse = VirtualNetworkTap;\n\n/** Optional parameters. */\nexport interface VirtualNetworkTapsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualNetworkTapsCreateOrUpdateResponse = VirtualNetworkTap;\n\n/** Optional parameters. */\nexport interface VirtualNetworkTapsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type VirtualNetworkTapsUpdateTagsResponse = VirtualNetworkTap;\n\n/** Optional parameters. */\nexport interface VirtualNetworkTapsListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type VirtualNetworkTapsListAllResponse = VirtualNetworkTapListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkTapsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VirtualNetworkTapsListByResourceGroupResponse =\n  VirtualNetworkTapListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkTapsListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type VirtualNetworkTapsListAllNextResponse = VirtualNetworkTapListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkTapsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VirtualNetworkTapsListByResourceGroupNextResponse =\n  VirtualNetworkTapListResult;\n\n/** Optional parameters. */\nexport interface VirtualRoutersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualRoutersGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expands referenced resources. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualRoutersGetResponse = VirtualRouter;\n\n/** Optional parameters. */\nexport interface VirtualRoutersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualRoutersCreateOrUpdateResponse = VirtualRouter;\n\n/** Optional parameters. */\nexport interface VirtualRoutersListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VirtualRoutersListByResourceGroupResponse = VirtualRouterListResult;\n\n/** Optional parameters. */\nexport interface VirtualRoutersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualRoutersListResponse = VirtualRouterListResult;\n\n/** Optional parameters. */\nexport interface VirtualRoutersListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VirtualRoutersListByResourceGroupNextResponse =\n  VirtualRouterListResult;\n\n/** Optional parameters. */\nexport interface VirtualRoutersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualRoutersListNextResponse = VirtualRouterListResult;\n\n/** Optional parameters. */\nexport interface VirtualRouterPeeringsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualRouterPeeringsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualRouterPeeringsGetResponse = VirtualRouterPeering;\n\n/** Optional parameters. */\nexport interface VirtualRouterPeeringsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualRouterPeeringsCreateOrUpdateResponse = VirtualRouterPeering;\n\n/** Optional parameters. */\nexport interface VirtualRouterPeeringsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualRouterPeeringsListResponse = VirtualRouterPeeringListResult;\n\n/** Optional parameters. */\nexport interface VirtualRouterPeeringsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualRouterPeeringsListNextResponse =\n  VirtualRouterPeeringListResult;\n\n/** Optional parameters. */\nexport interface VirtualWansGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualWansGetResponse = VirtualWAN;\n\n/** Optional parameters. */\nexport interface VirtualWansCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualWansCreateOrUpdateResponse = VirtualWAN;\n\n/** Optional parameters. */\nexport interface VirtualWansUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type VirtualWansUpdateTagsResponse = VirtualWAN;\n\n/** Optional parameters. */\nexport interface VirtualWansDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualWansListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VirtualWansListByResourceGroupResponse = ListVirtualWANsResult;\n\n/** Optional parameters. */\nexport interface VirtualWansListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualWansListResponse = ListVirtualWANsResult;\n\n/** Optional parameters. */\nexport interface VirtualWansListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VirtualWansListByResourceGroupNextResponse = ListVirtualWANsResult;\n\n/** Optional parameters. */\nexport interface VirtualWansListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualWansListNextResponse = ListVirtualWANsResult;\n\n/** Optional parameters. */\nexport interface VpnSitesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VpnSitesGetResponse = VpnSite;\n\n/** Optional parameters. */\nexport interface VpnSitesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VpnSitesCreateOrUpdateResponse = VpnSite;\n\n/** Optional parameters. */\nexport interface VpnSitesUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type VpnSitesUpdateTagsResponse = VpnSite;\n\n/** Optional parameters. */\nexport interface VpnSitesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VpnSitesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VpnSitesListByResourceGroupResponse = ListVpnSitesResult;\n\n/** Optional parameters. */\nexport interface VpnSitesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VpnSitesListResponse = ListVpnSitesResult;\n\n/** Optional parameters. */\nexport interface VpnSitesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VpnSitesListByResourceGroupNextResponse = ListVpnSitesResult;\n\n/** Optional parameters. */\nexport interface VpnSitesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VpnSitesListNextResponse = ListVpnSitesResult;\n\n/** Optional parameters. */\nexport interface VpnSiteLinksGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VpnSiteLinksGetResponse = VpnSiteLink;\n\n/** Optional parameters. */\nexport interface VpnSiteLinksListByVpnSiteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnSite operation. */\nexport type VpnSiteLinksListByVpnSiteResponse = ListVpnSiteLinksResult;\n\n/** Optional parameters. */\nexport interface VpnSiteLinksListByVpnSiteNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnSiteNext operation. */\nexport type VpnSiteLinksListByVpnSiteNextResponse = ListVpnSiteLinksResult;\n\n/** Optional parameters. */\nexport interface VpnSitesConfigurationDownloadOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VpnServerConfigurationsGetResponse = VpnServerConfiguration;\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VpnServerConfigurationsCreateOrUpdateResponse =\n  VpnServerConfiguration;\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type VpnServerConfigurationsUpdateTagsResponse = VpnServerConfiguration;\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VpnServerConfigurationsListByResourceGroupResponse =\n  ListVpnServerConfigurationsResult;\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VpnServerConfigurationsListResponse =\n  ListVpnServerConfigurationsResult;\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VpnServerConfigurationsListByResourceGroupNextResponse =\n  ListVpnServerConfigurationsResult;\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VpnServerConfigurationsListNextResponse =\n  ListVpnServerConfigurationsResult;\n\n/** Optional parameters. */\nexport interface ConfigurationPolicyGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConfigurationPolicyGroupsCreateOrUpdateResponse =\n  VpnServerConfigurationPolicyGroup;\n\n/** Optional parameters. */\nexport interface ConfigurationPolicyGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ConfigurationPolicyGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConfigurationPolicyGroupsGetResponse =\n  VpnServerConfigurationPolicyGroup;\n\n/** Optional parameters. */\nexport interface ConfigurationPolicyGroupsListByVpnServerConfigurationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnServerConfiguration operation. */\nexport type ConfigurationPolicyGroupsListByVpnServerConfigurationResponse =\n  ListVpnServerConfigurationPolicyGroupsResult;\n\n/** Optional parameters. */\nexport interface ConfigurationPolicyGroupsListByVpnServerConfigurationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnServerConfigurationNext operation. */\nexport type ConfigurationPolicyGroupsListByVpnServerConfigurationNextResponse =\n  ListVpnServerConfigurationPolicyGroupsResult;\n\n/** Optional parameters. */\nexport interface VirtualHubsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualHubsGetResponse = VirtualHub;\n\n/** Optional parameters. */\nexport interface VirtualHubsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualHubsCreateOrUpdateResponse = VirtualHub;\n\n/** Optional parameters. */\nexport interface VirtualHubsUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateTags operation. */\nexport type VirtualHubsUpdateTagsResponse = VirtualHub;\n\n/** Optional parameters. */\nexport interface VirtualHubsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualHubsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VirtualHubsListByResourceGroupResponse = ListVirtualHubsResult;\n\n/** Optional parameters. */\nexport interface VirtualHubsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualHubsListResponse = ListVirtualHubsResult;\n\n/** Optional parameters. */\nexport interface VirtualHubsGetEffectiveVirtualHubRoutesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters supplied to get the effective routes for a specific resource. */\n  effectiveRoutesParameters?: EffectiveRoutesParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getEffectiveVirtualHubRoutes operation. */\nexport type VirtualHubsGetEffectiveVirtualHubRoutesResponse =\n  VirtualHubEffectiveRouteList;\n\n/** Optional parameters. */\nexport interface VirtualHubsGetInboundRoutesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getInboundRoutes operation. */\nexport type VirtualHubsGetInboundRoutesResponse = EffectiveRouteMapRouteList;\n\n/** Optional parameters. */\nexport interface VirtualHubsGetOutboundRoutesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getOutboundRoutes operation. */\nexport type VirtualHubsGetOutboundRoutesResponse = EffectiveRouteMapRouteList;\n\n/** Optional parameters. */\nexport interface VirtualHubsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VirtualHubsListByResourceGroupNextResponse = ListVirtualHubsResult;\n\n/** Optional parameters. */\nexport interface VirtualHubsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualHubsListNextResponse = ListVirtualHubsResult;\n\n/** Optional parameters. */\nexport interface RouteMapsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RouteMapsGetResponse = RouteMap;\n\n/** Optional parameters. */\nexport interface RouteMapsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RouteMapsCreateOrUpdateResponse = RouteMap;\n\n/** Optional parameters. */\nexport interface RouteMapsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RouteMapsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type RouteMapsListResponse = ListRouteMapsResult;\n\n/** Optional parameters. */\nexport interface RouteMapsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RouteMapsListNextResponse = ListRouteMapsResult;\n\n/** Optional parameters. */\nexport interface HubVirtualNetworkConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type HubVirtualNetworkConnectionsCreateOrUpdateResponse =\n  HubVirtualNetworkConnection;\n\n/** Optional parameters. */\nexport interface HubVirtualNetworkConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface HubVirtualNetworkConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type HubVirtualNetworkConnectionsGetResponse =\n  HubVirtualNetworkConnection;\n\n/** Optional parameters. */\nexport interface HubVirtualNetworkConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type HubVirtualNetworkConnectionsListResponse =\n  ListHubVirtualNetworkConnectionsResult;\n\n/** Optional parameters. */\nexport interface HubVirtualNetworkConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type HubVirtualNetworkConnectionsListNextResponse =\n  ListHubVirtualNetworkConnectionsResult;\n\n/** Optional parameters. */\nexport interface VpnGatewaysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VpnGatewaysGetResponse = VpnGateway;\n\n/** Optional parameters. */\nexport interface VpnGatewaysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VpnGatewaysCreateOrUpdateResponse = VpnGateway;\n\n/** Optional parameters. */\nexport interface VpnGatewaysUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateTags operation. */\nexport type VpnGatewaysUpdateTagsResponse = VpnGateway;\n\n/** Optional parameters. */\nexport interface VpnGatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VpnGatewaysResetOptionalParams\n  extends coreClient.OperationOptions {\n  /** VpnGateway ipConfigurationId to specify the gateway instance. */\n  ipConfigurationId?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the reset operation. */\nexport type VpnGatewaysResetResponse = VpnGateway;\n\n/** Optional parameters. */\nexport interface VpnGatewaysStartPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Vpn gateway packet capture parameters supplied to start packet capture on vpn gateway. */\n  parameters?: VpnGatewayPacketCaptureStartParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the startPacketCapture operation. */\nexport type VpnGatewaysStartPacketCaptureResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VpnGatewaysStopPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Vpn gateway packet capture parameters supplied to stop packet capture on vpn gateway. */\n  parameters?: VpnGatewayPacketCaptureStopParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the stopPacketCapture operation. */\nexport type VpnGatewaysStopPacketCaptureResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VpnGatewaysListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VpnGatewaysListByResourceGroupResponse = ListVpnGatewaysResult;\n\n/** Optional parameters. */\nexport interface VpnGatewaysListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VpnGatewaysListResponse = ListVpnGatewaysResult;\n\n/** Optional parameters. */\nexport interface VpnGatewaysListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VpnGatewaysListByResourceGroupNextResponse = ListVpnGatewaysResult;\n\n/** Optional parameters. */\nexport interface VpnGatewaysListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VpnGatewaysListNextResponse = ListVpnGatewaysResult;\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsResetConnectionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsGetAllSharedKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAllSharedKeys operation. */\nexport type VpnLinkConnectionsGetAllSharedKeysResponse =\n  ConnectionSharedKeyResultList;\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsGetDefaultSharedKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDefaultSharedKey operation. */\nexport type VpnLinkConnectionsGetDefaultSharedKeyResponse =\n  ConnectionSharedKeyResult;\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsSetOrInitDefaultSharedKeyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the setOrInitDefaultSharedKey operation. */\nexport type VpnLinkConnectionsSetOrInitDefaultSharedKeyResponse =\n  ConnectionSharedKeyResult;\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsListDefaultSharedKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listDefaultSharedKey operation. */\nexport type VpnLinkConnectionsListDefaultSharedKeyResponse =\n  ConnectionSharedKeyResult;\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsGetIkeSasOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getIkeSas operation. */\nexport type VpnLinkConnectionsGetIkeSasResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsListByVpnConnectionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnConnection operation. */\nexport type VpnLinkConnectionsListByVpnConnectionResponse =\n  ListVpnSiteLinkConnectionsResult;\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsGetAllSharedKeysNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAllSharedKeysNext operation. */\nexport type VpnLinkConnectionsGetAllSharedKeysNextResponse =\n  ConnectionSharedKeyResultList;\n\n/** Optional parameters. */\nexport interface VpnLinkConnectionsListByVpnConnectionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnConnectionNext operation. */\nexport type VpnLinkConnectionsListByVpnConnectionNextResponse =\n  ListVpnSiteLinkConnectionsResult;\n\n/** Optional parameters. */\nexport interface VpnConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VpnConnectionsGetResponse = VpnConnection;\n\n/** Optional parameters. */\nexport interface VpnConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VpnConnectionsCreateOrUpdateResponse = VpnConnection;\n\n/** Optional parameters. */\nexport interface VpnConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VpnConnectionsStartPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Vpn Connection packet capture parameters supplied to start packet capture on gateway connection. */\n  parameters?: VpnConnectionPacketCaptureStartParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the startPacketCapture operation. */\nexport type VpnConnectionsStartPacketCaptureResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VpnConnectionsStopPacketCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Vpn Connection packet capture parameters supplied to stop packet capture on gateway connection. */\n  parameters?: VpnConnectionPacketCaptureStopParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the stopPacketCapture operation. */\nexport type VpnConnectionsStopPacketCaptureResponse = {\n  /** The parsed response body. */\n  body: string;\n};\n\n/** Optional parameters. */\nexport interface VpnConnectionsListByVpnGatewayOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnGateway operation. */\nexport type VpnConnectionsListByVpnGatewayResponse = ListVpnConnectionsResult;\n\n/** Optional parameters. */\nexport interface VpnConnectionsListByVpnGatewayNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnGatewayNext operation. */\nexport type VpnConnectionsListByVpnGatewayNextResponse =\n  ListVpnConnectionsResult;\n\n/** Optional parameters. */\nexport interface VpnSiteLinkConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VpnSiteLinkConnectionsGetResponse = VpnSiteLinkConnection;\n\n/** Optional parameters. */\nexport interface NatRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NatRulesGetResponse = VpnGatewayNatRule;\n\n/** Optional parameters. */\nexport interface NatRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NatRulesCreateOrUpdateResponse = VpnGatewayNatRule;\n\n/** Optional parameters. */\nexport interface NatRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NatRulesListByVpnGatewayOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnGateway operation. */\nexport type NatRulesListByVpnGatewayResponse = ListVpnGatewayNatRulesResult;\n\n/** Optional parameters. */\nexport interface NatRulesListByVpnGatewayNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVpnGatewayNext operation. */\nexport type NatRulesListByVpnGatewayNextResponse = ListVpnGatewayNatRulesResult;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type P2SVpnGatewaysGetResponse = P2SVpnGateway;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type P2SVpnGatewaysCreateOrUpdateResponse = P2SVpnGateway;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateTags operation. */\nexport type P2SVpnGatewaysUpdateTagsResponse = P2SVpnGateway;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type P2SVpnGatewaysListByResourceGroupResponse =\n  ListP2SVpnGatewaysResult;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type P2SVpnGatewaysListResponse = ListP2SVpnGatewaysResult;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysResetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the reset operation. */\nexport type P2SVpnGatewaysResetResponse = P2SVpnGateway;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysGenerateVpnProfileOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the generateVpnProfile operation. */\nexport type P2SVpnGatewaysGenerateVpnProfileResponse = VpnProfileResponse;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysGetP2SVpnConnectionHealthOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getP2SVpnConnectionHealth operation. */\nexport type P2SVpnGatewaysGetP2SVpnConnectionHealthResponse = P2SVpnGateway;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysGetP2SVpnConnectionHealthDetailedOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the getP2SVpnConnectionHealthDetailed operation. */\nexport type P2SVpnGatewaysGetP2SVpnConnectionHealthDetailedResponse =\n  P2SVpnConnectionHealth;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysDisconnectP2SVpnConnectionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type P2SVpnGatewaysListByResourceGroupNextResponse =\n  ListP2SVpnGatewaysResult;\n\n/** Optional parameters. */\nexport interface P2SVpnGatewaysListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type P2SVpnGatewaysListNextResponse = ListP2SVpnGatewaysResult;\n\n/** Optional parameters. */\nexport interface VpnServerConfigurationsAssociatedWithVirtualWanListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VpnServerConfigurationsAssociatedWithVirtualWanListResponse =\n  VpnServerConfigurationsResponse;\n\n/** Optional parameters. */\nexport interface VirtualHubRouteTableV2SGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualHubRouteTableV2SGetResponse = VirtualHubRouteTableV2;\n\n/** Optional parameters. */\nexport interface VirtualHubRouteTableV2SCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualHubRouteTableV2SCreateOrUpdateResponse =\n  VirtualHubRouteTableV2;\n\n/** Optional parameters. */\nexport interface VirtualHubRouteTableV2SDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualHubRouteTableV2SListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualHubRouteTableV2SListResponse =\n  ListVirtualHubRouteTableV2SResult;\n\n/** Optional parameters. */\nexport interface VirtualHubRouteTableV2SListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualHubRouteTableV2SListNextResponse =\n  ListVirtualHubRouteTableV2SResult;\n\n/** Optional parameters. */\nexport interface ExpressRouteGatewaysListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ExpressRouteGatewaysListBySubscriptionResponse =\n  ExpressRouteGatewayList;\n\n/** Optional parameters. */\nexport interface ExpressRouteGatewaysListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ExpressRouteGatewaysListByResourceGroupResponse =\n  ExpressRouteGatewayList;\n\n/** Optional parameters. */\nexport interface ExpressRouteGatewaysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRouteGatewaysCreateOrUpdateResponse = ExpressRouteGateway;\n\n/** Optional parameters. */\nexport interface ExpressRouteGatewaysUpdateTagsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateTags operation. */\nexport type ExpressRouteGatewaysUpdateTagsResponse = ExpressRouteGateway;\n\n/** Optional parameters. */\nexport interface ExpressRouteGatewaysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteGatewaysGetResponse = ExpressRouteGateway;\n\n/** Optional parameters. */\nexport interface ExpressRouteGatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRouteConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExpressRouteConnectionsCreateOrUpdateResponse =\n  ExpressRouteConnection;\n\n/** Optional parameters. */\nexport interface ExpressRouteConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExpressRouteConnectionsGetResponse = ExpressRouteConnection;\n\n/** Optional parameters. */\nexport interface ExpressRouteConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ExpressRouteConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ExpressRouteConnectionsListResponse = ExpressRouteConnectionList;\n\n/** Optional parameters. */\nexport interface NetworkVirtualApplianceConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type NetworkVirtualApplianceConnectionsCreateOrUpdateResponse =\n  NetworkVirtualApplianceConnection;\n\n/** Optional parameters. */\nexport interface NetworkVirtualApplianceConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type NetworkVirtualApplianceConnectionsGetResponse =\n  NetworkVirtualApplianceConnection;\n\n/** Optional parameters. */\nexport interface NetworkVirtualApplianceConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface NetworkVirtualApplianceConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type NetworkVirtualApplianceConnectionsListResponse =\n  NetworkVirtualApplianceConnectionList;\n\n/** Optional parameters. */\nexport interface NetworkVirtualApplianceConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type NetworkVirtualApplianceConnectionsListNextResponse =\n  NetworkVirtualApplianceConnectionList;\n\n/** Optional parameters. */\nexport interface VirtualHubBgpConnectionGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualHubBgpConnectionGetResponse = BgpConnection;\n\n/** Optional parameters. */\nexport interface VirtualHubBgpConnectionCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualHubBgpConnectionCreateOrUpdateResponse = BgpConnection;\n\n/** Optional parameters. */\nexport interface VirtualHubBgpConnectionDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualHubBgpConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualHubBgpConnectionsListResponse =\n  ListVirtualHubBgpConnectionResults;\n\n/** Optional parameters. */\nexport interface VirtualHubBgpConnectionsListLearnedRoutesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listLearnedRoutes operation. */\nexport type VirtualHubBgpConnectionsListLearnedRoutesResponse = {\n  [propertyName: string]: PeerRoute[];\n};\n\n/** Optional parameters. */\nexport interface VirtualHubBgpConnectionsListAdvertisedRoutesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the listAdvertisedRoutes operation. */\nexport type VirtualHubBgpConnectionsListAdvertisedRoutesResponse = {\n  [propertyName: string]: PeerRoute[];\n};\n\n/** Optional parameters. */\nexport interface VirtualHubBgpConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualHubBgpConnectionsListNextResponse =\n  ListVirtualHubBgpConnectionResults;\n\n/** Optional parameters. */\nexport interface VirtualHubIpConfigurationGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualHubIpConfigurationGetResponse = HubIpConfiguration;\n\n/** Optional parameters. */\nexport interface VirtualHubIpConfigurationCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualHubIpConfigurationCreateOrUpdateResponse =\n  HubIpConfiguration;\n\n/** Optional parameters. */\nexport interface VirtualHubIpConfigurationDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualHubIpConfigurationListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualHubIpConfigurationListResponse =\n  ListVirtualHubIpConfigurationResults;\n\n/** Optional parameters. */\nexport interface VirtualHubIpConfigurationListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualHubIpConfigurationListNextResponse =\n  ListVirtualHubIpConfigurationResults;\n\n/** Optional parameters. */\nexport interface HubRouteTablesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type HubRouteTablesCreateOrUpdateResponse = HubRouteTable;\n\n/** Optional parameters. */\nexport interface HubRouteTablesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type HubRouteTablesGetResponse = HubRouteTable;\n\n/** Optional parameters. */\nexport interface HubRouteTablesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface HubRouteTablesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type HubRouteTablesListResponse = ListHubRouteTablesResult;\n\n/** Optional parameters. */\nexport interface HubRouteTablesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type HubRouteTablesListNextResponse = ListHubRouteTablesResult;\n\n/** Optional parameters. */\nexport interface RoutingIntentCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RoutingIntentCreateOrUpdateResponse = RoutingIntent;\n\n/** Optional parameters. */\nexport interface RoutingIntentGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoutingIntentGetResponse = RoutingIntent;\n\n/** Optional parameters. */\nexport interface RoutingIntentDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RoutingIntentListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type RoutingIntentListResponse = ListRoutingIntentResult;\n\n/** Optional parameters. */\nexport interface RoutingIntentListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RoutingIntentListNextResponse = ListRoutingIntentResult;\n\n/** Optional parameters. */\nexport interface WebApplicationFirewallPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WebApplicationFirewallPoliciesListResponse =\n  WebApplicationFirewallPolicyListResult;\n\n/** Optional parameters. */\nexport interface WebApplicationFirewallPoliciesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type WebApplicationFirewallPoliciesListAllResponse =\n  WebApplicationFirewallPolicyListResult;\n\n/** Optional parameters. */\nexport interface WebApplicationFirewallPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WebApplicationFirewallPoliciesGetResponse =\n  WebApplicationFirewallPolicy;\n\n/** Optional parameters. */\nexport interface WebApplicationFirewallPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WebApplicationFirewallPoliciesCreateOrUpdateResponse =\n  WebApplicationFirewallPolicy;\n\n/** Optional parameters. */\nexport interface WebApplicationFirewallPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WebApplicationFirewallPoliciesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WebApplicationFirewallPoliciesListNextResponse =\n  WebApplicationFirewallPolicyListResult;\n\n/** Optional parameters. */\nexport interface WebApplicationFirewallPoliciesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type WebApplicationFirewallPoliciesListAllNextResponse =\n  WebApplicationFirewallPolicyListResult;\n\n/** Optional parameters. */\nexport interface NetworkManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}