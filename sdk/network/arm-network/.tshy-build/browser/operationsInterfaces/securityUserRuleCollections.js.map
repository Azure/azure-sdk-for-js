{"version":3,"file":"securityUserRuleCollections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/securityUserRuleCollections.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  SecurityUserRuleCollection,\n  SecurityUserRuleCollectionsListOptionalParams,\n  SecurityUserRuleCollectionsGetOptionalParams,\n  SecurityUserRuleCollectionsGetResponse,\n  SecurityUserRuleCollectionsCreateOrUpdateOptionalParams,\n  SecurityUserRuleCollectionsCreateOrUpdateResponse,\n  SecurityUserRuleCollectionsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a SecurityUserRuleCollections. */\nexport interface SecurityUserRuleCollections {\n  /**\n   * Lists all the security user rule collections in a security configuration, in a paginated format.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: SecurityUserRuleCollectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<SecurityUserRuleCollection>;\n  /**\n   * Gets a network manager security user configuration rule collection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    options?: SecurityUserRuleCollectionsGetOptionalParams,\n  ): Promise<SecurityUserRuleCollectionsGetResponse>;\n  /**\n   * Creates or updates a security user rule collection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param securityUserRuleCollection The Security User Rule Collection to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    securityUserRuleCollection: SecurityUserRuleCollection,\n    options?: SecurityUserRuleCollectionsCreateOrUpdateOptionalParams,\n  ): Promise<SecurityUserRuleCollectionsCreateOrUpdateResponse>;\n  /**\n   * Deletes a Security User Rule collection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    options?: SecurityUserRuleCollectionsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a Security User Rule collection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    options?: SecurityUserRuleCollectionsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}