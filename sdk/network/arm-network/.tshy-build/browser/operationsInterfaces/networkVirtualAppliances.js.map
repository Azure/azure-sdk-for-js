{"version":3,"file":"networkVirtualAppliances.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/networkVirtualAppliances.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  NetworkVirtualAppliance,\n  NetworkVirtualAppliancesListByResourceGroupOptionalParams,\n  NetworkVirtualAppliancesListOptionalParams,\n  NetworkVirtualAppliancesDeleteOptionalParams,\n  NetworkVirtualAppliancesGetOptionalParams,\n  NetworkVirtualAppliancesGetResponse,\n  TagsObject,\n  NetworkVirtualAppliancesUpdateTagsOptionalParams,\n  NetworkVirtualAppliancesUpdateTagsResponse,\n  NetworkVirtualAppliancesCreateOrUpdateOptionalParams,\n  NetworkVirtualAppliancesCreateOrUpdateResponse,\n  NetworkVirtualAppliancesRestartOptionalParams,\n  NetworkVirtualAppliancesRestartResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a NetworkVirtualAppliances. */\nexport interface NetworkVirtualAppliances {\n  /**\n   * Lists all Network Virtual Appliances in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: NetworkVirtualAppliancesListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkVirtualAppliance>;\n  /**\n   * Gets all Network Virtual Appliances in a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: NetworkVirtualAppliancesListOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkVirtualAppliance>;\n  /**\n   * Deletes the specified Network Virtual Appliance.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of Network Virtual Appliance.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    options?: NetworkVirtualAppliancesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified Network Virtual Appliance.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of Network Virtual Appliance.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    options?: NetworkVirtualAppliancesDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified Network Virtual Appliance.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of Network Virtual Appliance.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    options?: NetworkVirtualAppliancesGetOptionalParams,\n  ): Promise<NetworkVirtualAppliancesGetResponse>;\n  /**\n   * Updates a Network Virtual Appliance.\n   * @param resourceGroupName The resource group name of Network Virtual Appliance.\n   * @param networkVirtualApplianceName The name of Network Virtual Appliance being updated.\n   * @param parameters Parameters supplied to Update Network Virtual Appliance Tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    parameters: TagsObject,\n    options?: NetworkVirtualAppliancesUpdateTagsOptionalParams,\n  ): Promise<NetworkVirtualAppliancesUpdateTagsResponse>;\n  /**\n   * Creates or updates the specified Network Virtual Appliance.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of Network Virtual Appliance.\n   * @param parameters Parameters supplied to the create or update Network Virtual Appliance.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    parameters: NetworkVirtualAppliance,\n    options?: NetworkVirtualAppliancesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkVirtualAppliancesCreateOrUpdateResponse>,\n      NetworkVirtualAppliancesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates the specified Network Virtual Appliance.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of Network Virtual Appliance.\n   * @param parameters Parameters supplied to the create or update Network Virtual Appliance.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    parameters: NetworkVirtualAppliance,\n    options?: NetworkVirtualAppliancesCreateOrUpdateOptionalParams,\n  ): Promise<NetworkVirtualAppliancesCreateOrUpdateResponse>;\n  /**\n   * Restarts one or more VMs belonging to the specified Network Virtual Appliance.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of Network Virtual Appliance.\n   * @param options The options parameters.\n   */\n  beginRestart(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    options?: NetworkVirtualAppliancesRestartOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkVirtualAppliancesRestartResponse>,\n      NetworkVirtualAppliancesRestartResponse\n    >\n  >;\n  /**\n   * Restarts one or more VMs belonging to the specified Network Virtual Appliance.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkVirtualApplianceName The name of Network Virtual Appliance.\n   * @param options The options parameters.\n   */\n  beginRestartAndWait(\n    resourceGroupName: string,\n    networkVirtualApplianceName: string,\n    options?: NetworkVirtualAppliancesRestartOptionalParams,\n  ): Promise<NetworkVirtualAppliancesRestartResponse>;\n}\n"]}