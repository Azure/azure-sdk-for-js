{"version":3,"file":"adminRuleCollections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/adminRuleCollections.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  AdminRuleCollection,\n  AdminRuleCollectionsListOptionalParams,\n  AdminRuleCollectionsGetOptionalParams,\n  AdminRuleCollectionsGetResponse,\n  AdminRuleCollectionsCreateOrUpdateOptionalParams,\n  AdminRuleCollectionsCreateOrUpdateResponse,\n  AdminRuleCollectionsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a AdminRuleCollections. */\nexport interface AdminRuleCollections {\n  /**\n   * Lists all the rule collections in a security admin configuration, in a paginated format.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: AdminRuleCollectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<AdminRuleCollection>;\n  /**\n   * Gets a network manager security admin configuration rule collection.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    options?: AdminRuleCollectionsGetOptionalParams,\n  ): Promise<AdminRuleCollectionsGetResponse>;\n  /**\n   * Creates or updates an admin rule collection.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param ruleCollection The Rule Collection to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    ruleCollection: AdminRuleCollection,\n    options?: AdminRuleCollectionsCreateOrUpdateOptionalParams,\n  ): Promise<AdminRuleCollectionsCreateOrUpdateResponse>;\n  /**\n   * Deletes an admin rule collection.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    options?: AdminRuleCollectionsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes an admin rule collection.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    options?: AdminRuleCollectionsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}