{"version":3,"file":"virtualRouterPeerings.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/virtualRouterPeerings.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VirtualRouterPeering,\n  VirtualRouterPeeringsListOptionalParams,\n  VirtualRouterPeeringsDeleteOptionalParams,\n  VirtualRouterPeeringsGetOptionalParams,\n  VirtualRouterPeeringsGetResponse,\n  VirtualRouterPeeringsCreateOrUpdateOptionalParams,\n  VirtualRouterPeeringsCreateOrUpdateResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VirtualRouterPeerings. */\nexport interface VirtualRouterPeerings {\n  /**\n   * Lists all Virtual Router Peerings in a Virtual Router resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    options?: VirtualRouterPeeringsListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualRouterPeering>;\n  /**\n   * Deletes the specified peering from a Virtual Router.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param peeringName The name of the peering.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    peeringName: string,\n    options?: VirtualRouterPeeringsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified peering from a Virtual Router.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param peeringName The name of the peering.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    peeringName: string,\n    options?: VirtualRouterPeeringsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the specified Virtual Router Peering.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param peeringName The name of the Virtual Router Peering.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    peeringName: string,\n    options?: VirtualRouterPeeringsGetOptionalParams,\n  ): Promise<VirtualRouterPeeringsGetResponse>;\n  /**\n   * Creates or updates the specified Virtual Router Peering.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param peeringName The name of the Virtual Router Peering.\n   * @param parameters Parameters supplied to the create or update Virtual Router Peering operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    peeringName: string,\n    parameters: VirtualRouterPeering,\n    options?: VirtualRouterPeeringsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualRouterPeeringsCreateOrUpdateResponse>,\n      VirtualRouterPeeringsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates the specified Virtual Router Peering.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualRouterName The name of the Virtual Router.\n   * @param peeringName The name of the Virtual Router Peering.\n   * @param parameters Parameters supplied to the create or update Virtual Router Peering operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualRouterName: string,\n    peeringName: string,\n    parameters: VirtualRouterPeering,\n    options?: VirtualRouterPeeringsCreateOrUpdateOptionalParams,\n  ): Promise<VirtualRouterPeeringsCreateOrUpdateResponse>;\n}\n"]}