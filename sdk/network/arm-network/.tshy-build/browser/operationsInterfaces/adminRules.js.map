{"version":3,"file":"adminRules.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/adminRules.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  BaseAdminRuleUnion,\n  AdminRulesListOptionalParams,\n  AdminRulesGetOptionalParams,\n  AdminRulesGetResponse,\n  AdminRulesCreateOrUpdateOptionalParams,\n  AdminRulesCreateOrUpdateResponse,\n  AdminRulesDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a AdminRules. */\nexport interface AdminRules {\n  /**\n   * List all network manager security configuration admin rules.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    options?: AdminRulesListOptionalParams,\n  ): PagedAsyncIterableIterator<BaseAdminRuleUnion>;\n  /**\n   * Gets a network manager security configuration admin rule.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param ruleName The name of the rule.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    ruleName: string,\n    options?: AdminRulesGetOptionalParams,\n  ): Promise<AdminRulesGetResponse>;\n  /**\n   * Creates or updates an admin rule.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param ruleName The name of the rule.\n   * @param adminRule The admin rule to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    ruleName: string,\n    adminRule: BaseAdminRuleUnion,\n    options?: AdminRulesCreateOrUpdateOptionalParams,\n  ): Promise<AdminRulesCreateOrUpdateResponse>;\n  /**\n   * Deletes an admin rule.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param ruleName The name of the rule.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    ruleName: string,\n    options?: AdminRulesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes an admin rule.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param ruleCollectionName The name of the network manager security Configuration rule collection.\n   * @param ruleName The name of the rule.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    ruleCollectionName: string,\n    ruleName: string,\n    options?: AdminRulesDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}