{"version":3,"file":"networkInterfaces.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/networkInterfaces.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  NetworkInterface,\n  NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesOptionalParams,\n  NetworkInterfacesListCloudServiceNetworkInterfacesOptionalParams,\n  NetworkInterfacesListAllOptionalParams,\n  NetworkInterfacesListOptionalParams,\n  NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesOptionalParams,\n  NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesOptionalParams,\n  NetworkInterfaceIPConfiguration,\n  NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams,\n  NetworkInterfacesGetCloudServiceNetworkInterfaceOptionalParams,\n  NetworkInterfacesGetCloudServiceNetworkInterfaceResponse,\n  NetworkInterfacesDeleteOptionalParams,\n  NetworkInterfacesGetOptionalParams,\n  NetworkInterfacesGetResponse,\n  NetworkInterfacesCreateOrUpdateOptionalParams,\n  NetworkInterfacesCreateOrUpdateResponse,\n  TagsObject,\n  NetworkInterfacesUpdateTagsOptionalParams,\n  NetworkInterfacesUpdateTagsResponse,\n  NetworkInterfacesGetEffectiveRouteTableOptionalParams,\n  NetworkInterfacesGetEffectiveRouteTableResponse,\n  NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams,\n  NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse,\n  NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams,\n  NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceResponse,\n  NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationOptionalParams,\n  NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a NetworkInterfaces. */\nexport interface NetworkInterfaces {\n  /**\n   * Gets information about all network interfaces in a role instance in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param options The options parameters.\n   */\n  listCloudServiceRoleInstanceNetworkInterfaces(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    options?: NetworkInterfacesListCloudServiceRoleInstanceNetworkInterfacesOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface>;\n  /**\n   * Gets all network interfaces in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param options The options parameters.\n   */\n  listCloudServiceNetworkInterfaces(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: NetworkInterfacesListCloudServiceNetworkInterfacesOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface>;\n  /**\n   * Gets all network interfaces in a subscription.\n   * @param options The options parameters.\n   */\n  listAll(\n    options?: NetworkInterfacesListAllOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface>;\n  /**\n   * Gets all network interfaces in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    options?: NetworkInterfacesListOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface>;\n  /**\n   * Gets information about all network interfaces in a virtual machine in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param options The options parameters.\n   */\n  listVirtualMachineScaleSetVMNetworkInterfaces(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetVMNetworkInterfacesOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface>;\n  /**\n   * Gets all network interfaces in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param options The options parameters.\n   */\n  listVirtualMachineScaleSetNetworkInterfaces(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetNetworkInterfacesOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterface>;\n  /**\n   * Get the specified network interface ip configuration in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  listVirtualMachineScaleSetIpConfigurations(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkInterfaceIPConfiguration>;\n  /**\n   * Get the specified network interface in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  getCloudServiceNetworkInterface(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetCloudServiceNetworkInterfaceOptionalParams,\n  ): Promise<NetworkInterfacesGetCloudServiceNetworkInterfaceResponse>;\n  /**\n   * Deletes the specified network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the specified network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets information about the specified network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetOptionalParams,\n  ): Promise<NetworkInterfacesGetResponse>;\n  /**\n   * Creates or updates a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param parameters Parameters supplied to the create or update network interface operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    parameters: NetworkInterface,\n    options?: NetworkInterfacesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkInterfacesCreateOrUpdateResponse>,\n      NetworkInterfacesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param parameters Parameters supplied to the create or update network interface operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    parameters: NetworkInterface,\n    options?: NetworkInterfacesCreateOrUpdateOptionalParams,\n  ): Promise<NetworkInterfacesCreateOrUpdateResponse>;\n  /**\n   * Updates a network interface tags.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param parameters Parameters supplied to update network interface tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    parameters: TagsObject,\n    options?: NetworkInterfacesUpdateTagsOptionalParams,\n  ): Promise<NetworkInterfacesUpdateTagsResponse>;\n  /**\n   * Gets all route tables applied to a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  beginGetEffectiveRouteTable(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetEffectiveRouteTableOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkInterfacesGetEffectiveRouteTableResponse>,\n      NetworkInterfacesGetEffectiveRouteTableResponse\n    >\n  >;\n  /**\n   * Gets all route tables applied to a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  beginGetEffectiveRouteTableAndWait(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetEffectiveRouteTableOptionalParams,\n  ): Promise<NetworkInterfacesGetEffectiveRouteTableResponse>;\n  /**\n   * Gets all network security groups applied to a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  beginListEffectiveNetworkSecurityGroups(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse>,\n      NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse\n    >\n  >;\n  /**\n   * Gets all network security groups applied to a network interface.\n   * @param resourceGroupName The name of the resource group.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  beginListEffectiveNetworkSecurityGroupsAndWait(\n    resourceGroupName: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams,\n  ): Promise<NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse>;\n  /**\n   * Get the specified network interface in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param options The options parameters.\n   */\n  getVirtualMachineScaleSetNetworkInterface(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    options?: NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams,\n  ): Promise<NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceResponse>;\n  /**\n   * Get the specified network interface ip configuration in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param ipConfigurationName The name of the ip configuration.\n   * @param options The options parameters.\n   */\n  getVirtualMachineScaleSetIpConfiguration(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationOptionalParams,\n  ): Promise<NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationResponse>;\n}\n"]}