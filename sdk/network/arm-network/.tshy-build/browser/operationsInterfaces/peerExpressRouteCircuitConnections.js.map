{"version":3,"file":"peerExpressRouteCircuitConnections.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/peerExpressRouteCircuitConnections.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  PeerExpressRouteCircuitConnection,\n  PeerExpressRouteCircuitConnectionsListOptionalParams,\n  PeerExpressRouteCircuitConnectionsGetOptionalParams,\n  PeerExpressRouteCircuitConnectionsGetResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a PeerExpressRouteCircuitConnections. */\nexport interface PeerExpressRouteCircuitConnections {\n  /**\n   * Gets all global reach peer connections associated with a private peering in an express route\n   * circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the circuit.\n   * @param peeringName The name of the peering.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    options?: PeerExpressRouteCircuitConnectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<PeerExpressRouteCircuitConnection>;\n  /**\n   * Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.\n   * @param resourceGroupName The name of the resource group.\n   * @param circuitName The name of the express route circuit.\n   * @param peeringName The name of the peering.\n   * @param connectionName The name of the peer express route circuit connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    circuitName: string,\n    peeringName: string,\n    connectionName: string,\n    options?: PeerExpressRouteCircuitConnectionsGetOptionalParams,\n  ): Promise<PeerExpressRouteCircuitConnectionsGetResponse>;\n}\n"]}