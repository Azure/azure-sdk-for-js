{"version":3,"file":"virtualWans.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/virtualWans.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VirtualWAN,\n  VirtualWansListByResourceGroupOptionalParams,\n  VirtualWansListOptionalParams,\n  VirtualWansGetOptionalParams,\n  VirtualWansGetResponse,\n  VirtualWansCreateOrUpdateOptionalParams,\n  VirtualWansCreateOrUpdateResponse,\n  TagsObject,\n  VirtualWansUpdateTagsOptionalParams,\n  VirtualWansUpdateTagsResponse,\n  VirtualWansDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VirtualWans. */\nexport interface VirtualWans {\n  /**\n   * Lists all the VirtualWANs in a resource group.\n   * @param resourceGroupName The resource group name of the VirtualWan.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: VirtualWansListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualWAN>;\n  /**\n   * Lists all the VirtualWANs in a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: VirtualWansListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualWAN>;\n  /**\n   * Retrieves the details of a VirtualWAN.\n   * @param resourceGroupName The resource group name of the VirtualWan.\n   * @param virtualWANName The name of the VirtualWAN being retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualWANName: string,\n    options?: VirtualWansGetOptionalParams,\n  ): Promise<VirtualWansGetResponse>;\n  /**\n   * Creates a VirtualWAN resource if it doesn't exist else updates the existing VirtualWAN.\n   * @param resourceGroupName The resource group name of the VirtualWan.\n   * @param virtualWANName The name of the VirtualWAN being created or updated.\n   * @param wANParameters Parameters supplied to create or update VirtualWAN.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    virtualWANName: string,\n    wANParameters: VirtualWAN,\n    options?: VirtualWansCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualWansCreateOrUpdateResponse>,\n      VirtualWansCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates a VirtualWAN resource if it doesn't exist else updates the existing VirtualWAN.\n   * @param resourceGroupName The resource group name of the VirtualWan.\n   * @param virtualWANName The name of the VirtualWAN being created or updated.\n   * @param wANParameters Parameters supplied to create or update VirtualWAN.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    virtualWANName: string,\n    wANParameters: VirtualWAN,\n    options?: VirtualWansCreateOrUpdateOptionalParams,\n  ): Promise<VirtualWansCreateOrUpdateResponse>;\n  /**\n   * Updates a VirtualWAN tags.\n   * @param resourceGroupName The resource group name of the VirtualWan.\n   * @param virtualWANName The name of the VirtualWAN being updated.\n   * @param wANParameters Parameters supplied to Update VirtualWAN tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    virtualWANName: string,\n    wANParameters: TagsObject,\n    options?: VirtualWansUpdateTagsOptionalParams,\n  ): Promise<VirtualWansUpdateTagsResponse>;\n  /**\n   * Deletes a VirtualWAN.\n   * @param resourceGroupName The resource group name of the VirtualWan.\n   * @param virtualWANName The name of the VirtualWAN being deleted.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    virtualWANName: string,\n    options?: VirtualWansDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a VirtualWAN.\n   * @param resourceGroupName The resource group name of the VirtualWan.\n   * @param virtualWANName The name of the VirtualWAN being deleted.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualWANName: string,\n    options?: VirtualWansDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}