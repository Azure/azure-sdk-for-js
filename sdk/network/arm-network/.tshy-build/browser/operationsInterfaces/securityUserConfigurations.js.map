{"version":3,"file":"securityUserConfigurations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/securityUserConfigurations.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  SecurityUserConfiguration,\n  SecurityUserConfigurationsListOptionalParams,\n  SecurityUserConfigurationsGetOptionalParams,\n  SecurityUserConfigurationsGetResponse,\n  SecurityUserConfigurationsCreateOrUpdateOptionalParams,\n  SecurityUserConfigurationsCreateOrUpdateResponse,\n  SecurityUserConfigurationsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a SecurityUserConfigurations. */\nexport interface SecurityUserConfigurations {\n  /**\n   * Lists all the network manager security user configurations in a network manager, in a paginated\n   * format.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    networkManagerName: string,\n    options?: SecurityUserConfigurationsListOptionalParams,\n  ): PagedAsyncIterableIterator<SecurityUserConfiguration>;\n  /**\n   * Retrieves a network manager security user configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: SecurityUserConfigurationsGetOptionalParams,\n  ): Promise<SecurityUserConfigurationsGetResponse>;\n  /**\n   * Creates or updates a network manager security user configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param securityUserConfiguration The security user configuration to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    securityUserConfiguration: SecurityUserConfiguration,\n    options?: SecurityUserConfigurationsCreateOrUpdateOptionalParams,\n  ): Promise<SecurityUserConfigurationsCreateOrUpdateResponse>;\n  /**\n   * Deletes a network manager security user configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: SecurityUserConfigurationsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a network manager security user configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param networkManagerName The name of the network manager.\n   * @param configurationName The name of the network manager Security Configuration.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    networkManagerName: string,\n    configurationName: string,\n    options?: SecurityUserConfigurationsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}