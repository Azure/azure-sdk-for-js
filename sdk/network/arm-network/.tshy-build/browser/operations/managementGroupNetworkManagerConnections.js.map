{"version":3,"file":"managementGroupNetworkManagerConnections.js","sourceRoot":"","sources":["../../../src/operations/managementGroupNetworkManagerConnections.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { ManagementGroupNetworkManagerConnections } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { NetworkManagementClient } from \"../networkManagementClient.js\";\nimport {\n  NetworkManagerConnection,\n  ManagementGroupNetworkManagerConnectionsListNextOptionalParams,\n  ManagementGroupNetworkManagerConnectionsListOptionalParams,\n  ManagementGroupNetworkManagerConnectionsListResponse,\n  ManagementGroupNetworkManagerConnectionsCreateOrUpdateOptionalParams,\n  ManagementGroupNetworkManagerConnectionsCreateOrUpdateResponse,\n  ManagementGroupNetworkManagerConnectionsGetOptionalParams,\n  ManagementGroupNetworkManagerConnectionsGetResponse,\n  ManagementGroupNetworkManagerConnectionsDeleteOptionalParams,\n  ManagementGroupNetworkManagerConnectionsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagementGroupNetworkManagerConnections operations. */\nexport class ManagementGroupNetworkManagerConnectionsImpl\n  implements ManagementGroupNetworkManagerConnections\n{\n  private readonly client: NetworkManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagementGroupNetworkManagerConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NetworkManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all network manager connections created by this management group.\n   * @param managementGroupId The management group Id which uniquely identify the Microsoft Azure\n   *                          management group.\n   * @param options The options parameters.\n   */\n  public list(\n    managementGroupId: string,\n    options?: ManagementGroupNetworkManagerConnectionsListOptionalParams,\n  ): PagedAsyncIterableIterator<NetworkManagerConnection> {\n    const iter = this.listPagingAll(managementGroupId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(managementGroupId, options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    managementGroupId: string,\n    options?: ManagementGroupNetworkManagerConnectionsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<NetworkManagerConnection[]> {\n    let result: ManagementGroupNetworkManagerConnectionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(managementGroupId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        managementGroupId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    managementGroupId: string,\n    options?: ManagementGroupNetworkManagerConnectionsListOptionalParams,\n  ): AsyncIterableIterator<NetworkManagerConnection> {\n    for await (const page of this.listPagingPage(managementGroupId, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create a network manager connection on this management group.\n   * @param managementGroupId The management group Id which uniquely identify the Microsoft Azure\n   *                          management group.\n   * @param networkManagerConnectionName Name for the network manager connection.\n   * @param parameters Network manager connection to be created/updated.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    managementGroupId: string,\n    networkManagerConnectionName: string,\n    parameters: NetworkManagerConnection,\n    options?: ManagementGroupNetworkManagerConnectionsCreateOrUpdateOptionalParams,\n  ): Promise<ManagementGroupNetworkManagerConnectionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, networkManagerConnectionName, parameters, options },\n      createOrUpdateOperationSpec,\n    );\n  }\n\n  /**\n   * Get a specified connection created by this management group.\n   * @param managementGroupId The management group Id which uniquely identify the Microsoft Azure\n   *                          management group.\n   * @param networkManagerConnectionName Name for the network manager connection.\n   * @param options The options parameters.\n   */\n  get(\n    managementGroupId: string,\n    networkManagerConnectionName: string,\n    options?: ManagementGroupNetworkManagerConnectionsGetOptionalParams,\n  ): Promise<ManagementGroupNetworkManagerConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, networkManagerConnectionName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Delete specified pending connection created by this management group.\n   * @param managementGroupId The management group Id which uniquely identify the Microsoft Azure\n   *                          management group.\n   * @param networkManagerConnectionName Name for the network manager connection.\n   * @param options The options parameters.\n   */\n  delete(\n    managementGroupId: string,\n    networkManagerConnectionName: string,\n    options?: ManagementGroupNetworkManagerConnectionsDeleteOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, networkManagerConnectionName, options },\n      deleteOperationSpec,\n    );\n  }\n\n  /**\n   * List all network manager connections created by this management group.\n   * @param managementGroupId The management group Id which uniquely identify the Microsoft Azure\n   *                          management group.\n   * @param options The options parameters.\n   */\n  private _list(\n    managementGroupId: string,\n    options?: ManagementGroupNetworkManagerConnectionsListOptionalParams,\n  ): Promise<ManagementGroupNetworkManagerConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param managementGroupId The management group Id which uniquely identify the Microsoft Azure\n   *                          management group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    managementGroupId: string,\n    nextLink: string,\n    options?: ManagementGroupNetworkManagerConnectionsListNextOptionalParams,\n  ): Promise<ManagementGroupNetworkManagerConnectionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkManagerConnection,\n    },\n    201: {\n      bodyMapper: Mappers.NetworkManagerConnection,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters38,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.networkManagerConnectionName,\n    Parameters.managementGroupId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkManagerConnection,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.networkManagerConnectionName,\n    Parameters.managementGroupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections/{networkManagerConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.networkManagerConnectionName,\n    Parameters.managementGroupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Network/networkManagerConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkManagerConnectionListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.top,\n    Parameters.skipToken1,\n  ],\n  urlParameters: [Parameters.$host, Parameters.managementGroupId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkManagerConnectionListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.managementGroupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}