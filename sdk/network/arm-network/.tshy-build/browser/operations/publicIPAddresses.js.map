{"version":3,"file":"publicIPAddresses.js","sourceRoot":"","sources":["../../../src/operations/publicIPAddresses.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { PublicIPAddresses } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { NetworkManagementClient } from \"../networkManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  PublicIPAddress,\n  PublicIPAddressesListCloudServicePublicIPAddressesNextOptionalParams,\n  PublicIPAddressesListCloudServicePublicIPAddressesOptionalParams,\n  PublicIPAddressesListCloudServicePublicIPAddressesResponse,\n  PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesNextOptionalParams,\n  PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesOptionalParams,\n  PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesResponse,\n  PublicIPAddressesListAllNextOptionalParams,\n  PublicIPAddressesListAllOptionalParams,\n  PublicIPAddressesListAllResponse,\n  PublicIPAddressesListNextOptionalParams,\n  PublicIPAddressesListOptionalParams,\n  PublicIPAddressesListResponse,\n  PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesNextOptionalParams,\n  PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesOptionalParams,\n  PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesResponse,\n  PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesNextOptionalParams,\n  PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesOptionalParams,\n  PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesResponse,\n  PublicIPAddressesGetCloudServicePublicIPAddressOptionalParams,\n  PublicIPAddressesGetCloudServicePublicIPAddressResponse,\n  PublicIPAddressesDeleteOptionalParams,\n  PublicIPAddressesGetOptionalParams,\n  PublicIPAddressesGetResponse,\n  PublicIPAddressesCreateOrUpdateOptionalParams,\n  PublicIPAddressesCreateOrUpdateResponse,\n  TagsObject,\n  PublicIPAddressesUpdateTagsOptionalParams,\n  PublicIPAddressesUpdateTagsResponse,\n  PublicIPAddressesDdosProtectionStatusOptionalParams,\n  PublicIPAddressesDdosProtectionStatusResponse,\n  PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddressOptionalParams,\n  PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddressResponse,\n  PublicIPAddressesListCloudServicePublicIPAddressesNextResponse,\n  PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesNextResponse,\n  PublicIPAddressesListAllNextResponse,\n  PublicIPAddressesListNextResponse,\n  PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesNextResponse,\n  PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PublicIPAddresses operations. */\nexport class PublicIPAddressesImpl implements PublicIPAddresses {\n  private readonly client: NetworkManagementClient;\n\n  /**\n   * Initialize a new instance of the class PublicIPAddresses class.\n   * @param client Reference to the service client\n   */\n  constructor(client: NetworkManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets information about all public IP addresses on a cloud service level.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param options The options parameters.\n   */\n  public listCloudServicePublicIPAddresses(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: PublicIPAddressesListCloudServicePublicIPAddressesOptionalParams,\n  ): PagedAsyncIterableIterator<PublicIPAddress> {\n    const iter = this.listCloudServicePublicIPAddressesPagingAll(\n      resourceGroupName,\n      cloudServiceName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listCloudServicePublicIPAddressesPagingPage(\n          resourceGroupName,\n          cloudServiceName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listCloudServicePublicIPAddressesPagingPage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: PublicIPAddressesListCloudServicePublicIPAddressesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PublicIPAddress[]> {\n    let result: PublicIPAddressesListCloudServicePublicIPAddressesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listCloudServicePublicIPAddresses(\n        resourceGroupName,\n        cloudServiceName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listCloudServicePublicIPAddressesNext(\n        resourceGroupName,\n        cloudServiceName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listCloudServicePublicIPAddressesPagingAll(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: PublicIPAddressesListCloudServicePublicIPAddressesOptionalParams,\n  ): AsyncIterableIterator<PublicIPAddress> {\n    for await (const page of this.listCloudServicePublicIPAddressesPagingPage(\n      resourceGroupName,\n      cloudServiceName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets information about all public IP addresses in a role instance IP configuration in a cloud\n   * service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param networkInterfaceName The network interface name.\n   * @param ipConfigurationName The IP configuration name.\n   * @param options The options parameters.\n   */\n  public listCloudServiceRoleInstancePublicIPAddresses(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesOptionalParams,\n  ): PagedAsyncIterableIterator<PublicIPAddress> {\n    const iter = this.listCloudServiceRoleInstancePublicIPAddressesPagingAll(\n      resourceGroupName,\n      cloudServiceName,\n      roleInstanceName,\n      networkInterfaceName,\n      ipConfigurationName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listCloudServiceRoleInstancePublicIPAddressesPagingPage(\n          resourceGroupName,\n          cloudServiceName,\n          roleInstanceName,\n          networkInterfaceName,\n          ipConfigurationName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listCloudServiceRoleInstancePublicIPAddressesPagingPage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PublicIPAddress[]> {\n    let result: PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listCloudServiceRoleInstancePublicIPAddresses(\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        networkInterfaceName,\n        ipConfigurationName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listCloudServiceRoleInstancePublicIPAddressesNext(\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        networkInterfaceName,\n        ipConfigurationName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listCloudServiceRoleInstancePublicIPAddressesPagingAll(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesOptionalParams,\n  ): AsyncIterableIterator<PublicIPAddress> {\n    for await (const page of this.listCloudServiceRoleInstancePublicIPAddressesPagingPage(\n      resourceGroupName,\n      cloudServiceName,\n      roleInstanceName,\n      networkInterfaceName,\n      ipConfigurationName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the public IP addresses in a subscription.\n   * @param options The options parameters.\n   */\n  public listAll(\n    options?: PublicIPAddressesListAllOptionalParams,\n  ): PagedAsyncIterableIterator<PublicIPAddress> {\n    const iter = this.listAllPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAllPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listAllPagingPage(\n    options?: PublicIPAddressesListAllOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PublicIPAddress[]> {\n    let result: PublicIPAddressesListAllResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAll(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAllNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAllPagingAll(\n    options?: PublicIPAddressesListAllOptionalParams,\n  ): AsyncIterableIterator<PublicIPAddress> {\n    for await (const page of this.listAllPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all public IP addresses in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: PublicIPAddressesListOptionalParams,\n  ): PagedAsyncIterableIterator<PublicIPAddress> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceGroupName, options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: PublicIPAddressesListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PublicIPAddress[]> {\n    let result: PublicIPAddressesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: PublicIPAddressesListOptionalParams,\n  ): AsyncIterableIterator<PublicIPAddress> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets information about all public IP addresses on a virtual machine scale set level.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param options The options parameters.\n   */\n  public listVirtualMachineScaleSetPublicIPAddresses(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesOptionalParams,\n  ): PagedAsyncIterableIterator<PublicIPAddress> {\n    const iter = this.listVirtualMachineScaleSetPublicIPAddressesPagingAll(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listVirtualMachineScaleSetPublicIPAddressesPagingPage(\n          resourceGroupName,\n          virtualMachineScaleSetName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listVirtualMachineScaleSetPublicIPAddressesPagingPage(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PublicIPAddress[]> {\n    let result: PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listVirtualMachineScaleSetPublicIPAddresses(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listVirtualMachineScaleSetPublicIPAddressesNext(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listVirtualMachineScaleSetPublicIPAddressesPagingAll(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesOptionalParams,\n  ): AsyncIterableIterator<PublicIPAddress> {\n    for await (const page of this.listVirtualMachineScaleSetPublicIPAddressesPagingPage(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets information about all public IP addresses in a virtual machine IP configuration in a virtual\n   * machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The network interface name.\n   * @param ipConfigurationName The IP configuration name.\n   * @param options The options parameters.\n   */\n  public listVirtualMachineScaleSetVMPublicIPAddresses(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesOptionalParams,\n  ): PagedAsyncIterableIterator<PublicIPAddress> {\n    const iter = this.listVirtualMachineScaleSetVMPublicIPAddressesPagingAll(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      virtualmachineIndex,\n      networkInterfaceName,\n      ipConfigurationName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listVirtualMachineScaleSetVMPublicIPAddressesPagingPage(\n          resourceGroupName,\n          virtualMachineScaleSetName,\n          virtualmachineIndex,\n          networkInterfaceName,\n          ipConfigurationName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listVirtualMachineScaleSetVMPublicIPAddressesPagingPage(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PublicIPAddress[]> {\n    let result: PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listVirtualMachineScaleSetVMPublicIPAddresses(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        ipConfigurationName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listVirtualMachineScaleSetVMPublicIPAddressesNext(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        ipConfigurationName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listVirtualMachineScaleSetVMPublicIPAddressesPagingAll(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesOptionalParams,\n  ): AsyncIterableIterator<PublicIPAddress> {\n    for await (const page of this.listVirtualMachineScaleSetVMPublicIPAddressesPagingPage(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      virtualmachineIndex,\n      networkInterfaceName,\n      ipConfigurationName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets information about all public IP addresses on a cloud service level.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param options The options parameters.\n   */\n  private _listCloudServicePublicIPAddresses(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: PublicIPAddressesListCloudServicePublicIPAddressesOptionalParams,\n  ): Promise<PublicIPAddressesListCloudServicePublicIPAddressesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, options },\n      listCloudServicePublicIPAddressesOperationSpec,\n    );\n  }\n\n  /**\n   * Gets information about all public IP addresses in a role instance IP configuration in a cloud\n   * service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param networkInterfaceName The network interface name.\n   * @param ipConfigurationName The IP configuration name.\n   * @param options The options parameters.\n   */\n  private _listCloudServiceRoleInstancePublicIPAddresses(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesOptionalParams,\n  ): Promise<PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        networkInterfaceName,\n        ipConfigurationName,\n        options,\n      },\n      listCloudServiceRoleInstancePublicIPAddressesOperationSpec,\n    );\n  }\n\n  /**\n   * Get the specified public IP address in a cloud service.\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The role instance name.\n   * @param networkInterfaceName The name of the network interface.\n   * @param ipConfigurationName The name of the IP configuration.\n   * @param publicIpAddressName The name of the public IP Address.\n   * @param options The options parameters.\n   */\n  getCloudServicePublicIPAddress(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    publicIpAddressName: string,\n    options?: PublicIPAddressesGetCloudServicePublicIPAddressOptionalParams,\n  ): Promise<PublicIPAddressesGetCloudServicePublicIPAddressResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        networkInterfaceName,\n        ipConfigurationName,\n        publicIpAddressName,\n        options,\n      },\n      getCloudServicePublicIPAddressOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes the specified public IP address.\n   * @param resourceGroupName The name of the resource group.\n   * @param publicIpAddressName The name of the public IP address.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    publicIpAddressName: string,\n    options?: PublicIPAddressesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, publicIpAddressName, options },\n      spec: deleteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the specified public IP address.\n   * @param resourceGroupName The name of the resource group.\n   * @param publicIpAddressName The name of the public IP address.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    publicIpAddressName: string,\n    options?: PublicIPAddressesDeleteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      publicIpAddressName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the specified public IP address in a specified resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param publicIpAddressName The name of the public IP address.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    publicIpAddressName: string,\n    options?: PublicIPAddressesGetOptionalParams,\n  ): Promise<PublicIPAddressesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, publicIpAddressName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Creates or updates a static or dynamic public IP address.\n   * @param resourceGroupName The name of the resource group.\n   * @param publicIpAddressName The name of the public IP address.\n   * @param parameters Parameters supplied to the create or update public IP address operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    publicIpAddressName: string,\n    parameters: PublicIPAddress,\n    options?: PublicIPAddressesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<PublicIPAddressesCreateOrUpdateResponse>,\n      PublicIPAddressesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<PublicIPAddressesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, publicIpAddressName, parameters, options },\n      spec: createOrUpdateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      PublicIPAddressesCreateOrUpdateResponse,\n      OperationState<PublicIPAddressesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"azure-async-operation\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a static or dynamic public IP address.\n   * @param resourceGroupName The name of the resource group.\n   * @param publicIpAddressName The name of the public IP address.\n   * @param parameters Parameters supplied to the create or update public IP address operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    publicIpAddressName: string,\n    parameters: PublicIPAddress,\n    options?: PublicIPAddressesCreateOrUpdateOptionalParams,\n  ): Promise<PublicIPAddressesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      publicIpAddressName,\n      parameters,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates public IP address tags.\n   * @param resourceGroupName The name of the resource group.\n   * @param publicIpAddressName The name of the public IP address.\n   * @param parameters Parameters supplied to update public IP address tags.\n   * @param options The options parameters.\n   */\n  updateTags(\n    resourceGroupName: string,\n    publicIpAddressName: string,\n    parameters: TagsObject,\n    options?: PublicIPAddressesUpdateTagsOptionalParams,\n  ): Promise<PublicIPAddressesUpdateTagsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, publicIpAddressName, parameters, options },\n      updateTagsOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all the public IP addresses in a subscription.\n   * @param options The options parameters.\n   */\n  private _listAll(\n    options?: PublicIPAddressesListAllOptionalParams,\n  ): Promise<PublicIPAddressesListAllResponse> {\n    return this.client.sendOperationRequest({ options }, listAllOperationSpec);\n  }\n\n  /**\n   * Gets all public IP addresses in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: PublicIPAddressesListOptionalParams,\n  ): Promise<PublicIPAddressesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the Ddos Protection Status of a Public IP Address\n   * @param resourceGroupName The name of the resource group.\n   * @param publicIpAddressName The name of the public IP address.\n   * @param options The options parameters.\n   */\n  async beginDdosProtectionStatus(\n    resourceGroupName: string,\n    publicIpAddressName: string,\n    options?: PublicIPAddressesDdosProtectionStatusOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<PublicIPAddressesDdosProtectionStatusResponse>,\n      PublicIPAddressesDdosProtectionStatusResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<PublicIPAddressesDdosProtectionStatusResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, publicIpAddressName, options },\n      spec: ddosProtectionStatusOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      PublicIPAddressesDdosProtectionStatusResponse,\n      OperationState<PublicIPAddressesDdosProtectionStatusResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Gets the Ddos Protection Status of a Public IP Address\n   * @param resourceGroupName The name of the resource group.\n   * @param publicIpAddressName The name of the public IP address.\n   * @param options The options parameters.\n   */\n  async beginDdosProtectionStatusAndWait(\n    resourceGroupName: string,\n    publicIpAddressName: string,\n    options?: PublicIPAddressesDdosProtectionStatusOptionalParams,\n  ): Promise<PublicIPAddressesDdosProtectionStatusResponse> {\n    const poller = await this.beginDdosProtectionStatus(\n      resourceGroupName,\n      publicIpAddressName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about all public IP addresses on a virtual machine scale set level.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetPublicIPAddresses(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesOptionalParams,\n  ): Promise<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, virtualMachineScaleSetName, options },\n      listVirtualMachineScaleSetPublicIPAddressesOperationSpec,\n    );\n  }\n\n  /**\n   * Gets information about all public IP addresses in a virtual machine IP configuration in a virtual\n   * machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The network interface name.\n   * @param ipConfigurationName The IP configuration name.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetVMPublicIPAddresses(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesOptionalParams,\n  ): Promise<PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        ipConfigurationName,\n        options,\n      },\n      listVirtualMachineScaleSetVMPublicIPAddressesOperationSpec,\n    );\n  }\n\n  /**\n   * Get the specified public IP address in a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The name of the network interface.\n   * @param ipConfigurationName The name of the IP configuration.\n   * @param publicIpAddressName The name of the public IP Address.\n   * @param options The options parameters.\n   */\n  getVirtualMachineScaleSetPublicIPAddress(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    publicIpAddressName: string,\n    options?: PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddressOptionalParams,\n  ): Promise<PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddressResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        ipConfigurationName,\n        publicIpAddressName,\n        options,\n      },\n      getVirtualMachineScaleSetPublicIPAddressOperationSpec,\n    );\n  }\n\n  /**\n   * ListCloudServicePublicIPAddressesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListCloudServicePublicIPAddresses method.\n   * @param options The options parameters.\n   */\n  private _listCloudServicePublicIPAddressesNext(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    nextLink: string,\n    options?: PublicIPAddressesListCloudServicePublicIPAddressesNextOptionalParams,\n  ): Promise<PublicIPAddressesListCloudServicePublicIPAddressesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, nextLink, options },\n      listCloudServicePublicIPAddressesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListCloudServiceRoleInstancePublicIPAddressesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param cloudServiceName The name of the cloud service.\n   * @param roleInstanceName The name of role instance.\n   * @param networkInterfaceName The network interface name.\n   * @param ipConfigurationName The IP configuration name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListCloudServiceRoleInstancePublicIPAddresses method.\n   * @param options The options parameters.\n   */\n  private _listCloudServiceRoleInstancePublicIPAddressesNext(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    roleInstanceName: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    nextLink: string,\n    options?: PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesNextOptionalParams,\n  ): Promise<PublicIPAddressesListCloudServiceRoleInstancePublicIPAddressesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        cloudServiceName,\n        roleInstanceName,\n        networkInterfaceName,\n        ipConfigurationName,\n        nextLink,\n        options,\n      },\n      listCloudServiceRoleInstancePublicIPAddressesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAllNext\n   * @param nextLink The nextLink from the previous successful call to the ListAll method.\n   * @param options The options parameters.\n   */\n  private _listAllNext(\n    nextLink: string,\n    options?: PublicIPAddressesListAllNextOptionalParams,\n  ): Promise<PublicIPAddressesListAllNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAllNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: PublicIPAddressesListNextOptionalParams,\n  ): Promise<PublicIPAddressesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListVirtualMachineScaleSetPublicIPAddressesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListVirtualMachineScaleSetPublicIPAddresses method.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetPublicIPAddressesNext(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    nextLink: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesNextOptionalParams,\n  ): Promise<PublicIPAddressesListVirtualMachineScaleSetPublicIPAddressesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, virtualMachineScaleSetName, nextLink, options },\n      listVirtualMachineScaleSetPublicIPAddressesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListVirtualMachineScaleSetVMPublicIPAddressesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the virtual machine scale set.\n   * @param virtualmachineIndex The virtual machine index.\n   * @param networkInterfaceName The network interface name.\n   * @param ipConfigurationName The IP configuration name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListVirtualMachineScaleSetVMPublicIPAddresses method.\n   * @param options The options parameters.\n   */\n  private _listVirtualMachineScaleSetVMPublicIPAddressesNext(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    virtualmachineIndex: string,\n    networkInterfaceName: string,\n    ipConfigurationName: string,\n    nextLink: string,\n    options?: PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesNextOptionalParams,\n  ): Promise<PublicIPAddressesListVirtualMachineScaleSetVMPublicIPAddressesNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        virtualmachineIndex,\n        networkInterfaceName,\n        ipConfigurationName,\n        nextLink,\n        options,\n      },\n      listVirtualMachineScaleSetVMPublicIPAddressesNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listCloudServicePublicIPAddressesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/publicipaddresses\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddressListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.cloudServiceName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listCloudServiceRoleInstancePublicIPAddressesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddressListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.cloudServiceName,\n      Parameters.roleInstanceName,\n      Parameters.networkInterfaceName,\n      Parameters.ipConfigurationName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getCloudServicePublicIPAddressOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/{publicIpAddressName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIPAddress,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName,\n    Parameters.roleInstanceName,\n    Parameters.networkInterfaceName,\n    Parameters.ipConfigurationName,\n    Parameters.publicIpAddressName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.publicIpAddressName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIPAddress,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.publicIpAddressName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIPAddress,\n    },\n    201: {\n      bodyMapper: Mappers.PublicIPAddress,\n    },\n    202: {\n      bodyMapper: Mappers.PublicIPAddress,\n    },\n    204: {\n      bodyMapper: Mappers.PublicIPAddress,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.publicIpAddressName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIPAddress,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.publicIpAddressName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listAllOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIPAddressListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIPAddressListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst ddosProtectionStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}/ddosProtectionStatus\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIpDdosProtectionStatusResult,\n    },\n    201: {\n      bodyMapper: Mappers.PublicIpDdosProtectionStatusResult,\n    },\n    202: {\n      bodyMapper: Mappers.PublicIpDdosProtectionStatusResult,\n    },\n    204: {\n      bodyMapper: Mappers.PublicIpDdosProtectionStatusResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.publicIpAddressName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listVirtualMachineScaleSetPublicIPAddressesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/publicipaddresses\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddressListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion1],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.virtualMachineScaleSetName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listVirtualMachineScaleSetVMPublicIPAddressesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddressListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.apiVersion1],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.networkInterfaceName,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n      Parameters.ipConfigurationName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getVirtualMachineScaleSetPublicIPAddressOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/{publicIpAddressName}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddress,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    queryParameters: [Parameters.expand, Parameters.apiVersion1],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.networkInterfaceName,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n      Parameters.ipConfigurationName,\n      Parameters.publicIpAddressName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listCloudServicePublicIPAddressesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddressListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.cloudServiceName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listCloudServiceRoleInstancePublicIPAddressesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddressListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.cloudServiceName,\n      Parameters.roleInstanceName,\n      Parameters.networkInterfaceName,\n      Parameters.ipConfigurationName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listAllNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIPAddressListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicIPAddressListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listVirtualMachineScaleSetPublicIPAddressesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddressListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.virtualMachineScaleSetName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listVirtualMachineScaleSetVMPublicIPAddressesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicIPAddressListResult,\n      },\n      default: {\n        bodyMapper: Mappers.CloudError,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.resourceGroupName,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n      Parameters.networkInterfaceName,\n      Parameters.virtualMachineScaleSetName,\n      Parameters.virtualmachineIndex,\n      Parameters.ipConfigurationName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\n"]}