/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  ExpressRouteCrossConnectionPeering,
  NetworkManagementClient
} from "@azure/arm-network";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Creates or updates a peering in the specified ExpressRouteCrossConnection.
 *
 * @summary Creates or updates a peering in the specified ExpressRouteCrossConnection.
 * x-ms-original-file: specification/network/resource-manager/Microsoft.Network/stable/2022-11-01/examples/ExpressRouteCrossConnectionBgpPeeringCreate.json
 */
async function expressRouteCrossConnectionBgpPeeringCreate() {
  const subscriptionId = process.env["NETWORK_SUBSCRIPTION_ID"] || "subid";
  const resourceGroupName =
    process.env["NETWORK_RESOURCE_GROUP"] || "CrossConnection-SiliconValley";
  const crossConnectionName = "<circuitServiceKey>";
  const peeringName = "AzurePrivatePeering";
  const peeringParameters: ExpressRouteCrossConnectionPeering = {
    ipv6PeeringConfig: {
      primaryPeerAddressPrefix: "3FFE:FFFF:0:CD30::/126",
      secondaryPeerAddressPrefix: "3FFE:FFFF:0:CD30::4/126"
    },
    peerASN: 200,
    primaryPeerAddressPrefix: "192.168.16.252/30",
    secondaryPeerAddressPrefix: "192.168.18.252/30",
    vlanId: 200
  };
  const credential = new DefaultAzureCredential();
  const client = new NetworkManagementClient(credential, subscriptionId);
  const result = await client.expressRouteCrossConnectionPeerings.beginCreateOrUpdateAndWait(
    resourceGroupName,
    crossConnectionName,
    peeringName,
    peeringParameters
  );
  console.log(result);
}

async function main() {
  expressRouteCrossConnectionBgpPeeringCreate();
}

main().catch(console.error);
