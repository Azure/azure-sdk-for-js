/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/webCategoriesMappers";
import * as Parameters from "../models/parameters";
import { NetworkManagementClientContext } from "../networkManagementClientContext";

/** Class representing a WebCategories. */
export class WebCategories {
  private readonly client: NetworkManagementClientContext;

  /**
   * Create a WebCategories.
   * @param {NetworkManagementClientContext} client Reference to the service client.
   */
  constructor(client: NetworkManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets the specified Azure Web Category.
   * @param name The name of the azureWebCategory.
   * @param [options] The optional parameters
   * @returns Promise<Models.WebCategoriesGetResponse>
   */
  get(name: string, options?: Models.WebCategoriesGetOptionalParams): Promise<Models.WebCategoriesGetResponse>;
  /**
   * @param name The name of the azureWebCategory.
   * @param callback The callback
   */
  get(name: string, callback: msRest.ServiceCallback<Models.AzureWebCategory>): void;
  /**
   * @param name The name of the azureWebCategory.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(name: string, options: Models.WebCategoriesGetOptionalParams, callback: msRest.ServiceCallback<Models.AzureWebCategory>): void;
  get(name: string, options?: Models.WebCategoriesGetOptionalParams | msRest.ServiceCallback<Models.AzureWebCategory>, callback?: msRest.ServiceCallback<Models.AzureWebCategory>): Promise<Models.WebCategoriesGetResponse> {
    return this.client.sendOperationRequest(
      {
        name,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.WebCategoriesGetResponse>;
  }

  /**
   * Gets all the Azure Web Categories in a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.WebCategoriesListBySubscriptionResponse>
   */
  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.WebCategoriesListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.AzureWebCategoryListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AzureWebCategoryListResult>): void;
  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AzureWebCategoryListResult>, callback?: msRest.ServiceCallback<Models.AzureWebCategoryListResult>): Promise<Models.WebCategoriesListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.WebCategoriesListBySubscriptionResponse>;
  }

  /**
   * Gets all the Azure Web Categories in a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.WebCategoriesListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.WebCategoriesListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AzureWebCategoryListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AzureWebCategoryListResult>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AzureWebCategoryListResult>, callback?: msRest.ServiceCallback<Models.AzureWebCategoryListResult>): Promise<Models.WebCategoriesListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.WebCategoriesListBySubscriptionNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Network/azureWebCategories/{name}",
  urlParameters: [
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0,
    Parameters.expand
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AzureWebCategory
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Network/azureWebCategories",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AzureWebCategoryListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AzureWebCategoryListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
