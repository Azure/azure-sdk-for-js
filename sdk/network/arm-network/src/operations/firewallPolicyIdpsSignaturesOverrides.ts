/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/firewallPolicyIdpsSignaturesOverridesMappers";
import * as Parameters from "../models/parameters";
import { NetworkManagementClientContext } from "../networkManagementClientContext";

/** Class representing a FirewallPolicyIdpsSignaturesOverrides. */
export class FirewallPolicyIdpsSignaturesOverrides {
  private readonly client: NetworkManagementClientContext;

  /**
   * Create a FirewallPolicyIdpsSignaturesOverrides.
   * @param {NetworkManagementClientContext} client Reference to the service client.
   */
  constructor(client: NetworkManagementClientContext) {
    this.client = client;
  }

  /**
   * Will update the status of policy's signature overrides for IDPS
   * @param parameters Will contain all properties of the object to put
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param [options] The optional parameters
   * @returns Promise<Models.FirewallPolicyIdpsSignaturesOverridesPatchResponse>
   */
  patch(parameters: Models.SignaturesOverrides, resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase): Promise<Models.FirewallPolicyIdpsSignaturesOverridesPatchResponse>;
  /**
   * @param parameters Will contain all properties of the object to put
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param callback The callback
   */
  patch(parameters: Models.SignaturesOverrides, resourceGroupName: string, firewallPolicyName: string, callback: msRest.ServiceCallback<Models.SignaturesOverrides>): void;
  /**
   * @param parameters Will contain all properties of the object to put
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param options The optional parameters
   * @param callback The callback
   */
  patch(parameters: Models.SignaturesOverrides, resourceGroupName: string, firewallPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SignaturesOverrides>): void;
  patch(parameters: Models.SignaturesOverrides, resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SignaturesOverrides>, callback?: msRest.ServiceCallback<Models.SignaturesOverrides>): Promise<Models.FirewallPolicyIdpsSignaturesOverridesPatchResponse> {
    return this.client.sendOperationRequest(
      {
        parameters,
        resourceGroupName,
        firewallPolicyName,
        options
      },
      patchOperationSpec,
      callback) as Promise<Models.FirewallPolicyIdpsSignaturesOverridesPatchResponse>;
  }

  /**
   * Will override/create a new signature overrides for the policy's IDPS
   * @param parameters Will contain all properties of the object to put
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param [options] The optional parameters
   * @returns Promise<Models.FirewallPolicyIdpsSignaturesOverridesPutResponse>
   */
  put(parameters: Models.SignaturesOverrides, resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase): Promise<Models.FirewallPolicyIdpsSignaturesOverridesPutResponse>;
  /**
   * @param parameters Will contain all properties of the object to put
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param callback The callback
   */
  put(parameters: Models.SignaturesOverrides, resourceGroupName: string, firewallPolicyName: string, callback: msRest.ServiceCallback<Models.SignaturesOverrides>): void;
  /**
   * @param parameters Will contain all properties of the object to put
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param options The optional parameters
   * @param callback The callback
   */
  put(parameters: Models.SignaturesOverrides, resourceGroupName: string, firewallPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SignaturesOverrides>): void;
  put(parameters: Models.SignaturesOverrides, resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SignaturesOverrides>, callback?: msRest.ServiceCallback<Models.SignaturesOverrides>): Promise<Models.FirewallPolicyIdpsSignaturesOverridesPutResponse> {
    return this.client.sendOperationRequest(
      {
        parameters,
        resourceGroupName,
        firewallPolicyName,
        options
      },
      putOperationSpec,
      callback) as Promise<Models.FirewallPolicyIdpsSignaturesOverridesPutResponse>;
  }

  /**
   * Returns all signatures overrides for a specific policy.
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param [options] The optional parameters
   * @returns Promise<Models.FirewallPolicyIdpsSignaturesOverridesGetResponse>
   */
  get(resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase): Promise<Models.FirewallPolicyIdpsSignaturesOverridesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param callback The callback
   */
  get(resourceGroupName: string, firewallPolicyName: string, callback: msRest.ServiceCallback<Models.SignaturesOverrides>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, firewallPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SignaturesOverrides>): void;
  get(resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SignaturesOverrides>, callback?: msRest.ServiceCallback<Models.SignaturesOverrides>): Promise<Models.FirewallPolicyIdpsSignaturesOverridesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        firewallPolicyName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.FirewallPolicyIdpsSignaturesOverridesGetResponse>;
  }

  /**
   * Returns all signatures overrides objects for a specific policy as a list containing a single
   * value.
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param [options] The optional parameters
   * @returns Promise<Models.FirewallPolicyIdpsSignaturesOverridesListResponse>
   */
  list(resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase): Promise<Models.FirewallPolicyIdpsSignaturesOverridesListResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param callback The callback
   */
  list(resourceGroupName: string, firewallPolicyName: string, callback: msRest.ServiceCallback<Models.SignaturesOverridesList>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, firewallPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SignaturesOverridesList>): void;
  list(resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SignaturesOverridesList>, callback?: msRest.ServiceCallback<Models.SignaturesOverridesList>): Promise<Models.FirewallPolicyIdpsSignaturesOverridesListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        firewallPolicyName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.FirewallPolicyIdpsSignaturesOverridesListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const patchOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.firewallPolicyName,
    Parameters.subscriptionId
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.SignaturesOverrides,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SignaturesOverrides
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const putOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.firewallPolicyName,
    Parameters.subscriptionId
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.SignaturesOverrides,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SignaturesOverrides
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.firewallPolicyName,
    Parameters.subscriptionId
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SignaturesOverrides
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.firewallPolicyName,
    Parameters.subscriptionId
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SignaturesOverridesList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
