/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/inboundSecurityRuleOperationsMappers";
import * as Parameters from "../models/parameters";
import { NetworkManagementClientContext } from "../networkManagementClientContext";

/** Class representing a InboundSecurityRuleOperations. */
export class InboundSecurityRuleOperations {
  private readonly client: NetworkManagementClientContext;

  /**
   * Create a InboundSecurityRuleOperations.
   * @param {NetworkManagementClientContext} client Reference to the service client.
   */
  constructor(client: NetworkManagementClientContext) {
    this.client = client;
  }

  /**
   * Creates or updates the specified Network Virtual Appliance Inbound Security Rules.
   * @param resourceGroupName The name of the resource group.
   * @param networkVirtualApplianceName The name of the Network Virtual Appliance.
   * @param ruleCollectionName The name of security rule collection.
   * @param parameters Parameters supplied to the create or update Network Virtual Appliance Inbound
   * Security Rules operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.InboundSecurityRuleCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, networkVirtualApplianceName: string, ruleCollectionName: string, parameters: Models.InboundSecurityRule, options?: msRest.RequestOptionsBase): Promise<Models.InboundSecurityRuleCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,networkVirtualApplianceName,ruleCollectionName,parameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.InboundSecurityRuleCreateOrUpdateResponse>;
  }

  /**
   * Creates or updates the specified Network Virtual Appliance Inbound Security Rules.
   * @param resourceGroupName The name of the resource group.
   * @param networkVirtualApplianceName The name of the Network Virtual Appliance.
   * @param ruleCollectionName The name of security rule collection.
   * @param parameters Parameters supplied to the create or update Network Virtual Appliance Inbound
   * Security Rules operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, networkVirtualApplianceName: string, ruleCollectionName: string, parameters: Models.InboundSecurityRule, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        networkVirtualApplianceName,
        ruleCollectionName,
        parameters,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/inboundSecurityRules/{ruleCollectionName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.networkVirtualApplianceName,
    Parameters.ruleCollectionName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.InboundSecurityRule,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.InboundSecurityRule
    },
    201: {
      bodyMapper: Mappers.InboundSecurityRule
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
