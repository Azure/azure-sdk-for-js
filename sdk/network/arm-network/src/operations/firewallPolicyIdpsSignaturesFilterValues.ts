/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/firewallPolicyIdpsSignaturesFilterValuesMappers";
import * as Parameters from "../models/parameters";
import { NetworkManagementClientContext } from "../networkManagementClientContext";

/** Class representing a FirewallPolicyIdpsSignaturesFilterValues. */
export class FirewallPolicyIdpsSignaturesFilterValues {
  private readonly client: NetworkManagementClientContext;

  /**
   * Create a FirewallPolicyIdpsSignaturesFilterValues.
   * @param {NetworkManagementClientContext} client Reference to the service client.
   */
  constructor(client: NetworkManagementClientContext) {
    this.client = client;
  }

  /**
   * Retrieves the current filter values for the signatures overrides
   * @param parameters
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param [options] The optional parameters
   * @returns Promise<Models.FirewallPolicyIdpsSignaturesFilterValuesListResponse>
   */
  list(parameters: Models.SignatureOverridesFilterValuesQuery, resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase): Promise<Models.FirewallPolicyIdpsSignaturesFilterValuesListResponse>;
  /**
   * @param parameters
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param callback The callback
   */
  list(parameters: Models.SignatureOverridesFilterValuesQuery, resourceGroupName: string, firewallPolicyName: string, callback: msRest.ServiceCallback<Models.SignatureOverridesFilterValuesResponse>): void;
  /**
   * @param parameters
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(parameters: Models.SignatureOverridesFilterValuesQuery, resourceGroupName: string, firewallPolicyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SignatureOverridesFilterValuesResponse>): void;
  list(parameters: Models.SignatureOverridesFilterValuesQuery, resourceGroupName: string, firewallPolicyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SignatureOverridesFilterValuesResponse>, callback?: msRest.ServiceCallback<Models.SignatureOverridesFilterValuesResponse>): Promise<Models.FirewallPolicyIdpsSignaturesFilterValuesListResponse> {
    return this.client.sendOperationRequest(
      {
        parameters,
        resourceGroupName,
        firewallPolicyName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.FirewallPolicyIdpsSignaturesFilterValuesListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsFilterOptions",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.firewallPolicyName,
    Parameters.subscriptionId
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.SignatureOverridesFilterValuesQuery,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SignatureOverridesFilterValuesResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
