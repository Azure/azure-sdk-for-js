/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  NspAccessRule,
  NetworkSecurityPerimeterAccessRulesListOptionalParams,
  NetworkSecurityPerimeterAccessRulesGetOptionalParams,
  NetworkSecurityPerimeterAccessRulesGetResponse,
  NetworkSecurityPerimeterAccessRulesCreateOrUpdateOptionalParams,
  NetworkSecurityPerimeterAccessRulesCreateOrUpdateResponse,
  NetworkSecurityPerimeterAccessRulesDeleteOptionalParams,
  NetworkSecurityPerimeterAccessRulesReconcileOptionalParams,
  NetworkSecurityPerimeterAccessRulesReconcileResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkSecurityPerimeterAccessRules. */
export interface NetworkSecurityPerimeterAccessRules {
  /**
   * Lists the NSP access rules in the specified NSP profile.
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param profileName The name of the NSP profile.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    profileName: string,
    options?: NetworkSecurityPerimeterAccessRulesListOptionalParams,
  ): PagedAsyncIterableIterator<NspAccessRule>;
  /**
   * Gets the specified NSP access rule by name.
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param profileName The name of the NSP profile.
   * @param accessRuleName The name of the NSP access rule.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    profileName: string,
    accessRuleName: string,
    options?: NetworkSecurityPerimeterAccessRulesGetOptionalParams,
  ): Promise<NetworkSecurityPerimeterAccessRulesGetResponse>;
  /**
   * Creates or updates a network access rule.
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param profileName The name of the NSP profile.
   * @param accessRuleName The name of the NSP access rule.
   * @param parameters Parameters that hold the NspAccessRule resource to be created/updated.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    profileName: string,
    accessRuleName: string,
    parameters: NspAccessRule,
    options?: NetworkSecurityPerimeterAccessRulesCreateOrUpdateOptionalParams,
  ): Promise<NetworkSecurityPerimeterAccessRulesCreateOrUpdateResponse>;
  /**
   * Deletes an NSP access rule.
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param profileName The name of the NSP profile.
   * @param accessRuleName The name of the NSP access rule.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    profileName: string,
    accessRuleName: string,
    options?: NetworkSecurityPerimeterAccessRulesDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Reconcile NSP access rules
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param profileName The name of the NSP profile.
   * @param accessRuleName The name of the NSP access rule.
   * @param parameters Parameters for NSP access rule reconcile
   * @param options The options parameters.
   */
  reconcile(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    profileName: string,
    accessRuleName: string,
    parameters: Record<string, unknown>,
    options?: NetworkSecurityPerimeterAccessRulesReconcileOptionalParams,
  ): Promise<NetworkSecurityPerimeterAccessRulesReconcileResponse>;
}
