/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  VerifierWorkspace,
  VerifierWorkspacesListOptionalParams,
  VerifierWorkspacesGetOptionalParams,
  VerifierWorkspacesGetResponse,
  VerifierWorkspacesCreateOptionalParams,
  VerifierWorkspacesCreateResponse,
  VerifierWorkspacesUpdateOptionalParams,
  VerifierWorkspacesUpdateResponse,
  VerifierWorkspacesDeleteOptionalParams,
  VerifierWorkspacesDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VerifierWorkspaces. */
export interface VerifierWorkspaces {
  /**
   * Gets list of Verifier Workspaces.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    networkManagerName: string,
    options?: VerifierWorkspacesListOptionalParams,
  ): PagedAsyncIterableIterator<VerifierWorkspace>;
  /**
   * Gets Verifier Workspace.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param workspaceName Workspace name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkManagerName: string,
    workspaceName: string,
    options?: VerifierWorkspacesGetOptionalParams,
  ): Promise<VerifierWorkspacesGetResponse>;
  /**
   * Creates Verifier Workspace.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param workspaceName Workspace name.
   * @param body Verifier Workspace object to create/update.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    networkManagerName: string,
    workspaceName: string,
    body: VerifierWorkspace,
    options?: VerifierWorkspacesCreateOptionalParams,
  ): Promise<VerifierWorkspacesCreateResponse>;
  /**
   * Updates Verifier Workspace.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param workspaceName Workspace name.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    networkManagerName: string,
    workspaceName: string,
    options?: VerifierWorkspacesUpdateOptionalParams,
  ): Promise<VerifierWorkspacesUpdateResponse>;
  /**
   * Deletes Verifier Workspace.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param workspaceName Workspace name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkManagerName: string,
    workspaceName: string,
    options?: VerifierWorkspacesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<VerifierWorkspacesDeleteResponse>,
      VerifierWorkspacesDeleteResponse
    >
  >;
  /**
   * Deletes Verifier Workspace.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param workspaceName Workspace name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkManagerName: string,
    workspaceName: string,
    options?: VerifierWorkspacesDeleteOptionalParams,
  ): Promise<VerifierWorkspacesDeleteResponse>;
}
