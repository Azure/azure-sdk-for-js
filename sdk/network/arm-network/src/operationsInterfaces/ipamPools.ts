/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  IpamPool,
  IpamPoolsListOptionalParams,
  PoolAssociation,
  IpamPoolsListAssociatedResourcesOptionalParams,
  IpamPoolsCreateOptionalParams,
  IpamPoolsCreateResponse,
  IpamPoolsUpdateOptionalParams,
  IpamPoolsUpdateResponse,
  IpamPoolsGetOptionalParams,
  IpamPoolsGetResponse,
  IpamPoolsDeleteOptionalParams,
  IpamPoolsDeleteResponse,
  IpamPoolsGetPoolUsageOptionalParams,
  IpamPoolsGetPoolUsageResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a IpamPools. */
export interface IpamPools {
  /**
   * Gets list of Pool resources at Network Manager level.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    networkManagerName: string,
    options?: IpamPoolsListOptionalParams,
  ): PagedAsyncIterableIterator<IpamPool>;
  /**
   * List Associated Resource in the Pool.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  listAssociatedResources(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolsListAssociatedResourcesOptionalParams,
  ): PagedAsyncIterableIterator<PoolAssociation>;
  /**
   * Creates/Updates the Pool resource.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param poolName IP Address Manager Pool resource name.
   * @param body Pool resource object to create/update.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    body: IpamPool,
    options?: IpamPoolsCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<IpamPoolsCreateResponse>,
      IpamPoolsCreateResponse
    >
  >;
  /**
   * Creates/Updates the Pool resource.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param poolName IP Address Manager Pool resource name.
   * @param body Pool resource object to create/update.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    body: IpamPool,
    options?: IpamPoolsCreateOptionalParams,
  ): Promise<IpamPoolsCreateResponse>;
  /**
   * Updates the specific Pool resource.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param poolName IP Address Manager Pool resource name.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolsUpdateOptionalParams,
  ): Promise<IpamPoolsUpdateResponse>;
  /**
   * Gets the specific Pool resource.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolsGetOptionalParams,
  ): Promise<IpamPoolsGetResponse>;
  /**
   * Delete the Pool resource.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<IpamPoolsDeleteResponse>,
      IpamPoolsDeleteResponse
    >
  >;
  /**
   * Delete the Pool resource.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolsDeleteOptionalParams,
  ): Promise<IpamPoolsDeleteResponse>;
  /**
   * Get the Pool Usage.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  getPoolUsage(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolsGetPoolUsageOptionalParams,
  ): Promise<IpamPoolsGetPoolUsageResponse>;
}
