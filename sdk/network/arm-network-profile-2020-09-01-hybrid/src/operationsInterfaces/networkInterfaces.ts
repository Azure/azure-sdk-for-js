/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  NetworkInterface,
  NetworkInterfacesListAllOptionalParams,
  NetworkInterfacesListOptionalParams,
  NetworkInterfacesDeleteOptionalParams,
  NetworkInterfacesGetOptionalParams,
  NetworkInterfacesGetResponse,
  NetworkInterfacesCreateOrUpdateOptionalParams,
  NetworkInterfacesCreateOrUpdateResponse,
  TagsObject,
  NetworkInterfacesUpdateTagsOptionalParams,
  NetworkInterfacesUpdateTagsResponse,
  NetworkInterfacesGetEffectiveRouteTableOptionalParams,
  NetworkInterfacesGetEffectiveRouteTableResponse,
  NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams,
  NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkInterfaces. */
export interface NetworkInterfaces {
  /**
   * Gets all network interfaces in a subscription.
   * @param options The options parameters.
   */
  listAll(
    options?: NetworkInterfacesListAllOptionalParams
  ): PagedAsyncIterableIterator<NetworkInterface>;
  /**
   * Gets all network interfaces in a resource group.
   * @param resourceGroupName The name of the resource group.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: NetworkInterfacesListOptionalParams
  ): PagedAsyncIterableIterator<NetworkInterface>;
  /**
   * Deletes the specified network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the specified network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets information about the specified network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesGetOptionalParams
  ): Promise<NetworkInterfacesGetResponse>;
  /**
   * Creates or updates a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param parameters Parameters supplied to the create or update network interface operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    networkInterfaceName: string,
    parameters: NetworkInterface,
    options?: NetworkInterfacesCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<NetworkInterfacesCreateOrUpdateResponse>,
      NetworkInterfacesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param parameters Parameters supplied to the create or update network interface operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    networkInterfaceName: string,
    parameters: NetworkInterface,
    options?: NetworkInterfacesCreateOrUpdateOptionalParams
  ): Promise<NetworkInterfacesCreateOrUpdateResponse>;
  /**
   * Updates a network interface tags.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param parameters Parameters supplied to update network interface tags.
   * @param options The options parameters.
   */
  beginUpdateTags(
    resourceGroupName: string,
    networkInterfaceName: string,
    parameters: TagsObject,
    options?: NetworkInterfacesUpdateTagsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<NetworkInterfacesUpdateTagsResponse>,
      NetworkInterfacesUpdateTagsResponse
    >
  >;
  /**
   * Updates a network interface tags.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param parameters Parameters supplied to update network interface tags.
   * @param options The options parameters.
   */
  beginUpdateTagsAndWait(
    resourceGroupName: string,
    networkInterfaceName: string,
    parameters: TagsObject,
    options?: NetworkInterfacesUpdateTagsOptionalParams
  ): Promise<NetworkInterfacesUpdateTagsResponse>;
  /**
   * Gets all route tables applied to a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  beginGetEffectiveRouteTable(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesGetEffectiveRouteTableOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<NetworkInterfacesGetEffectiveRouteTableResponse>,
      NetworkInterfacesGetEffectiveRouteTableResponse
    >
  >;
  /**
   * Gets all route tables applied to a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  beginGetEffectiveRouteTableAndWait(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesGetEffectiveRouteTableOptionalParams
  ): Promise<NetworkInterfacesGetEffectiveRouteTableResponse>;
  /**
   * Gets all network security groups applied to a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  beginListEffectiveNetworkSecurityGroups(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<
        NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse
      >,
      NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse
    >
  >;
  /**
   * Gets all network security groups applied to a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  beginListEffectiveNetworkSecurityGroupsAndWait(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesListEffectiveNetworkSecurityGroupsOptionalParams
  ): Promise<NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse>;
}
