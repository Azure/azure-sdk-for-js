/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const SubResource: msRest.CompositeMapper = {
  serializedName: "SubResource",
  type: {
    name: "Composite",
    className: "SubResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkGatewayIPConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkGatewayIPConfiguration",
  type: {
    name: "Composite",
    className: "VirtualNetworkGatewayIPConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      privateIPAllocationMethod: {
        serializedName: "properties.privateIPAllocationMethod",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      publicIPAddress: {
        serializedName: "properties.publicIPAddress",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkGatewaySku: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkGatewaySku",
  type: {
    name: "Composite",
    className: "VirtualNetworkGatewaySku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AddressSpace: msRest.CompositeMapper = {
  serializedName: "AddressSpace",
  type: {
    name: "Composite",
    className: "AddressSpace",
    modelProperties: {
      addressPrefixes: {
        serializedName: "addressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VpnClientRootCertificate: msRest.CompositeMapper = {
  serializedName: "VpnClientRootCertificate",
  type: {
    name: "Composite",
    className: "VpnClientRootCertificate",
    modelProperties: {
      ...SubResource.type.modelProperties,
      publicCertData: {
        required: true,
        serializedName: "properties.publicCertData",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VpnClientRevokedCertificate: msRest.CompositeMapper = {
  serializedName: "VpnClientRevokedCertificate",
  type: {
    name: "Composite",
    className: "VpnClientRevokedCertificate",
    modelProperties: {
      ...SubResource.type.modelProperties,
      thumbprint: {
        serializedName: "properties.thumbprint",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IpsecPolicy: msRest.CompositeMapper = {
  serializedName: "IpsecPolicy",
  type: {
    name: "Composite",
    className: "IpsecPolicy",
    modelProperties: {
      saLifeTimeSeconds: {
        required: true,
        serializedName: "saLifeTimeSeconds",
        type: {
          name: "Number"
        }
      },
      saDataSizeKilobytes: {
        required: true,
        serializedName: "saDataSizeKilobytes",
        type: {
          name: "Number"
        }
      },
      ipsecEncryption: {
        required: true,
        serializedName: "ipsecEncryption",
        type: {
          name: "String"
        }
      },
      ipsecIntegrity: {
        required: true,
        serializedName: "ipsecIntegrity",
        type: {
          name: "String"
        }
      },
      ikeEncryption: {
        required: true,
        serializedName: "ikeEncryption",
        type: {
          name: "String"
        }
      },
      ikeIntegrity: {
        required: true,
        serializedName: "ikeIntegrity",
        type: {
          name: "String"
        }
      },
      dhGroup: {
        required: true,
        serializedName: "dhGroup",
        type: {
          name: "String"
        }
      },
      pfsGroup: {
        required: true,
        serializedName: "pfsGroup",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VpnClientConfiguration: msRest.CompositeMapper = {
  serializedName: "VpnClientConfiguration",
  type: {
    name: "Composite",
    className: "VpnClientConfiguration",
    modelProperties: {
      vpnClientAddressPool: {
        serializedName: "vpnClientAddressPool",
        type: {
          name: "Composite",
          className: "AddressSpace"
        }
      },
      vpnClientRootCertificates: {
        serializedName: "vpnClientRootCertificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VpnClientRootCertificate"
            }
          }
        }
      },
      vpnClientRevokedCertificates: {
        serializedName: "vpnClientRevokedCertificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VpnClientRevokedCertificate"
            }
          }
        }
      },
      vpnClientProtocols: {
        serializedName: "vpnClientProtocols",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      vpnClientIpsecPolicies: {
        serializedName: "vpnClientIpsecPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IpsecPolicy"
            }
          }
        }
      },
      radiusServerAddress: {
        serializedName: "radiusServerAddress",
        type: {
          name: "String"
        }
      },
      radiusServerSecret: {
        serializedName: "radiusServerSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BgpSettings: msRest.CompositeMapper = {
  serializedName: "BgpSettings",
  type: {
    name: "Composite",
    className: "BgpSettings",
    modelProperties: {
      asn: {
        serializedName: "asn",
        type: {
          name: "Number"
        }
      },
      bgpPeeringAddress: {
        serializedName: "bgpPeeringAddress",
        type: {
          name: "String"
        }
      },
      peerWeight: {
        serializedName: "peerWeight",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BgpPeerStatus: msRest.CompositeMapper = {
  serializedName: "BgpPeerStatus",
  type: {
    name: "Composite",
    className: "BgpPeerStatus",
    modelProperties: {
      localAddress: {
        readOnly: true,
        serializedName: "localAddress",
        type: {
          name: "String"
        }
      },
      neighbor: {
        readOnly: true,
        serializedName: "neighbor",
        type: {
          name: "String"
        }
      },
      asn: {
        readOnly: true,
        serializedName: "asn",
        type: {
          name: "Number"
        }
      },
      state: {
        readOnly: true,
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      connectedDuration: {
        readOnly: true,
        serializedName: "connectedDuration",
        type: {
          name: "String"
        }
      },
      routesReceived: {
        readOnly: true,
        serializedName: "routesReceived",
        type: {
          name: "Number"
        }
      },
      messagesSent: {
        readOnly: true,
        serializedName: "messagesSent",
        type: {
          name: "Number"
        }
      },
      messagesReceived: {
        readOnly: true,
        serializedName: "messagesReceived",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GatewayRoute: msRest.CompositeMapper = {
  serializedName: "GatewayRoute",
  type: {
    name: "Composite",
    className: "GatewayRoute",
    modelProperties: {
      localAddress: {
        readOnly: true,
        serializedName: "localAddress",
        type: {
          name: "String"
        }
      },
      network: {
        readOnly: true,
        serializedName: "network",
        type: {
          name: "String"
        }
      },
      nextHop: {
        readOnly: true,
        serializedName: "nextHop",
        type: {
          name: "String"
        }
      },
      sourcePeer: {
        readOnly: true,
        serializedName: "sourcePeer",
        type: {
          name: "String"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      asPath: {
        readOnly: true,
        serializedName: "asPath",
        type: {
          name: "String"
        }
      },
      weight: {
        readOnly: true,
        serializedName: "weight",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualNetworkGateway: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkGateway",
  type: {
    name: "Composite",
    className: "VirtualNetworkGateway",
    modelProperties: {
      ...Resource.type.modelProperties,
      ipConfigurations: {
        serializedName: "properties.ipConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkGatewayIPConfiguration"
            }
          }
        }
      },
      gatewayType: {
        serializedName: "properties.gatewayType",
        type: {
          name: "String"
        }
      },
      vpnType: {
        serializedName: "properties.vpnType",
        type: {
          name: "String"
        }
      },
      enableBgp: {
        serializedName: "properties.enableBgp",
        type: {
          name: "Boolean"
        }
      },
      activeActive: {
        serializedName: "properties.activeActive",
        type: {
          name: "Boolean"
        }
      },
      gatewayDefaultSite: {
        serializedName: "properties.gatewayDefaultSite",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "VirtualNetworkGatewaySku"
        }
      },
      vpnClientConfiguration: {
        serializedName: "properties.vpnClientConfiguration",
        type: {
          name: "Composite",
          className: "VpnClientConfiguration"
        }
      },
      bgpSettings: {
        serializedName: "properties.bgpSettings",
        type: {
          name: "Composite",
          className: "BgpSettings"
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VpnClientParameters: msRest.CompositeMapper = {
  serializedName: "VpnClientParameters",
  type: {
    name: "Composite",
    className: "VpnClientParameters",
    modelProperties: {
      processorArchitecture: {
        serializedName: "processorArchitecture",
        type: {
          name: "String"
        }
      },
      authenticationMethod: {
        serializedName: "authenticationMethod",
        type: {
          name: "String"
        }
      },
      radiusServerAuthCertificate: {
        serializedName: "radiusServerAuthCertificate",
        type: {
          name: "String"
        }
      },
      clientRootCertificates: {
        serializedName: "clientRootCertificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BgpPeerStatusListResult: msRest.CompositeMapper = {
  serializedName: "BgpPeerStatusListResult",
  type: {
    name: "Composite",
    className: "BgpPeerStatusListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BgpPeerStatus"
            }
          }
        }
      }
    }
  }
};

export const GatewayRouteListResult: msRest.CompositeMapper = {
  serializedName: "GatewayRouteListResult",
  type: {
    name: "Composite",
    className: "GatewayRouteListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayRoute"
            }
          }
        }
      }
    }
  }
};

export const TunnelConnectionHealth: msRest.CompositeMapper = {
  serializedName: "TunnelConnectionHealth",
  type: {
    name: "Composite",
    className: "TunnelConnectionHealth",
    modelProperties: {
      tunnel: {
        readOnly: true,
        serializedName: "tunnel",
        type: {
          name: "String"
        }
      },
      connectionStatus: {
        readOnly: true,
        serializedName: "connectionStatus",
        type: {
          name: "String"
        }
      },
      ingressBytesTransferred: {
        readOnly: true,
        serializedName: "ingressBytesTransferred",
        type: {
          name: "Number"
        }
      },
      egressBytesTransferred: {
        readOnly: true,
        serializedName: "egressBytesTransferred",
        type: {
          name: "Number"
        }
      },
      lastConnectionEstablishedUtcTime: {
        readOnly: true,
        serializedName: "lastConnectionEstablishedUtcTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocalNetworkGateway: msRest.CompositeMapper = {
  serializedName: "LocalNetworkGateway",
  type: {
    name: "Composite",
    className: "LocalNetworkGateway",
    modelProperties: {
      ...Resource.type.modelProperties,
      localNetworkAddressSpace: {
        serializedName: "properties.localNetworkAddressSpace",
        type: {
          name: "Composite",
          className: "AddressSpace"
        }
      },
      gatewayIpAddress: {
        serializedName: "properties.gatewayIpAddress",
        type: {
          name: "String"
        }
      },
      bgpSettings: {
        serializedName: "properties.bgpSettings",
        type: {
          name: "Composite",
          className: "BgpSettings"
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkGatewayConnection: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkGatewayConnection",
  type: {
    name: "Composite",
    className: "VirtualNetworkGatewayConnection",
    modelProperties: {
      ...Resource.type.modelProperties,
      authorizationKey: {
        serializedName: "properties.authorizationKey",
        type: {
          name: "String"
        }
      },
      virtualNetworkGateway1: {
        required: true,
        serializedName: "properties.virtualNetworkGateway1",
        type: {
          name: "Composite",
          className: "VirtualNetworkGateway"
        }
      },
      virtualNetworkGateway2: {
        serializedName: "properties.virtualNetworkGateway2",
        type: {
          name: "Composite",
          className: "VirtualNetworkGateway"
        }
      },
      localNetworkGateway2: {
        serializedName: "properties.localNetworkGateway2",
        type: {
          name: "Composite",
          className: "LocalNetworkGateway"
        }
      },
      connectionType: {
        required: true,
        serializedName: "properties.connectionType",
        type: {
          name: "String"
        }
      },
      connectionProtocol: {
        serializedName: "properties.connectionProtocol",
        type: {
          name: "String"
        }
      },
      routingWeight: {
        serializedName: "properties.routingWeight",
        type: {
          name: "Number"
        }
      },
      sharedKey: {
        serializedName: "properties.sharedKey",
        type: {
          name: "String"
        }
      },
      connectionStatus: {
        readOnly: true,
        serializedName: "properties.connectionStatus",
        type: {
          name: "String"
        }
      },
      tunnelConnectionStatus: {
        readOnly: true,
        serializedName: "properties.tunnelConnectionStatus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TunnelConnectionHealth"
            }
          }
        }
      },
      egressBytesTransferred: {
        readOnly: true,
        serializedName: "properties.egressBytesTransferred",
        type: {
          name: "Number"
        }
      },
      ingressBytesTransferred: {
        readOnly: true,
        serializedName: "properties.ingressBytesTransferred",
        type: {
          name: "Number"
        }
      },
      peer: {
        serializedName: "properties.peer",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      enableBgp: {
        serializedName: "properties.enableBgp",
        type: {
          name: "Boolean"
        }
      },
      usePolicyBasedTrafficSelectors: {
        serializedName: "properties.usePolicyBasedTrafficSelectors",
        type: {
          name: "Boolean"
        }
      },
      ipsecPolicies: {
        serializedName: "properties.ipsecPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IpsecPolicy"
            }
          }
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      expressRouteGatewayBypass: {
        serializedName: "properties.expressRouteGatewayBypass",
        type: {
          name: "Boolean"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectionResetSharedKey: msRest.CompositeMapper = {
  serializedName: "ConnectionResetSharedKey",
  type: {
    name: "Composite",
    className: "ConnectionResetSharedKey",
    modelProperties: {
      keyLength: {
        required: true,
        serializedName: "keyLength",
        constraints: {
          InclusiveMaximum: 128,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ConnectionSharedKey: msRest.CompositeMapper = {
  serializedName: "ConnectionSharedKey",
  type: {
    name: "Composite",
    className: "ConnectionSharedKey",
    modelProperties: {
      ...SubResource.type.modelProperties,
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VpnClientIPsecParameters: msRest.CompositeMapper = {
  serializedName: "VpnClientIPsecParameters",
  type: {
    name: "Composite",
    className: "VpnClientIPsecParameters",
    modelProperties: {
      saLifeTimeSeconds: {
        required: true,
        serializedName: "saLifeTimeSeconds",
        type: {
          name: "Number"
        }
      },
      saDataSizeKilobytes: {
        required: true,
        serializedName: "saDataSizeKilobytes",
        type: {
          name: "Number"
        }
      },
      ipsecEncryption: {
        required: true,
        serializedName: "ipsecEncryption",
        type: {
          name: "String"
        }
      },
      ipsecIntegrity: {
        required: true,
        serializedName: "ipsecIntegrity",
        type: {
          name: "String"
        }
      },
      ikeEncryption: {
        required: true,
        serializedName: "ikeEncryption",
        type: {
          name: "String"
        }
      },
      ikeIntegrity: {
        required: true,
        serializedName: "ikeIntegrity",
        type: {
          name: "String"
        }
      },
      dhGroup: {
        required: true,
        serializedName: "dhGroup",
        type: {
          name: "String"
        }
      },
      pfsGroup: {
        required: true,
        serializedName: "pfsGroup",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkConnectionGatewayReference: msRest.CompositeMapper = {
  serializedName: "virtualNetworkConnectionGatewayReference",
  type: {
    name: "Composite",
    className: "VirtualNetworkConnectionGatewayReference",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkGatewayConnectionListEntity: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkGatewayConnectionListEntity",
  type: {
    name: "Composite",
    className: "VirtualNetworkGatewayConnectionListEntity",
    modelProperties: {
      ...Resource.type.modelProperties,
      authorizationKey: {
        serializedName: "properties.authorizationKey",
        type: {
          name: "String"
        }
      },
      virtualNetworkGateway1: {
        required: true,
        serializedName: "properties.virtualNetworkGateway1",
        type: {
          name: "Composite",
          className: "VirtualNetworkConnectionGatewayReference"
        }
      },
      virtualNetworkGateway2: {
        serializedName: "properties.virtualNetworkGateway2",
        type: {
          name: "Composite",
          className: "VirtualNetworkConnectionGatewayReference"
        }
      },
      localNetworkGateway2: {
        serializedName: "properties.localNetworkGateway2",
        type: {
          name: "Composite",
          className: "VirtualNetworkConnectionGatewayReference"
        }
      },
      connectionType: {
        required: true,
        serializedName: "properties.connectionType",
        type: {
          name: "String"
        }
      },
      connectionProtocol: {
        serializedName: "properties.connectionProtocol",
        type: {
          name: "String"
        }
      },
      routingWeight: {
        serializedName: "properties.routingWeight",
        type: {
          name: "Number"
        }
      },
      sharedKey: {
        serializedName: "properties.sharedKey",
        type: {
          name: "String"
        }
      },
      connectionStatus: {
        readOnly: true,
        serializedName: "properties.connectionStatus",
        type: {
          name: "String"
        }
      },
      tunnelConnectionStatus: {
        readOnly: true,
        serializedName: "properties.tunnelConnectionStatus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TunnelConnectionHealth"
            }
          }
        }
      },
      egressBytesTransferred: {
        readOnly: true,
        serializedName: "properties.egressBytesTransferred",
        type: {
          name: "Number"
        }
      },
      ingressBytesTransferred: {
        readOnly: true,
        serializedName: "properties.ingressBytesTransferred",
        type: {
          name: "Number"
        }
      },
      peer: {
        serializedName: "properties.peer",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      enableBgp: {
        serializedName: "properties.enableBgp",
        type: {
          name: "Boolean"
        }
      },
      usePolicyBasedTrafficSelectors: {
        serializedName: "properties.usePolicyBasedTrafficSelectors",
        type: {
          name: "Boolean"
        }
      },
      ipsecPolicies: {
        serializedName: "properties.ipsecPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IpsecPolicy"
            }
          }
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      expressRouteGatewayBypass: {
        serializedName: "properties.expressRouteGatewayBypass",
        type: {
          name: "Boolean"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VpnDeviceScriptParameters: msRest.CompositeMapper = {
  serializedName: "VpnDeviceScriptParameters",
  type: {
    name: "Composite",
    className: "VpnDeviceScriptParameters",
    modelProperties: {
      vendor: {
        serializedName: "vendor",
        type: {
          name: "String"
        }
      },
      deviceFamily: {
        serializedName: "deviceFamily",
        type: {
          name: "String"
        }
      },
      firmwareVersion: {
        serializedName: "firmwareVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TagsObject: msRest.CompositeMapper = {
  serializedName: "TagsObject",
  type: {
    name: "Composite",
    className: "TagsObject",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const LoadBalancerSku: msRest.CompositeMapper = {
  serializedName: "LoadBalancerSku",
  type: {
    name: "Composite",
    className: "LoadBalancerSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationSecurityGroup: msRest.CompositeMapper = {
  serializedName: "ApplicationSecurityGroup",
  type: {
    name: "Composite",
    className: "ApplicationSecurityGroup",
    modelProperties: {
      ...Resource.type.modelProperties,
      resourceGuid: {
        readOnly: true,
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityRule: msRest.CompositeMapper = {
  serializedName: "SecurityRule",
  type: {
    name: "Composite",
    className: "SecurityRule",
    modelProperties: {
      ...SubResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      protocol: {
        required: true,
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      sourcePortRange: {
        serializedName: "properties.sourcePortRange",
        type: {
          name: "String"
        }
      },
      destinationPortRange: {
        serializedName: "properties.destinationPortRange",
        type: {
          name: "String"
        }
      },
      sourceAddressPrefix: {
        serializedName: "properties.sourceAddressPrefix",
        type: {
          name: "String"
        }
      },
      sourceAddressPrefixes: {
        serializedName: "properties.sourceAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sourceApplicationSecurityGroups: {
        serializedName: "properties.sourceApplicationSecurityGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationSecurityGroup"
            }
          }
        }
      },
      destinationAddressPrefix: {
        serializedName: "properties.destinationAddressPrefix",
        type: {
          name: "String"
        }
      },
      destinationAddressPrefixes: {
        serializedName: "properties.destinationAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationApplicationSecurityGroups: {
        serializedName: "properties.destinationApplicationSecurityGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationSecurityGroup"
            }
          }
        }
      },
      sourcePortRanges: {
        serializedName: "properties.sourcePortRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationPortRanges: {
        serializedName: "properties.destinationPortRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      access: {
        required: true,
        serializedName: "properties.access",
        type: {
          name: "String"
        }
      },
      priority: {
        serializedName: "properties.priority",
        type: {
          name: "Number"
        }
      },
      direction: {
        required: true,
        serializedName: "properties.direction",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EndpointService: msRest.CompositeMapper = {
  serializedName: "EndpointService",
  type: {
    name: "Composite",
    className: "EndpointService",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InterfaceEndpoint: msRest.CompositeMapper = {
  serializedName: "InterfaceEndpoint",
  type: {
    name: "Composite",
    className: "InterfaceEndpoint",
    modelProperties: {
      ...Resource.type.modelProperties,
      fqdn: {
        serializedName: "properties.fqdn",
        type: {
          name: "String"
        }
      },
      endpointService: {
        serializedName: "properties.endpointService",
        type: {
          name: "Composite",
          className: "EndpointService"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "Subnet"
        }
      },
      networkInterfaces: {
        readOnly: true,
        serializedName: "properties.networkInterfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterface"
            }
          }
        }
      },
      owner: {
        readOnly: true,
        serializedName: "properties.owner",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfaceTapConfiguration: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceTapConfiguration",
  type: {
    name: "Composite",
    className: "NetworkInterfaceTapConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      virtualNetworkTap: {
        serializedName: "properties.virtualNetworkTap",
        type: {
          name: "Composite",
          className: "VirtualNetworkTap"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FrontendIPConfiguration: msRest.CompositeMapper = {
  serializedName: "FrontendIPConfiguration",
  type: {
    name: "Composite",
    className: "FrontendIPConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      inboundNatRules: {
        readOnly: true,
        serializedName: "properties.inboundNatRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      inboundNatPools: {
        readOnly: true,
        serializedName: "properties.inboundNatPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      outboundRules: {
        readOnly: true,
        serializedName: "properties.outboundRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      loadBalancingRules: {
        readOnly: true,
        serializedName: "properties.loadBalancingRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      privateIPAddress: {
        serializedName: "properties.privateIPAddress",
        type: {
          name: "String"
        }
      },
      privateIPAllocationMethod: {
        serializedName: "properties.privateIPAllocationMethod",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "Subnet"
        }
      },
      publicIPAddress: {
        serializedName: "properties.publicIPAddress",
        type: {
          name: "Composite",
          className: "PublicIPAddress"
        }
      },
      publicIPPrefix: {
        serializedName: "properties.publicIPPrefix",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualNetworkTap: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkTap",
  type: {
    name: "Composite",
    className: "VirtualNetworkTap",
    modelProperties: {
      ...Resource.type.modelProperties,
      networkInterfaceTapConfigurations: {
        readOnly: true,
        serializedName: "properties.networkInterfaceTapConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceTapConfiguration"
            }
          }
        }
      },
      resourceGuid: {
        readOnly: true,
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      destinationNetworkInterfaceIPConfiguration: {
        serializedName: "properties.destinationNetworkInterfaceIPConfiguration",
        type: {
          name: "Composite",
          className: "NetworkInterfaceIPConfiguration"
        }
      },
      destinationLoadBalancerFrontEndIPConfiguration: {
        serializedName: "properties.destinationLoadBalancerFrontEndIPConfiguration",
        type: {
          name: "Composite",
          className: "FrontendIPConfiguration"
        }
      },
      destinationPort: {
        serializedName: "properties.destinationPort",
        type: {
          name: "Number"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationGatewayBackendAddress: msRest.CompositeMapper = {
  serializedName: "ApplicationGatewayBackendAddress",
  type: {
    name: "Composite",
    className: "ApplicationGatewayBackendAddress",
    modelProperties: {
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationGatewayBackendAddressPool: msRest.CompositeMapper = {
  serializedName: "ApplicationGatewayBackendAddressPool",
  type: {
    name: "Composite",
    className: "ApplicationGatewayBackendAddressPool",
    modelProperties: {
      ...SubResource.type.modelProperties,
      backendIPConfigurations: {
        serializedName: "properties.backendIPConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceIPConfiguration"
            }
          }
        }
      },
      backendAddresses: {
        serializedName: "properties.backendAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationGatewayBackendAddress"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BackendAddressPool: msRest.CompositeMapper = {
  serializedName: "BackendAddressPool",
  type: {
    name: "Composite",
    className: "BackendAddressPool",
    modelProperties: {
      ...SubResource.type.modelProperties,
      backendIPConfigurations: {
        readOnly: true,
        serializedName: "properties.backendIPConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceIPConfiguration"
            }
          }
        }
      },
      loadBalancingRules: {
        readOnly: true,
        serializedName: "properties.loadBalancingRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      outboundRule: {
        readOnly: true,
        serializedName: "properties.outboundRule",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      outboundRules: {
        readOnly: true,
        serializedName: "properties.outboundRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InboundNatRule: msRest.CompositeMapper = {
  serializedName: "InboundNatRule",
  type: {
    name: "Composite",
    className: "InboundNatRule",
    modelProperties: {
      ...SubResource.type.modelProperties,
      frontendIPConfiguration: {
        serializedName: "properties.frontendIPConfiguration",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      backendIPConfiguration: {
        readOnly: true,
        serializedName: "properties.backendIPConfiguration",
        type: {
          name: "Composite",
          className: "NetworkInterfaceIPConfiguration"
        }
      },
      protocol: {
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      frontendPort: {
        serializedName: "properties.frontendPort",
        type: {
          name: "Number"
        }
      },
      backendPort: {
        serializedName: "properties.backendPort",
        type: {
          name: "Number"
        }
      },
      idleTimeoutInMinutes: {
        serializedName: "properties.idleTimeoutInMinutes",
        type: {
          name: "Number"
        }
      },
      enableFloatingIP: {
        serializedName: "properties.enableFloatingIP",
        type: {
          name: "Boolean"
        }
      },
      enableTcpReset: {
        serializedName: "properties.enableTcpReset",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PublicIPAddressSku: msRest.CompositeMapper = {
  serializedName: "PublicIPAddressSku",
  type: {
    name: "Composite",
    className: "PublicIPAddressSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPConfiguration: msRest.CompositeMapper = {
  serializedName: "IPConfiguration",
  type: {
    name: "Composite",
    className: "IPConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      privateIPAddress: {
        serializedName: "properties.privateIPAddress",
        type: {
          name: "String"
        }
      },
      privateIPAllocationMethod: {
        serializedName: "properties.privateIPAllocationMethod",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "Subnet"
        }
      },
      publicIPAddress: {
        serializedName: "properties.publicIPAddress",
        type: {
          name: "Composite",
          className: "PublicIPAddress"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PublicIPAddressDnsSettings: msRest.CompositeMapper = {
  serializedName: "PublicIPAddressDnsSettings",
  type: {
    name: "Composite",
    className: "PublicIPAddressDnsSettings",
    modelProperties: {
      domainNameLabel: {
        serializedName: "domainNameLabel",
        type: {
          name: "String"
        }
      },
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String"
        }
      },
      reverseFqdn: {
        serializedName: "reverseFqdn",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DdosSettings: msRest.CompositeMapper = {
  serializedName: "DdosSettings",
  type: {
    name: "Composite",
    className: "DdosSettings",
    modelProperties: {
      ddosCustomPolicy: {
        serializedName: "ddosCustomPolicy",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      protectionCoverage: {
        serializedName: "protectionCoverage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IpTag: msRest.CompositeMapper = {
  serializedName: "IpTag",
  type: {
    name: "Composite",
    className: "IpTag",
    modelProperties: {
      ipTagType: {
        serializedName: "ipTagType",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PublicIPAddress: msRest.CompositeMapper = {
  serializedName: "PublicIPAddress",
  type: {
    name: "Composite",
    className: "PublicIPAddress",
    modelProperties: {
      ...Resource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "PublicIPAddressSku"
        }
      },
      publicIPAllocationMethod: {
        serializedName: "properties.publicIPAllocationMethod",
        type: {
          name: "String"
        }
      },
      publicIPAddressVersion: {
        serializedName: "properties.publicIPAddressVersion",
        type: {
          name: "String"
        }
      },
      ipConfiguration: {
        readOnly: true,
        serializedName: "properties.ipConfiguration",
        type: {
          name: "Composite",
          className: "IPConfiguration"
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "PublicIPAddressDnsSettings"
        }
      },
      ddosSettings: {
        serializedName: "properties.ddosSettings",
        type: {
          name: "Composite",
          className: "DdosSettings"
        }
      },
      ipTags: {
        serializedName: "properties.ipTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IpTag"
            }
          }
        }
      },
      ipAddress: {
        serializedName: "properties.ipAddress",
        type: {
          name: "String"
        }
      },
      publicIPPrefix: {
        serializedName: "properties.publicIPPrefix",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      idleTimeoutInMinutes: {
        serializedName: "properties.idleTimeoutInMinutes",
        type: {
          name: "Number"
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NetworkInterfaceIPConfiguration: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceIPConfiguration",
  type: {
    name: "Composite",
    className: "NetworkInterfaceIPConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      virtualNetworkTaps: {
        serializedName: "properties.virtualNetworkTaps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkTap"
            }
          }
        }
      },
      applicationGatewayBackendAddressPools: {
        serializedName: "properties.applicationGatewayBackendAddressPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationGatewayBackendAddressPool"
            }
          }
        }
      },
      loadBalancerBackendAddressPools: {
        serializedName: "properties.loadBalancerBackendAddressPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackendAddressPool"
            }
          }
        }
      },
      loadBalancerInboundNatRules: {
        serializedName: "properties.loadBalancerInboundNatRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatRule"
            }
          }
        }
      },
      privateIPAddress: {
        serializedName: "properties.privateIPAddress",
        type: {
          name: "String"
        }
      },
      privateIPAllocationMethod: {
        serializedName: "properties.privateIPAllocationMethod",
        type: {
          name: "String"
        }
      },
      privateIPAddressVersion: {
        serializedName: "properties.privateIPAddressVersion",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "Subnet"
        }
      },
      primary: {
        serializedName: "properties.primary",
        type: {
          name: "Boolean"
        }
      },
      publicIPAddress: {
        serializedName: "properties.publicIPAddress",
        type: {
          name: "Composite",
          className: "PublicIPAddress"
        }
      },
      applicationSecurityGroups: {
        serializedName: "properties.applicationSecurityGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationSecurityGroup"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfaceDnsSettings: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceDnsSettings",
  type: {
    name: "Composite",
    className: "NetworkInterfaceDnsSettings",
    modelProperties: {
      dnsServers: {
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appliedDnsServers: {
        serializedName: "appliedDnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      internalDnsNameLabel: {
        serializedName: "internalDnsNameLabel",
        type: {
          name: "String"
        }
      },
      internalFqdn: {
        serializedName: "internalFqdn",
        type: {
          name: "String"
        }
      },
      internalDomainNameSuffix: {
        serializedName: "internalDomainNameSuffix",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterface: msRest.CompositeMapper = {
  serializedName: "NetworkInterface",
  type: {
    name: "Composite",
    className: "NetworkInterface",
    modelProperties: {
      ...Resource.type.modelProperties,
      virtualMachine: {
        readOnly: true,
        serializedName: "properties.virtualMachine",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      networkSecurityGroup: {
        serializedName: "properties.networkSecurityGroup",
        type: {
          name: "Composite",
          className: "NetworkSecurityGroup"
        }
      },
      interfaceEndpoint: {
        readOnly: true,
        serializedName: "properties.interfaceEndpoint",
        type: {
          name: "Composite",
          className: "InterfaceEndpoint"
        }
      },
      ipConfigurations: {
        serializedName: "properties.ipConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceIPConfiguration"
            }
          }
        }
      },
      tapConfigurations: {
        serializedName: "properties.tapConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceTapConfiguration"
            }
          }
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "NetworkInterfaceDnsSettings"
        }
      },
      macAddress: {
        serializedName: "properties.macAddress",
        type: {
          name: "String"
        }
      },
      primary: {
        serializedName: "properties.primary",
        type: {
          name: "Boolean"
        }
      },
      enableAcceleratedNetworking: {
        serializedName: "properties.enableAcceleratedNetworking",
        type: {
          name: "Boolean"
        }
      },
      enableIPForwarding: {
        serializedName: "properties.enableIPForwarding",
        type: {
          name: "Boolean"
        }
      },
      hostedWorkloads: {
        readOnly: true,
        serializedName: "properties.hostedWorkloads",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkSecurityGroup: msRest.CompositeMapper = {
  serializedName: "NetworkSecurityGroup",
  type: {
    name: "Composite",
    className: "NetworkSecurityGroup",
    modelProperties: {
      ...Resource.type.modelProperties,
      securityRules: {
        serializedName: "properties.securityRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityRule"
            }
          }
        }
      },
      defaultSecurityRules: {
        serializedName: "properties.defaultSecurityRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityRule"
            }
          }
        }
      },
      networkInterfaces: {
        readOnly: true,
        serializedName: "properties.networkInterfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterface"
            }
          }
        }
      },
      subnets: {
        readOnly: true,
        serializedName: "properties.subnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet"
            }
          }
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Route: msRest.CompositeMapper = {
  serializedName: "Route",
  type: {
    name: "Composite",
    className: "Route",
    modelProperties: {
      ...SubResource.type.modelProperties,
      addressPrefix: {
        serializedName: "properties.addressPrefix",
        type: {
          name: "String"
        }
      },
      nextHopType: {
        required: true,
        serializedName: "properties.nextHopType",
        type: {
          name: "String"
        }
      },
      nextHopIpAddress: {
        serializedName: "properties.nextHopIpAddress",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RouteTable: msRest.CompositeMapper = {
  serializedName: "RouteTable",
  type: {
    name: "Composite",
    className: "RouteTable",
    modelProperties: {
      ...Resource.type.modelProperties,
      routes: {
        serializedName: "properties.routes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Route"
            }
          }
        }
      },
      subnets: {
        readOnly: true,
        serializedName: "properties.subnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet"
            }
          }
        }
      },
      disableBgpRoutePropagation: {
        serializedName: "properties.disableBgpRoutePropagation",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceEndpointPropertiesFormat: msRest.CompositeMapper = {
  serializedName: "ServiceEndpointPropertiesFormat",
  type: {
    name: "Composite",
    className: "ServiceEndpointPropertiesFormat",
    modelProperties: {
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      locations: {
        serializedName: "locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceEndpointPolicyDefinition: msRest.CompositeMapper = {
  serializedName: "ServiceEndpointPolicyDefinition",
  type: {
    name: "Composite",
    className: "ServiceEndpointPolicyDefinition",
    modelProperties: {
      ...SubResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "properties.service",
        type: {
          name: "String"
        }
      },
      serviceResources: {
        serializedName: "properties.serviceResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceEndpointPolicy: msRest.CompositeMapper = {
  serializedName: "ServiceEndpointPolicy",
  type: {
    name: "Composite",
    className: "ServiceEndpointPolicy",
    modelProperties: {
      ...Resource.type.modelProperties,
      serviceEndpointPolicyDefinitions: {
        serializedName: "properties.serviceEndpointPolicyDefinitions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceEndpointPolicyDefinition"
            }
          }
        }
      },
      subnets: {
        readOnly: true,
        serializedName: "properties.subnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet"
            }
          }
        }
      },
      resourceGuid: {
        readOnly: true,
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPConfigurationProfile: msRest.CompositeMapper = {
  serializedName: "IPConfigurationProfile",
  type: {
    name: "Composite",
    className: "IPConfigurationProfile",
    modelProperties: {
      ...SubResource.type.modelProperties,
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "Subnet"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceNavigationLink: msRest.CompositeMapper = {
  serializedName: "ResourceNavigationLink",
  type: {
    name: "Composite",
    className: "ResourceNavigationLink",
    modelProperties: {
      ...SubResource.type.modelProperties,
      linkedResourceType: {
        serializedName: "properties.linkedResourceType",
        type: {
          name: "String"
        }
      },
      link: {
        serializedName: "properties.link",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceAssociationLink: msRest.CompositeMapper = {
  serializedName: "ServiceAssociationLink",
  type: {
    name: "Composite",
    className: "ServiceAssociationLink",
    modelProperties: {
      ...SubResource.type.modelProperties,
      linkedResourceType: {
        serializedName: "properties.linkedResourceType",
        type: {
          name: "String"
        }
      },
      link: {
        serializedName: "properties.link",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Delegation: msRest.CompositeMapper = {
  serializedName: "Delegation",
  type: {
    name: "Composite",
    className: "Delegation",
    modelProperties: {
      ...SubResource.type.modelProperties,
      serviceName: {
        serializedName: "properties.serviceName",
        type: {
          name: "String"
        }
      },
      actions: {
        serializedName: "properties.actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Subnet: msRest.CompositeMapper = {
  serializedName: "Subnet",
  type: {
    name: "Composite",
    className: "Subnet",
    modelProperties: {
      ...SubResource.type.modelProperties,
      addressPrefix: {
        serializedName: "properties.addressPrefix",
        type: {
          name: "String"
        }
      },
      addressPrefixes: {
        serializedName: "properties.addressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      networkSecurityGroup: {
        serializedName: "properties.networkSecurityGroup",
        type: {
          name: "Composite",
          className: "NetworkSecurityGroup"
        }
      },
      routeTable: {
        serializedName: "properties.routeTable",
        type: {
          name: "Composite",
          className: "RouteTable"
        }
      },
      serviceEndpoints: {
        serializedName: "properties.serviceEndpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceEndpointPropertiesFormat"
            }
          }
        }
      },
      serviceEndpointPolicies: {
        serializedName: "properties.serviceEndpointPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceEndpointPolicy"
            }
          }
        }
      },
      interfaceEndpoints: {
        readOnly: true,
        serializedName: "properties.interfaceEndpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InterfaceEndpoint"
            }
          }
        }
      },
      ipConfigurations: {
        readOnly: true,
        serializedName: "properties.ipConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPConfiguration"
            }
          }
        }
      },
      ipConfigurationProfiles: {
        readOnly: true,
        serializedName: "properties.ipConfigurationProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPConfigurationProfile"
            }
          }
        }
      },
      resourceNavigationLinks: {
        serializedName: "properties.resourceNavigationLinks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceNavigationLink"
            }
          }
        }
      },
      serviceAssociationLinks: {
        serializedName: "properties.serviceAssociationLinks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceAssociationLink"
            }
          }
        }
      },
      delegations: {
        serializedName: "properties.delegations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Delegation"
            }
          }
        }
      },
      purpose: {
        readOnly: true,
        serializedName: "properties.purpose",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancingRule: msRest.CompositeMapper = {
  serializedName: "LoadBalancingRule",
  type: {
    name: "Composite",
    className: "LoadBalancingRule",
    modelProperties: {
      ...SubResource.type.modelProperties,
      frontendIPConfiguration: {
        serializedName: "properties.frontendIPConfiguration",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      backendAddressPool: {
        serializedName: "properties.backendAddressPool",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      probe: {
        serializedName: "properties.probe",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      protocol: {
        required: true,
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      loadDistribution: {
        serializedName: "properties.loadDistribution",
        type: {
          name: "String"
        }
      },
      frontendPort: {
        required: true,
        serializedName: "properties.frontendPort",
        type: {
          name: "Number"
        }
      },
      backendPort: {
        serializedName: "properties.backendPort",
        type: {
          name: "Number"
        }
      },
      idleTimeoutInMinutes: {
        serializedName: "properties.idleTimeoutInMinutes",
        type: {
          name: "Number"
        }
      },
      enableFloatingIP: {
        serializedName: "properties.enableFloatingIP",
        type: {
          name: "Boolean"
        }
      },
      enableTcpReset: {
        serializedName: "properties.enableTcpReset",
        type: {
          name: "Boolean"
        }
      },
      disableOutboundSnat: {
        serializedName: "properties.disableOutboundSnat",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Probe: msRest.CompositeMapper = {
  serializedName: "Probe",
  type: {
    name: "Composite",
    className: "Probe",
    modelProperties: {
      ...SubResource.type.modelProperties,
      loadBalancingRules: {
        readOnly: true,
        serializedName: "properties.loadBalancingRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      protocol: {
        required: true,
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      port: {
        required: true,
        serializedName: "properties.port",
        type: {
          name: "Number"
        }
      },
      intervalInSeconds: {
        serializedName: "properties.intervalInSeconds",
        type: {
          name: "Number"
        }
      },
      numberOfProbes: {
        serializedName: "properties.numberOfProbes",
        type: {
          name: "Number"
        }
      },
      requestPath: {
        serializedName: "properties.requestPath",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InboundNatPool: msRest.CompositeMapper = {
  serializedName: "InboundNatPool",
  type: {
    name: "Composite",
    className: "InboundNatPool",
    modelProperties: {
      ...SubResource.type.modelProperties,
      frontendIPConfiguration: {
        serializedName: "properties.frontendIPConfiguration",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      protocol: {
        required: true,
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      frontendPortRangeStart: {
        required: true,
        serializedName: "properties.frontendPortRangeStart",
        type: {
          name: "Number"
        }
      },
      frontendPortRangeEnd: {
        required: true,
        serializedName: "properties.frontendPortRangeEnd",
        type: {
          name: "Number"
        }
      },
      backendPort: {
        required: true,
        serializedName: "properties.backendPort",
        type: {
          name: "Number"
        }
      },
      idleTimeoutInMinutes: {
        serializedName: "properties.idleTimeoutInMinutes",
        type: {
          name: "Number"
        }
      },
      enableFloatingIP: {
        serializedName: "properties.enableFloatingIP",
        type: {
          name: "Boolean"
        }
      },
      enableTcpReset: {
        serializedName: "properties.enableTcpReset",
        type: {
          name: "Boolean"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OutboundRule: msRest.CompositeMapper = {
  serializedName: "OutboundRule",
  type: {
    name: "Composite",
    className: "OutboundRule",
    modelProperties: {
      ...SubResource.type.modelProperties,
      allocatedOutboundPorts: {
        serializedName: "properties.allocatedOutboundPorts",
        type: {
          name: "Number"
        }
      },
      frontendIPConfigurations: {
        required: true,
        serializedName: "properties.frontendIPConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      backendAddressPool: {
        required: true,
        serializedName: "properties.backendAddressPool",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      protocol: {
        required: true,
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      enableTcpReset: {
        serializedName: "properties.enableTcpReset",
        type: {
          name: "Boolean"
        }
      },
      idleTimeoutInMinutes: {
        serializedName: "properties.idleTimeoutInMinutes",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancer: msRest.CompositeMapper = {
  serializedName: "LoadBalancer",
  type: {
    name: "Composite",
    className: "LoadBalancer",
    modelProperties: {
      ...Resource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "LoadBalancerSku"
        }
      },
      frontendIPConfigurations: {
        serializedName: "properties.frontendIPConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FrontendIPConfiguration"
            }
          }
        }
      },
      backendAddressPools: {
        serializedName: "properties.backendAddressPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackendAddressPool"
            }
          }
        }
      },
      loadBalancingRules: {
        serializedName: "properties.loadBalancingRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LoadBalancingRule"
            }
          }
        }
      },
      probes: {
        serializedName: "properties.probes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Probe"
            }
          }
        }
      },
      inboundNatRules: {
        serializedName: "properties.inboundNatRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatRule"
            }
          }
        }
      },
      inboundNatPools: {
        serializedName: "properties.inboundNatPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatPool"
            }
          }
        }
      },
      outboundRules: {
        serializedName: "properties.outboundRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OutboundRule"
            }
          }
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetails"
            }
          }
        }
      },
      innerError: {
        serializedName: "innerError",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureAsyncOperationResult: msRest.CompositeMapper = {
  serializedName: "AzureAsyncOperationResult",
  type: {
    name: "Composite",
    className: "AzureAsyncOperationResult",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const ManagedServiceIdentityUserAssignedIdentitiesValue: msRest.CompositeMapper = {
  serializedName: "ManagedServiceIdentity_userAssignedIdentitiesValue",
  type: {
    name: "Composite",
    className: "ManagedServiceIdentityUserAssignedIdentitiesValue",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        readOnly: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedServiceIdentity: msRest.CompositeMapper = {
  serializedName: "ManagedServiceIdentity",
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ]
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "ManagedServiceIdentityUserAssignedIdentitiesValue"
            }
          }
        }
      }
    }
  }
};

export const EffectiveNetworkSecurityGroupAssociation: msRest.CompositeMapper = {
  serializedName: "EffectiveNetworkSecurityGroupAssociation",
  type: {
    name: "Composite",
    className: "EffectiveNetworkSecurityGroupAssociation",
    modelProperties: {
      subnet: {
        serializedName: "subnet",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      networkInterface: {
        serializedName: "networkInterface",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      }
    }
  }
};

export const EffectiveNetworkSecurityRule: msRest.CompositeMapper = {
  serializedName: "EffectiveNetworkSecurityRule",
  type: {
    name: "Composite",
    className: "EffectiveNetworkSecurityRule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      protocol: {
        serializedName: "protocol",
        type: {
          name: "String"
        }
      },
      sourcePortRange: {
        serializedName: "sourcePortRange",
        type: {
          name: "String"
        }
      },
      destinationPortRange: {
        serializedName: "destinationPortRange",
        type: {
          name: "String"
        }
      },
      sourcePortRanges: {
        serializedName: "sourcePortRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationPortRanges: {
        serializedName: "destinationPortRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sourceAddressPrefix: {
        serializedName: "sourceAddressPrefix",
        type: {
          name: "String"
        }
      },
      destinationAddressPrefix: {
        serializedName: "destinationAddressPrefix",
        type: {
          name: "String"
        }
      },
      sourceAddressPrefixes: {
        serializedName: "sourceAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      destinationAddressPrefixes: {
        serializedName: "destinationAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      expandedSourceAddressPrefix: {
        serializedName: "expandedSourceAddressPrefix",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      expandedDestinationAddressPrefix: {
        serializedName: "expandedDestinationAddressPrefix",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      access: {
        serializedName: "access",
        type: {
          name: "String"
        }
      },
      priority: {
        serializedName: "priority",
        type: {
          name: "Number"
        }
      },
      direction: {
        serializedName: "direction",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EffectiveNetworkSecurityGroup: msRest.CompositeMapper = {
  serializedName: "EffectiveNetworkSecurityGroup",
  type: {
    name: "Composite",
    className: "EffectiveNetworkSecurityGroup",
    modelProperties: {
      networkSecurityGroup: {
        serializedName: "networkSecurityGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      association: {
        serializedName: "association",
        type: {
          name: "Composite",
          className: "EffectiveNetworkSecurityGroupAssociation"
        }
      },
      effectiveSecurityRules: {
        serializedName: "effectiveSecurityRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EffectiveNetworkSecurityRule"
            }
          }
        }
      },
      tagMap: {
        serializedName: "tagMap",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const EffectiveNetworkSecurityGroupListResult: msRest.CompositeMapper = {
  serializedName: "EffectiveNetworkSecurityGroupListResult",
  type: {
    name: "Composite",
    className: "EffectiveNetworkSecurityGroupListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EffectiveNetworkSecurityGroup"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EffectiveRoute: msRest.CompositeMapper = {
  serializedName: "EffectiveRoute",
  type: {
    name: "Composite",
    className: "EffectiveRoute",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      addressPrefix: {
        serializedName: "addressPrefix",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nextHopIpAddress: {
        serializedName: "nextHopIpAddress",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nextHopType: {
        serializedName: "nextHopType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EffectiveRouteListResult: msRest.CompositeMapper = {
  serializedName: "EffectiveRouteListResult",
  type: {
    name: "Composite",
    className: "EffectiveRouteListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EffectiveRoute"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Availability: msRest.CompositeMapper = {
  serializedName: "Availability",
  type: {
    name: "Composite",
    className: "Availability",
    modelProperties: {
      timeGrain: {
        serializedName: "timeGrain",
        type: {
          name: "String"
        }
      },
      retention: {
        serializedName: "retention",
        type: {
          name: "String"
        }
      },
      blobDuration: {
        serializedName: "blobDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Dimension: msRest.CompositeMapper = {
  serializedName: "Dimension",
  type: {
    name: "Composite",
    className: "Dimension",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      internalName: {
        serializedName: "internalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricSpecification: msRest.CompositeMapper = {
  serializedName: "MetricSpecification",
  type: {
    name: "Composite",
    className: "MetricSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      displayDescription: {
        serializedName: "displayDescription",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      aggregationType: {
        serializedName: "aggregationType",
        type: {
          name: "String"
        }
      },
      availabilities: {
        serializedName: "availabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Availability"
            }
          }
        }
      },
      enableRegionalMdmAccount: {
        serializedName: "enableRegionalMdmAccount",
        type: {
          name: "Boolean"
        }
      },
      fillGapWithZero: {
        serializedName: "fillGapWithZero",
        type: {
          name: "Boolean"
        }
      },
      metricFilterPattern: {
        serializedName: "metricFilterPattern",
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Dimension"
            }
          }
        }
      },
      isInternal: {
        serializedName: "isInternal",
        type: {
          name: "Boolean"
        }
      },
      sourceMdmAccount: {
        serializedName: "sourceMdmAccount",
        type: {
          name: "String"
        }
      },
      sourceMdmNamespace: {
        serializedName: "sourceMdmNamespace",
        type: {
          name: "String"
        }
      },
      resourceIdDimensionNameOverride: {
        serializedName: "resourceIdDimensionNameOverride",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogSpecification: msRest.CompositeMapper = {
  serializedName: "LogSpecification",
  type: {
    name: "Composite",
    className: "LogSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      blobDuration: {
        serializedName: "blobDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationPropertiesFormatServiceSpecification: msRest.CompositeMapper = {
  serializedName: "OperationPropertiesFormat_serviceSpecification",
  type: {
    name: "Composite",
    className: "OperationPropertiesFormatServiceSpecification",
    modelProperties: {
      metricSpecifications: {
        serializedName: "metricSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricSpecification"
            }
          }
        }
      },
      logSpecifications: {
        serializedName: "logSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogSpecification"
            }
          }
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      serviceSpecification: {
        serializedName: "properties.serviceSpecification",
        type: {
          name: "Composite",
          className: "OperationPropertiesFormatServiceSpecification"
        }
      }
    }
  }
};

export const VirtualNetworkPeering: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkPeering",
  type: {
    name: "Composite",
    className: "VirtualNetworkPeering",
    modelProperties: {
      ...SubResource.type.modelProperties,
      allowVirtualNetworkAccess: {
        serializedName: "properties.allowVirtualNetworkAccess",
        type: {
          name: "Boolean"
        }
      },
      allowForwardedTraffic: {
        serializedName: "properties.allowForwardedTraffic",
        type: {
          name: "Boolean"
        }
      },
      allowGatewayTransit: {
        serializedName: "properties.allowGatewayTransit",
        type: {
          name: "Boolean"
        }
      },
      useRemoteGateways: {
        serializedName: "properties.useRemoteGateways",
        type: {
          name: "Boolean"
        }
      },
      remoteVirtualNetwork: {
        serializedName: "properties.remoteVirtualNetwork",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      remoteAddressSpace: {
        serializedName: "properties.remoteAddressSpace",
        type: {
          name: "Composite",
          className: "AddressSpace"
        }
      },
      peeringState: {
        serializedName: "properties.peeringState",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DhcpOptions: msRest.CompositeMapper = {
  serializedName: "DhcpOptions",
  type: {
    name: "Composite",
    className: "DhcpOptions",
    modelProperties: {
      dnsServers: {
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualNetwork: msRest.CompositeMapper = {
  serializedName: "VirtualNetwork",
  type: {
    name: "Composite",
    className: "VirtualNetwork",
    modelProperties: {
      ...Resource.type.modelProperties,
      addressSpace: {
        serializedName: "properties.addressSpace",
        type: {
          name: "Composite",
          className: "AddressSpace"
        }
      },
      dhcpOptions: {
        serializedName: "properties.dhcpOptions",
        type: {
          name: "Composite",
          className: "DhcpOptions"
        }
      },
      subnets: {
        serializedName: "properties.subnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet"
            }
          }
        }
      },
      virtualNetworkPeerings: {
        serializedName: "properties.virtualNetworkPeerings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkPeering"
            }
          }
        }
      },
      resourceGuid: {
        serializedName: "properties.resourceGuid",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      enableDdosProtection: {
        serializedName: "properties.enableDdosProtection",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      enableVmProtection: {
        serializedName: "properties.enableVmProtection",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      ddosProtectionPlan: {
        serializedName: "properties.ddosProtectionPlan",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPAddressAvailabilityResult: msRest.CompositeMapper = {
  serializedName: "IPAddressAvailabilityResult",
  type: {
    name: "Composite",
    className: "IPAddressAvailabilityResult",
    modelProperties: {
      available: {
        serializedName: "available",
        type: {
          name: "Boolean"
        }
      },
      availableIPAddresses: {
        serializedName: "availableIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualNetworkUsageName: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkUsageName",
  type: {
    name: "Composite",
    className: "VirtualNetworkUsageName",
    modelProperties: {
      localizedValue: {
        readOnly: true,
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkUsage: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkUsage",
  type: {
    name: "Composite",
    className: "VirtualNetworkUsage",
    modelProperties: {
      currentValue: {
        readOnly: true,
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      limit: {
        readOnly: true,
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "Composite",
          className: "VirtualNetworkUsageName"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkGatewayListResult: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkGatewayListResult",
  type: {
    name: "Composite",
    className: "VirtualNetworkGatewayListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkGateway"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkGatewayListConnectionsResult: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkGatewayListConnectionsResult",
  type: {
    name: "Composite",
    className: "VirtualNetworkGatewayListConnectionsResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkGatewayConnectionListEntity"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkGatewayConnectionListResult: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkGatewayConnectionListResult",
  type: {
    name: "Composite",
    className: "VirtualNetworkGatewayConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkGatewayConnection"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocalNetworkGatewayListResult: msRest.CompositeMapper = {
  serializedName: "LocalNetworkGatewayListResult",
  type: {
    name: "Composite",
    className: "LocalNetworkGatewayListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LocalNetworkGateway"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancerListResult: msRest.CompositeMapper = {
  serializedName: "LoadBalancerListResult",
  type: {
    name: "Composite",
    className: "LoadBalancerListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LoadBalancer"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancerBackendAddressPoolListResult: msRest.CompositeMapper = {
  serializedName: "LoadBalancerBackendAddressPoolListResult",
  type: {
    name: "Composite",
    className: "LoadBalancerBackendAddressPoolListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackendAddressPool"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancerFrontendIPConfigurationListResult: msRest.CompositeMapper = {
  serializedName: "LoadBalancerFrontendIPConfigurationListResult",
  type: {
    name: "Composite",
    className: "LoadBalancerFrontendIPConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FrontendIPConfiguration"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InboundNatRuleListResult: msRest.CompositeMapper = {
  serializedName: "InboundNatRuleListResult",
  type: {
    name: "Composite",
    className: "InboundNatRuleListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatRule"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancerLoadBalancingRuleListResult: msRest.CompositeMapper = {
  serializedName: "LoadBalancerLoadBalancingRuleListResult",
  type: {
    name: "Composite",
    className: "LoadBalancerLoadBalancingRuleListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LoadBalancingRule"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancerOutboundRuleListResult: msRest.CompositeMapper = {
  serializedName: "LoadBalancerOutboundRuleListResult",
  type: {
    name: "Composite",
    className: "LoadBalancerOutboundRuleListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OutboundRule"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfaceListResult: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceListResult",
  type: {
    name: "Composite",
    className: "NetworkInterfaceListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterface"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LoadBalancerProbeListResult: msRest.CompositeMapper = {
  serializedName: "LoadBalancerProbeListResult",
  type: {
    name: "Composite",
    className: "LoadBalancerProbeListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Probe"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfaceIPConfigurationListResult: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceIPConfigurationListResult",
  type: {
    name: "Composite",
    className: "NetworkInterfaceIPConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceIPConfiguration"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfaceLoadBalancerListResult: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceLoadBalancerListResult",
  type: {
    name: "Composite",
    className: "NetworkInterfaceLoadBalancerListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LoadBalancer"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfaceTapConfigurationListResult: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceTapConfigurationListResult",
  type: {
    name: "Composite",
    className: "NetworkInterfaceTapConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceTapConfiguration"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkSecurityGroupListResult: msRest.CompositeMapper = {
  serializedName: "NetworkSecurityGroupListResult",
  type: {
    name: "Composite",
    className: "NetworkSecurityGroupListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkSecurityGroup"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityRuleListResult: msRest.CompositeMapper = {
  serializedName: "SecurityRuleListResult",
  type: {
    name: "Composite",
    className: "SecurityRuleListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityRule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PublicIPAddressListResult: msRest.CompositeMapper = {
  serializedName: "PublicIPAddressListResult",
  type: {
    name: "Composite",
    className: "PublicIPAddressListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PublicIPAddress"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RouteTableListResult: msRest.CompositeMapper = {
  serializedName: "RouteTableListResult",
  type: {
    name: "Composite",
    className: "RouteTableListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RouteTable"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RouteListResult: msRest.CompositeMapper = {
  serializedName: "RouteListResult",
  type: {
    name: "Composite",
    className: "RouteListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Route"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkListResult: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkListResult",
  type: {
    name: "Composite",
    className: "VirtualNetworkListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetwork"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkListUsageResult: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkListUsageResult",
  type: {
    name: "Composite",
    className: "VirtualNetworkListUsageResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkUsage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubnetListResult: msRest.CompositeMapper = {
  serializedName: "SubnetListResult",
  type: {
    name: "Composite",
    className: "SubnetListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkPeeringListResult: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkPeeringListResult",
  type: {
    name: "Composite",
    className: "VirtualNetworkPeeringListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetworkPeering"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
