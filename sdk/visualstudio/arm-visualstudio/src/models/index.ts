/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Resource.
 * A generic Azure Resource Manager resource.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Unique identifier of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [location] Resource location.
   */
  location?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing AccountResource.
 * The response to an account resource GET request.
 *
 * @extends Resource
 */
export interface AccountResource extends Resource {
  /**
   * @member {{ [propertyName: string]: string }} [properties] Resource
   * properties.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AccountResourceListResult.
 * The response to an account resource list GET request.
 *
 */
export interface AccountResourceListResult {
  /**
   * @member {AccountResource[]} [value] Array of resource details.
   */
  value?: AccountResource[];
}

/**
 * @interface
 * An interface representing AccountTagRequest.
 * The body of a Patch request to add tags to a Visual Studio account resource.
 *
 */
export interface AccountTagRequest {
  /**
   * @member {{ [propertyName: string]: string }} [tags] The custom tags of the
   * resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AccountResourceRequest.
 * The body of a PUT request to modify a Visual Studio account resource.
 *
 */
export interface AccountResourceRequest {
  /**
   * @member {string} [accountName] The account name.
   */
  accountName?: string;
  /**
   * @member {string} [location] The Azure instance location.
   */
  location?: string;
  /**
   * @member {any} [operationType] The type of the operation.
   */
  operationType?: any;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of the resource.
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [tags] The custom tags of the
   * resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityParameter.
 * The body of a POST request to check name availability.
 *
 */
export interface CheckNameAvailabilityParameter {
  /**
   * @member {string} [resourceName] The name of the resource to check
   * availability for.
   */
  resourceName?: string;
  /**
   * @member {string} [resourceType] The type of resource to check availability
   * for.
   */
  resourceType?: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityResult.
 * The response to a name availability request.
 *
 */
export interface CheckNameAvailabilityResult {
  /**
   * @member {string} [message] The message describing the detailed reason.
   */
  message?: string;
  /**
   * @member {boolean} [nameAvailable] The value which indicates whether the
   * provided name is available.
   */
  nameAvailable?: boolean;
}

/**
 * @interface
 * An interface representing ExtensionResourcePlan.
 * Plan data for an extension resource.
 *
 */
export interface ExtensionResourcePlan {
  /**
   * @member {string} [name] Name of the plan.
   */
  name?: string;
  /**
   * @member {string} [product] Product name.
   */
  product?: string;
  /**
   * @member {string} [promotionCode] Optional: the promotion code associated
   * with the plan.
   */
  promotionCode?: string;
  /**
   * @member {string} [publisher] Name of the extension publisher.
   */
  publisher?: string;
  /**
   * @member {string} [version] A string that uniquely identifies the plan
   * version.
   */
  version?: string;
}

/**
 * @interface
 * An interface representing ExtensionResource.
 * The response to an extension resource GET request.
 *
 * @extends Resource
 */
export interface ExtensionResource extends Resource {
  /**
   * @member {ExtensionResourcePlan} [plan] The extension plan that was
   * purchased.
   */
  plan?: ExtensionResourcePlan;
  /**
   * @member {{ [propertyName: string]: string }} [properties] Resource
   * properties.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ExtensionResourceListResult.
 * The response to an extension resource list GET request.
 *
 */
export interface ExtensionResourceListResult {
  /**
   * @member {ExtensionResource[]} [value] Array of extension resource details.
   */
  value?: ExtensionResource[];
}

/**
 * @interface
 * An interface representing ExtensionResourceRequest.
 * The body of an extension resource PUT request.
 *
 */
export interface ExtensionResourceRequest {
  /**
   * @member {string} [location] The Azure region of the Visual Studio account
   * associated with this request (i.e 'southcentralus'.)
   */
  location?: string;
  /**
   * @member {ExtensionResourcePlan} [plan] Extended information about the plan
   * being purchased for this extension resource.
   */
  plan?: ExtensionResourcePlan;
  /**
   * @member {{ [propertyName: string]: string }} [properties] A dictionary of
   * extended properties. This property is currently unused.
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [tags] A dictionary of
   * user-defined tags to be stored with the extension resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing OperationProperties.
 * Properties of an operation supported by the resource provider.
 *
 */
export interface OperationProperties {
  /**
   * @member {string} [description] The description of the resource operation.
   */
  description?: string;
  /**
   * @member {string} [operation] The operation name.
   */
  operation?: string;
  /**
   * @member {string} [provider] The provider name.
   */
  provider?: string;
  /**
   * @member {string} [resource] The resource name.
   */
  resource?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * Properties of an operation supported by the resource provider.
 *
 */
export interface Operation {
  /**
   * @member {OperationProperties} [display] The properties of the resource
   * operation.
   */
  display?: OperationProperties;
  /**
   * @member {string} [name] The name of the resource operation.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing OperationListResult.
 * Container for a list of operations supported by a resource provider.
 *
 */
export interface OperationListResult {
  /**
   * @member {Operation[]} [value] A list of operations supported by a resource
   * provider.
   */
  value?: Operation[];
}

/**
 * @interface
 * An interface representing ProjectResource.
 * A Visual Studio Team Services project resource.
 *
 * @extends Resource
 */
export interface ProjectResource extends Resource {
  /**
   * @member {{ [propertyName: string]: string }} [properties] Key/value pair
   * of resource properties.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ProjectResourceListResult.
 * The response to a request to list Team Services project resources in a
 * resource group/account.
 *
 */
export interface ProjectResourceListResult {
  /**
   * @member {ProjectResource[]} [value] List of project resource details.
   */
  value?: ProjectResource[];
}

/**
 * @interface
 * An interface representing ProjectsCreateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProjectsCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [validating] This parameter is ignored and should be set
   * to an empty string.
   */
  validating?: string;
}

/**
 * @interface
 * An interface representing ProjectsGetJobStatusOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProjectsGetJobStatusOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [jobId] The job identifier.
   */
  jobId?: string;
}

/**
 * @interface
 * An interface representing ProjectsBeginCreateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProjectsBeginCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [validating] This parameter is ignored and should be set
   * to an empty string.
   */
  validating?: string;
}

/**
 * @interface
 * An interface representing VisualStudioResourceProviderClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface VisualStudioResourceProviderClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type AccountsCheckNameAvailabilityResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AccountsListByResourceGroupResponse = AccountResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountResourceListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AccountsCreateOrUpdateResponse = AccountResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AccountsGetResponse = AccountResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccountsUpdateResponse = AccountResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountResource;
    };
};

/**
 * Contains response data for the listByAccount operation.
 */
export type ExtensionsListByAccountResponse = ExtensionResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionResourceListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ExtensionsCreateResponse = ExtensionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtensionsGetResponse = ExtensionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ExtensionsUpdateResponse = ExtensionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionResource;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ProjectsListByResourceGroupResponse = ProjectResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectResourceListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ProjectsCreateResponse = ProjectResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProjectsGetResponse = ProjectResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ProjectsUpdateResponse = ProjectResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectResource;
    };
};

/**
 * Contains response data for the getJobStatus operation.
 */
export type ProjectsGetJobStatusResponse = ProjectResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectResource;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ProjectsBeginCreateResponse = ProjectResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectResource;
    };
};
