/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
/** Class containing Extensions operations. */
export class ExtensionsImpl {
    /**
     * Initialize a new instance of the class Extensions class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Gets the details of the extension resources created within the resource group.
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param accountResourceName The name of the Visual Studio Team Services account resource.
     * @param options The options parameters.
     */
    listByAccount(resourceGroupName, accountResourceName, options) {
        return this.client.sendOperationRequest({ resourceGroupName, accountResourceName, options }, listByAccountOperationSpec);
    }
    /**
     * Registers the extension with a Visual Studio Team Services account.
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param accountResourceName The name of the Visual Studio Team Services account resource.
     * @param extensionResourceName The name of the extension.
     * @param body An object containing additional information related to the extension request.
     * @param options The options parameters.
     */
    create(resourceGroupName, accountResourceName, extensionResourceName, body, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            accountResourceName,
            extensionResourceName,
            body,
            options
        }, createOperationSpec);
    }
    /**
     * Removes an extension resource registration for a Visual Studio Team Services account.
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param accountResourceName The name of the Visual Studio Team Services account resource.
     * @param extensionResourceName The name of the extension.
     * @param options The options parameters.
     */
    delete(resourceGroupName, accountResourceName, extensionResourceName, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            accountResourceName,
            extensionResourceName,
            options
        }, deleteOperationSpec);
    }
    /**
     * Gets the details of an extension associated with a Visual Studio Team Services account resource.
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param accountResourceName The name of the Visual Studio Team Services account resource.
     * @param extensionResourceName The name of the extension.
     * @param options The options parameters.
     */
    get(resourceGroupName, accountResourceName, extensionResourceName, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            accountResourceName,
            extensionResourceName,
            options
        }, getOperationSpec);
    }
    /**
     * Updates an existing extension registration for the Visual Studio Team Services account.
     * @param resourceGroupName Name of the resource group within the Azure subscription.
     * @param accountResourceName The name of the Visual Studio Team Services account resource.
     * @param extensionResourceName The name of the extension.
     * @param body An object containing additional information related to the extension request.
     * @param options The options parameters.
     */
    update(resourceGroupName, accountResourceName, extensionResourceName, body, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            accountResourceName,
            extensionResourceName,
            body,
            options
        }, updateOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const listByAccountOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ExtensionResourceListResult
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.accountResourceName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const createOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}",
    httpMethod: "PUT",
    responses: {
        200: {
            bodyMapper: Mappers.ExtensionResource
        }
    },
    requestBody: Parameters.body3,
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.accountResourceName,
        Parameters.extensionResourceName
    ],
    headerParameters: [Parameters.accept, Parameters.contentType],
    mediaType: "json",
    serializer
};
const deleteOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}",
    httpMethod: "DELETE",
    responses: { 200: {} },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.accountResourceName,
        Parameters.extensionResourceName
    ],
    serializer
};
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ExtensionResource
        },
        404: {}
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.accountResourceName,
        Parameters.extensionResourceName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const updateOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}",
    httpMethod: "PATCH",
    responses: {
        200: {
            bodyMapper: Mappers.ExtensionResource
        }
    },
    requestBody: Parameters.body3,
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.accountResourceName,
        Parameters.extensionResourceName
    ],
    headerParameters: [Parameters.accept, Parameters.contentType],
    mediaType: "json",
    serializer
};
//# sourceMappingURL=extensions.js.map