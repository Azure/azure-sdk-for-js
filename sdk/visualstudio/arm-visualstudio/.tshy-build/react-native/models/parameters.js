/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { CheckNameAvailabilityParameter as CheckNameAvailabilityParameterMapper, AccountResourceRequest as AccountResourceRequestMapper, AccountTagRequest as AccountTagRequestMapper, ExtensionResourceRequest as ExtensionResourceRequestMapper, ProjectResource as ProjectResourceMapper } from "../models/mappers.js";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const body = {
    parameterPath: "body",
    mapper: CheckNameAvailabilityParameterMapper
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2014-04-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body1 = {
    parameterPath: "body",
    mapper: AccountResourceRequestMapper
};
export const resourceName = {
    parameterPath: "resourceName",
    mapper: {
        serializedName: "resourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body2 = {
    parameterPath: "body",
    mapper: AccountTagRequestMapper
};
export const accountResourceName = {
    parameterPath: "accountResourceName",
    mapper: {
        serializedName: "accountResourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body3 = {
    parameterPath: "body",
    mapper: ExtensionResourceRequestMapper
};
export const extensionResourceName = {
    parameterPath: "extensionResourceName",
    mapper: {
        serializedName: "extensionResourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const rootResourceName = {
    parameterPath: "rootResourceName",
    mapper: {
        serializedName: "rootResourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body4 = {
    parameterPath: "body",
    mapper: ProjectResourceMapper
};
export const validating = {
    parameterPath: ["options", "validating"],
    mapper: {
        serializedName: "validating",
        type: {
            name: "String"
        }
    }
};
export const subContainerName = {
    parameterPath: "subContainerName",
    mapper: {
        serializedName: "subContainerName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const operation = {
    parameterPath: "operation",
    mapper: {
        serializedName: "operation",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const jobId = {
    parameterPath: ["options", "jobId"],
    mapper: {
        serializedName: "jobId",
        type: {
            name: "Uuid"
        }
    }
};
//# sourceMappingURL=parameters.js.map