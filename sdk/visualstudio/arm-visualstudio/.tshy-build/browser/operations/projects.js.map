{"version":3,"file":"projects.js","sourceRoot":"","sources":["../../../src/operations/projects.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Projects } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { VisualStudioResourceProviderClient } from \"../visualStudioResourceProviderClient.js\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl.js\";\nimport {\n  ProjectsListByResourceGroupOptionalParams,\n  ProjectsListByResourceGroupResponse,\n  ProjectResource,\n  ProjectsCreateOptionalParams,\n  ProjectsCreateResponse,\n  ProjectsGetOptionalParams,\n  ProjectsGetResponse,\n  ProjectsUpdateOptionalParams,\n  ProjectsUpdateResponse,\n  ProjectsGetJobStatusOptionalParams,\n  ProjectsGetJobStatusResponse\n} from \"../models/index.js\";\n\n/** Class containing Projects operations. */\nexport class ProjectsImpl implements Projects {\n  private readonly client: VisualStudioResourceProviderClient;\n\n  /**\n   * Initialize a new instance of the class Projects class.\n   * @param client Reference to the service client\n   */\n  constructor(client: VisualStudioResourceProviderClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all Visual Studio Team Services project resources created in the specified Team Services\n   * account.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param rootResourceName Name of the Team Services account.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    rootResourceName: string,\n    options?: ProjectsListByResourceGroupOptionalParams\n  ): Promise<ProjectsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, rootResourceName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Creates a Team Services project in the collection with the specified name. 'VersionControlOption'\n   * and 'ProcessTemplateId' must be specified in the resource properties. Valid values for\n   * VersionControlOption: Git, Tfvc. Valid values for ProcessTemplateId:\n   * 6B724908-EF14-45CF-84F8-768B5384DA45, ADCC42AB-9882-485E-A3ED-7678F01F66BC,\n   * 27450541-8E31-4150-9947-DC59F998FC01 (these IDs correspond to Scrum, Agile, and CMMI process\n   * templates).\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param rootResourceName Name of the Team Services account.\n   * @param resourceName Name of the Team Services project.\n   * @param body The request data.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    rootResourceName: string,\n    resourceName: string,\n    body: ProjectResource,\n    options?: ProjectsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ProjectsCreateResponse>,\n      ProjectsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ProjectsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, rootResourceName, resourceName, body, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a Team Services project in the collection with the specified name. 'VersionControlOption'\n   * and 'ProcessTemplateId' must be specified in the resource properties. Valid values for\n   * VersionControlOption: Git, Tfvc. Valid values for ProcessTemplateId:\n   * 6B724908-EF14-45CF-84F8-768B5384DA45, ADCC42AB-9882-485E-A3ED-7678F01F66BC,\n   * 27450541-8E31-4150-9947-DC59F998FC01 (these IDs correspond to Scrum, Agile, and CMMI process\n   * templates).\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param rootResourceName Name of the Team Services account.\n   * @param resourceName Name of the Team Services project.\n   * @param body The request data.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    rootResourceName: string,\n    resourceName: string,\n    body: ProjectResource,\n    options?: ProjectsCreateOptionalParams\n  ): Promise<ProjectsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      rootResourceName,\n      resourceName,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the details of a Team Services project resource.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param rootResourceName Name of the Team Services account.\n   * @param resourceName Name of the Team Services project.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    rootResourceName: string,\n    resourceName: string,\n    options?: ProjectsGetOptionalParams\n  ): Promise<ProjectsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, rootResourceName, resourceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates the tags of the specified Team Services project.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param rootResourceName Name of the Team Services account.\n   * @param resourceName Name of the Team Services project.\n   * @param body The request data.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    rootResourceName: string,\n    resourceName: string,\n    body: ProjectResource,\n    options?: ProjectsUpdateOptionalParams\n  ): Promise<ProjectsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, rootResourceName, resourceName, body, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the status of the project resource creation job.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param rootResourceName Name of the Team Services account.\n   * @param resourceName Name of the Team Services project.\n   * @param subContainerName This parameter should be set to the resourceName.\n   * @param operation The operation type. The only supported value is 'put'.\n   * @param options The options parameters.\n   */\n  getJobStatus(\n    resourceGroupName: string,\n    rootResourceName: string,\n    resourceName: string,\n    subContainerName: string,\n    operation: string,\n    options?: ProjectsGetJobStatusOptionalParams\n  ): Promise<ProjectsGetJobStatusResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        rootResourceName,\n        resourceName,\n        subContainerName,\n        operation,\n        options\n      },\n      getJobStatusOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectResourceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.rootResourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectResource\n    },\n    201: {\n      bodyMapper: Mappers.ProjectResource\n    },\n    202: {\n      bodyMapper: Mappers.ProjectResource\n    },\n    204: {\n      bodyMapper: Mappers.ProjectResource\n    }\n  },\n  requestBody: Parameters.body4,\n  queryParameters: [Parameters.apiVersion, Parameters.validating],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.rootResourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectResource\n    },\n    404: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.rootResourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectResource\n    }\n  },\n  requestBody: Parameters.body4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.rootResourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getJobStatusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{rootResourceName}/project/{resourceName}/subContainers/{subContainerName}/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProjectResource\n    },\n    202: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.operation,\n    Parameters.jobId\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.rootResourceName,\n    Parameters.subContainerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}