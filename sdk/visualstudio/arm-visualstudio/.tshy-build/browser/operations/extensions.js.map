{"version":3,"file":"extensions.js","sourceRoot":"","sources":["../../../src/operations/extensions.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Extensions } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { VisualStudioResourceProviderClient } from \"../visualStudioResourceProviderClient.js\";\nimport {\n  ExtensionsListByAccountOptionalParams,\n  ExtensionsListByAccountResponse,\n  ExtensionResourceRequest,\n  ExtensionsCreateOptionalParams,\n  ExtensionsCreateResponse,\n  ExtensionsDeleteOptionalParams,\n  ExtensionsGetOptionalParams,\n  ExtensionsGetResponse,\n  ExtensionsUpdateOptionalParams,\n  ExtensionsUpdateResponse\n} from \"../models/index.js\";\n\n/** Class containing Extensions operations. */\nexport class ExtensionsImpl implements Extensions {\n  private readonly client: VisualStudioResourceProviderClient;\n\n  /**\n   * Initialize a new instance of the class Extensions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: VisualStudioResourceProviderClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the details of the extension resources created within the resource group.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param accountResourceName The name of the Visual Studio Team Services account resource.\n   * @param options The options parameters.\n   */\n  listByAccount(\n    resourceGroupName: string,\n    accountResourceName: string,\n    options?: ExtensionsListByAccountOptionalParams\n  ): Promise<ExtensionsListByAccountResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountResourceName, options },\n      listByAccountOperationSpec\n    );\n  }\n\n  /**\n   * Registers the extension with a Visual Studio Team Services account.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param accountResourceName The name of the Visual Studio Team Services account resource.\n   * @param extensionResourceName The name of the extension.\n   * @param body An object containing additional information related to the extension request.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    accountResourceName: string,\n    extensionResourceName: string,\n    body: ExtensionResourceRequest,\n    options?: ExtensionsCreateOptionalParams\n  ): Promise<ExtensionsCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountResourceName,\n        extensionResourceName,\n        body,\n        options\n      },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Removes an extension resource registration for a Visual Studio Team Services account.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param accountResourceName The name of the Visual Studio Team Services account resource.\n   * @param extensionResourceName The name of the extension.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountResourceName: string,\n    extensionResourceName: string,\n    options?: ExtensionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountResourceName,\n        extensionResourceName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets the details of an extension associated with a Visual Studio Team Services account resource.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param accountResourceName The name of the Visual Studio Team Services account resource.\n   * @param extensionResourceName The name of the extension.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountResourceName: string,\n    extensionResourceName: string,\n    options?: ExtensionsGetOptionalParams\n  ): Promise<ExtensionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountResourceName,\n        extensionResourceName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates an existing extension registration for the Visual Studio Team Services account.\n   * @param resourceGroupName Name of the resource group within the Azure subscription.\n   * @param accountResourceName The name of the Visual Studio Team Services account resource.\n   * @param extensionResourceName The name of the extension.\n   * @param body An object containing additional information related to the extension request.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    accountResourceName: string,\n    extensionResourceName: string,\n    body: ExtensionResourceRequest,\n    options?: ExtensionsUpdateOptionalParams\n  ): Promise<ExtensionsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountResourceName,\n        extensionResourceName,\n        body,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByAccountOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtensionResourceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountResourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtensionResource\n    }\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountResourceName,\n    Parameters.extensionResourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountResourceName,\n    Parameters.extensionResourceName\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtensionResource\n    },\n    404: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountResourceName,\n    Parameters.extensionResourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.visualstudio/account/{accountResourceName}/extension/{extensionResourceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtensionResource\n    }\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountResourceName,\n    Parameters.extensionResourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n"]}