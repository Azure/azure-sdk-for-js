/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { FrontDoorNameAvailabilityWithSubscription } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { FrontDoorManagementClient } from "../frontDoorManagementClient";
import {
  CheckNameAvailabilityInput,
  FrontDoorNameAvailabilityWithSubscriptionCheckOptionalParams,
  FrontDoorNameAvailabilityWithSubscriptionCheckResponse
} from "../models";

/** Class containing FrontDoorNameAvailabilityWithSubscription operations. */
export class FrontDoorNameAvailabilityWithSubscriptionImpl
  implements FrontDoorNameAvailabilityWithSubscription {
  private readonly client: FrontDoorManagementClient;

  /**
   * Initialize a new instance of the class FrontDoorNameAvailabilityWithSubscription class.
   * @param client Reference to the service client
   */
  constructor(client: FrontDoorManagementClient) {
    this.client = client;
  }

  /**
   * Check the availability of a Front Door subdomain.
   * @param checkFrontDoorNameAvailabilityInput Input to check.
   * @param options The options parameters.
   */
  check(
    checkFrontDoorNameAvailabilityInput: CheckNameAvailabilityInput,
    options?: FrontDoorNameAvailabilityWithSubscriptionCheckOptionalParams
  ): Promise<FrontDoorNameAvailabilityWithSubscriptionCheckResponse> {
    return this.client.sendOperationRequest(
      { checkFrontDoorNameAvailabilityInput, options },
      checkOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const checkOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/checkFrontDoorNameAvailability",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.CheckNameAvailabilityOutput
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.checkFrontDoorNameAvailabilityInput,
  queryParameters: [Parameters.apiVersion1],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
