/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/frontDoorNameAvailabilityWithSubscriptionMappers";
import * as Parameters from "../models/parameters";
import { FrontDoorManagementClientContext } from "../frontDoorManagementClientContext";

/** Class representing a FrontDoorNameAvailabilityWithSubscription. */
export class FrontDoorNameAvailabilityWithSubscription {
  private readonly client: FrontDoorManagementClientContext;

  /**
   * Create a FrontDoorNameAvailabilityWithSubscription.
   * @param {FrontDoorManagementClientContext} client Reference to the service client.
   */
  constructor(client: FrontDoorManagementClientContext) {
    this.client = client;
  }

  /**
   * Check the availability of a Front Door subdomain.
   * @param checkFrontDoorNameAvailabilityInput Input to check.
   * @param [options] The optional parameters
   * @returns Promise<Models.FrontDoorNameAvailabilityWithSubscriptionCheckResponse>
   */
  check(checkFrontDoorNameAvailabilityInput: Models.CheckNameAvailabilityInput, options?: msRest.RequestOptionsBase): Promise<Models.FrontDoorNameAvailabilityWithSubscriptionCheckResponse>;
  /**
   * @param checkFrontDoorNameAvailabilityInput Input to check.
   * @param callback The callback
   */
  check(checkFrontDoorNameAvailabilityInput: Models.CheckNameAvailabilityInput, callback: msRest.ServiceCallback<Models.CheckNameAvailabilityOutput>): void;
  /**
   * @param checkFrontDoorNameAvailabilityInput Input to check.
   * @param options The optional parameters
   * @param callback The callback
   */
  check(checkFrontDoorNameAvailabilityInput: Models.CheckNameAvailabilityInput, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CheckNameAvailabilityOutput>): void;
  check(checkFrontDoorNameAvailabilityInput: Models.CheckNameAvailabilityInput, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CheckNameAvailabilityOutput>, callback?: msRest.ServiceCallback<Models.CheckNameAvailabilityOutput>): Promise<Models.FrontDoorNameAvailabilityWithSubscriptionCheckResponse> {
    return this.client.sendOperationRequest(
      {
        checkFrontDoorNameAvailabilityInput,
        options
      },
      checkOperationSpec,
      callback) as Promise<Models.FrontDoorNameAvailabilityWithSubscriptionCheckResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const checkOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Network/checkFrontDoorNameAvailability",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "checkFrontDoorNameAvailabilityInput",
    mapper: {
      ...Mappers.CheckNameAvailabilityInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CheckNameAvailabilityOutput
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
