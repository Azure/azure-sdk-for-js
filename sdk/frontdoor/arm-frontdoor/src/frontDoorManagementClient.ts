/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { FrontDoorManagementClientContext } from "./frontDoorManagementClientContext";


class FrontDoorManagementClient extends FrontDoorManagementClientContext {
  // Operation groups
  networkExperimentProfiles: operations.NetworkExperimentProfiles;
  preconfiguredEndpoints: operations.PreconfiguredEndpoints;
  experiments: operations.Experiments;
  reports: operations.Reports;
  frontDoorNameAvailability: operations.FrontDoorNameAvailability;
  frontDoorNameAvailabilityWithSubscription: operations.FrontDoorNameAvailabilityWithSubscription;
  frontDoors: operations.FrontDoors;
  frontendEndpoints: operations.FrontendEndpoints;
  endpoints: operations.Endpoints;
  rulesEngines: operations.RulesEngines;
  policies: operations.Policies;
  managedRuleSets: operations.ManagedRuleSets;

  /**
   * Initializes a new instance of the FrontDoorManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure
   * subscription. The subscription ID forms part of the URI for every service call.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.FrontDoorManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.networkExperimentProfiles = new operations.NetworkExperimentProfiles(this);
    this.preconfiguredEndpoints = new operations.PreconfiguredEndpoints(this);
    this.experiments = new operations.Experiments(this);
    this.reports = new operations.Reports(this);
    this.frontDoorNameAvailability = new operations.FrontDoorNameAvailability(this);
    this.frontDoorNameAvailabilityWithSubscription = new operations.FrontDoorNameAvailabilityWithSubscription(this);
    this.frontDoors = new operations.FrontDoors(this);
    this.frontendEndpoints = new operations.FrontendEndpoints(this);
    this.endpoints = new operations.Endpoints(this);
    this.rulesEngines = new operations.RulesEngines(this);
    this.policies = new operations.Policies(this);
    this.managedRuleSets = new operations.ManagedRuleSets(this);
  }
}

// Operation Specifications

export {
  FrontDoorManagementClient,
  FrontDoorManagementClientContext,
  Models as FrontDoorManagementModels,
  Mappers as FrontDoorManagementMappers
};
export * from "./operations";
