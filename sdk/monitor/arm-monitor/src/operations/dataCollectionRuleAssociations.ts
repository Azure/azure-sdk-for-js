/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/dataCollectionRuleAssociationsMappers";
import * as Parameters from "../models/parameters";
import { MonitorManagementClientContext } from "../monitorManagementClientContext";

/** Class representing a DataCollectionRuleAssociations. */
export class DataCollectionRuleAssociations {
  private readonly client: MonitorManagementClientContext;

  /**
   * Create a DataCollectionRuleAssociations.
   * @param {MonitorManagementClientContext} client Reference to the service client.
   */
  constructor(client: MonitorManagementClientContext) {
    this.client = client;
  }

  /**
   * @summary Lists associations for the specified resource.
   * @param resourceUri The identifier of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionRuleAssociationsListByResourceResponse>
   */
  listByResource(resourceUri: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionRuleAssociationsListByResourceResponse>;
  /**
   * @param resourceUri The identifier of the resource.
   * @param callback The callback
   */
  listByResource(resourceUri: string, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): void;
  /**
   * @param resourceUri The identifier of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResource(resourceUri: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): void;
  listByResource(resourceUri: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>, callback?: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): Promise<Models.DataCollectionRuleAssociationsListByResourceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceUri,
        options
      },
      listByResourceOperationSpec,
      callback) as Promise<Models.DataCollectionRuleAssociationsListByResourceResponse>;
  }

  /**
   * @summary Lists associations for the specified data collection rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionRuleName The name of the data collection rule. The name is case
   * insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionRuleAssociationsListByRuleResponse>
   */
  listByRule(resourceGroupName: string, dataCollectionRuleName: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionRuleAssociationsListByRuleResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionRuleName The name of the data collection rule. The name is case
   * insensitive.
   * @param callback The callback
   */
  listByRule(resourceGroupName: string, dataCollectionRuleName: string, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionRuleName The name of the data collection rule. The name is case
   * insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByRule(resourceGroupName: string, dataCollectionRuleName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): void;
  listByRule(resourceGroupName: string, dataCollectionRuleName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>, callback?: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): Promise<Models.DataCollectionRuleAssociationsListByRuleResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dataCollectionRuleName,
        options
      },
      listByRuleOperationSpec,
      callback) as Promise<Models.DataCollectionRuleAssociationsListByRuleResponse>;
  }

  /**
   * @summary Returns the specified association.
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionRuleAssociationsGetResponse>
   */
  get(resourceUri: string, associationName: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionRuleAssociationsGetResponse>;
  /**
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param callback The callback
   */
  get(resourceUri: string, associationName: string, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResource>): void;
  /**
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceUri: string, associationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResource>): void;
  get(resourceUri: string, associationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResource>, callback?: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResource>): Promise<Models.DataCollectionRuleAssociationsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceUri,
        associationName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.DataCollectionRuleAssociationsGetResponse>;
  }

  /**
   * @summary Creates or updates an association.
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionRuleAssociationsCreateResponse>
   */
  create(resourceUri: string, associationName: string, options?: Models.DataCollectionRuleAssociationsCreateOptionalParams): Promise<Models.DataCollectionRuleAssociationsCreateResponse>;
  /**
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param callback The callback
   */
  create(resourceUri: string, associationName: string, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResource>): void;
  /**
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceUri: string, associationName: string, options: Models.DataCollectionRuleAssociationsCreateOptionalParams, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResource>): void;
  create(resourceUri: string, associationName: string, options?: Models.DataCollectionRuleAssociationsCreateOptionalParams | msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResource>, callback?: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResource>): Promise<Models.DataCollectionRuleAssociationsCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceUri,
        associationName,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.DataCollectionRuleAssociationsCreateResponse>;
  }

  /**
   * @summary Deletes an association.
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceUri: string, associationName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param callback The callback
   */
  deleteMethod(resourceUri: string, associationName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceUri The identifier of the resource.
   * @param associationName The name of the association. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceUri: string, associationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceUri: string, associationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceUri,
        associationName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * @summary Lists associations for the specified resource.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionRuleAssociationsListByResourceNextResponse>
   */
  listByResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionRuleAssociationsListByResourceNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): void;
  listByResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>, callback?: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): Promise<Models.DataCollectionRuleAssociationsListByResourceNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceNextOperationSpec,
      callback) as Promise<Models.DataCollectionRuleAssociationsListByResourceNextResponse>;
  }

  /**
   * @summary Lists associations for the specified data collection rule.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionRuleAssociationsListByRuleNextResponse>
   */
  listByRuleNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionRuleAssociationsListByRuleNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByRuleNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByRuleNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): void;
  listByRuleNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>, callback?: msRest.ServiceCallback<Models.DataCollectionRuleAssociationProxyOnlyResourceListResult>): Promise<Models.DataCollectionRuleAssociationsListByRuleNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByRuleNextOperationSpec,
      callback) as Promise<Models.DataCollectionRuleAssociationsListByRuleNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByResourceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations",
  urlParameters: [
    Parameters.resourceUri0
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionRuleAssociationProxyOnlyResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const listByRuleOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}/associations",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dataCollectionRuleName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionRuleAssociationProxyOnlyResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations/{associationName}",
  urlParameters: [
    Parameters.resourceUri0,
    Parameters.associationName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionRuleAssociationProxyOnlyResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations/{associationName}",
  urlParameters: [
    Parameters.resourceUri0,
    Parameters.associationName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "body"
    ],
    mapper: Mappers.DataCollectionRuleAssociationProxyOnlyResource
  },
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionRuleAssociationProxyOnlyResource
    },
    201: {
      bodyMapper: Mappers.DataCollectionRuleAssociationProxyOnlyResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations/{associationName}",
  urlParameters: [
    Parameters.resourceUri0,
    Parameters.associationName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const listByResourceNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionRuleAssociationProxyOnlyResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const listByRuleNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionRuleAssociationProxyOnlyResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};
