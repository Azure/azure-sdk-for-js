/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/dataCollectionEndpointsMappers";
import * as Parameters from "../models/parameters";
import { MonitorManagementClientContext } from "../monitorManagementClientContext";

/** Class representing a DataCollectionEndpoints. */
export class DataCollectionEndpoints {
  private readonly client: MonitorManagementClientContext;

  /**
   * Create a DataCollectionEndpoints.
   * @param {MonitorManagementClientContext} client Reference to the service client.
   */
  constructor(client: MonitorManagementClientContext) {
    this.client = client;
  }

  /**
   * @summary Lists all data collection endpoints in the specified resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionEndpointsListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionEndpointsListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>, callback?: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): Promise<Models.DataCollectionEndpointsListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.DataCollectionEndpointsListByResourceGroupResponse>;
  }

  /**
   * @summary Lists all data collection endpoints in the specified subscription
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionEndpointsListBySubscriptionResponse>
   */
  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionEndpointsListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): void;
  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>, callback?: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): Promise<Models.DataCollectionEndpointsListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.DataCollectionEndpointsListBySubscriptionResponse>;
  }

  /**
   * @summary Returns the specified data collection endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionEndpointsGetResponse>
   */
  get(resourceGroupName: string, dataCollectionEndpointName: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionEndpointsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param callback The callback
   */
  get(resourceGroupName: string, dataCollectionEndpointName: string, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, dataCollectionEndpointName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): void;
  get(resourceGroupName: string, dataCollectionEndpointName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionEndpointResource>, callback?: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): Promise<Models.DataCollectionEndpointsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dataCollectionEndpointName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.DataCollectionEndpointsGetResponse>;
  }

  /**
   * @summary Creates or updates a data collection endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionEndpointsCreateResponse>
   */
  create(resourceGroupName: string, dataCollectionEndpointName: string, options?: Models.DataCollectionEndpointsCreateOptionalParams): Promise<Models.DataCollectionEndpointsCreateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param callback The callback
   */
  create(resourceGroupName: string, dataCollectionEndpointName: string, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceGroupName: string, dataCollectionEndpointName: string, options: Models.DataCollectionEndpointsCreateOptionalParams, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): void;
  create(resourceGroupName: string, dataCollectionEndpointName: string, options?: Models.DataCollectionEndpointsCreateOptionalParams | msRest.ServiceCallback<Models.DataCollectionEndpointResource>, callback?: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): Promise<Models.DataCollectionEndpointsCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dataCollectionEndpointName,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.DataCollectionEndpointsCreateResponse>;
  }

  /**
   * @summary Updates part of a data collection endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionEndpointsUpdateResponse>
   */
  update(resourceGroupName: string, dataCollectionEndpointName: string, options?: Models.DataCollectionEndpointsUpdateOptionalParams): Promise<Models.DataCollectionEndpointsUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param callback The callback
   */
  update(resourceGroupName: string, dataCollectionEndpointName: string, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, dataCollectionEndpointName: string, options: Models.DataCollectionEndpointsUpdateOptionalParams, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): void;
  update(resourceGroupName: string, dataCollectionEndpointName: string, options?: Models.DataCollectionEndpointsUpdateOptionalParams | msRest.ServiceCallback<Models.DataCollectionEndpointResource>, callback?: msRest.ServiceCallback<Models.DataCollectionEndpointResource>): Promise<Models.DataCollectionEndpointsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dataCollectionEndpointName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.DataCollectionEndpointsUpdateResponse>;
  }

  /**
   * @summary Deletes a data collection endpoint.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, dataCollectionEndpointName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, dataCollectionEndpointName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataCollectionEndpointName The name of the data collection endpoint. The name is case
   * insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, dataCollectionEndpointName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, dataCollectionEndpointName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dataCollectionEndpointName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * @summary Lists all data collection endpoints in the specified resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionEndpointsListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionEndpointsListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>, callback?: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): Promise<Models.DataCollectionEndpointsListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.DataCollectionEndpointsListByResourceGroupNextResponse>;
  }

  /**
   * @summary Lists all data collection endpoints in the specified subscription
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataCollectionEndpointsListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DataCollectionEndpointsListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>, callback?: msRest.ServiceCallback<Models.DataCollectionEndpointResourceListResult>): Promise<Models.DataCollectionEndpointsListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.DataCollectionEndpointsListBySubscriptionNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionEndpointResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionEndpoints",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionEndpointResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dataCollectionEndpointName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionEndpointResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dataCollectionEndpointName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "body"
    ],
    mapper: Mappers.DataCollectionEndpointResource
  },
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionEndpointResource
    },
    201: {
      bodyMapper: Mappers.DataCollectionEndpointResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dataCollectionEndpointName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      tags: [
        "options",
        "tags"
      ]
    },
    mapper: Mappers.ResourceForUpdate
  },
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionEndpointResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.dataCollectionEndpointName
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionEndpointResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion12
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataCollectionEndpointResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseCommonV2
    }
  },
  serializer
};
