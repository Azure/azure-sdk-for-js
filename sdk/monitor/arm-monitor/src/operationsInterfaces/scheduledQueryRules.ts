/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ScheduledQueryRuleResource,
  ScheduledQueryRulesListBySubscriptionOptionalParams,
  ScheduledQueryRulesListByResourceGroupOptionalParams,
  ScheduledQueryRulesGetOptionalParams,
  ScheduledQueryRulesGetResponse,
  ScheduledQueryRulesCreateOrUpdateOptionalParams,
  ScheduledQueryRulesCreateOrUpdateResponse,
  ScheduledQueryRuleResourcePatch,
  ScheduledQueryRulesUpdateOptionalParams,
  ScheduledQueryRulesUpdateResponse,
  ScheduledQueryRulesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ScheduledQueryRules. */
export interface ScheduledQueryRules {
  /**
   * Retrieve a scheduled query rule definitions in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ScheduledQueryRulesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ScheduledQueryRuleResource>;
  /**
   * Retrieve scheduled query rule definitions in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ScheduledQueryRulesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ScheduledQueryRuleResource>;
  /**
   * Retrieve an scheduled query rule definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param ruleName The name of the rule.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    ruleName: string,
    options?: ScheduledQueryRulesGetOptionalParams
  ): Promise<ScheduledQueryRulesGetResponse>;
  /**
   * Creates or updates a scheduled query rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param ruleName The name of the rule.
   * @param parameters The parameters of the rule to create or update.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    ruleName: string,
    parameters: ScheduledQueryRuleResource,
    options?: ScheduledQueryRulesCreateOrUpdateOptionalParams
  ): Promise<ScheduledQueryRulesCreateOrUpdateResponse>;
  /**
   * Update a scheduled query rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param ruleName The name of the rule.
   * @param parameters The parameters of the rule to update.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    ruleName: string,
    parameters: ScheduledQueryRuleResourcePatch,
    options?: ScheduledQueryRulesUpdateOptionalParams
  ): Promise<ScheduledQueryRulesUpdateResponse>;
  /**
   * Deletes a scheduled query rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param ruleName The name of the rule.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    ruleName: string,
    options?: ScheduledQueryRulesDeleteOptionalParams
  ): Promise<void>;
}
