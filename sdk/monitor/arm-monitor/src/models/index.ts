/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * An azure resource object
 */
export interface Resource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * Metadata used by portal/tooling/etc to render different UX experiences for resources of the
   * same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource
   * provider must validate and persist this value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The etag field is *not* required. If it is provided in the response body, it must also be
   * provided as a header per the normal etag convention.  Entity tags are used for comparing two
   * or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag
   * (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range
   * (section 14.27) header fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * The number of instances that can be used during this profile.
 */
export interface ScaleCapacity {
  /**
   * the minimum number of instances for the resource.
   */
  minimum: string;
  /**
   * the maximum number of instances for the resource. The actual maximum number of instances is
   * limited by the cores that are available in the subscription.
   */
  maximum: string;
  /**
   * the number of instances that will be set if metrics are not available for evaluation. The
   * default is only used if the current instance count is lower than the default.
   */
  default: string;
}

/**
 * Specifies an auto scale rule metric dimension.
 */
export interface ScaleRuleMetricDimension {
  /**
   * Name of the dimension.
   */
  dimensionName: string;
  /**
   * the dimension operator. Only 'Equals' and 'NotEquals' are supported. 'Equals' being equal to
   * any of the values. 'NotEquals' being not equal to all of the values. Possible values include:
   * 'Equals', 'NotEquals'
   */
  operator: ScaleRuleMetricDimensionOperationType;
  /**
   * list of dimension values. For example: ["App1","App2"].
   */
  values: string[];
}

/**
 * The trigger that results in a scaling action.
 */
export interface MetricTrigger {
  /**
   * the name of the metric that defines what the rule monitors.
   */
  metricName: string;
  /**
   * the namespace of the metric that defines what the rule monitors.
   */
  metricNamespace?: string;
  /**
   * the resource identifier of the resource the rule monitors.
   */
  metricResourceUri: string;
  /**
   * the location of the resource the rule monitors.
   */
  metricResourceLocation?: string;
  /**
   * the granularity of metrics the rule monitors. Must be one of the predefined values returned
   * from metric definitions for the metric. Must be between 12 hours and 1 minute.
   */
  timeGrain: string;
  /**
   * the metric statistic type. How the metrics from multiple instances are combined. Possible
   * values include: 'Average', 'Min', 'Max', 'Sum', 'Count'
   */
  statistic: MetricStatisticType;
  /**
   * the range of time in which instance data is collected. This value must be greater than the
   * delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours
   * and 5 minutes.
   */
  timeWindow: string;
  /**
   * time aggregation type. How the data that is collected should be combined over time. The
   * default value is Average. Possible values include: 'Average', 'Minimum', 'Maximum', 'Total',
   * 'Count', 'Last'
   */
  timeAggregation: TimeAggregationType;
  /**
   * the operator that is used to compare the metric data and the threshold. Possible values
   * include: 'Equals', 'NotEquals', 'GreaterThan', 'GreaterThanOrEqual', 'LessThan',
   * 'LessThanOrEqual'
   */
  operator: ComparisonOperationType;
  /**
   * the threshold of the metric that triggers the scale action.
   */
  threshold: number;
  /**
   * List of dimension conditions. For example:
   * [{"DimensionName":"AppName","Operator":"Equals","Values":["App1"]},{"DimensionName":"Deployment","Operator":"Equals","Values":["default"]}].
   */
  dimensions?: ScaleRuleMetricDimension[];
  /**
   * a value indicating whether metric should divide per instance.
   */
  dividePerInstance?: boolean;
}

/**
 * The parameters for the scaling action.
 */
export interface ScaleAction {
  /**
   * the scale direction. Whether the scaling action increases or decreases the number of
   * instances. Possible values include: 'None', 'Increase', 'Decrease'
   */
  direction: ScaleDirection;
  /**
   * the type of action that should occur when the scale rule fires. Possible values include:
   * 'ChangeCount', 'PercentChangeCount', 'ExactCount', 'ServiceAllowedNextValue'
   */
  type: ScaleType;
  /**
   * the number of instances that are involved in the scaling action. This value must be 1 or
   * greater. The default value is 1. Default value: '1'.
   */
  value?: string;
  /**
   * the amount of time to wait since the last scaling action before this action occurs. It must be
   * between 1 week and 1 minute in ISO 8601 format.
   */
  cooldown: string;
}

/**
 * A rule that provide the triggers and parameters for the scaling action.
 */
export interface ScaleRule {
  /**
   * the trigger that results in a scaling action.
   */
  metricTrigger: MetricTrigger;
  /**
   * the parameters for the scaling action.
   */
  scaleAction: ScaleAction;
}

/**
 * A specific date-time for the profile.
 */
export interface TimeWindow {
  /**
   * the timezone of the start and end times for the profile. Some examples of valid time zones
   * are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific
   * Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard
   * Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time,
   * Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time,
   * Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard
   * Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time,
   * Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time,
   * Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo
   * Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time,
   * Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard
   * Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central
   * European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan
   * Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria
   * Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey
   * Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic
   * Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa
   * Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia
   * Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time,
   * Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan
   * Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia
   * Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time,
   * SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard
   * Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar
   * Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia
   * Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard
   * Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok
   * Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New
   * Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard
   * Time, Samoa Standard Time, Line Islands Standard Time
   */
  timeZone?: string;
  /**
   * the start time for the profile in ISO 8601 format.
   */
  start: Date;
  /**
   * the end time for the profile in ISO 8601 format.
   */
  end: Date;
}

/**
 * The scheduling constraints for when the profile begins.
 */
export interface RecurrentSchedule {
  /**
   * the timezone for the hours of the profile. Some examples of valid time zones are: Dateline
   * Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time
   * (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico),
   * Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard
   * Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time,
   * US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard
   * Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time,
   * Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA
   * Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time,
   * UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco
   * Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time,
   * Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W.
   * Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time,
   * Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time,
   * South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time,
   * Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time,
   * Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time,
   * Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time,
   * Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard
   * Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka
   * Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N.
   * Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard
   * Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W.
   * Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time,
   * Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard
   * Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time,
   * Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10,
   * Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji
   * Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands
   * Standard Time
   */
  timeZone: string;
  /**
   * the collection of days that the profile takes effect on. Possible values are Sunday through
   * Saturday.
   */
  days: string[];
  /**
   * A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the
   * 24-hour clock (AM/PM times are not supported).
   */
  hours: number[];
  /**
   * A collection of minutes at which the profile takes effect at.
   */
  minutes: number[];
}

/**
 * The repeating times at which this profile begins. This element is not used if the FixedDate
 * element is used.
 */
export interface Recurrence {
  /**
   * the recurrence frequency. How often the schedule profile should take effect. This value must
   * be Week, meaning each week will have the same set of profiles. For example, to set a daily
   * schedule, set **schedule** to every day of the week. The frequency property specifies that the
   * schedule is repeated weekly. Possible values include: 'None', 'Second', 'Minute', 'Hour',
   * 'Day', 'Week', 'Month', 'Year'
   */
  frequency: RecurrenceFrequency;
  /**
   * the scheduling constraints for when the profile begins.
   */
  schedule: RecurrentSchedule;
}

/**
 * Autoscale profile.
 */
export interface AutoscaleProfile {
  /**
   * the name of the profile.
   */
  name: string;
  /**
   * the number of instances that can be used during this profile.
   */
  capacity: ScaleCapacity;
  /**
   * the collection of rules that provide the triggers and parameters for the scaling action. A
   * maximum of 10 rules can be specified.
   */
  rules: ScaleRule[];
  /**
   * the specific date-time for the profile. This element is not used if the Recurrence element is
   * used.
   */
  fixedDate?: TimeWindow;
  /**
   * the repeating times at which this profile begins. This element is not used if the FixedDate
   * element is used.
   */
  recurrence?: Recurrence;
}

/**
 * Email notification of an autoscale event.
 */
export interface EmailNotification {
  /**
   * a value indicating whether to send email to subscription administrator. Default value: false.
   */
  sendToSubscriptionAdministrator?: boolean;
  /**
   * a value indicating whether to send email to subscription co-administrators. Default value:
   * false.
   */
  sendToSubscriptionCoAdministrators?: boolean;
  /**
   * the custom e-mails list. This value can be null or empty, in which case this attribute will be
   * ignored.
   */
  customEmails?: string[];
}

/**
 * Webhook notification of an autoscale event.
 */
export interface WebhookNotification {
  /**
   * the service address to receive the notification.
   */
  serviceUri?: string;
  /**
   * a property bag of settings. This value can be empty.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * Autoscale notification.
 */
export interface AutoscaleNotification {
  /**
   * the email notification.
   */
  email?: EmailNotification;
  /**
   * the collection of webhook notifications.
   */
  webhooks?: WebhookNotification[];
}

/**
 * The autoscale setting resource.
 */
export interface AutoscaleSettingResource extends Resource {
  /**
   * the collection of automatic scaling profiles that specify different scaling parameters for
   * different time periods. A maximum of 20 profiles can be specified.
   */
  profiles: AutoscaleProfile[];
  /**
   * the collection of notifications.
   */
  notifications?: AutoscaleNotification[];
  /**
   * the enabled flag. Specifies whether automatic scaling is enabled for the resource. The default
   * value is 'true'. Default value: true.
   */
  enabled?: boolean;
  /**
   * the name of the autoscale setting.
   */
  autoscaleSettingResourceName?: string;
  /**
   * the resource identifier of the resource that the autoscale setting should be added to.
   */
  targetResourceUri?: string;
  /**
   * the location of the resource that the autoscale setting should be added to.
   */
  targetResourceLocation?: string;
}

/**
 * The autoscale setting object for patch operations.
 */
export interface AutoscaleSettingResourcePatch {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * the collection of automatic scaling profiles that specify different scaling parameters for
   * different time periods. A maximum of 20 profiles can be specified.
   */
  profiles: AutoscaleProfile[];
  /**
   * the collection of notifications.
   */
  notifications?: AutoscaleNotification[];
  /**
   * the enabled flag. Specifies whether automatic scaling is enabled for the resource. The default
   * value is 'true'. Default value: true.
   */
  enabled?: boolean;
  /**
   * the name of the autoscale setting.
   */
  name?: string;
  /**
   * the resource identifier of the resource that the autoscale setting should be added to.
   */
  targetResourceUri?: string;
  /**
   * the location of the resource that the autoscale setting should be added to.
   */
  targetResourceLocation?: string;
}

/**
 * Describes the format of Error response.
 */
export interface ErrorResponse {
  /**
   * Error code
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Insights
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: AlertRules, Autoscale, etc.
   */
  resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  operation?: string;
}

/**
 * Microsoft Insights API operation definition.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display metadata associated with the operation.
   */
  display?: OperationDisplay;
}

/**
 * Result of the request to list Microsoft.Insights operations. It contains a list of operations
 * and a URL link to get the next set of results.
 */
export interface OperationListResult {
  /**
   * List of operations supported by the Microsoft.Insights provider.
   */
  value?: Operation[];
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * An alert incident indicates the activation status of an alert rule.
 */
export interface Incident {
  /**
   * Incident name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Rule name that is associated with the incident.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ruleName?: string;
  /**
   * A boolean to indicate whether the incident is active or resolved.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isActive?: boolean;
  /**
   * The time at which the incident was activated in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly activatedTime?: Date;
  /**
   * The time at which the incident was resolved in ISO8601 format. If null, it means the incident
   * is still active.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resolvedTime?: Date;
}

/**
 * Contains the possible cases for RuleDataSource.
 */
export type RuleDataSourceUnion = RuleDataSource | RuleMetricDataSource | RuleManagementEventDataSource;

/**
 * The resource from which the rule collects its data.
 */
export interface RuleDataSource {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "RuleDataSource";
  /**
   * the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be
   * updated for an existing rule.
   */
  resourceUri?: string;
  /**
   * the legacy resource identifier of the resource the rule monitors. **NOTE**: this property
   * cannot be updated for an existing rule.
   */
  legacyResourceId?: string;
  /**
   * the location of the resource.
   */
  resourceLocation?: string;
  /**
   * the namespace of the metric.
   */
  metricNamespace?: string;
}

/**
 * Contains the possible cases for RuleCondition.
 */
export type RuleConditionUnion = RuleCondition | ThresholdRuleCondition | LocationThresholdRuleCondition | ManagementEventRuleCondition;

/**
 * The condition that results in the alert rule being activated.
 */
export interface RuleCondition {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "RuleCondition";
  /**
   * the resource from which the rule collects its data. For this type dataSource will always be of
   * type RuleMetricDataSource.
   */
  dataSource?: RuleDataSourceUnion;
}

/**
 * A rule metric data source. The discriminator value is always RuleMetricDataSource in this case.
 */
export interface RuleMetricDataSource {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource";
  /**
   * the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be
   * updated for an existing rule.
   */
  resourceUri?: string;
  /**
   * the legacy resource identifier of the resource the rule monitors. **NOTE**: this property
   * cannot be updated for an existing rule.
   */
  legacyResourceId?: string;
  /**
   * the location of the resource.
   */
  resourceLocation?: string;
  /**
   * the namespace of the metric.
   */
  metricNamespace?: string;
  /**
   * the name of the metric that defines what the rule monitors.
   */
  metricName?: string;
}

/**
 * The claims for a rule management event data source.
 */
export interface RuleManagementEventClaimsDataSource {
  /**
   * the email address.
   */
  emailAddress?: string;
}

/**
 * A rule management event data source. The discriminator fields is always
 * RuleManagementEventDataSource in this case.
 */
export interface RuleManagementEventDataSource {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.RuleManagementEventDataSource";
  /**
   * the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be
   * updated for an existing rule.
   */
  resourceUri?: string;
  /**
   * the legacy resource identifier of the resource the rule monitors. **NOTE**: this property
   * cannot be updated for an existing rule.
   */
  legacyResourceId?: string;
  /**
   * the location of the resource.
   */
  resourceLocation?: string;
  /**
   * the namespace of the metric.
   */
  metricNamespace?: string;
  /**
   * the event name.
   */
  eventName?: string;
  /**
   * the event source.
   */
  eventSource?: string;
  /**
   * the level.
   */
  level?: string;
  /**
   * The name of the operation that should be checked for. If no name is provided, any operation
   * will match.
   */
  operationName?: string;
  /**
   * the resource group name.
   */
  resourceGroupName?: string;
  /**
   * the resource provider name.
   */
  resourceProviderName?: string;
  /**
   * The status of the operation that should be checked for. If no status is provided, any status
   * will match.
   */
  status?: string;
  /**
   * the substatus.
   */
  subStatus?: string;
  /**
   * the claims.
   */
  claims?: RuleManagementEventClaimsDataSource;
}

/**
 * A rule condition based on a metric crossing a threshold.
 */
export interface ThresholdRuleCondition {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition";
  /**
   * the resource from which the rule collects its data. For this type dataSource will always be of
   * type RuleMetricDataSource.
   */
  dataSource?: RuleDataSourceUnion;
  /**
   * the operator used to compare the data and the threshold. Possible values include:
   * 'GreaterThan', 'GreaterThanOrEqual', 'LessThan', 'LessThanOrEqual'
   */
  operator: ConditionOperator;
  /**
   * the threshold value that activates the alert.
   */
  threshold: number;
  /**
   * the period of time (in ISO 8601 duration format) that is used to monitor alert activity based
   * on the threshold. If specified then it must be between 5 minutes and 1 day.
   */
  windowSize?: string;
  /**
   * the time aggregation operator. How the data that are collected should be combined over time.
   * The default value is the PrimaryAggregationType of the Metric. Possible values include:
   * 'Average', 'Minimum', 'Maximum', 'Total', 'Last'
   */
  timeAggregation?: TimeAggregationOperator;
}

/**
 * A rule condition based on a certain number of locations failing.
 */
export interface LocationThresholdRuleCondition {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition";
  /**
   * the resource from which the rule collects its data. For this type dataSource will always be of
   * type RuleMetricDataSource.
   */
  dataSource?: RuleDataSourceUnion;
  /**
   * the period of time (in ISO 8601 duration format) that is used to monitor alert activity based
   * on the threshold. If specified then it must be between 5 minutes and 1 day.
   */
  windowSize?: string;
  /**
   * the number of locations that must fail to activate the alert.
   */
  failedLocationCount: number;
}

/**
 * How the data that is collected should be combined over time.
 */
export interface ManagementEventAggregationCondition {
  /**
   * the condition operator. Possible values include: 'GreaterThan', 'GreaterThanOrEqual',
   * 'LessThan', 'LessThanOrEqual'
   */
  operator?: ConditionOperator;
  /**
   * The threshold value that activates the alert.
   */
  threshold?: number;
  /**
   * the period of time (in ISO 8601 duration format) that is used to monitor alert activity based
   * on the threshold. If specified then it must be between 5 minutes and 1 day.
   */
  windowSize?: string;
}

/**
 * A management event rule condition.
 */
export interface ManagementEventRuleCondition {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition";
  /**
   * the resource from which the rule collects its data. For this type dataSource will always be of
   * type RuleMetricDataSource.
   */
  dataSource?: RuleDataSourceUnion;
  /**
   * How the data that is collected should be combined over time and when the alert is activated.
   * Note that for management event alerts aggregation is optional – if it is not provided then any
   * event will cause the alert to activate.
   */
  aggregation?: ManagementEventAggregationCondition;
}

/**
 * Contains the possible cases for RuleAction.
 */
export type RuleActionUnion = RuleAction | RuleEmailAction | RuleWebhookAction;

/**
 * The action that is performed when the alert rule becomes active, and when an alert condition is
 * resolved.
 */
export interface RuleAction {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "RuleAction";
}

/**
 * Specifies the action to send email when the rule condition is evaluated. The discriminator is
 * always RuleEmailAction in this case.
 */
export interface RuleEmailAction {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.RuleEmailAction";
  /**
   * Whether the administrators (service and co-administrators) of the service should be notified
   * when the alert is activated.
   */
  sendToServiceOwners?: boolean;
  /**
   * the list of administrator's custom email addresses to notify of the activation of the alert.
   */
  customEmails?: string[];
}

/**
 * Specifies the action to post to service when the rule condition is evaluated. The discriminator
 * is always RuleWebhookAction in this case.
 */
export interface RuleWebhookAction {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.RuleWebhookAction";
  /**
   * the service uri to Post the notification when the alert activates or resolves.
   */
  serviceUri?: string;
  /**
   * the dictionary of custom properties to include with the post operation. These data are
   * appended to the webhook payload.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * The alert rule resource.
 */
export interface AlertRuleResource extends Resource {
  /**
   * the name of the alert rule.
   */
  alertRuleResourceName: string;
  /**
   * the description of the alert rule that will be included in the alert email.
   */
  description?: string;
  /**
   * the provisioning state.
   */
  provisioningState?: string;
  /**
   * the flag that indicates whether the alert rule is enabled.
   */
  isEnabled: boolean;
  /**
   * the condition that results in the alert rule being activated.
   */
  condition: RuleConditionUnion;
  /**
   * action that is performed when the alert rule becomes active, and when an alert condition is
   * resolved.
   */
  action?: RuleActionUnion;
  /**
   * the array of actions that are performed when the alert rule becomes active, and when an alert
   * condition is resolved.
   */
  actions?: RuleActionUnion[];
  /**
   * Last time the rule was updated in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTime?: Date;
}

/**
 * The alert rule object for patch operations.
 */
export interface AlertRuleResourcePatch {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * the name of the alert rule.
   */
  name: string;
  /**
   * the description of the alert rule that will be included in the alert email.
   */
  description?: string;
  /**
   * the provisioning state.
   */
  provisioningState?: string;
  /**
   * the flag that indicates whether the alert rule is enabled.
   */
  isEnabled: boolean;
  /**
   * the condition that results in the alert rule being activated.
   */
  condition: RuleConditionUnion;
  /**
   * action that is performed when the alert rule becomes active, and when an alert condition is
   * resolved.
   */
  action?: RuleActionUnion;
  /**
   * the array of actions that are performed when the alert rule becomes active, and when an alert
   * condition is resolved.
   */
  actions?: RuleActionUnion[];
  /**
   * Last time the rule was updated in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTime?: Date;
}

/**
 * Specifies the retention policy for the log.
 */
export interface RetentionPolicy {
  /**
   * a value indicating whether the retention policy is enabled.
   */
  enabled: boolean;
  /**
   * the number of days for the retention in days. A value of 0 will retain the events
   * indefinitely.
   */
  days: number;
}

/**
 * The log profile resource.
 */
export interface LogProfileResource extends Resource {
  /**
   * the resource id of the storage account to which you would like to send the Activity Log.
   */
  storageAccountId?: string;
  /**
   * The service bus rule ID of the service bus namespace in which you would like to have Event
   * Hubs created for streaming the Activity Log. The rule ID is of the format: '{service bus
   * resource ID}/authorizationrules/{key name}'.
   */
  serviceBusRuleId?: string;
  /**
   * List of regions for which Activity Log events should be stored or streamed. It is a comma
   * separated list of valid ARM locations including the 'global' location.
   */
  locations: string[];
  /**
   * the categories of the logs. These categories are created as is convenient to the user. Some
   * values are: 'Write', 'Delete', and/or 'Action.'
   */
  categories: string[];
  /**
   * the retention policy for the events in the log.
   */
  retentionPolicy: RetentionPolicy;
}

/**
 * The log profile resource for patch operations.
 */
export interface LogProfileResourcePatch {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * the resource id of the storage account to which you would like to send the Activity Log.
   */
  storageAccountId?: string;
  /**
   * The service bus rule ID of the service bus namespace in which you would like to have Event
   * Hubs created for streaming the Activity Log. The rule ID is of the format: '{service bus
   * resource ID}/authorizationrules/{key name}'.
   */
  serviceBusRuleId?: string;
  /**
   * List of regions for which Activity Log events should be stored or streamed. It is a comma
   * separated list of valid ARM locations including the 'global' location.
   */
  locations: string[];
  /**
   * the categories of the logs. These categories are created as is convenient to the user. Some
   * values are: 'Write', 'Delete', and/or 'Action.'
   */
  categories: string[];
  /**
   * the retention policy for the events in the log.
   */
  retentionPolicy: RetentionPolicy;
}

/**
 * A proxy only azure resource object
 */
export interface ProxyOnlyResource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular metric.
 */
export interface MetricSettings {
  /**
   * the timegrain of the metric in ISO8601 format.
   */
  timeGrain?: string;
  /**
   * Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain
   * the list of Diagnostic metric categories for a resource, first perform a GET diagnostic
   * settings operation.
   */
  category?: string;
  /**
   * a value indicating whether this category is enabled.
   */
  enabled: boolean;
  /**
   * the retention policy for this category.
   */
  retentionPolicy?: RetentionPolicy;
}

/**
 * Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular log.
 */
export interface LogSettings {
  /**
   * Name of a Diagnostic Log category for a resource type this setting is applied to. To obtain
   * the list of Diagnostic Log categories for a resource, first perform a GET diagnostic settings
   * operation.
   */
  category?: string;
  /**
   * a value indicating whether this log is enabled.
   */
  enabled: boolean;
  /**
   * the retention policy for this log.
   */
  retentionPolicy?: RetentionPolicy;
}

/**
 * The diagnostic setting resource.
 */
export interface DiagnosticSettingsResource extends ProxyOnlyResource {
  /**
   * The resource ID of the storage account to which you would like to send Diagnostic Logs.
   */
  storageAccountId?: string;
  /**
   * The service bus rule Id of the diagnostic setting. This is here to maintain backwards
   * compatibility.
   */
  serviceBusRuleId?: string;
  /**
   * The resource Id for the event hub authorization rule.
   */
  eventHubAuthorizationRuleId?: string;
  /**
   * The name of the event hub. If none is specified, the default event hub will be selected.
   */
  eventHubName?: string;
  /**
   * The list of metric settings.
   */
  metrics?: MetricSettings[];
  /**
   * The list of logs settings.
   */
  logs?: LogSettings[];
  /**
   * The full ARM resource ID of the Log Analytics workspace to which you would like to send
   * Diagnostic Logs. Example:
   * /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
   */
  workspaceId?: string;
  /**
   * A string indicating whether the export to Log Analytics should use the default destination
   * type, i.e. AzureDiagnostics, or use a destination type constructed as follows: <normalized
   * service identity>_<normalized category name>. Possible values are: Dedicated and null (null is
   * default.)
   */
  logAnalyticsDestinationType?: string;
}

/**
 * Represents a collection of alert rule resources.
 */
export interface DiagnosticSettingsResourceCollection {
  /**
   * The collection of diagnostic settings resources;.
   */
  value?: DiagnosticSettingsResource[];
}

/**
 * The diagnostic settings category resource.
 */
export interface DiagnosticSettingsCategoryResource extends ProxyOnlyResource {
  /**
   * The type of the diagnostic settings category. Possible values include: 'Metrics', 'Logs'
   */
  categoryType?: CategoryType;
}

/**
 * Represents a collection of diagnostic setting category resources.
 */
export interface DiagnosticSettingsCategoryResourceCollection {
  /**
   * The collection of diagnostic settings category resources.
   */
  value?: DiagnosticSettingsCategoryResource[];
}

/**
 * An azure resource object
 */
export interface AzureResource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Azure resource kind
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Azure resource identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly identity?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An email receiver.
 */
export interface EmailReceiver {
  /**
   * The name of the email receiver. Names must be unique across all receivers within an action
   * group.
   */
  name: string;
  /**
   * The email address of this receiver.
   */
  emailAddress: string;
  /**
   * Indicates whether to use common alert schema. Default value: false.
   */
  useCommonAlertSchema?: boolean;
  /**
   * The receiver status of the e-mail. Possible values include: 'NotSpecified', 'Enabled',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ReceiverStatus;
}

/**
 * An SMS receiver.
 */
export interface SmsReceiver {
  /**
   * The name of the SMS receiver. Names must be unique across all receivers within an action
   * group.
   */
  name: string;
  /**
   * The country code of the SMS receiver.
   */
  countryCode: string;
  /**
   * The phone number of the SMS receiver.
   */
  phoneNumber: string;
  /**
   * The status of the receiver. Possible values include: 'NotSpecified', 'Enabled', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ReceiverStatus;
}

/**
 * A webhook receiver.
 */
export interface WebhookReceiver {
  /**
   * The name of the webhook receiver. Names must be unique across all receivers within an action
   * group.
   */
  name: string;
  /**
   * The URI where webhooks should be sent.
   */
  serviceUri: string;
  /**
   * Indicates whether to use common alert schema. Default value: false.
   */
  useCommonAlertSchema?: boolean;
  /**
   * Indicates whether or not use AAD authentication. Default value: false.
   */
  useAadAuth?: boolean;
  /**
   * Indicates the webhook app object Id for aad auth.
   */
  objectId?: string;
  /**
   * Indicates the identifier uri for aad auth.
   */
  identifierUri?: string;
  /**
   * Indicates the tenant id for aad auth.
   */
  tenantId?: string;
}

/**
 * An Itsm receiver.
 */
export interface ItsmReceiver {
  /**
   * The name of the Itsm receiver. Names must be unique across all receivers within an action
   * group.
   */
  name: string;
  /**
   * OMS LA instance identifier.
   */
  workspaceId: string;
  /**
   * Unique identification of ITSM connection among multiple defined in above workspace.
   */
  connectionId: string;
  /**
   * JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be
   * part of this blob as well.
   */
  ticketConfiguration: string;
  /**
   * Region in which workspace resides. Supported
   * values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
   */
  region: string;
}

/**
 * The Azure mobile App push notification receiver.
 */
export interface AzureAppPushReceiver {
  /**
   * The name of the Azure mobile app push receiver. Names must be unique across all receivers
   * within an action group.
   */
  name: string;
  /**
   * The email address registered for the Azure mobile app.
   */
  emailAddress: string;
}

/**
 * The Azure Automation Runbook notification receiver.
 */
export interface AutomationRunbookReceiver {
  /**
   * The Azure automation account Id which holds this runbook and authenticate to Azure resource.
   */
  automationAccountId: string;
  /**
   * The name for this runbook.
   */
  runbookName: string;
  /**
   * The resource id for webhook linked to this runbook.
   */
  webhookResourceId: string;
  /**
   * Indicates whether this instance is global runbook.
   */
  isGlobalRunbook: boolean;
  /**
   * Indicates name of the webhook.
   */
  name?: string;
  /**
   * The URI where webhooks should be sent.
   */
  serviceUri?: string;
  /**
   * Indicates whether to use common alert schema. Default value: false.
   */
  useCommonAlertSchema?: boolean;
}

/**
 * A voice receiver.
 */
export interface VoiceReceiver {
  /**
   * The name of the voice receiver. Names must be unique across all receivers within an action
   * group.
   */
  name: string;
  /**
   * The country code of the voice receiver.
   */
  countryCode: string;
  /**
   * The phone number of the voice receiver.
   */
  phoneNumber: string;
}

/**
 * A logic app receiver.
 */
export interface LogicAppReceiver {
  /**
   * The name of the logic app receiver. Names must be unique across all receivers within an action
   * group.
   */
  name: string;
  /**
   * The azure resource id of the logic app receiver.
   */
  resourceId: string;
  /**
   * The callback url where http request sent to.
   */
  callbackUrl: string;
  /**
   * Indicates whether to use common alert schema. Default value: false.
   */
  useCommonAlertSchema?: boolean;
}

/**
 * An azure function receiver.
 */
export interface AzureFunctionReceiver {
  /**
   * The name of the azure function receiver. Names must be unique across all receivers within an
   * action group.
   */
  name: string;
  /**
   * The azure resource id of the function app.
   */
  functionAppResourceId: string;
  /**
   * The function name in the function app.
   */
  functionName: string;
  /**
   * The http trigger url where http request sent to.
   */
  httpTriggerUrl: string;
  /**
   * Indicates whether to use common alert schema. Default value: false.
   */
  useCommonAlertSchema?: boolean;
}

/**
 * An arm role receiver.
 */
export interface ArmRoleReceiver {
  /**
   * The name of the arm role receiver. Names must be unique across all receivers within an action
   * group.
   */
  name: string;
  /**
   * The arm role id.
   */
  roleId: string;
  /**
   * Indicates whether to use common alert schema. Default value: false.
   */
  useCommonAlertSchema?: boolean;
}

/**
 * An action group resource.
 */
export interface ActionGroupResource extends AzureResource {
  /**
   * The short name of the action group. This will be used in SMS messages.
   */
  groupShortName: string;
  /**
   * Indicates whether this action group is enabled. If an action group is not enabled, then none
   * of its receivers will receive communications. Default value: true.
   */
  enabled: boolean;
  /**
   * The list of email receivers that are part of this action group.
   */
  emailReceivers?: EmailReceiver[];
  /**
   * The list of SMS receivers that are part of this action group.
   */
  smsReceivers?: SmsReceiver[];
  /**
   * The list of webhook receivers that are part of this action group.
   */
  webhookReceivers?: WebhookReceiver[];
  /**
   * The list of ITSM receivers that are part of this action group.
   */
  itsmReceivers?: ItsmReceiver[];
  /**
   * The list of AzureAppPush receivers that are part of this action group.
   */
  azureAppPushReceivers?: AzureAppPushReceiver[];
  /**
   * The list of AutomationRunbook receivers that are part of this action group.
   */
  automationRunbookReceivers?: AutomationRunbookReceiver[];
  /**
   * The list of voice receivers that are part of this action group.
   */
  voiceReceivers?: VoiceReceiver[];
  /**
   * The list of logic app receivers that are part of this action group.
   */
  logicAppReceivers?: LogicAppReceiver[];
  /**
   * The list of azure function receivers that are part of this action group.
   */
  azureFunctionReceivers?: AzureFunctionReceiver[];
  /**
   * The list of ARM role receivers that are part of this action group. Roles are Azure RBAC roles
   * and only built-in roles are supported.
   */
  armRoleReceivers?: ArmRoleReceiver[];
}

/**
 * Describes a receiver that should be resubscribed.
 */
export interface EnableRequest {
  /**
   * The name of the receiver to resubscribe.
   */
  receiverName: string;
}

/**
 * An action group object for the body of patch operations.
 */
export interface ActionGroupPatchBody {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * Indicates whether this action group is enabled. If an action group is not enabled, then none
   * of its actions will be activated. Default value: true.
   */
  enabled?: boolean;
}

/**
 * The localizable string class.
 */
export interface LocalizableString {
  /**
   * the invariant value.
   */
  value: string;
  /**
   * the locale specific value.
   */
  localizedValue?: string;
}

/**
 * the authorization used by the user who has performed the operation that led to this event. This
 * captures the RBAC properties of the event. These usually include the 'action', 'role' and the
 * 'scope'
 */
export interface SenderAuthorization {
  /**
   * the permissible actions. For instance: microsoft.support/supporttickets/write
   */
  action?: string;
  /**
   * the role of the user. For instance: Subscription Admin
   */
  role?: string;
  /**
   * the scope.
   */
  scope?: string;
}

/**
 * The Http request info.
 */
export interface HttpRequestInfo {
  /**
   * the client request id.
   */
  clientRequestId?: string;
  /**
   * the client Ip Address
   */
  clientIpAddress?: string;
  /**
   * the Http request method.
   */
  method?: string;
  /**
   * the Uri.
   */
  uri?: string;
}

/**
 * The Azure event log entries are of type EventData
 */
export interface EventData {
  /**
   * The sender authorization information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly authorization?: SenderAuthorization;
  /**
   * key value pairs to identify ARM permissions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly claims?: { [propertyName: string]: string };
  /**
   * the email address of the user who has performed the operation, the UPN claim or SPN claim
   * based on availability.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly caller?: string;
  /**
   * the description of the event.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * the Id of this event as required by ARM for RBAC. It contains the EventDataID and a timestamp
   * information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * the event data Id. This is a unique identifier for an event.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly eventDataId?: string;
  /**
   * the correlation Id, usually a GUID in the string format. The correlation Id is shared among
   * the events that belong to the same uber operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly correlationId?: string;
  /**
   * the event name. This value should not be confused with OperationName. For practical purposes,
   * OperationName might be more appealing to end users.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly eventName?: LocalizableString;
  /**
   * the event category.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly category?: LocalizableString;
  /**
   * the HTTP request info. Usually includes the 'clientRequestId', 'clientIpAddress' (IP address
   * of the user who initiated the event) and 'method' (HTTP method e.g. PUT).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly httpRequest?: HttpRequestInfo;
  /**
   * the event level. Possible values include: 'Critical', 'Error', 'Warning', 'Informational',
   * 'Verbose'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly level?: EventLevel;
  /**
   * the resource group name of the impacted resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceGroupName?: string;
  /**
   * the resource provider name of the impacted resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceProviderName?: LocalizableString;
  /**
   * the resource uri that uniquely identifies the resource that caused this event.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceId?: string;
  /**
   * the resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: LocalizableString;
  /**
   * It is usually a GUID shared among the events corresponding to single operation. This value
   * should not be confused with EventName.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationId?: string;
  /**
   * the operation name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationName?: LocalizableString;
  /**
   * the set of <Key, Value> pairs (usually a Dictionary<String, String>) that includes details
   * about the event.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: { [propertyName: string]: string };
  /**
   * a string describing the status of the operation. Some typical values are: Started, In
   * progress, Succeeded, Failed, Resolved.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: LocalizableString;
  /**
   * the event sub status. Most of the time, when included, this captures the HTTP status code of
   * the REST call. Common values are: OK (HTTP Status Code: 200), Created (HTTP Status Code: 201),
   * Accepted (HTTP Status Code: 202), No Content (HTTP Status Code: 204), Bad Request(HTTP Status
   * Code: 400), Not Found (HTTP Status Code: 404), Conflict (HTTP Status Code: 409), Internal
   * Server Error (HTTP Status Code: 500), Service Unavailable (HTTP Status Code:503), Gateway
   * Timeout (HTTP Status Code: 504)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subStatus?: LocalizableString;
  /**
   * the timestamp of when the event was generated by the Azure service processing the request
   * corresponding the event. It in ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly eventTimestamp?: Date;
  /**
   * the timestamp of when the event became available for querying via this API. It is in ISO 8601
   * format. This value should not be confused eventTimestamp. As there might be a delay between
   * the occurrence time of the event, and the time that the event is submitted to the Azure
   * logging infrastructure.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly submissionTimestamp?: Date;
  /**
   * the Azure subscription Id usually a GUID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * the Azure tenant Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * Metric availability specifies the time grain (aggregation interval or frequency) and the
 * retention period for that time grain.
 */
export interface MetricAvailability {
  /**
   * the time grain specifies the aggregation interval for the metric. Expressed as a duration
   * 'PT1M', 'P1D', etc.
   */
  timeGrain?: string;
  /**
   * the retention period for the metric at the specified timegrain.  Expressed as a duration
   * 'PT1M', 'P1D', etc.
   */
  retention?: string;
}

/**
 * Metric definition class specifies the metadata for a metric.
 */
export interface MetricDefinition {
  /**
   * Flag to indicate whether the dimension is required.
   */
  isDimensionRequired?: boolean;
  /**
   * the resource identifier of the resource that emitted the metric.
   */
  resourceId?: string;
  /**
   * the namespace the metric belongs to.
   */
  namespace?: string;
  /**
   * the name and the display name of the metric, i.e. it is a localizable string.
   */
  name?: LocalizableString;
  /**
   * Detailed description of this metric.
   */
  displayDescription?: string;
  /**
   * Custom category name for this metric.
   */
  category?: string;
  /**
   * The class of the metric. Possible values include: 'Availability', 'Transactions', 'Errors',
   * 'Latency', 'Saturation'
   */
  metricClass?: MetricClass;
  /**
   * The unit of the metric. Possible values include: 'Count', 'Bytes', 'Seconds',
   * 'CountPerSecond', 'BytesPerSecond', 'Percent', 'MilliSeconds', 'ByteSeconds', 'Unspecified',
   * 'Cores', 'MilliCores', 'NanoCores', 'BitsPerSecond'
   */
  unit?: MetricUnit;
  /**
   * the primary aggregation type value defining how to use the values for display. Possible values
   * include: 'None', 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
   */
  primaryAggregationType?: AggregationType;
  /**
   * the collection of what aggregation types are supported.
   */
  supportedAggregationTypes?: AggregationType[];
  /**
   * the collection of what aggregation intervals are available to be queried.
   */
  metricAvailabilities?: MetricAvailability[];
  /**
   * the resource identifier of the metric definition.
   */
  id?: string;
  /**
   * the name and the display name of the dimension, i.e. it is a localizable string.
   */
  dimensions?: LocalizableString[];
}

/**
 * Represents a metric value.
 */
export interface MetricValue {
  /**
   * the timestamp for the metric value in ISO 8601 format.
   */
  timeStamp: Date;
  /**
   * the average value in the time range.
   */
  average?: number;
  /**
   * the least value in the time range.
   */
  minimum?: number;
  /**
   * the greatest value in the time range.
   */
  maximum?: number;
  /**
   * the sum of all of the values in the time range.
   */
  total?: number;
  /**
   * the number of samples in the time range. Can be used to determine the number of values that
   * contributed to the average value.
   */
  count?: number;
}

/**
 * Represents a metric metadata value.
 */
export interface MetadataValue {
  /**
   * the name of the metadata.
   */
  name?: LocalizableString;
  /**
   * the value of the metadata.
   */
  value?: string;
}

/**
 * A time series result type. The discriminator value is always TimeSeries in this case.
 */
export interface TimeSeriesElement {
  /**
   * the metadata values returned if $filter was specified in the call.
   */
  metadatavalues?: MetadataValue[];
  /**
   * An array of data points representing the metric values.  This is only returned if a result
   * type of data is specified.
   */
  data?: MetricValue[];
}

/**
 * The result data of a query.
 */
export interface Metric {
  /**
   * the metric Id.
   */
  id: string;
  /**
   * the resource type of the metric resource.
   */
  type: string;
  /**
   * the name and the display name of the metric, i.e. it is localizable string.
   */
  name: LocalizableString;
  /**
   * Detailed description of this metric.
   */
  displayDescription?: string;
  /**
   * 'Success' or the error details on query failures for this metric.
   */
  errorCode?: string;
  /**
   * Error message encountered querying this specific metric.
   */
  errorMessage?: string;
  /**
   * The unit of the metric. Possible values include: 'Count', 'Bytes', 'Seconds',
   * 'CountPerSecond', 'BytesPerSecond', 'Percent', 'MilliSeconds', 'ByteSeconds', 'Unspecified',
   * 'Cores', 'MilliCores', 'NanoCores', 'BitsPerSecond'
   */
  unit: MetricUnit;
  /**
   * the time series returned when a data query is performed.
   */
  timeseries: TimeSeriesElement[];
}

/**
 * The response to a metrics query.
 */
export interface Response {
  /**
   * The integer value representing the relative cost of the query.
   */
  cost?: number;
  /**
   * The timespan for which the data was retrieved. Its value consists of two datetimes
   * concatenated, separated by '/'.  This may be adjusted in the future and returned back from
   * what was originally requested.
   */
  timespan: string;
  /**
   * The interval (window size) for which the metric data was returned in.  This may be adjusted in
   * the future and returned back from what was originally requested.  This is not present if a
   * metadata request was made.
   */
  interval?: string;
  /**
   * The namespace of the metrics being queried
   */
  namespace?: string;
  /**
   * The region of the resource being queried for metrics.
   */
  resourceregion?: string;
  /**
   * the value of the collection.
   */
  value: Metric[];
}

/**
 * The metric dimension name and value.
 */
export interface MetricSingleDimension {
  /**
   * Name of the dimension.
   */
  name: string;
  /**
   * Value of the dimension.
   */
  value: string;
}

/**
 * The baseline values for a single sensitivity value.
 */
export interface SingleBaseline {
  /**
   * the sensitivity of the baseline. Possible values include: 'Low', 'Medium', 'High'
   */
  sensitivity: BaselineSensitivity;
  /**
   * The low thresholds of the baseline.
   */
  lowThresholds: number[];
  /**
   * The high thresholds of the baseline.
   */
  highThresholds: number[];
}

/**
 * Represents a baseline metadata value.
 */
export interface BaselineMetadata {
  /**
   * Name of the baseline metadata.
   */
  name: string;
  /**
   * Value of the baseline metadata.
   */
  value: string;
}

/**
 * The baseline values for a single time series.
 */
export interface TimeSeriesBaseline {
  /**
   * The aggregation type of the metric.
   */
  aggregation: string;
  /**
   * The dimensions of this time series.
   */
  dimensions?: MetricSingleDimension[];
  /**
   * The list of timestamps of the baselines.
   */
  timestamps: Date[] | string[];
  /**
   * The baseline values for each sensitivity.
   */
  data: SingleBaseline[];
  /**
   * The baseline metadata values.
   */
  metadataValues?: BaselineMetadata[];
}

/**
 * The baseline results of a single metric.
 */
export interface SingleMetricBaseline {
  /**
   * The metric baseline Id.
   */
  id: string;
  /**
   * The resource type of the metric baseline resource.
   */
  type: string;
  /**
   * The name of the metric for which the baselines were retrieved.
   */
  name: string;
  /**
   * The timespan for which the data was retrieved. Its value consists of two datetimes
   * concatenated, separated by '/'.  This may be adjusted in the future and returned back from
   * what was originally requested.
   */
  timespan: string;
  /**
   * The interval (window size) for which the metric data was returned in.  This may be adjusted in
   * the future and returned back from what was originally requested.  This is not present if a
   * metadata request was made.
   */
  interval: string;
  /**
   * The namespace of the metrics been queried.
   */
  namespace?: string;
  /**
   * The baseline for each time series that was queried.
   */
  baselines: TimeSeriesBaseline[];
}

/**
 * An alert action.
 */
export interface MetricAlertAction {
  /**
   * the id of the action group to use.
   */
  actionGroupId?: string;
  /**
   * This field allows specifying custom properties, which would be appended to the alert payload
   * sent as input to the webhook.
   */
  webHookProperties?: { [propertyName: string]: string };
}

/**
 * Contains the possible cases for MetricAlertCriteria.
 */
export type MetricAlertCriteriaUnion = MetricAlertCriteria | MetricAlertSingleResourceMultipleMetricCriteria | WebtestLocationAvailabilityCriteria | MetricAlertMultipleResourceMultipleMetricCriteria;

/**
 * The rule criteria that defines the conditions of the alert rule.
 */
export interface MetricAlertCriteria {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "MetricAlertCriteria";
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * The metric alert resource.
 */
export interface MetricAlertResource extends Resource {
  /**
   * the description of the metric alert that will be included in the alert email.
   */
  description?: string;
  /**
   * Alert severity {0, 1, 2, 3, 4}
   */
  severity: number;
  /**
   * the flag that indicates whether the metric alert is enabled.
   */
  enabled: boolean;
  /**
   * the list of resource id's that this metric alert is scoped to.
   */
  scopes: string[];
  /**
   * how often the metric alert is evaluated represented in ISO 8601 duration format.
   */
  evaluationFrequency: string;
  /**
   * the period of time (in ISO 8601 duration format) that is used to monitor alert activity based
   * on the threshold.
   */
  windowSize: string;
  /**
   * the resource type of the target resource(s) on which the alert is created/updated. Mandatory
   * if the scope contains a subscription, resource group, or more than one resource.
   */
  targetResourceType?: string;
  /**
   * the region of the target resource(s) on which the alert is created/updated. Mandatory if the
   * scope contains a subscription, resource group, or more than one resource.
   */
  targetResourceRegion?: string;
  /**
   * defines the specific alert criteria information.
   */
  criteria: MetricAlertCriteriaUnion;
  /**
   * the flag that indicates whether the alert should be auto resolved or not. The default is true.
   */
  autoMitigate?: boolean;
  /**
   * the array of actions that are performed when the alert rule becomes active, and when an alert
   * condition is resolved.
   */
  actions?: MetricAlertAction[];
  /**
   * Last time the rule was updated in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTime?: Date;
  /**
   * the value indicating whether this alert rule is migrated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isMigrated?: boolean;
}

/**
 * The metric alert resource for patch operations.
 */
export interface MetricAlertResourcePatch {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * the description of the metric alert that will be included in the alert email.
   */
  description?: string;
  /**
   * Alert severity {0, 1, 2, 3, 4}
   */
  severity?: number;
  /**
   * the flag that indicates whether the metric alert is enabled.
   */
  enabled?: boolean;
  /**
   * the list of resource id's that this metric alert is scoped to.
   */
  scopes?: string[];
  /**
   * how often the metric alert is evaluated represented in ISO 8601 duration format.
   */
  evaluationFrequency?: string;
  /**
   * the period of time (in ISO 8601 duration format) that is used to monitor alert activity based
   * on the threshold.
   */
  windowSize?: string;
  /**
   * the resource type of the target resource(s) on which the alert is created/updated. Mandatory
   * for MultipleResourceMultipleMetricCriteria.
   */
  targetResourceType?: string;
  /**
   * the region of the target resource(s) on which the alert is created/updated. Mandatory for
   * MultipleResourceMultipleMetricCriteria.
   */
  targetResourceRegion?: string;
  /**
   * defines the specific alert criteria information.
   */
  criteria?: MetricAlertCriteriaUnion;
  /**
   * the flag that indicates whether the alert should be auto resolved or not. The default is true.
   */
  autoMitigate?: boolean;
  /**
   * the array of actions that are performed when the alert rule becomes active, and when an alert
   * condition is resolved.
   */
  actions?: MetricAlertAction[];
  /**
   * Last time the rule was updated in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTime?: Date;
  /**
   * the value indicating whether this alert rule is migrated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isMigrated?: boolean;
}

/**
 * An alert status properties.
 */
export interface MetricAlertStatusProperties {
  /**
   * An object describing the type of the dimensions.
   */
  dimensions?: { [propertyName: string]: string };
  /**
   * status value
   */
  status?: string;
  /**
   * UTC time when the status was checked.
   */
  timestamp?: Date;
}

/**
 * An alert status.
 */
export interface MetricAlertStatus {
  /**
   * The status name.
   */
  name?: string;
  /**
   * The alert rule arm id.
   */
  id?: string;
  /**
   * The extended resource type name.
   */
  type?: string;
  /**
   * The alert status properties of the metric alert status.
   */
  properties?: MetricAlertStatusProperties;
}

/**
 * Represents a collection of alert rule resources.
 */
export interface MetricAlertStatusCollection {
  /**
   * the values for the alert rule resources.
   */
  value?: MetricAlertStatus[];
}

/**
 * Contains the possible cases for MultiMetricCriteria.
 */
export type MultiMetricCriteriaUnion = MultiMetricCriteria | MetricCriteria | DynamicMetricCriteria;

/**
 * The types of conditions for a multi resource alert.
 */
export interface MultiMetricCriteria {
  /**
   * Polymorphic Discriminator
   */
  criterionType: "MultiMetricCriteria";
  /**
   * Name of the criteria.
   */
  name: string;
  /**
   * Name of the metric.
   */
  metricName: string;
  /**
   * Namespace of the metric.
   */
  metricNamespace?: string;
  /**
   * the criteria time aggregation types. Possible values include: 'Average', 'Count', 'Minimum',
   * 'Maximum', 'Total'
   */
  timeAggregation: AggregationTypeEnum;
  /**
   * List of dimension conditions.
   */
  dimensions?: MetricDimension[];
  /**
   * Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric
   * validation to be skipped.
   */
  skipMetricValidation?: boolean;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Criterion to filter metrics.
 */
export interface MetricCriteria {
  /**
   * Polymorphic Discriminator
   */
  criterionType: "StaticThresholdCriterion";
  /**
   * Name of the criteria.
   */
  name: string;
  /**
   * Name of the metric.
   */
  metricName: string;
  /**
   * Namespace of the metric.
   */
  metricNamespace?: string;
  /**
   * the criteria time aggregation types. Possible values include: 'Average', 'Count', 'Minimum',
   * 'Maximum', 'Total'
   */
  timeAggregation: AggregationTypeEnum;
  /**
   * List of dimension conditions.
   */
  dimensions?: MetricDimension[];
  /**
   * Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric
   * validation to be skipped.
   */
  skipMetricValidation?: boolean;
  /**
   * the criteria operator. Possible values include: 'Equals', 'NotEquals', 'GreaterThan',
   * 'GreaterThanOrEqual', 'LessThan', 'LessThanOrEqual'
   */
  operator: Operator;
  /**
   * the criteria threshold value that activates the alert.
   */
  threshold: number;
}

/**
 * Specifies the metric alert criteria for a single resource that has multiple metric criteria.
 */
export interface MetricAlertSingleResourceMultipleMetricCriteria {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria";
  /**
   * The list of metric criteria for this 'all of' operation.
   */
  allOf?: MetricCriteria[];
}

/**
 * Specifies the metric alert rule criteria for a web test resource.
 */
export interface WebtestLocationAvailabilityCriteria {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria";
  /**
   * The Application Insights web test Id.
   */
  webTestId: string;
  /**
   * The Application Insights resource Id.
   */
  componentId: string;
  /**
   * The number of failed locations.
   */
  failedLocationCount: number;
}

/**
 * Specifies a metric dimension.
 */
export interface MetricDimension {
  /**
   * Name of the dimension.
   */
  name: string;
  /**
   * the dimension operator. Only 'Include' and 'Exclude' are supported
   */
  operator: string;
  /**
   * list of dimension values.
   */
  values: string[];
}

/**
 * Specifies the metric alert criteria for multiple resource that has multiple metric criteria.
 */
export interface MetricAlertMultipleResourceMultipleMetricCriteria {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria";
  /**
   * the list of multiple metric criteria for this 'all of' operation.
   */
  allOf?: MultiMetricCriteriaUnion[];
}

/**
 * The minimum number of violations required within the selected lookback time window required to
 * raise an alert.
 */
export interface DynamicThresholdFailingPeriods {
  /**
   * The number of aggregated lookback points. The lookback time window is calculated based on the
   * aggregation granularity (windowSize) and the selected number of aggregated points.
   */
  numberOfEvaluationPeriods: number;
  /**
   * The number of violations to trigger an alert. Should be smaller or equal to
   * numberOfEvaluationPeriods.
   */
  minFailingPeriodsToAlert: number;
}

/**
 * Criterion for dynamic threshold.
 */
export interface DynamicMetricCriteria {
  /**
   * Polymorphic Discriminator
   */
  criterionType: "DynamicThresholdCriterion";
  /**
   * Name of the criteria.
   */
  name: string;
  /**
   * Name of the metric.
   */
  metricName: string;
  /**
   * Namespace of the metric.
   */
  metricNamespace?: string;
  /**
   * the criteria time aggregation types. Possible values include: 'Average', 'Count', 'Minimum',
   * 'Maximum', 'Total'
   */
  timeAggregation: AggregationTypeEnum;
  /**
   * List of dimension conditions.
   */
  dimensions?: MetricDimension[];
  /**
   * Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric
   * validation to be skipped.
   */
  skipMetricValidation?: boolean;
  /**
   * The operator used to compare the metric value against the threshold. Possible values include:
   * 'GreaterThan', 'LessThan', 'GreaterOrLessThan'
   */
  operator: DynamicThresholdOperator;
  /**
   * The extent of deviation required to trigger an alert. This will affect how tight the threshold
   * is to the metric series pattern. Possible values include: 'Low', 'Medium', 'High'
   */
  alertSensitivity: DynamicThresholdSensitivity;
  /**
   * The minimum number of violations required within the selected lookback time window required to
   * raise an alert.
   */
  failingPeriods: DynamicThresholdFailingPeriods;
  /**
   * Use this option to set the date from which to start learning the metric historical data and
   * calculate the dynamic thresholds (in ISO8601 format)
   */
  ignoreDataBefore?: Date;
}

/**
 * Specifies the log search query.
 */
export interface Source {
  /**
   * Log search query. Required for action type - AlertingAction
   */
  query?: string;
  /**
   * List of  Resource referred into query
   */
  authorizedResources?: string[];
  /**
   * The resource uri over which log search query is to be run.
   */
  dataSourceId: string;
  /**
   * Set value to 'ResultCount'. Possible values include: 'ResultCount'
   */
  queryType?: QueryType;
}

/**
 * Defines how often to run the search and the time interval.
 */
export interface Schedule {
  /**
   * frequency (in minutes) at which rule condition should be evaluated.
   */
  frequencyInMinutes: number;
  /**
   * Time window for which data needs to be fetched for query (should be greater than or equal to
   * frequencyInMinutes).
   */
  timeWindowInMinutes: number;
}

/**
 * Contains the possible cases for Action.
 */
export type ActionUnion = Action | AlertingAction | LogToMetricAction;

/**
 * Action descriptor.
 */
export interface Action {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Action";
}

/**
 * The Log Search Rule resource.
 */
export interface LogSearchRuleResource extends Resource {
  /**
   * The api-version used when creating this alert rule
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdWithApiVersion?: string;
  /**
   * True if alert rule is legacy Log Analytic rule
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isLegacyLogAnalyticsRule?: boolean;
  /**
   * The description of the Log Search rule.
   */
  description?: string;
  /**
   * The display name of the alert rule
   */
  displayName?: string;
  /**
   * The flag that indicates whether the alert should be automatically resolved or not. The default
   * is false. Default value: false.
   */
  autoMitigate?: boolean;
  /**
   * The flag which indicates whether the Log Search rule is enabled. Value should be true or
   * false. Possible values include: 'true', 'false'
   */
  enabled?: Enabled;
  /**
   * Last time the rule was updated in IS08601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedTime?: Date;
  /**
   * Provisioning state of the scheduled query rule. Possible values include: 'Succeeded',
   * 'Deploying', 'Canceled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Data Source against which rule will Query Data
   */
  source: Source;
  /**
   * Schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction
   */
  schedule?: Schedule;
  /**
   * Action needs to be taken on rule execution.
   */
  action: ActionUnion;
}

/**
 * The log search rule resource for patch operations.
 */
export interface LogSearchRuleResourcePatch {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * The flag which indicates whether the Log Search rule is enabled. Value should be true or
   * false. Possible values include: 'true', 'false'
   */
  enabled?: Enabled;
}

/**
 * A log metrics trigger descriptor.
 */
export interface LogMetricTrigger {
  /**
   * Evaluation operation for Metric -'GreaterThan' or 'LessThan' or 'Equal'. Possible values
   * include: 'GreaterThanOrEqual', 'LessThanOrEqual', 'GreaterThan', 'LessThan', 'Equal'. Default
   * value: 'GreaterThanOrEqual'.
   */
  thresholdOperator?: ConditionalOperator;
  /**
   * The threshold of the metric trigger.
   */
  threshold?: number;
  /**
   * Metric Trigger Type - 'Consecutive' or 'Total'. Possible values include: 'Consecutive',
   * 'Total'. Default value: 'Consecutive'.
   */
  metricTriggerType?: MetricTriggerType;
  /**
   * Evaluation of metric on a particular column
   */
  metricColumn?: string;
}

/**
 * The condition that results in the Log Search rule.
 */
export interface TriggerCondition {
  /**
   * Evaluation operation for rule - 'GreaterThan' or 'LessThan. Possible values include:
   * 'GreaterThanOrEqual', 'LessThanOrEqual', 'GreaterThan', 'LessThan', 'Equal'. Default value:
   * 'GreaterThanOrEqual'.
   */
  thresholdOperator: ConditionalOperator;
  /**
   * Result or count threshold based on which rule should be triggered.
   */
  threshold: number;
  /**
   * Trigger condition for metric query rule
   */
  metricTrigger?: LogMetricTrigger;
}

/**
 * Azure action group
 */
export interface AzNsActionGroup {
  /**
   * Azure Action Group reference.
   */
  actionGroup?: string[];
  /**
   * Custom subject override for all email ids in Azure action group
   */
  emailSubject?: string;
  /**
   * Custom payload to be sent for all webhook URI in Azure action group
   */
  customWebhookPayload?: string;
}

/**
 * Specify action need to be taken when rule type is Alert
 */
export interface AlertingAction {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction";
  /**
   * Severity of the alert. Possible values include: '0', '1', '2', '3', '4'
   */
  severity: AlertSeverity;
  /**
   * Azure action group reference.
   */
  aznsAction?: AzNsActionGroup;
  /**
   * time (in minutes) for which Alerts should be throttled or suppressed.
   */
  throttlingInMin?: number;
  /**
   * The trigger condition that results in the alert rule being.
   */
  trigger: TriggerCondition;
}

/**
 * Specifies the criteria for converting log to metric.
 */
export interface Dimension {
  /**
   * Name of the dimension
   */
  name: string;
  /**
   * List of dimension values
   */
  values: string[];
}

/**
 * Specifies the criteria for converting log to metric.
 */
export interface Criteria {
  /**
   * Name of the metric
   */
  metricName: string;
  /**
   * List of Dimensions for creating metric
   */
  dimensions?: Dimension[];
}

/**
 * Specify action need to be taken when rule type is converting log to metric
 */
export interface LogToMetricAction {
  /**
   * Polymorphic Discriminator
   */
  odatatype: "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction";
  /**
   * Criteria of Metric
   */
  criteria: Criteria[];
}

/**
 * Describes the format of Error response.
 */
export interface ErrorContract {
  /**
   * The error details.
   */
  error?: ErrorResponse;
}

/**
 * The fully qualified metric namespace name.
 */
export interface MetricNamespaceName {
  /**
   * The metric namespace name.
   */
  metricNamespaceName?: string;
}

/**
 * Metric namespace class specifies the metadata for a metric namespace.
 */
export interface MetricNamespace {
  /**
   * The ID of the metric namespace.
   */
  id?: string;
  /**
   * The type of the namespace.
   */
  type?: string;
  /**
   * The escaped name of the namespace.
   */
  name?: string;
  /**
   * Kind of namespace. Possible values include: 'Platform', 'Custom', 'Qos'
   */
  classification?: NamespaceClassification;
  /**
   * Properties which include the fully qualified namespace name.
   */
  properties?: MetricNamespaceName;
}

/**
 * An azure resource object
 */
export interface ProxyResource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Error details.
 */
export interface ErrorModel {
  /**
   * Error code identifying the specific error.
   */
  code: string;
  /**
   * Error message in the caller's locale.
   */
  message?: string;
}

/**
 * An error response from the API.
 */
export interface ResponseWithError {
  /**
   * Error information.
   */
  error: ErrorModel;
}

/**
 * Information about a Log Analytics Workspace.
 */
export interface WorkspaceInfo {
  /**
   * Azure Resource Manager identifier of the Log Analytics Workspace.
   */
  id: string;
  /**
   * Location of the Log Analytics workspace.
   */
  location: string;
  /**
   * Log Analytics workspace identifier.
   */
  customerId: string;
}

/**
 * Information about a container with data for a given resource.
 */
export interface DataContainer {
  /**
   * Log Analytics workspace information.
   */
  workspace: WorkspaceInfo;
}

/**
 * VM Insights onboarding status for a resource.
 */
export interface VMInsightsOnboardingStatus extends ProxyResource {
  /**
   * Azure Resource Manager identifier of the resource whose onboarding status is being
   * represented.
   */
  resourceId: string;
  /**
   * The onboarding status for the resource. Note that, a higher level scope, e.g., resource group
   * or subscription, is considered onboarded if at least one resource under it is onboarded.
   * Possible values include: 'onboarded', 'notOnboarded', 'unknown'
   */
  onboardingStatus: OnboardingStatus;
  /**
   * The status of VM Insights data from the resource. When reported as `present` the data array
   * will contain information about the data containers to which data for the specified resource is
   * being routed. Possible values include: 'present', 'notPresent'
   */
  dataStatus: DataStatus;
  /**
   * Containers that currently store VM Insights data for the specified resource.
   */
  data?: DataContainer[];
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The resource management error response.
 */
export interface ErrorResponseCommon extends ErrorResponse {
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponseCommon[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * The status of operation.
 */
export interface OperationStatus {
  /**
   * The operation Id.
   */
  id?: string;
  /**
   * The operation name.
   */
  name?: string;
  /**
   * Start time of the job in standard ISO8601 format.
   */
  startTime?: Date;
  /**
   * End time of the job in standard ISO8601 format.
   */
  endTime?: Date;
  /**
   * The status of the operation.
   */
  status?: string;
  /**
   * The error detail of the operation if any.
   */
  error?: ErrorResponseCommon;
}

/**
 * An azure resource object
 */
export interface PrivateLinkScopesResource extends BaseResource {
  /**
   * Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A container holding only the Tags for a resource, allowing the user to update the tags on a
 * PrivateLinkScope instance.
 */
export interface TagsResource {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Private endpoint which the connection belongs to.
 */
export interface PrivateEndpointProperty {
  /**
   * Resource id of the private endpoint.
   */
  id?: string;
}

/**
 * State of the private endpoint connection.
 */
export interface PrivateLinkServiceConnectionStateProperty {
  /**
   * The private link service connection status.
   */
  status: string;
  /**
   * The private link service connection description.
   */
  description: string;
  /**
   * The actions required for private link service connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionsRequired?: string;
}

/**
 * A private endpoint connection
 */
export interface PrivateEndpointConnection extends ProxyResource {
  /**
   * Private endpoint which the connection belongs to.
   */
  privateEndpoint?: PrivateEndpointProperty;
  /**
   * Connection state of the private endpoint connection.
   */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty;
  /**
   * State of the private endpoint connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * An Azure Monitor PrivateLinkScope definition.
 */
export interface AzureMonitorPrivateLinkScope extends PrivateLinkScopesResource {
  /**
   * Current state of this PrivateLinkScope: whether or not is has been provisioned within the
   * resource group it is defined. Users cannot change this value but are able to read from it.
   * Values will include Provisioning ,Succeeded, Canceled and Failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * List of private endpoint connections.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
}

/**
 * A private link resource
 */
export interface PrivateLinkResource extends ProxyResource {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredMembers?: string[];
}

/**
 * A private link scoped resource
 */
export interface ScopedResource extends ProxyResource {
  /**
   * The resource id of the scoped Azure monitor resource.
   */
  linkedResourceId?: string;
  /**
   * State of the private endpoint connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * An Activity Log alert condition that is met by comparing an activity log field and value.
 */
export interface ActivityLogAlertLeafCondition {
  /**
   * The name of the field that this condition will examine. The possible values for this field are
   * (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName',
   * 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything
   * beginning with 'properties.'.
   */
  field: string;
  /**
   * The field value will be compared to this value (case-insensitive) to determine if the
   * condition is met.
   */
  equals: string;
}

/**
 * An Activity Log alert condition that is met when all its member conditions are met.
 */
export interface ActivityLogAlertAllOfCondition {
  /**
   * The list of activity log alert conditions.
   */
  allOf: ActivityLogAlertLeafCondition[];
}

/**
 * A pointer to an Azure Action Group.
 */
export interface ActivityLogAlertActionGroup {
  /**
   * The resourceId of the action group. This cannot be null or empty.
   */
  actionGroupId: string;
  /**
   * the dictionary of custom properties to include with the post operation. These data are
   * appended to the webhook payload.
   */
  webhookProperties?: { [propertyName: string]: string };
}

/**
 * A list of activity log alert actions.
 */
export interface ActivityLogAlertActionList {
  /**
   * The list of activity log alerts.
   */
  actionGroups?: ActivityLogAlertActionGroup[];
}

/**
 * An activity log alert resource.
 */
export interface ActivityLogAlertResource extends Resource {
  /**
   * A list of resourceIds that will be used as prefixes. The alert will only apply to activityLogs
   * with resourceIds that fall under one of these prefixes. This list must include at least one
   * item.
   */
  scopes: string[];
  /**
   * Indicates whether this activity log alert is enabled. If an activity log alert is not enabled,
   * then none of its actions will be activated. Default value: true.
   */
  enabled?: boolean;
  /**
   * The condition that will cause this alert to activate.
   */
  condition: ActivityLogAlertAllOfCondition;
  /**
   * The actions that will activate when the condition is met.
   */
  actions: ActivityLogAlertActionList;
  /**
   * A description of this activity log alert.
   */
  description?: string;
}

/**
 * An activity log alert object for the body of patch operations.
 */
export interface ActivityLogAlertPatchBody {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * Indicates whether this activity log alert is enabled. If an activity log alert is not enabled,
   * then none of its actions will be activated. Default value: true.
   */
  enabled?: boolean;
}

/**
 * Definition of the endpoint used for accessing configuration.
 */
export interface ConfigurationAccessEndpointSpec {
  /**
   * The endpoint. This property is READ-ONLY.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoint?: string;
}

/**
 * Definition of the endpoint used for ingesting logs.
 */
export interface LogsIngestionEndpointSpec {
  /**
   * The endpoint. This property is READ-ONLY.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoint?: string;
}

/**
 * Definition of the network rules.
 */
export interface NetworkRuleSet {
  /**
   * The configuration to set whether network access from public internet to the endpoints are
   * allowed. Possible values include: 'Enabled', 'Disabled'
   */
  publicNetworkAccess?: KnownPublicNetworkAccessOptions;
}

/**
 * The endpoint used by agents to access their configuration.
 */
export interface DataCollectionEndpointConfigurationAccess extends ConfigurationAccessEndpointSpec {
}

/**
 * The endpoint used by clients to ingest logs.
 */
export interface DataCollectionEndpointLogsIngestion extends LogsIngestionEndpointSpec {
}

/**
 * Network access control rules for the endpoints.
 */
export interface DataCollectionEndpointNetworkAcls extends NetworkRuleSet {
}

/**
 * Definition of data collection endpoint.
 */
export interface DataCollectionEndpoint {
  /**
   * Description of the data collection endpoint.
   */
  description?: string;
  /**
   * The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
   */
  immutableId?: string;
  /**
   * The endpoint used by agents to access their configuration.
   */
  configurationAccess?: DataCollectionEndpointConfigurationAccess;
  /**
   * The endpoint used by clients to ingest logs.
   */
  logsIngestion?: DataCollectionEndpointLogsIngestion;
  /**
   * Network access control rules for the endpoints.
   */
  networkAcls?: DataCollectionEndpointNetworkAcls;
  /**
   * The resource provisioning state. This property is READ-ONLY. Possible values include:
   * 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: KnownDataCollectionEndpointProvisioningState;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface DataCollectionEndpointResourceSystemData extends SystemData {
}

/**
 * Definition of ARM tracked top level resource.
 */
export interface DataCollectionEndpointResource extends BaseResource {
  /**
   * Description of the data collection endpoint.
   */
  description?: string;
  /**
   * The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
   */
  immutableId?: string;
  /**
   * The endpoint used by agents to access their configuration.
   */
  configurationAccess?: DataCollectionEndpointConfigurationAccess;
  /**
   * The endpoint used by clients to ingest logs.
   */
  logsIngestion?: DataCollectionEndpointLogsIngestion;
  /**
   * Network access control rules for the endpoints.
   */
  networkAcls?: DataCollectionEndpointNetworkAcls;
  /**
   * The resource provisioning state. This property is READ-ONLY. Possible values include:
   * 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: KnownDataCollectionEndpointProvisioningState;
  /**
   * The geo-location where the resource lives.
   */
  location: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The kind of the resource. Possible values include: 'Linux', 'Windows'
   */
  kind?: KnownDataCollectionEndpointResourceKind;
  /**
   * Fully qualified ID of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource entity tag (ETag).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: DataCollectionEndpointResourceSystemData;
}

/**
 * Definition of ARM tracked top level resource properties for update operation.
 */
export interface ResourceForUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The error detail.
 */
export interface ErrorDetail {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.).
 * @summary Error response
 */
export interface ErrorResponseCommonV2 {
  /**
   * The error object.
   */
  error?: ErrorDetail;
}

/**
 * Definition of association of a data collection rule with a monitored Azure resource.
 */
export interface DataCollectionRuleAssociation {
  /**
   * Description of the association.
   */
  description?: string;
  /**
   * The resource ID of the data collection rule that is to be associated.
   */
  dataCollectionRuleId?: string;
  /**
   * The resource ID of the data collection endpoint that is to be associated.
   */
  dataCollectionEndpointId?: string;
  /**
   * The resource provisioning state. Possible values include: 'Creating', 'Updating', 'Deleting',
   * 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: KnownDataCollectionRuleAssociationProvisioningState;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface DataCollectionRuleAssociationProxyOnlyResourceSystemData extends SystemData {
}

/**
 * Definition of generic ARM proxy resource.
 */
export interface DataCollectionRuleAssociationProxyOnlyResource extends BaseResource {
  /**
   * Description of the association.
   */
  description?: string;
  /**
   * The resource ID of the data collection rule that is to be associated.
   */
  dataCollectionRuleId?: string;
  /**
   * The resource ID of the data collection endpoint that is to be associated.
   */
  dataCollectionEndpointId?: string;
  /**
   * The resource provisioning state. Possible values include: 'Creating', 'Updating', 'Deleting',
   * 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: KnownDataCollectionRuleAssociationProvisioningState;
  /**
   * Fully qualified ID of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource entity tag (ETag).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: DataCollectionRuleAssociationProxyOnlyResourceSystemData;
}

/**
 * Definition of which performance counters will be collected and how they will be collected by
 * this data collection rule.
 * Collected from both Windows and Linux machines where the counter is present.
 */
export interface PerfCounterDataSource {
  /**
   * List of streams that this data source will be sent to.
   * A stream indicates what schema will be used for this data and usually what table in Log
   * Analytics the data will be sent to.
   */
  streams?: KnownPerfCounterDataSourceStreams[];
  /**
   * The number of seconds between consecutive counter measurements (samples).
   */
  samplingFrequencyInSeconds?: number;
  /**
   * A list of specifier names of the performance counters you want to collect.
   * Use a wildcard (*) to collect a counter for all instances.
   * To get a list of performance counters on Windows, run the command 'typeperf'.
   */
  counterSpecifiers?: string[];
  /**
   * A friendly name for the data source.
   * This name should be unique across all data sources (regardless of type) within the data
   * collection rule.
   */
  name?: string;
}

/**
 * Definition of which Windows Event Log events will be collected and how they will be collected.
 * Only collected from Windows machines.
 */
export interface WindowsEventLogDataSource {
  /**
   * List of streams that this data source will be sent to.
   * A stream indicates what schema will be used for this data and usually what table in Log
   * Analytics the data will be sent to.
   */
  streams?: KnownWindowsEventLogDataSourceStreams[];
  /**
   * A list of Windows Event Log queries in XPATH format.
   */
  xPathQueries?: string[];
  /**
   * A friendly name for the data source.
   * This name should be unique across all data sources (regardless of type) within the data
   * collection rule.
   */
  name?: string;
}

/**
 * Definition of which syslog data will be collected and how it will be collected.
 * Only collected from Linux machines.
 */
export interface SyslogDataSource {
  /**
   * List of streams that this data source will be sent to.
   * A stream indicates what schema will be used for this data and usually what table in Log
   * Analytics the data will be sent to.
   */
  streams?: KnownSyslogDataSourceStreams[];
  /**
   * The list of facility names.
   */
  facilityNames?: KnownSyslogDataSourceFacilityNames[];
  /**
   * The log levels to collect.
   */
  logLevels?: KnownSyslogDataSourceLogLevels[];
  /**
   * A friendly name for the data source.
   * This name should be unique across all data sources (regardless of type) within the data
   * collection rule.
   */
  name?: string;
}

/**
 * Definition of which data will be collected from a separate VM extension that integrates with the
 * Azure Monitor Agent.
 * Collected from either Windows and Linux machines, depending on which extension is defined.
 */
export interface ExtensionDataSource {
  /**
   * List of streams that this data source will be sent to.
   * A stream indicates what schema will be used for this data and usually what table in Log
   * Analytics the data will be sent to.
   */
  streams?: KnownExtensionDataSourceStreams[];
  /**
   * The name of the VM extension.
   */
  extensionName: string;
  /**
   * The extension settings. The format is specific for particular extension.
   */
  extensionSettings?: any;
  /**
   * The list of data sources this extension needs data from.
   */
  inputDataSources?: string[];
  /**
   * A friendly name for the data source.
   * This name should be unique across all data sources (regardless of type) within the data
   * collection rule.
   */
  name?: string;
}

/**
 * Specification of data sources that will be collected.
 */
export interface DataSourcesSpec {
  /**
   * The list of performance counter data source configurations.
   */
  performanceCounters?: PerfCounterDataSource[];
  /**
   * The list of Windows Event Log data source configurations.
   */
  windowsEventLogs?: WindowsEventLogDataSource[];
  /**
   * The list of Syslog data source configurations.
   */
  syslog?: SyslogDataSource[];
  /**
   * The list of Azure VM extension data source configurations.
   */
  extensions?: ExtensionDataSource[];
}

/**
 * Log Analytics destination.
 */
export interface LogAnalyticsDestination {
  /**
   * The resource ID of the Log Analytics workspace.
   */
  workspaceResourceId?: string;
  /**
   * The Customer ID of the Log Analytics workspace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly workspaceId?: string;
  /**
   * A friendly name for the destination.
   * This name should be unique across all destinations (regardless of type) within the data
   * collection rule.
   */
  name?: string;
}

/**
 * Azure Monitor Metrics destination.
 */
export interface AzureMonitorMetricsDestination {
  /**
   * A friendly name for the destination.
   * This name should be unique across all destinations (regardless of type) within the data
   * collection rule.
   */
  name?: string;
}

/**
 * Azure Monitor Metrics destination.
 */
export interface DestinationsSpecAzureMonitorMetrics extends AzureMonitorMetricsDestination {
}

/**
 * Specification of destinations that can be used in data flows.
 */
export interface DestinationsSpec {
  /**
   * List of Log Analytics destinations.
   */
  logAnalytics?: LogAnalyticsDestination[];
  /**
   * Azure Monitor Metrics destination.
   */
  azureMonitorMetrics?: DestinationsSpecAzureMonitorMetrics;
}

/**
 * Definition of which streams are sent to which destinations.
 */
export interface DataFlow {
  /**
   * List of streams for this data flow.
   */
  streams?: KnownDataFlowStreams[];
  /**
   * List of destinations for this data flow.
   */
  destinations?: string[];
}

/**
 * The specification of data sources.
 * This property is optional and can be omitted if the rule is meant to be used via direct calls to
 * the provisioned endpoint.
 */
export interface DataCollectionRuleDataSources extends DataSourcesSpec {
}

/**
 * The specification of destinations.
 */
export interface DataCollectionRuleDestinations extends DestinationsSpec {
}

/**
 * Definition of what monitoring data to collect and where that data should be sent.
 */
export interface DataCollectionRule {
  /**
   * Description of the data collection rule.
   */
  description?: string;
  /**
   * The immutable ID of this data collection rule. This property is READ-ONLY.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly immutableId?: string;
  /**
   * The specification of data sources.
   * This property is optional and can be omitted if the rule is meant to be used via direct calls
   * to the provisioned endpoint.
   */
  dataSources?: DataCollectionRuleDataSources;
  /**
   * The specification of destinations.
   */
  destinations?: DataCollectionRuleDestinations;
  /**
   * The specification of data flows.
   */
  dataFlows?: DataFlow[];
  /**
   * The resource provisioning state. Possible values include: 'Creating', 'Updating', 'Deleting',
   * 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: KnownDataCollectionRuleProvisioningState;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface DataCollectionRuleResourceSystemData extends SystemData {
}

/**
 * Definition of ARM tracked top level resource.
 */
export interface DataCollectionRuleResource extends BaseResource {
  /**
   * Description of the data collection rule.
   */
  description?: string;
  /**
   * The immutable ID of this data collection rule. This property is READ-ONLY.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly immutableId?: string;
  /**
   * The specification of data sources.
   * This property is optional and can be omitted if the rule is meant to be used via direct calls
   * to the provisioned endpoint.
   */
  dataSources?: DataCollectionRuleDataSources;
  /**
   * The specification of destinations.
   */
  destinations?: DataCollectionRuleDestinations;
  /**
   * The specification of data flows.
   */
  dataFlows?: DataFlow[];
  /**
   * The resource provisioning state. Possible values include: 'Creating', 'Updating', 'Deleting',
   * 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: KnownDataCollectionRuleProvisioningState;
  /**
   * The geo-location where the resource lives.
   */
  location: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The kind of the resource. Possible values include: 'Linux', 'Windows'
   */
  kind?: KnownDataCollectionRuleResourceKind;
  /**
   * Fully qualified ID of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource entity tag (ETag).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: DataCollectionRuleResourceSystemData;
}

/**
 * Optional Parameters.
 */
export interface ActivityLogsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Used to fetch events with only the given properties.<br>The **$select** argument is a comma
   * separated list of property names to be returned. Possible values are: *authorization*,
   * *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*,
   * *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*,
   * *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*,
   * *subscriptionId*
   */
  select?: string;
}

/**
 * Optional Parameters.
 */
export interface ActivityLogsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Used to fetch events with only the given properties.<br>The **$select** argument is a comma
   * separated list of property names to be returned. Possible values are: *authorization*,
   * *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*,
   * *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*,
   * *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*,
   * *subscriptionId*
   */
  select?: string;
}

/**
 * Optional Parameters.
 */
export interface TenantActivityLogsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Reduces the set of data collected. <br>The **$filter** is very restricted and allows only the
   * following patterns.<br>- List events for a resource group: $filter=eventTimestamp ge '<Start
   * Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and
   * resourceGroupName eq '<ResourceGroupName>'.<br>- List events for resource:
   * $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels
   * eq 'Admin, Operation' and resourceUri eq '<ResourceURI>'.<br>- List events for a subscription:
   * $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels
   * eq 'Admin, Operation'.<br>- List events for a resource provider: $filter=eventTimestamp ge
   * '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and
   * resourceProvider eq '<ResourceProviderName>'.<br>- List events for a correlation Id:
   * api-version=2014-04-01&$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and
   * eventTimestamp le '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and
   * correlationId eq '<CorrelationID>'.<br>**NOTE**: No other syntax is allowed.
   */
  filter?: string;
  /**
   * Used to fetch events with only the given properties.<br>The **$select** argument is a comma
   * separated list of property names to be returned. Possible values are: *authorization*,
   * *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*,
   * *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*,
   * *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*,
   * *subscriptionId*
   */
  select?: string;
}

/**
 * Optional Parameters.
 */
export interface TenantActivityLogsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Reduces the set of data collected. <br>The **$filter** is very restricted and allows only the
   * following patterns.<br>- List events for a resource group: $filter=eventTimestamp ge '<Start
   * Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and
   * resourceGroupName eq '<ResourceGroupName>'.<br>- List events for resource:
   * $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels
   * eq 'Admin, Operation' and resourceUri eq '<ResourceURI>'.<br>- List events for a subscription:
   * $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels
   * eq 'Admin, Operation'.<br>- List events for a resource provider: $filter=eventTimestamp ge
   * '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and
   * resourceProvider eq '<ResourceProviderName>'.<br>- List events for a correlation Id:
   * api-version=2014-04-01&$filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and
   * eventTimestamp le '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and
   * correlationId eq '<CorrelationID>'.<br>**NOTE**: No other syntax is allowed.
   */
  filter?: string;
  /**
   * Used to fetch events with only the given properties.<br>The **$select** argument is a comma
   * separated list of property names to be returned. Possible values are: *authorization*,
   * *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*,
   * *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*,
   * *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*,
   * *subscriptionId*
   */
  select?: string;
}

/**
 * Optional Parameters.
 */
export interface MetricDefinitionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Metric namespace to query metric definitions for.
   */
  metricnamespace?: string;
}

/**
 * Optional Parameters.
 */
export interface MetricsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The timespan of the query. It is a string with the following format
   * 'startDateTime_ISO/endDateTime_ISO'.
   */
  timespan?: string;
  /**
   * The interval (i.e. timegrain) of the query.
   */
  interval?: string;
  /**
   * The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself
   * has a comma in it then use %2 to indicate it. Eg: 'Metric,Name1' should be **'Metric%2Name1'**
   */
  metricnames?: string;
  /**
   * The list of aggregation types (comma separated) to retrieve.
   */
  aggregation?: string;
  /**
   * The maximum number of records to retrieve.
   * Valid only if $filter is specified.
   * Defaults to 10.
   */
  top?: number;
  /**
   * The aggregation to use for sorting results and the direction of the sort.
   * Only one order can be specified.
   * Examples: sum asc.
   */
  orderby?: string;
  /**
   * The **$filter** is used to reduce the set of metric data returned. Example: Metric contains
   * metadata A, B and C. - Return all time series of C where A = a1 and B = b1 or b2 **$filter=A
   * eq 'a1' and B eq 'b1' or B eq 'b2' and C eq '*'** - Invalid variant: **$filter=A eq 'a1' and B
   * eq 'b1' and C eq '*' or B = 'b2'** This is invalid because the logical or operator cannot
   * separate two different metadata names. - Return all time series where A = a1, B = b1 and C =
   * c1: **$filter=A eq 'a1' and B eq 'b1' and C eq 'c1'** - Return all time series where A = a1
   * **$filter=A eq 'a1' and B eq '*' and C eq '*'**. Special case: When dimension name or
   * dimension value uses round brackets. Eg: When dimension name is **dim (test) 1** Instead of
   * using $filter= "dim (test) 1 eq '*' " use **$filter= "dim %2528test%2529 1 eq '*' "** When
   * dimension name is **dim (test) 3** and dimension value is **dim3 (test) val** Instead of using
   * $filter= "dim (test) 3 eq 'dim3 (test) val' " use **$filter= "dim %2528test%2529 3 eq 'dim3
   * %2528test%2529 val' "**
   */
  filter?: string;
  /**
   * Reduces the set of data collected. The syntax allowed depends on the operation. See the
   * operation's description for details. Possible values include: 'Data', 'Metadata'
   */
  resultType?: ResultType;
  /**
   * Metric namespace to query metric definitions for.
   */
  metricnamespace?: string;
}

/**
 * Optional Parameters.
 */
export interface BaselinesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself
   * has a comma in it then use %2 to indicate it. Eg: 'Metric,Name1' should be **'Metric%2Name1'**
   */
  metricnames?: string;
  /**
   * Metric namespace to query metric definitions for.
   */
  metricnamespace?: string;
  /**
   * The timespan of the query. It is a string with the following format
   * 'startDateTime_ISO/endDateTime_ISO'.
   */
  timespan?: string;
  /**
   * The interval (i.e. timegrain) of the query.
   */
  interval?: string;
  /**
   * The list of aggregation types (comma separated) to retrieve.
   */
  aggregation?: string;
  /**
   * The list of sensitivities (comma separated) to retrieve.
   */
  sensitivities?: string;
  /**
   * The **$filter** is used to reduce the set of metric data returned. Example: Metric contains
   * metadata A, B and C. - Return all time series of C where A = a1 and B = b1 or b2 **$filter=A
   * eq 'a1' and B eq 'b1' or B eq 'b2' and C eq '*'** - Invalid variant: **$filter=A eq 'a1' and B
   * eq 'b1' and C eq '*' or B = 'b2'** This is invalid because the logical or operator cannot
   * separate two different metadata names. - Return all time series where A = a1, B = b1 and C =
   * c1: **$filter=A eq 'a1' and B eq 'b1' and C eq 'c1'** - Return all time series where A = a1
   * **$filter=A eq 'a1' and B eq '*' and C eq '*'**. Special case: When dimension name or
   * dimension value uses round brackets. Eg: When dimension name is **dim (test) 1** Instead of
   * using $filter= "dim (test) 1 eq '*' " use **$filter= "dim %2528test%2529 1 eq '*' "** When
   * dimension name is **dim (test) 3** and dimension value is **dim3 (test) val** Instead of using
   * $filter= "dim (test) 3 eq 'dim3 (test) val' " use **$filter= "dim %2528test%2529 3 eq 'dim3
   * %2528test%2529 val' "**
   */
  filter?: string;
  /**
   * Allows retrieving only metadata of the baseline. On data request all information is retrieved.
   * Possible values include: 'Data', 'Metadata'
   */
  resultType?: ResultType;
}

/**
 * Optional Parameters.
 */
export interface ScheduledQueryRulesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ScheduledQueryRulesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface MetricNamespacesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The ISO 8601 conform Date start time from which to query for metric namespaces.
   */
  startTime?: string;
}

/**
 * Optional Parameters.
 */
export interface PrivateLinkScopesUpdateTagsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface PrivateLinkScopedResourcesCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The resource id of the scoped Azure monitor resource.
   */
  linkedResourceId?: string;
}

/**
 * Optional Parameters.
 */
export interface PrivateLinkScopedResourcesBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The resource id of the scoped Azure monitor resource.
   */
  linkedResourceId?: string;
}

/**
 * Optional Parameters.
 */
export interface DataCollectionEndpointsCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The payload
   */
  body?: DataCollectionEndpointResource;
}

/**
 * Optional Parameters.
 */
export interface DataCollectionEndpointsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface DataCollectionRuleAssociationsCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The payload
   */
  body?: DataCollectionRuleAssociationProxyOnlyResource;
}

/**
 * Optional Parameters.
 */
export interface DataCollectionRulesCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The payload
   */
  body?: DataCollectionRuleResource;
}

/**
 * Optional Parameters.
 */
export interface DataCollectionRulesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An interface representing MonitorManagementClientOptions.
 */
export interface MonitorManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Represents a collection of autoscale setting resources.
 * @extends Array<AutoscaleSettingResource>
 */
export interface AutoscaleSettingResourceCollection extends Array<AutoscaleSettingResource> {
  /**
   * URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List incidents operation response.
 * @extends Array<Incident>
 */
export interface IncidentListResult extends Array<Incident> {
}

/**
 * @interface
 * Represents a collection of alert rule resources.
 * @extends Array<AlertRuleResource>
 */
export interface AlertRuleResourceCollection extends Array<AlertRuleResource> {
}

/**
 * @interface
 * Represents a collection of log profiles.
 * @extends Array<LogProfileResource>
 */
export interface LogProfileCollection extends Array<LogProfileResource> {
}

/**
 * @interface
 * A list of action groups.
 * @extends Array<ActionGroupResource>
 */
export interface ActionGroupList extends Array<ActionGroupResource> {
  /**
   * Provides the link to retrieve the next set of elements.
   */
  nextLink?: string;
}

/**
 * @interface
 * Represents collection of events.
 * @extends Array<EventData>
 */
export interface EventDataCollection extends Array<EventData> {
  /**
   * Provides the link to retrieve the next set of events.
   */
  nextLink?: string;
}

/**
 * @interface
 * A collection of event categories. Currently possible values are: Administrative, Security,
 * ServiceHealth, Alert, Recommendation, Policy.
 * @extends Array<LocalizableString>
 */
export interface EventCategoryCollection extends Array<LocalizableString> {
}

/**
 * @interface
 * Represents collection of metric definitions.
 * @extends Array<MetricDefinition>
 */
export interface MetricDefinitionCollection extends Array<MetricDefinition> {
}

/**
 * @interface
 * A list of metric baselines.
 * @extends Array<SingleMetricBaseline>
 */
export interface MetricBaselinesResponse extends Array<SingleMetricBaseline> {
}

/**
 * @interface
 * Represents a collection of alert rule resources.
 * @extends Array<MetricAlertResource>
 */
export interface MetricAlertResourceCollection extends Array<MetricAlertResource> {
}

/**
 * @interface
 * Represents a collection of Log Search rule resources.
 * @extends Array<LogSearchRuleResource>
 */
export interface LogSearchRuleResourceCollection extends Array<LogSearchRuleResource> {
}

/**
 * @interface
 * Represents collection of metric namespaces.
 * @extends Array<MetricNamespace>
 */
export interface MetricNamespaceCollection extends Array<MetricNamespace> {
}

/**
 * @interface
 * Describes the list of Azure Monitor PrivateLinkScope resources.
 * @extends Array<AzureMonitorPrivateLinkScope>
 */
export interface AzureMonitorPrivateLinkScopeListResult extends Array<AzureMonitorPrivateLinkScope> {
  /**
   * The URI to get the next set of Azure Monitor PrivateLinkScope definitions if too many
   * PrivateLinkScopes where returned in the result set.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of private link resources
 * @extends Array<PrivateLinkResource>
 */
export interface PrivateLinkResourceListResult extends Array<PrivateLinkResource> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of private endpoint connections.
 * @extends Array<PrivateEndpointConnection>
 */
export interface PrivateEndpointConnectionListResult extends Array<PrivateEndpointConnection> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of scoped resources in a private link scope.
 * @extends Array<ScopedResource>
 */
export interface ScopedResourceListResult extends Array<ScopedResource> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of activity log alerts.
 * @extends Array<ActivityLogAlertResource>
 */
export interface ActivityLogAlertList extends Array<ActivityLogAlertResource> {
  /**
   * Provides the link to retrieve the next set of elements.
   */
  nextLink?: string;
}

/**
 * @interface
 * A pageable list of resources.
 * @extends Array<DataCollectionEndpointResource>
 */
export interface DataCollectionEndpointResourceListResult extends Array<DataCollectionEndpointResource> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * A pageable list of resources.
 * @extends Array<DataCollectionRuleAssociationProxyOnlyResource>
 */
export interface DataCollectionRuleAssociationProxyOnlyResourceListResult extends Array<DataCollectionRuleAssociationProxyOnlyResource> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * A pageable list of resources.
 * @extends Array<DataCollectionRuleResource>
 */
export interface DataCollectionRuleResourceListResult extends Array<DataCollectionRuleResource> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * Defines values for MetricStatisticType.
 * Possible values include: 'Average', 'Min', 'Max', 'Sum', 'Count'
 * @readonly
 * @enum {string}
 */
export type MetricStatisticType = 'Average' | 'Min' | 'Max' | 'Sum' | 'Count';

/**
 * Defines values for TimeAggregationType.
 * Possible values include: 'Average', 'Minimum', 'Maximum', 'Total', 'Count', 'Last'
 * @readonly
 * @enum {string}
 */
export type TimeAggregationType = 'Average' | 'Minimum' | 'Maximum' | 'Total' | 'Count' | 'Last';

/**
 * Defines values for ComparisonOperationType.
 * Possible values include: 'Equals', 'NotEquals', 'GreaterThan', 'GreaterThanOrEqual', 'LessThan',
 * 'LessThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type ComparisonOperationType = 'Equals' | 'NotEquals' | 'GreaterThan' | 'GreaterThanOrEqual' | 'LessThan' | 'LessThanOrEqual';

/**
 * Defines values for ScaleRuleMetricDimensionOperationType.
 * Possible values include: 'Equals', 'NotEquals'
 * @readonly
 * @enum {string}
 */
export type ScaleRuleMetricDimensionOperationType = 'Equals' | 'NotEquals';

/**
 * Defines values for ScaleDirection.
 * Possible values include: 'None', 'Increase', 'Decrease'
 * @readonly
 * @enum {string}
 */
export type ScaleDirection = 'None' | 'Increase' | 'Decrease';

/**
 * Defines values for ScaleType.
 * Possible values include: 'ChangeCount', 'PercentChangeCount', 'ExactCount',
 * 'ServiceAllowedNextValue'
 * @readonly
 * @enum {string}
 */
export type ScaleType = 'ChangeCount' | 'PercentChangeCount' | 'ExactCount' | 'ServiceAllowedNextValue';

/**
 * Defines values for RecurrenceFrequency.
 * Possible values include: 'None', 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month', 'Year'
 * @readonly
 * @enum {string}
 */
export type RecurrenceFrequency = 'None' | 'Second' | 'Minute' | 'Hour' | 'Day' | 'Week' | 'Month' | 'Year';

/**
 * Defines values for ConditionOperator.
 * Possible values include: 'GreaterThan', 'GreaterThanOrEqual', 'LessThan', 'LessThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type ConditionOperator = 'GreaterThan' | 'GreaterThanOrEqual' | 'LessThan' | 'LessThanOrEqual';

/**
 * Defines values for TimeAggregationOperator.
 * Possible values include: 'Average', 'Minimum', 'Maximum', 'Total', 'Last'
 * @readonly
 * @enum {string}
 */
export type TimeAggregationOperator = 'Average' | 'Minimum' | 'Maximum' | 'Total' | 'Last';

/**
 * Defines values for CategoryType.
 * Possible values include: 'Metrics', 'Logs'
 * @readonly
 * @enum {string}
 */
export type CategoryType = 'Metrics' | 'Logs';

/**
 * Defines values for ReceiverStatus.
 * Possible values include: 'NotSpecified', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type ReceiverStatus = 'NotSpecified' | 'Enabled' | 'Disabled';

/**
 * Defines values for EventLevel.
 * Possible values include: 'Critical', 'Error', 'Warning', 'Informational', 'Verbose'
 * @readonly
 * @enum {string}
 */
export type EventLevel = 'Critical' | 'Error' | 'Warning' | 'Informational' | 'Verbose';

/**
 * Defines values for MetricUnit.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'CountPerSecond', 'BytesPerSecond',
 * 'Percent', 'MilliSeconds', 'ByteSeconds', 'Unspecified', 'Cores', 'MilliCores', 'NanoCores',
 * 'BitsPerSecond'
 * @readonly
 * @enum {string}
 */
export type MetricUnit = 'Count' | 'Bytes' | 'Seconds' | 'CountPerSecond' | 'BytesPerSecond' | 'Percent' | 'MilliSeconds' | 'ByteSeconds' | 'Unspecified' | 'Cores' | 'MilliCores' | 'NanoCores' | 'BitsPerSecond';

/**
 * Defines values for AggregationType.
 * Possible values include: 'None', 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
 * @readonly
 * @enum {string}
 */
export type AggregationType = 'None' | 'Average' | 'Count' | 'Minimum' | 'Maximum' | 'Total';

/**
 * Defines values for MetricClass.
 * Possible values include: 'Availability', 'Transactions', 'Errors', 'Latency', 'Saturation'
 * @readonly
 * @enum {string}
 */
export type MetricClass = 'Availability' | 'Transactions' | 'Errors' | 'Latency' | 'Saturation';

/**
 * Defines values for BaselineSensitivity.
 * Possible values include: 'Low', 'Medium', 'High'
 * @readonly
 * @enum {string}
 */
export type BaselineSensitivity = 'Low' | 'Medium' | 'High';

/**
 * Defines values for Operator.
 * Possible values include: 'Equals', 'NotEquals', 'GreaterThan', 'GreaterThanOrEqual', 'LessThan',
 * 'LessThanOrEqual'
 * @readonly
 * @enum {string}
 */
export type Operator = 'Equals' | 'NotEquals' | 'GreaterThan' | 'GreaterThanOrEqual' | 'LessThan' | 'LessThanOrEqual';

/**
 * Defines values for AggregationTypeEnum.
 * Possible values include: 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
 * @readonly
 * @enum {string}
 */
export type AggregationTypeEnum = 'Average' | 'Count' | 'Minimum' | 'Maximum' | 'Total';

/**
 * Defines values for DynamicThresholdOperator.
 * Possible values include: 'GreaterThan', 'LessThan', 'GreaterOrLessThan'
 * @readonly
 * @enum {string}
 */
export type DynamicThresholdOperator = 'GreaterThan' | 'LessThan' | 'GreaterOrLessThan';

/**
 * Defines values for DynamicThresholdSensitivity.
 * Possible values include: 'Low', 'Medium', 'High'
 * @readonly
 * @enum {string}
 */
export type DynamicThresholdSensitivity = 'Low' | 'Medium' | 'High';

/**
 * Defines values for Enabled.
 * Possible values include: 'true', 'false'
 * @readonly
 * @enum {string}
 */
export type Enabled = 'true' | 'false';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Deploying', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Deploying' | 'Canceled' | 'Failed';

/**
 * Defines values for QueryType.
 * Possible values include: 'ResultCount'
 * @readonly
 * @enum {string}
 */
export type QueryType = 'ResultCount';

/**
 * Defines values for ConditionalOperator.
 * Possible values include: 'GreaterThanOrEqual', 'LessThanOrEqual', 'GreaterThan', 'LessThan',
 * 'Equal'
 * @readonly
 * @enum {string}
 */
export type ConditionalOperator = 'GreaterThanOrEqual' | 'LessThanOrEqual' | 'GreaterThan' | 'LessThan' | 'Equal';

/**
 * Defines values for MetricTriggerType.
 * Possible values include: 'Consecutive', 'Total'
 * @readonly
 * @enum {string}
 */
export type MetricTriggerType = 'Consecutive' | 'Total';

/**
 * Defines values for AlertSeverity.
 * Possible values include: '0', '1', '2', '3', '4'
 * @readonly
 * @enum {string}
 */
export type AlertSeverity = '0' | '1' | '2' | '3' | '4';

/**
 * Defines values for NamespaceClassification.
 * Possible values include: 'Platform', 'Custom', 'Qos'
 * @readonly
 * @enum {string}
 */
export type NamespaceClassification = 'Platform' | 'Custom' | 'Qos';

/**
 * Defines values for OnboardingStatus.
 * Possible values include: 'onboarded', 'notOnboarded', 'unknown'
 * @readonly
 * @enum {string}
 */
export type OnboardingStatus = 'onboarded' | 'notOnboarded' | 'unknown';

/**
 * Defines values for DataStatus.
 * Possible values include: 'present', 'notPresent'
 * @readonly
 * @enum {string}
 */
export type DataStatus = 'present' | 'notPresent';

/**
 * Defines values for KnownPublicNetworkAccessOptions.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type KnownPublicNetworkAccessOptions = 'Enabled' | 'Disabled';

/**
 * Defines values for KnownDataCollectionEndpointProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type KnownDataCollectionEndpointProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Failed';

/**
 * Defines values for KnownDataCollectionEndpointResourceKind.
 * Possible values include: 'Linux', 'Windows'
 * @readonly
 * @enum {string}
 */
export type KnownDataCollectionEndpointResourceKind = 'Linux' | 'Windows';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for KnownDataCollectionRuleAssociationProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type KnownDataCollectionRuleAssociationProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Failed';

/**
 * Defines values for KnownPerfCounterDataSourceStreams.
 * Possible values include: 'Microsoft-Perf', 'Microsoft-InsightsMetrics'
 * @readonly
 * @enum {string}
 */
export type KnownPerfCounterDataSourceStreams = 'Microsoft-Perf' | 'Microsoft-InsightsMetrics';

/**
 * Defines values for KnownWindowsEventLogDataSourceStreams.
 * Possible values include: 'Microsoft-WindowsEvent', 'Microsoft-Event'
 * @readonly
 * @enum {string}
 */
export type KnownWindowsEventLogDataSourceStreams = 'Microsoft-WindowsEvent' | 'Microsoft-Event';

/**
 * Defines values for KnownSyslogDataSourceStreams.
 * Possible values include: 'Microsoft-Syslog'
 * @readonly
 * @enum {string}
 */
export type KnownSyslogDataSourceStreams = 'Microsoft-Syslog';

/**
 * Defines values for KnownSyslogDataSourceFacilityNames.
 * Possible values include: 'auth', 'authpriv', 'cron', 'daemon', 'kern', 'lpr', 'mail', 'mark',
 * 'news', 'syslog', 'user', 'uucp', 'local0', 'local1', 'local2', 'local3', 'local4', 'local5',
 * 'local6', 'local7', '*'
 * @readonly
 * @enum {string}
 */
export type KnownSyslogDataSourceFacilityNames = 'auth' | 'authpriv' | 'cron' | 'daemon' | 'kern' | 'lpr' | 'mail' | 'mark' | 'news' | 'syslog' | 'user' | 'uucp' | 'local0' | 'local1' | 'local2' | 'local3' | 'local4' | 'local5' | 'local6' | 'local7' | '*';

/**
 * Defines values for KnownSyslogDataSourceLogLevels.
 * Possible values include: 'Debug', 'Info', 'Notice', 'Warning', 'Error', 'Critical', 'Alert',
 * 'Emergency', '*'
 * @readonly
 * @enum {string}
 */
export type KnownSyslogDataSourceLogLevels = 'Debug' | 'Info' | 'Notice' | 'Warning' | 'Error' | 'Critical' | 'Alert' | 'Emergency' | '*';

/**
 * Defines values for KnownExtensionDataSourceStreams.
 * Possible values include: 'Microsoft-Event', 'Microsoft-InsightsMetrics', 'Microsoft-Perf',
 * 'Microsoft-Syslog', 'Microsoft-WindowsEvent'
 * @readonly
 * @enum {string}
 */
export type KnownExtensionDataSourceStreams = 'Microsoft-Event' | 'Microsoft-InsightsMetrics' | 'Microsoft-Perf' | 'Microsoft-Syslog' | 'Microsoft-WindowsEvent';

/**
 * Defines values for KnownDataFlowStreams.
 * Possible values include: 'Microsoft-Event', 'Microsoft-InsightsMetrics', 'Microsoft-Perf',
 * 'Microsoft-Syslog', 'Microsoft-WindowsEvent'
 * @readonly
 * @enum {string}
 */
export type KnownDataFlowStreams = 'Microsoft-Event' | 'Microsoft-InsightsMetrics' | 'Microsoft-Perf' | 'Microsoft-Syslog' | 'Microsoft-WindowsEvent';

/**
 * Defines values for KnownDataCollectionRuleProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type KnownDataCollectionRuleProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Failed';

/**
 * Defines values for KnownDataCollectionRuleResourceKind.
 * Possible values include: 'Linux', 'Windows'
 * @readonly
 * @enum {string}
 */
export type KnownDataCollectionRuleResourceKind = 'Linux' | 'Windows';

/**
 * Defines values for ResultType.
 * Possible values include: 'Data', 'Metadata'
 * @readonly
 * @enum {string}
 */
export type ResultType = 'Data' | 'Metadata';

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AutoscaleSettingsListByResourceGroupResponse = AutoscaleSettingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResourceCollection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AutoscaleSettingsCreateOrUpdateResponse = AutoscaleSettingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AutoscaleSettingsGetResponse = AutoscaleSettingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AutoscaleSettingsUpdateResponse = AutoscaleSettingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResource;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type AutoscaleSettingsListBySubscriptionResponse = AutoscaleSettingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResourceCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AutoscaleSettingsListByResourceGroupNextResponse = AutoscaleSettingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResourceCollection;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type AutoscaleSettingsListBySubscriptionNextResponse = AutoscaleSettingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResourceCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AlertRuleIncidentsGetResponse = Incident & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Incident;
    };
};

/**
 * Contains response data for the listByAlertRule operation.
 */
export type AlertRuleIncidentsListByAlertRuleResponse = IncidentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IncidentListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AlertRulesCreateOrUpdateResponse = AlertRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AlertRulesGetResponse = AlertRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AlertRulesUpdateResponse = AlertRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResource;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AlertRulesListByResourceGroupResponse = AlertRuleResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResourceCollection;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type AlertRulesListBySubscriptionResponse = AlertRuleResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LogProfilesGetResponse = LogProfileResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogProfileResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LogProfilesCreateOrUpdateResponse = LogProfileResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogProfileResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type LogProfilesUpdateResponse = LogProfileResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogProfileResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type LogProfilesListResponse = LogProfileCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogProfileCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiagnosticSettingsGetResponse = DiagnosticSettingsResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiagnosticSettingsCreateOrUpdateResponse = DiagnosticSettingsResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiagnosticSettingsListResponse = DiagnosticSettingsResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiagnosticSettingsCategoryGetResponse = DiagnosticSettingsCategoryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsCategoryResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiagnosticSettingsCategoryListResponse = DiagnosticSettingsCategoryResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsCategoryResourceCollection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ActionGroupsCreateOrUpdateResponse = ActionGroupResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ActionGroupsGetResponse = ActionGroupResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ActionGroupsUpdateResponse = ActionGroupResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupResource;
    };
};

/**
 * Contains response data for the listBySubscriptionId operation.
 */
export type ActionGroupsListBySubscriptionIdResponse = ActionGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ActionGroupsListByResourceGroupResponse = ActionGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ActivityLogsListResponse = EventDataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventDataCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ActivityLogsListNextResponse = EventDataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventDataCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EventCategoriesListResponse = EventCategoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventCategoryCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TenantActivityLogsListResponse = EventDataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventDataCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TenantActivityLogsListNextResponse = EventDataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventDataCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MetricDefinitionsListResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MetricsListResponse = Response & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Response;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BaselinesListResponse = MetricBaselinesResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricBaselinesResponse;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type MetricAlertsListBySubscriptionResponse = MetricAlertResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResourceCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type MetricAlertsListByResourceGroupResponse = MetricAlertResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MetricAlertsGetResponse = MetricAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MetricAlertsCreateOrUpdateResponse = MetricAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MetricAlertsUpdateResponse = MetricAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MetricAlertsStatusListResponse = MetricAlertStatusCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertStatusCollection;
    };
};

/**
 * Contains response data for the listByName operation.
 */
export type MetricAlertsStatusListByNameResponse = MetricAlertStatusCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertStatusCollection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ScheduledQueryRulesCreateOrUpdateResponse = LogSearchRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ScheduledQueryRulesGetResponse = LogSearchRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ScheduledQueryRulesUpdateResponse = LogSearchRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResource;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ScheduledQueryRulesListBySubscriptionResponse = LogSearchRuleResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResourceCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ScheduledQueryRulesListByResourceGroupResponse = LogSearchRuleResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResourceCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MetricNamespacesListResponse = MetricNamespaceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricNamespaceCollection;
    };
};

/**
 * Contains response data for the getOnboardingStatus operation.
 */
export type VMInsightsGetOnboardingStatusResponse = VMInsightsOnboardingStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VMInsightsOnboardingStatus;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateLinkScopesListResponse = AzureMonitorPrivateLinkScopeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureMonitorPrivateLinkScopeListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type PrivateLinkScopesListByResourceGroupResponse = AzureMonitorPrivateLinkScopeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureMonitorPrivateLinkScopeListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkScopesGetResponse = AzureMonitorPrivateLinkScope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureMonitorPrivateLinkScope;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PrivateLinkScopesCreateOrUpdateResponse = AzureMonitorPrivateLinkScope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureMonitorPrivateLinkScope;
    };
};

/**
 * Contains response data for the updateTags operation.
 */
export type PrivateLinkScopesUpdateTagsResponse = AzureMonitorPrivateLinkScope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureMonitorPrivateLinkScope;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PrivateLinkScopesListNextResponse = AzureMonitorPrivateLinkScopeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureMonitorPrivateLinkScopeListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type PrivateLinkScopesListByResourceGroupNextResponse = AzureMonitorPrivateLinkScopeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureMonitorPrivateLinkScopeListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkScopeOperationStatusGetResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the listByPrivateLinkScope operation.
 */
export type PrivateLinkResourcesListByPrivateLinkScopeResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResource;
    };
};

/**
 * Contains response data for the listByPrivateLinkScopeNext operation.
 */
export type PrivateLinkResourcesListByPrivateLinkScopeNextResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByPrivateLinkScope operation.
 */
export type PrivateEndpointConnectionsListByPrivateLinkScopeResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type PrivateEndpointConnectionsBeginCreateOrUpdateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByPrivateLinkScopeNext operation.
 */
export type PrivateEndpointConnectionsListByPrivateLinkScopeNextResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkScopedResourcesGetResponse = ScopedResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScopedResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PrivateLinkScopedResourcesCreateOrUpdateResponse = ScopedResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScopedResource;
    };
};

/**
 * Contains response data for the listByPrivateLinkScope operation.
 */
export type PrivateLinkScopedResourcesListByPrivateLinkScopeResponse = ScopedResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScopedResourceListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type PrivateLinkScopedResourcesBeginCreateOrUpdateResponse = ScopedResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScopedResource;
    };
};

/**
 * Contains response data for the listByPrivateLinkScopeNext operation.
 */
export type PrivateLinkScopedResourcesListByPrivateLinkScopeNextResponse = ScopedResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScopedResourceListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ActivityLogAlertsCreateOrUpdateResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ActivityLogAlertsGetResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ActivityLogAlertsUpdateResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the listBySubscriptionId operation.
 */
export type ActivityLogAlertsListBySubscriptionIdResponse = ActivityLogAlertList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ActivityLogAlertsListByResourceGroupResponse = ActivityLogAlertList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DataCollectionEndpointsListByResourceGroupResponse = DataCollectionEndpointResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionEndpointResourceListResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DataCollectionEndpointsListBySubscriptionResponse = DataCollectionEndpointResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionEndpointResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataCollectionEndpointsGetResponse = DataCollectionEndpointResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionEndpointResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type DataCollectionEndpointsCreateResponse = DataCollectionEndpointResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionEndpointResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DataCollectionEndpointsUpdateResponse = DataCollectionEndpointResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionEndpointResource;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DataCollectionEndpointsListByResourceGroupNextResponse = DataCollectionEndpointResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionEndpointResourceListResult;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DataCollectionEndpointsListBySubscriptionNextResponse = DataCollectionEndpointResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionEndpointResourceListResult;
    };
};

/**
 * Contains response data for the listByResource operation.
 */
export type DataCollectionRuleAssociationsListByResourceResponse = DataCollectionRuleAssociationProxyOnlyResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleAssociationProxyOnlyResourceListResult;
    };
};

/**
 * Contains response data for the listByRule operation.
 */
export type DataCollectionRuleAssociationsListByRuleResponse = DataCollectionRuleAssociationProxyOnlyResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleAssociationProxyOnlyResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataCollectionRuleAssociationsGetResponse = DataCollectionRuleAssociationProxyOnlyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleAssociationProxyOnlyResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type DataCollectionRuleAssociationsCreateResponse = DataCollectionRuleAssociationProxyOnlyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleAssociationProxyOnlyResource;
    };
};

/**
 * Contains response data for the listByResourceNext operation.
 */
export type DataCollectionRuleAssociationsListByResourceNextResponse = DataCollectionRuleAssociationProxyOnlyResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleAssociationProxyOnlyResourceListResult;
    };
};

/**
 * Contains response data for the listByRuleNext operation.
 */
export type DataCollectionRuleAssociationsListByRuleNextResponse = DataCollectionRuleAssociationProxyOnlyResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleAssociationProxyOnlyResourceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DataCollectionRulesListByResourceGroupResponse = DataCollectionRuleResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleResourceListResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DataCollectionRulesListBySubscriptionResponse = DataCollectionRuleResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataCollectionRulesGetResponse = DataCollectionRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type DataCollectionRulesCreateResponse = DataCollectionRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DataCollectionRulesUpdateResponse = DataCollectionRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleResource;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DataCollectionRulesListByResourceGroupNextResponse = DataCollectionRuleResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleResourceListResult;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DataCollectionRulesListBySubscriptionNextResponse = DataCollectionRuleResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataCollectionRuleResourceListResult;
    };
};
