/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * An Azure resource object.
 */
export interface AzureResource extends BaseResource {
  /**
   * The resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The location of the resource. Since Azure Activity Log Alerts is a global service, the
   * location of the rules should always be 'global'. Default value: 'global'.
   */
  location?: string;
  /**
   * The tags of the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An Activity Log Alert rule condition that is met by comparing the field and value of an Activity
 * Log event.
 * This condition must contain 'field' and either 'equals' or 'containsAny'.
 */
export interface AlertRuleLeafCondition {
  /**
   * The name of the Activity Log event's field that this condition will examine.
   * The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller',
   * 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus',
   * 'resourceType', or anything beginning with 'properties'.
   */
  field?: string;
  /**
   * The value of the event's field will be compared to this value (case-insensitive) to determine
   * if the condition is met.
   */
  equals?: string;
  /**
   * The value of the event's field will be compared to the values in this array (case-insensitive)
   * to determine if the condition is met.
   */
  containsAny?: string[];
}

/**
 * An Activity Log Alert rule condition that is met when all its member conditions are met.
 * Each condition can be of one of the following types:
 * __Important__: Each type has its unique subset of properties. Properties from different types
 * CANNOT exist in one condition.
 * * __Leaf Condition -__ must contain 'field' and either 'equals' or 'containsAny'.
 * _Please note, 'anyOf' should __not__ be set in a Leaf Condition._
 * * __AnyOf Condition -__ must contain __only__ 'anyOf' (which is an array of Leaf Conditions).
 * _Please note, 'field', 'equals' and 'containsAny' should __not__ be set in an AnyOf Condition._

 */
export interface AlertRuleAnyOfOrLeafCondition extends AlertRuleLeafCondition {
  /**
   * An Activity Log Alert rule 'anyOf' condition. An Activity Log Alert rule condition that is met
   * when at least one of its member leaf conditions are met.
   */
  anyOf?: AlertRuleLeafCondition[];
}

/**
 * An Activity Log Alert rule condition that is met when all its member conditions are met.
 */
export interface AlertRuleAllOfCondition {
  /**
   * The list of Activity Log Alert rule conditions.
   */
  allOf: AlertRuleAnyOfOrLeafCondition[];
}

/**
 * A pointer to an Azure Action Group.
 */
export interface ActionGroup {
  /**
   * The resource ID of the Action Group. This cannot be null or empty.
   */
  actionGroupId: string;
  /**
   * the dictionary of custom properties to include with the post operation. These data are
   * appended to the webhook payload.
   */
  webhookProperties?: { [propertyName: string]: string };
}

/**
 * A list of Activity Log Alert rule actions.
 */
export interface ActionList {
  /**
   * The list of the Action Groups.
   */
  actionGroups?: ActionGroup[];
}

/**
 * An Activity Log Alert rule resource.
 */
export interface ActivityLogAlertResource extends AzureResource {
  /**
   * A list of resource IDs that will be used as prefixes. The alert will only apply to Activity
   * Log events with resource IDs that fall under one of these prefixes. This list must include at
   * least one item.
   */
  scopes: string[];
  /**
   * The condition that will cause this alert to activate.
   */
  condition: AlertRuleAllOfCondition;
  /**
   * The actions that will activate when the condition is met.
   */
  actions: ActionList;
  /**
   * Indicates whether this Activity Log Alert rule is enabled. If an Activity Log Alert rule is
   * not enabled, then none of its actions will be activated. Default value: true.
   */
  enabled?: boolean;
  /**
   * A description of this Activity Log Alert rule.
   */
  description?: string;
}

/**
 * An Activity Log Alert rule object for the body of patch operations.
 */
export interface AlertRulePatchObject {
  /**
   * The resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * Indicates whether this Activity Log Alert rule is enabled. If an Activity Log Alert rule is
   * not enabled, then none of its actions will be activated. Default value: true.
   */
  enabled?: boolean;
}

/**
 * The error response.
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message indicating why the operation failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * An interface representing MonitorManagementClientOptions.
 */
export interface MonitorManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * A list of Activity Log Alert rules.
 * @extends Array<ActivityLogAlertResource>
 */
export interface AlertRuleList extends Array<ActivityLogAlertResource> {
  /**
   * Provides the link to retrieve the next set of elements.
   */
  nextLink?: string;
}

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ActivityLogAlertsCreateOrUpdateResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ActivityLogAlertsGetResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ActivityLogAlertsUpdateResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the listBySubscriptionId operation.
 */
export type ActivityLogAlertsListBySubscriptionIdResponse = AlertRuleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ActivityLogAlertsListByResourceGroupResponse = AlertRuleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleList;
    };
};

/**
 * Contains response data for the listBySubscriptionIdNext operation.
 */
export type ActivityLogAlertsListBySubscriptionIdNextResponse = AlertRuleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ActivityLogAlertsListByResourceGroupNextResponse = AlertRuleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleList;
    };
};
