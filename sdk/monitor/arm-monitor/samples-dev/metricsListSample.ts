/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { MetricsListOptionalParams, MonitorClient } from "@azure/arm-monitor";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to **Lists the metric values for a resource**.
 *
 * @summary **Lists the metric values for a resource**.
 * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2024-02-01/examples/GetMetric.json
 */
async function getMetricForData() {
  const resourceUri =
    "subscriptions/1f3fa6d2-851c-4a91-9087-1a050f3a9c38/resourceGroups/todking/providers/Microsoft.Storage/storageAccounts/tkfileserv/blobServices/default";
  const timespan = "2021-04-20T09:00:00.000Z/2021-04-20T14:00:00.000Z";
  const interval = "PT6H";
  const metricnames = "BlobCount,BlobCapacity";
  const aggregation = "average,minimum,maximum";
  const top = 5;
  const orderby = "average asc";
  const filter = "Tier eq '*'";
  const metricnamespace = "Microsoft.Storage/storageAccounts/blobServices";
  const autoAdjustTimegrain = true;
  const validateDimensions = false;
  const options: MetricsListOptionalParams = {
    timespan,
    interval,
    metricnames,
    aggregation,
    top,
    orderby,
    filter,
    metricnamespace,
    autoAdjustTimegrain,
    validateDimensions,
  };
  const credential = new DefaultAzureCredential();
  const client = new MonitorClient(credential);
  const result = await client.metricsOperations.list(resourceUri, options);
  console.log(result);
}

/**
 * This sample demonstrates how to **Lists the metric values for a resource**.
 *
 * @summary **Lists the metric values for a resource**.
 * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2024-02-01/examples/GetMetricMetadata.json
 */
async function getMetricForMetadata() {
  const resourceUri =
    "subscriptions/1f3fa6d2-851c-4a91-9087-1a050f3a9c38/resourceGroups/todking/providers/Microsoft.Storage/storageAccounts/tkfileserv/blobServices/default";
  const timespan = "2017-04-14T02:20:00Z/2017-04-14T04:20:00Z";
  const filter = "Tier eq '*'";
  const metricnamespace = "Microsoft.Storage/storageAccounts/blobServices";
  const options: MetricsListOptionalParams = {
    timespan,
    filter,
    metricnamespace,
  };
  const credential = new DefaultAzureCredential();
  const client = new MonitorClient(credential);
  const result = await client.metricsOperations.list(resourceUri, options);
  console.log(result);
}

/**
 * This sample demonstrates how to **Lists the metric values for a resource**.
 *
 * @summary **Lists the metric values for a resource**.
 * x-ms-original-file: specification/monitor/resource-manager/Microsoft.Insights/stable/2024-02-01/examples/GetMetricError.json
 */
async function getMetricWithError() {
  const resourceUri =
    "subscriptions/ac41e21f-afd6-4a79-8070-f01eba278f97/resourceGroups/todking/providers/Microsoft.DocumentDb/databaseAccounts/tk-cosmos-mongo";
  const timespan = "2021-06-07T21:51:00Z/2021-06-08T01:51:00Z";
  const interval = "FULL";
  const metricnames = "MongoRequestsCount,MongoRequests";
  const aggregation = "average";
  const metricnamespace = "microsoft.documentdb/databaseaccounts";
  const autoAdjustTimegrain = true;
  const validateDimensions = false;
  const options: MetricsListOptionalParams = {
    timespan,
    interval,
    metricnames,
    aggregation,
    metricnamespace,
    autoAdjustTimegrain,
    validateDimensions,
  };
  const credential = new DefaultAzureCredential();
  const client = new MonitorClient(credential);
  const result = await client.metricsOperations.list(resourceUri, options);
  console.log(result);
}

async function main() {
  getMetricForData();
  getMetricForMetadata();
  getMetricWithError();
}

main().catch(console.error);
