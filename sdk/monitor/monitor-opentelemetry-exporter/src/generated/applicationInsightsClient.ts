/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as Parameters from "./models/parameters";
import * as Mappers from "./models/mappers";
import { ApplicationInsightsClientContext } from "./applicationInsightsClientContext";
import {
  ApplicationInsightsClientOptionalParams,
  TelemetryItem,
  TrackOptionalParams,
  TrackOperationResponse
} from "./models";

export class ApplicationInsightsClient extends ApplicationInsightsClientContext {
  /**
   * Initializes a new instance of the ApplicationInsightsClient class.
   * @param options The parameter options
   */
  constructor(options?: ApplicationInsightsClientOptionalParams) {
    super(options);
  }

  /**
   * This operation sends a sequence of telemetry events that will be monitored by Azure Monitor.
   * @param body The list of telemetry events to track.
   * @param options The options parameters.
   */
  track(
    body: TelemetryItem[],
    options?: TrackOptionalParams
  ): Promise<TrackOperationResponse> {
    return this.sendOperationRequest({ body, options }, trackOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const trackOperationSpec: coreClient.OperationSpec = {
  path: "/track",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.TrackResponse
    },
    206: {
      bodyMapper: Mappers.TrackResponse
    },
    400: {
      bodyMapper: Mappers.TrackResponse,
      isError: true
    },
    402: {
      bodyMapper: Mappers.TrackResponse,
      isError: true
    },
    429: {
      bodyMapper: Mappers.TrackResponse,
      isError: true
    },
    500: {
      bodyMapper: Mappers.TrackResponse,
      isError: true
    },
    503: {
      bodyMapper: Mappers.TrackResponse,
      isError: true
    }
  },
  requestBody: Parameters.body,
  urlParameters: [Parameters.host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
