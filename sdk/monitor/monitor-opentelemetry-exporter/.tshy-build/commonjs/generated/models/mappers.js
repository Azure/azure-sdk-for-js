"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestData = exports.RemoteDependencyData = exports.PageViewPerfData = exports.PageViewData = exports.MetricsData = exports.MessageData = exports.TelemetryExceptionData = exports.TelemetryEventData = exports.AvailabilityData = exports.StackFrame = exports.TelemetryExceptionDetails = exports.MetricDataPoint = exports.TelemetryErrorDetails = exports.TrackResponse = exports.MonitorDomain = exports.MonitorBase = exports.TelemetryItem = void 0;
exports.TelemetryItem = {
    type: {
        name: "Composite",
        className: "TelemetryItem",
        modelProperties: {
            version: {
                defaultValue: 1,
                serializedName: "ver",
                type: {
                    name: "Number",
                },
            },
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            time: {
                serializedName: "time",
                required: true,
                type: {
                    name: "DateTime",
                },
            },
            sampleRate: {
                defaultValue: 100,
                serializedName: "sampleRate",
                type: {
                    name: "Number",
                },
            },
            sequence: {
                constraints: {
                    MaxLength: 64,
                },
                serializedName: "seq",
                type: {
                    name: "String",
                },
            },
            instrumentationKey: {
                serializedName: "iKey",
                type: {
                    name: "String",
                },
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } },
                },
            },
            data: {
                serializedName: "data",
                type: {
                    name: "Composite",
                    className: "MonitorBase",
                },
            },
        },
    },
};
exports.MonitorBase = {
    type: {
        name: "Composite",
        className: "MonitorBase",
        modelProperties: {
            baseType: {
                serializedName: "baseType",
                type: {
                    name: "String",
                },
            },
            baseData: {
                serializedName: "baseData",
                type: {
                    name: "Composite",
                    className: "MonitorDomain",
                },
            },
        },
    },
};
exports.MonitorDomain = {
    type: {
        name: "Composite",
        className: "MonitorDomain",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: {
            version: {
                defaultValue: 2,
                serializedName: "ver",
                required: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.TrackResponse = {
    type: {
        name: "Composite",
        className: "TrackResponse",
        modelProperties: {
            itemsReceived: {
                serializedName: "itemsReceived",
                type: {
                    name: "Number",
                },
            },
            itemsAccepted: {
                serializedName: "itemsAccepted",
                type: {
                    name: "Number",
                },
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TelemetryErrorDetails",
                        },
                    },
                },
            },
        },
    },
};
exports.TelemetryErrorDetails = {
    type: {
        name: "Composite",
        className: "TelemetryErrorDetails",
        modelProperties: {
            index: {
                serializedName: "index",
                type: {
                    name: "Number",
                },
            },
            statusCode: {
                serializedName: "statusCode",
                type: {
                    name: "Number",
                },
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.MetricDataPoint = {
    type: {
        name: "Composite",
        className: "MetricDataPoint",
        modelProperties: {
            namespace: {
                constraints: {
                    MaxLength: 256,
                },
                serializedName: "ns",
                type: {
                    name: "String",
                },
            },
            name: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            },
            dataPointType: {
                serializedName: "kind",
                type: {
                    name: "String",
                },
            },
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Number",
                },
            },
            count: {
                serializedName: "count",
                nullable: true,
                type: {
                    name: "Number",
                },
            },
            min: {
                serializedName: "min",
                nullable: true,
                type: {
                    name: "Number",
                },
            },
            max: {
                serializedName: "max",
                nullable: true,
                type: {
                    name: "Number",
                },
            },
            stdDev: {
                serializedName: "stdDev",
                nullable: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.TelemetryExceptionDetails = {
    type: {
        name: "Composite",
        className: "TelemetryExceptionDetails",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "Number",
                },
            },
            outerId: {
                serializedName: "outerId",
                type: {
                    name: "Number",
                },
            },
            typeName: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "typeName",
                type: {
                    name: "String",
                },
            },
            message: {
                constraints: {
                    MaxLength: 32768,
                },
                serializedName: "message",
                required: true,
                type: {
                    name: "String",
                },
            },
            hasFullStack: {
                defaultValue: true,
                serializedName: "hasFullStack",
                type: {
                    name: "Boolean",
                },
            },
            stack: {
                constraints: {
                    MaxLength: 32768,
                },
                serializedName: "stack",
                type: {
                    name: "String",
                },
            },
            parsedStack: {
                serializedName: "parsedStack",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StackFrame",
                        },
                    },
                },
            },
        },
    },
};
exports.StackFrame = {
    type: {
        name: "Composite",
        className: "StackFrame",
        modelProperties: {
            level: {
                serializedName: "level",
                required: true,
                type: {
                    name: "Number",
                },
            },
            method: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "method",
                required: true,
                type: {
                    name: "String",
                },
            },
            assembly: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "assembly",
                type: {
                    name: "String",
                },
            },
            fileName: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "fileName",
                type: {
                    name: "String",
                },
            },
            line: {
                serializedName: "line",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.AvailabilityData = {
    type: {
        name: "Composite",
        className: "AvailabilityData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { id: {
                constraints: {
                    MaxLength: 512,
                },
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            }, name: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            }, duration: {
                serializedName: "duration",
                required: true,
                type: {
                    name: "String",
                },
            }, success: {
                serializedName: "success",
                required: true,
                type: {
                    name: "Boolean",
                },
            }, runLocation: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "runLocation",
                type: {
                    name: "String",
                },
            }, message: {
                constraints: {
                    MaxLength: 8192,
                },
                serializedName: "message",
                type: {
                    name: "String",
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            }, measurements: {
                serializedName: "measurements",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Number" } },
                },
            } }),
    },
};
exports.TelemetryEventData = {
    type: {
        name: "Composite",
        className: "TelemetryEventData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { name: {
                constraints: {
                    MaxLength: 512,
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            }, measurements: {
                serializedName: "measurements",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Number" } },
                },
            } }),
    },
};
exports.TelemetryExceptionData = {
    type: {
        name: "Composite",
        className: "TelemetryExceptionData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { exceptions: {
                serializedName: "exceptions",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TelemetryExceptionDetails",
                        },
                    },
                },
            }, severityLevel: {
                serializedName: "severityLevel",
                nullable: true,
                type: {
                    name: "String",
                },
            }, problemId: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "problemId",
                type: {
                    name: "String",
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            }, measurements: {
                serializedName: "measurements",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Number" } },
                },
            } }),
    },
};
exports.MessageData = {
    type: {
        name: "Composite",
        className: "MessageData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { message: {
                constraints: {
                    MaxLength: 32768,
                },
                serializedName: "message",
                required: true,
                type: {
                    name: "String",
                },
            }, severityLevel: {
                serializedName: "severityLevel",
                type: {
                    name: "String",
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            }, measurements: {
                serializedName: "measurements",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Number" } },
                },
            } }),
    },
};
exports.MetricsData = {
    type: {
        name: "Composite",
        className: "MetricsData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { metrics: {
                serializedName: "metrics",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricDataPoint",
                        },
                    },
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            } }),
    },
};
exports.PageViewData = {
    type: {
        name: "Composite",
        className: "PageViewData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { id: {
                constraints: {
                    MaxLength: 512,
                },
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            }, name: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            }, url: {
                constraints: {
                    MaxLength: 2048,
                },
                serializedName: "url",
                type: {
                    name: "String",
                },
            }, duration: {
                serializedName: "duration",
                type: {
                    name: "String",
                },
            }, referredUri: {
                constraints: {
                    MaxLength: 2048,
                },
                serializedName: "referredUri",
                type: {
                    name: "String",
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            }, measurements: {
                serializedName: "measurements",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Number" } },
                },
            } }),
    },
};
exports.PageViewPerfData = {
    type: {
        name: "Composite",
        className: "PageViewPerfData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { id: {
                constraints: {
                    MaxLength: 512,
                },
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            }, name: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            }, url: {
                constraints: {
                    MaxLength: 2048,
                },
                serializedName: "url",
                type: {
                    name: "String",
                },
            }, duration: {
                serializedName: "duration",
                type: {
                    name: "String",
                },
            }, perfTotal: {
                serializedName: "perfTotal",
                type: {
                    name: "String",
                },
            }, networkConnect: {
                serializedName: "networkConnect",
                type: {
                    name: "String",
                },
            }, sentRequest: {
                serializedName: "sentRequest",
                type: {
                    name: "String",
                },
            }, receivedResponse: {
                serializedName: "receivedResponse",
                type: {
                    name: "String",
                },
            }, domProcessing: {
                serializedName: "domProcessing",
                type: {
                    name: "String",
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            }, measurements: {
                serializedName: "measurements",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Number" } },
                },
            } }),
    },
};
exports.RemoteDependencyData = {
    type: {
        name: "Composite",
        className: "RemoteDependencyData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { id: {
                constraints: {
                    MaxLength: 512,
                },
                serializedName: "id",
                type: {
                    name: "String",
                },
            }, name: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "name",
                required: true,
                type: {
                    name: "String",
                },
            }, resultCode: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "resultCode",
                type: {
                    name: "String",
                },
            }, data: {
                constraints: {
                    MaxLength: 8192,
                },
                serializedName: "data",
                type: {
                    name: "String",
                },
            }, type: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "type",
                type: {
                    name: "String",
                },
            }, target: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "target",
                type: {
                    name: "String",
                },
            }, duration: {
                serializedName: "duration",
                required: true,
                type: {
                    name: "String",
                },
            }, success: {
                defaultValue: true,
                serializedName: "success",
                type: {
                    name: "Boolean",
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            }, measurements: {
                serializedName: "measurements",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Number" } },
                },
            } }),
    },
};
exports.RequestData = {
    type: {
        name: "Composite",
        className: "RequestData",
        additionalProperties: { type: { name: "Object" } },
        modelProperties: Object.assign(Object.assign({}, exports.MonitorDomain.type.modelProperties), { id: {
                constraints: {
                    MaxLength: 512,
                },
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            }, name: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "name",
                type: {
                    name: "String",
                },
            }, duration: {
                serializedName: "duration",
                required: true,
                type: {
                    name: "String",
                },
            }, success: {
                defaultValue: true,
                serializedName: "success",
                required: true,
                type: {
                    name: "Boolean",
                },
            }, responseCode: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "responseCode",
                required: true,
                type: {
                    name: "String",
                },
            }, source: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "source",
                type: {
                    name: "String",
                },
            }, url: {
                constraints: {
                    MaxLength: 2048,
                },
                serializedName: "url",
                type: {
                    name: "String",
                },
            }, properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" }, constraints: { MaxLength: 8192 } },
                },
            }, measurements: {
                serializedName: "measurements",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Number" } },
                },
            } }),
    },
};
//# sourceMappingURL=mappers.js.map