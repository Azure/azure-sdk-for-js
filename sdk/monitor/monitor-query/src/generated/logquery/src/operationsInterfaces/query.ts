/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  QueryGetOptionalParams,
  QueryGetResponse,
  QueryBody,
  QueryExecuteOptionalParams,
  QueryExecuteResponse,
  BatchRequest,
  QueryBatchOptionalParams,
  QueryBatchResponse
} from "../models";

/** Interface representing a Query. */
export interface Query {
  /**
   * Executes an Analytics query for data
   * @param workspaceId ID of the workspace. This is Workspace ID from the Properties blade in the Azure
   *                    portal.
   * @param query The Analytics query. Learn more about the [Analytics query
   *              syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)
   * @param options The options parameters.
   */
  get(
    workspaceId: string,
    query: string,
    options?: QueryGetOptionalParams
  ): Promise<QueryGetResponse>;
  /**
   * Executes an Analytics query for data.
   * [Here](https://dev.loganalytics.io/documentation/Using-the-API) is an example for using POST with an
   * Analytics query.
   * @param workspaceId ID of the workspace. This is Workspace ID from the Properties blade in the Azure
   *                    portal.
   * @param body The Analytics query. Learn more about the [Analytics query
   *             syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)
   * @param options The options parameters.
   */
  execute(
    workspaceId: string,
    body: QueryBody,
    options?: QueryExecuteOptionalParams
  ): Promise<QueryExecuteResponse>;
  /**
   * Executes a batch of Analytics queries for data.
   * [Here](https://dev.loganalytics.io/documentation/Using-the-API) is an example for using POST with an
   * Analytics query.
   * @param body The batch request body
   * @param options The options parameters.
   */
  batch(
    body: BatchRequest,
    options?: QueryBatchOptionalParams
  ): Promise<QueryBatchResponse>;
}
