{"version":3,"file":"query.js","sourceRoot":"","sources":["../../../../../../src/generated/logquery/src/operations/query.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Query } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { AzureLogAnalyticsContext } from \"../azureLogAnalyticsContext.js\";\nimport {\n  QueryGetOptionalParams,\n  QueryGetResponse,\n  QueryBody,\n  QueryExecuteOptionalParams,\n  QueryExecuteResponse,\n  QueryResourceGetOptionalParams,\n  QueryResourceGetResponse,\n  QueryResourceExecuteOptionalParams,\n  QueryResourceExecuteResponse,\n  BatchRequest,\n  QueryBatchOptionalParams,\n  QueryBatchResponse,\n  QueryResourceGetXmsOptionalParams,\n  QueryResourceGetXmsResponse,\n  QueryResourceExecuteXmsOptionalParams,\n  QueryResourceExecuteXmsResponse\n} from \"../models/index.js\";\n\n/** Class containing Query operations. */\nexport class QueryImpl implements Query {\n  private readonly client: AzureLogAnalyticsContext;\n\n  /**\n   * Initialize a new instance of the class Query class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureLogAnalyticsContext) {\n    this.client = client;\n  }\n\n  /**\n   * Executes an Analytics query for data\n   * @param workspaceId Primary Workspace ID of the query. This is the Workspace ID from the Properties\n   *                    blade in the Azure portal.\n   * @param query The Analytics query. Learn more about the [Analytics query\n   *              syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  get(\n    workspaceId: string,\n    query: string,\n    options?: QueryGetOptionalParams\n  ): Promise<QueryGetResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceId, query, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format) is an example for\n   * using POST with an Analytics query.\n   * @param workspaceId Primary Workspace ID of the query. This is the Workspace ID from the Properties\n   *                    blade in the Azure portal.\n   * @param body The Analytics query. Learn more about the [Analytics query\n   *             syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  execute(\n    workspaceId: string,\n    body: QueryBody,\n    options?: QueryExecuteOptionalParams\n  ): Promise<QueryExecuteResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceId, body, options },\n      executeOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries) is an\n   * example for using POST with an Analytics query.\n   * @param resourceId The identifier of the resource.\n   * @param query The Analytics query. Learn more about the [Analytics query\n   *              syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  resourceGet(\n    resourceId: string,\n    query: string,\n    options?: QueryResourceGetOptionalParams\n  ): Promise<QueryResourceGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, query, options },\n      resourceGetOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries) is an\n   * example for using POST with an Analytics query.\n   * @param resourceId The identifier of the resource.\n   * @param body The Analytics query. Learn more about the [Analytics query\n   *             syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  resourceExecute(\n    resourceId: string,\n    body: QueryBody,\n    options?: QueryResourceExecuteOptionalParams\n  ): Promise<QueryResourceExecuteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, body, options },\n      resourceExecuteOperationSpec\n    );\n  }\n\n  /**\n   * Executes a batch of Analytics queries for data.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/batch-queries) is an example for\n   * using POST with an Analytics query.\n   * @param body The batch request body\n   * @param options The options parameters.\n   */\n  batch(\n    body: BatchRequest,\n    options?: QueryBatchOptionalParams\n  ): Promise<QueryBatchResponse> {\n    return this.client.sendOperationRequest(\n      { body, options },\n      batchOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries) is an\n   * example for using POST with an Analytics query.\n   * @param resourceId The identifier of the resource.\n   * @param query The Analytics query. Learn more about the [Analytics query\n   *              syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  resourceGetXms(\n    resourceId: string,\n    query: string,\n    options?: QueryResourceGetXmsOptionalParams\n  ): Promise<QueryResourceGetXmsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, query, options },\n      resourceGetXmsOperationSpec\n    );\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries) is an\n   * example for using POST with an Analytics query.\n   * @param resourceId The identifier of the resource.\n   * @param body The Analytics query. Learn more about the [Analytics query\n   *             syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)\n   * @param options The options parameters.\n   */\n  resourceExecuteXms(\n    resourceId: string,\n    body: QueryBody,\n    options?: QueryResourceExecuteXmsOptionalParams\n  ): Promise<QueryResourceExecuteXmsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, body, options },\n      resourceExecuteXmsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/workspaces/{workspaceId}/query\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.query, Parameters.timespan],\n  urlParameters: [Parameters.$host, Parameters.workspaceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst executeOperationSpec: coreClient.OperationSpec = {\n  path: \"/workspaces/{workspaceId}/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host, Parameters.workspaceId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.prefer\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst resourceGetOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/query\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.query, Parameters.timespan],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst resourceExecuteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.prefer\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst batchOperationSpec: coreClient.OperationSpec = {\n  path: \"/$batch\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BatchResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst resourceGetXmsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/query\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.query, Parameters.timespan],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst resourceExecuteXmsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/query\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueryResults\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.prefer\n  ],\n  mediaType: \"json\",\n  serializer\n};\n"]}