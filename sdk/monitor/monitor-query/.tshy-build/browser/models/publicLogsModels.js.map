{"version":3,"file":"publicLogsModels.js","sourceRoot":"","sources":["../../../src/models/publicLogsModels.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AA6DlC;;GAEG;AACH,MAAM,CAAN,IAAY,qBAOX;AAPD,WAAY,qBAAqB;IAC/B,qIAAqI;IACrI,0DAAiC,CAAA;IACjC,wGAAwG;IACxG,4CAAmB,CAAA;IACnB,iHAAiH;IACjH,4CAAmB,CAAA;AACrB,CAAC,EAPW,qBAAqB,KAArB,qBAAqB,QAOhC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationOptions } from \"@azure/core-client\";\nimport type { LogsColumnType } from \"../generated/logquery/src/index.js\";\nimport type { QueryTimeInterval } from \"./timeInterval.js\";\n\n// https://dev.loganalytics.io/documentation/Using-the-API/RequestOptions\n// https://dev.loganalytics.io/documentation/Using-the-API/Timeouts\n\n/**\n * Options for querying logs.\n */\nexport interface LogsQueryOptions extends OperationOptions {\n  /**\n   * A list of workspaces that are included in the query, except for the one set as the `workspaceId` parameter\n   * These may consist of the following identifier formats:\n   * - Qualified workspace names\n   * - Workspace IDs\n   * - Azure resource IDs\n   */\n  additionalWorkspaces?: string[];\n  /**\n   * The maximum amount of time the server will spend processing the query.\n   * Default: 180 seconds (3 minutes), maximum allowed is 600 seconds (10 minutes)\n   */\n  serverTimeoutInSeconds?: number;\n\n  /**\n   * Results will also include statistics about the query.\n   */\n  includeQueryStatistics?: boolean;\n\n  /**\n   * Results will also include visualization information, in JSON format.\n   */\n  includeVisualization?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface QueryStatistics {\n  query?: {\n    executionTime?: number;\n    [key: string]: unknown;\n  };\n  [key: string]: unknown;\n}\n\n/** The code and message for an error. */\nexport interface LogsErrorInfo extends Error {\n  /** A machine readable error code. */\n  code: string;\n}\n\n/**\n * Tables and statistic results from a logs query.\n */\n\nexport type LogsQueryResult = LogsQuerySuccessfulResult | LogsQueryPartialResult;\n\n/** Indicates if a query succeeded or failed or partially failed.\n * Represented by PartialFailure\" | \"Success\" | \"Failure\".\n */\nexport enum LogsQueryResultStatus {\n  /** Represents Partial Failure scenario where partial data and errors of type {@link LogsQueryPartialResult} is returned for query */\n  PartialFailure = \"PartialFailure\",\n  /** Represents Failure scenario where only error of type {@link LogsQueryError} is returned for query */\n  Failure = \"Failure\",\n  /** Represents Success scenario where all data of type {@link LogsQuerySuccessfulResult} is returned for query */\n  Success = \"Success\",\n}\n\n/** Result type for Success Scenario for logs query workspace and query batch operations. */\nexport interface LogsQuerySuccessfulResult {\n  /** Populated results from the query. */\n  tables: LogsTable[];\n  /** Indicates that the query succeeded */\n  status: LogsQueryResultStatus.Success;\n  /** Statistics represented in JSON format. */\n  statistics?: Record<string, unknown>;\n  /** Visualization data in JSON format. */\n  visualization?: Record<string, unknown>;\n}\n\n/** Result type for Partial Failure Scenario for logs queryWorkspace and queryBatch operations. */\nexport interface LogsQueryPartialResult {\n  /** Populated results from the query. */\n  partialTables: LogsTable[];\n  /** error information for partial errors or failed queries */\n  partialError: LogsErrorInfo;\n  /** Indicates that the query partially failed.*/\n  status: LogsQueryResultStatus.PartialFailure;\n  /** Statistics represented in JSON format. */\n  statistics?: Record<string, unknown>;\n  /** Visualization data in JSON format. */\n  visualization?: Record<string, unknown>;\n}\n\n/** Result type for Failure Scenario representing error for logs queryWorkspace and queryBatch operations. */\nexport interface LogsQueryError extends Error {\n  /** A machine readable error code. */\n  code: string;\n  /** Indicates that the query failed */\n  status: LogsQueryResultStatus.Failure;\n}\n\n/** Configurable HTTP request settings for the Logs query batch operation. */\nexport interface LogsQueryBatchOptions extends OperationOptions {}\n\n/** The Kusto query. For more information about Kusto, see [Kusto query overview](https://learn.microsoft.com/azure/data-explorer/kusto/query). */\n// NOTE: 'id' is added automatically by our LogsQueryClient.\nexport interface QueryBatch {\n  /** The workspace for this query. */\n  workspaceId: string;\n\n  // TODO: having both this and the workspaceId field co-exist on the same model seems really\n  // confusing. However, this is similar to what we're offering in other languages as well.\n\n  /** The query to execute. */\n  query: string;\n  /** The timespan over which to query data. This timespan is applied in addition to any that are specified in the query expression. */\n  timespan: QueryTimeInterval;\n  /**\n   * A list of workspaces that are included in the query, except for the one set as the `workspaceId` parameter\n   * These may consist of the following identifier formats:\n   * - Qualified workspace names\n   * - Workspace IDs\n   * - Azure resource IDs\n   */\n  additionalWorkspaces?: string[];\n  /**\n   * The maximum amount of time the server will spend processing the query.\n   * Default: 180 seconds (3 minutes), maximum allowed is 600 seconds (10 minutes)\n   */\n  serverTimeoutInSeconds?: number;\n\n  /**\n   * Results will also include statistics about the query.\n   */\n  includeQueryStatistics?: boolean;\n\n  /**\n   * Results will also include visualization information, in JSON format.\n   */\n  includeVisualization?: boolean;\n}\n\n/** Results for a batch query. Each result in the array is either of type\n *  {@link LogsQueryError} or {@link LogsQueryPartialResult} or {@link LogsQuerySuccessfulResult}\n */\nexport type LogsQueryBatchResult = Array<\n  LogsQueryPartialResult | LogsQuerySuccessfulResult | LogsQueryError\n>;\n\n/** Contains the columns and rows for one table in a query response. */\nexport interface LogsTable {\n  /** The name of the table. */\n  name: string;\n  /** The list of columns in this table. */\n  columnDescriptors: LogsColumn[];\n  /** The two dimensional array of results from this query indexed by row and column. */\n  rows: (Date | string | number | Record<string, unknown> | boolean)[][];\n}\n\n/** A column in a table. */\nexport interface LogsColumn {\n  /** The name of this column. */\n  name?: string;\n  /** The data type of this column.\n   * Defines values for LogsColumnType.\n   * {@link KnownLogsColumnType} can be used interchangeably with LogsColumnType,\n   *  this enum contains the known values that the service supports.\n   * ### Known values supported by the service\n   * **bool**\n   * **datetime**\n   * **dynamic**\n   * **int**\n   * **long**\n   * **real**\n   * **string**\n   * **guid**\n   * **decimal**\n   * **timespan**\n   */\n  type?: LogsColumnType;\n}\n"]}