{"version":3,"file":"azureLogAnalyticsContext.js","sourceRoot":"","sources":["../../../../../src/generated/logquery/src/azureLogAnalyticsContext.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAEH,uEAAiD;AAGjD,gBAAgB;AAChB,MAAa,wBAAyB,SAAQ,UAAU,CAAC,aAAa;IAGpE;;;OAGG;IACH,YAAY,OAAyC;QACnD,0CAA0C;QAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,GAAG,EAAE,CAAC;QACf,CAAC;QACD,MAAM,QAAQ,GAAoC;YAChD,kBAAkB,EAAE,iCAAiC;SACtD,CAAC;QAEF,MAAM,cAAc,GAAG,kCAAkC,CAAC;QAC1D,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;YAClE,CAAC,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,IAAI,cAAc,EAAE;YACjE,CAAC,CAAC,GAAG,cAAc,EAAE,CAAC;QAE1B,MAAM,mBAAmB,iDACpB,QAAQ,GACR,OAAO,KACV,gBAAgB,EAAE;gBAChB,eAAe;aAChB,EACD,OAAO,EAAE,OAAO,CAAC,QAAQ,IAAI,gCAAgC,GAC9D,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAE3B,0CAA0C;QAC1C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,gCAAgC,CAAC;IACjE,CAAC;CACF;AAnCD,4DAmCC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport { AzureLogAnalyticsOptionalParams } from \"./models/index.js\";\n\n/** @internal */\nexport class AzureLogAnalyticsContext extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the AzureLogAnalyticsContext class.\n   * @param options The parameter options\n   */\n  constructor(options?: AzureLogAnalyticsOptionalParams) {\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AzureLogAnalyticsOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-monitor-log-query/1.3.2`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://api.loganalytics.io/v1\"\n    };\n    super(optionsWithDefaults);\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://api.loganalytics.io/v1\";\n  }\n}\n"]}