"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.apiVersion = exports.rollupby = exports.filter = exports.orderby = exports.top = exports.aggregation = exports.metricnames = exports.metricnamespace = exports.interval = exports.endtime = exports.starttime = exports.subscriptionId = exports.endpoint = exports.accept = exports.batchRequest = exports.contentType = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
exports.batchRequest = {
    parameterPath: "batchRequest",
    mapper: mappers_js_1.ResourceIdList
};
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
exports.subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "Uuid"
        }
    }
};
exports.starttime = {
    parameterPath: ["options", "starttime"],
    mapper: {
        serializedName: "starttime",
        type: {
            name: "String"
        }
    }
};
exports.endtime = {
    parameterPath: ["options", "endtime"],
    mapper: {
        serializedName: "endtime",
        type: {
            name: "String"
        }
    }
};
exports.interval = {
    parameterPath: ["options", "interval"],
    mapper: {
        defaultValue: "PT1M",
        serializedName: "interval",
        type: {
            name: "String"
        }
    }
};
exports.metricnamespace = {
    parameterPath: "metricnamespace",
    mapper: {
        serializedName: "metricnamespace",
        required: true,
        type: {
            name: "String"
        }
    }
};
exports.metricnames = {
    parameterPath: "metricnames",
    mapper: {
        serializedName: "metricnames",
        required: true,
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: "CSV"
};
exports.aggregation = {
    parameterPath: ["options", "aggregation"],
    mapper: {
        serializedName: "aggregation",
        type: {
            name: "String"
        }
    }
};
exports.top = {
    parameterPath: ["options", "top"],
    mapper: {
        serializedName: "top",
        type: {
            name: "Number"
        }
    }
};
exports.orderby = {
    parameterPath: ["options", "orderby"],
    mapper: {
        serializedName: "orderby",
        type: {
            name: "String"
        }
    }
};
exports.filter = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "filter",
        type: {
            name: "String"
        }
    }
};
exports.rollupby = {
    parameterPath: ["options", "rollupby"],
    mapper: {
        serializedName: "rollupby",
        type: {
            name: "String"
        }
    }
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        serializedName: "api-version",
        required: true,
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map