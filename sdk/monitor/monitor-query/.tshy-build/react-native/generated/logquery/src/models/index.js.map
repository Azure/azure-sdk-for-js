{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/generated/logquery/src/models/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AA8bH,uEAAuE;AACvE,MAAM,CAAN,IAAY,mBAWX;AAXD,WAAY,mBAAmB;IAC7B,oCAAa,CAAA;IACb,4CAAqB,CAAA;IACrB,0CAAmB,CAAA;IACnB,kCAAW,CAAA;IACX,oCAAa,CAAA;IACb,oCAAa,CAAA;IACb,wCAAiB,CAAA;IACjB,oCAAa,CAAA;IACb,0CAAmB,CAAA;IACnB,4CAAqB,CAAA;AACvB,CAAC,EAXW,mBAAmB,KAAnB,mBAAmB,QAW9B;AAoBD,+EAA+E;AAC/E,MAAM,CAAN,IAAY,2BAWX;AAXD,WAAY,2BAA2B;IACrC,4CAAa,CAAA;IACb,oDAAqB,CAAA;IACrB,kDAAmB,CAAA;IACnB,0CAAW,CAAA;IACX,4CAAa,CAAA;IACb,4CAAa,CAAA;IACb,gDAAiB,CAAA;IACjB,4CAAa,CAAA;IACb,kDAAmB,CAAA;IACnB,oDAAqB,CAAA;AACvB,CAAC,EAXW,2BAA2B,KAA3B,2BAA2B,QAWtC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Contains the tables, columns & rows resulting from a query. */\nexport interface QueryResults {\n  /** The results of the query in tabular format. */\n  tables: Table[];\n  /** Statistics represented in JSON format. */\n  statistics?: Record<string, unknown>;\n  /** Visualization data in JSON format. */\n  render?: Record<string, unknown>;\n  /** The code and message for an error. */\n  error?: ErrorInfo;\n}\n\n/** Contains the columns and rows for one table in a query response. */\nexport interface Table {\n  /** The name of the table. */\n  name: string;\n  /** The list of columns in this table. */\n  columns: Column[];\n  /** The resulting rows from this query. */\n  rows: Record<string, unknown>[][];\n}\n\n/** A column in a table. */\nexport interface Column {\n  /** The name of this column. */\n  name?: string;\n  /** The data type of this column. */\n  type?: LogsColumnType;\n}\n\n/** The code and message for an error. */\nexport interface ErrorInfo {\n  /** A machine readable error code. */\n  code: string;\n  /** A human readable error message. */\n  message: string;\n  /** error details. */\n  details?: ErrorDetail[];\n  /** Inner error details if they exist. */\n  innerError?: ErrorInfo;\n  /** Additional properties that can be provided on the error info object */\n  additionalProperties?: Record<string, unknown>;\n}\n\n/** Error details. */\nexport interface ErrorDetail {\n  /** The error's code. */\n  code: string;\n  /** A human readable error message. */\n  message: string;\n  /** Indicates which property in the request is responsible for the error. */\n  target?: string;\n  /** Indicates which value in 'target' is responsible for the error. */\n  value?: string;\n  /** Indicates resources which were responsible for the error. */\n  resources?: string[];\n  /** Additional properties that can be provided on the error details object */\n  additionalProperties?: Record<string, unknown>;\n}\n\n/** Contains details when the response code indicates an error. */\nexport interface ErrorResponse {\n  /** The error details. */\n  error: ErrorInfo;\n}\n\n/** The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/) */\nexport interface QueryBody {\n  /** The query to execute. */\n  query: string;\n  /** Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression. */\n  timespan?: string;\n  /** A list of workspaces to query in addition to the primary workspace. */\n  workspaces?: string[];\n}\n\n/** The metadata response for the app, including available tables, etc. */\nexport interface MetadataResults {\n  /** The list of categories that are referenced in this metadata response. */\n  categories?: MetadataCategory[];\n  /** The list of resource types that are referenced in this metadata response. */\n  resourceTypes?: MetadataResourceType[];\n  /** The list of Log Analytics solutions installed on the workspace. */\n  solutions?: MetadataSolution[];\n  /** The list of tables and columns that comprise the schema of the workspace. */\n  tables?: MetadataTable[];\n  /** The list of functions stored on the workspace, or introduced by solutions etc. */\n  functions?: MetadataFunction[];\n  /** The list of saved queries stored on the workspace, or introduced by solutions, resource types, etc. */\n  queries?: MetadataQuery[];\n  /** The list of Application Insights apps that were referenced in the metadata request. */\n  applications?: MetadataApplication[];\n  /** The list of Log Analytics workspaces that were referenced in the metadata request. */\n  workspaces?: MetadataWorkspace[];\n  /** The list of Azure resources that were referenced in the metadata request. */\n  resources?: any[];\n  /** The list of permission rules that affected the metadata request. */\n  permissions?: MetadataPermissions[];\n}\n\n/** Categories are used to group other metadata entities. */\nexport interface MetadataCategory {\n  /** The ID of the category */\n  id: string;\n  /** The display name of the category */\n  displayName: string;\n  /** The description of the category */\n  description?: string;\n  /** The related metadata items for the category */\n  related?: MetadataCategoryRelated;\n}\n\n/** The related metadata items for the category */\nexport interface MetadataCategoryRelated {\n  /** The tables related to the category */\n  tables?: string[];\n  /** The functions related to the category */\n  functions?: string[];\n  /** The resource types related to the category */\n  resourceTypes?: string[];\n  /** The saved queries related to the category */\n  queries?: string[];\n  /** The Log Analytics solutions related to the category */\n  solutions?: string[];\n}\n\n/** Metadata about types of Azure resources, containing relevant tables, functions, etc. */\nexport interface MetadataResourceType {\n  /** The ID of the resource-type */\n  id: string;\n  /** The type of the resource-type */\n  type: string;\n  /** The display name of the resource-type */\n  displayName?: string;\n  /** The description of the resource-type */\n  description?: string;\n  /** The user-defined labels of the resource-type */\n  labels?: string[];\n  /** The tags associated with the resource-type */\n  tags?: Record<string, unknown>;\n  /** The properties of the resource-type */\n  properties?: Record<string, unknown>;\n  /** The related metadata items for the resource-type */\n  related?: MetadataResourceTypeRelated;\n}\n\n/** The related metadata items for the resource-type */\nexport interface MetadataResourceTypeRelated {\n  /** The tables related to the resource-type */\n  tables?: string[];\n  /** The functions related to the resource-type */\n  functions?: string[];\n  /** The categories related to the resource-type */\n  categories?: string[];\n  /** The queries related to the resource-type */\n  queries?: string[];\n  /** The Log Analytics workspaces related to the resource-type */\n  workspaces?: string[];\n  /** The Azure resources related to the resource-type */\n  resources?: string[];\n}\n\n/** Solutions can group tables and functions that are associated with a certain Azure Log Analytics offering. */\nexport interface MetadataSolution {\n  /** The ID of the Log Analytics solution */\n  id: string;\n  /** The name of the Log Analytics solution */\n  name: string;\n  /** The display name of the Log Analytics solution */\n  displayName?: string;\n  /** The description of the Log Analytics solution */\n  description?: string;\n  /** The tags that are associated with the Log Analytics solution */\n  tags?: Record<string, unknown>;\n  /** The properties of the Log Analytics solution */\n  properties?: Record<string, unknown>;\n  /** The related metadata items for the Log Analytics solution */\n  related: MetadataSolutionRelated;\n}\n\n/** The related metadata items for the Log Analytics solution */\nexport interface MetadataSolutionRelated {\n  /** The tables related to the Log Analytics solution */\n  tables: string[];\n  /** The functions related to the Log Analytics solution */\n  functions?: string[];\n  /** The categories related to the Log Analytics solution */\n  categories?: string[];\n  /** The saved queries related to the Log Analytics solution */\n  queries?: string[];\n  /** The Workspaces referenced in the metadata request that are related to the Log Analytics solution */\n  workspaces?: string[];\n}\n\n/** Tables are part of the workspace schema, and contain a list of columns and a reference to other relevant metadata items. */\nexport interface MetadataTable {\n  /** The ID of the table */\n  id: string;\n  /** The name of the table */\n  name: string;\n  /** The description of the table */\n  description?: string;\n  /** The column associated with the timespan query parameter for the table */\n  timespanColumn?: string;\n  /** The user defined labels of the table */\n  labels?: string[];\n  /** The tags associated with the table */\n  tags?: Record<string, unknown>;\n  /** The properties of the table */\n  properties?: Record<string, unknown>;\n  /** The list of columns defined on the table */\n  columns?: MetadataTableColumnsItem[];\n  /** The related metadata items for the table */\n  related?: MetadataTableRelated;\n}\n\nexport interface MetadataTableColumnsItem {\n  /** The name of the column */\n  name: string;\n  /** The description of the column */\n  description?: string;\n  /** The data type of the column */\n  type: MetadataColumnDataType;\n  /** A flag indicating this column is a preferred facet */\n  isPreferredFacet?: boolean;\n  /** an indication of the source of the column, used only when multiple workspaces have conflicting definition for the column */\n  source?: Record<string, unknown>;\n}\n\n/** The related metadata items for the table */\nexport interface MetadataTableRelated {\n  /** The related categories for the table */\n  categories?: string[];\n  /** The related Log Analytics solutions for the table */\n  solutions?: string[];\n  /** The related resource types for the table */\n  resourceTypes?: string[];\n  /** The related Log Analytics workspaces for the table */\n  workspaces?: string[];\n  /** The related functions for the table */\n  functions?: string[];\n  /** The related saved queries for the table */\n  queries?: string[];\n}\n\n/** Functions are stored Kusto queries that can be specified as part of queries by using their name. */\nexport interface MetadataFunction {\n  /** The ID of the function. */\n  id: string;\n  /** The name of the function, to be used in queries. */\n  name: string;\n  /** The parameters/arguments of the function, if any. */\n  parameters?: string;\n  /** The display name of the function. */\n  displayName?: string;\n  /** The description of the function. */\n  description?: string;\n  /** The KQL body of the function. */\n  body: string;\n  /** The tags associated with the function. */\n  tags?: Record<string, unknown>;\n  /** The properties of the function. */\n  properties?: Record<string, unknown>;\n  /** The related metadata items for the function. */\n  related?: MetadataFunctionRelated;\n}\n\n/** The related metadata items for the function. */\nexport interface MetadataFunctionRelated {\n  /** The related tables for the function. */\n  tables?: string[];\n  /** The related Log Analytics solutions for the function. */\n  solutions?: string[];\n  /** The related resource types for the function. */\n  resourceTypes?: string[];\n  /** The related categories for the function. */\n  categories?: string[];\n  /** The related workspaces for the function. */\n  workspaces?: string[];\n}\n\n/** Queries are stored pieces of KQL, along with a list of relevant metadata items. */\nexport interface MetadataQuery {\n  /** The ID of the query. */\n  id: string;\n  /** The display name of the query. */\n  displayName?: string;\n  /** The description of the query. */\n  description?: string;\n  /** The KQL body of the query. */\n  body: string;\n  /** The user defined labels associated with the query. */\n  labels?: string[];\n  /** The tags associated with the query. */\n  tags?: Record<string, unknown>;\n  /** The properties of the query. */\n  properties?: Record<string, unknown>;\n  /** The related metadata items for the query. */\n  related?: MetadataQueryRelated;\n}\n\n/** The related metadata items for the query. */\nexport interface MetadataQueryRelated {\n  /** The related categories for the query. */\n  categories?: string[];\n  /** The related Log Analytics solutions for the query. */\n  solutions?: string[];\n  /** The related resource types for the query. */\n  resourceTypes?: string[];\n  /** The related tables for the query. */\n  tables?: string[];\n}\n\n/** Application Insights apps that were part of the metadata request and that the user has access to. */\nexport interface MetadataApplication {\n  /** The ID of the Application Insights app. */\n  id: string;\n  /** The ARM resource ID of the Application Insights app. */\n  resourceId: string;\n  /** The name of the Application Insights app. */\n  name: string;\n  /** The Azure region of the Application Insights app. */\n  region: string;\n  /** The related metadata items for the Application Insights app. */\n  related?: MetadataApplicationRelated;\n}\n\n/** The related metadata items for the Application Insights app. */\nexport interface MetadataApplicationRelated {\n  /** The related tables for the Application Insights app. */\n  tables?: string[];\n  /** The related functions for the Application Insights app. */\n  functions?: string[];\n}\n\n/** Log Analytics workspaces that were part of the metadata request and that the user has access to. */\nexport interface MetadataWorkspace {\n  /** The ID of the Log Analytics workspace. */\n  id: string;\n  /** The ARM resource ID of the Log Analytics workspace. */\n  resourceId: string;\n  /** The name of the Log Analytics workspace. */\n  name: string;\n  /** The Azure region of the Log Analytics workspace. */\n  region: string;\n  /** The related metadata items for the Log Analytics workspace. */\n  related?: MetadataWorkspaceRelated;\n}\n\n/** The related metadata items for the Log Analytics workspace. */\nexport interface MetadataWorkspaceRelated {\n  /** The related tables for the Log Analytics workspace. */\n  tables?: string[];\n  /** The related Log Analytics solutions for the Log Analytics workspace. */\n  solutions?: string[];\n  /** The related resource types for the Log Analytics workspace. */\n  resourceTypes?: string[];\n  /** The related functions for the Log Analytics workspace. */\n  functions?: string[];\n  /** The related Azure resources for the Log Analytics workspace. */\n  resources?: string[];\n}\n\n/** Permission information for the metadata call, includes apps/workspaces/resource the user didn't have access to. */\nexport interface MetadataPermissions {\n  /** The permission indication for the workspaces on the metadata request. */\n  workspaces: MetadataPermissionsWorkspacesItem[];\n  /** The permission indication for the Azure resources on the metadata request. */\n  resources?: MetadataPermissionsResourcesItem[];\n  /** The permission indication for the Application Insights apps on the metadata request. */\n  applications?: MetadataPermissionsApplicationsItem[];\n}\n\nexport interface MetadataPermissionsWorkspacesItem {\n  /** The resource ID on the permission indication. */\n  resourceId: string;\n  /** The list of tables that were denied access for the resource ID. */\n  denyTables?: string[];\n}\n\nexport interface MetadataPermissionsResourcesItem {\n  /** The resource ID on the permission indication. */\n  resourceId: string;\n  /** The list of tables that were denied access for the resource ID. */\n  denyTables?: string[];\n}\n\nexport interface MetadataPermissionsApplicationsItem {\n  /** The resource ID on the permission indication. */\n  resourceId: string;\n}\n\n/** An array of requests. */\nexport interface BatchRequest {\n  /** An single request in a batch. */\n  requests: BatchQueryRequest[];\n}\n\n/** An single request in a batch. */\nexport interface BatchQueryRequest {\n  /** Unique ID corresponding to each request in the batch. */\n  id: string;\n  /** Headers of the request. Can use prefer header to set server timeout and to query statistics and visualization information. */\n  headers?: { [propertyName: string]: string };\n  /** The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/) */\n  body: QueryBody;\n  /** The query path of a single request in a batch, defaults to /query */\n  path?: \"/query\";\n  /** The method of a single request in a batch, defaults to POST */\n  method?: \"POST\";\n  /** Primary Workspace ID of the query. This is the Workspace ID from the Properties blade in the Azure portal. */\n  workspace: string;\n}\n\n/** Response to a batch query. */\nexport interface BatchResponse {\n  /** An array of responses corresponding to each individual request in a batch. */\n  responses?: BatchQueryResponse[];\n}\n\n/** Contains the batch query response and the headers, id, and status of the request */\nexport interface BatchQueryResponse {\n  id?: string;\n  status?: number;\n  /** Contains the tables, columns & rows resulting from a query. */\n  body?: BatchQueryResults;\n  /** Dictionary of <string> */\n  headers?: { [propertyName: string]: string };\n}\n\n/** Contains the tables, columns & rows resulting from a query. */\nexport interface BatchQueryResults {\n  /** The results of the query in tabular format. */\n  tables?: Table[];\n  /** Statistics represented in JSON format. */\n  statistics?: Record<string, unknown>;\n  /** Visualization data in JSON format. */\n  render?: Record<string, unknown>;\n  /** The code and message for an error. */\n  error?: ErrorInfo;\n}\n\n/** Known values of {@link LogsColumnType} that the service accepts. */\nexport enum KnownLogsColumnType {\n  Bool = \"bool\",\n  Datetime = \"datetime\",\n  Dynamic = \"dynamic\",\n  Int = \"int\",\n  Long = \"long\",\n  Real = \"real\",\n  String = \"string\",\n  Guid = \"guid\",\n  Decimal = \"decimal\",\n  Timespan = \"timespan\"\n}\n\n/**\n * Defines values for LogsColumnType. \\\n * {@link KnownLogsColumnType} can be used interchangeably with LogsColumnType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **bool** \\\n * **datetime** \\\n * **dynamic** \\\n * **int** \\\n * **long** \\\n * **real** \\\n * **string** \\\n * **guid** \\\n * **decimal** \\\n * **timespan**\n */\nexport type LogsColumnType = string;\n\n/** Known values of {@link MetadataColumnDataType} that the service accepts. */\nexport enum KnownMetadataColumnDataType {\n  Bool = \"bool\",\n  Datetime = \"datetime\",\n  Dynamic = \"dynamic\",\n  Int = \"int\",\n  Long = \"long\",\n  Real = \"real\",\n  String = \"string\",\n  Guid = \"guid\",\n  Decimal = \"decimal\",\n  Timespan = \"timespan\"\n}\n\n/**\n * Defines values for MetadataColumnDataType. \\\n * {@link KnownMetadataColumnDataType} can be used interchangeably with MetadataColumnDataType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **bool** \\\n * **datetime** \\\n * **dynamic** \\\n * **int** \\\n * **long** \\\n * **real** \\\n * **string** \\\n * **guid** \\\n * **decimal** \\\n * **timespan**\n */\nexport type MetadataColumnDataType = string;\n\n/** Optional parameters. */\nexport interface QueryGetOptionalParams extends coreClient.OperationOptions {\n  /** Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression. */\n  timespan?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type QueryGetResponse = QueryResults;\n\n/** Optional parameters. */\nexport interface QueryExecuteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. The prefer header to set server timeout, query statistics and visualization information. */\n  prefer?: string;\n}\n\n/** Contains response data for the execute operation. */\nexport type QueryExecuteResponse = QueryResults;\n\n/** Optional parameters. */\nexport interface QueryResourceGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression. */\n  timespan?: string;\n}\n\n/** Contains response data for the resourceGet operation. */\nexport type QueryResourceGetResponse = QueryResults;\n\n/** Optional parameters. */\nexport interface QueryResourceExecuteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. The prefer header to set server timeout, query statistics and visualization information. */\n  prefer?: string;\n}\n\n/** Contains response data for the resourceExecute operation. */\nexport type QueryResourceExecuteResponse = QueryResults;\n\n/** Optional parameters. */\nexport interface QueryBatchOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the batch operation. */\nexport type QueryBatchResponse = BatchResponse;\n\n/** Optional parameters. */\nexport interface QueryResourceGetXmsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression. */\n  timespan?: string;\n}\n\n/** Contains response data for the resourceGetXms operation. */\nexport type QueryResourceGetXmsResponse = QueryResults;\n\n/** Optional parameters. */\nexport interface QueryResourceExecuteXmsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. The prefer header to set server timeout, query statistics and visualization information. */\n  prefer?: string;\n}\n\n/** Contains response data for the resourceExecuteXms operation. */\nexport type QueryResourceExecuteXmsResponse = QueryResults;\n\n/** Optional parameters. */\nexport interface MetadataGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type MetadataGetResponse = MetadataResults;\n\n/** Optional parameters. */\nexport interface MetadataPostOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the post operation. */\nexport type MetadataPostResponse = MetadataResults;\n\n/** Optional parameters. */\nexport interface AzureLogAnalyticsOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}