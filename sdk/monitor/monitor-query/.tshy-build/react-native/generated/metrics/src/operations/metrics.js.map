{"version":3,"file":"metrics.js","sourceRoot":"","sources":["../../../../../../src/generated/metrics/src/operations/metrics.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAWtD,2CAA2C;AAC3C,MAAM,OAAO,WAAW;IAGtB;;;OAGG;IACH,YAAY,MAAsC;QAChD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACH,uBAAuB,CACrB,cAAsB,EACtB,MAAc,EACd,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,EACnC,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,2BAA2B,CACzB,cAAsB,EACtB,MAAc,EACd,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,EACnC,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,IAAI,CACF,WAAmB,EACnB,OAAmC;QAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,EACxB,iBAAiB,CAClB,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,sEAAsE;IAC5E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,eAAe;QAC1B,UAAU,CAAC,mBAAmB;QAC9B,UAAU,CAAC,kBAAkB;QAC7B,UAAU,CAAC,QAAQ;KACpB;IACD,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,cAAc,CAAC;IAC5D,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,sEAAsE;IAC5E,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,IAAI;IAC5B,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,eAAe;QAC1B,UAAU,CAAC,mBAAmB;QAC9B,UAAU,CAAC,kBAAkB;QAC7B,UAAU,CAAC,QAAQ;KACpB;IACD,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,cAAc,CAAC;IAC5D,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,qDAAqD;IAC3D,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,eAAe;QAC1B,UAAU,CAAC,mBAAmB;QAC9B,UAAU,CAAC,kBAAkB;QAC7B,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;KACvB;IACD,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,WAAW,CAAC;IACzD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Metrics } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { MonitorManagementClientContext } from \"../monitorManagementClientContext.js\";\nimport {\n  MetricsListAtSubscriptionScopeOptionalParams,\n  MetricsListAtSubscriptionScopeResponse,\n  MetricsListAtSubscriptionScopePostOptionalParams,\n  MetricsListAtSubscriptionScopePostResponse,\n  MetricsListOptionalParams,\n  MetricsListResponse\n} from \"../models/index.js\";\n\n/** Class containing Metrics operations. */\nexport class MetricsImpl implements Metrics {\n  private readonly client: MonitorManagementClientContext;\n\n  /**\n   * Initialize a new instance of the class Metrics class.\n   * @param client Reference to the service client\n   */\n  constructor(client: MonitorManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * **Lists the metric data for a subscription**.\n   * @param subscriptionId The ID of the target subscription.\n   * @param region The region where the metrics you want reside.\n   * @param options The options parameters.\n   */\n  listAtSubscriptionScope(\n    subscriptionId: string,\n    region: string,\n    options?: MetricsListAtSubscriptionScopeOptionalParams\n  ): Promise<MetricsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, region, options },\n      listAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * **Lists the metric data for a subscription**. Parameters can be specified on either query params or\n   * the body.\n   * @param subscriptionId The ID of the target subscription.\n   * @param region The region where the metrics you want reside.\n   * @param options The options parameters.\n   */\n  listAtSubscriptionScopePost(\n    subscriptionId: string,\n    region: string,\n    options?: MetricsListAtSubscriptionScopePostOptionalParams\n  ): Promise<MetricsListAtSubscriptionScopePostResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, region, options },\n      listAtSubscriptionScopePostOperationSpec\n    );\n  }\n\n  /**\n   * **Lists the metric values for a resource**.\n   * @param resourceUri The identifier of the resource.\n   * @param options The options parameters.\n   */\n  list(\n    resourceUri: string,\n    options?: MetricsListOptionalParams\n  ): Promise<MetricsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceUri, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Response\n    },\n    default: {\n      bodyMapper: Mappers.ErrorContract\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.region,\n    Parameters.timespan,\n    Parameters.interval,\n    Parameters.metricnames,\n    Parameters.aggregation,\n    Parameters.top,\n    Parameters.orderby,\n    Parameters.filter,\n    Parameters.resultType,\n    Parameters.metricnamespace,\n    Parameters.autoAdjustTimegrain,\n    Parameters.validateDimensions,\n    Parameters.rollupby\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtSubscriptionScopePostOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metrics\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Response\n    },\n    default: {\n      bodyMapper: Mappers.ErrorContract\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.region,\n    Parameters.timespan,\n    Parameters.interval,\n    Parameters.metricnames,\n    Parameters.aggregation,\n    Parameters.top,\n    Parameters.orderby,\n    Parameters.filter,\n    Parameters.resultType,\n    Parameters.metricnamespace,\n    Parameters.autoAdjustTimegrain,\n    Parameters.validateDimensions,\n    Parameters.rollupby\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceUri}/providers/Microsoft.Insights/metrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Response\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.timespan,\n    Parameters.interval,\n    Parameters.metricnames,\n    Parameters.aggregation,\n    Parameters.top,\n    Parameters.orderby,\n    Parameters.filter,\n    Parameters.metricnamespace,\n    Parameters.autoAdjustTimegrain,\n    Parameters.validateDimensions,\n    Parameters.rollupby,\n    Parameters.resultType1\n  ],\n  urlParameters: [Parameters.$host, Parameters.resourceUri],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}