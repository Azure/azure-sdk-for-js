/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const Response = {
    type: {
        name: "Composite",
        className: "Response",
        modelProperties: {
            cost: {
                constraints: {
                    InclusiveMinimum: 0
                },
                serializedName: "cost",
                type: {
                    name: "Number"
                }
            },
            timespan: {
                serializedName: "timespan",
                required: true,
                type: {
                    name: "String"
                }
            },
            interval: {
                serializedName: "interval",
                type: {
                    name: "String"
                }
            },
            namespace: {
                serializedName: "namespace",
                type: {
                    name: "String"
                }
            },
            resourceregion: {
                serializedName: "resourceregion",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Metric"
                        }
                    }
                }
            }
        }
    }
};
export const Metric = {
    type: {
        name: "Composite",
        className: "Metric",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "LocalizableString"
                }
            },
            displayDescription: {
                serializedName: "displayDescription",
                type: {
                    name: "String"
                }
            },
            errorCode: {
                serializedName: "errorCode",
                type: {
                    name: "String"
                }
            },
            errorMessage: {
                serializedName: "errorMessage",
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                required: true,
                type: {
                    name: "String"
                }
            },
            timeseries: {
                serializedName: "timeseries",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TimeSeriesElement"
                        }
                    }
                }
            }
        }
    }
};
export const LocalizableString = {
    type: {
        name: "Composite",
        className: "LocalizableString",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TimeSeriesElement = {
    type: {
        name: "Composite",
        className: "TimeSeriesElement",
        modelProperties: {
            metadatavalues: {
                serializedName: "metadatavalues",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetadataValue"
                        }
                    }
                }
            },
            data: {
                serializedName: "data",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricValue"
                        }
                    }
                }
            }
        }
    }
};
export const MetadataValue = {
    type: {
        name: "Composite",
        className: "MetadataValue",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "LocalizableString"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MetricValue = {
    type: {
        name: "Composite",
        className: "MetricValue",
        modelProperties: {
            timeStamp: {
                serializedName: "timeStamp",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            average: {
                serializedName: "average",
                type: {
                    name: "Number"
                }
            },
            minimum: {
                serializedName: "minimum",
                type: {
                    name: "Number"
                }
            },
            maximum: {
                serializedName: "maximum",
                type: {
                    name: "Number"
                }
            },
            total: {
                serializedName: "total",
                type: {
                    name: "Number"
                }
            },
            count: {
                serializedName: "count",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ErrorContract = {
    type: {
        name: "Composite",
        className: "ErrorContract",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorResponse"
                }
            }
        }
    }
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorResponse"
                        }
                    }
                }
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo"
                        }
                    }
                }
            }
        }
    }
};
export const ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }
        }
    }
};
export const SubscriptionScopeMetricsRequestBodyParameters = {
    type: {
        name: "Composite",
        className: "SubscriptionScopeMetricsRequestBodyParameters",
        modelProperties: {
            timespan: {
                serializedName: "timespan",
                type: {
                    name: "String"
                }
            },
            interval: {
                serializedName: "interval",
                type: {
                    name: "String"
                }
            },
            metricNames: {
                serializedName: "metricNames",
                type: {
                    name: "String"
                }
            },
            aggregation: {
                serializedName: "aggregation",
                type: {
                    name: "String"
                }
            },
            filter: {
                serializedName: "filter",
                type: {
                    name: "String"
                }
            },
            top: {
                serializedName: "top",
                type: {
                    name: "Number"
                }
            },
            orderBy: {
                serializedName: "orderBy",
                type: {
                    name: "String"
                }
            },
            rollUpBy: {
                serializedName: "rollUpBy",
                type: {
                    name: "String"
                }
            },
            resultType: {
                serializedName: "resultType",
                type: {
                    name: "String"
                }
            },
            metricNamespace: {
                serializedName: "metricNamespace",
                type: {
                    name: "String"
                }
            },
            autoAdjustTimegrain: {
                serializedName: "autoAdjustTimegrain",
                type: {
                    name: "Boolean"
                }
            },
            validateDimensions: {
                serializedName: "validateDimensions",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map