{"version":3,"file":"metricsBatch.js","sourceRoot":"","sources":["../../../../../../src/generated/metricBatch/src/operations/metricsBatch.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAQtD,gDAAgD;AAChD,MAAM,OAAO,gBAAgB;IAG3B;;;OAGG;IACH,YAAY,MAAsC;QAChD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CACH,cAAsB,EACtB,eAAuB,EACvB,WAAqB,EACrB,YAA4B,EAC5B,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,cAAc,EAAE,eAAe,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,EACvE,kBAAkB,CACnB,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,kBAAkB,GAA6B;IACnD,IAAI,EAAE,kDAAkD;IACxD,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,aAAa;YACjC,aAAa,EAAE,OAAO,CAAC,iCAAiC;SACzD;KACF;IACD,WAAW,EAAE,UAAU,CAAC,YAAY;IACpC,eAAe,EAAE;QACf,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,eAAe;QAC1B,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,UAAU;KACtB;IACD,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,cAAc,CAAC;IAC/D,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MetricsBatch } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { AzureMonitorMetricBatchContext } from \"../azureMonitorMetricBatchContext.js\";\nimport {\n  ResourceIdList,\n  MetricsBatchBatchOptionalParams,\n  MetricsBatchBatchResponse\n} from \"../models/index.js\";\n\n/** Class containing MetricsBatch operations. */\nexport class MetricsBatchImpl implements MetricsBatch {\n  private readonly client: AzureMonitorMetricBatchContext;\n\n  /**\n   * Initialize a new instance of the class MetricsBatch class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureMonitorMetricBatchContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the metric values for multiple resources.\n   * @param subscriptionId The subscription identifier for the resources in this batch.\n   * @param metricnamespace Metric namespace that contains the requested metric names.\n   * @param metricnames The names of the metrics (comma separated) to retrieve.\n   * @param batchRequest Metrics batch body including the list of resource ids\n   * @param options The options parameters.\n   */\n  batch(\n    subscriptionId: string,\n    metricnamespace: string,\n    metricnames: string[],\n    batchRequest: ResourceIdList,\n    options?: MetricsBatchBatchOptionalParams\n  ): Promise<MetricsBatchBatchResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, metricnamespace, metricnames, batchRequest, options },\n      batchOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst batchOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/metrics:getBatch\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricResultsResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.MetricsBatchBatchExceptionHeaders\n    }\n  },\n  requestBody: Parameters.batchRequest,\n  queryParameters: [\n    Parameters.starttime,\n    Parameters.endtime,\n    Parameters.interval,\n    Parameters.metricnamespace,\n    Parameters.metricnames,\n    Parameters.aggregation,\n    Parameters.top,\n    Parameters.orderby,\n    Parameters.filter,\n    Parameters.rollupby,\n    Parameters.apiVersion\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.subscriptionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n"]}