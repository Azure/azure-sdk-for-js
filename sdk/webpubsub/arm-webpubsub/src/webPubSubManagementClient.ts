/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { WebPubSubManagementClientContext } from "./webPubSubManagementClientContext";


class WebPubSubManagementClient extends WebPubSubManagementClientContext {
  // Operation groups
  operations: operations.Operations;
  webPubSub: operations.WebPubSub;
  usages: operations.Usages;
  webPubSubPrivateEndpointConnections: operations.WebPubSubPrivateEndpointConnections;
  webPubSubPrivateLinkResources: operations.WebPubSubPrivateLinkResources;
  webPubSubSharedPrivateLinkResources: operations.WebPubSubSharedPrivateLinkResources;

  /**
   * Initializes a new instance of the WebPubSubManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure. Credentials
   * implementing the TokenCredential interface from the @azure/identity package are recommended. For
   * more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param subscriptionId Gets subscription Id which uniquely identify the Microsoft Azure
   * subscription. The subscription ID forms part of the URI for every service call.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.WebPubSubManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.webPubSub = new operations.WebPubSub(this);
    this.usages = new operations.Usages(this);
    this.webPubSubPrivateEndpointConnections = new operations.WebPubSubPrivateEndpointConnections(this);
    this.webPubSubPrivateLinkResources = new operations.WebPubSubPrivateLinkResources(this);
    this.webPubSubSharedPrivateLinkResources = new operations.WebPubSubSharedPrivateLinkResources(this);
  }
}

// Operation Specifications

export {
  WebPubSubManagementClient,
  WebPubSubManagementClientContext,
  Models as WebPubSubManagementModels,
  Mappers as WebPubSubManagementMappers
};
export * from "./operations";
