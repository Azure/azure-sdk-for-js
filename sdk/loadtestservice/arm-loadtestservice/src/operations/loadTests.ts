/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/loadTestsMappers";
import * as Parameters from "../models/parameters";
import { LoadTestClientContext } from "../loadTestClientContext";

/** Class representing a LoadTests. */
export class LoadTests {
  private readonly client: LoadTestClientContext;

  /**
   * Create a LoadTests.
   * @param {LoadTestClientContext} client Reference to the service client.
   */
  constructor(client: LoadTestClientContext) {
    this.client = client;
  }

  /**
   * Lists loadtests resources in a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.LoadTestsListBySubscriptionResponse>
   */
  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.LoadTestsListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.LoadTestResourcePageList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LoadTestResourcePageList>): void;
  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LoadTestResourcePageList>, callback?: msRest.ServiceCallback<Models.LoadTestResourcePageList>): Promise<Models.LoadTestsListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.LoadTestsListBySubscriptionResponse>;
  }

  /**
   * Lists loadtest resources in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.LoadTestsListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.LoadTestsListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.LoadTestResourcePageList>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LoadTestResourcePageList>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LoadTestResourcePageList>, callback?: msRest.ServiceCallback<Models.LoadTestResourcePageList>): Promise<Models.LoadTestsListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.LoadTestsListByResourceGroupResponse>;
  }

  /**
   * Get a LoadTest resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param [options] The optional parameters
   * @returns Promise<Models.LoadTestsGetResponse>
   */
  get(resourceGroupName: string, loadTestName: string, options?: msRest.RequestOptionsBase): Promise<Models.LoadTestsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param callback The callback
   */
  get(resourceGroupName: string, loadTestName: string, callback: msRest.ServiceCallback<Models.LoadTestResource>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, loadTestName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LoadTestResource>): void;
  get(resourceGroupName: string, loadTestName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LoadTestResource>, callback?: msRest.ServiceCallback<Models.LoadTestResource>): Promise<Models.LoadTestsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        loadTestName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.LoadTestsGetResponse>;
  }

  /**
   * Create or update LoadTest resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param loadTestResource LoadTest resource data
   * @param [options] The optional parameters
   * @returns Promise<Models.LoadTestsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, loadTestName: string, loadTestResource: Models.LoadTestResource, options?: msRest.RequestOptionsBase): Promise<Models.LoadTestsCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param loadTestResource LoadTest resource data
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, loadTestName: string, loadTestResource: Models.LoadTestResource, callback: msRest.ServiceCallback<Models.LoadTestResource>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param loadTestResource LoadTest resource data
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, loadTestName: string, loadTestResource: Models.LoadTestResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LoadTestResource>): void;
  createOrUpdate(resourceGroupName: string, loadTestName: string, loadTestResource: Models.LoadTestResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LoadTestResource>, callback?: msRest.ServiceCallback<Models.LoadTestResource>): Promise<Models.LoadTestsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        loadTestName,
        loadTestResource,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.LoadTestsCreateOrUpdateResponse>;
  }

  /**
   * Update a loadtest resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param loadTestResourcePatchRequestBody LoadTest resource update data
   * @param [options] The optional parameters
   * @returns Promise<Models.LoadTestsUpdateResponse>
   */
  update(resourceGroupName: string, loadTestName: string, loadTestResourcePatchRequestBody: Models.LoadTestResourcePatchRequestBody, options?: msRest.RequestOptionsBase): Promise<Models.LoadTestsUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param loadTestResourcePatchRequestBody LoadTest resource update data
   * @param callback The callback
   */
  update(resourceGroupName: string, loadTestName: string, loadTestResourcePatchRequestBody: Models.LoadTestResourcePatchRequestBody, callback: msRest.ServiceCallback<Models.LoadTestResource>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param loadTestResourcePatchRequestBody LoadTest resource update data
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, loadTestName: string, loadTestResourcePatchRequestBody: Models.LoadTestResourcePatchRequestBody, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LoadTestResource>): void;
  update(resourceGroupName: string, loadTestName: string, loadTestResourcePatchRequestBody: Models.LoadTestResourcePatchRequestBody, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LoadTestResource>, callback?: msRest.ServiceCallback<Models.LoadTestResource>): Promise<Models.LoadTestsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        loadTestName,
        loadTestResourcePatchRequestBody,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.LoadTestsUpdateResponse>;
  }

  /**
   * Delete a LoadTest resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, loadTestName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,loadTestName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Delete a LoadTest resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param loadTestName Load Test name.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, loadTestName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        loadTestName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Lists loadtests resources in a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.LoadTestsListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.LoadTestsListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.LoadTestResourcePageList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LoadTestResourcePageList>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LoadTestResourcePageList>, callback?: msRest.ServiceCallback<Models.LoadTestResourcePageList>): Promise<Models.LoadTestsListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.LoadTestsListBySubscriptionNextResponse>;
  }

  /**
   * Lists loadtest resources in a resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.LoadTestsListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.LoadTestsListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.LoadTestResourcePageList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LoadTestResourcePageList>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.LoadTestResourcePageList>, callback?: msRest.ServiceCallback<Models.LoadTestResourcePageList>): Promise<Models.LoadTestsListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.LoadTestsListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.LoadTestService/loadTests",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LoadTestResourcePageList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LoadTestResourcePageList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.loadTestName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LoadTestResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.loadTestName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "loadTestResource",
    mapper: {
      ...Mappers.LoadTestResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.LoadTestResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.loadTestName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "loadTestResourcePatchRequestBody",
    mapper: {
      ...Mappers.LoadTestResourcePatchRequestBody,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.LoadTestResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.loadTestName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LoadTestResourcePageList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LoadTestResourcePageList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
