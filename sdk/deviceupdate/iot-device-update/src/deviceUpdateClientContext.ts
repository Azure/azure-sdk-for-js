/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import { DeviceUpdateClientOptionalParams } from "./models";

const packageName = "@azure/iot-device-update";
const packageVersion = "1.0.0-beta.2";

export class DeviceUpdateClientContext extends coreHttp.ServiceClient {
  accountEndpoint: string;
  instanceId: string;

  /**
   * Initializes a new instance of the DeviceUpdateClientContext class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param accountEndpoint Account endpoint.
   * @param instanceId Account instance identifier.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    accountEndpoint: string,
    instanceId: string,
    options?: DeviceUpdateClientOptionalParams
  ) {
    if (credentials === undefined) {
      throw new Error("'credentials' cannot be null");
    }
    if (accountEndpoint === undefined) {
      throw new Error("'accountEndpoint' cannot be null");
    }
    if (instanceId === undefined) {
      throw new Error("'instanceId' cannot be null");
    }

    // Initializing default values for options
    if (!options) {
      options = {};
    }

    if (!options.userAgent) {
      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();
      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;
    }

    if (!options.credentialScopes) {
      options.credentialScopes = ["https://api.adu.microsoft.com/.default"];
    }

    super(credentials, options);

    this.requestContentType = "application/json; charset=utf-8";

    this.baseUri = options.endpoint || "https://{accountEndpoint}";

    // Parameter assignments
    this.accountEndpoint = accountEndpoint;
    this.instanceId = instanceId;
  }
}
