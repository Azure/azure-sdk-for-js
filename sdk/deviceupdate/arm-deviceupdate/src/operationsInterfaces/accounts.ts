/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Account,
  AccountsListBySubscriptionOptionalParams,
  AccountsListByResourceGroupOptionalParams,
  AccountsGetOptionalParams,
  AccountsGetResponse,
  AccountsHeadOptionalParams,
  AccountsHeadResponse,
  AccountsCreateOptionalParams,
  AccountsCreateResponse,
  AccountsDeleteOptionalParams,
  AccountUpdate,
  AccountsUpdateOptionalParams,
  AccountsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Accounts. */
export interface Accounts {
  /**
   * Returns list of Accounts.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AccountsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Account>;
  /**
   * Returns list of Accounts.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AccountsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Account>;
  /**
   * Returns account details for the given account name.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsGetOptionalParams
  ): Promise<AccountsGetResponse>;
  /**
   * Checks whether account exists.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param options The options parameters.
   */
  head(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsHeadOptionalParams
  ): Promise<AccountsHeadResponse>;
  /**
   * Creates or updates Account.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param account Account details.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    account: Account,
    options?: AccountsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AccountsCreateResponse>,
      AccountsCreateResponse
    >
  >;
  /**
   * Creates or updates Account.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param account Account details.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    account: Account,
    options?: AccountsCreateOptionalParams
  ): Promise<AccountsCreateResponse>;
  /**
   * Deletes account.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes account.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates account's patchable properties
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param accountUpdatePayload Updated Account.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    accountUpdatePayload: AccountUpdate,
    options?: AccountsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AccountsUpdateResponse>,
      AccountsUpdateResponse
    >
  >;
  /**
   * Updates account's patchable properties
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param accountUpdatePayload Updated Account.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    accountUpdatePayload: AccountUpdate,
    options?: AccountsUpdateOptionalParams
  ): Promise<AccountsUpdateResponse>;
}
