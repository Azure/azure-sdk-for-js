/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Instance,
  InstancesListByAccountOptionalParams,
  InstancesGetOptionalParams,
  InstancesGetResponse,
  InstancesHeadOptionalParams,
  InstancesHeadResponse,
  InstancesCreateOptionalParams,
  InstancesCreateResponse,
  InstancesDeleteOptionalParams,
  TagUpdate,
  InstancesUpdateOptionalParams,
  InstancesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Instances. */
export interface Instances {
  /**
   * Returns instances for the given account name.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param options The options parameters.
   */
  listByAccount(
    resourceGroupName: string,
    accountName: string,
    options?: InstancesListByAccountOptionalParams
  ): PagedAsyncIterableIterator<Instance>;
  /**
   * Returns instance details for the given instance and account name.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param instanceName Instance name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    instanceName: string,
    options?: InstancesGetOptionalParams
  ): Promise<InstancesGetResponse>;
  /**
   * Checks whether instance exists.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param instanceName Instance name.
   * @param options The options parameters.
   */
  head(
    resourceGroupName: string,
    accountName: string,
    instanceName: string,
    options?: InstancesHeadOptionalParams
  ): Promise<InstancesHeadResponse>;
  /**
   * Creates or updates instance.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param instanceName Instance name.
   * @param instance Instance details.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    instanceName: string,
    instance: Instance,
    options?: InstancesCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<InstancesCreateResponse>,
      InstancesCreateResponse
    >
  >;
  /**
   * Creates or updates instance.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param instanceName Instance name.
   * @param instance Instance details.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    instanceName: string,
    instance: Instance,
    options?: InstancesCreateOptionalParams
  ): Promise<InstancesCreateResponse>;
  /**
   * Deletes instance.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param instanceName Instance name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    instanceName: string,
    options?: InstancesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes instance.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param instanceName Instance name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    instanceName: string,
    options?: InstancesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates instance's tags.
   * @param resourceGroupName The resource group name.
   * @param accountName Account name.
   * @param instanceName Instance name.
   * @param tagUpdatePayload Updated tags.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    instanceName: string,
    tagUpdatePayload: TagUpdate,
    options?: InstancesUpdateOptionalParams
  ): Promise<InstancesUpdateResponse>;
}
