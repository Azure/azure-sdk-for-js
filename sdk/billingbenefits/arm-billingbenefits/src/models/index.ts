/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The SKU to be applied for this resource */
export interface Sku {
  /** Name of the SKU to be applied */
  name?: string;
}

/** Properties specific to applied scope type. Not required if not applicable. */
export interface AppliedScopeProperties {
  /** Tenant ID where the benefit is applied. */
  tenantId?: string;
  /** Fully-qualified identifier of the management group where the benefit must be applied. */
  managementGroupId?: string;
  /** Fully-qualified identifier of the subscription. */
  subscriptionId?: string;
  /** Fully-qualified identifier of the resource group. */
  resourceGroupId?: string;
  /** Display name */
  displayName?: string;
}

export interface Price {
  /** The ISO 4217 3-letter currency code for the currency used by this purchase record. */
  currencyCode?: string;
  amount?: number;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Information describing the type of billing plan for this savings plan. */
export interface BillingPlanInformation {
  /** Amount of money to be paid for the Order. Tax is not included. */
  pricingCurrencyTotal?: Price;
  /** Date when the billing plan has started. */
  startDate?: Date;
  /** For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off. */
  nextPaymentDueDate?: Date;
  transactions?: PaymentDetail[];
}

/** Information about payment related to a savings plan order. */
export interface PaymentDetail {
  /** Date when the payment needs to be done. */
  dueDate?: Date;
  /** Date when the transaction is completed. Is null when it is scheduled. */
  paymentDate?: Date;
  /** Amount in pricing currency. Tax not included. */
  pricingCurrencyTotal?: Price;
  /** Amount charged in Billing currency. Tax not included. Is null for future payments */
  billingCurrencyTotal?: Price;
  /** Describes whether the payment is completed, failed, cancelled or scheduled in the future. */
  status?: PaymentStatus;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
  /** Billing account */
  billingAccount?: string;
}

export interface ExtendedStatusInfo {
  /** Status code providing additional information. */
  statusCode?: string;
  /** The message giving detailed information about the status code. */
  message?: string;
}

/** Role assignment entity */
export interface RoleAssignmentEntity {
  /** Role assignment entity id */
  id?: string;
  /** Role assignment entity name */
  name?: string;
  /** Principal Id */
  principalId?: string;
  /** Role definition id */
  roleDefinitionId?: string;
  /** Scope of the role assignment entity */
  scope?: string;
}

export interface SavingsPlanOrderModelList {
  value?: SavingsPlanOrderModel[];
  /** Url to get the next page. */
  nextLink?: string;
}

export interface SavingsPlanModelList {
  value?: SavingsPlanModel[];
  /** Url to get the next page. */
  nextLink?: string;
}

/** Savings plan utilization */
export interface Utilization {
  /**
   * The number of days trend for a savings plan
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly trend?: string;
  /** The array of aggregates of a savings plan's utilization */
  aggregates?: UtilizationAggregates[];
}

/** The aggregate values of savings plan utilization */
export interface UtilizationAggregates {
  /**
   * The grain of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grain?: number;
  /**
   * The grain unit of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grainUnit?: string;
  /**
   * The aggregate value
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: number;
  /**
   * The aggregate value unit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueUnit?: string;
}

export interface RenewProperties {
  purchaseProperties?: PurchaseRequest;
}

export interface PurchaseRequest {
  /** The SKU to be applied for this resource */
  sku?: Sku;
  /** Friendly name of the savings plan */
  displayName?: string;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Commitment towards the benefit. */
  commitment?: Commitment;
  /**
   * DateTime of the savings plan starts providing benefit from.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDateTime?: Date;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
}

export interface SavingsPlanModelListResult {
  /**
   * The list of savings plans.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SavingsPlanModel[];
  /**
   * Url to get the next page.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The roll out count summary of the savings plans
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalProperties?: SavingsPlanSummary[];
}

/** Savings plans list summary */
export interface SavingsPlanSummary {
  /**
   * This property has value 'summary'
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** The roll up count summary of savings plans in each state */
  value?: SavingsPlanSummaryCount;
}

/** The roll up count summary of savings plans in each state */
export interface SavingsPlanSummaryCount {
  /**
   * The number of savings plans in Succeeded state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly succeededCount?: number;
  /**
   * The number of savings plans in Failed state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedCount?: number;
  /**
   * The number of savings plans in Expiring state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiringCount?: number;
  /**
   * The number of savings plans in Expired state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiredCount?: number;
  /**
   * The number of savings plans in Pending state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pendingCount?: number;
  /**
   * The number of savings plans in Cancelled state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cancelledCount?: number;
  /**
   * The number of savings plans in Processing state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processingCount?: number;
  /**
   * The number of savings plans in No Benefit state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly noBenefitCount?: number;
  /**
   * The number of savings plans in Warning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly warningCount?: number;
}

/** Savings plan patch request */
export interface SavingsPlanUpdateRequest {
  /** Savings plan patch request */
  properties?: SavingsPlanUpdateRequestProperties;
}

/** Savings plan patch request */
export interface SavingsPlanUpdateRequestProperties {
  /** Display name */
  displayName?: string;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  renewProperties?: RenewProperties;
}

export interface SavingsPlanUpdateValidateRequest {
  benefits?: SavingsPlanUpdateRequestProperties[];
}

export interface SavingsPlanValidateResponse {
  benefits?: SavingsPlanValidResponseProperty[];
  /** Url to get the next page. */
  nextLink?: string;
}

/** Benefit scope response property */
export interface SavingsPlanValidResponseProperty {
  /** Indicates if the provided input was valid */
  valid?: boolean;
  /** Failure reason code if the provided input was invalid */
  reasonCode?: string;
  /** Failure reason if the provided input was invalid */
  reason?: string;
}

export interface SavingsPlanPurchaseValidateRequest {
  benefits?: SavingsPlanOrderAliasModel[];
}

/** Properties specific to each reserved resource type. Not required if not applicable. */
export interface ReservationOrderAliasRequestPropertiesReservedResourceProperties {
  /** Turning this on will apply the reservation discount to other VMs in the same VM size group. */
  instanceFlexibility?: InstanceFlexibility;
}

/** Properties specific to each reserved resource type. Not required if not applicable. */
export interface ReservationOrderAliasResponsePropertiesReservedResourceProperties {
  /** Turning this on will apply the reservation discount to other VMs in the same VM size group. */
  instanceFlexibility?: InstanceFlexibility;
}

/** Required if status == failed or status == canceled. */
export interface OperationResultError {
  /** Required if status == failed or status == cancelled. If status == failed, provide an invariant error code used for error troubleshooting, aggregation, and analysis. */
  code?: string;
  /** Required if status == failed. Localized. If status == failed, provide an actionable error message indicating what error occurred, and what the user can do to address the issue. */
  message?: string;
}

/** billing information */
export interface BillingInformation {
  billingCurrencyTotalPaidAmount?: Price;
  billingCurrencyProratedAmount?: Price;
  billingCurrencyRemainingCommitmentAmount?: Price;
}

/** Commitment towards the benefit. */
export interface Commitment extends Price {
  /** Commitment grain. */
  grain?: CommitmentGrain;
}

export interface PricingCurrencyTotal extends Price {
  /** Represents either billing plan or savings plan term in ISO 8601 format. */
  duration?: PricingCurrencyDuration;
}

/** Savings plan order alias */
export interface SavingsPlanOrderAliasModel extends Resource {
  /** Savings plan SKU */
  sku: Sku;
  /** Resource provider kind */
  kind?: string;
  /** Display name */
  displayName?: string;
  /**
   * Identifier of the savings plan created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly savingsPlanOrderId?: string;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Commitment towards the benefit. */
  commitment?: Commitment;
}

/** Savings plan order */
export interface SavingsPlanOrderModel extends Resource {
  /** Savings plan SKU */
  sku: Sku;
  /** Display name */
  displayName?: string;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /**
   * Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * Fully-qualified identifier of the billing account where the savings plan is applied. Present only for Enterprise Agreement customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /**
   * Expiry date time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDateTime?: Date;
  /** This is the DateTime when the savings plan benefit started. */
  benefitStartTime?: Date;
  /** Information describing the type of billing plan for this savings plan. */
  planInformation?: BillingPlanInformation;
  savingsPlans?: string[];
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
}

/** Savings plan */
export interface SavingsPlanModel extends Resource {
  /** Savings plan SKU */
  sku: Sku;
  /** Display name */
  displayName?: string;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The provisioning state of the savings plan for display, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayProvisioningState?: string;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /**
   * Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * Fully-qualified identifier of the billing account where the savings plan is applied. Present only for Enterprise Agreement customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /**
   * The applied scope type of the savings plan for display, e.g. Shared
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userFriendlyAppliedScopeType?: string;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Commitment towards the benefit. */
  commitment?: Commitment;
  /**
   * DateTime of the savings plan starts providing benefit from.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDateTime?: Date;
  /**
   * Expiry date time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDateTime?: Date;
  /**
   * Date time when the savings plan was purchased
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDateTime?: Date;
  /** This is the DateTime when the savings plan benefit started. */
  benefitStartTime?: Date;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /**
   * Savings plan utilization
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly utilization?: Utilization;
  /** SavingsPlan Id of the SavingsPlan from which this SavingsPlan is renewed. */
  renewSource?: string;
  /** SavingsPlan Id of the SavingsPlan which is purchased because of renew. */
  renewDestination?: string;
  renewProperties?: RenewProperties;
}

/** Reservation order alias */
export interface ReservationOrderAliasRequest extends Resource {
  /** Reservation order SKU */
  sku: Sku;
  /** The Azure Region where the reservation benefits are applied to. */
  location?: string;
  /** Display name */
  displayName?: string;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Total Quantity of the SKUs purchased in the Reservation. */
  quantity?: number;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** The type of the resource that is being reserved. */
  reservedResourceType?: ReservedResourceType;
  /** This is the date-time when the Azure Hybrid Benefit needs to be reviewed. */
  reviewDateTime?: Date;
  /** Properties specific to each reserved resource type. Not required if not applicable. */
  reservedResourceProperties?: ReservationOrderAliasRequestPropertiesReservedResourceProperties;
}

/** Reservation order alias */
export interface ReservationOrderAliasResponse extends Resource {
  /** Reservation order SKU */
  sku: Sku;
  /** The Azure Region where the reserved resource lives. */
  location?: string;
  /** Display name */
  displayName?: string;
  /**
   * Identifier of the reservation order created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reservationOrderId?: string;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Total Quantity of the SKUs purchased in the Reservation. */
  quantity?: number;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** The type of the resource that is being reserved. */
  reservedResourceType?: ReservedResourceType;
  /** This is the date-time when the Reservation needs to be reviewed. */
  reviewDateTime?: Date;
  /** Properties specific to each reserved resource type. Not required if not applicable. */
  reservedResourceProperties?: ReservationOrderAliasResponsePropertiesReservedResourceProperties;
}

/** Defines headers for SavingsPlanOrderAlias_create operation. */
export interface SavingsPlanOrderAliasCreateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Defines headers for SavingsPlan_update operation. */
export interface SavingsPlanUpdateHeaders {
  location?: string;
}

/** Defines headers for ReservationOrderAlias_create operation. */
export interface ReservationOrderAliasCreateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** PendingBilling */
  PendingBilling = "PendingBilling",
  /** ConfirmedBilling */
  ConfirmedBilling = "ConfirmedBilling",
  /** Created */
  Created = "Created",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Expired */
  Expired = "Expired",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **PendingBilling** \
 * **ConfirmedBilling** \
 * **Created** \
 * **Succeeded** \
 * **Cancelled** \
 * **Expired** \
 * **Failed**
 */
export type ProvisioningState = string;

/** Known values of {@link Term} that the service accepts. */
export enum KnownTerm {
  /** P1Y */
  P1Y = "P1Y",
  /** P3Y */
  P3Y = "P3Y",
  /** P5Y */
  P5Y = "P5Y"
}

/**
 * Defines values for Term. \
 * {@link KnownTerm} can be used interchangeably with Term,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P1Y** \
 * **P3Y** \
 * **P5Y**
 */
export type Term = string;

/** Known values of {@link BillingPlan} that the service accepts. */
export enum KnownBillingPlan {
  /** P1M */
  P1M = "P1M"
}

/**
 * Defines values for BillingPlan. \
 * {@link KnownBillingPlan} can be used interchangeably with BillingPlan,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P1M**
 */
export type BillingPlan = string;

/** Known values of {@link AppliedScopeType} that the service accepts. */
export enum KnownAppliedScopeType {
  /** Single */
  Single = "Single",
  /** Shared */
  Shared = "Shared",
  /** ManagementGroup */
  ManagementGroup = "ManagementGroup"
}

/**
 * Defines values for AppliedScopeType. \
 * {@link KnownAppliedScopeType} can be used interchangeably with AppliedScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Single** \
 * **Shared** \
 * **ManagementGroup**
 */
export type AppliedScopeType = string;

/** Known values of {@link CommitmentGrain} that the service accepts. */
export enum KnownCommitmentGrain {
  /** Hourly */
  Hourly = "Hourly"
}

/**
 * Defines values for CommitmentGrain. \
 * {@link KnownCommitmentGrain} can be used interchangeably with CommitmentGrain,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Hourly**
 */
export type CommitmentGrain = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link PaymentStatus} that the service accepts. */
export enum KnownPaymentStatus {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Scheduled */
  Scheduled = "Scheduled",
  /** Cancelled */
  Cancelled = "Cancelled"
}

/**
 * Defines values for PaymentStatus. \
 * {@link KnownPaymentStatus} can be used interchangeably with PaymentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Scheduled** \
 * **Cancelled**
 */
export type PaymentStatus = string;

/** Known values of {@link ReservedResourceType} that the service accepts. */
export enum KnownReservedResourceType {
  /** VirtualMachines */
  VirtualMachines = "VirtualMachines",
  /** SqlDatabases */
  SqlDatabases = "SqlDatabases",
  /** SuseLinux */
  SuseLinux = "SuseLinux",
  /** CosmosDb */
  CosmosDb = "CosmosDb",
  /** RedHat */
  RedHat = "RedHat",
  /** SqlDataWarehouse */
  SqlDataWarehouse = "SqlDataWarehouse",
  /** VMwareCloudSimple */
  VMwareCloudSimple = "VMwareCloudSimple",
  /** RedHatOsa */
  RedHatOsa = "RedHatOsa",
  /** Databricks */
  Databricks = "Databricks",
  /** AppService */
  AppService = "AppService",
  /** ManagedDisk */
  ManagedDisk = "ManagedDisk",
  /** BlockBlob */
  BlockBlob = "BlockBlob",
  /** RedisCache */
  RedisCache = "RedisCache",
  /** AzureDataExplorer */
  AzureDataExplorer = "AzureDataExplorer",
  /** MySql */
  MySql = "MySql",
  /** MariaDb */
  MariaDb = "MariaDb",
  /** PostgreSql */
  PostgreSql = "PostgreSql",
  /** DedicatedHost */
  DedicatedHost = "DedicatedHost",
  /** SapHana */
  SapHana = "SapHana",
  /** SqlAzureHybridBenefit */
  SqlAzureHybridBenefit = "SqlAzureHybridBenefit",
  /** AVS */
  AVS = "AVS",
  /** DataFactory */
  DataFactory = "DataFactory",
  /** NetAppStorage */
  NetAppStorage = "NetAppStorage",
  /** AzureFiles */
  AzureFiles = "AzureFiles",
  /** SqlEdge */
  SqlEdge = "SqlEdge",
  /** VirtualMachineSoftware */
  VirtualMachineSoftware = "VirtualMachineSoftware"
}

/**
 * Defines values for ReservedResourceType. \
 * {@link KnownReservedResourceType} can be used interchangeably with ReservedResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VirtualMachines** \
 * **SqlDatabases** \
 * **SuseLinux** \
 * **CosmosDb** \
 * **RedHat** \
 * **SqlDataWarehouse** \
 * **VMwareCloudSimple** \
 * **RedHatOsa** \
 * **Databricks** \
 * **AppService** \
 * **ManagedDisk** \
 * **BlockBlob** \
 * **RedisCache** \
 * **AzureDataExplorer** \
 * **MySql** \
 * **MariaDb** \
 * **PostgreSql** \
 * **DedicatedHost** \
 * **SapHana** \
 * **SqlAzureHybridBenefit** \
 * **AVS** \
 * **DataFactory** \
 * **NetAppStorage** \
 * **AzureFiles** \
 * **SqlEdge** \
 * **VirtualMachineSoftware**
 */
export type ReservedResourceType = string;

/** Known values of {@link InstanceFlexibility} that the service accepts. */
export enum KnownInstanceFlexibility {
  /** On */
  On = "On",
  /** Off */
  Off = "Off"
}

/**
 * Defines values for InstanceFlexibility. \
 * {@link KnownInstanceFlexibility} can be used interchangeably with InstanceFlexibility,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **On** \
 * **Off**
 */
export type InstanceFlexibility = string;

/** Known values of {@link PricingCurrencyDuration} that the service accepts. */
export enum KnownPricingCurrencyDuration {
  /** P1M */
  P1M = "P1M",
  /** P1Y */
  P1Y = "P1Y",
  /** P3Y */
  P3Y = "P3Y"
}

/**
 * Defines values for PricingCurrencyDuration. \
 * {@link KnownPricingCurrencyDuration} can be used interchangeably with PricingCurrencyDuration,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P1M** \
 * **P1Y** \
 * **P3Y**
 */
export type PricingCurrencyDuration = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface SavingsPlanOrderAliasCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SavingsPlanOrderAliasCreateResponse = SavingsPlanOrderAliasModel;

/** Optional parameters. */
export interface SavingsPlanOrderAliasGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SavingsPlanOrderAliasGetResponse = SavingsPlanOrderAliasModel;

/** Optional parameters. */
export interface SavingsPlanOrderGetOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the detail information of some properties. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type SavingsPlanOrderGetResponse = SavingsPlanOrderModel;

/** Optional parameters. */
export interface SavingsPlanOrderElevateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the elevate operation. */
export type SavingsPlanOrderElevateResponse = RoleAssignmentEntity;

/** Optional parameters. */
export interface SavingsPlanOrderListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SavingsPlanOrderListResponse = SavingsPlanOrderModelList;

/** Optional parameters. */
export interface SavingsPlanOrderListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SavingsPlanOrderListNextResponse = SavingsPlanOrderModelList;

/** Optional parameters. */
export interface SavingsPlanListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SavingsPlanListResponse = SavingsPlanModelList;

/** Optional parameters. */
export interface SavingsPlanListAllOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState} */
  filter?: string;
  /** May be used to sort order by reservation properties. */
  orderby?: string;
  /** To indicate whether to refresh the roll up counts of the savings plans group by provisioning states */
  refreshSummary?: string;
  /** The number of savings plans to skip from the list before returning results */
  skiptoken?: number;
  /** The selected provisioning state */
  selectedState?: string;
  /** To number of savings plans to return */
  take?: number;
}

/** Contains response data for the listAll operation. */
export type SavingsPlanListAllResponse = SavingsPlanModelListResult;

/** Optional parameters. */
export interface SavingsPlanGetOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the detail information of some properties. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type SavingsPlanGetResponse = SavingsPlanModel;

/** Optional parameters. */
export interface SavingsPlanUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type SavingsPlanUpdateResponse = SavingsPlanModel;

/** Optional parameters. */
export interface SavingsPlanValidateUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateUpdate operation. */
export type SavingsPlanValidateUpdateResponse = SavingsPlanValidateResponse;

/** Optional parameters. */
export interface SavingsPlanListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SavingsPlanListNextResponse = SavingsPlanModelList;

/** Optional parameters. */
export interface SavingsPlanListAllNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAllNext operation. */
export type SavingsPlanListAllNextResponse = SavingsPlanModelListResult;

/** Optional parameters. */
export interface ValidatePurchaseOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validatePurchase operation. */
export type ValidatePurchaseResponse = SavingsPlanValidateResponse;

/** Optional parameters. */
export interface ReservationOrderAliasCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReservationOrderAliasCreateResponse = ReservationOrderAliasResponse;

/** Optional parameters. */
export interface ReservationOrderAliasGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReservationOrderAliasGetResponse = ReservationOrderAliasResponse;

/** Optional parameters. */
export interface BillingBenefitsRPOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
