/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { SynapseManagementClient } = require("@azure/arm-synapse");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Create or Update workspace managed sql server's vulnerability assessment.
 *
 * @summary Create or Update workspace managed sql server's vulnerability assessment.
 * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/PutWorkspaceManagedSqlServerVulnerabilityAssessmentWithAllParameters.json
 */
async function createOrUpdateAWorkspaceManagedSqlServerVulnerabilityAssessmentWithAllParameters() {
  const subscriptionId =
    process.env["SYNAPSE_SUBSCRIPTION_ID"] || "00000000-1111-2222-3333-444444444444";
  const resourceGroupName = process.env["SYNAPSE_RESOURCE_GROUP"] || "wsg-7398";
  const workspaceName = "testWorkspace";
  const vulnerabilityAssessmentName = "default";
  const parameters = {
    recurringScans: {
      emailSubscriptionAdmins: true,
      emails: ["email1@mail.com", "email2@mail.com"],
      isEnabled: true,
    },
    storageAccountAccessKey: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    storageContainerPath: "https://myStorage.blob.core.windows.net/vulnerability-assessment/",
    storageContainerSasKey: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
  };
  const credential = new DefaultAzureCredential();
  const client = new SynapseManagementClient(credential, subscriptionId);
  const result = await client.workspaceManagedSqlServerVulnerabilityAssessments.createOrUpdate(
    resourceGroupName,
    workspaceName,
    vulnerabilityAssessmentName,
    parameters
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Create or Update workspace managed sql server's vulnerability assessment.
 *
 * @summary Create or Update workspace managed sql server's vulnerability assessment.
 * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/PutWorkspaceMangedSqlServerVulnerabilityAssessmentCreateStorageAccessKeyMin.json
 */
async function createOrUpdateAWorkspaceManagedSqlServerVulnerabilityAssessmentWithMinimalParametersWhenStorageAccountAccessKeyIsSpecified() {
  const subscriptionId =
    process.env["SYNAPSE_SUBSCRIPTION_ID"] || "00000000-1111-2222-3333-444444444444";
  const resourceGroupName = process.env["SYNAPSE_RESOURCE_GROUP"] || "wsg-7398";
  const workspaceName = "testWorkspace";
  const vulnerabilityAssessmentName = "default";
  const parameters = {
    storageAccountAccessKey: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
    storageContainerPath: "https://myStorage.blob.core.windows.net/vulnerability-assessment/",
  };
  const credential = new DefaultAzureCredential();
  const client = new SynapseManagementClient(credential, subscriptionId);
  const result = await client.workspaceManagedSqlServerVulnerabilityAssessments.createOrUpdate(
    resourceGroupName,
    workspaceName,
    vulnerabilityAssessmentName,
    parameters
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Create or Update workspace managed sql server's vulnerability assessment.
 *
 * @summary Create or Update workspace managed sql server's vulnerability assessment.
 * x-ms-original-file: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/PutWorkspaceMangedSqlServerVulnerabilityAssessmentCreateContainerSasKeyMin.json
 */
async function createOrUpdateAWorkspaceManagedSqlServerVulnerabilityAssessmentWithMinimalParametersWhenStorageContainerSasKeyIsSpecified() {
  const subscriptionId =
    process.env["SYNAPSE_SUBSCRIPTION_ID"] || "00000000-1111-2222-3333-444444444444";
  const resourceGroupName = process.env["SYNAPSE_RESOURCE_GROUP"] || "wsg-7398";
  const workspaceName = "testWorkspace";
  const vulnerabilityAssessmentName = "default";
  const parameters = {
    storageContainerPath: "https://myStorage.blob.core.windows.net/vulnerability-assessment/",
    storageContainerSasKey: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
  };
  const credential = new DefaultAzureCredential();
  const client = new SynapseManagementClient(credential, subscriptionId);
  const result = await client.workspaceManagedSqlServerVulnerabilityAssessments.createOrUpdate(
    resourceGroupName,
    workspaceName,
    vulnerabilityAssessmentName,
    parameters
  );
  console.log(result);
}

async function main() {
  createOrUpdateAWorkspaceManagedSqlServerVulnerabilityAssessmentWithAllParameters();
  createOrUpdateAWorkspaceManagedSqlServerVulnerabilityAssessmentWithMinimalParametersWhenStorageAccountAccessKeyIsSpecified();
  createOrUpdateAWorkspaceManagedSqlServerVulnerabilityAssessmentWithMinimalParametersWhenStorageContainerSasKeyIsSpecified();
}

main().catch(console.error);
