/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SqlPoolVulnerabilityAssessment,
  SqlPoolVulnerabilityAssessmentsListOptionalParams,
  VulnerabilityAssessmentName,
  SqlPoolVulnerabilityAssessmentsGetOptionalParams,
  SqlPoolVulnerabilityAssessmentsGetResponse,
  SqlPoolVulnerabilityAssessmentsCreateOrUpdateOptionalParams,
  SqlPoolVulnerabilityAssessmentsCreateOrUpdateResponse,
  SqlPoolVulnerabilityAssessmentsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlPoolVulnerabilityAssessments. */
export interface SqlPoolVulnerabilityAssessments {
  /**
   * Lists the vulnerability assessment policies associated with a SQL pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    options?: SqlPoolVulnerabilityAssessmentsListOptionalParams
  ): PagedAsyncIterableIterator<SqlPoolVulnerabilityAssessment>;
  /**
   * Gets the Sql pool's vulnerability assessment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: SqlPoolVulnerabilityAssessmentsGetOptionalParams
  ): Promise<SqlPoolVulnerabilityAssessmentsGetResponse>;
  /**
   * Creates or updates the Sql pool vulnerability assessment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param parameters The requested resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    parameters: SqlPoolVulnerabilityAssessment,
    options?: SqlPoolVulnerabilityAssessmentsCreateOrUpdateOptionalParams
  ): Promise<SqlPoolVulnerabilityAssessmentsCreateOrUpdateResponse>;
  /**
   * Removes the database's vulnerability assessment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: SqlPoolVulnerabilityAssessmentsDeleteOptionalParams
  ): Promise<void>;
}
