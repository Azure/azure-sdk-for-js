/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  TransparentDataEncryption,
  SqlPoolTransparentDataEncryptionsListOptionalParams,
  TransparentDataEncryptionName,
  SqlPoolTransparentDataEncryptionsGetOptionalParams,
  SqlPoolTransparentDataEncryptionsGetResponse,
  SqlPoolTransparentDataEncryptionsCreateOrUpdateOptionalParams,
  SqlPoolTransparentDataEncryptionsCreateOrUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlPoolTransparentDataEncryptions. */
export interface SqlPoolTransparentDataEncryptions {
  /**
   * Get list of SQL pool's transparent data encryption configurations.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    options?: SqlPoolTransparentDataEncryptionsListOptionalParams
  ): PagedAsyncIterableIterator<TransparentDataEncryption>;
  /**
   * Get a SQL pool's transparent data encryption configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param transparentDataEncryptionName The name of the transparent data encryption configuration.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    transparentDataEncryptionName: TransparentDataEncryptionName,
    options?: SqlPoolTransparentDataEncryptionsGetOptionalParams
  ): Promise<SqlPoolTransparentDataEncryptionsGetResponse>;
  /**
   * Creates or updates a Sql pool's transparent data encryption configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param transparentDataEncryptionName The name of the transparent data encryption configuration.
   * @param parameters The required parameters for creating or updating transparent data encryption.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    transparentDataEncryptionName: TransparentDataEncryptionName,
    parameters: TransparentDataEncryption,
    options?: SqlPoolTransparentDataEncryptionsCreateOrUpdateOptionalParams
  ): Promise<SqlPoolTransparentDataEncryptionsCreateOrUpdateResponse>;
}
