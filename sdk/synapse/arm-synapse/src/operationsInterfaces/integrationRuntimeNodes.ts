/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  IntegrationRuntimeNodesGetOptionalParams,
  IntegrationRuntimeNodesGetResponse,
  UpdateIntegrationRuntimeNodeRequest,
  IntegrationRuntimeNodesUpdateOptionalParams,
  IntegrationRuntimeNodesUpdateResponse,
  IntegrationRuntimeNodesDeleteOptionalParams
} from "../models";

/** Interface representing a IntegrationRuntimeNodes. */
export interface IntegrationRuntimeNodes {
  /**
   * Get an integration runtime node
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param integrationRuntimeName Integration runtime name
   * @param nodeName Integration runtime node name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    integrationRuntimeName: string,
    nodeName: string,
    options?: IntegrationRuntimeNodesGetOptionalParams
  ): Promise<IntegrationRuntimeNodesGetResponse>;
  /**
   * Create an integration runtime node
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param integrationRuntimeName Integration runtime name
   * @param nodeName Integration runtime node name
   * @param updateIntegrationRuntimeNodeRequest The parameters for updating an integration runtime node.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    workspaceName: string,
    integrationRuntimeName: string,
    nodeName: string,
    updateIntegrationRuntimeNodeRequest: UpdateIntegrationRuntimeNodeRequest,
    options?: IntegrationRuntimeNodesUpdateOptionalParams
  ): Promise<IntegrationRuntimeNodesUpdateResponse>;
  /**
   * Delete an integration runtime node
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param integrationRuntimeName Integration runtime name
   * @param nodeName Integration runtime node name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    integrationRuntimeName: string,
    nodeName: string,
    options?: IntegrationRuntimeNodesDeleteOptionalParams
  ): Promise<void>;
}
