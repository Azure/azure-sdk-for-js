/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Key,
  KeysListByWorkspaceOptionalParams,
  KeysGetOptionalParams,
  KeysGetResponse,
  KeysCreateOrUpdateOptionalParams,
  KeysCreateOrUpdateResponse,
  KeysDeleteOptionalParams,
  KeysDeleteResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Keys. */
export interface Keys {
  /**
   * Returns a list of keys in a workspace
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    options?: KeysListByWorkspaceOptionalParams
  ): PagedAsyncIterableIterator<Key>;
  /**
   * Gets a workspace key
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param keyName The name of the workspace key
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    keyName: string,
    options?: KeysGetOptionalParams
  ): Promise<KeysGetResponse>;
  /**
   * Creates or updates a workspace key
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param keyName The name of the workspace key
   * @param keyProperties Key put request properties
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    keyName: string,
    keyProperties: Key,
    options?: KeysCreateOrUpdateOptionalParams
  ): Promise<KeysCreateOrUpdateResponse>;
  /**
   * Deletes a workspace key
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param keyName The name of the workspace key
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    keyName: string,
    options?: KeysDeleteOptionalParams
  ): Promise<KeysDeleteResponse>;
}
