/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  IpFirewallRuleInfo,
  IpFirewallRulesListByWorkspaceOptionalParams,
  IpFirewallRulesCreateOrUpdateOptionalParams,
  IpFirewallRulesCreateOrUpdateResponse,
  IpFirewallRulesDeleteOptionalParams,
  IpFirewallRulesDeleteResponse,
  IpFirewallRulesGetOptionalParams,
  IpFirewallRulesGetResponse,
  ReplaceAllIpFirewallRulesRequest,
  IpFirewallRulesReplaceAllOptionalParams,
  IpFirewallRulesReplaceAllResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a IpFirewallRules. */
export interface IpFirewallRules {
  /**
   * Returns a list of firewall rules
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    options?: IpFirewallRulesListByWorkspaceOptionalParams
  ): PagedAsyncIterableIterator<IpFirewallRuleInfo>;
  /**
   * Creates or updates a firewall rule
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param ruleName The IP firewall rule name
   * @param ipFirewallRuleInfo IP firewall rule properties
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    ruleName: string,
    ipFirewallRuleInfo: IpFirewallRuleInfo,
    options?: IpFirewallRulesCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<IpFirewallRulesCreateOrUpdateResponse>,
      IpFirewallRulesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a firewall rule
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param ruleName The IP firewall rule name
   * @param ipFirewallRuleInfo IP firewall rule properties
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    workspaceName: string,
    ruleName: string,
    ipFirewallRuleInfo: IpFirewallRuleInfo,
    options?: IpFirewallRulesCreateOrUpdateOptionalParams
  ): Promise<IpFirewallRulesCreateOrUpdateResponse>;
  /**
   * Deletes a firewall rule
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param ruleName The IP firewall rule name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    workspaceName: string,
    ruleName: string,
    options?: IpFirewallRulesDeleteOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<IpFirewallRulesDeleteResponse>,
      IpFirewallRulesDeleteResponse
    >
  >;
  /**
   * Deletes a firewall rule
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param ruleName The IP firewall rule name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    workspaceName: string,
    ruleName: string,
    options?: IpFirewallRulesDeleteOptionalParams
  ): Promise<IpFirewallRulesDeleteResponse>;
  /**
   * Get a firewall rule
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param ruleName The IP firewall rule name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    ruleName: string,
    options?: IpFirewallRulesGetOptionalParams
  ): Promise<IpFirewallRulesGetResponse>;
  /**
   * Replaces firewall rules
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param request Replace all IP firewall rules request
   * @param options The options parameters.
   */
  beginReplaceAll(
    resourceGroupName: string,
    workspaceName: string,
    request: ReplaceAllIpFirewallRulesRequest,
    options?: IpFirewallRulesReplaceAllOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<IpFirewallRulesReplaceAllResponse>,
      IpFirewallRulesReplaceAllResponse
    >
  >;
  /**
   * Replaces firewall rules
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param request Replace all IP firewall rules request
   * @param options The options parameters.
   */
  beginReplaceAllAndWait(
    resourceGroupName: string,
    workspaceName: string,
    request: ReplaceAllIpFirewallRulesRequest,
    options?: IpFirewallRulesReplaceAllOptionalParams
  ): Promise<IpFirewallRulesReplaceAllResponse>;
}
