/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SqlPoolBlobAuditingPolicy,
  SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams,
  SqlPoolBlobAuditingPoliciesGetOptionalParams,
  SqlPoolBlobAuditingPoliciesGetResponse,
  SqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams,
  SqlPoolBlobAuditingPoliciesCreateOrUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlPoolBlobAuditingPolicies. */
export interface SqlPoolBlobAuditingPolicies {
  /**
   * Lists auditing settings of a Sql pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param options The options parameters.
   */
  listBySqlPool(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    options?: SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams
  ): PagedAsyncIterableIterator<SqlPoolBlobAuditingPolicy>;
  /**
   * Get a SQL pool's blob auditing policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    options?: SqlPoolBlobAuditingPoliciesGetOptionalParams
  ): Promise<SqlPoolBlobAuditingPoliciesGetResponse>;
  /**
   * Creates or updates a SQL pool's blob auditing policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param parameters The database blob auditing policy.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    parameters: SqlPoolBlobAuditingPolicy,
    options?: SqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams
  ): Promise<SqlPoolBlobAuditingPoliciesCreateOrUpdateResponse>;
}
