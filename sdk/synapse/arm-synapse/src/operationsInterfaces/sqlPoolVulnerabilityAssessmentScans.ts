/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  VulnerabilityAssessmentScanRecord,
  VulnerabilityAssessmentName,
  SqlPoolVulnerabilityAssessmentScansListOptionalParams,
  SqlPoolVulnerabilityAssessmentScansInitiateScanOptionalParams,
  SqlPoolVulnerabilityAssessmentScansExportOptionalParams,
  SqlPoolVulnerabilityAssessmentScansExportResponse,
  SqlPoolVulnerabilityAssessmentScansGetOptionalParams,
  SqlPoolVulnerabilityAssessmentScansGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlPoolVulnerabilityAssessmentScans. */
export interface SqlPoolVulnerabilityAssessmentScans {
  /**
   * Lists the vulnerability assessment scans of a SQL pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    options?: SqlPoolVulnerabilityAssessmentScansListOptionalParams
  ): PagedAsyncIterableIterator<VulnerabilityAssessmentScanRecord>;
  /**
   * Executes a Vulnerability Assessment database scan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param options The options parameters.
   */
  beginInitiateScan(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    scanId: string,
    options?: SqlPoolVulnerabilityAssessmentScansInitiateScanOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Executes a Vulnerability Assessment database scan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param options The options parameters.
   */
  beginInitiateScanAndWait(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    scanId: string,
    options?: SqlPoolVulnerabilityAssessmentScansInitiateScanOptionalParams
  ): Promise<void>;
  /**
   * Convert an existing scan result to a human readable format. If already exists nothing happens
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param options The options parameters.
   */
  export(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    scanId: string,
    options?: SqlPoolVulnerabilityAssessmentScansExportOptionalParams
  ): Promise<SqlPoolVulnerabilityAssessmentScansExportResponse>;
  /**
   * Gets a vulnerability assessment scan record of a Sql pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    vulnerabilityAssessmentName: VulnerabilityAssessmentName,
    scanId: string,
    options?: SqlPoolVulnerabilityAssessmentScansGetOptionalParams
  ): Promise<SqlPoolVulnerabilityAssessmentScansGetResponse>;
}
