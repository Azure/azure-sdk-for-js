/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  WorkloadClassifier,
  SqlPoolWorkloadClassifierListOptionalParams,
  SqlPoolWorkloadClassifierGetOptionalParams,
  SqlPoolWorkloadClassifierGetResponse,
  SqlPoolWorkloadClassifierCreateOrUpdateOptionalParams,
  SqlPoolWorkloadClassifierCreateOrUpdateResponse,
  SqlPoolWorkloadClassifierDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlPoolWorkloadClassifier. */
export interface SqlPoolWorkloadClassifier {
  /**
   * Get list of  Sql pool's workload classifier for workload groups.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param workloadGroupName The name of the workload group.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    workloadGroupName: string,
    options?: SqlPoolWorkloadClassifierListOptionalParams
  ): PagedAsyncIterableIterator<WorkloadClassifier>;
  /**
   * Get a workload classifier of Sql pool's workload group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param workloadGroupName The name of the workload group.
   * @param workloadClassifierName The name of the workload classifier.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    workloadGroupName: string,
    workloadClassifierName: string,
    options?: SqlPoolWorkloadClassifierGetOptionalParams
  ): Promise<SqlPoolWorkloadClassifierGetResponse>;
  /**
   * Create Or Update workload classifier for a Sql pool's workload group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param workloadGroupName The name of the workload group.
   * @param workloadClassifierName The name of the workload classifier.
   * @param parameters The properties of the workload classifier.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    workloadGroupName: string,
    workloadClassifierName: string,
    parameters: WorkloadClassifier,
    options?: SqlPoolWorkloadClassifierCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<SqlPoolWorkloadClassifierCreateOrUpdateResponse>,
      SqlPoolWorkloadClassifierCreateOrUpdateResponse
    >
  >;
  /**
   * Create Or Update workload classifier for a Sql pool's workload group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param workloadGroupName The name of the workload group.
   * @param workloadClassifierName The name of the workload classifier.
   * @param parameters The properties of the workload classifier.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    workloadGroupName: string,
    workloadClassifierName: string,
    parameters: WorkloadClassifier,
    options?: SqlPoolWorkloadClassifierCreateOrUpdateOptionalParams
  ): Promise<SqlPoolWorkloadClassifierCreateOrUpdateResponse>;
  /**
   * Remove workload classifier of a Sql pool's workload group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param workloadGroupName The name of the workload group.
   * @param workloadClassifierName The name of the workload classifier.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    workloadGroupName: string,
    workloadClassifierName: string,
    options?: SqlPoolWorkloadClassifierDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Remove workload classifier of a Sql pool's workload group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param workloadGroupName The name of the workload group.
   * @param workloadClassifierName The name of the workload classifier.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    workloadGroupName: string,
    workloadClassifierName: string,
    options?: SqlPoolWorkloadClassifierDeleteOptionalParams
  ): Promise<void>;
}
