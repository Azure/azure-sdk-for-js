/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Auto-scaling properties of a Big Data pool powered by Apache Spark
 * @summary Spark pool auto-scaling properties
 */
export interface AutoScaleProperties {
  /**
   * The minimum number of nodes the Big Data pool can support.
   */
  minNodeCount?: number;
  /**
   * Whether automatic scaling is enabled for the Big Data pool.
   */
  enabled?: boolean;
  /**
   * The maximum number of nodes the Big Data pool can support.
   */
  maxNodeCount?: number;
}

/**
 * Auto-pausing properties of a Big Data pool powered by Apache Spark
 * @summary Spark pool auto-pausing properties
 */
export interface AutoPauseProperties {
  /**
   * Number of minutes of idle time before the Big Data pool is automatically paused.
   */
  delayInMinutes?: number;
  /**
   * Whether auto-pausing is enabled for the Big Data pool.
   */
  enabled?: boolean;
}

/**
 * Library requirements for a Big Data pool powered by Apache Spark
 * @summary Spark pool library version requirements
 */
export interface LibraryRequirements {
  /**
   * The last update time of the library requirements file.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly time?: Date;
  /**
   * The library requirements.
   */
  content?: string;
  /**
   * The filename of the library requirements file.
   */
  filename?: string;
}

/**
 * An interface representing Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource Id for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or
   * Microsoft.Storage/storageAccounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * A Big Data pool
 * @summary Big Data pool
 */
export interface BigDataPoolResourceInfo extends TrackedResource {
  /**
   * The state of the Big Data pool.
   */
  provisioningState?: string;
  /**
   * Auto-scaling properties
   */
  autoScale?: AutoScaleProperties;
  /**
   * The time when the Big Data pool was created.
   */
  creationDate?: Date;
  /**
   * Auto-pausing properties
   */
  autoPause?: AutoPauseProperties;
  /**
   * The Spark events folder
   */
  sparkEventsFolder?: string;
  /**
   * The number of nodes in the Big Data pool.
   */
  nodeCount?: number;
  /**
   * Library version requirements
   */
  libraryRequirements?: LibraryRequirements;
  /**
   * The Apache Spark version.
   */
  sparkVersion?: string;
  /**
   * The default folder where Spark logs will be written.
   */
  defaultSparkLogFolder?: string;
  /**
   * The level of compute power that each node in the Big Data pool has. Possible values include:
   * 'None', 'Small', 'Medium', 'Large'
   */
  nodeSize?: NodeSize;
  /**
   * The kind of nodes that the Big Data pool provides. Possible values include: 'None',
   * 'MemoryOptimized'
   */
  nodeSizeFamily?: NodeSizeFamily;
}

/**
 * Properties patch for a Big Data pool
 * @summary Patch for a Big Data pool
 */
export interface BigDataPoolPatchInfo {
  /**
   * Updated tags for the Big Data pool
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than
 * required location and tags
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for a Azure Resource Manager resource with an etag.
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The resource management error response.
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Contains details when the response code indicates an error.
 * @summary Error details.
 */
export interface ErrorContract {
  /**
   * The error details.
   */
  error?: ErrorResponse;
}

/**
 * A request about whether a workspace name is available
 * @summary Check name availability request
 */
export interface CheckNameAvailabilityRequest {
  /**
   * Workspace name
   */
  name?: string;
  /**
   * Type: workspace
   */
  type?: string;
}

/**
 * A response saying whether the workspace name is available
 * @summary Check name availability response
 */
export interface CheckNameAvailabilityResponse {
  /**
   * Validation message
   */
  message?: string;
  /**
   * Whether the workspace name is available
   */
  available?: boolean;
  /**
   * Reason the workspace name is or is not available
   */
  reason?: string;
  /**
   * Workspace name
   */
  name?: string;
}

/**
 * IP firewall rule properties
 */
export interface IpFirewallRuleProperties {
  /**
   * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to
   * startIpAddress
   */
  endIpAddress?: string;
  /**
   * Resource provisioning state. Possible values include: 'Provisioning', 'Succeeded', 'Deleting',
   * 'Failed', 'DeleteError'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The start IP address of the firewall rule. Must be IPv4 format
   */
  startIpAddress?: string;
}

/**
 * IP firewall rule
 */
export interface IpFirewallRuleInfo extends BaseResource {
  /**
   * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to
   * startIpAddress
   */
  endIpAddress?: string;
  /**
   * Resource provisioning state. Possible values include: 'Provisioning', 'Succeeded', 'Deleting',
   * 'Failed', 'DeleteError'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The start IP address of the firewall rule. Must be IPv4 format
   */
  startIpAddress?: string;
}

/**
 * Replace all IP firewall rules request
 */
export interface ReplaceAllIpFirewallRulesRequest {
  /**
   * IP firewall rule properties
   */
  ipFirewallRules?: { [propertyName: string]: IpFirewallRuleProperties };
}

/**
 * An existing operation for replacing the firewall rules
 */
export interface ReplaceAllFirewallRulesOperationResponse {
  /**
   * The operation ID
   */
  operationId?: string;
}

/**
 * Description of an available operation
 */
export interface AvailableRpOperationDisplayInfo {
  /**
   * Operation description
   */
  description?: string;
  /**
   * Resource type
   */
  resource?: string;
  /**
   * Resource provider name
   */
  provider?: string;
  /**
   * Operation name
   */
  operation?: string;
}

/**
 * What is this?
 */
export interface OperationMetaMetricDimensionSpecification {
  /**
   * Dimension display name
   */
  displayName?: string;
  /**
   * Dimension unique name
   */
  name?: string;
  /**
   * Whether this metric should be exported for Shoebox
   */
  toBeExportedForShoebox?: boolean;
}

/**
 * What is this?
 */
export interface OperationMetaMetricSpecification {
  /**
   * The source MDM namespace
   */
  sourceMdmNamespace?: string;
  /**
   * Metric display name
   */
  displayName?: string;
  /**
   * Metric unique name
   */
  name?: string;
  /**
   * Metric aggregation type
   */
  aggregationType?: string;
  /**
   * Metric description
   */
  displayDescription?: string;
  /**
   * The source MDM account
   */
  sourceMdmAccount?: string;
  /**
   * Whether the regional MDM account is enabled
   */
  enableRegionalMdmAccount?: boolean;
  /**
   * Metric units
   */
  unit?: string;
  /**
   * Metric dimensions
   */
  dimensions?: OperationMetaMetricDimensionSpecification[];
  /**
   * Whether the metric supports instance-level aggregation
   */
  supportsInstanceLevelAggregation?: boolean;
  /**
   * Metric filter
   */
  metricFilterPattern?: string;
}

/**
 * What is this?
 */
export interface OperationMetaLogSpecification {
  /**
   * Log display name
   */
  displayName?: string;
  /**
   * Time range the log covers
   */
  blobDuration?: string;
  /**
   * Log unique name
   */
  name?: string;
}

/**
 * What is this?
 */
export interface OperationMetaServiceSpecification {
  /**
   * Service metric specifications
   */
  metricSpecifications?: OperationMetaMetricSpecification[];
  /**
   * Service log specifications
   */
  logSpecifications?: OperationMetaLogSpecification[];
}

/**
 * An operation that is available in this resource provider
 */
export interface AvailableRpOperation {
  /**
   * Display properties of the operation
   */
  display?: AvailableRpOperationDisplayInfo;
  /**
   * Whether this operation is a data action
   */
  isDataAction?: string;
  /**
   * Operation name
   */
  name?: string;
  /**
   * Operation service specification
   */
  serviceSpecification?: OperationMetaServiceSpecification;
  /**
   * Operation origin
   */
  origin?: string;
}

/**
 * Error details
 */
export interface ErrorDetail {
  /**
   * Error message
   */
  message?: string;
  /**
   * Error code
   */
  code?: string;
  /**
   * Error target
   */
  target?: string;
}

/**
 * An operation
 */
export interface OperationResource {
  /**
   * Operation ID
   */
  id?: string;
  /**
   * Operation name
   */
  name?: string;
  /**
   * Operation status. Possible values include: 'InProgress', 'Succeeded', 'Failed', 'Canceled'
   */
  status?: OperationStatus;
  /**
   * Operation properties
   */
  properties?: any;
  /**
   * Errors from the operation
   */
  error?: ErrorDetail;
  /**
   * Operation start time
   */
  startTime?: Date;
  /**
   * Operation start time
   */
  endTime?: Date;
  /**
   * Completion percentage of the operation
   */
  percentComplete?: number;
}

/**
 * SQL pool SKU
 * @summary Sku
 */
export interface Sku {
  /**
   * The service tier
   */
  tier?: string;
  /**
   * The SKU name
   */
  name?: string;
}

/**
 * A SQL Analytics pool
 * @summary SQL pool
 */
export interface SqlPool extends TrackedResource {
  /**
   * SQL pool SKU
   */
  sku?: Sku;
  /**
   * Maximum size in bytes
   */
  maxSizeBytes?: number;
  /**
   * Collation mode
   */
  collation?: string;
  /**
   * Source database to create from
   */
  sourceDatabaseId?: string;
  /**
   * Backup database to restore from
   */
  recoverableDatabaseId?: string;
  /**
   * Resource state
   */
  provisioningState?: string;
  /**
   * Resource status
   */
  status?: string;
  /**
   * Snapshot time to restore
   */
  restorePointInTime?: Date;
  /**
   * What is this?
   */
  createMode?: string;
  /**
   * Date the SQL pool was created
   */
  creationDate?: Date;
}

/**
 * A SQL Analytics pool patch info
 * @summary SQL pool patch info
 */
export interface SqlPoolPatchInfo {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location?: string;
  /**
   * SQL pool SKU
   */
  sku?: Sku;
  /**
   * Maximum size in bytes
   */
  maxSizeBytes?: number;
  /**
   * Collation mode
   */
  collation?: string;
  /**
   * Source database to create from
   */
  sourceDatabaseId?: string;
  /**
   * Backup database to restore from
   */
  recoverableDatabaseId?: string;
  /**
   * Resource state
   */
  provisioningState?: string;
  /**
   * Resource status
   */
  status?: string;
  /**
   * Snapshot time to restore
   */
  restorePointInTime?: Date;
  /**
   * What is this?
   */
  createMode?: string;
  /**
   * Date the SQL pool was created
   */
  creationDate?: Date;
}

/**
 * Configuration for metadata sync
 * @summary Metadata sync configuration
 */
export interface MetadataSyncConfig extends BaseResource {
  /**
   * Indicates whether the metadata sync is enabled or disabled
   */
  enabled?: boolean;
}

/**
 * A database geo backup policy.
 */
export interface GeoBackupPolicy extends ProxyResource {
  /**
   * The state of the geo backup policy. Possible values include: 'Disabled', 'Enabled'
   */
  state: GeoBackupPolicyState;
  /**
   * The storage type of the geo backup policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageType?: string;
  /**
   * Kind of geo backup policy.  This is metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Backup policy location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
}

/**
 * A database query.
 */
export interface QueryMetric {
  /**
   * The name of the metric
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The name of the metric for display in user interface
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The unit of measurement. Possible values include: 'percentage', 'KB', 'microseconds'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: QueryMetricUnit;
  /**
   * The measured value
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: number;
}

/**
 * A database query.
 */
export interface QueryInterval {
  /**
   * The start time of the measurement interval (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly intervalStartTime?: Date;
  /**
   * The number of times the query was executed during this interval.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly executionCount?: number;
  /**
   * The list of query metrics during this interval.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metrics?: QueryMetric[];
}

/**
 * A database query.
 */
export interface QueryStatistic {
  /**
   * The id of the query
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly queryId?: string;
  /**
   * The list of query intervals.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly intervals?: QueryInterval[];
}

/**
 * A database query.
 */
export interface TopQueries {
  /**
   * The function that is used to aggregate each query's metrics. Possible values include: 'min',
   * 'max', 'avg', 'sum'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aggregationFunction?: QueryAggregationFunction;
  /**
   * The execution type that is used to filter the query instances that are returned. Possible
   * values include: 'any', 'regular', 'irregular', 'aborted', 'exception'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly executionType?: QueryExecutionType;
  /**
   * The duration of the interval (ISO8601 duration format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly intervalType?: string;
  /**
   * The number of requested queries.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfTopQueries?: number;
  /**
   * The start time for queries that are returned (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly observationStartTime?: Date;
  /**
   * The end time for queries that are returned (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly observationEndTime?: Date;
  /**
   * The type of metric to use for ordering the top metrics. Possible values include: 'cpu', 'io',
   * 'logio', 'duration', 'executionCount'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly observedMetric?: QueryObservedMetricType;
  /**
   * The list of queries.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly queries?: QueryStatistic[];
}

/**
 * Represents the response to a get top queries request.
 */
export interface TopQueriesListResult {
  /**
   * The list of top queries.
   */
  value: TopQueries[];
}

/**
 * User activities of a data warehouse
 */
export interface DataWarehouseUserActivities extends ProxyResource {
  /**
   * Count of running and suspended queries.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly activeQueriesCount?: number;
}

/**
 * Database restore points.
 */
export interface RestorePoint extends ProxyResource {
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The type of restore point. Possible values include: 'CONTINUOUS', 'DISCRETE'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointType?: RestorePointType;
  /**
   * The earliest time to which this database can be restored
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * The time the backup was taken
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointCreationDate?: Date;
  /**
   * The label of restore point for backup request by user
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restorePointLabel?: string;
}

/**
 * Represents a Sql pool replication link.
 */
export interface ReplicationLink extends ProxyResource {
  /**
   * Location of the workspace that contains this firewall rule.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Legacy value indicating whether termination is allowed.  Currently always returns true.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTerminationAllowed?: boolean;
  /**
   * Replication mode of this replication link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationMode?: string;
  /**
   * The name of the workspace hosting the partner Sql pool.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partnerServer?: string;
  /**
   * The name of the partner Sql pool.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partnerDatabase?: string;
  /**
   * The Azure Region of the partner Sql pool.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partnerLocation?: string;
  /**
   * The role of the Sql pool in the replication link. Possible values include: 'Primary',
   * 'Secondary', 'NonReadableSecondary', 'Source', 'Copy'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly role?: ReplicationRole;
  /**
   * The role of the partner Sql pool in the replication link. Possible values include: 'Primary',
   * 'Secondary', 'NonReadableSecondary', 'Source', 'Copy'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partnerRole?: ReplicationRole;
  /**
   * The start time for the replication link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The percentage of seeding complete for the replication link.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The replication state for the replication link. Possible values include: 'PENDING', 'SEEDING',
   * 'CATCH_UP', 'SUSPENDED'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationState?: ReplicationState;
}

/**
 * Represents a Sql pool transparent data encryption configuration.
 */
export interface TransparentDataEncryption extends ProxyResource {
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The status of the database transparent data encryption. Possible values include: 'Enabled',
   * 'Disabled'
   */
  status?: TransparentDataEncryptionStatus;
}

/**
 * A Sql pool blob auditing policy.
 */
export interface SqlPoolBlobAuditingPolicy extends ProxyResource {
  /**
   * Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint or
   * isAzureMonitorTargetEnabled are required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state
   * is Enabled, storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the auditing storage account. If state is Enabled and
   * storageEndpoint is specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * Specifies the Actions-Groups and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination - this will audit all
   * the queries and stored procedures executed against the database, as well as successful and
   * failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when enabling auditing
   * from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific groups that cover your
   * auditing needs. Using unnecessary groups could lead to very large quantities of audit
   * records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures executed against the
   * database, and should not be used in combination with other groups as this will result in
   * duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot
   * be specified for Server auditing policy). The supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * {action} ON {object} BY {principal}
   *
   * Note that <object> in the above format can refer to an object like a table, view, or stored
   * procedure, or an entire database or schema. For the latter cases, the forms
   * DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * Specifies the blob storage subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * Specifies whether storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * Specifies whether audit events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and
   * 'isAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents'
   * diagnostic logs category on the database should be also created.
   * Note that for server level audit you should use the 'master' database as {databaseName}.
   *
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * A Sql pool operation.
 */
export interface SqlPoolOperation extends ProxyResource {
  /**
   * The name of the Sql pool the operation is being performed on.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly databaseName?: string;
  /**
   * The name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The friendly name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operationFriendlyName?: string;
  /**
   * The percentage of the operation completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serverName?: string;
  /**
   * The operation start time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The operation state. Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed',
   * 'CancelInProgress', 'Cancelled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ManagementOperationState;
  /**
   * The operation error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: number;
  /**
   * The operation error description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDescription?: string;
  /**
   * The operation error severity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorSeverity?: number;
  /**
   * Whether or not the error is a user error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isUserError?: boolean;
  /**
   * The estimated completion time of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly estimatedCompletionTime?: Date;
  /**
   * The operation description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Whether the operation can be cancelled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isCancellable?: boolean;
}

/**
 * The Sql pool usages.
 */
export interface SqlPoolUsage {
  /**
   * The name of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceName?: string;
  /**
   * The usage metric display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The current value of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The current limit of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The units of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * The next reset time for the usage metric (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextResetTime?: Date;
}

/**
 * A sensitivity label.
 */
export interface SensitivityLabel extends ProxyResource {
  /**
   * The label name.
   */
  labelName?: string;
  /**
   * The label ID.
   */
  labelId?: string;
  /**
   * The information type.
   */
  informationType?: string;
  /**
   * The information type ID.
   */
  informationTypeId?: string;
  /**
   * Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only.
   * Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or
   * not.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDisabled?: boolean;
}

/**
 * A Sql pool schema resource.
 */
export interface SqlPoolSchema extends ProxyResource {
}

/**
 * A Sql pool table resource.
 */
export interface SqlPoolTable extends ProxyResource {
}

/**
 * A Sql pool column resource.
 */
export interface SqlPoolColumn extends ProxyResource {
  /**
   * The column data type. Possible values include: 'image', 'text', 'uniqueidentifier', 'date',
   * 'time', 'datetime2', 'datetimeoffset', 'tinyint', 'smallint', 'int', 'smalldatetime', 'real',
   * 'money', 'datetime', 'float', 'sql_variant', 'ntext', 'bit', 'decimal', 'numeric',
   * 'smallmoney', 'bigint', 'hierarchyid', 'geometry', 'geography', 'varbinary', 'varchar',
   * 'binary', 'char', 'timestamp', 'nvarchar', 'nchar', 'xml', 'sysname'
   */
  columnType?: ColumnDataType;
}

/**
 * A Sql pool connection policy.
 */
export interface SqlPoolConnectionPolicy extends ProxyResource {
  /**
   * Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The state of security access.
   */
  securityEnabledAccess?: string;
  /**
   * The fully qualified host name of the auditing proxy.
   */
  proxyDnsName?: string;
  /**
   * The port number of the auditing proxy.
   */
  proxyPort?: string;
  /**
   * The visibility of the auditing proxy.
   */
  visibility?: string;
  /**
   * Whether server default is enabled or disabled.
   */
  useServerDefault?: string;
  /**
   * The state of proxy redirection.
   */
  redirectionState?: string;
  /**
   * The connection policy state.
   */
  state?: string;
}

/**
 * Properties of a Vulnerability Assessment recurring scans.
 */
export interface VulnerabilityAssessmentRecurringScansProperties {
  /**
   * Recurring scans state.
   */
  isEnabled?: boolean;
  /**
   * Specifies that the schedule scan notification will be is sent to the subscription
   * administrators. Default value: true.
   */
  emailSubscriptionAdmins?: boolean;
  /**
   * Specifies an array of e-mail addresses to which the scan notification is sent.
   */
  emails?: string[];
}

/**
 * A Sql pool vulnerability assessment.
 */
export interface SqlPoolVulnerabilityAssessment extends ProxyResource {
  /**
   * A blob storage container path to hold the scan results (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level
   * vulnerability assessment policy doesn't set
   */
  storageContainerPath?: string;
  /**
   * A shared access signature (SAS Key) that has write access to the blob container specified in
   * 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified,
   * StorageContainerSasKey is required.
   */
  storageContainerSasKey?: string;
  /**
   * Specifies the identifier key of the storage account for vulnerability assessment scan results.
   * If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * The recurring scans settings
   */
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * Properties of a vulnerability assessment scan error.
 */
export interface VulnerabilityAssessmentScanError {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * A vulnerability assessment scan record.
 */
export interface VulnerabilityAssessmentScanRecord extends ProxyResource {
  /**
   * The scan ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scanId?: string;
  /**
   * The scan trigger type. Possible values include: 'OnDemand', 'Recurring'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly triggerType?: VulnerabilityAssessmentScanTriggerType;
  /**
   * The scan status. Possible values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: VulnerabilityAssessmentScanState;
  /**
   * The scan start time (UTC).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The scan end time (UTC).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * The scan errors.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errors?: VulnerabilityAssessmentScanError[];
  /**
   * The scan results storage container path.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageContainerPath?: string;
  /**
   * The number of failed security checks.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfFailedSecurityChecks?: number;
}

/**
 * A Sql pool security alert policy.
 */
export interface SqlPoolSecurityAlertPolicy extends ProxyResource {
  /**
   * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been
   * applied yet on the specific Sql pool. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection,
   * Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action
   */
  disabledAlerts?: string[];
  /**
   * Specifies an array of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * Specifies that the alert is sent to the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob
   * storage will hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * Specifies the identifier key of the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * Specifies the UTC creation time of the policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: Date;
}

/**
 * Properties for an Sql pool vulnerability assessment rule baseline's result.
 */
export interface SqlPoolVulnerabilityAssessmentRuleBaselineItem {
  /**
   * The rule baseline result
   */
  result: string[];
}

/**
 * A Sql pool vulnerability assessment rule baseline.
 */
export interface SqlPoolVulnerabilityAssessmentRuleBaseline extends ProxyResource {
  /**
   * The rule baseline result
   */
  baselineResults: SqlPoolVulnerabilityAssessmentRuleBaselineItem[];
}

/**
 * A Sql pool Vulnerability Assessment scan export resource.
 */
export interface SqlPoolVulnerabilityAssessmentScansExport extends ProxyResource {
  /**
   * Location of the exported report (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly exportedReportLocation?: string;
}

/**
 * Contains the information necessary to perform a resource move (rename).
 */
export interface ResourceMoveDefinition {
  /**
   * The target ID for the resource
   */
  id: string;
}

/**
 * Contains the information necessary to perform a create Sql pool restore point operation.
 */
export interface CreateSqlPoolRestorePointDefinition {
  /**
   * The restore point label to apply
   */
  restorePointLabel: string;
}

/**
 * Details of the data lake storage account associated with the workspace
 */
export interface DataLakeStorageAccountDetails {
  /**
   * Account URL
   */
  accountUrl?: string;
  /**
   * Filesystem name
   */
  filesystem?: string;
}

/**
 * Virtual Network Profile
 */
export interface VirtualNetworkProfile {
  /**
   * Subnet ID used for computes in workspace
   */
  computeSubnetId?: string;
}

/**
 * Private endpoint details
 */
export interface PrivateEndpoint extends BaseResource {
  /**
   * Resource id of the private endpoint.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Connection state details of the private endpoint
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * The private link service connection status. Possible values include: 'Approved', 'Pending',
   * 'Rejected', 'Disconnected'
   */
  status?: Status;
  /**
   * The private link service connection description.
   */
  description?: string;
  /**
   * The actions required for private link service connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionsRequired?: string;
}

/**
 * A private endpoint connection
 */
export interface PrivateEndpointConnection extends ProxyResource {
  /**
   * The private endpoint which the connection belongs to.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * Connection state of the private endpoint connection.
   */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
  /**
   * Provisioning state of the private endpoint connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * The workspace managed identity
 */
export interface ManagedIdentity {
  /**
   * The principal ID of the workspace managed identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the workspace managed identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The type of managed identity for the workspace. Possible values include: 'None',
   * 'SystemAssigned'
   */
  type?: ResourceIdentityType;
}

/**
 * A workspace
 */
export interface Workspace extends TrackedResource {
  /**
   * Workspace default data lake storage account details
   */
  defaultDataLakeStorage?: DataLakeStorageAccountDetails;
  /**
   * SQL administrator login password
   */
  sqlAdministratorLoginPassword?: string;
  /**
   * Workspace managed resource group
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedResourceGroupName?: string;
  /**
   * Resource provisioning state
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Login for workspace SQL active directory administrator
   */
  sqlAdministratorLogin?: string;
  /**
   * Virtual Network profile
   */
  virtualNetworkProfile?: VirtualNetworkProfile;
  /**
   * Connectivity endpoints
   */
  connectivityEndpoints?: { [propertyName: string]: string };
  /**
   * Setting this to 'default' will ensure that all compute for this workspace is in a virtual
   * network managed on behalf of the user.
   */
  managedVirtualNetwork?: string;
  /**
   * Private endpoint connections to the workspace
   */
  privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * Identity of the workspace
   */
  identity?: ManagedIdentity;
}

/**
 * Workspace active directory administrator
 */
export interface WorkspaceAadAdminInfo extends BaseResource {
  /**
   * Tenant ID of the workspace active directory administrator
   */
  tenantId?: string;
  /**
   * Login of the workspace active directory administrator
   */
  login?: string;
  /**
   * Workspace active directory administrator type
   */
  administratorType?: string;
  /**
   * Object ID of the workspace active directory administrator
   */
  sid?: string;
}

/**
 * Workspace patch details
 */
export interface WorkspacePatchInfo {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * The identity of the workspace
   */
  identity?: ManagedIdentity;
  /**
   * SQL administrator login password
   */
  sqlAdministratorLoginPassword?: string;
  /**
   * Resource provisioning state
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
}

/**
 * Grant sql control to managed identity
 */
export interface ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity {
  /**
   * Desired state. Possible values include: 'Enabled', 'Disabled'
   */
  desiredState?: DesiredState;
  /**
   * Actual state. Possible values include: 'Enabling', 'Enabled', 'Disabling', 'Disabled',
   * 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actualState?: ActualState;
}

/**
 * Sql Control Settings for workspace managed identity
 * @summary Managed Identity Sql Control Settings
 */
export interface ManagedIdentitySqlControlSettingsModel extends ProxyResource {
  /**
   * Grant sql control to managed identity
   */
  grantSqlControlToManagedIdentity?: ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity;
}

/**
 * Azure Synapse nested resource, which belongs to a factory.
 */
export interface SubResource extends BaseResource {
  /**
   * The resource identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Etag identifies change in the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * Contains the possible cases for IntegrationRuntime.
 */
export type IntegrationRuntimeUnion = IntegrationRuntime | ManagedIntegrationRuntime | SelfHostedIntegrationRuntime;

/**
 * Azure Synapse nested object which serves as a compute resource for activities.
 */
export interface IntegrationRuntime {
  /**
   * Polymorphic Discriminator
   */
  type: "IntegrationRuntime";
  /**
   * Integration runtime description.
   */
  description?: string;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Data flow properties for managed integration runtime.
 */
export interface IntegrationRuntimeDataFlowProperties {
  /**
   * Compute type of the cluster which will execute data flow job. Possible values include:
   * 'General', 'MemoryOptimized', 'ComputeOptimized'
   */
  computeType?: DataFlowComputeType;
  /**
   * Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32,
   * 48, 80, 144 and 272.
   */
  coreCount?: number;
  /**
   * Time to live (in minutes) setting of the cluster which will execute data flow job.
   */
  timeToLive?: number;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * VNet properties for managed integration runtime.
 */
export interface IntegrationRuntimeVNetProperties {
  /**
   * The ID of the VNet that this integration runtime will join.
   */
  vNetId?: string;
  /**
   * The name of the subnet this integration runtime will join.
   */
  subnet?: string;
  /**
   * Resource IDs of the public IP addresses that this integration runtime will use.
   */
  publicIPs?: string[];
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * The compute resource properties for managed integration runtime.
 */
export interface IntegrationRuntimeComputeProperties {
  /**
   * The location for managed integration runtime. The supported regions could be found on
   * https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
   */
  location?: string;
  /**
   * The node size requirement to managed integration runtime.
   */
  nodeSize?: string;
  /**
   * The required number of nodes for managed integration runtime.
   */
  numberOfNodes?: number;
  /**
   * Maximum parallel executions count per node for managed integration runtime.
   */
  maxParallelExecutionsPerNode?: number;
  /**
   * Data flow properties for managed integration runtime.
   */
  dataFlowProperties?: IntegrationRuntimeDataFlowProperties;
  /**
   * VNet properties for managed integration runtime.
   */
  vNetProperties?: IntegrationRuntimeVNetProperties;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Contains the possible cases for SecretBase.
 */
export type SecretBaseUnion = SecretBase | SecureString;

/**
 * The base definition of a secret type.
 */
export interface SecretBase {
  /**
   * Polymorphic Discriminator
   */
  type: "SecretBase";
}

/**
 * Azure Synapse secure string definition. The string value will be masked with asterisks '*'
 * during Get or List API calls.
 */
export interface SecureString {
  /**
   * Polymorphic Discriminator
   */
  type: "SecureString";
  /**
   * Value of secure string.
   */
  value: string;
}

/**
 * Catalog information for managed dedicated integration runtime.
 */
export interface IntegrationRuntimeSsisCatalogInfo {
  /**
   * The catalog database server URL.
   */
  catalogServerEndpoint?: string;
  /**
   * The administrator user name of catalog database.
   */
  catalogAdminUserName?: string;
  /**
   * The password of the administrator user account of the catalog database.
   */
  catalogAdminPassword?: SecureString;
  /**
   * The pricing tier for the catalog database. The valid values could be found in
   * https://azure.microsoft.com/en-us/pricing/details/sql-database/. Possible values include:
   * 'Basic', 'Standard', 'Premium', 'PremiumRS'
   */
  catalogPricingTier?: IntegrationRuntimeSsisCatalogPricingTier;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Custom setup script properties for a managed dedicated integration runtime.
 */
export interface IntegrationRuntimeCustomSetupScriptProperties {
  /**
   * The URI of the Azure blob container that contains the custom setup script.
   */
  blobContainerUri?: string;
  /**
   * The SAS token of the Azure blob container.
   */
  sasToken?: SecureString;
}

/**
 * The entity reference.
 */
export interface EntityReference {
  /**
   * The type of this referenced entity. Possible values include: 'IntegrationRuntimeReference',
   * 'LinkedServiceReference'
   */
  type?: IntegrationRuntimeEntityReferenceType;
  /**
   * The name of this referenced entity.
   */
  referenceName?: string;
}

/**
 * Data proxy properties for a managed dedicated integration runtime.
 */
export interface IntegrationRuntimeDataProxyProperties {
  /**
   * The self-hosted integration runtime reference.
   */
  connectVia?: EntityReference;
  /**
   * The staging linked service reference.
   */
  stagingLinkedService?: EntityReference;
  /**
   * The path to contain the staged data in the Blob storage.
   */
  path?: string;
}

/**
 * Contains the possible cases for CustomSetupBase.
 */
export type CustomSetupBaseUnion = CustomSetupBase | CmdkeySetup | EnvironmentVariableSetup | ComponentSetup;

/**
 * The base definition of the custom setup.
 */
export interface CustomSetupBase {
  /**
   * Polymorphic Discriminator
   */
  type: "CustomSetupBase";
}

/**
 * SSIS properties for managed integration runtime.
 */
export interface IntegrationRuntimeSsisProperties {
  /**
   * Catalog information for managed dedicated integration runtime.
   */
  catalogInfo?: IntegrationRuntimeSsisCatalogInfo;
  /**
   * License type for bringing your own license scenario. Possible values include: 'BasePrice',
   * 'LicenseIncluded'
   */
  licenseType?: IntegrationRuntimeLicenseType;
  /**
   * Custom setup script properties for a managed dedicated integration runtime.
   */
  customSetupScriptProperties?: IntegrationRuntimeCustomSetupScriptProperties;
  /**
   * Data proxy properties for a managed dedicated integration runtime.
   */
  dataProxyProperties?: IntegrationRuntimeDataProxyProperties;
  /**
   * The edition for the SSIS Integration Runtime. Possible values include: 'Standard',
   * 'Enterprise'
   */
  edition?: IntegrationRuntimeEdition;
  /**
   * Custom setup without script properties for a SSIS integration runtime.
   */
  expressCustomSetupProperties?: CustomSetupBaseUnion[];
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Managed integration runtime, including managed elastic and managed dedicated integration
 * runtimes.
 */
export interface ManagedIntegrationRuntime {
  /**
   * Polymorphic Discriminator
   */
  type: "Managed";
  /**
   * Integration runtime description.
   */
  description?: string;
  /**
   * Integration runtime state, only valid for managed dedicated integration runtime. Possible
   * values include: 'Initial', 'Stopped', 'Started', 'Starting', 'Stopping', 'NeedRegistration',
   * 'Online', 'Limited', 'Offline', 'AccessDenied'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: IntegrationRuntimeState;
  /**
   * The compute resource for managed integration runtime.
   */
  computeProperties?: IntegrationRuntimeComputeProperties;
  /**
   * SSIS properties for managed integration runtime.
   */
  ssisProperties?: IntegrationRuntimeSsisProperties;
}

/**
 * The custom setup of running cmdkey commands.
 */
export interface CmdkeySetup {
  /**
   * Polymorphic Discriminator
   */
  type: "CmdkeySetup";
  /**
   * The server name of data source access.
   */
  targetName: any;
  /**
   * The user name of data source access.
   */
  userName: any;
  /**
   * The password of data source access.
   */
  password: SecretBaseUnion;
}

/**
 * The custom setup of setting environment variable.
 */
export interface EnvironmentVariableSetup {
  /**
   * Polymorphic Discriminator
   */
  type: "EnvironmentVariableSetup";
  /**
   * The name of the environment variable.
   */
  variableName: string;
  /**
   * The value of the environment variable.
   */
  variableValue: string;
}

/**
 * The custom setup of installing 3rd party components.
 */
export interface ComponentSetup {
  /**
   * Polymorphic Discriminator
   */
  type: "ComponentSetup";
  /**
   * The name of the 3rd party component.
   */
  componentName: string;
  /**
   * The license key to activate the component.
   */
  licenseKey?: SecretBaseUnion;
}

/**
 * Contains the possible cases for LinkedIntegrationRuntimeType.
 */
export type LinkedIntegrationRuntimeTypeUnion = LinkedIntegrationRuntimeType | LinkedIntegrationRuntimeKeyAuthorization | LinkedIntegrationRuntimeRbacAuthorization;

/**
 * The base definition of a linked integration runtime.
 */
export interface LinkedIntegrationRuntimeType {
  /**
   * Polymorphic Discriminator
   */
  authorizationType: "LinkedIntegrationRuntimeType";
}

/**
 * Self-hosted integration runtime.
 */
export interface SelfHostedIntegrationRuntime {
  /**
   * Polymorphic Discriminator
   */
  type: "SelfHosted";
  /**
   * Integration runtime description.
   */
  description?: string;
  linkedInfo?: LinkedIntegrationRuntimeTypeUnion;
}

/**
 * The key authorization type integration runtime.
 */
export interface LinkedIntegrationRuntimeKeyAuthorization {
  /**
   * Polymorphic Discriminator
   */
  authorizationType: "Key";
  /**
   * The key used for authorization.
   */
  key: SecureString;
}

/**
 * The role based access control (RBAC) authorization type integration runtime.
 */
export interface LinkedIntegrationRuntimeRbacAuthorization {
  /**
   * Polymorphic Discriminator
   */
  authorizationType: "RBAC";
  /**
   * The resource identifier of the integration runtime to be shared.
   */
  resourceId: string;
}

/**
 * Contains the possible cases for IntegrationRuntimeStatus.
 */
export type IntegrationRuntimeStatusUnion = IntegrationRuntimeStatus | ManagedIntegrationRuntimeStatus | SelfHostedIntegrationRuntimeStatus;

/**
 * Integration runtime status.
 */
export interface IntegrationRuntimeStatus {
  /**
   * Polymorphic Discriminator
   */
  type: "IntegrationRuntimeStatus";
  /**
   * The workspace name which the integration runtime belong to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataFactoryName?: string;
  /**
   * The state of integration runtime. Possible values include: 'Initial', 'Stopped', 'Started',
   * 'Starting', 'Stopping', 'NeedRegistration', 'Online', 'Limited', 'Offline', 'AccessDenied'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: IntegrationRuntimeState;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Error definition for managed integration runtime.
 */
export interface ManagedIntegrationRuntimeError {
  /**
   * The time when the error occurred.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly time?: Date;
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Managed integration runtime error parameters.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parameters?: string[];
  /**
   * Error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Properties of integration runtime node.
 */
export interface ManagedIntegrationRuntimeNode {
  /**
   * The managed integration runtime node id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeId?: string;
  /**
   * The managed integration runtime node status. Possible values include: 'Starting', 'Available',
   * 'Recycling', 'Unavailable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: ManagedIntegrationRuntimeNodeStatus;
  /**
   * The errors that occurred on this integration runtime node.
   */
  errors?: ManagedIntegrationRuntimeError[];
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Properties of managed integration runtime operation result.
 */
export interface ManagedIntegrationRuntimeOperationResult {
  /**
   * The operation type. Could be start or stop.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The start time of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The operation result.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: string;
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: string;
  /**
   * Managed integration runtime error parameters.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parameters?: string[];
  /**
   * The activity id for the operation request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly activityId?: string;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Managed integration runtime status.
 */
export interface ManagedIntegrationRuntimeStatus {
  /**
   * Polymorphic Discriminator
   */
  type: "Managed";
  /**
   * The workspace name which the integration runtime belong to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataFactoryName?: string;
  /**
   * The state of integration runtime. Possible values include: 'Initial', 'Stopped', 'Started',
   * 'Starting', 'Stopping', 'NeedRegistration', 'Online', 'Limited', 'Offline', 'AccessDenied'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: IntegrationRuntimeState;
  /**
   * The time at which the integration runtime was created, in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createTime?: Date;
  /**
   * The list of nodes for managed integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodes?: ManagedIntegrationRuntimeNode[];
  /**
   * The errors that occurred on this integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly otherErrors?: ManagedIntegrationRuntimeError[];
  /**
   * The last operation result that occurred on this integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastOperation?: ManagedIntegrationRuntimeOperationResult;
}

/**
 * Properties of Self-hosted integration runtime node.
 */
export interface SelfHostedIntegrationRuntimeNode {
  /**
   * Name of the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeName?: string;
  /**
   * Machine name of the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly machineName?: string;
  /**
   * URI for the host machine of the integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostServiceUri?: string;
  /**
   * Status of the integration runtime node. Possible values include: 'NeedRegistration', 'Online',
   * 'Limited', 'Offline', 'Upgrading', 'Initializing', 'InitializeFailed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: SelfHostedIntegrationRuntimeNodeStatus;
  /**
   * The integration runtime capabilities dictionary
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: { [propertyName: string]: string };
  /**
   * Status of the integration runtime node version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly versionStatus?: string;
  /**
   * Version of the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * The time at which the integration runtime node was registered in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly registerTime?: Date;
  /**
   * The most recent time at which the integration runtime was connected in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastConnectTime?: Date;
  /**
   * The time at which the integration runtime will expire in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expiryTime?: Date;
  /**
   * The time the node last started up.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastStartTime?: Date;
  /**
   * The integration runtime node last stop time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastStopTime?: Date;
  /**
   * The result of the last integration runtime node update. Possible values include: 'None',
   * 'Succeed', 'Fail'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdateResult?: IntegrationRuntimeUpdateResult;
  /**
   * The last time for the integration runtime node update start.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastStartUpdateTime?: Date;
  /**
   * The last time for the integration runtime node update end.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastEndUpdateTime?: Date;
  /**
   * Indicates whether this node is the active dispatcher for integration runtime requests.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isActiveDispatcher?: boolean;
  /**
   * Maximum concurrent jobs on the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly concurrentJobsLimit?: number;
  /**
   * The maximum concurrent jobs in this integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxConcurrentJobs?: number;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * The linked integration runtime information.
 */
export interface LinkedIntegrationRuntime {
  /**
   * The name of the linked integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The subscription ID for which the linked integration runtime belong to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The name of the workspace for which the linked integration runtime belong to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataFactoryName?: string;
  /**
   * The location of the workspace for which the linked integration runtime belong to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataFactoryLocation?: string;
  /**
   * The creating time of the linked integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createTime?: Date;
}

/**
 * Self-hosted integration runtime status.
 */
export interface SelfHostedIntegrationRuntimeStatus {
  /**
   * Polymorphic Discriminator
   */
  type: "SelfHosted";
  /**
   * The workspace name which the integration runtime belong to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataFactoryName?: string;
  /**
   * The state of integration runtime. Possible values include: 'Initial', 'Stopped', 'Started',
   * 'Starting', 'Stopping', 'NeedRegistration', 'Online', 'Limited', 'Offline', 'AccessDenied'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: IntegrationRuntimeState;
  /**
   * The time at which the integration runtime was created, in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createTime?: Date;
  /**
   * The task queue id of the integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly taskQueueId?: string;
  /**
   * It is used to set the encryption mode for node-node communication channel (when more than 2
   * self-hosted integration runtime nodes exist). Possible values include: 'NotSet',
   * 'SslEncrypted', 'NotEncrypted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly internalChannelEncryption?: IntegrationRuntimeInternalChannelEncryptionMode;
  /**
   * Version of the integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * The list of nodes for this integration runtime.
   */
  nodes?: SelfHostedIntegrationRuntimeNode[];
  /**
   * The date at which the integration runtime will be scheduled to update, in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scheduledUpdateDate?: Date;
  /**
   * The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3
   * hours
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updateDelayOffset?: string;
  /**
   * The local time zone offset in hours.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localTimeZoneOffset?: string;
  /**
   * Object with additional information about integration runtime capabilities.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: { [propertyName: string]: string };
  /**
   * The URLs for the services used in integration runtime backend service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceUrls?: string[];
  /**
   * Whether Self-hosted integration runtime auto update has been turned on. Possible values
   * include: 'On', 'Off'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly autoUpdate?: IntegrationRuntimeAutoUpdate;
  /**
   * Status of the integration runtime version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly versionStatus?: string;
  /**
   * The list of linked integration runtimes that are created to share with this integration
   * runtime.
   */
  links?: LinkedIntegrationRuntime[];
  /**
   * The version that the integration runtime is going to update to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pushedVersion?: string;
  /**
   * The latest version on download center.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly latestVersion?: string;
  /**
   * The estimated time when the self-hosted integration runtime will be updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly autoUpdateETA?: Date;
}

/**
 * Connection information for encrypting the on-premises data source credentials.
 */
export interface IntegrationRuntimeConnectionInfo {
  /**
   * The token generated in service. Callers use this token to authenticate to integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceToken?: string;
  /**
   * The integration runtime SSL certificate thumbprint. Click-Once application uses it to do
   * server validation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly identityCertThumbprint?: string;
  /**
   * The on-premises integration runtime host URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostServiceUri?: string;
  /**
   * The integration runtime version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * The public key for encrypting a credential when transferring the credential to the integration
   * runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicKey?: string;
  /**
   * Whether the identity certificate is expired.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isIdentityCertExprired?: boolean;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Parameters to regenerate the authentication key.
 */
export interface IntegrationRuntimeRegenerateKeyParameters {
  /**
   * The name of the authentication key to regenerate. Possible values include: 'authKey1',
   * 'authKey2'
   */
  keyName?: IntegrationRuntimeAuthKeyName;
}

/**
 * The integration runtime authentication keys.
 */
export interface IntegrationRuntimeAuthKeys {
  /**
   * The primary integration runtime authentication key.
   */
  authKey1?: string;
  /**
   * The secondary integration runtime authentication key.
   */
  authKey2?: string;
}

/**
 * Monitoring data for integration runtime node.
 */
export interface IntegrationRuntimeNodeMonitoringData {
  /**
   * Name of the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeName?: string;
  /**
   * Available memory (MB) on the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availableMemoryInMB?: number;
  /**
   * CPU percentage on the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cpuUtilization?: number;
  /**
   * Maximum concurrent jobs on the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly concurrentJobsLimit?: number;
  /**
   * The number of jobs currently running on the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly concurrentJobsRunning?: number;
  /**
   * The maximum concurrent jobs in this integration runtime.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxConcurrentJobs?: number;
  /**
   * Sent bytes on the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sentBytes?: number;
  /**
   * Received bytes on the integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly receivedBytes?: number;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
}

/**
 * Get monitoring data response.
 */
export interface IntegrationRuntimeMonitoringData {
  /**
   * Integration runtime name.
   */
  name?: string;
  /**
   * Integration runtime node monitoring data.
   */
  nodes?: IntegrationRuntimeNodeMonitoringData[];
}

/**
 * The IP address of self-hosted integration runtime node.
 */
export interface IntegrationRuntimeNodeIpAddress {
  /**
   * The IP address of self-hosted integration runtime node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ipAddress?: string;
}

/**
 * Contains the possible cases for SsisObjectMetadata.
 */
export type SsisObjectMetadataUnion = SsisObjectMetadata | SsisFolder | SsisProject | SsisPackage | SsisEnvironment;

/**
 * SSIS object metadata.
 */
export interface SsisObjectMetadata {
  /**
   * Polymorphic Discriminator
   */
  type: "SsisObjectMetadata";
  /**
   * Metadata id.
   */
  id?: number;
  /**
   * Metadata name.
   */
  name?: string;
  /**
   * Metadata description.
   */
  description?: string;
}

/**
 * A list of SSIS object metadata.
 */
export interface SsisObjectMetadataListResponse {
  /**
   * List of SSIS object metadata.
   */
  value?: SsisObjectMetadataUnion[];
  /**
   * The link to the next page of results, if any remaining results exist.
   */
  nextLink?: string;
}

/**
 * Ssis folder.
 */
export interface SsisFolder {
  /**
   * Polymorphic Discriminator
   */
  type: "Folder";
  /**
   * Metadata id.
   */
  id?: number;
  /**
   * Metadata name.
   */
  name?: string;
  /**
   * Metadata description.
   */
  description?: string;
}

/**
 * Ssis environment reference.
 */
export interface SsisEnvironmentReference {
  /**
   * Environment reference id.
   */
  id?: number;
  /**
   * Environment folder name.
   */
  environmentFolderName?: string;
  /**
   * Environment name.
   */
  environmentName?: string;
  /**
   * Reference type
   */
  referenceType?: string;
}

/**
 * Ssis parameter.
 */
export interface SsisParameter {
  /**
   * Parameter id.
   */
  id?: number;
  /**
   * Parameter name.
   */
  name?: string;
  /**
   * Parameter description.
   */
  description?: string;
  /**
   * Parameter type.
   */
  dataType?: string;
  /**
   * Whether parameter is required.
   */
  required?: boolean;
  /**
   * Whether parameter is sensitive.
   */
  sensitive?: boolean;
  /**
   * Design default value of parameter.
   */
  designDefaultValue?: string;
  /**
   * Default value of parameter.
   */
  defaultValue?: string;
  /**
   * Default sensitive value of parameter.
   */
  sensitiveDefaultValue?: string;
  /**
   * Parameter value type.
   */
  valueType?: string;
  /**
   * Parameter value set.
   */
  valueSet?: boolean;
  /**
   * Parameter reference variable.
   */
  variable?: string;
}

/**
 * Ssis project.
 */
export interface SsisProject {
  /**
   * Polymorphic Discriminator
   */
  type: "Project";
  /**
   * Metadata id.
   */
  id?: number;
  /**
   * Metadata name.
   */
  name?: string;
  /**
   * Metadata description.
   */
  description?: string;
  /**
   * Folder id which contains project.
   */
  folderId?: number;
  /**
   * Project version.
   */
  version?: number;
  /**
   * Environment reference in project
   */
  environmentRefs?: SsisEnvironmentReference[];
  /**
   * Parameters in project
   */
  parameters?: SsisParameter[];
}

/**
 * Ssis Package.
 */
export interface SsisPackage {
  /**
   * Polymorphic Discriminator
   */
  type: "Package";
  /**
   * Metadata id.
   */
  id?: number;
  /**
   * Metadata name.
   */
  name?: string;
  /**
   * Metadata description.
   */
  description?: string;
  /**
   * Folder id which contains package.
   */
  folderId?: number;
  /**
   * Project version which contains package.
   */
  projectVersion?: number;
  /**
   * Project id which contains package.
   */
  projectId?: number;
  /**
   * Parameters in package
   */
  parameters?: SsisParameter[];
}

/**
 * Ssis variable.
 */
export interface SsisVariable {
  /**
   * Variable id.
   */
  id?: number;
  /**
   * Variable name.
   */
  name?: string;
  /**
   * Variable description.
   */
  description?: string;
  /**
   * Variable type.
   */
  dataType?: string;
  /**
   * Whether variable is sensitive.
   */
  sensitive?: boolean;
  /**
   * Variable value.
   */
  value?: string;
  /**
   * Variable sensitive value.
   */
  sensitiveValue?: string;
}

/**
 * Ssis environment.
 */
export interface SsisEnvironment {
  /**
   * Polymorphic Discriminator
   */
  type: "Environment";
  /**
   * Metadata id.
   */
  id?: number;
  /**
   * Metadata name.
   */
  name?: string;
  /**
   * Metadata description.
   */
  description?: string;
  /**
   * Folder id which contains environment.
   */
  folderId?: number;
  /**
   * Variable in environment
   */
  variables?: SsisVariable[];
}

/**
 * Update integration runtime request.
 */
export interface UpdateIntegrationRuntimeRequest {
  /**
   * Enables or disables the auto-update feature of the self-hosted integration runtime. See
   * https://go.microsoft.com/fwlink/?linkid=854189. Possible values include: 'On', 'Off'
   */
  autoUpdate?: IntegrationRuntimeAutoUpdate;
  /**
   * The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto
   * update will happen on that time.
   */
  updateDelayOffset?: string;
}

/**
 * Integration runtime resource type.
 */
export interface IntegrationRuntimeResource extends SubResource {
  /**
   * Integration runtime properties.
   */
  properties: IntegrationRuntimeUnion;
}

/**
 * The request payload of get SSIS object metadata.
 */
export interface GetSsisObjectMetadataRequest {
  /**
   * Metadata path.
   */
  metadataPath?: string;
}

/**
 * Update integration runtime node request.
 */
export interface UpdateIntegrationRuntimeNodeRequest {
  /**
   * The number of concurrent jobs permitted to run on the integration runtime node. Values between
   * 1 and maxConcurrentJobs(inclusive) are allowed.
   */
  concurrentJobsLimit?: number;
}

/**
 * Integration runtime status response.
 */
export interface IntegrationRuntimeStatusResponse {
  /**
   * The integration runtime name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Integration runtime properties.
   */
  properties: IntegrationRuntimeStatusUnion;
}

/**
 * The status of the operation.
 */
export interface SsisObjectMetadataStatusResponse {
  /**
   * The status of the operation.
   */
  status?: string;
  /**
   * The operation name.
   */
  name?: string;
  /**
   * The operation properties.
   */
  properties?: string;
  /**
   * The operation error message.
   */
  error?: string;
}

/**
 * Properties of a private link resource.
 */
export interface PrivateLinkResourceProperties {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredMembers?: string[];
  /**
   * Required DNS zone names of the the private link resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredZoneNames?: string[];
}

/**
 * A private link resource
 */
export interface PrivateLinkResource extends ProxyResource {
  /**
   * The private link resource properties.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: PrivateLinkResourceProperties;
}

/**
 * A privateLinkHub
 */
export interface PrivateLinkHub extends TrackedResource {
  /**
   * PrivateLinkHub provisioning state. Possible values include: 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState1;
}

/**
 * PrivateLinkHub patch details
 */
export interface PrivateLinkHubPatchInfo {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Optional Parameters.
 */
export interface BigDataPoolsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to stop any running jobs in the Big Data pool. Default value: false.
   */
  force?: boolean;
}

/**
 * Optional Parameters.
 */
export interface BigDataPoolsBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to stop any running jobs in the Big Data pool. Default value: false.
   */
  force?: boolean;
}

/**
 * Optional Parameters.
 */
export interface SqlPoolSensitivityLabelsListCurrentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SqlPoolSensitivityLabelsListRecommendedOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies whether to include disabled recommendations or not.
   */
  includeDisabledRecommendations?: boolean;
  /**
   * An OData query option to indicate how many elements to skip in the collection.
   */
  skipToken?: string;
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SqlPoolSchemasListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SqlPoolTablesListBySchemaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface SqlPoolTableColumnsListByTableNameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that filters elements in the collection.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface IntegrationRuntimesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the integration runtime entity. Should only be specified for get. If the ETag matches
   * the existing entity tag, or if * was provided, then no content will be returned.
   */
  ifNoneMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface IntegrationRuntimesCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * ETag of the integration runtime entity. Should only be specified for update, for which it
   * should match existing entity or can be * for unconditional update.
   */
  ifMatch?: string;
}

/**
 * Optional Parameters.
 */
export interface IntegrationRuntimeObjectMetadataGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters for getting a SSIS object metadata.
   */
  getMetadataRequest?: GetSsisObjectMetadataRequest;
}

/**
 * An interface representing SynapseManagementClientOptions.
 */
export interface SynapseManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Collection of Big Data pool information
 * @summary Collection of Big Data pools
 * @extends Array<BigDataPoolResourceInfo>
 */
export interface BigDataPoolResourceInfoListResult extends Array<BigDataPoolResourceInfo> {
  /**
   * Link to the next page of results
   */
  nextLink?: string;
}

/**
 * @interface
 * List of IP firewall rules
 * @extends Array<IpFirewallRuleInfo>
 */
export interface IpFirewallRuleInfoListResult extends Array<IpFirewallRuleInfo> {
  /**
   * Link to next page of results
   */
  nextLink?: string;
}

/**
 * @interface
 * List of SQL pools
 * @summary SQL pool collection
 * @extends Array<SqlPool>
 */
export interface SqlPoolInfoListResult extends Array<SqlPool> {
  /**
   * Link to the next page of results
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of long term retention backups.
 * @extends Array<RestorePoint>
 */
export interface RestorePointListResult extends Array<RestorePoint> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Represents the response to a List Sql pool replication link request.
 * @extends Array<ReplicationLink>
 */
export interface ReplicationLinkListResult extends Array<ReplicationLink> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response to a list Sql pool operations request
 * @extends Array<SqlPoolOperation>
 */
export interface SqlPoolBlobAuditingPolicySqlPoolOperationListResult extends Array<SqlPoolOperation> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response to a list Sql pool usages request.
 * @extends Array<SqlPoolUsage>
 */
export interface SqlPoolUsageListResult extends Array<SqlPoolUsage> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of sensitivity labels.
 * @extends Array<SensitivityLabel>
 */
export interface SensitivityLabelListResult extends Array<SensitivityLabel> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Sql pool schemas.
 * @extends Array<SqlPoolSchema>
 */
export interface SqlPoolSchemaListResult extends Array<SqlPoolSchema> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Sql pool tables.
 * @extends Array<SqlPoolTable>
 */
export interface SqlPoolTableListResult extends Array<SqlPoolTable> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of Sql pool columns.
 * @extends Array<SqlPoolColumn>
 */
export interface SqlPoolColumnListResult extends Array<SqlPoolColumn> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of the Sql pool's vulnerability assessments.
 * @extends Array<SqlPoolVulnerabilityAssessment>
 */
export interface SqlPoolVulnerabilityAssessmentListResult extends Array<SqlPoolVulnerabilityAssessment> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of vulnerability assessment scan records.
 * @extends Array<VulnerabilityAssessmentScanRecord>
 */
export interface VulnerabilityAssessmentScanRecordListResult extends Array<VulnerabilityAssessmentScanRecord> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of workspaces
 * @extends Array<Workspace>
 */
export interface WorkspaceInfoListResult extends Array<Workspace> {
  /**
   * Link to the next page of results
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of integration runtime resources.
 * @extends Array<IntegrationRuntimeResource>
 */
export interface IntegrationRuntimeListResponse extends Array<IntegrationRuntimeResource> {
  /**
   * The link to the next page of results, if any remaining results exist.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of private link resources
 * @extends Array<PrivateLinkResource>
 */
export interface PrivateLinkResourceListResult extends Array<PrivateLinkResource> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * A list of private endpoint connections
 * @extends Array<PrivateEndpointConnection>
 */
export interface PrivateEndpointConnectionList extends Array<PrivateEndpointConnection> {
  /**
   * Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of privateLinkHubs
 * @extends Array<PrivateLinkHub>
 */
export interface PrivateLinkHubInfoListResult extends Array<PrivateLinkHub> {
  /**
   * Link to the next page of results
   */
  nextLink?: string;
}

/**
 * Defines values for NodeSize.
 * Possible values include: 'None', 'Small', 'Medium', 'Large'
 * @readonly
 * @enum {string}
 */
export type NodeSize = 'None' | 'Small' | 'Medium' | 'Large';

/**
 * Defines values for NodeSizeFamily.
 * Possible values include: 'None', 'MemoryOptimized'
 * @readonly
 * @enum {string}
 */
export type NodeSizeFamily = 'None' | 'MemoryOptimized';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Provisioning', 'Succeeded', 'Deleting', 'Failed', 'DeleteError'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Provisioning' | 'Succeeded' | 'Deleting' | 'Failed' | 'DeleteError';

/**
 * Defines values for OperationStatus.
 * Possible values include: 'InProgress', 'Succeeded', 'Failed', 'Canceled'
 * @readonly
 * @enum {string}
 */
export type OperationStatus = 'InProgress' | 'Succeeded' | 'Failed' | 'Canceled';

/**
 * Defines values for GeoBackupPolicyState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type GeoBackupPolicyState = 'Disabled' | 'Enabled';

/**
 * Defines values for QueryAggregationFunction.
 * Possible values include: 'min', 'max', 'avg', 'sum'
 * @readonly
 * @enum {string}
 */
export type QueryAggregationFunction = 'min' | 'max' | 'avg' | 'sum';

/**
 * Defines values for QueryExecutionType.
 * Possible values include: 'any', 'regular', 'irregular', 'aborted', 'exception'
 * @readonly
 * @enum {string}
 */
export type QueryExecutionType = 'any' | 'regular' | 'irregular' | 'aborted' | 'exception';

/**
 * Defines values for QueryObservedMetricType.
 * Possible values include: 'cpu', 'io', 'logio', 'duration', 'executionCount'
 * @readonly
 * @enum {string}
 */
export type QueryObservedMetricType = 'cpu' | 'io' | 'logio' | 'duration' | 'executionCount';

/**
 * Defines values for QueryMetricUnit.
 * Possible values include: 'percentage', 'KB', 'microseconds'
 * @readonly
 * @enum {string}
 */
export type QueryMetricUnit = 'percentage' | 'KB' | 'microseconds';

/**
 * Defines values for RestorePointType.
 * Possible values include: 'CONTINUOUS', 'DISCRETE'
 * @readonly
 * @enum {string}
 */
export type RestorePointType = 'CONTINUOUS' | 'DISCRETE';

/**
 * Defines values for ReplicationRole.
 * Possible values include: 'Primary', 'Secondary', 'NonReadableSecondary', 'Source', 'Copy'
 * @readonly
 * @enum {string}
 */
export type ReplicationRole = 'Primary' | 'Secondary' | 'NonReadableSecondary' | 'Source' | 'Copy';

/**
 * Defines values for ReplicationState.
 * Possible values include: 'PENDING', 'SEEDING', 'CATCH_UP', 'SUSPENDED'
 * @readonly
 * @enum {string}
 */
export type ReplicationState = 'PENDING' | 'SEEDING' | 'CATCH_UP' | 'SUSPENDED';

/**
 * Defines values for TransparentDataEncryptionStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type TransparentDataEncryptionStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for BlobAuditingPolicyState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type BlobAuditingPolicyState = 'Enabled' | 'Disabled';

/**
 * Defines values for ManagementOperationState.
 * Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed', 'CancelInProgress',
 * 'Cancelled'
 * @readonly
 * @enum {string}
 */
export type ManagementOperationState = 'Pending' | 'InProgress' | 'Succeeded' | 'Failed' | 'CancelInProgress' | 'Cancelled';

/**
 * Defines values for ColumnDataType.
 * Possible values include: 'image', 'text', 'uniqueidentifier', 'date', 'time', 'datetime2',
 * 'datetimeoffset', 'tinyint', 'smallint', 'int', 'smalldatetime', 'real', 'money', 'datetime',
 * 'float', 'sql_variant', 'ntext', 'bit', 'decimal', 'numeric', 'smallmoney', 'bigint',
 * 'hierarchyid', 'geometry', 'geography', 'varbinary', 'varchar', 'binary', 'char', 'timestamp',
 * 'nvarchar', 'nchar', 'xml', 'sysname'
 * @readonly
 * @enum {string}
 */
export type ColumnDataType = 'image' | 'text' | 'uniqueidentifier' | 'date' | 'time' | 'datetime2' | 'datetimeoffset' | 'tinyint' | 'smallint' | 'int' | 'smalldatetime' | 'real' | 'money' | 'datetime' | 'float' | 'sql_variant' | 'ntext' | 'bit' | 'decimal' | 'numeric' | 'smallmoney' | 'bigint' | 'hierarchyid' | 'geometry' | 'geography' | 'varbinary' | 'varchar' | 'binary' | 'char' | 'timestamp' | 'nvarchar' | 'nchar' | 'xml' | 'sysname';

/**
 * Defines values for VulnerabilityAssessmentScanTriggerType.
 * Possible values include: 'OnDemand', 'Recurring'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentScanTriggerType = 'OnDemand' | 'Recurring';

/**
 * Defines values for VulnerabilityAssessmentScanState.
 * Possible values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentScanState = 'Passed' | 'Failed' | 'FailedToRun' | 'InProgress';

/**
 * Defines values for SecurityAlertPolicyState.
 * Possible values include: 'New', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SecurityAlertPolicyState = 'New' | 'Enabled' | 'Disabled';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'None', 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'None' | 'SystemAssigned';

/**
 * Defines values for IntegrationRuntimeType.
 * Possible values include: 'Managed', 'SelfHosted'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeType = 'Managed' | 'SelfHosted';

/**
 * Defines values for IntegrationRuntimeState.
 * Possible values include: 'Initial', 'Stopped', 'Started', 'Starting', 'Stopping',
 * 'NeedRegistration', 'Online', 'Limited', 'Offline', 'AccessDenied'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeState = 'Initial' | 'Stopped' | 'Started' | 'Starting' | 'Stopping' | 'NeedRegistration' | 'Online' | 'Limited' | 'Offline' | 'AccessDenied';

/**
 * Defines values for DataFlowComputeType.
 * Possible values include: 'General', 'MemoryOptimized', 'ComputeOptimized'
 * @readonly
 * @enum {string}
 */
export type DataFlowComputeType = 'General' | 'MemoryOptimized' | 'ComputeOptimized';

/**
 * Defines values for IntegrationRuntimeSsisCatalogPricingTier.
 * Possible values include: 'Basic', 'Standard', 'Premium', 'PremiumRS'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeSsisCatalogPricingTier = 'Basic' | 'Standard' | 'Premium' | 'PremiumRS';

/**
 * Defines values for IntegrationRuntimeLicenseType.
 * Possible values include: 'BasePrice', 'LicenseIncluded'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeLicenseType = 'BasePrice' | 'LicenseIncluded';

/**
 * Defines values for IntegrationRuntimeEntityReferenceType.
 * Possible values include: 'IntegrationRuntimeReference', 'LinkedServiceReference'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeEntityReferenceType = 'IntegrationRuntimeReference' | 'LinkedServiceReference';

/**
 * Defines values for IntegrationRuntimeEdition.
 * Possible values include: 'Standard', 'Enterprise'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeEdition = 'Standard' | 'Enterprise';

/**
 * Defines values for ManagedIntegrationRuntimeNodeStatus.
 * Possible values include: 'Starting', 'Available', 'Recycling', 'Unavailable'
 * @readonly
 * @enum {string}
 */
export type ManagedIntegrationRuntimeNodeStatus = 'Starting' | 'Available' | 'Recycling' | 'Unavailable';

/**
 * Defines values for IntegrationRuntimeInternalChannelEncryptionMode.
 * Possible values include: 'NotSet', 'SslEncrypted', 'NotEncrypted'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeInternalChannelEncryptionMode = 'NotSet' | 'SslEncrypted' | 'NotEncrypted';

/**
 * Defines values for SelfHostedIntegrationRuntimeNodeStatus.
 * Possible values include: 'NeedRegistration', 'Online', 'Limited', 'Offline', 'Upgrading',
 * 'Initializing', 'InitializeFailed'
 * @readonly
 * @enum {string}
 */
export type SelfHostedIntegrationRuntimeNodeStatus = 'NeedRegistration' | 'Online' | 'Limited' | 'Offline' | 'Upgrading' | 'Initializing' | 'InitializeFailed';

/**
 * Defines values for IntegrationRuntimeUpdateResult.
 * Possible values include: 'None', 'Succeed', 'Fail'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeUpdateResult = 'None' | 'Succeed' | 'Fail';

/**
 * Defines values for IntegrationRuntimeAutoUpdate.
 * Possible values include: 'On', 'Off'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeAutoUpdate = 'On' | 'Off';

/**
 * Defines values for IntegrationRuntimeAuthKeyName.
 * Possible values include: 'authKey1', 'authKey2'
 * @readonly
 * @enum {string}
 */
export type IntegrationRuntimeAuthKeyName = 'authKey1' | 'authKey2';

/**
 * Defines values for SsisObjectMetadataType.
 * Possible values include: 'Folder', 'Project', 'Package', 'Environment'
 * @readonly
 * @enum {string}
 */
export type SsisObjectMetadataType = 'Folder' | 'Project' | 'Package' | 'Environment';

/**
 * Defines values for VulnerabilityAssessmentPolicyBaselineName.
 * Possible values include: 'master', 'default'
 * @readonly
 * @enum {string}
 */
export type VulnerabilityAssessmentPolicyBaselineName = 'master' | 'default';

/**
 * Defines values for Status.
 * Possible values include: 'Approved', 'Pending', 'Rejected', 'Disconnected'
 * @readonly
 * @enum {string}
 */
export type Status = 'Approved' | 'Pending' | 'Rejected' | 'Disconnected';

/**
 * Defines values for DesiredState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type DesiredState = 'Enabled' | 'Disabled';

/**
 * Defines values for ActualState.
 * Possible values include: 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type ActualState = 'Enabling' | 'Enabled' | 'Disabling' | 'Disabled' | 'Unknown';

/**
 * Defines values for ProvisioningState1.
 * Possible values include: 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState1 = 'Succeeded' | 'Failed';

/**
 * Contains response data for the get operation.
 */
export type BigDataPoolsGetResponse = BigDataPoolResourceInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BigDataPoolResourceInfo;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BigDataPoolsUpdateResponse = BigDataPoolResourceInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BigDataPoolResourceInfo;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BigDataPoolsCreateOrUpdateResponse = BigDataPoolResourceInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BigDataPoolResourceInfo;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type BigDataPoolsDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type BigDataPoolsListByWorkspaceResponse = BigDataPoolResourceInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BigDataPoolResourceInfoListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BigDataPoolsBeginCreateOrUpdateResponse = BigDataPoolResourceInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BigDataPoolResourceInfo;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type BigDataPoolsBeginDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type BigDataPoolsListByWorkspaceNextResponse = BigDataPoolResourceInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BigDataPoolResourceInfoListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type OperationsCheckNameAvailabilityResponse = CheckNameAvailabilityResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = Array<AvailableRpOperation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableRpOperation[];
    };
};

/**
 * Contains response data for the getAzureAsyncHeaderResult operation.
 */
export type OperationsGetAzureAsyncHeaderResultResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type IpFirewallRulesListByWorkspaceResponse = IpFirewallRuleInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFirewallRuleInfoListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IpFirewallRulesCreateOrUpdateResponse = IpFirewallRuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFirewallRuleInfo;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type IpFirewallRulesDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IpFirewallRulesGetResponse = IpFirewallRuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFirewallRuleInfo;
    };
};

/**
 * Contains response data for the replaceAll operation.
 */
export type IpFirewallRulesReplaceAllResponse = ReplaceAllFirewallRulesOperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplaceAllFirewallRulesOperationResponse;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type IpFirewallRulesBeginCreateOrUpdateResponse = IpFirewallRuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFirewallRuleInfo;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type IpFirewallRulesBeginDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginReplaceAll operation.
 */
export type IpFirewallRulesBeginReplaceAllResponse = ReplaceAllFirewallRulesOperationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplaceAllFirewallRulesOperationResponse;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type IpFirewallRulesListByWorkspaceNextResponse = IpFirewallRuleInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFirewallRuleInfoListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolsGetResponse = SqlPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPool;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SqlPoolsUpdateResponse = SqlPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPool;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SqlPoolsCreateResponse = SqlPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPool;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type SqlPoolsDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type SqlPoolsListByWorkspaceResponse = SqlPoolInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolInfoListResult;
    };
};

/**
 * Contains response data for the pause operation.
 */
export type SqlPoolsPauseResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the resume operation.
 */
export type SqlPoolsResumeResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type SqlPoolsBeginCreateResponse = SqlPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPool;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type SqlPoolsBeginDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginPause operation.
 */
export type SqlPoolsBeginPauseResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginResume operation.
 */
export type SqlPoolsBeginResumeResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type SqlPoolsListByWorkspaceNextResponse = SqlPoolInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolInfoListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolMetadataSyncConfigsGetResponse = MetadataSyncConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetadataSyncConfig;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SqlPoolMetadataSyncConfigsCreateResponse = MetadataSyncConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetadataSyncConfig;
    };
};

/**
 * Contains response data for the getLocationHeaderResult operation.
 */
export type SqlPoolOperationResultsGetLocationHeaderResultResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolGeoBackupPoliciesGetResponse = GeoBackupPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoBackupPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolDataWarehouseUserActivitiesGetResponse = DataWarehouseUserActivities & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataWarehouseUserActivities;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlPoolRestorePointsListResponse = RestorePointListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePointListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SqlPoolRestorePointsCreateResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type SqlPoolRestorePointsBeginCreateResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlPoolRestorePointsListNextResponse = RestorePointListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePointListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlPoolReplicationLinksListResponse = ReplicationLinkListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationLinkListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlPoolReplicationLinksListNextResponse = ReplicationLinkListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationLinkListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolTransparentDataEncryptionsGetResponse = TransparentDataEncryption & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransparentDataEncryption;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SqlPoolTransparentDataEncryptionsCreateOrUpdateResponse = TransparentDataEncryption & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransparentDataEncryption;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolBlobAuditingPoliciesGetResponse = SqlPoolBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SqlPoolBlobAuditingPoliciesCreateOrUpdateResponse = SqlPoolBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlPoolOperationsListResponse = SqlPoolBlobAuditingPolicySqlPoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolBlobAuditingPolicySqlPoolOperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlPoolOperationsListNextResponse = SqlPoolBlobAuditingPolicySqlPoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolBlobAuditingPolicySqlPoolOperationListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlPoolUsagesListResponse = SqlPoolUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolUsageListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlPoolUsagesListNextResponse = SqlPoolUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolUsageListResult;
    };
};

/**
 * Contains response data for the listCurrent operation.
 */
export type SqlPoolSensitivityLabelsListCurrentResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listRecommended operation.
 */
export type SqlPoolSensitivityLabelsListRecommendedResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SqlPoolSensitivityLabelsCreateOrUpdateResponse = SensitivityLabel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabel;
    };
};

/**
 * Contains response data for the listCurrentNext operation.
 */
export type SqlPoolSensitivityLabelsListCurrentNextResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the listRecommendedNext operation.
 */
export type SqlPoolSensitivityLabelsListRecommendedNextResponse = SensitivityLabelListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SensitivityLabelListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlPoolSchemasListResponse = SqlPoolSchemaListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolSchemaListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlPoolSchemasListNextResponse = SqlPoolSchemaListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolSchemaListResult;
    };
};

/**
 * Contains response data for the listBySchema operation.
 */
export type SqlPoolTablesListBySchemaResponse = SqlPoolTableListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolTableListResult;
    };
};

/**
 * Contains response data for the listBySchemaNext operation.
 */
export type SqlPoolTablesListBySchemaNextResponse = SqlPoolTableListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolTableListResult;
    };
};

/**
 * Contains response data for the listByTableName operation.
 */
export type SqlPoolTableColumnsListByTableNameResponse = SqlPoolColumnListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolColumnListResult;
    };
};

/**
 * Contains response data for the listByTableNameNext operation.
 */
export type SqlPoolTableColumnsListByTableNameNextResponse = SqlPoolColumnListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolColumnListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolConnectionPoliciesGetResponse = SqlPoolConnectionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolConnectionPolicy;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlPoolVulnerabilityAssessmentsListResponse = SqlPoolVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolVulnerabilityAssessmentsGetResponse = SqlPoolVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SqlPoolVulnerabilityAssessmentsCreateOrUpdateResponse = SqlPoolVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlPoolVulnerabilityAssessmentsListNextResponse = SqlPoolVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SqlPoolVulnerabilityAssessmentScansListResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type SqlPoolVulnerabilityAssessmentScansExportMethodResponse = SqlPoolVulnerabilityAssessmentScansExport & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolVulnerabilityAssessmentScansExport;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlPoolVulnerabilityAssessmentScansListNextResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SqlPoolSecurityAlertPoliciesGetResponse = SqlPoolSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SqlPoolSecurityAlertPoliciesCreateOrUpdateResponse = SqlPoolSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SqlPoolVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = SqlPoolVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SqlPoolVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkspacesListByResourceGroupResponse = WorkspaceInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceInfoListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspacesGetResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WorkspacesUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspacesCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type WorkspacesDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkspacesListResponse = WorkspaceInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceInfoListResult;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type WorkspacesBeginUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type WorkspacesBeginCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type WorkspacesBeginDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WorkspacesListByResourceGroupNextResponse = WorkspaceInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceInfoListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WorkspacesListNextResponse = WorkspaceInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceInfoListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspaceAadAdminsGetResponse = WorkspaceAadAdminInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceAadAdminInfo;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspaceAadAdminsCreateOrUpdateResponse = WorkspaceAadAdminInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceAadAdminInfo;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type WorkspaceAadAdminsBeginCreateOrUpdateResponse = WorkspaceAadAdminInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceAadAdminInfo;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspaceManagedIdentitySqlControlSettingsGetResponse = ManagedIdentitySqlControlSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedIdentitySqlControlSettingsModel;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse = ManagedIdentitySqlControlSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedIdentitySqlControlSettingsModel;
    };
};

/**
 * Contains response data for the update operation.
 */
export type IntegrationRuntimesUpdateResponse = IntegrationRuntimeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationRuntimesGetResponse = IntegrationRuntimeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type IntegrationRuntimesCreateResponse = IntegrationRuntimeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeResource;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type IntegrationRuntimesListByWorkspaceResponse = IntegrationRuntimeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeListResponse;
    };
};

/**
 * Contains response data for the start operation.
 */
export type IntegrationRuntimesStartResponse = IntegrationRuntimeStatusResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeStatusResponse;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type IntegrationRuntimesListByWorkspaceNextResponse = IntegrationRuntimeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeListResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationRuntimeNodeIpAddressGetResponse = IntegrationRuntimeNodeIpAddress & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeNodeIpAddress;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationRuntimeObjectMetadataGetResponse = SsisObjectMetadataListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SsisObjectMetadataListResponse;
    };
};

/**
 * Contains response data for the refresh operation.
 */
export type IntegrationRuntimeObjectMetadataRefreshResponse = SsisObjectMetadataStatusResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SsisObjectMetadataStatusResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationRuntimeNodesGetResponse = SelfHostedIntegrationRuntimeNode & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SelfHostedIntegrationRuntimeNode;
    };
};

/**
 * Contains response data for the update operation.
 */
export type IntegrationRuntimeNodesUpdateResponse = SelfHostedIntegrationRuntimeNode & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SelfHostedIntegrationRuntimeNode;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationRuntimeConnectionInfosGetResponse = IntegrationRuntimeConnectionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeConnectionInfo;
    };
};

/**
 * Contains response data for the regenerate operation.
 */
export type IntegrationRuntimeAuthKeysRegenerateResponse = IntegrationRuntimeAuthKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeAuthKeys;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationRuntimeAuthKeysListResponse = IntegrationRuntimeAuthKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeAuthKeys;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationRuntimeMonitoringDataGetResponse = IntegrationRuntimeMonitoringData & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeMonitoringData;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationRuntimeStatusGetResponse = IntegrationRuntimeStatusResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationRuntimeStatusResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PrivateLinkResourcesListNextResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the create operation.
 */
export type PrivateEndpointConnectionsCreateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type PrivateEndpointConnectionsDeleteMethodResponse = OperationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionList;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type PrivateEndpointConnectionsBeginCreateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type PrivateEndpointConnectionsBeginDeleteMethodResponse = OperationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PrivateEndpointConnectionsListNextResponse = PrivateEndpointConnectionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type PrivateLinkHubsListByResourceGroupResponse = PrivateLinkHubInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkHubInfoListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkHubsGetResponse = PrivateLinkHub & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkHub;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PrivateLinkHubsUpdateResponse = PrivateLinkHub & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkHub;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PrivateLinkHubsCreateOrUpdateResponse = PrivateLinkHub & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkHub;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateLinkHubsListResponse = PrivateLinkHubInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkHubInfoListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type PrivateLinkHubsListByResourceGroupNextResponse = PrivateLinkHubInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkHubInfoListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PrivateLinkHubsListNextResponse = PrivateLinkHubInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkHubInfoListResult;
    };
};
