/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const AutoScaleProperties: msRest.CompositeMapper = {
  serializedName: "AutoScaleProperties",
  type: {
    name: "Composite",
    className: "AutoScaleProperties",
    modelProperties: {
      minNodeCount: {
        serializedName: "minNodeCount",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      maxNodeCount: {
        serializedName: "maxNodeCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AutoPauseProperties: msRest.CompositeMapper = {
  serializedName: "AutoPauseProperties",
  type: {
    name: "Composite",
    className: "AutoPauseProperties",
    modelProperties: {
      delayInMinutes: {
        serializedName: "delayInMinutes",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LibraryRequirements: msRest.CompositeMapper = {
  serializedName: "LibraryRequirements",
  type: {
    name: "Composite",
    className: "LibraryRequirements",
    modelProperties: {
      time: {
        readOnly: true,
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      },
      content: {
        serializedName: "content",
        type: {
          name: "String"
        }
      },
      filename: {
        serializedName: "filename",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BigDataPoolResourceInfo: msRest.CompositeMapper = {
  serializedName: "BigDataPoolResourceInfo",
  type: {
    name: "Composite",
    className: "BigDataPoolResourceInfo",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      autoScale: {
        serializedName: "properties.autoScale",
        type: {
          name: "Composite",
          className: "AutoScaleProperties"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      autoPause: {
        serializedName: "properties.autoPause",
        type: {
          name: "Composite",
          className: "AutoPauseProperties"
        }
      },
      sparkEventsFolder: {
        serializedName: "properties.sparkEventsFolder",
        type: {
          name: "String"
        }
      },
      nodeCount: {
        serializedName: "properties.nodeCount",
        constraints: {
          InclusiveMaximum: 200,
          InclusiveMinimum: 3
        },
        type: {
          name: "Number"
        }
      },
      libraryRequirements: {
        serializedName: "properties.libraryRequirements",
        type: {
          name: "Composite",
          className: "LibraryRequirements"
        }
      },
      sparkVersion: {
        serializedName: "properties.sparkVersion",
        type: {
          name: "String"
        }
      },
      defaultSparkLogFolder: {
        serializedName: "properties.defaultSparkLogFolder",
        type: {
          name: "String"
        }
      },
      nodeSize: {
        serializedName: "properties.nodeSize",
        type: {
          name: "String"
        }
      },
      nodeSizeFamily: {
        serializedName: "properties.nodeSizeFamily",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BigDataPoolPatchInfo: msRest.CompositeMapper = {
  serializedName: "BigDataPoolPatchInfo",
  type: {
    name: "Composite",
    className: "BigDataPoolPatchInfo",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorContract: msRest.CompositeMapper = {
  serializedName: "ErrorContract",
  type: {
    name: "Composite",
    className: "ErrorContract",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const CheckNameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResponse: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityResponse",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResponse",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      available: {
        serializedName: "available",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IpFirewallRuleProperties: msRest.CompositeMapper = {
  serializedName: "IpFirewallRuleProperties",
  type: {
    name: "Composite",
    className: "IpFirewallRuleProperties",
    modelProperties: {
      endIpAddress: {
        serializedName: "endIpAddress",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      startIpAddress: {
        serializedName: "startIpAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IpFirewallRuleInfo: msRest.CompositeMapper = {
  serializedName: "IpFirewallRuleInfo",
  type: {
    name: "Composite",
    className: "IpFirewallRuleInfo",
    modelProperties: {
      endIpAddress: {
        serializedName: "properties.endIpAddress",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      startIpAddress: {
        serializedName: "properties.startIpAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReplaceAllIpFirewallRulesRequest: msRest.CompositeMapper = {
  serializedName: "ReplaceAllIpFirewallRulesRequest",
  type: {
    name: "Composite",
    className: "ReplaceAllIpFirewallRulesRequest",
    modelProperties: {
      ipFirewallRules: {
        serializedName: "ipFirewallRules",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "IpFirewallRuleProperties"
            }
          }
        }
      }
    }
  }
};

export const ReplaceAllFirewallRulesOperationResponse: msRest.CompositeMapper = {
  serializedName: "ReplaceAllFirewallRulesOperationResponse",
  type: {
    name: "Composite",
    className: "ReplaceAllFirewallRulesOperationResponse",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailableRpOperationDisplayInfo: msRest.CompositeMapper = {
  serializedName: "AvailableRpOperationDisplayInfo",
  type: {
    name: "Composite",
    className: "AvailableRpOperationDisplayInfo",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationMetaMetricDimensionSpecification: msRest.CompositeMapper = {
  serializedName: "OperationMetaMetricDimensionSpecification",
  type: {
    name: "Composite",
    className: "OperationMetaMetricDimensionSpecification",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      toBeExportedForShoebox: {
        serializedName: "toBeExportedForShoebox",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const OperationMetaMetricSpecification: msRest.CompositeMapper = {
  serializedName: "OperationMetaMetricSpecification",
  type: {
    name: "Composite",
    className: "OperationMetaMetricSpecification",
    modelProperties: {
      sourceMdmNamespace: {
        serializedName: "sourceMdmNamespace",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      aggregationType: {
        serializedName: "aggregationType",
        type: {
          name: "String"
        }
      },
      displayDescription: {
        serializedName: "displayDescription",
        type: {
          name: "String"
        }
      },
      sourceMdmAccount: {
        serializedName: "sourceMdmAccount",
        type: {
          name: "String"
        }
      },
      enableRegionalMdmAccount: {
        serializedName: "enableRegionalMdmAccount",
        type: {
          name: "Boolean"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationMetaMetricDimensionSpecification"
            }
          }
        }
      },
      supportsInstanceLevelAggregation: {
        serializedName: "supportsInstanceLevelAggregation",
        type: {
          name: "Boolean"
        }
      },
      metricFilterPattern: {
        serializedName: "metricFilterPattern",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationMetaLogSpecification: msRest.CompositeMapper = {
  serializedName: "OperationMetaLogSpecification",
  type: {
    name: "Composite",
    className: "OperationMetaLogSpecification",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      blobDuration: {
        serializedName: "blobDuration",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationMetaServiceSpecification: msRest.CompositeMapper = {
  serializedName: "OperationMetaServiceSpecification",
  type: {
    name: "Composite",
    className: "OperationMetaServiceSpecification",
    modelProperties: {
      metricSpecifications: {
        serializedName: "metricSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationMetaMetricSpecification"
            }
          }
        }
      },
      logSpecifications: {
        serializedName: "logSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationMetaLogSpecification"
            }
          }
        }
      }
    }
  }
};

export const AvailableRpOperation: msRest.CompositeMapper = {
  serializedName: "AvailableRpOperation",
  type: {
    name: "Composite",
    className: "AvailableRpOperation",
    modelProperties: {
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "AvailableRpOperationDisplayInfo"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      serviceSpecification: {
        serializedName: "properties.serviceSpecification",
        type: {
          name: "Composite",
          className: "OperationMetaServiceSpecification"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResource: msRest.CompositeMapper = {
  serializedName: "OperationResource",
  type: {
    name: "Composite",
    className: "OperationResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      percentComplete: {
        serializedName: "percentComplete",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlPool: msRest.CompositeMapper = {
  serializedName: "SqlPool",
  type: {
    name: "Composite",
    className: "SqlPool",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      maxSizeBytes: {
        serializedName: "properties.maxSizeBytes",
        type: {
          name: "Number"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SqlPoolPatchInfo: msRest.CompositeMapper = {
  serializedName: "SqlPoolPatchInfo",
  type: {
    name: "Composite",
    className: "SqlPoolPatchInfo",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      maxSizeBytes: {
        serializedName: "properties.maxSizeBytes",
        type: {
          name: "Number"
        }
      },
      collation: {
        serializedName: "properties.collation",
        type: {
          name: "String"
        }
      },
      sourceDatabaseId: {
        serializedName: "properties.sourceDatabaseId",
        type: {
          name: "String"
        }
      },
      recoverableDatabaseId: {
        serializedName: "properties.recoverableDatabaseId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      restorePointInTime: {
        serializedName: "properties.restorePointInTime",
        type: {
          name: "DateTime"
        }
      },
      createMode: {
        serializedName: "properties.createMode",
        type: {
          name: "String"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const MetadataSyncConfig: msRest.CompositeMapper = {
  serializedName: "MetadataSyncConfig",
  type: {
    name: "Composite",
    className: "MetadataSyncConfig",
    modelProperties: {
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GeoBackupPolicy: msRest.CompositeMapper = {
  serializedName: "GeoBackupPolicy",
  type: {
    name: "Composite",
    className: "GeoBackupPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "Enabled"
          ]
        }
      },
      storageType: {
        readOnly: true,
        serializedName: "properties.storageType",
        type: {
          name: "String"
        }
      },
      kind: {
        readOnly: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QueryMetric: msRest.CompositeMapper = {
  serializedName: "QueryMetric",
  type: {
    name: "Composite",
    className: "QueryMetric",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "Enum",
          allowedValues: [
            "percentage",
            "KB",
            "microseconds"
          ]
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const QueryInterval: msRest.CompositeMapper = {
  serializedName: "QueryInterval",
  type: {
    name: "Composite",
    className: "QueryInterval",
    modelProperties: {
      intervalStartTime: {
        readOnly: true,
        serializedName: "intervalStartTime",
        type: {
          name: "DateTime"
        }
      },
      executionCount: {
        readOnly: true,
        serializedName: "executionCount",
        type: {
          name: "Number"
        }
      },
      metrics: {
        readOnly: true,
        serializedName: "metrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QueryMetric"
            }
          }
        }
      }
    }
  }
};

export const QueryStatistic: msRest.CompositeMapper = {
  serializedName: "QueryStatistic",
  type: {
    name: "Composite",
    className: "QueryStatistic",
    modelProperties: {
      queryId: {
        readOnly: true,
        serializedName: "queryId",
        type: {
          name: "String"
        }
      },
      intervals: {
        readOnly: true,
        serializedName: "intervals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QueryInterval"
            }
          }
        }
      }
    }
  }
};

export const TopQueries: msRest.CompositeMapper = {
  serializedName: "TopQueries",
  type: {
    name: "Composite",
    className: "TopQueries",
    modelProperties: {
      aggregationFunction: {
        readOnly: true,
        serializedName: "aggregationFunction",
        type: {
          name: "Enum",
          allowedValues: [
            "min",
            "max",
            "avg",
            "sum"
          ]
        }
      },
      executionType: {
        readOnly: true,
        serializedName: "executionType",
        type: {
          name: "Enum",
          allowedValues: [
            "any",
            "regular",
            "irregular",
            "aborted",
            "exception"
          ]
        }
      },
      intervalType: {
        readOnly: true,
        serializedName: "intervalType",
        type: {
          name: "String"
        }
      },
      numberOfTopQueries: {
        readOnly: true,
        serializedName: "numberOfTopQueries",
        type: {
          name: "Number"
        }
      },
      observationStartTime: {
        readOnly: true,
        serializedName: "observationStartTime",
        type: {
          name: "DateTime"
        }
      },
      observationEndTime: {
        readOnly: true,
        serializedName: "observationEndTime",
        type: {
          name: "DateTime"
        }
      },
      observedMetric: {
        readOnly: true,
        serializedName: "observedMetric",
        type: {
          name: "Enum",
          allowedValues: [
            "cpu",
            "io",
            "logio",
            "duration",
            "executionCount"
          ]
        }
      },
      queries: {
        readOnly: true,
        serializedName: "queries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QueryStatistic"
            }
          }
        }
      }
    }
  }
};

export const TopQueriesListResult: msRest.CompositeMapper = {
  serializedName: "TopQueriesListResult",
  type: {
    name: "Composite",
    className: "TopQueriesListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TopQueries"
            }
          }
        }
      }
    }
  }
};

export const DataWarehouseUserActivities: msRest.CompositeMapper = {
  serializedName: "DataWarehouseUserActivities",
  type: {
    name: "Composite",
    className: "DataWarehouseUserActivities",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      activeQueriesCount: {
        readOnly: true,
        serializedName: "properties.activeQueriesCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RestorePoint: msRest.CompositeMapper = {
  serializedName: "RestorePoint",
  type: {
    name: "Composite",
    className: "RestorePoint",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      restorePointType: {
        readOnly: true,
        serializedName: "properties.restorePointType",
        type: {
          name: "Enum",
          allowedValues: [
            "CONTINUOUS",
            "DISCRETE"
          ]
        }
      },
      earliestRestoreDate: {
        readOnly: true,
        serializedName: "properties.earliestRestoreDate",
        type: {
          name: "DateTime"
        }
      },
      restorePointCreationDate: {
        readOnly: true,
        serializedName: "properties.restorePointCreationDate",
        type: {
          name: "DateTime"
        }
      },
      restorePointLabel: {
        readOnly: true,
        serializedName: "properties.restorePointLabel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReplicationLink: msRest.CompositeMapper = {
  serializedName: "ReplicationLink",
  type: {
    name: "Composite",
    className: "ReplicationLink",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      isTerminationAllowed: {
        readOnly: true,
        serializedName: "properties.isTerminationAllowed",
        type: {
          name: "Boolean"
        }
      },
      replicationMode: {
        readOnly: true,
        serializedName: "properties.replicationMode",
        type: {
          name: "String"
        }
      },
      partnerServer: {
        readOnly: true,
        serializedName: "properties.partnerServer",
        type: {
          name: "String"
        }
      },
      partnerDatabase: {
        readOnly: true,
        serializedName: "properties.partnerDatabase",
        type: {
          name: "String"
        }
      },
      partnerLocation: {
        readOnly: true,
        serializedName: "properties.partnerLocation",
        type: {
          name: "String"
        }
      },
      role: {
        readOnly: true,
        serializedName: "properties.role",
        type: {
          name: "Enum",
          allowedValues: [
            "Primary",
            "Secondary",
            "NonReadableSecondary",
            "Source",
            "Copy"
          ]
        }
      },
      partnerRole: {
        readOnly: true,
        serializedName: "properties.partnerRole",
        type: {
          name: "Enum",
          allowedValues: [
            "Primary",
            "Secondary",
            "NonReadableSecondary",
            "Source",
            "Copy"
          ]
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      percentComplete: {
        readOnly: true,
        serializedName: "properties.percentComplete",
        type: {
          name: "Number"
        }
      },
      replicationState: {
        readOnly: true,
        serializedName: "properties.replicationState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransparentDataEncryption: msRest.CompositeMapper = {
  serializedName: "TransparentDataEncryption",
  type: {
    name: "Composite",
    className: "TransparentDataEncryption",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      }
    }
  }
};

export const SqlPoolBlobAuditingPolicy: msRest.CompositeMapper = {
  serializedName: "SqlPoolBlobAuditingPolicy",
  type: {
    name: "Composite",
    className: "SqlPoolBlobAuditingPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      kind: {
        readOnly: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      auditActionsAndGroups: {
        serializedName: "properties.auditActionsAndGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      storageAccountSubscriptionId: {
        serializedName: "properties.storageAccountSubscriptionId",
        type: {
          name: "Uuid"
        }
      },
      isStorageSecondaryKeyInUse: {
        serializedName: "properties.isStorageSecondaryKeyInUse",
        type: {
          name: "Boolean"
        }
      },
      isAzureMonitorTargetEnabled: {
        serializedName: "properties.isAzureMonitorTargetEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SqlPoolOperation: msRest.CompositeMapper = {
  serializedName: "SqlPoolOperation",
  type: {
    name: "Composite",
    className: "SqlPoolOperation",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      databaseName: {
        readOnly: true,
        serializedName: "properties.databaseName",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "properties.operation",
        type: {
          name: "String"
        }
      },
      operationFriendlyName: {
        readOnly: true,
        serializedName: "properties.operationFriendlyName",
        type: {
          name: "String"
        }
      },
      percentComplete: {
        readOnly: true,
        serializedName: "properties.percentComplete",
        type: {
          name: "Number"
        }
      },
      serverName: {
        readOnly: true,
        serializedName: "properties.serverName",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      errorCode: {
        readOnly: true,
        serializedName: "properties.errorCode",
        type: {
          name: "Number"
        }
      },
      errorDescription: {
        readOnly: true,
        serializedName: "properties.errorDescription",
        type: {
          name: "String"
        }
      },
      errorSeverity: {
        readOnly: true,
        serializedName: "properties.errorSeverity",
        type: {
          name: "Number"
        }
      },
      isUserError: {
        readOnly: true,
        serializedName: "properties.isUserError",
        type: {
          name: "Boolean"
        }
      },
      estimatedCompletionTime: {
        readOnly: true,
        serializedName: "properties.estimatedCompletionTime",
        type: {
          name: "DateTime"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      isCancellable: {
        readOnly: true,
        serializedName: "properties.isCancellable",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SqlPoolUsage: msRest.CompositeMapper = {
  serializedName: "SqlPoolUsage",
  type: {
    name: "Composite",
    className: "SqlPoolUsage",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      resourceName: {
        readOnly: true,
        serializedName: "resourceName",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      currentValue: {
        readOnly: true,
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        readOnly: true,
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      nextResetTime: {
        readOnly: true,
        serializedName: "nextResetTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SensitivityLabel: msRest.CompositeMapper = {
  serializedName: "SensitivityLabel",
  type: {
    name: "Composite",
    className: "SensitivityLabel",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      labelName: {
        serializedName: "properties.labelName",
        type: {
          name: "String"
        }
      },
      labelId: {
        serializedName: "properties.labelId",
        type: {
          name: "String"
        }
      },
      informationType: {
        serializedName: "properties.informationType",
        type: {
          name: "String"
        }
      },
      informationTypeId: {
        serializedName: "properties.informationTypeId",
        type: {
          name: "String"
        }
      },
      isDisabled: {
        readOnly: true,
        serializedName: "properties.isDisabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SqlPoolSchema: msRest.CompositeMapper = {
  serializedName: "SqlPoolSchema",
  type: {
    name: "Composite",
    className: "SqlPoolSchema",
    modelProperties: {
      ...ProxyResource.type.modelProperties
    }
  }
};

export const SqlPoolTable: msRest.CompositeMapper = {
  serializedName: "SqlPoolTable",
  type: {
    name: "Composite",
    className: "SqlPoolTable",
    modelProperties: {
      ...ProxyResource.type.modelProperties
    }
  }
};

export const SqlPoolColumn: msRest.CompositeMapper = {
  serializedName: "SqlPoolColumn",
  type: {
    name: "Composite",
    className: "SqlPoolColumn",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      columnType: {
        serializedName: "properties.columnType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlPoolConnectionPolicy: msRest.CompositeMapper = {
  serializedName: "SqlPoolConnectionPolicy",
  type: {
    name: "Composite",
    className: "SqlPoolConnectionPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      kind: {
        readOnly: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      securityEnabledAccess: {
        serializedName: "properties.securityEnabledAccess",
        type: {
          name: "String"
        }
      },
      proxyDnsName: {
        serializedName: "properties.proxyDnsName",
        type: {
          name: "String"
        }
      },
      proxyPort: {
        serializedName: "properties.proxyPort",
        type: {
          name: "String"
        }
      },
      visibility: {
        serializedName: "properties.visibility",
        type: {
          name: "String"
        }
      },
      useServerDefault: {
        serializedName: "properties.useServerDefault",
        type: {
          name: "String"
        }
      },
      redirectionState: {
        serializedName: "properties.redirectionState",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VulnerabilityAssessmentRecurringScansProperties: msRest.CompositeMapper = {
  serializedName: "VulnerabilityAssessmentRecurringScansProperties",
  type: {
    name: "Composite",
    className: "VulnerabilityAssessmentRecurringScansProperties",
    modelProperties: {
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      emailSubscriptionAdmins: {
        serializedName: "emailSubscriptionAdmins",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      emails: {
        serializedName: "emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SqlPoolVulnerabilityAssessment: msRest.CompositeMapper = {
  serializedName: "SqlPoolVulnerabilityAssessment",
  type: {
    name: "Composite",
    className: "SqlPoolVulnerabilityAssessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      storageContainerPath: {
        serializedName: "properties.storageContainerPath",
        type: {
          name: "String"
        }
      },
      storageContainerSasKey: {
        serializedName: "properties.storageContainerSasKey",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      recurringScans: {
        serializedName: "properties.recurringScans",
        type: {
          name: "Composite",
          className: "VulnerabilityAssessmentRecurringScansProperties"
        }
      }
    }
  }
};

export const VulnerabilityAssessmentScanError: msRest.CompositeMapper = {
  serializedName: "VulnerabilityAssessmentScanError",
  type: {
    name: "Composite",
    className: "VulnerabilityAssessmentScanError",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VulnerabilityAssessmentScanRecord: msRest.CompositeMapper = {
  serializedName: "VulnerabilityAssessmentScanRecord",
  type: {
    name: "Composite",
    className: "VulnerabilityAssessmentScanRecord",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      scanId: {
        readOnly: true,
        serializedName: "properties.scanId",
        type: {
          name: "String"
        }
      },
      triggerType: {
        readOnly: true,
        serializedName: "properties.triggerType",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "properties.endTime",
        type: {
          name: "DateTime"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "properties.errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VulnerabilityAssessmentScanError"
            }
          }
        }
      },
      storageContainerPath: {
        readOnly: true,
        serializedName: "properties.storageContainerPath",
        type: {
          name: "String"
        }
      },
      numberOfFailedSecurityChecks: {
        readOnly: true,
        serializedName: "properties.numberOfFailedSecurityChecks",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SqlPoolSecurityAlertPolicy: msRest.CompositeMapper = {
  serializedName: "SqlPoolSecurityAlertPolicy",
  type: {
    name: "Composite",
    className: "SqlPoolSecurityAlertPolicy",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "New",
            "Enabled",
            "Disabled"
          ]
        }
      },
      disabledAlerts: {
        serializedName: "properties.disabledAlerts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAddresses: {
        serializedName: "properties.emailAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      emailAccountAdmins: {
        serializedName: "properties.emailAccountAdmins",
        type: {
          name: "Boolean"
        }
      },
      storageEndpoint: {
        serializedName: "properties.storageEndpoint",
        type: {
          name: "String"
        }
      },
      storageAccountAccessKey: {
        serializedName: "properties.storageAccountAccessKey",
        type: {
          name: "String"
        }
      },
      retentionDays: {
        serializedName: "properties.retentionDays",
        type: {
          name: "Number"
        }
      },
      creationTime: {
        readOnly: true,
        serializedName: "properties.creationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SqlPoolVulnerabilityAssessmentRuleBaselineItem: msRest.CompositeMapper = {
  serializedName: "SqlPoolVulnerabilityAssessmentRuleBaselineItem",
  type: {
    name: "Composite",
    className: "SqlPoolVulnerabilityAssessmentRuleBaselineItem",
    modelProperties: {
      result: {
        required: true,
        serializedName: "result",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SqlPoolVulnerabilityAssessmentRuleBaseline: msRest.CompositeMapper = {
  serializedName: "SqlPoolVulnerabilityAssessmentRuleBaseline",
  type: {
    name: "Composite",
    className: "SqlPoolVulnerabilityAssessmentRuleBaseline",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      baselineResults: {
        required: true,
        serializedName: "properties.baselineResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPoolVulnerabilityAssessmentRuleBaselineItem"
            }
          }
        }
      }
    }
  }
};

export const SqlPoolVulnerabilityAssessmentScansExport: msRest.CompositeMapper = {
  serializedName: "SqlPoolVulnerabilityAssessmentScansExport",
  type: {
    name: "Composite",
    className: "SqlPoolVulnerabilityAssessmentScansExport",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      exportedReportLocation: {
        readOnly: true,
        serializedName: "properties.exportedReportLocation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceMoveDefinition: msRest.CompositeMapper = {
  serializedName: "ResourceMoveDefinition",
  type: {
    name: "Composite",
    className: "ResourceMoveDefinition",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateSqlPoolRestorePointDefinition: msRest.CompositeMapper = {
  serializedName: "CreateSqlPoolRestorePointDefinition",
  type: {
    name: "Composite",
    className: "CreateSqlPoolRestorePointDefinition",
    modelProperties: {
      restorePointLabel: {
        required: true,
        serializedName: "restorePointLabel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataLakeStorageAccountDetails: msRest.CompositeMapper = {
  serializedName: "DataLakeStorageAccountDetails",
  type: {
    name: "Composite",
    className: "DataLakeStorageAccountDetails",
    modelProperties: {
      accountUrl: {
        serializedName: "accountUrl",
        type: {
          name: "String"
        }
      },
      filesystem: {
        serializedName: "filesystem",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkProfile: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkProfile",
  type: {
    name: "Composite",
    className: "VirtualNetworkProfile",
    modelProperties: {
      computeSubnetId: {
        serializedName: "computeSubnetId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedIdentity: msRest.CompositeMapper = {
  serializedName: "ManagedIdentity",
  type: {
    name: "Composite",
    className: "ManagedIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "SystemAssigned"
          ]
        }
      }
    }
  }
};

export const Workspace: msRest.CompositeMapper = {
  serializedName: "Workspace",
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      defaultDataLakeStorage: {
        serializedName: "properties.defaultDataLakeStorage",
        type: {
          name: "Composite",
          className: "DataLakeStorageAccountDetails"
        }
      },
      sqlAdministratorLoginPassword: {
        serializedName: "properties.sqlAdministratorLoginPassword",
        type: {
          name: "String"
        }
      },
      managedResourceGroupName: {
        readOnly: true,
        serializedName: "properties.managedResourceGroupName",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      sqlAdministratorLogin: {
        serializedName: "properties.sqlAdministratorLogin",
        type: {
          name: "String"
        }
      },
      virtualNetworkProfile: {
        serializedName: "properties.virtualNetworkProfile",
        type: {
          name: "Composite",
          className: "VirtualNetworkProfile"
        }
      },
      connectivityEndpoints: {
        serializedName: "properties.connectivityEndpoints",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentity"
        }
      }
    }
  }
};

export const WorkspaceAadAdminInfo: msRest.CompositeMapper = {
  serializedName: "WorkspaceAadAdminInfo",
  type: {
    name: "Composite",
    className: "WorkspaceAadAdminInfo",
    modelProperties: {
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      login: {
        serializedName: "properties.login",
        type: {
          name: "String"
        }
      },
      administratorType: {
        serializedName: "properties.administratorType",
        type: {
          name: "String"
        }
      },
      sid: {
        serializedName: "properties.sid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspacePatchInfo: msRest.CompositeMapper = {
  serializedName: "WorkspacePatchInfo",
  type: {
    name: "Composite",
    className: "WorkspacePatchInfo",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentity"
        }
      },
      sqlAdministratorLoginPassword: {
        serializedName: "properties.sqlAdministratorLoginPassword",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity: msRest.CompositeMapper = {
  serializedName: "ManagedIdentitySqlControlSettingsModel_properties_grantSqlControlToManagedIdentity",
  type: {
    name: "Composite",
    className: "ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity",
    modelProperties: {
      desiredState: {
        serializedName: "desiredState",
        type: {
          name: "String"
        }
      },
      actualState: {
        readOnly: true,
        serializedName: "actualState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedIdentitySqlControlSettingsModel: msRest.CompositeMapper = {
  serializedName: "ManagedIdentitySqlControlSettingsModel",
  type: {
    name: "Composite",
    className: "ManagedIdentitySqlControlSettingsModel",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      grantSqlControlToManagedIdentity: {
        serializedName: "properties.grantSqlControlToManagedIdentity",
        type: {
          name: "Composite",
          className: "ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity"
        }
      }
    }
  }
};

export const BigDataPoolResourceInfoListResult: msRest.CompositeMapper = {
  serializedName: "BigDataPoolResourceInfoListResult",
  type: {
    name: "Composite",
    className: "BigDataPoolResourceInfoListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BigDataPoolResourceInfo"
            }
          }
        }
      }
    }
  }
};

export const IpFirewallRuleInfoListResult: msRest.CompositeMapper = {
  serializedName: "IpFirewallRuleInfoListResult",
  type: {
    name: "Composite",
    className: "IpFirewallRuleInfoListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IpFirewallRuleInfo"
            }
          }
        }
      }
    }
  }
};

export const SqlPoolInfoListResult: msRest.CompositeMapper = {
  serializedName: "SqlPoolInfoListResult",
  type: {
    name: "Composite",
    className: "SqlPoolInfoListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPool"
            }
          }
        }
      }
    }
  }
};

export const RestorePointListResult: msRest.CompositeMapper = {
  serializedName: "RestorePointListResult",
  type: {
    name: "Composite",
    className: "RestorePointListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RestorePoint"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReplicationLinkListResult: msRest.CompositeMapper = {
  serializedName: "ReplicationLinkListResult",
  type: {
    name: "Composite",
    className: "ReplicationLinkListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReplicationLink"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlPoolBlobAuditingPolicySqlPoolOperationListResult: msRest.CompositeMapper = {
  serializedName: "SqlPoolBlobAuditingPolicySqlPoolOperationListResult",
  type: {
    name: "Composite",
    className: "SqlPoolBlobAuditingPolicySqlPoolOperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPoolOperation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlPoolUsageListResult: msRest.CompositeMapper = {
  serializedName: "SqlPoolUsageListResult",
  type: {
    name: "Composite",
    className: "SqlPoolUsageListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPoolUsage"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SensitivityLabelListResult: msRest.CompositeMapper = {
  serializedName: "SensitivityLabelListResult",
  type: {
    name: "Composite",
    className: "SensitivityLabelListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SensitivityLabel"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlPoolSchemaListResult: msRest.CompositeMapper = {
  serializedName: "SqlPoolSchemaListResult",
  type: {
    name: "Composite",
    className: "SqlPoolSchemaListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPoolSchema"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlPoolTableListResult: msRest.CompositeMapper = {
  serializedName: "SqlPoolTableListResult",
  type: {
    name: "Composite",
    className: "SqlPoolTableListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPoolTable"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlPoolColumnListResult: msRest.CompositeMapper = {
  serializedName: "SqlPoolColumnListResult",
  type: {
    name: "Composite",
    className: "SqlPoolColumnListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPoolColumn"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SqlPoolVulnerabilityAssessmentListResult: msRest.CompositeMapper = {
  serializedName: "SqlPoolVulnerabilityAssessmentListResult",
  type: {
    name: "Composite",
    className: "SqlPoolVulnerabilityAssessmentListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPoolVulnerabilityAssessment"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VulnerabilityAssessmentScanRecordListResult: msRest.CompositeMapper = {
  serializedName: "VulnerabilityAssessmentScanRecordListResult",
  type: {
    name: "Composite",
    className: "VulnerabilityAssessmentScanRecordListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VulnerabilityAssessmentScanRecord"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceInfoListResult: msRest.CompositeMapper = {
  serializedName: "WorkspaceInfoListResult",
  type: {
    name: "Composite",
    className: "WorkspaceInfoListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workspace"
            }
          }
        }
      }
    }
  }
};
