/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/sqlPoolMaintenanceWindowsMappers";
import * as Parameters from "../models/parameters";
import { SynapseManagementClientContext } from "../synapseManagementClientContext";

/** Class representing a SqlPoolMaintenanceWindows. */
export class SqlPoolMaintenanceWindows {
  private readonly client: SynapseManagementClientContext;

  /**
   * Create a SqlPoolMaintenanceWindows.
   * @param {SynapseManagementClientContext} client Reference to the service client.
   */
  constructor(client: SynapseManagementClientContext) {
    this.client = client;
  }

  /**
   * Get a SQL pool's Maintenance Windows.
   * @summary Get a SQL pool's Maintenance Windows.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param maintenanceWindowName Maintenance window name.
   * @param [options] The optional parameters
   * @returns Promise<Models.SqlPoolMaintenanceWindowsGetResponse>
   */
  get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowName: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlPoolMaintenanceWindowsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param maintenanceWindowName Maintenance window name.
   * @param callback The callback
   */
  get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowName: string, callback: msRest.ServiceCallback<Models.MaintenanceWindows>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param maintenanceWindowName Maintenance window name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MaintenanceWindows>): void;
  get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MaintenanceWindows>, callback?: msRest.ServiceCallback<Models.MaintenanceWindows>): Promise<Models.SqlPoolMaintenanceWindowsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        sqlPoolName,
        maintenanceWindowName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.SqlPoolMaintenanceWindowsGetResponse>;
  }

  /**
   * Creates or updates a Sql pool's maintenance windows settings.
   * @summary Creates or updates a Sql pool's maintenance windows settings.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param maintenanceWindowName Maintenance window name.
   * @param parameters The required parameters for creating or updating Maintenance Windows settings
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  createOrUpdate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowName: string, parameters: Models.MaintenanceWindows, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param maintenanceWindowName Maintenance window name.
   * @param parameters The required parameters for creating or updating Maintenance Windows settings
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowName: string, parameters: Models.MaintenanceWindows, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param maintenanceWindowName Maintenance window name.
   * @param parameters The required parameters for creating or updating Maintenance Windows settings
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowName: string, parameters: Models.MaintenanceWindows, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  createOrUpdate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowName: string, parameters: Models.MaintenanceWindows, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        sqlPoolName,
        maintenanceWindowName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenancewindows/current",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.sqlPoolName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.maintenanceWindowName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MaintenanceWindows
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenancewindows/current",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.sqlPoolName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.maintenanceWindowName
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.MaintenanceWindows,
      required: true
    }
  },
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
