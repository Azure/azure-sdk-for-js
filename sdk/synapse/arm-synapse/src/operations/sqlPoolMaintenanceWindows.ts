/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SqlPoolMaintenanceWindows } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SynapseManagementClient } from "../synapseManagementClient";
import {
  SqlPoolMaintenanceWindowsGetOptionalParams,
  SqlPoolMaintenanceWindowsGetResponse,
  MaintenanceWindows,
  SqlPoolMaintenanceWindowsCreateOrUpdateOptionalParams
} from "../models";

/** Class containing SqlPoolMaintenanceWindows operations. */
export class SqlPoolMaintenanceWindowsImpl
  implements SqlPoolMaintenanceWindows {
  private readonly client: SynapseManagementClient;

  /**
   * Initialize a new instance of the class SqlPoolMaintenanceWindows class.
   * @param client Reference to the service client
   */
  constructor(client: SynapseManagementClient) {
    this.client = client;
  }

  /**
   * Get a SQL pool's Maintenance Windows.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param maintenanceWindowName Maintenance window name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    maintenanceWindowName: string,
    options?: SqlPoolMaintenanceWindowsGetOptionalParams
  ): Promise<SqlPoolMaintenanceWindowsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        sqlPoolName,
        maintenanceWindowName,
        options
      },
      getOperationSpec
    );
  }

  /**
   * Creates or updates a Sql pool's maintenance windows settings.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sqlPoolName SQL pool name
   * @param maintenanceWindowName Maintenance window name.
   * @param parameters The required parameters for creating or updating Maintenance Windows settings
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    sqlPoolName: string,
    maintenanceWindowName: string,
    parameters: MaintenanceWindows,
    options?: SqlPoolMaintenanceWindowsCreateOrUpdateOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        sqlPoolName,
        maintenanceWindowName,
        parameters,
        options
      },
      createOrUpdateOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenancewindows/current",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MaintenanceWindows
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.maintenanceWindowName],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.sqlPoolName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const createOrUpdateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenancewindows/current",
  httpMethod: "PUT",
  responses: { 200: {}, default: {} },
  requestBody: Parameters.parameters3,
  queryParameters: [Parameters.apiVersion, Parameters.maintenanceWindowName],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.sqlPoolName
  ],
  headerParameters: [Parameters.contentType],
  mediaType: "json",
  serializer
};
