/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/sqlPoolVulnerabilityAssessmentScansMappers";
import * as Parameters from "../models/parameters";
import { SynapseManagementClientContext } from "../synapseManagementClientContext";

/** Class representing a SqlPoolVulnerabilityAssessmentScans. */
export class SqlPoolVulnerabilityAssessmentScans {
  private readonly client: SynapseManagementClientContext;

  /**
   * Create a SqlPoolVulnerabilityAssessmentScans.
   * @param {SynapseManagementClientContext} client Reference to the service client.
   */
  constructor(client: SynapseManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the vulnerability assessment scans of a SQL pool.
   * @summary Lists the vulnerability assessment scans of a SQL pool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param [options] The optional parameters
   * @returns Promise<Models.SqlPoolVulnerabilityAssessmentScansListResponse>
   */
  list(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlPoolVulnerabilityAssessmentScansListResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param callback The callback
   */
  list(resourceGroupName: string, workspaceName: string, sqlPoolName: string, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): void;
  list(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>, callback?: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): Promise<Models.SqlPoolVulnerabilityAssessmentScansListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        sqlPoolName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.SqlPoolVulnerabilityAssessmentScansListResponse>;
  }

  /**
   * Executes a Vulnerability Assessment database scan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  initiateScan(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginInitiateScan(resourceGroupName,workspaceName,sqlPoolName,scanId,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Convert an existing scan result to a human readable format. If already exists nothing happens
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param [options] The optional parameters
   * @returns Promise<Models.SqlPoolVulnerabilityAssessmentScansExportMethodResponse>
   */
  exportMethod(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlPoolVulnerabilityAssessmentScansExportMethodResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param callback The callback
   */
  exportMethod(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, callback: msRest.ServiceCallback<Models.SqlPoolVulnerabilityAssessmentScansExport>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param options The optional parameters
   * @param callback The callback
   */
  exportMethod(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SqlPoolVulnerabilityAssessmentScansExport>): void;
  exportMethod(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SqlPoolVulnerabilityAssessmentScansExport>, callback?: msRest.ServiceCallback<Models.SqlPoolVulnerabilityAssessmentScansExport>): Promise<Models.SqlPoolVulnerabilityAssessmentScansExportMethodResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        sqlPoolName,
        scanId,
        options
      },
      exportMethodOperationSpec,
      callback) as Promise<Models.SqlPoolVulnerabilityAssessmentScansExportMethodResponse>;
  }

  /**
   * Gets a vulnerability assessment scan record of a Sql pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param [options] The optional parameters
   * @returns Promise<Models.SqlPoolVulnerabilityAssessmentScansGetResponse>
   */
  get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlPoolVulnerabilityAssessmentScansGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param callback The callback
   */
  get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecord>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecord>): void;
  get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecord>, callback?: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecord>): Promise<Models.SqlPoolVulnerabilityAssessmentScansGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        sqlPoolName,
        scanId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.SqlPoolVulnerabilityAssessmentScansGetResponse>;
  }

  /**
   * Executes a Vulnerability Assessment database scan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param sqlPoolName SQL pool name
   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginInitiateScan(resourceGroupName: string, workspaceName: string, sqlPoolName: string, scanId: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        workspaceName,
        sqlPoolName,
        scanId,
        options
      },
      beginInitiateScanOperationSpec,
      options);
  }

  /**
   * Lists the vulnerability assessment scans of a SQL pool.
   * @summary Lists the vulnerability assessment scans of a SQL pool
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SqlPoolVulnerabilityAssessmentScansListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SqlPoolVulnerabilityAssessmentScansListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>, callback?: msRest.ServiceCallback<Models.VulnerabilityAssessmentScanRecordListResult>): Promise<Models.SqlPoolVulnerabilityAssessmentScansListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.SqlPoolVulnerabilityAssessmentScansListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.sqlPoolName,
    Parameters.vulnerabilityAssessmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const exportMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.sqlPoolName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.scanId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentScansExport
    },
    201: {
      bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentScansExport
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.sqlPoolName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.scanId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VulnerabilityAssessmentScanRecord
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginInitiateScanOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/initiateScan",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.sqlPoolName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.scanId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
