/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/kustoPoolPrincipalAssignmentsMappers";
import * as Parameters from "../models/parameters";
import { SynapseManagementClientContext } from "../synapseManagementClientContext";

/** Class representing a KustoPoolPrincipalAssignments. */
export class KustoPoolPrincipalAssignments {
  private readonly client: SynapseManagementClientContext;

  /**
   * Create a KustoPoolPrincipalAssignments.
   * @param {SynapseManagementClientContext} client Reference to the service client.
   */
  constructor(client: SynapseManagementClientContext) {
    this.client = client;
  }

  /**
   * Checks that the principal assignment name is valid and is not already in use.
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param principalAssignmentName The name of the principal assignment.
   * @param [options] The optional parameters
   * @returns Promise<Models.KustoPoolPrincipalAssignmentsCheckNameAvailabilityResponse>
   */
  checkNameAvailability(workspaceName: string, kustoPoolName: string, resourceGroupName: string, principalAssignmentName: Models.ClusterPrincipalAssignmentCheckNameRequest, options?: msRest.RequestOptionsBase): Promise<Models.KustoPoolPrincipalAssignmentsCheckNameAvailabilityResponse>;
  /**
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param principalAssignmentName The name of the principal assignment.
   * @param callback The callback
   */
  checkNameAvailability(workspaceName: string, kustoPoolName: string, resourceGroupName: string, principalAssignmentName: Models.ClusterPrincipalAssignmentCheckNameRequest, callback: msRest.ServiceCallback<Models.CheckNameResult>): void;
  /**
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param principalAssignmentName The name of the principal assignment.
   * @param options The optional parameters
   * @param callback The callback
   */
  checkNameAvailability(workspaceName: string, kustoPoolName: string, resourceGroupName: string, principalAssignmentName: Models.ClusterPrincipalAssignmentCheckNameRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CheckNameResult>): void;
  checkNameAvailability(workspaceName: string, kustoPoolName: string, resourceGroupName: string, principalAssignmentName: Models.ClusterPrincipalAssignmentCheckNameRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CheckNameResult>, callback?: msRest.ServiceCallback<Models.CheckNameResult>): Promise<Models.KustoPoolPrincipalAssignmentsCheckNameAvailabilityResponse> {
    return this.client.sendOperationRequest(
      {
        workspaceName,
        kustoPoolName,
        resourceGroupName,
        principalAssignmentName,
        options
      },
      checkNameAvailabilityOperationSpec,
      callback) as Promise<Models.KustoPoolPrincipalAssignmentsCheckNameAvailabilityResponse>;
  }

  /**
   * Lists all Kusto pool principalAssignments.
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.KustoPoolPrincipalAssignmentsListResponse>
   */
  list(workspaceName: string, kustoPoolName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.KustoPoolPrincipalAssignmentsListResponse>;
  /**
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param callback The callback
   */
  list(workspaceName: string, kustoPoolName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.ClusterPrincipalAssignmentListResult>): void;
  /**
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(workspaceName: string, kustoPoolName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClusterPrincipalAssignmentListResult>): void;
  list(workspaceName: string, kustoPoolName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ClusterPrincipalAssignmentListResult>, callback?: msRest.ServiceCallback<Models.ClusterPrincipalAssignmentListResult>): Promise<Models.KustoPoolPrincipalAssignmentsListResponse> {
    return this.client.sendOperationRequest(
      {
        workspaceName,
        kustoPoolName,
        resourceGroupName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.KustoPoolPrincipalAssignmentsListResponse>;
  }

  /**
   * Gets a Kusto pool principalAssignment.
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param principalAssignmentName The name of the Kusto principalAssignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.KustoPoolPrincipalAssignmentsGetResponse>
   */
  get(workspaceName: string, kustoPoolName: string, principalAssignmentName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.KustoPoolPrincipalAssignmentsGetResponse>;
  /**
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param principalAssignmentName The name of the Kusto principalAssignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param callback The callback
   */
  get(workspaceName: string, kustoPoolName: string, principalAssignmentName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.ClusterPrincipalAssignment>): void;
  /**
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param principalAssignmentName The name of the Kusto principalAssignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(workspaceName: string, kustoPoolName: string, principalAssignmentName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClusterPrincipalAssignment>): void;
  get(workspaceName: string, kustoPoolName: string, principalAssignmentName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ClusterPrincipalAssignment>, callback?: msRest.ServiceCallback<Models.ClusterPrincipalAssignment>): Promise<Models.KustoPoolPrincipalAssignmentsGetResponse> {
    return this.client.sendOperationRequest(
      {
        workspaceName,
        kustoPoolName,
        principalAssignmentName,
        resourceGroupName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.KustoPoolPrincipalAssignmentsGetResponse>;
  }

  /**
   * Create a Kusto pool principalAssignment.
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param principalAssignmentName The name of the Kusto principalAssignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parameters The Kusto pool principalAssignment's parameters supplied for the operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.KustoPoolPrincipalAssignmentsCreateOrUpdateResponse>
   */
  createOrUpdate(workspaceName: string, kustoPoolName: string, principalAssignmentName: string, resourceGroupName: string, parameters: Models.ClusterPrincipalAssignment, options?: msRest.RequestOptionsBase): Promise<Models.KustoPoolPrincipalAssignmentsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(workspaceName,kustoPoolName,principalAssignmentName,resourceGroupName,parameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.KustoPoolPrincipalAssignmentsCreateOrUpdateResponse>;
  }

  /**
   * Deletes a Kusto pool principalAssignment.
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param principalAssignmentName The name of the Kusto principalAssignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(workspaceName: string, kustoPoolName: string, principalAssignmentName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(workspaceName,kustoPoolName,principalAssignmentName,resourceGroupName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Create a Kusto pool principalAssignment.
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param principalAssignmentName The name of the Kusto principalAssignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parameters The Kusto pool principalAssignment's parameters supplied for the operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(workspaceName: string, kustoPoolName: string, principalAssignmentName: string, resourceGroupName: string, parameters: Models.ClusterPrincipalAssignment, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        workspaceName,
        kustoPoolName,
        principalAssignmentName,
        resourceGroupName,
        parameters,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * Deletes a Kusto pool principalAssignment.
   * @param workspaceName The name of the workspace
   * @param kustoPoolName The name of the Kusto pool.
   * @param principalAssignmentName The name of the Kusto principalAssignment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(workspaceName: string, kustoPoolName: string, principalAssignmentName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        workspaceName,
        kustoPoolName,
        principalAssignmentName,
        resourceGroupName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const checkNameAvailabilityOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/checkPrincipalAssignmentNameAvailability",
  urlParameters: [
    Parameters.workspaceName,
    Parameters.kustoPoolName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "principalAssignmentName",
    mapper: {
      ...Mappers.ClusterPrincipalAssignmentCheckNameRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CheckNameResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/principalAssignments",
  urlParameters: [
    Parameters.workspaceName,
    Parameters.kustoPoolName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ClusterPrincipalAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/principalAssignments/{principalAssignmentName}",
  urlParameters: [
    Parameters.workspaceName,
    Parameters.kustoPoolName,
    Parameters.principalAssignmentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ClusterPrincipalAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/principalAssignments/{principalAssignmentName}",
  urlParameters: [
    Parameters.workspaceName,
    Parameters.kustoPoolName,
    Parameters.principalAssignmentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.ClusterPrincipalAssignment,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ClusterPrincipalAssignment
    },
    201: {
      bodyMapper: Mappers.ClusterPrincipalAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/principalAssignments/{principalAssignmentName}",
  urlParameters: [
    Parameters.workspaceName,
    Parameters.kustoPoolName,
    Parameters.principalAssignmentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
