/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { ManagedPrivateEndpoint as ManagedPrivateEndpointMapper } from "../models/mappers.js";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-12-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const managedVirtualNetworkName = {
    parameterPath: "managedVirtualNetworkName",
    mapper: {
        serializedName: "managedVirtualNetworkName",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const managedPrivateEndpointName = {
    parameterPath: "managedPrivateEndpointName",
    mapper: {
        serializedName: "managedPrivateEndpointName",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
export const managedPrivateEndpoint = {
    parameterPath: "managedPrivateEndpoint",
    mapper: ManagedPrivateEndpointMapper,
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
//# sourceMappingURL=parameters.js.map