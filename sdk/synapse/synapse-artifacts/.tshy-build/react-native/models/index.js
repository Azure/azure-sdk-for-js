/* eslint-disable no-irregular-whitespace */
/* eslint-disable tsdoc/syntax */
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link Type} that the service accepts. */
export var KnownType;
(function (KnownType) {
    /** LinkedServiceReference */
    KnownType["LinkedServiceReference"] = "LinkedServiceReference";
})(KnownType || (KnownType = {}));
/** Known values of {@link ActionOnExistingTargetTable} that the service accepts. */
export var KnownActionOnExistingTargetTable;
(function (KnownActionOnExistingTargetTable) {
    /** Same existing tables on target database will be Failed. */
    KnownActionOnExistingTargetTable["FailOnNonEmptyTable"] = "FailOnNonEmptyTable";
    /** Same existing tables on target database will be dropped and recreated. */
    KnownActionOnExistingTargetTable["DropAndRecreateTable"] = "DropAndRecreateTable";
    /** Same existing tables on target database will be Merged together. */
    KnownActionOnExistingTargetTable["MergeWithExistingData"] = "MergeWithExistingData";
})(KnownActionOnExistingTargetTable || (KnownActionOnExistingTargetTable = {}));
/** Known values of {@link BigDataPoolReferenceType} that the service accepts. */
export var KnownBigDataPoolReferenceType;
(function (KnownBigDataPoolReferenceType) {
    /** BigDataPoolReference */
    KnownBigDataPoolReferenceType["BigDataPoolReference"] = "BigDataPoolReference";
})(KnownBigDataPoolReferenceType || (KnownBigDataPoolReferenceType = {}));
/** Known values of {@link SparkConfigurationReferenceType} that the service accepts. */
export var KnownSparkConfigurationReferenceType;
(function (KnownSparkConfigurationReferenceType) {
    /** SparkConfigurationReference */
    KnownSparkConfigurationReferenceType["SparkConfigurationReference"] = "SparkConfigurationReference";
})(KnownSparkConfigurationReferenceType || (KnownSparkConfigurationReferenceType = {}));
/** Known values of {@link CellOutputType} that the service accepts. */
export var KnownCellOutputType;
(function (KnownCellOutputType) {
    /** ExecuteResult */
    KnownCellOutputType["ExecuteResult"] = "execute_result";
    /** DisplayData */
    KnownCellOutputType["DisplayData"] = "display_data";
    /** Stream */
    KnownCellOutputType["Stream"] = "stream";
    /** Error */
    KnownCellOutputType["Error"] = "error";
})(KnownCellOutputType || (KnownCellOutputType = {}));
/** Known values of {@link RequestStatus} that the service accepts. */
export var KnownRequestStatus;
(function (KnownRequestStatus) {
    /** Running */
    KnownRequestStatus["Running"] = "Running";
    /** Completed */
    KnownRequestStatus["Completed"] = "Completed";
    /** Failed */
    KnownRequestStatus["Failed"] = "Failed";
})(KnownRequestStatus || (KnownRequestStatus = {}));
/** Known values of {@link ResourceStatus} that the service accepts. */
export var KnownResourceStatus;
(function (KnownResourceStatus) {
    /** Creating */
    KnownResourceStatus["Creating"] = "Creating";
    /** Created */
    KnownResourceStatus["Created"] = "Created";
    /** Failed */
    KnownResourceStatus["Failed"] = "Failed";
})(KnownResourceStatus || (KnownResourceStatus = {}));
/** Known values of {@link NodeSize} that the service accepts. */
export var KnownNodeSize;
(function (KnownNodeSize) {
    /** None */
    KnownNodeSize["None"] = "None";
    /** Small */
    KnownNodeSize["Small"] = "Small";
    /** Medium */
    KnownNodeSize["Medium"] = "Medium";
    /** Large */
    KnownNodeSize["Large"] = "Large";
    /** XLarge */
    KnownNodeSize["XLarge"] = "XLarge";
    /** XXLarge */
    KnownNodeSize["XXLarge"] = "XXLarge";
    /** XXXLarge */
    KnownNodeSize["XXXLarge"] = "XXXLarge";
})(KnownNodeSize || (KnownNodeSize = {}));
/** Known values of {@link NodeSizeFamily} that the service accepts. */
export var KnownNodeSizeFamily;
(function (KnownNodeSizeFamily) {
    /** None */
    KnownNodeSizeFamily["None"] = "None";
    /** MemoryOptimized */
    KnownNodeSizeFamily["MemoryOptimized"] = "MemoryOptimized";
})(KnownNodeSizeFamily || (KnownNodeSizeFamily = {}));
/** Known values of {@link IntegrationRuntimeType} that the service accepts. */
export var KnownIntegrationRuntimeType;
(function (KnownIntegrationRuntimeType) {
    /** Managed */
    KnownIntegrationRuntimeType["Managed"] = "Managed";
    /** SelfHosted */
    KnownIntegrationRuntimeType["SelfHosted"] = "SelfHosted";
})(KnownIntegrationRuntimeType || (KnownIntegrationRuntimeType = {}));
/** Known values of {@link ParameterType} that the service accepts. */
export var KnownParameterType;
(function (KnownParameterType) {
    /** Object */
    KnownParameterType["Object"] = "Object";
    /** String */
    KnownParameterType["String"] = "String";
    /** Int */
    KnownParameterType["Int"] = "Int";
    /** Float */
    KnownParameterType["Float"] = "Float";
    /** Bool */
    KnownParameterType["Bool"] = "Bool";
    /** Array */
    KnownParameterType["Array"] = "Array";
    /** SecureString */
    KnownParameterType["SecureString"] = "SecureString";
})(KnownParameterType || (KnownParameterType = {}));
/** Known values of {@link IntegrationRuntimeReferenceType} that the service accepts. */
export var KnownIntegrationRuntimeReferenceType;
(function (KnownIntegrationRuntimeReferenceType) {
    /** IntegrationRuntimeReference */
    KnownIntegrationRuntimeReferenceType["IntegrationRuntimeReference"] = "IntegrationRuntimeReference";
})(KnownIntegrationRuntimeReferenceType || (KnownIntegrationRuntimeReferenceType = {}));
/** Known values of {@link DataFlowDebugCommandType} that the service accepts. */
export var KnownDataFlowDebugCommandType;
(function (KnownDataFlowDebugCommandType) {
    /** ExecutePreviewQuery */
    KnownDataFlowDebugCommandType["ExecutePreviewQuery"] = "executePreviewQuery";
    /** ExecuteStatisticsQuery */
    KnownDataFlowDebugCommandType["ExecuteStatisticsQuery"] = "executeStatisticsQuery";
    /** ExecuteExpressionQuery */
    KnownDataFlowDebugCommandType["ExecuteExpressionQuery"] = "executeExpressionQuery";
})(KnownDataFlowDebugCommandType || (KnownDataFlowDebugCommandType = {}));
/** Known values of {@link ActivityState} that the service accepts. */
export var KnownActivityState;
(function (KnownActivityState) {
    /** Active */
    KnownActivityState["Active"] = "Active";
    /** Inactive */
    KnownActivityState["Inactive"] = "Inactive";
})(KnownActivityState || (KnownActivityState = {}));
/** Known values of {@link ActivityOnInactiveMarkAs} that the service accepts. */
export var KnownActivityOnInactiveMarkAs;
(function (KnownActivityOnInactiveMarkAs) {
    /** Succeeded */
    KnownActivityOnInactiveMarkAs["Succeeded"] = "Succeeded";
    /** Failed */
    KnownActivityOnInactiveMarkAs["Failed"] = "Failed";
    /** Skipped */
    KnownActivityOnInactiveMarkAs["Skipped"] = "Skipped";
})(KnownActivityOnInactiveMarkAs || (KnownActivityOnInactiveMarkAs = {}));
/** Known values of {@link DependencyCondition} that the service accepts. */
export var KnownDependencyCondition;
(function (KnownDependencyCondition) {
    /** Succeeded */
    KnownDependencyCondition["Succeeded"] = "Succeeded";
    /** Failed */
    KnownDependencyCondition["Failed"] = "Failed";
    /** Skipped */
    KnownDependencyCondition["Skipped"] = "Skipped";
    /** Completed */
    KnownDependencyCondition["Completed"] = "Completed";
})(KnownDependencyCondition || (KnownDependencyCondition = {}));
/** Known values of {@link VariableType} that the service accepts. */
export var KnownVariableType;
(function (KnownVariableType) {
    /** String */
    KnownVariableType["String"] = "String";
    /** Bool */
    KnownVariableType["Bool"] = "Bool";
    /** Boolean */
    KnownVariableType["Boolean"] = "Boolean";
    /** Array */
    KnownVariableType["Array"] = "Array";
})(KnownVariableType || (KnownVariableType = {}));
/** Known values of {@link RunQueryFilterOperand} that the service accepts. */
export var KnownRunQueryFilterOperand;
(function (KnownRunQueryFilterOperand) {
    /** PipelineName */
    KnownRunQueryFilterOperand["PipelineName"] = "PipelineName";
    /** Status */
    KnownRunQueryFilterOperand["Status"] = "Status";
    /** RunStart */
    KnownRunQueryFilterOperand["RunStart"] = "RunStart";
    /** RunEnd */
    KnownRunQueryFilterOperand["RunEnd"] = "RunEnd";
    /** ActivityName */
    KnownRunQueryFilterOperand["ActivityName"] = "ActivityName";
    /** ActivityRunStart */
    KnownRunQueryFilterOperand["ActivityRunStart"] = "ActivityRunStart";
    /** ActivityRunEnd */
    KnownRunQueryFilterOperand["ActivityRunEnd"] = "ActivityRunEnd";
    /** ActivityType */
    KnownRunQueryFilterOperand["ActivityType"] = "ActivityType";
    /** TriggerName */
    KnownRunQueryFilterOperand["TriggerName"] = "TriggerName";
    /** TriggerRunTimestamp */
    KnownRunQueryFilterOperand["TriggerRunTimestamp"] = "TriggerRunTimestamp";
    /** RunGroupId */
    KnownRunQueryFilterOperand["RunGroupId"] = "RunGroupId";
    /** LatestOnly */
    KnownRunQueryFilterOperand["LatestOnly"] = "LatestOnly";
})(KnownRunQueryFilterOperand || (KnownRunQueryFilterOperand = {}));
/** Known values of {@link RunQueryFilterOperator} that the service accepts. */
export var KnownRunQueryFilterOperator;
(function (KnownRunQueryFilterOperator) {
    /** Equals */
    KnownRunQueryFilterOperator["Equals"] = "Equals";
    /** NotEquals */
    KnownRunQueryFilterOperator["NotEquals"] = "NotEquals";
    /** In */
    KnownRunQueryFilterOperator["In"] = "In";
    /** NotIn */
    KnownRunQueryFilterOperator["NotIn"] = "NotIn";
})(KnownRunQueryFilterOperator || (KnownRunQueryFilterOperator = {}));
/** Known values of {@link RunQueryOrderByField} that the service accepts. */
export var KnownRunQueryOrderByField;
(function (KnownRunQueryOrderByField) {
    /** RunStart */
    KnownRunQueryOrderByField["RunStart"] = "RunStart";
    /** RunEnd */
    KnownRunQueryOrderByField["RunEnd"] = "RunEnd";
    /** PipelineName */
    KnownRunQueryOrderByField["PipelineName"] = "PipelineName";
    /** Status */
    KnownRunQueryOrderByField["Status"] = "Status";
    /** ActivityName */
    KnownRunQueryOrderByField["ActivityName"] = "ActivityName";
    /** ActivityRunStart */
    KnownRunQueryOrderByField["ActivityRunStart"] = "ActivityRunStart";
    /** ActivityRunEnd */
    KnownRunQueryOrderByField["ActivityRunEnd"] = "ActivityRunEnd";
    /** TriggerName */
    KnownRunQueryOrderByField["TriggerName"] = "TriggerName";
    /** TriggerRunTimestamp */
    KnownRunQueryOrderByField["TriggerRunTimestamp"] = "TriggerRunTimestamp";
})(KnownRunQueryOrderByField || (KnownRunQueryOrderByField = {}));
/** Known values of {@link RunQueryOrder} that the service accepts. */
export var KnownRunQueryOrder;
(function (KnownRunQueryOrder) {
    /** ASC */
    KnownRunQueryOrder["ASC"] = "ASC";
    /** Desc */
    KnownRunQueryOrder["Desc"] = "DESC";
})(KnownRunQueryOrder || (KnownRunQueryOrder = {}));
/** Known values of {@link SparkJobType} that the service accepts. */
export var KnownSparkJobType;
(function (KnownSparkJobType) {
    /** SparkBatch */
    KnownSparkJobType["SparkBatch"] = "SparkBatch";
    /** SparkSession */
    KnownSparkJobType["SparkSession"] = "SparkSession";
})(KnownSparkJobType || (KnownSparkJobType = {}));
/** Known values of {@link SparkBatchJobResultType} that the service accepts. */
export var KnownSparkBatchJobResultType;
(function (KnownSparkBatchJobResultType) {
    /** Uncertain */
    KnownSparkBatchJobResultType["Uncertain"] = "Uncertain";
    /** Succeeded */
    KnownSparkBatchJobResultType["Succeeded"] = "Succeeded";
    /** Failed */
    KnownSparkBatchJobResultType["Failed"] = "Failed";
    /** Cancelled */
    KnownSparkBatchJobResultType["Cancelled"] = "Cancelled";
})(KnownSparkBatchJobResultType || (KnownSparkBatchJobResultType = {}));
/** Known values of {@link SchedulerCurrentState} that the service accepts. */
export var KnownSchedulerCurrentState;
(function (KnownSchedulerCurrentState) {
    /** Queued */
    KnownSchedulerCurrentState["Queued"] = "Queued";
    /** Scheduled */
    KnownSchedulerCurrentState["Scheduled"] = "Scheduled";
    /** Ended */
    KnownSchedulerCurrentState["Ended"] = "Ended";
})(KnownSchedulerCurrentState || (KnownSchedulerCurrentState = {}));
/** Known values of {@link PluginCurrentState} that the service accepts. */
export var KnownPluginCurrentState;
(function (KnownPluginCurrentState) {
    /** Preparation */
    KnownPluginCurrentState["Preparation"] = "Preparation";
    /** ResourceAcquisition */
    KnownPluginCurrentState["ResourceAcquisition"] = "ResourceAcquisition";
    /** Queued */
    KnownPluginCurrentState["Queued"] = "Queued";
    /** Submission */
    KnownPluginCurrentState["Submission"] = "Submission";
    /** Monitoring */
    KnownPluginCurrentState["Monitoring"] = "Monitoring";
    /** Cleanup */
    KnownPluginCurrentState["Cleanup"] = "Cleanup";
    /** Ended */
    KnownPluginCurrentState["Ended"] = "Ended";
})(KnownPluginCurrentState || (KnownPluginCurrentState = {}));
/** Known values of {@link SparkErrorSource} that the service accepts. */
export var KnownSparkErrorSource;
(function (KnownSparkErrorSource) {
    /** System */
    KnownSparkErrorSource["System"] = "System";
    /** User */
    KnownSparkErrorSource["User"] = "User";
    /** Unknown */
    KnownSparkErrorSource["Unknown"] = "Unknown";
    /** Dependency */
    KnownSparkErrorSource["Dependency"] = "Dependency";
})(KnownSparkErrorSource || (KnownSparkErrorSource = {}));
/** Known values of {@link LivyStates} that the service accepts. */
export var KnownLivyStates;
(function (KnownLivyStates) {
    /** NotStarted */
    KnownLivyStates["NotStarted"] = "not_started";
    /** Starting */
    KnownLivyStates["Starting"] = "starting";
    /** Idle */
    KnownLivyStates["Idle"] = "idle";
    /** Busy */
    KnownLivyStates["Busy"] = "busy";
    /** ShuttingDown */
    KnownLivyStates["ShuttingDown"] = "shutting_down";
    /** Error */
    KnownLivyStates["Error"] = "error";
    /** Dead */
    KnownLivyStates["Dead"] = "dead";
    /** Killed */
    KnownLivyStates["Killed"] = "killed";
    /** Success */
    KnownLivyStates["Success"] = "success";
    /** Running */
    KnownLivyStates["Running"] = "running";
    /** Recovering */
    KnownLivyStates["Recovering"] = "recovering";
})(KnownLivyStates || (KnownLivyStates = {}));
/** Known values of {@link CreateMode} that the service accepts. */
export var KnownCreateMode;
(function (KnownCreateMode) {
    /** Default */
    KnownCreateMode["Default"] = "Default";
    /** PointInTimeRestore */
    KnownCreateMode["PointInTimeRestore"] = "PointInTimeRestore";
    /** Recovery */
    KnownCreateMode["Recovery"] = "Recovery";
    /** Restore */
    KnownCreateMode["Restore"] = "Restore";
})(KnownCreateMode || (KnownCreateMode = {}));
/** Known values of {@link SqlScriptType} that the service accepts. */
export var KnownSqlScriptType;
(function (KnownSqlScriptType) {
    /** SqlQuery */
    KnownSqlScriptType["SqlQuery"] = "SqlQuery";
})(KnownSqlScriptType || (KnownSqlScriptType = {}));
/** Known values of {@link SqlConnectionType} that the service accepts. */
export var KnownSqlConnectionType;
(function (KnownSqlConnectionType) {
    /** SqlOnDemand */
    KnownSqlConnectionType["SqlOnDemand"] = "SqlOnDemand";
    /** SqlPool */
    KnownSqlConnectionType["SqlPool"] = "SqlPool";
})(KnownSqlConnectionType || (KnownSqlConnectionType = {}));
/** Known values of {@link TriggerRuntimeState} that the service accepts. */
export var KnownTriggerRuntimeState;
(function (KnownTriggerRuntimeState) {
    /** Started */
    KnownTriggerRuntimeState["Started"] = "Started";
    /** Stopped */
    KnownTriggerRuntimeState["Stopped"] = "Stopped";
    /** Disabled */
    KnownTriggerRuntimeState["Disabled"] = "Disabled";
})(KnownTriggerRuntimeState || (KnownTriggerRuntimeState = {}));
/** Known values of {@link EventSubscriptionStatus} that the service accepts. */
export var KnownEventSubscriptionStatus;
(function (KnownEventSubscriptionStatus) {
    /** Enabled */
    KnownEventSubscriptionStatus["Enabled"] = "Enabled";
    /** Provisioning */
    KnownEventSubscriptionStatus["Provisioning"] = "Provisioning";
    /** Deprovisioning */
    KnownEventSubscriptionStatus["Deprovisioning"] = "Deprovisioning";
    /** Disabled */
    KnownEventSubscriptionStatus["Disabled"] = "Disabled";
    /** Unknown */
    KnownEventSubscriptionStatus["Unknown"] = "Unknown";
})(KnownEventSubscriptionStatus || (KnownEventSubscriptionStatus = {}));
/** Known values of {@link TriggerRunStatus} that the service accepts. */
export var KnownTriggerRunStatus;
(function (KnownTriggerRunStatus) {
    /** Succeeded */
    KnownTriggerRunStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownTriggerRunStatus["Failed"] = "Failed";
    /** Inprogress */
    KnownTriggerRunStatus["Inprogress"] = "Inprogress";
})(KnownTriggerRunStatus || (KnownTriggerRunStatus = {}));
/** Known values of {@link ExpressionType} that the service accepts. */
export var KnownExpressionType;
(function (KnownExpressionType) {
    /** Expression */
    KnownExpressionType["Expression"] = "Expression";
})(KnownExpressionType || (KnownExpressionType = {}));
/** Known values of {@link PipelineReferenceType} that the service accepts. */
export var KnownPipelineReferenceType;
(function (KnownPipelineReferenceType) {
    /** PipelineReference */
    KnownPipelineReferenceType["PipelineReference"] = "PipelineReference";
})(KnownPipelineReferenceType || (KnownPipelineReferenceType = {}));
/** Known values of {@link DatasetReferenceType} that the service accepts. */
export var KnownDatasetReferenceType;
(function (KnownDatasetReferenceType) {
    /** DatasetReference */
    KnownDatasetReferenceType["DatasetReference"] = "DatasetReference";
})(KnownDatasetReferenceType || (KnownDatasetReferenceType = {}));
/** Known values of {@link DataFlowReferenceType} that the service accepts. */
export var KnownDataFlowReferenceType;
(function (KnownDataFlowReferenceType) {
    /** DataFlowReference */
    KnownDataFlowReferenceType["DataFlowReference"] = "DataFlowReference";
})(KnownDataFlowReferenceType || (KnownDataFlowReferenceType = {}));
/** Known values of {@link NotebookReferenceType} that the service accepts. */
export var KnownNotebookReferenceType;
(function (KnownNotebookReferenceType) {
    /** NotebookReference */
    KnownNotebookReferenceType["NotebookReference"] = "NotebookReference";
})(KnownNotebookReferenceType || (KnownNotebookReferenceType = {}));
/** Known values of {@link SparkJobReferenceType} that the service accepts. */
export var KnownSparkJobReferenceType;
(function (KnownSparkJobReferenceType) {
    /** SparkJobDefinitionReference */
    KnownSparkJobReferenceType["SparkJobDefinitionReference"] = "SparkJobDefinitionReference";
})(KnownSparkJobReferenceType || (KnownSparkJobReferenceType = {}));
/** Known values of {@link SqlPoolReferenceType} that the service accepts. */
export var KnownSqlPoolReferenceType;
(function (KnownSqlPoolReferenceType) {
    /** SqlPoolReference */
    KnownSqlPoolReferenceType["SqlPoolReference"] = "SqlPoolReference";
})(KnownSqlPoolReferenceType || (KnownSqlPoolReferenceType = {}));
/** Known values of {@link CredentialReferenceType} that the service accepts. */
export var KnownCredentialReferenceType;
(function (KnownCredentialReferenceType) {
    /** CredentialReference */
    KnownCredentialReferenceType["CredentialReference"] = "CredentialReference";
})(KnownCredentialReferenceType || (KnownCredentialReferenceType = {}));
/** Known values of {@link AzureStorageAuthenticationType} that the service accepts. */
export var KnownAzureStorageAuthenticationType;
(function (KnownAzureStorageAuthenticationType) {
    /** Anonymous */
    KnownAzureStorageAuthenticationType["Anonymous"] = "Anonymous";
    /** AccountKey */
    KnownAzureStorageAuthenticationType["AccountKey"] = "AccountKey";
    /** SasUri */
    KnownAzureStorageAuthenticationType["SasUri"] = "SasUri";
    /** ServicePrincipal */
    KnownAzureStorageAuthenticationType["ServicePrincipal"] = "ServicePrincipal";
    /** Msi */
    KnownAzureStorageAuthenticationType["Msi"] = "Msi";
})(KnownAzureStorageAuthenticationType || (KnownAzureStorageAuthenticationType = {}));
/** Known values of {@link AzureSqlDWAuthenticationType} that the service accepts. */
export var KnownAzureSqlDWAuthenticationType;
(function (KnownAzureSqlDWAuthenticationType) {
    /** SQL */
    KnownAzureSqlDWAuthenticationType["SQL"] = "SQL";
    /** ServicePrincipal */
    KnownAzureSqlDWAuthenticationType["ServicePrincipal"] = "ServicePrincipal";
    /** SystemAssignedManagedIdentity */
    KnownAzureSqlDWAuthenticationType["SystemAssignedManagedIdentity"] = "SystemAssignedManagedIdentity";
    /** UserAssignedManagedIdentity */
    KnownAzureSqlDWAuthenticationType["UserAssignedManagedIdentity"] = "UserAssignedManagedIdentity";
})(KnownAzureSqlDWAuthenticationType || (KnownAzureSqlDWAuthenticationType = {}));
/** Known values of {@link SqlServerAuthenticationType} that the service accepts. */
export var KnownSqlServerAuthenticationType;
(function (KnownSqlServerAuthenticationType) {
    /** SQL */
    KnownSqlServerAuthenticationType["SQL"] = "SQL";
    /** Windows */
    KnownSqlServerAuthenticationType["Windows"] = "Windows";
    /** UserAssignedManagedIdentity */
    KnownSqlServerAuthenticationType["UserAssignedManagedIdentity"] = "UserAssignedManagedIdentity";
})(KnownSqlServerAuthenticationType || (KnownSqlServerAuthenticationType = {}));
/** Known values of {@link SqlAlwaysEncryptedAkvAuthType} that the service accepts. */
export var KnownSqlAlwaysEncryptedAkvAuthType;
(function (KnownSqlAlwaysEncryptedAkvAuthType) {
    /** ServicePrincipal */
    KnownSqlAlwaysEncryptedAkvAuthType["ServicePrincipal"] = "ServicePrincipal";
    /** ManagedIdentity */
    KnownSqlAlwaysEncryptedAkvAuthType["ManagedIdentity"] = "ManagedIdentity";
    /** UserAssignedManagedIdentity */
    KnownSqlAlwaysEncryptedAkvAuthType["UserAssignedManagedIdentity"] = "UserAssignedManagedIdentity";
})(KnownSqlAlwaysEncryptedAkvAuthType || (KnownSqlAlwaysEncryptedAkvAuthType = {}));
/** Known values of {@link AmazonRdsForSqlServerAuthenticationType} that the service accepts. */
export var KnownAmazonRdsForSqlServerAuthenticationType;
(function (KnownAmazonRdsForSqlServerAuthenticationType) {
    /** SQL */
    KnownAmazonRdsForSqlServerAuthenticationType["SQL"] = "SQL";
    /** Windows */
    KnownAmazonRdsForSqlServerAuthenticationType["Windows"] = "Windows";
})(KnownAmazonRdsForSqlServerAuthenticationType || (KnownAmazonRdsForSqlServerAuthenticationType = {}));
/** Known values of {@link AzureSqlDatabaseAuthenticationType} that the service accepts. */
export var KnownAzureSqlDatabaseAuthenticationType;
(function (KnownAzureSqlDatabaseAuthenticationType) {
    /** SQL */
    KnownAzureSqlDatabaseAuthenticationType["SQL"] = "SQL";
    /** ServicePrincipal */
    KnownAzureSqlDatabaseAuthenticationType["ServicePrincipal"] = "ServicePrincipal";
    /** SystemAssignedManagedIdentity */
    KnownAzureSqlDatabaseAuthenticationType["SystemAssignedManagedIdentity"] = "SystemAssignedManagedIdentity";
    /** UserAssignedManagedIdentity */
    KnownAzureSqlDatabaseAuthenticationType["UserAssignedManagedIdentity"] = "UserAssignedManagedIdentity";
})(KnownAzureSqlDatabaseAuthenticationType || (KnownAzureSqlDatabaseAuthenticationType = {}));
/** Known values of {@link AzureSqlMIAuthenticationType} that the service accepts. */
export var KnownAzureSqlMIAuthenticationType;
(function (KnownAzureSqlMIAuthenticationType) {
    /** SQL */
    KnownAzureSqlMIAuthenticationType["SQL"] = "SQL";
    /** ServicePrincipal */
    KnownAzureSqlMIAuthenticationType["ServicePrincipal"] = "ServicePrincipal";
    /** SystemAssignedManagedIdentity */
    KnownAzureSqlMIAuthenticationType["SystemAssignedManagedIdentity"] = "SystemAssignedManagedIdentity";
    /** UserAssignedManagedIdentity */
    KnownAzureSqlMIAuthenticationType["UserAssignedManagedIdentity"] = "UserAssignedManagedIdentity";
})(KnownAzureSqlMIAuthenticationType || (KnownAzureSqlMIAuthenticationType = {}));
/** Known values of {@link OracleAuthenticationType} that the service accepts. */
export var KnownOracleAuthenticationType;
(function (KnownOracleAuthenticationType) {
    /** Basic */
    KnownOracleAuthenticationType["Basic"] = "Basic";
})(KnownOracleAuthenticationType || (KnownOracleAuthenticationType = {}));
/** Known values of {@link SybaseAuthenticationType} that the service accepts. */
export var KnownSybaseAuthenticationType;
(function (KnownSybaseAuthenticationType) {
    /** Basic */
    KnownSybaseAuthenticationType["Basic"] = "Basic";
    /** Windows */
    KnownSybaseAuthenticationType["Windows"] = "Windows";
})(KnownSybaseAuthenticationType || (KnownSybaseAuthenticationType = {}));
/** Known values of {@link Db2AuthenticationType} that the service accepts. */
export var KnownDb2AuthenticationType;
(function (KnownDb2AuthenticationType) {
    /** Basic */
    KnownDb2AuthenticationType["Basic"] = "Basic";
})(KnownDb2AuthenticationType || (KnownDb2AuthenticationType = {}));
/** Known values of {@link TeradataAuthenticationType} that the service accepts. */
export var KnownTeradataAuthenticationType;
(function (KnownTeradataAuthenticationType) {
    /** Basic */
    KnownTeradataAuthenticationType["Basic"] = "Basic";
    /** Windows */
    KnownTeradataAuthenticationType["Windows"] = "Windows";
})(KnownTeradataAuthenticationType || (KnownTeradataAuthenticationType = {}));
/** Known values of {@link ODataAuthenticationType} that the service accepts. */
export var KnownODataAuthenticationType;
(function (KnownODataAuthenticationType) {
    /** Basic */
    KnownODataAuthenticationType["Basic"] = "Basic";
    /** Anonymous */
    KnownODataAuthenticationType["Anonymous"] = "Anonymous";
    /** Windows */
    KnownODataAuthenticationType["Windows"] = "Windows";
    /** AadServicePrincipal */
    KnownODataAuthenticationType["AadServicePrincipal"] = "AadServicePrincipal";
    /** ManagedServiceIdentity */
    KnownODataAuthenticationType["ManagedServiceIdentity"] = "ManagedServiceIdentity";
})(KnownODataAuthenticationType || (KnownODataAuthenticationType = {}));
/** Known values of {@link ODataAadServicePrincipalCredentialType} that the service accepts. */
export var KnownODataAadServicePrincipalCredentialType;
(function (KnownODataAadServicePrincipalCredentialType) {
    /** ServicePrincipalKey */
    KnownODataAadServicePrincipalCredentialType["ServicePrincipalKey"] = "ServicePrincipalKey";
    /** ServicePrincipalCert */
    KnownODataAadServicePrincipalCredentialType["ServicePrincipalCert"] = "ServicePrincipalCert";
})(KnownODataAadServicePrincipalCredentialType || (KnownODataAadServicePrincipalCredentialType = {}));
/** Known values of {@link WebAuthenticationType} that the service accepts. */
export var KnownWebAuthenticationType;
(function (KnownWebAuthenticationType) {
    /** Basic */
    KnownWebAuthenticationType["Basic"] = "Basic";
    /** Anonymous */
    KnownWebAuthenticationType["Anonymous"] = "Anonymous";
    /** ClientCertificate */
    KnownWebAuthenticationType["ClientCertificate"] = "ClientCertificate";
})(KnownWebAuthenticationType || (KnownWebAuthenticationType = {}));
/** Known values of {@link MongoDbAuthenticationType} that the service accepts. */
export var KnownMongoDbAuthenticationType;
(function (KnownMongoDbAuthenticationType) {
    /** Basic */
    KnownMongoDbAuthenticationType["Basic"] = "Basic";
    /** Anonymous */
    KnownMongoDbAuthenticationType["Anonymous"] = "Anonymous";
})(KnownMongoDbAuthenticationType || (KnownMongoDbAuthenticationType = {}));
/** Known values of {@link RestServiceAuthenticationType} that the service accepts. */
export var KnownRestServiceAuthenticationType;
(function (KnownRestServiceAuthenticationType) {
    /** Anonymous */
    KnownRestServiceAuthenticationType["Anonymous"] = "Anonymous";
    /** Basic */
    KnownRestServiceAuthenticationType["Basic"] = "Basic";
    /** AadServicePrincipal */
    KnownRestServiceAuthenticationType["AadServicePrincipal"] = "AadServicePrincipal";
    /** ManagedServiceIdentity */
    KnownRestServiceAuthenticationType["ManagedServiceIdentity"] = "ManagedServiceIdentity";
    /** OAuth2ClientCredential */
    KnownRestServiceAuthenticationType["OAuth2ClientCredential"] = "OAuth2ClientCredential";
})(KnownRestServiceAuthenticationType || (KnownRestServiceAuthenticationType = {}));
/** Known values of {@link TeamDeskAuthenticationType} that the service accepts. */
export var KnownTeamDeskAuthenticationType;
(function (KnownTeamDeskAuthenticationType) {
    /** Basic */
    KnownTeamDeskAuthenticationType["Basic"] = "Basic";
    /** Token */
    KnownTeamDeskAuthenticationType["Token"] = "Token";
})(KnownTeamDeskAuthenticationType || (KnownTeamDeskAuthenticationType = {}));
/** Known values of {@link ZendeskAuthenticationType} that the service accepts. */
export var KnownZendeskAuthenticationType;
(function (KnownZendeskAuthenticationType) {
    /** Basic */
    KnownZendeskAuthenticationType["Basic"] = "Basic";
    /** Token */
    KnownZendeskAuthenticationType["Token"] = "Token";
})(KnownZendeskAuthenticationType || (KnownZendeskAuthenticationType = {}));
/** Known values of {@link HttpAuthenticationType} that the service accepts. */
export var KnownHttpAuthenticationType;
(function (KnownHttpAuthenticationType) {
    /** Basic */
    KnownHttpAuthenticationType["Basic"] = "Basic";
    /** Anonymous */
    KnownHttpAuthenticationType["Anonymous"] = "Anonymous";
    /** Digest */
    KnownHttpAuthenticationType["Digest"] = "Digest";
    /** Windows */
    KnownHttpAuthenticationType["Windows"] = "Windows";
    /** ClientCertificate */
    KnownHttpAuthenticationType["ClientCertificate"] = "ClientCertificate";
})(KnownHttpAuthenticationType || (KnownHttpAuthenticationType = {}));
/** Known values of {@link FtpAuthenticationType} that the service accepts. */
export var KnownFtpAuthenticationType;
(function (KnownFtpAuthenticationType) {
    /** Basic */
    KnownFtpAuthenticationType["Basic"] = "Basic";
    /** Anonymous */
    KnownFtpAuthenticationType["Anonymous"] = "Anonymous";
})(KnownFtpAuthenticationType || (KnownFtpAuthenticationType = {}));
/** Known values of {@link SftpAuthenticationType} that the service accepts. */
export var KnownSftpAuthenticationType;
(function (KnownSftpAuthenticationType) {
    /** Basic */
    KnownSftpAuthenticationType["Basic"] = "Basic";
    /** SshPublicKey */
    KnownSftpAuthenticationType["SshPublicKey"] = "SshPublicKey";
})(KnownSftpAuthenticationType || (KnownSftpAuthenticationType = {}));
/** Known values of {@link SapHanaAuthenticationType} that the service accepts. */
export var KnownSapHanaAuthenticationType;
(function (KnownSapHanaAuthenticationType) {
    /** Basic */
    KnownSapHanaAuthenticationType["Basic"] = "Basic";
    /** Windows */
    KnownSapHanaAuthenticationType["Windows"] = "Windows";
})(KnownSapHanaAuthenticationType || (KnownSapHanaAuthenticationType = {}));
/** Known values of {@link GoogleBigQueryAuthenticationType} that the service accepts. */
export var KnownGoogleBigQueryAuthenticationType;
(function (KnownGoogleBigQueryAuthenticationType) {
    /** ServiceAuthentication */
    KnownGoogleBigQueryAuthenticationType["ServiceAuthentication"] = "ServiceAuthentication";
    /** UserAuthentication */
    KnownGoogleBigQueryAuthenticationType["UserAuthentication"] = "UserAuthentication";
})(KnownGoogleBigQueryAuthenticationType || (KnownGoogleBigQueryAuthenticationType = {}));
/** Known values of {@link GoogleBigQueryV2AuthenticationType} that the service accepts. */
export var KnownGoogleBigQueryV2AuthenticationType;
(function (KnownGoogleBigQueryV2AuthenticationType) {
    /** ServiceAuthentication */
    KnownGoogleBigQueryV2AuthenticationType["ServiceAuthentication"] = "ServiceAuthentication";
    /** UserAuthentication */
    KnownGoogleBigQueryV2AuthenticationType["UserAuthentication"] = "UserAuthentication";
})(KnownGoogleBigQueryV2AuthenticationType || (KnownGoogleBigQueryV2AuthenticationType = {}));
/** Known values of {@link GreenplumAuthenticationType} that the service accepts. */
export var KnownGreenplumAuthenticationType;
(function (KnownGreenplumAuthenticationType) {
    /** Basic */
    KnownGreenplumAuthenticationType["Basic"] = "Basic";
})(KnownGreenplumAuthenticationType || (KnownGreenplumAuthenticationType = {}));
/** Known values of {@link HBaseAuthenticationType} that the service accepts. */
export var KnownHBaseAuthenticationType;
(function (KnownHBaseAuthenticationType) {
    /** Anonymous */
    KnownHBaseAuthenticationType["Anonymous"] = "Anonymous";
    /** Basic */
    KnownHBaseAuthenticationType["Basic"] = "Basic";
})(KnownHBaseAuthenticationType || (KnownHBaseAuthenticationType = {}));
/** Known values of {@link HiveServerType} that the service accepts. */
export var KnownHiveServerType;
(function (KnownHiveServerType) {
    /** HiveServer1 */
    KnownHiveServerType["HiveServer1"] = "HiveServer1";
    /** HiveServer2 */
    KnownHiveServerType["HiveServer2"] = "HiveServer2";
    /** HiveThriftServer */
    KnownHiveServerType["HiveThriftServer"] = "HiveThriftServer";
})(KnownHiveServerType || (KnownHiveServerType = {}));
/** Known values of {@link HiveThriftTransportProtocol} that the service accepts. */
export var KnownHiveThriftTransportProtocol;
(function (KnownHiveThriftTransportProtocol) {
    /** Binary */
    KnownHiveThriftTransportProtocol["Binary"] = "Binary";
    /** Sasl */
    KnownHiveThriftTransportProtocol["Sasl"] = "SASL";
    /** Http */
    KnownHiveThriftTransportProtocol["Http"] = "HTTP ";
})(KnownHiveThriftTransportProtocol || (KnownHiveThriftTransportProtocol = {}));
/** Known values of {@link HiveAuthenticationType} that the service accepts. */
export var KnownHiveAuthenticationType;
(function (KnownHiveAuthenticationType) {
    /** Anonymous */
    KnownHiveAuthenticationType["Anonymous"] = "Anonymous";
    /** Username */
    KnownHiveAuthenticationType["Username"] = "Username";
    /** UsernameAndPassword */
    KnownHiveAuthenticationType["UsernameAndPassword"] = "UsernameAndPassword";
    /** WindowsAzureHDInsightService */
    KnownHiveAuthenticationType["WindowsAzureHDInsightService"] = "WindowsAzureHDInsightService";
})(KnownHiveAuthenticationType || (KnownHiveAuthenticationType = {}));
/** Known values of {@link ImpalaAuthenticationType} that the service accepts. */
export var KnownImpalaAuthenticationType;
(function (KnownImpalaAuthenticationType) {
    /** Anonymous */
    KnownImpalaAuthenticationType["Anonymous"] = "Anonymous";
    /** SaslUsername */
    KnownImpalaAuthenticationType["SaslUsername"] = "SASLUsername";
    /** UsernameAndPassword */
    KnownImpalaAuthenticationType["UsernameAndPassword"] = "UsernameAndPassword";
})(KnownImpalaAuthenticationType || (KnownImpalaAuthenticationType = {}));
/** Known values of {@link PhoenixAuthenticationType} that the service accepts. */
export var KnownPhoenixAuthenticationType;
(function (KnownPhoenixAuthenticationType) {
    /** Anonymous */
    KnownPhoenixAuthenticationType["Anonymous"] = "Anonymous";
    /** UsernameAndPassword */
    KnownPhoenixAuthenticationType["UsernameAndPassword"] = "UsernameAndPassword";
    /** WindowsAzureHDInsightService */
    KnownPhoenixAuthenticationType["WindowsAzureHDInsightService"] = "WindowsAzureHDInsightService";
})(KnownPhoenixAuthenticationType || (KnownPhoenixAuthenticationType = {}));
/** Known values of {@link PrestoAuthenticationType} that the service accepts. */
export var KnownPrestoAuthenticationType;
(function (KnownPrestoAuthenticationType) {
    /** Anonymous */
    KnownPrestoAuthenticationType["Anonymous"] = "Anonymous";
    /** Ldap */
    KnownPrestoAuthenticationType["Ldap"] = "LDAP";
})(KnownPrestoAuthenticationType || (KnownPrestoAuthenticationType = {}));
/** Known values of {@link ServiceNowAuthenticationType} that the service accepts. */
export var KnownServiceNowAuthenticationType;
(function (KnownServiceNowAuthenticationType) {
    /** Basic */
    KnownServiceNowAuthenticationType["Basic"] = "Basic";
    /** OAuth2 */
    KnownServiceNowAuthenticationType["OAuth2"] = "OAuth2";
})(KnownServiceNowAuthenticationType || (KnownServiceNowAuthenticationType = {}));
/** Known values of {@link SparkServerType} that the service accepts. */
export var KnownSparkServerType;
(function (KnownSparkServerType) {
    /** SharkServer */
    KnownSparkServerType["SharkServer"] = "SharkServer";
    /** SharkServer2 */
    KnownSparkServerType["SharkServer2"] = "SharkServer2";
    /** SparkThriftServer */
    KnownSparkServerType["SparkThriftServer"] = "SparkThriftServer";
})(KnownSparkServerType || (KnownSparkServerType = {}));
/** Known values of {@link SparkThriftTransportProtocol} that the service accepts. */
export var KnownSparkThriftTransportProtocol;
(function (KnownSparkThriftTransportProtocol) {
    /** Binary */
    KnownSparkThriftTransportProtocol["Binary"] = "Binary";
    /** Sasl */
    KnownSparkThriftTransportProtocol["Sasl"] = "SASL";
    /** Http */
    KnownSparkThriftTransportProtocol["Http"] = "HTTP ";
})(KnownSparkThriftTransportProtocol || (KnownSparkThriftTransportProtocol = {}));
/** Known values of {@link SparkAuthenticationType} that the service accepts. */
export var KnownSparkAuthenticationType;
(function (KnownSparkAuthenticationType) {
    /** Anonymous */
    KnownSparkAuthenticationType["Anonymous"] = "Anonymous";
    /** Username */
    KnownSparkAuthenticationType["Username"] = "Username";
    /** UsernameAndPassword */
    KnownSparkAuthenticationType["UsernameAndPassword"] = "UsernameAndPassword";
    /** WindowsAzureHDInsightService */
    KnownSparkAuthenticationType["WindowsAzureHDInsightService"] = "WindowsAzureHDInsightService";
})(KnownSparkAuthenticationType || (KnownSparkAuthenticationType = {}));
/** Known values of {@link GoogleAdWordsAuthenticationType} that the service accepts. */
export var KnownGoogleAdWordsAuthenticationType;
(function (KnownGoogleAdWordsAuthenticationType) {
    /** ServiceAuthentication */
    KnownGoogleAdWordsAuthenticationType["ServiceAuthentication"] = "ServiceAuthentication";
    /** UserAuthentication */
    KnownGoogleAdWordsAuthenticationType["UserAuthentication"] = "UserAuthentication";
})(KnownGoogleAdWordsAuthenticationType || (KnownGoogleAdWordsAuthenticationType = {}));
/** Known values of {@link SnowflakeAuthenticationType} that the service accepts. */
export var KnownSnowflakeAuthenticationType;
(function (KnownSnowflakeAuthenticationType) {
    /** Basic */
    KnownSnowflakeAuthenticationType["Basic"] = "Basic";
    /** KeyPair */
    KnownSnowflakeAuthenticationType["KeyPair"] = "KeyPair";
    /** AADServicePrincipal */
    KnownSnowflakeAuthenticationType["AADServicePrincipal"] = "AADServicePrincipal";
})(KnownSnowflakeAuthenticationType || (KnownSnowflakeAuthenticationType = {}));
/** Known values of {@link ServiceNowV2AuthenticationType} that the service accepts. */
export var KnownServiceNowV2AuthenticationType;
(function (KnownServiceNowV2AuthenticationType) {
    /** Basic */
    KnownServiceNowV2AuthenticationType["Basic"] = "Basic";
    /** OAuth2 */
    KnownServiceNowV2AuthenticationType["OAuth2"] = "OAuth2";
})(KnownServiceNowV2AuthenticationType || (KnownServiceNowV2AuthenticationType = {}));
/** Known values of {@link OraclePartitionOption} that the service accepts. */
export var KnownOraclePartitionOption;
(function (KnownOraclePartitionOption) {
    /** None */
    KnownOraclePartitionOption["None"] = "None";
    /** PhysicalPartitionsOfTable */
    KnownOraclePartitionOption["PhysicalPartitionsOfTable"] = "PhysicalPartitionsOfTable";
    /** DynamicRange */
    KnownOraclePartitionOption["DynamicRange"] = "DynamicRange";
})(KnownOraclePartitionOption || (KnownOraclePartitionOption = {}));
/** Known values of {@link TeradataPartitionOption} that the service accepts. */
export var KnownTeradataPartitionOption;
(function (KnownTeradataPartitionOption) {
    /** None */
    KnownTeradataPartitionOption["None"] = "None";
    /** Hash */
    KnownTeradataPartitionOption["Hash"] = "Hash";
    /** DynamicRange */
    KnownTeradataPartitionOption["DynamicRange"] = "DynamicRange";
})(KnownTeradataPartitionOption || (KnownTeradataPartitionOption = {}));
/** Known values of {@link CassandraSourceReadConsistencyLevels} that the service accepts. */
export var KnownCassandraSourceReadConsistencyLevels;
(function (KnownCassandraSourceReadConsistencyLevels) {
    /** ALL */
    KnownCassandraSourceReadConsistencyLevels["ALL"] = "ALL";
    /** EachQuorum */
    KnownCassandraSourceReadConsistencyLevels["EachQuorum"] = "EACH_QUORUM";
    /** Quorum */
    KnownCassandraSourceReadConsistencyLevels["Quorum"] = "QUORUM";
    /** LocalQuorum */
    KnownCassandraSourceReadConsistencyLevels["LocalQuorum"] = "LOCAL_QUORUM";
    /** ONE */
    KnownCassandraSourceReadConsistencyLevels["ONE"] = "ONE";
    /** TWO */
    KnownCassandraSourceReadConsistencyLevels["TWO"] = "TWO";
    /** Three */
    KnownCassandraSourceReadConsistencyLevels["Three"] = "THREE";
    /** LocalONE */
    KnownCassandraSourceReadConsistencyLevels["LocalONE"] = "LOCAL_ONE";
    /** Serial */
    KnownCassandraSourceReadConsistencyLevels["Serial"] = "SERIAL";
    /** LocalSerial */
    KnownCassandraSourceReadConsistencyLevels["LocalSerial"] = "LOCAL_SERIAL";
})(KnownCassandraSourceReadConsistencyLevels || (KnownCassandraSourceReadConsistencyLevels = {}));
/** Known values of {@link NetezzaPartitionOption} that the service accepts. */
export var KnownNetezzaPartitionOption;
(function (KnownNetezzaPartitionOption) {
    /** None */
    KnownNetezzaPartitionOption["None"] = "None";
    /** DataSlice */
    KnownNetezzaPartitionOption["DataSlice"] = "DataSlice";
    /** DynamicRange */
    KnownNetezzaPartitionOption["DynamicRange"] = "DynamicRange";
})(KnownNetezzaPartitionOption || (KnownNetezzaPartitionOption = {}));
/** Known values of {@link StoredProcedureParameterType} that the service accepts. */
export var KnownStoredProcedureParameterType;
(function (KnownStoredProcedureParameterType) {
    /** String */
    KnownStoredProcedureParameterType["String"] = "String";
    /** Int */
    KnownStoredProcedureParameterType["Int"] = "Int";
    /** Int64 */
    KnownStoredProcedureParameterType["Int64"] = "Int64";
    /** Decimal */
    KnownStoredProcedureParameterType["Decimal"] = "Decimal";
    /** Guid */
    KnownStoredProcedureParameterType["Guid"] = "Guid";
    /** Boolean */
    KnownStoredProcedureParameterType["Boolean"] = "Boolean";
    /** Date */
    KnownStoredProcedureParameterType["Date"] = "Date";
})(KnownStoredProcedureParameterType || (KnownStoredProcedureParameterType = {}));
/** Known values of {@link NotebookParameterType} that the service accepts. */
export var KnownNotebookParameterType;
(function (KnownNotebookParameterType) {
    /** String */
    KnownNotebookParameterType["String"] = "string";
    /** Int */
    KnownNotebookParameterType["Int"] = "int";
    /** Float */
    KnownNotebookParameterType["Float"] = "float";
    /** Bool */
    KnownNotebookParameterType["Bool"] = "bool";
})(KnownNotebookParameterType || (KnownNotebookParameterType = {}));
/** Known values of {@link SapCloudForCustomerSinkWriteBehavior} that the service accepts. */
export var KnownSapCloudForCustomerSinkWriteBehavior;
(function (KnownSapCloudForCustomerSinkWriteBehavior) {
    /** Insert */
    KnownSapCloudForCustomerSinkWriteBehavior["Insert"] = "Insert";
    /** Update */
    KnownSapCloudForCustomerSinkWriteBehavior["Update"] = "Update";
})(KnownSapCloudForCustomerSinkWriteBehavior || (KnownSapCloudForCustomerSinkWriteBehavior = {}));
/** Known values of {@link PolybaseSettingsRejectType} that the service accepts. */
export var KnownPolybaseSettingsRejectType;
(function (KnownPolybaseSettingsRejectType) {
    /** Value */
    KnownPolybaseSettingsRejectType["Value"] = "value";
    /** Percentage */
    KnownPolybaseSettingsRejectType["Percentage"] = "percentage";
})(KnownPolybaseSettingsRejectType || (KnownPolybaseSettingsRejectType = {}));
/** Known values of {@link AzureSearchIndexWriteBehaviorType} that the service accepts. */
export var KnownAzureSearchIndexWriteBehaviorType;
(function (KnownAzureSearchIndexWriteBehaviorType) {
    /** Merge */
    KnownAzureSearchIndexWriteBehaviorType["Merge"] = "Merge";
    /** Upload */
    KnownAzureSearchIndexWriteBehaviorType["Upload"] = "Upload";
})(KnownAzureSearchIndexWriteBehaviorType || (KnownAzureSearchIndexWriteBehaviorType = {}));
/** Known values of {@link DynamicsSinkWriteBehavior} that the service accepts. */
export var KnownDynamicsSinkWriteBehavior;
(function (KnownDynamicsSinkWriteBehavior) {
    /** Upsert */
    KnownDynamicsSinkWriteBehavior["Upsert"] = "Upsert";
})(KnownDynamicsSinkWriteBehavior || (KnownDynamicsSinkWriteBehavior = {}));
/** Known values of {@link SalesforceSinkWriteBehavior} that the service accepts. */
export var KnownSalesforceSinkWriteBehavior;
(function (KnownSalesforceSinkWriteBehavior) {
    /** Insert */
    KnownSalesforceSinkWriteBehavior["Insert"] = "Insert";
    /** Upsert */
    KnownSalesforceSinkWriteBehavior["Upsert"] = "Upsert";
})(KnownSalesforceSinkWriteBehavior || (KnownSalesforceSinkWriteBehavior = {}));
/** Known values of {@link HDInsightActivityDebugInfoOption} that the service accepts. */
export var KnownHDInsightActivityDebugInfoOption;
(function (KnownHDInsightActivityDebugInfoOption) {
    /** None */
    KnownHDInsightActivityDebugInfoOption["None"] = "None";
    /** Always */
    KnownHDInsightActivityDebugInfoOption["Always"] = "Always";
    /** Failure */
    KnownHDInsightActivityDebugInfoOption["Failure"] = "Failure";
})(KnownHDInsightActivityDebugInfoOption || (KnownHDInsightActivityDebugInfoOption = {}));
/** Known values of {@link SsisPackageLocationType} that the service accepts. */
export var KnownSsisPackageLocationType;
(function (KnownSsisPackageLocationType) {
    /** Ssisdb */
    KnownSsisPackageLocationType["Ssisdb"] = "SSISDB";
    /** File */
    KnownSsisPackageLocationType["File"] = "File";
    /** InlinePackage */
    KnownSsisPackageLocationType["InlinePackage"] = "InlinePackage";
    /** PackageStore */
    KnownSsisPackageLocationType["PackageStore"] = "PackageStore";
})(KnownSsisPackageLocationType || (KnownSsisPackageLocationType = {}));
/** Known values of {@link SsisLogLocationType} that the service accepts. */
export var KnownSsisLogLocationType;
(function (KnownSsisLogLocationType) {
    /** File */
    KnownSsisLogLocationType["File"] = "File";
})(KnownSsisLogLocationType || (KnownSsisLogLocationType = {}));
/** Known values of {@link WebActivityMethod} that the service accepts. */
export var KnownWebActivityMethod;
(function (KnownWebActivityMethod) {
    /** GET */
    KnownWebActivityMethod["GET"] = "GET";
    /** Post */
    KnownWebActivityMethod["Post"] = "POST";
    /** PUT */
    KnownWebActivityMethod["PUT"] = "PUT";
    /** Delete */
    KnownWebActivityMethod["Delete"] = "DELETE";
})(KnownWebActivityMethod || (KnownWebActivityMethod = {}));
/** Known values of {@link AzureFunctionActivityMethod} that the service accepts. */
export var KnownAzureFunctionActivityMethod;
(function (KnownAzureFunctionActivityMethod) {
    /** GET */
    KnownAzureFunctionActivityMethod["GET"] = "GET";
    /** Post */
    KnownAzureFunctionActivityMethod["Post"] = "POST";
    /** PUT */
    KnownAzureFunctionActivityMethod["PUT"] = "PUT";
    /** Delete */
    KnownAzureFunctionActivityMethod["Delete"] = "DELETE";
    /** Options */
    KnownAzureFunctionActivityMethod["Options"] = "OPTIONS";
    /** Head */
    KnownAzureFunctionActivityMethod["Head"] = "HEAD";
    /** Trace */
    KnownAzureFunctionActivityMethod["Trace"] = "TRACE";
})(KnownAzureFunctionActivityMethod || (KnownAzureFunctionActivityMethod = {}));
/** Known values of {@link WebHookActivityMethod} that the service accepts. */
export var KnownWebHookActivityMethod;
(function (KnownWebHookActivityMethod) {
    /** Post */
    KnownWebHookActivityMethod["Post"] = "POST";
})(KnownWebHookActivityMethod || (KnownWebHookActivityMethod = {}));
/** Known values of {@link ScriptActivityParameterType} that the service accepts. */
export var KnownScriptActivityParameterType;
(function (KnownScriptActivityParameterType) {
    /** Boolean */
    KnownScriptActivityParameterType["Boolean"] = "Boolean";
    /** DateTime */
    KnownScriptActivityParameterType["DateTime"] = "DateTime";
    /** DateTimeOffset */
    KnownScriptActivityParameterType["DateTimeOffset"] = "DateTimeOffset";
    /** Decimal */
    KnownScriptActivityParameterType["Decimal"] = "Decimal";
    /** Double */
    KnownScriptActivityParameterType["Double"] = "Double";
    /** Guid */
    KnownScriptActivityParameterType["Guid"] = "Guid";
    /** Int16 */
    KnownScriptActivityParameterType["Int16"] = "Int16";
    /** Int32 */
    KnownScriptActivityParameterType["Int32"] = "Int32";
    /** Int64 */
    KnownScriptActivityParameterType["Int64"] = "Int64";
    /** Single */
    KnownScriptActivityParameterType["Single"] = "Single";
    /** String */
    KnownScriptActivityParameterType["String"] = "String";
    /** Timespan */
    KnownScriptActivityParameterType["Timespan"] = "Timespan";
})(KnownScriptActivityParameterType || (KnownScriptActivityParameterType = {}));
/** Known values of {@link ScriptActivityParameterDirection} that the service accepts. */
export var KnownScriptActivityParameterDirection;
(function (KnownScriptActivityParameterDirection) {
    /** Input */
    KnownScriptActivityParameterDirection["Input"] = "Input";
    /** Output */
    KnownScriptActivityParameterDirection["Output"] = "Output";
    /** InputOutput */
    KnownScriptActivityParameterDirection["InputOutput"] = "InputOutput";
})(KnownScriptActivityParameterDirection || (KnownScriptActivityParameterDirection = {}));
/** Known values of {@link ScriptActivityLogDestination} that the service accepts. */
export var KnownScriptActivityLogDestination;
(function (KnownScriptActivityLogDestination) {
    /** ActivityOutput */
    KnownScriptActivityLogDestination["ActivityOutput"] = "ActivityOutput";
    /** ExternalStore */
    KnownScriptActivityLogDestination["ExternalStore"] = "ExternalStore";
})(KnownScriptActivityLogDestination || (KnownScriptActivityLogDestination = {}));
/** Known values of {@link ConfigurationType} that the service accepts. */
export var KnownConfigurationType;
(function (KnownConfigurationType) {
    /** Default */
    KnownConfigurationType["Default"] = "Default";
    /** Customized */
    KnownConfigurationType["Customized"] = "Customized";
    /** Artifact */
    KnownConfigurationType["Artifact"] = "Artifact";
})(KnownConfigurationType || (KnownConfigurationType = {}));
/** Known values of {@link SalesforceV2SinkWriteBehavior} that the service accepts. */
export var KnownSalesforceV2SinkWriteBehavior;
(function (KnownSalesforceV2SinkWriteBehavior) {
    /** Insert */
    KnownSalesforceV2SinkWriteBehavior["Insert"] = "Insert";
    /** Upsert */
    KnownSalesforceV2SinkWriteBehavior["Upsert"] = "Upsert";
})(KnownSalesforceV2SinkWriteBehavior || (KnownSalesforceV2SinkWriteBehavior = {}));
/** Known values of {@link ExpressionV2Type} that the service accepts. */
export var KnownExpressionV2Type;
(function (KnownExpressionV2Type) {
    /** Constant */
    KnownExpressionV2Type["Constant"] = "Constant";
    /** Field */
    KnownExpressionV2Type["Field"] = "Field";
    /** Unary */
    KnownExpressionV2Type["Unary"] = "Unary";
    /** Binary */
    KnownExpressionV2Type["Binary"] = "Binary";
    /** NAry */
    KnownExpressionV2Type["NAry"] = "NAry";
})(KnownExpressionV2Type || (KnownExpressionV2Type = {}));
/** Known values of {@link RecurrenceFrequency} that the service accepts. */
export var KnownRecurrenceFrequency;
(function (KnownRecurrenceFrequency) {
    /** NotSpecified */
    KnownRecurrenceFrequency["NotSpecified"] = "NotSpecified";
    /** Minute */
    KnownRecurrenceFrequency["Minute"] = "Minute";
    /** Hour */
    KnownRecurrenceFrequency["Hour"] = "Hour";
    /** Day */
    KnownRecurrenceFrequency["Day"] = "Day";
    /** Week */
    KnownRecurrenceFrequency["Week"] = "Week";
    /** Month */
    KnownRecurrenceFrequency["Month"] = "Month";
    /** Year */
    KnownRecurrenceFrequency["Year"] = "Year";
})(KnownRecurrenceFrequency || (KnownRecurrenceFrequency = {}));
/** Known values of {@link BlobEventType} that the service accepts. */
export var KnownBlobEventType;
(function (KnownBlobEventType) {
    /** MicrosoftStorageBlobCreated */
    KnownBlobEventType["MicrosoftStorageBlobCreated"] = "Microsoft.Storage.BlobCreated";
    /** MicrosoftStorageBlobDeleted */
    KnownBlobEventType["MicrosoftStorageBlobDeleted"] = "Microsoft.Storage.BlobDeleted";
})(KnownBlobEventType || (KnownBlobEventType = {}));
/** Known values of {@link TumblingWindowFrequency} that the service accepts. */
export var KnownTumblingWindowFrequency;
(function (KnownTumblingWindowFrequency) {
    /** Minute */
    KnownTumblingWindowFrequency["Minute"] = "Minute";
    /** Hour */
    KnownTumblingWindowFrequency["Hour"] = "Hour";
    /** Month */
    KnownTumblingWindowFrequency["Month"] = "Month";
})(KnownTumblingWindowFrequency || (KnownTumblingWindowFrequency = {}));
/** Known values of {@link TriggerReferenceType} that the service accepts. */
export var KnownTriggerReferenceType;
(function (KnownTriggerReferenceType) {
    /** TriggerReference */
    KnownTriggerReferenceType["TriggerReference"] = "TriggerReference";
})(KnownTriggerReferenceType || (KnownTriggerReferenceType = {}));
/** Known values of {@link IntegrationRuntimeState} that the service accepts. */
export var KnownIntegrationRuntimeState;
(function (KnownIntegrationRuntimeState) {
    /** Initial */
    KnownIntegrationRuntimeState["Initial"] = "Initial";
    /** Stopped */
    KnownIntegrationRuntimeState["Stopped"] = "Stopped";
    /** Started */
    KnownIntegrationRuntimeState["Started"] = "Started";
    /** Starting */
    KnownIntegrationRuntimeState["Starting"] = "Starting";
    /** Stopping */
    KnownIntegrationRuntimeState["Stopping"] = "Stopping";
    /** NeedRegistration */
    KnownIntegrationRuntimeState["NeedRegistration"] = "NeedRegistration";
    /** Online */
    KnownIntegrationRuntimeState["Online"] = "Online";
    /** Limited */
    KnownIntegrationRuntimeState["Limited"] = "Limited";
    /** Offline */
    KnownIntegrationRuntimeState["Offline"] = "Offline";
    /** AccessDenied */
    KnownIntegrationRuntimeState["AccessDenied"] = "AccessDenied";
})(KnownIntegrationRuntimeState || (KnownIntegrationRuntimeState = {}));
/** Known values of {@link DataFlowComputeType} that the service accepts. */
export var KnownDataFlowComputeType;
(function (KnownDataFlowComputeType) {
    /** General */
    KnownDataFlowComputeType["General"] = "General";
    /** MemoryOptimized */
    KnownDataFlowComputeType["MemoryOptimized"] = "MemoryOptimized";
    /** ComputeOptimized */
    KnownDataFlowComputeType["ComputeOptimized"] = "ComputeOptimized";
})(KnownDataFlowComputeType || (KnownDataFlowComputeType = {}));
/** Known values of {@link IntegrationRuntimeSsisCatalogPricingTier} that the service accepts. */
export var KnownIntegrationRuntimeSsisCatalogPricingTier;
(function (KnownIntegrationRuntimeSsisCatalogPricingTier) {
    /** Basic */
    KnownIntegrationRuntimeSsisCatalogPricingTier["Basic"] = "Basic";
    /** Standard */
    KnownIntegrationRuntimeSsisCatalogPricingTier["Standard"] = "Standard";
    /** Premium */
    KnownIntegrationRuntimeSsisCatalogPricingTier["Premium"] = "Premium";
    /** PremiumRS */
    KnownIntegrationRuntimeSsisCatalogPricingTier["PremiumRS"] = "PremiumRS";
})(KnownIntegrationRuntimeSsisCatalogPricingTier || (KnownIntegrationRuntimeSsisCatalogPricingTier = {}));
/** Known values of {@link IntegrationRuntimeLicenseType} that the service accepts. */
export var KnownIntegrationRuntimeLicenseType;
(function (KnownIntegrationRuntimeLicenseType) {
    /** BasePrice */
    KnownIntegrationRuntimeLicenseType["BasePrice"] = "BasePrice";
    /** LicenseIncluded */
    KnownIntegrationRuntimeLicenseType["LicenseIncluded"] = "LicenseIncluded";
})(KnownIntegrationRuntimeLicenseType || (KnownIntegrationRuntimeLicenseType = {}));
/** Known values of {@link IntegrationRuntimeEntityReferenceType} that the service accepts. */
export var KnownIntegrationRuntimeEntityReferenceType;
(function (KnownIntegrationRuntimeEntityReferenceType) {
    /** IntegrationRuntimeReference */
    KnownIntegrationRuntimeEntityReferenceType["IntegrationRuntimeReference"] = "IntegrationRuntimeReference";
    /** LinkedServiceReference */
    KnownIntegrationRuntimeEntityReferenceType["LinkedServiceReference"] = "LinkedServiceReference";
})(KnownIntegrationRuntimeEntityReferenceType || (KnownIntegrationRuntimeEntityReferenceType = {}));
/** Known values of {@link IntegrationRuntimeEdition} that the service accepts. */
export var KnownIntegrationRuntimeEdition;
(function (KnownIntegrationRuntimeEdition) {
    /** Standard */
    KnownIntegrationRuntimeEdition["Standard"] = "Standard";
    /** Enterprise */
    KnownIntegrationRuntimeEdition["Enterprise"] = "Enterprise";
})(KnownIntegrationRuntimeEdition || (KnownIntegrationRuntimeEdition = {}));
/** Known values of {@link JsonFormatFilePattern} that the service accepts. */
export var KnownJsonFormatFilePattern;
(function (KnownJsonFormatFilePattern) {
    /** SetOfObjects */
    KnownJsonFormatFilePattern["SetOfObjects"] = "setOfObjects";
    /** ArrayOfObjects */
    KnownJsonFormatFilePattern["ArrayOfObjects"] = "arrayOfObjects";
})(KnownJsonFormatFilePattern || (KnownJsonFormatFilePattern = {}));
/** Known values of {@link DatasetCompressionLevel} that the service accepts. */
export var KnownDatasetCompressionLevel;
(function (KnownDatasetCompressionLevel) {
    /** Optimal */
    KnownDatasetCompressionLevel["Optimal"] = "Optimal";
    /** Fastest */
    KnownDatasetCompressionLevel["Fastest"] = "Fastest";
})(KnownDatasetCompressionLevel || (KnownDatasetCompressionLevel = {}));
/** Known values of {@link AvroCompressionCodec} that the service accepts. */
export var KnownAvroCompressionCodec;
(function (KnownAvroCompressionCodec) {
    /** None */
    KnownAvroCompressionCodec["None"] = "none";
    /** Deflate */
    KnownAvroCompressionCodec["Deflate"] = "deflate";
    /** Snappy */
    KnownAvroCompressionCodec["Snappy"] = "snappy";
    /** Xz */
    KnownAvroCompressionCodec["Xz"] = "xz";
    /** Bzip2 */
    KnownAvroCompressionCodec["Bzip2"] = "bzip2";
})(KnownAvroCompressionCodec || (KnownAvroCompressionCodec = {}));
/** Known values of {@link ParquetCompressionCodecEnum} that the service accepts. */
export var KnownParquetCompressionCodecEnum;
(function (KnownParquetCompressionCodecEnum) {
    /** None */
    KnownParquetCompressionCodecEnum["None"] = "none";
    /** Gzip */
    KnownParquetCompressionCodecEnum["Gzip"] = "gzip";
    /** Snappy */
    KnownParquetCompressionCodecEnum["Snappy"] = "snappy";
    /** Lzo */
    KnownParquetCompressionCodecEnum["Lzo"] = "lzo";
})(KnownParquetCompressionCodecEnum || (KnownParquetCompressionCodecEnum = {}));
/** Known values of {@link CompressionCodec} that the service accepts. */
export var KnownCompressionCodec;
(function (KnownCompressionCodec) {
    /** None */
    KnownCompressionCodec["None"] = "none";
    /** Lzo */
    KnownCompressionCodec["Lzo"] = "lzo";
    /** Bzip2 */
    KnownCompressionCodec["Bzip2"] = "bzip2";
    /** Gzip */
    KnownCompressionCodec["Gzip"] = "gzip";
    /** Deflate */
    KnownCompressionCodec["Deflate"] = "deflate";
    /** ZipDeflate */
    KnownCompressionCodec["ZipDeflate"] = "zipDeflate";
    /** Snappy */
    KnownCompressionCodec["Snappy"] = "snappy";
    /** Lz4 */
    KnownCompressionCodec["Lz4"] = "lz4";
    /** Tar */
    KnownCompressionCodec["Tar"] = "tar";
    /** TarGZip */
    KnownCompressionCodec["TarGZip"] = "tarGZip";
})(KnownCompressionCodec || (KnownCompressionCodec = {}));
/** Known values of {@link OrcCompressionCodec} that the service accepts. */
export var KnownOrcCompressionCodec;
(function (KnownOrcCompressionCodec) {
    /** None */
    KnownOrcCompressionCodec["None"] = "none";
    /** Zlib */
    KnownOrcCompressionCodec["Zlib"] = "zlib";
    /** Snappy */
    KnownOrcCompressionCodec["Snappy"] = "snappy";
    /** Lzo */
    KnownOrcCompressionCodec["Lzo"] = "lzo";
})(KnownOrcCompressionCodec || (KnownOrcCompressionCodec = {}));
/** Known values of {@link DynamicsDeploymentType} that the service accepts. */
export var KnownDynamicsDeploymentType;
(function (KnownDynamicsDeploymentType) {
    /** Online */
    KnownDynamicsDeploymentType["Online"] = "Online";
    /** OnPremisesWithIfd */
    KnownDynamicsDeploymentType["OnPremisesWithIfd"] = "OnPremisesWithIfd";
})(KnownDynamicsDeploymentType || (KnownDynamicsDeploymentType = {}));
/** Known values of {@link DynamicsAuthenticationType} that the service accepts. */
export var KnownDynamicsAuthenticationType;
(function (KnownDynamicsAuthenticationType) {
    /** Office365 */
    KnownDynamicsAuthenticationType["Office365"] = "Office365";
    /** Ifd */
    KnownDynamicsAuthenticationType["Ifd"] = "Ifd";
    /** AADServicePrincipal */
    KnownDynamicsAuthenticationType["AADServicePrincipal"] = "AADServicePrincipal";
    /** ActiveDirectory */
    KnownDynamicsAuthenticationType["ActiveDirectory"] = "Active Directory";
})(KnownDynamicsAuthenticationType || (KnownDynamicsAuthenticationType = {}));
/** Known values of {@link DynamicsServicePrincipalCredentialType} that the service accepts. */
export var KnownDynamicsServicePrincipalCredentialType;
(function (KnownDynamicsServicePrincipalCredentialType) {
    /** ServicePrincipalKey */
    KnownDynamicsServicePrincipalCredentialType["ServicePrincipalKey"] = "ServicePrincipalKey";
    /** ServicePrincipalCert */
    KnownDynamicsServicePrincipalCredentialType["ServicePrincipalCert"] = "ServicePrincipalCert";
})(KnownDynamicsServicePrincipalCredentialType || (KnownDynamicsServicePrincipalCredentialType = {}));
/** Known values of {@link HdiNodeTypes} that the service accepts. */
export var KnownHdiNodeTypes;
(function (KnownHdiNodeTypes) {
    /** Headnode */
    KnownHdiNodeTypes["Headnode"] = "Headnode";
    /** Workernode */
    KnownHdiNodeTypes["Workernode"] = "Workernode";
    /** Zookeeper */
    KnownHdiNodeTypes["Zookeeper"] = "Zookeeper";
})(KnownHdiNodeTypes || (KnownHdiNodeTypes = {}));
/** Known values of {@link JsonWriteFilePattern} that the service accepts. */
export var KnownJsonWriteFilePattern;
(function (KnownJsonWriteFilePattern) {
    /** SetOfObjects */
    KnownJsonWriteFilePattern["SetOfObjects"] = "setOfObjects";
    /** ArrayOfObjects */
    KnownJsonWriteFilePattern["ArrayOfObjects"] = "arrayOfObjects";
})(KnownJsonWriteFilePattern || (KnownJsonWriteFilePattern = {}));
/** Known values of {@link SalesforceSourceReadBehavior} that the service accepts. */
export var KnownSalesforceSourceReadBehavior;
(function (KnownSalesforceSourceReadBehavior) {
    /** Query */
    KnownSalesforceSourceReadBehavior["Query"] = "Query";
    /** QueryAll */
    KnownSalesforceSourceReadBehavior["QueryAll"] = "QueryAll";
})(KnownSalesforceSourceReadBehavior || (KnownSalesforceSourceReadBehavior = {}));
/** Known values of {@link AmazonRdsForOraclePartitionOption} that the service accepts. */
export var KnownAmazonRdsForOraclePartitionOption;
(function (KnownAmazonRdsForOraclePartitionOption) {
    /** None */
    KnownAmazonRdsForOraclePartitionOption["None"] = "None";
    /** PhysicalPartitionsOfTable */
    KnownAmazonRdsForOraclePartitionOption["PhysicalPartitionsOfTable"] = "PhysicalPartitionsOfTable";
    /** DynamicRange */
    KnownAmazonRdsForOraclePartitionOption["DynamicRange"] = "DynamicRange";
})(KnownAmazonRdsForOraclePartitionOption || (KnownAmazonRdsForOraclePartitionOption = {}));
/** Known values of {@link CopyBehaviorType} that the service accepts. */
export var KnownCopyBehaviorType;
(function (KnownCopyBehaviorType) {
    /** PreserveHierarchy */
    KnownCopyBehaviorType["PreserveHierarchy"] = "PreserveHierarchy";
    /** FlattenHierarchy */
    KnownCopyBehaviorType["FlattenHierarchy"] = "FlattenHierarchy";
    /** MergeFiles */
    KnownCopyBehaviorType["MergeFiles"] = "MergeFiles";
})(KnownCopyBehaviorType || (KnownCopyBehaviorType = {}));
/** Known values of {@link ScriptType} that the service accepts. */
export var KnownScriptType;
(function (KnownScriptType) {
    /** Query */
    KnownScriptType["Query"] = "Query";
    /** NonQuery */
    KnownScriptType["NonQuery"] = "NonQuery";
})(KnownScriptType || (KnownScriptType = {}));
/** Known values of {@link SqlPartitionOption} that the service accepts. */
export var KnownSqlPartitionOption;
(function (KnownSqlPartitionOption) {
    /** None */
    KnownSqlPartitionOption["None"] = "None";
    /** PhysicalPartitionsOfTable */
    KnownSqlPartitionOption["PhysicalPartitionsOfTable"] = "PhysicalPartitionsOfTable";
    /** DynamicRange */
    KnownSqlPartitionOption["DynamicRange"] = "DynamicRange";
})(KnownSqlPartitionOption || (KnownSqlPartitionOption = {}));
/** Known values of {@link SapHanaPartitionOption} that the service accepts. */
export var KnownSapHanaPartitionOption;
(function (KnownSapHanaPartitionOption) {
    /** None */
    KnownSapHanaPartitionOption["None"] = "None";
    /** PhysicalPartitionsOfTable */
    KnownSapHanaPartitionOption["PhysicalPartitionsOfTable"] = "PhysicalPartitionsOfTable";
    /** SapHanaDynamicRange */
    KnownSapHanaPartitionOption["SapHanaDynamicRange"] = "SapHanaDynamicRange";
})(KnownSapHanaPartitionOption || (KnownSapHanaPartitionOption = {}));
/** Known values of {@link SapTablePartitionOption} that the service accepts. */
export var KnownSapTablePartitionOption;
(function (KnownSapTablePartitionOption) {
    /** None */
    KnownSapTablePartitionOption["None"] = "None";
    /** PartitionOnInt */
    KnownSapTablePartitionOption["PartitionOnInt"] = "PartitionOnInt";
    /** PartitionOnCalendarYear */
    KnownSapTablePartitionOption["PartitionOnCalendarYear"] = "PartitionOnCalendarYear";
    /** PartitionOnCalendarMonth */
    KnownSapTablePartitionOption["PartitionOnCalendarMonth"] = "PartitionOnCalendarMonth";
    /** PartitionOnCalendarDate */
    KnownSapTablePartitionOption["PartitionOnCalendarDate"] = "PartitionOnCalendarDate";
    /** PartitionOnTime */
    KnownSapTablePartitionOption["PartitionOnTime"] = "PartitionOnTime";
})(KnownSapTablePartitionOption || (KnownSapTablePartitionOption = {}));
//# sourceMappingURL=index.js.map