{"version":3,"file":"dataFlowOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/dataFlowOperations.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport type { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport type {\n  DataFlowResource,\n  DataFlowGetDataFlowsByWorkspaceOptionalParams,\n  DataFlowCreateOrUpdateDataFlowOptionalParams,\n  DataFlowCreateOrUpdateDataFlowResponse,\n  DataFlowGetDataFlowOptionalParams,\n  DataFlowGetDataFlowResponse,\n  DataFlowDeleteDataFlowOptionalParams,\n  ArtifactRenameRequest,\n  DataFlowRenameDataFlowOptionalParams,\n} from \"../models/index.js\";\n\n/** Interface representing a DataFlowOperations. */\nexport interface DataFlowOperations {\n  /**\n   * Lists data flows.\n   * @param options - The options parameters.\n   */\n  listDataFlowsByWorkspace(\n    options?: DataFlowGetDataFlowsByWorkspaceOptionalParams,\n  ): PagedAsyncIterableIterator<DataFlowResource>;\n  /**\n   * Creates or updates a data flow.\n   * @param dataFlowName - The data flow name.\n   * @param dataFlow - Data flow resource definition.\n   * @param options - The options parameters.\n   */\n  beginCreateOrUpdateDataFlow(\n    dataFlowName: string,\n    dataFlow: DataFlowResource,\n    options?: DataFlowCreateOrUpdateDataFlowOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DataFlowCreateOrUpdateDataFlowResponse>,\n      DataFlowCreateOrUpdateDataFlowResponse\n    >\n  >;\n  /**\n   * Creates or updates a data flow.\n   * @param dataFlowName - The data flow name.\n   * @param dataFlow - Data flow resource definition.\n   * @param options - The options parameters.\n   */\n  beginCreateOrUpdateDataFlowAndWait(\n    dataFlowName: string,\n    dataFlow: DataFlowResource,\n    options?: DataFlowCreateOrUpdateDataFlowOptionalParams,\n  ): Promise<DataFlowCreateOrUpdateDataFlowResponse>;\n  /**\n   * Gets a data flow.\n   * @param dataFlowName - The data flow name.\n   * @param options - The options parameters.\n   */\n  getDataFlow(\n    dataFlowName: string,\n    options?: DataFlowGetDataFlowOptionalParams,\n  ): Promise<DataFlowGetDataFlowResponse>;\n  /**\n   * Deletes a data flow.\n   * @param dataFlowName - The data flow name.\n   * @param options - The options parameters.\n   */\n  beginDeleteDataFlow(\n    dataFlowName: string,\n    options?: DataFlowDeleteDataFlowOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a data flow.\n   * @param dataFlowName - The data flow name.\n   * @param options - The options parameters.\n   */\n  beginDeleteDataFlowAndWait(\n    dataFlowName: string,\n    options?: DataFlowDeleteDataFlowOptionalParams,\n  ): Promise<void>;\n  /**\n   * Renames a dataflow.\n   * @param dataFlowName - The data flow name.\n   * @param request - proposed new name.\n   * @param options - The options parameters.\n   */\n  beginRenameDataFlow(\n    dataFlowName: string,\n    request: ArtifactRenameRequest,\n    options?: DataFlowRenameDataFlowOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Renames a dataflow.\n   * @param dataFlowName - The data flow name.\n   * @param request - proposed new name.\n   * @param options - The options parameters.\n   */\n  beginRenameDataFlowAndWait(\n    dataFlowName: string,\n    request: ArtifactRenameRequest,\n    options?: DataFlowRenameDataFlowOptionalParams,\n  ): Promise<void>;\n}\n"]}