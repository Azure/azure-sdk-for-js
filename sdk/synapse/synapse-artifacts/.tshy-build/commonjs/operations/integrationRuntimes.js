"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntegrationRuntimesImpl = void 0;
const tslib_1 = require("tslib");
const tracing_js_1 = require("../tracing.js");
const coreClient = tslib_1.__importStar(require("@azure/core-client"));
const Mappers = tslib_1.__importStar(require("../models/mappers.js"));
const Parameters = tslib_1.__importStar(require("../models/parameters.js"));
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const listOperationSpec = {
    path: "/integrationRuntimes",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.IntegrationRuntimeListResponse,
        },
        default: {
            bodyMapper: Mappers.ErrorContract,
        },
    },
    queryParameters: [Parameters.apiVersion5],
    urlParameters: [Parameters.endpoint],
    headerParameters: [Parameters.accept],
    serializer,
};
const getOperationSpec = {
    path: "/integrationRuntimes/{integrationRuntimeName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.IntegrationRuntimeResource,
        },
        default: {
            bodyMapper: Mappers.ErrorContract,
        },
    },
    queryParameters: [Parameters.apiVersion5],
    urlParameters: [Parameters.endpoint, Parameters.integrationRuntimeName],
    headerParameters: [Parameters.accept],
    serializer,
};
/** Class containing IntegrationRuntimes operations. */
class IntegrationRuntimesImpl {
    /**
     * Initialize a new instance of the class IntegrationRuntimes class.
     * @param client - Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * List Integration Runtimes
     * @param options - The options parameters.
     */
    async list(options) {
        return tracing_js_1.tracingClient.withSpan("ArtifactsClient.list", options !== null && options !== void 0 ? options : {}, async (updatedOptions) => {
            return this.client.sendOperationRequest({ updatedOptions }, listOperationSpec);
        });
    }
    /**
     * Get Integration Runtime
     * @param integrationRuntimeName - The Integration Runtime name
     * @param options - The options parameters.
     */
    async get(integrationRuntimeName, options) {
        return tracing_js_1.tracingClient.withSpan("ArtifactsClient.get", options !== null && options !== void 0 ? options : {}, async (updatedOptions) => {
            return this.client.sendOperationRequest({ integrationRuntimeName, updatedOptions }, getOperationSpec);
        });
    }
}
exports.IntegrationRuntimesImpl = IntegrationRuntimesImpl;
//# sourceMappingURL=integrationRuntimes.js.map