{"version":3,"file":"linkConnectionOperations.js","sourceRoot":"","sources":["../../../src/operations/linkConnectionOperations.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport type { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport type { LinkConnectionOperations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport type { ArtifactsClient } from \"../artifactsClient.js\";\nimport type {\n  LinkConnectionResource,\n  LinkConnectionListByWorkspaceNextOptionalParams,\n  LinkConnectionListByWorkspaceOptionalParams,\n  LinkConnectionListByWorkspaceResponse,\n  LinkConnectionCreateOrUpdateOptionalParams,\n  LinkConnectionCreateOrUpdateResponse,\n  LinkConnectionGetOptionalParams,\n  LinkConnectionGetResponse,\n  LinkConnectionDeleteOptionalParams,\n  EditTablesRequest,\n  LinkConnectionEditTablesOptionalParams,\n  LinkConnectionStartOptionalParams,\n  LinkConnectionStopOptionalParams,\n  LinkConnectionGetDetailedStatusOptionalParams,\n  LinkConnectionGetDetailedStatusResponse,\n  LinkConnectionListLinkTablesOptionalParams,\n  LinkConnectionListLinkTablesResponse,\n  QueryTableStatusRequest,\n  LinkConnectionQueryTableStatusOptionalParams,\n  LinkConnectionQueryTableStatusResponse,\n  UpdateLandingZoneCredential,\n  LinkConnectionUpdateLandingZoneCredentialOptionalParams,\n  LinkConnectionPauseOptionalParams,\n  LinkConnectionResumeOptionalParams,\n  LinkConnectionListByWorkspaceNextResponse,\n} from \"../models/index.js\";\n\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkConnectionListResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkConnectionResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.linkConnection,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkConnectionResource,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst editTablesOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/edittables\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.editTablesRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDetailedStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/detailedstatus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkConnectionDetailedStatus,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listLinkTablesOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/linktables\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkTableListResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst queryTableStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/querytablestatus\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkConnectionQueryTableStatus,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.queryTableStatusRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateLandingZoneCredentialOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/updateLandingZoneCredential\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.updateLandingZoneCredentialRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst pauseOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/pause\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst resumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/linkconnections/{linkConnectionName}/resume\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.linkConnectionName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LinkConnectionListResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n\n/** Class containing LinkConnectionOperations operations. */\nexport class LinkConnectionOperationsImpl implements LinkConnectionOperations {\n  private readonly client: ArtifactsClient;\n\n  /**\n   * Initialize a new instance of the class LinkConnectionOperations class.\n   * @param client - Reference to the service client\n   */\n  constructor(client: ArtifactsClient) {\n    this.client = client;\n  }\n\n  /**\n   * List link connections\n   * @param options - The options parameters.\n   */\n  public listByWorkspace(\n    options?: LinkConnectionListByWorkspaceOptionalParams,\n  ): PagedAsyncIterableIterator<LinkConnectionResource> {\n    const iter = this.listByWorkspacePagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByWorkspacePagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    options?: LinkConnectionListByWorkspaceOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<LinkConnectionResource[]> {\n    let result: LinkConnectionListByWorkspaceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByWorkspace(options);\n      const page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      const page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    options?: LinkConnectionListByWorkspaceOptionalParams,\n  ): AsyncIterableIterator<LinkConnectionResource> {\n    for await (const page of this.listByWorkspacePagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List link connections\n   * @param options - The options parameters.\n   */\n  private async _listByWorkspace(\n    options?: LinkConnectionListByWorkspaceOptionalParams,\n  ): Promise<LinkConnectionListByWorkspaceResponse> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient._listByWorkspace\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { updatedOptions },\n          listByWorkspaceOperationSpec,\n        ) as Promise<LinkConnectionListByWorkspaceResponse>;\n      },\n    );\n  }\n\n  /**\n   * Creates or updates a link connection\n   * @param linkConnectionName - The link connection name\n   * @param linkConnection - Link connection resource definition\n   * @param options - The options parameters.\n   */\n  async createOrUpdate(\n    linkConnectionName: string,\n    linkConnection: LinkConnectionResource,\n    options?: LinkConnectionCreateOrUpdateOptionalParams,\n  ): Promise<LinkConnectionCreateOrUpdateResponse> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.createOrUpdate\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, linkConnection, updatedOptions },\n          createOrUpdateOperationSpec,\n        ) as Promise<LinkConnectionCreateOrUpdateResponse>;\n      },\n    );\n  }\n\n  /**\n   * Get a link connection\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  async get(\n    linkConnectionName: string,\n    options?: LinkConnectionGetOptionalParams,\n  ): Promise<LinkConnectionGetResponse> {\n    return tracingClient.withSpan(\"ArtifactsClient.get\", options ?? {}, async (updatedOptions) => {\n      return this.client.sendOperationRequest(\n        { linkConnectionName, updatedOptions },\n        getOperationSpec,\n      ) as Promise<LinkConnectionGetResponse>;\n    });\n  }\n\n  /**\n   * Delete a link connection\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  async delete(\n    linkConnectionName: string,\n    options?: LinkConnectionDeleteOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.delete\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, updatedOptions },\n          deleteOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * Edit tables for a link connection\n   * @param linkConnectionName - The link connection name\n   * @param editTablesRequest - Edit tables request\n   * @param options - The options parameters.\n   */\n  async editTables(\n    linkConnectionName: string,\n    editTablesRequest: EditTablesRequest,\n    options?: LinkConnectionEditTablesOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.editTables\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, editTablesRequest, updatedOptions },\n          editTablesOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * Start a link connection. It may take a few minutes from Starting to Running, monitor the status with\n   * LinkConnection_GetDetailedStatus.\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  async start(\n    linkConnectionName: string,\n    options?: LinkConnectionStartOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.start\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, updatedOptions },\n          startOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * Stop a link connection. It may take a few minutes from Stopping to stopped, monitor the status with\n   * LinkConnection_GetDetailedStatus.\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  async stop(\n    linkConnectionName: string,\n    options?: LinkConnectionStopOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\"ArtifactsClient.stop\", options ?? {}, async (updatedOptions) => {\n      return this.client.sendOperationRequest(\n        { linkConnectionName, updatedOptions },\n        stopOperationSpec,\n      ) as Promise<void>;\n    });\n  }\n\n  /**\n   * Get the detailed status of a link connection\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  async getDetailedStatus(\n    linkConnectionName: string,\n    options?: LinkConnectionGetDetailedStatusOptionalParams,\n  ): Promise<LinkConnectionGetDetailedStatusResponse> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.getDetailedStatus\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, updatedOptions },\n          getDetailedStatusOperationSpec,\n        ) as Promise<LinkConnectionGetDetailedStatusResponse>;\n      },\n    );\n  }\n\n  /**\n   * List the link tables of a link connection\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  async listLinkTables(\n    linkConnectionName: string,\n    options?: LinkConnectionListLinkTablesOptionalParams,\n  ): Promise<LinkConnectionListLinkTablesResponse> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.listLinkTables\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, updatedOptions },\n          listLinkTablesOperationSpec,\n        ) as Promise<LinkConnectionListLinkTablesResponse>;\n      },\n    );\n  }\n\n  /**\n   * Query the link table status of a link connection\n   * @param linkConnectionName - The link connection name\n   * @param queryTableStatusRequest - Query table status request\n   * @param options - The options parameters.\n   */\n  async queryTableStatus(\n    linkConnectionName: string,\n    queryTableStatusRequest: QueryTableStatusRequest,\n    options?: LinkConnectionQueryTableStatusOptionalParams,\n  ): Promise<LinkConnectionQueryTableStatusResponse> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.queryTableStatus\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, queryTableStatusRequest, updatedOptions },\n          queryTableStatusOperationSpec,\n        ) as Promise<LinkConnectionQueryTableStatusResponse>;\n      },\n    );\n  }\n\n  /**\n   * Update landing zone credential of a link connection\n   * @param linkConnectionName - The link connection name\n   * @param updateLandingZoneCredentialRequest - update landing zone credential request\n   * @param options - The options parameters.\n   */\n  async updateLandingZoneCredential(\n    linkConnectionName: string,\n    updateLandingZoneCredentialRequest: UpdateLandingZoneCredential,\n    options?: LinkConnectionUpdateLandingZoneCredentialOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.updateLandingZoneCredential\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, updateLandingZoneCredentialRequest, updatedOptions },\n          updateLandingZoneCredentialOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * Pause a link connection. It may take a few minutes from Pausing to Paused, monitor the status with\n   * LinkConnection_GetDetailedStatus.\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  async pause(\n    linkConnectionName: string,\n    options?: LinkConnectionPauseOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.pause\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, updatedOptions },\n          pauseOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * Resume a link connection. It may take a few minutes from Resuming to Running, monitor the status\n   * with LinkConnection_GetDetailedStatus.\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  async resume(\n    linkConnectionName: string,\n    options?: LinkConnectionResumeOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient.resume\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { linkConnectionName, updatedOptions },\n          resumeOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param nextLink - The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options - The options parameters.\n   */\n  private async _listByWorkspaceNext(\n    nextLink: string,\n    options?: LinkConnectionListByWorkspaceNextOptionalParams,\n  ): Promise<LinkConnectionListByWorkspaceNextResponse> {\n    return tracingClient.withSpan(\n      \"ArtifactsClient._listByWorkspaceNext\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { nextLink, updatedOptions },\n          listByWorkspaceNextOperationSpec,\n        ) as Promise<LinkConnectionListByWorkspaceNextResponse>;\n      },\n    );\n  }\n}\n"]}