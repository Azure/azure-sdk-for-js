{"version":3,"file":"pipelineOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/pipelineOperations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport type { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport type {\n  PipelineResource,\n  PipelineGetPipelinesByWorkspaceOptionalParams,\n  PipelineCreateOrUpdatePipelineOptionalParams,\n  PipelineCreateOrUpdatePipelineResponse,\n  PipelineGetPipelineOptionalParams,\n  PipelineGetPipelineResponse,\n  PipelineDeletePipelineOptionalParams,\n  ArtifactRenameRequest,\n  PipelineRenamePipelineOptionalParams,\n  PipelineCreatePipelineRunOptionalParams,\n  PipelineCreatePipelineRunResponse,\n} from \"../models/index.js\";\n\n/** Interface representing a PipelineOperations. */\nexport interface PipelineOperations {\n  /**\n   * Lists pipelines.\n   * @param options - The options parameters.\n   */\n  listPipelinesByWorkspace(\n    options?: PipelineGetPipelinesByWorkspaceOptionalParams,\n  ): PagedAsyncIterableIterator<PipelineResource>;\n  /**\n   * Creates or updates a pipeline.\n   * @param pipelineName - The pipeline name.\n   * @param pipeline - Pipeline resource definition.\n   * @param options - The options parameters.\n   */\n  beginCreateOrUpdatePipeline(\n    pipelineName: string,\n    pipeline: PipelineResource,\n    options?: PipelineCreateOrUpdatePipelineOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<PipelineCreateOrUpdatePipelineResponse>,\n      PipelineCreateOrUpdatePipelineResponse\n    >\n  >;\n  /**\n   * Creates or updates a pipeline.\n   * @param pipelineName - The pipeline name.\n   * @param pipeline - Pipeline resource definition.\n   * @param options - The options parameters.\n   */\n  beginCreateOrUpdatePipelineAndWait(\n    pipelineName: string,\n    pipeline: PipelineResource,\n    options?: PipelineCreateOrUpdatePipelineOptionalParams,\n  ): Promise<PipelineCreateOrUpdatePipelineResponse>;\n  /**\n   * Gets a pipeline.\n   * @param pipelineName - The pipeline name.\n   * @param options - The options parameters.\n   */\n  getPipeline(\n    pipelineName: string,\n    options?: PipelineGetPipelineOptionalParams,\n  ): Promise<PipelineGetPipelineResponse>;\n  /**\n   * Deletes a pipeline.\n   * @param pipelineName - The pipeline name.\n   * @param options - The options parameters.\n   */\n  beginDeletePipeline(\n    pipelineName: string,\n    options?: PipelineDeletePipelineOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a pipeline.\n   * @param pipelineName - The pipeline name.\n   * @param options - The options parameters.\n   */\n  beginDeletePipelineAndWait(\n    pipelineName: string,\n    options?: PipelineDeletePipelineOptionalParams,\n  ): Promise<void>;\n  /**\n   * Renames a pipeline.\n   * @param pipelineName - The pipeline name.\n   * @param request - proposed new name.\n   * @param options - The options parameters.\n   */\n  beginRenamePipeline(\n    pipelineName: string,\n    request: ArtifactRenameRequest,\n    options?: PipelineRenamePipelineOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Renames a pipeline.\n   * @param pipelineName - The pipeline name.\n   * @param request - proposed new name.\n   * @param options - The options parameters.\n   */\n  beginRenamePipelineAndWait(\n    pipelineName: string,\n    request: ArtifactRenameRequest,\n    options?: PipelineRenamePipelineOptionalParams,\n  ): Promise<void>;\n  /**\n   * Creates a run of a pipeline.\n   * @param pipelineName - The pipeline name.\n   * @param options - The options parameters.\n   */\n  createPipelineRun(\n    pipelineName: string,\n    options?: PipelineCreatePipelineRunOptionalParams,\n  ): Promise<PipelineCreatePipelineRunResponse>;\n}\n"]}