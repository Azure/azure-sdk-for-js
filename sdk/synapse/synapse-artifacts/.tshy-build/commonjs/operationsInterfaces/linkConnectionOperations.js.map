{"version":3,"file":"linkConnectionOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/linkConnectionOperations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport type {\n  LinkConnectionResource,\n  LinkConnectionListByWorkspaceOptionalParams,\n  LinkConnectionCreateOrUpdateOptionalParams,\n  LinkConnectionCreateOrUpdateResponse,\n  LinkConnectionGetOptionalParams,\n  LinkConnectionGetResponse,\n  LinkConnectionDeleteOptionalParams,\n  EditTablesRequest,\n  LinkConnectionEditTablesOptionalParams,\n  LinkConnectionStartOptionalParams,\n  LinkConnectionStopOptionalParams,\n  LinkConnectionGetDetailedStatusOptionalParams,\n  LinkConnectionGetDetailedStatusResponse,\n  LinkConnectionListLinkTablesOptionalParams,\n  LinkConnectionListLinkTablesResponse,\n  QueryTableStatusRequest,\n  LinkConnectionQueryTableStatusOptionalParams,\n  LinkConnectionQueryTableStatusResponse,\n  UpdateLandingZoneCredential,\n  LinkConnectionUpdateLandingZoneCredentialOptionalParams,\n  LinkConnectionPauseOptionalParams,\n  LinkConnectionResumeOptionalParams,\n} from \"../models/index.js\";\n\n/** Interface representing a LinkConnectionOperations. */\nexport interface LinkConnectionOperations {\n  /**\n   * List link connections\n   * @param options - The options parameters.\n   */\n  listByWorkspace(\n    options?: LinkConnectionListByWorkspaceOptionalParams,\n  ): PagedAsyncIterableIterator<LinkConnectionResource>;\n  /**\n   * Creates or updates a link connection\n   * @param linkConnectionName - The link connection name\n   * @param linkConnection - Link connection resource definition\n   * @param options - The options parameters.\n   */\n  createOrUpdate(\n    linkConnectionName: string,\n    linkConnection: LinkConnectionResource,\n    options?: LinkConnectionCreateOrUpdateOptionalParams,\n  ): Promise<LinkConnectionCreateOrUpdateResponse>;\n  /**\n   * Get a link connection\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  get(\n    linkConnectionName: string,\n    options?: LinkConnectionGetOptionalParams,\n  ): Promise<LinkConnectionGetResponse>;\n  /**\n   * Delete a link connection\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  delete(linkConnectionName: string, options?: LinkConnectionDeleteOptionalParams): Promise<void>;\n  /**\n   * Edit tables for a link connection\n   * @param linkConnectionName - The link connection name\n   * @param editTablesRequest - Edit tables request\n   * @param options - The options parameters.\n   */\n  editTables(\n    linkConnectionName: string,\n    editTablesRequest: EditTablesRequest,\n    options?: LinkConnectionEditTablesOptionalParams,\n  ): Promise<void>;\n  /**\n   * Start a link connection. It may take a few minutes from Starting to Running, monitor the status with\n   * LinkConnection_GetDetailedStatus.\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  start(linkConnectionName: string, options?: LinkConnectionStartOptionalParams): Promise<void>;\n  /**\n   * Stop a link connection. It may take a few minutes from Stopping to stopped, monitor the status with\n   * LinkConnection_GetDetailedStatus.\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  stop(linkConnectionName: string, options?: LinkConnectionStopOptionalParams): Promise<void>;\n  /**\n   * Get the detailed status of a link connection\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  getDetailedStatus(\n    linkConnectionName: string,\n    options?: LinkConnectionGetDetailedStatusOptionalParams,\n  ): Promise<LinkConnectionGetDetailedStatusResponse>;\n  /**\n   * List the link tables of a link connection\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  listLinkTables(\n    linkConnectionName: string,\n    options?: LinkConnectionListLinkTablesOptionalParams,\n  ): Promise<LinkConnectionListLinkTablesResponse>;\n  /**\n   * Query the link table status of a link connection\n   * @param linkConnectionName - The link connection name\n   * @param queryTableStatusRequest - Query table status request\n   * @param options - The options parameters.\n   */\n  queryTableStatus(\n    linkConnectionName: string,\n    queryTableStatusRequest: QueryTableStatusRequest,\n    options?: LinkConnectionQueryTableStatusOptionalParams,\n  ): Promise<LinkConnectionQueryTableStatusResponse>;\n  /**\n   * Update landing zone credential of a link connection\n   * @param linkConnectionName - The link connection name\n   * @param updateLandingZoneCredentialRequest - update landing zone credential request\n   * @param options - The options parameters.\n   */\n  updateLandingZoneCredential(\n    linkConnectionName: string,\n    updateLandingZoneCredentialRequest: UpdateLandingZoneCredential,\n    options?: LinkConnectionUpdateLandingZoneCredentialOptionalParams,\n  ): Promise<void>;\n  /**\n   * Pause a link connection. It may take a few minutes from Pausing to Paused, monitor the status with\n   * LinkConnection_GetDetailedStatus.\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  pause(linkConnectionName: string, options?: LinkConnectionPauseOptionalParams): Promise<void>;\n  /**\n   * Resume a link connection. It may take a few minutes from Resuming to Running, monitor the status\n   * with LinkConnection_GetDetailedStatus.\n   * @param linkConnectionName - The link connection name\n   * @param options - The options parameters.\n   */\n  resume(linkConnectionName: string, options?: LinkConnectionResumeOptionalParams): Promise<void>;\n}\n"]}