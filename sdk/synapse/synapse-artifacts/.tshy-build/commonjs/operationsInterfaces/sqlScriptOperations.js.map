{"version":3,"file":"sqlScriptOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/sqlScriptOperations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport type { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport type {\n  SqlScriptResource,\n  SqlScriptGetSqlScriptsByWorkspaceOptionalParams,\n  SqlScriptCreateOrUpdateSqlScriptOptionalParams,\n  SqlScriptCreateOrUpdateSqlScriptResponse,\n  SqlScriptGetSqlScriptOptionalParams,\n  SqlScriptGetSqlScriptResponse,\n  SqlScriptDeleteSqlScriptOptionalParams,\n  ArtifactRenameRequest,\n  SqlScriptRenameSqlScriptOptionalParams,\n} from \"../models/index.js\";\n\n/** Interface representing a SqlScriptOperations. */\nexport interface SqlScriptOperations {\n  /**\n   * Lists sql scripts.\n   * @param options - The options parameters.\n   */\n  listSqlScriptsByWorkspace(\n    options?: SqlScriptGetSqlScriptsByWorkspaceOptionalParams,\n  ): PagedAsyncIterableIterator<SqlScriptResource>;\n  /**\n   * Creates or updates a Sql Script.\n   * @param sqlScriptName - The sql script name.\n   * @param sqlScript - Sql Script resource definition.\n   * @param options - The options parameters.\n   */\n  beginCreateOrUpdateSqlScript(\n    sqlScriptName: string,\n    sqlScript: SqlScriptResource,\n    options?: SqlScriptCreateOrUpdateSqlScriptOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<SqlScriptCreateOrUpdateSqlScriptResponse>,\n      SqlScriptCreateOrUpdateSqlScriptResponse\n    >\n  >;\n  /**\n   * Creates or updates a Sql Script.\n   * @param sqlScriptName - The sql script name.\n   * @param sqlScript - Sql Script resource definition.\n   * @param options - The options parameters.\n   */\n  beginCreateOrUpdateSqlScriptAndWait(\n    sqlScriptName: string,\n    sqlScript: SqlScriptResource,\n    options?: SqlScriptCreateOrUpdateSqlScriptOptionalParams,\n  ): Promise<SqlScriptCreateOrUpdateSqlScriptResponse>;\n  /**\n   * Gets a sql script.\n   * @param sqlScriptName - The sql script name.\n   * @param options - The options parameters.\n   */\n  getSqlScript(\n    sqlScriptName: string,\n    options?: SqlScriptGetSqlScriptOptionalParams,\n  ): Promise<SqlScriptGetSqlScriptResponse>;\n  /**\n   * Deletes a Sql Script.\n   * @param sqlScriptName - The sql script name.\n   * @param options - The options parameters.\n   */\n  beginDeleteSqlScript(\n    sqlScriptName: string,\n    options?: SqlScriptDeleteSqlScriptOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a Sql Script.\n   * @param sqlScriptName - The sql script name.\n   * @param options - The options parameters.\n   */\n  beginDeleteSqlScriptAndWait(\n    sqlScriptName: string,\n    options?: SqlScriptDeleteSqlScriptOptionalParams,\n  ): Promise<void>;\n  /**\n   * Renames a sqlScript.\n   * @param sqlScriptName - The sql script name.\n   * @param request - proposed new name.\n   * @param options - The options parameters.\n   */\n  beginRenameSqlScript(\n    sqlScriptName: string,\n    request: ArtifactRenameRequest,\n    options?: SqlScriptRenameSqlScriptOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Renames a sqlScript.\n   * @param sqlScriptName - The sql script name.\n   * @param request - proposed new name.\n   * @param options - The options parameters.\n   */\n  beginRenameSqlScriptAndWait(\n    sqlScriptName: string,\n    request: ArtifactRenameRequest,\n    options?: SqlScriptRenameSqlScriptOptionalParams,\n  ): Promise<void>;\n}\n"]}