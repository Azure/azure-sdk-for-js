{"version":3,"file":"runNotebook.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/runNotebook.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport type {\n  RunNotebookRequest,\n  RunNotebookCreateRunOptionalParams,\n  RunNotebookCreateRunResponse,\n  RunNotebookGetStatusOptionalParams,\n  RunNotebookGetStatusResponse,\n  RunNotebookCancelRunOptionalParams,\n  RunNotebookCancelRunResponse,\n  RunNotebookGetSnapshotOptionalParams,\n  RunNotebookGetSnapshotResponse,\n} from \"../models/index.js\";\n\n/** Interface representing a RunNotebook. */\nexport interface RunNotebook {\n  /**\n   * Run notebook\n   * @param runId - Notebook run id.\n   * @param runNotebookRequest - Run notebook request payload.\n   * @param options - The options parameters.\n   */\n  beginCreateRun(\n    runId: string,\n    runNotebookRequest: RunNotebookRequest,\n    options?: RunNotebookCreateRunOptionalParams,\n  ): Promise<\n    SimplePollerLike<OperationState<RunNotebookCreateRunResponse>, RunNotebookCreateRunResponse>\n  >;\n  /**\n   * Run notebook\n   * @param runId - Notebook run id.\n   * @param runNotebookRequest - Run notebook request payload.\n   * @param options - The options parameters.\n   */\n  beginCreateRunAndWait(\n    runId: string,\n    runNotebookRequest: RunNotebookRequest,\n    options?: RunNotebookCreateRunOptionalParams,\n  ): Promise<RunNotebookCreateRunResponse>;\n  /**\n   * Get RunNotebook Status for run id.\n   * @param runId - Notebook run id.\n   * @param options - The options parameters.\n   */\n  getStatus(\n    runId: string,\n    options?: RunNotebookGetStatusOptionalParams,\n  ): Promise<RunNotebookGetStatusResponse>;\n  /**\n   * Cancel notebook run.\n   * @param runId - Notebook run id.\n   * @param options - The options parameters.\n   */\n  cancelRun(\n    runId: string,\n    options?: RunNotebookCancelRunOptionalParams,\n  ): Promise<RunNotebookCancelRunResponse>;\n  /**\n   * Get RunNotebook Snapshot for run id.\n   * @param runId - Notebook run id.\n   * @param options - The options parameters.\n   */\n  getSnapshot(\n    runId: string,\n    options?: RunNotebookGetSnapshotOptionalParams,\n  ): Promise<RunNotebookGetSnapshotResponse>;\n}\n"]}