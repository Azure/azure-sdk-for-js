{"version":3,"file":"triggerRunOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/triggerRunOperations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type {\n  TriggerRunRerunTriggerInstanceOptionalParams,\n  TriggerRunCancelTriggerInstanceOptionalParams,\n  RunFilterParameters,\n  TriggerRunQueryTriggerRunsByWorkspaceOptionalParams,\n  TriggerRunQueryTriggerRunsByWorkspaceResponse,\n} from \"../models/index.js\";\n\n/** Interface representing a TriggerRunOperations. */\nexport interface TriggerRunOperations {\n  /**\n   * Rerun single trigger instance by runId.\n   * @param triggerName - The trigger name.\n   * @param runId - The pipeline run identifier.\n   * @param options - The options parameters.\n   */\n  rerunTriggerInstance(\n    triggerName: string,\n    runId: string,\n    options?: TriggerRunRerunTriggerInstanceOptionalParams,\n  ): Promise<void>;\n  /**\n   * Cancel single trigger instance by runId.\n   * @param triggerName - The trigger name.\n   * @param runId - The pipeline run identifier.\n   * @param options - The options parameters.\n   */\n  cancelTriggerInstance(\n    triggerName: string,\n    runId: string,\n    options?: TriggerRunCancelTriggerInstanceOptionalParams,\n  ): Promise<void>;\n  /**\n   * Query trigger runs.\n   * @param filterParameters - Parameters to filter the pipeline run.\n   * @param options - The options parameters.\n   */\n  queryTriggerRunsByWorkspace(\n    filterParameters: RunFilterParameters,\n    options?: TriggerRunQueryTriggerRunsByWorkspaceOptionalParams,\n  ): Promise<TriggerRunQueryTriggerRunsByWorkspaceResponse>;\n}\n"]}