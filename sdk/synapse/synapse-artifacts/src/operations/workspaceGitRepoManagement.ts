/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { tracingClient } from "../tracing.js";
import type { WorkspaceGitRepoManagement } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import type { ArtifactsClient } from "../artifactsClient.js";
import type {
  GitHubAccessTokenRequest,
  WorkspaceGitRepoManagementGetGitHubAccessTokenOptionalParams,
  WorkspaceGitRepoManagementGetGitHubAccessTokenResponse,
} from "../models/index.js";

// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getGitHubAccessTokenOperationSpec: coreClient.OperationSpec = {
  path: "/getGitHubAccessToken",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.GitHubAccessTokenResponse,
    },
  },
  requestBody: Parameters.gitHubAccessTokenRequest,
  queryParameters: [Parameters.apiVersion5],
  urlParameters: [Parameters.endpoint],
  headerParameters: [Parameters.accept, Parameters.contentType, Parameters.clientRequestId],
  mediaType: "json",
  serializer,
};

/** Class containing WorkspaceGitRepoManagement operations. */
export class WorkspaceGitRepoManagementImpl implements WorkspaceGitRepoManagement {
  private readonly client: ArtifactsClient;

  /**
   * Initialize a new instance of the class WorkspaceGitRepoManagement class.
   * @param client - Reference to the service client
   */
  // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters
  constructor(client: ArtifactsClient) {
    this.client = client;
  }

  /**
   * Get the GitHub access token.
   * @param gitHubAccessTokenRequest - The GitHub access token request
   * @param options - The options parameters.
   */
  async getGitHubAccessToken(
    gitHubAccessTokenRequest: GitHubAccessTokenRequest,
    options?: WorkspaceGitRepoManagementGetGitHubAccessTokenOptionalParams,
  ): Promise<WorkspaceGitRepoManagementGetGitHubAccessTokenResponse> {
    return tracingClient.withSpan(
      "ArtifactsClient.getGitHubAccessToken",
      options ?? {},
      async (updatedOptions) => {
        return this.client.sendOperationRequest(
          { gitHubAccessTokenRequest, updatedOptions },
          getGitHubAccessTokenOperationSpec,
        ) as Promise<WorkspaceGitRepoManagementGetGitHubAccessTokenResponse>;
      },
    );
  }
}
