/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  DataFlowResource,
  DataFlowGetDataFlowsByWorkspaceOptionalParams,
  DataFlowCreateOrUpdateDataFlowOptionalParams,
  DataFlowCreateOrUpdateDataFlowResponse,
  DataFlowGetDataFlowOptionalParams,
  DataFlowGetDataFlowResponse,
  DataFlowDeleteDataFlowOptionalParams,
  ArtifactRenameRequest,
  DataFlowRenameDataFlowOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DataFlowOperations. */
export interface DataFlowOperations {
  /**
   * Lists data flows.
   * @param options The options parameters.
   */
  listDataFlowsByWorkspace(
    options?: DataFlowGetDataFlowsByWorkspaceOptionalParams
  ): PagedAsyncIterableIterator<DataFlowResource>;
  /**
   * Creates or updates a data flow.
   * @param dataFlowName The data flow name.
   * @param dataFlow Data flow resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdateDataFlow(
    dataFlowName: string,
    dataFlow: DataFlowResource,
    options?: DataFlowCreateOrUpdateDataFlowOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<DataFlowCreateOrUpdateDataFlowResponse>,
      DataFlowCreateOrUpdateDataFlowResponse
    >
  >;
  /**
   * Creates or updates a data flow.
   * @param dataFlowName The data flow name.
   * @param dataFlow Data flow resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdateDataFlowAndWait(
    dataFlowName: string,
    dataFlow: DataFlowResource,
    options?: DataFlowCreateOrUpdateDataFlowOptionalParams
  ): Promise<DataFlowCreateOrUpdateDataFlowResponse>;
  /**
   * Gets a data flow.
   * @param dataFlowName The data flow name.
   * @param options The options parameters.
   */
  getDataFlow(
    dataFlowName: string,
    options?: DataFlowGetDataFlowOptionalParams
  ): Promise<DataFlowGetDataFlowResponse>;
  /**
   * Deletes a data flow.
   * @param dataFlowName The data flow name.
   * @param options The options parameters.
   */
  beginDeleteDataFlow(
    dataFlowName: string,
    options?: DataFlowDeleteDataFlowOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a data flow.
   * @param dataFlowName The data flow name.
   * @param options The options parameters.
   */
  beginDeleteDataFlowAndWait(
    dataFlowName: string,
    options?: DataFlowDeleteDataFlowOptionalParams
  ): Promise<void>;
  /**
   * Renames a dataflow.
   * @param dataFlowName The data flow name.
   * @param request proposed new name.
   * @param options The options parameters.
   */
  beginRenameDataFlow(
    dataFlowName: string,
    request: ArtifactRenameRequest,
    options?: DataFlowRenameDataFlowOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Renames a dataflow.
   * @param dataFlowName The data flow name.
   * @param request proposed new name.
   * @param options The options parameters.
   */
  beginRenameDataFlowAndWait(
    dataFlowName: string,
    request: ArtifactRenameRequest,
    options?: DataFlowRenameDataFlowOptionalParams
  ): Promise<void>;
}
