/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  RunFilterParameters,
  PipelineRunQueryPipelineRunsByWorkspaceOptionalParams,
  PipelineRunQueryPipelineRunsByWorkspaceResponse,
  PipelineRunGetPipelineRunOptionalParams,
  PipelineRunGetPipelineRunResponse,
  PipelineRunQueryActivityRunsOptionalParams,
  PipelineRunQueryActivityRunsResponse,
  PipelineRunCancelPipelineRunOptionalParams
} from "../models";

/** Interface representing a PipelineRunOperations. */
export interface PipelineRunOperations {
  /**
   * Query pipeline runs in the workspace based on input filter conditions.
   * @param filterParameters Parameters to filter the pipeline run.
   * @param options The options parameters.
   */
  queryPipelineRunsByWorkspace(
    filterParameters: RunFilterParameters,
    options?: PipelineRunQueryPipelineRunsByWorkspaceOptionalParams
  ): Promise<PipelineRunQueryPipelineRunsByWorkspaceResponse>;
  /**
   * Get a pipeline run by its run ID.
   * @param runId The pipeline run identifier.
   * @param options The options parameters.
   */
  getPipelineRun(
    runId: string,
    options?: PipelineRunGetPipelineRunOptionalParams
  ): Promise<PipelineRunGetPipelineRunResponse>;
  /**
   * Query activity runs based on input filter conditions.
   * @param pipelineName The pipeline name.
   * @param runId The pipeline run identifier.
   * @param filterParameters Parameters to filter the activity runs.
   * @param options The options parameters.
   */
  queryActivityRuns(
    pipelineName: string,
    runId: string,
    filterParameters: RunFilterParameters,
    options?: PipelineRunQueryActivityRunsOptionalParams
  ): Promise<PipelineRunQueryActivityRunsResponse>;
  /**
   * Cancel a pipeline run by its run ID.
   * @param runId The pipeline run identifier.
   * @param options The options parameters.
   */
  cancelPipelineRun(
    runId: string,
    options?: PipelineRunCancelPipelineRunOptionalParams
  ): Promise<void>;
}
