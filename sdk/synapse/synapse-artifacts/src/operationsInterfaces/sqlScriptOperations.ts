/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  SqlScriptResource,
  SqlScriptOperationsGetSqlScriptsByWorkspaceOptionalParams,
  SqlScriptOperationsCreateOrUpdateSqlScriptOptionalParams,
  SqlScriptOperationsCreateOrUpdateSqlScriptResponse,
  SqlScriptOperationsGetSqlScriptOptionalParams,
  SqlScriptOperationsGetSqlScriptResponse,
  SqlScriptOperationsDeleteSqlScriptOptionalParams,
  ArtifactRenameRequest,
  SqlScriptOperationsRenameSqlScriptOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlScriptOperations. */
export interface SqlScriptOperations {
  /**
   * Lists sql scripts.
   * @param options The options parameters.
   */
  listSqlScriptsByWorkspace(
    options?: SqlScriptOperationsGetSqlScriptsByWorkspaceOptionalParams
  ): PagedAsyncIterableIterator<SqlScriptResource>;
  /**
   * Creates or updates a Sql Script.
   * @param sqlScriptName The sql script name.
   * @param sqlScript Sql Script resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdateSqlScript(
    sqlScriptName: string,
    sqlScript: SqlScriptResource,
    options?: SqlScriptOperationsCreateOrUpdateSqlScriptOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<SqlScriptOperationsCreateOrUpdateSqlScriptResponse>,
      SqlScriptOperationsCreateOrUpdateSqlScriptResponse
    >
  >;
  /**
   * Creates or updates a Sql Script.
   * @param sqlScriptName The sql script name.
   * @param sqlScript Sql Script resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdateSqlScriptAndWait(
    sqlScriptName: string,
    sqlScript: SqlScriptResource,
    options?: SqlScriptOperationsCreateOrUpdateSqlScriptOptionalParams
  ): Promise<SqlScriptOperationsCreateOrUpdateSqlScriptResponse>;
  /**
   * Gets a sql script.
   * @param sqlScriptName The sql script name.
   * @param options The options parameters.
   */
  getSqlScript(
    sqlScriptName: string,
    options?: SqlScriptOperationsGetSqlScriptOptionalParams
  ): Promise<SqlScriptOperationsGetSqlScriptResponse>;
  /**
   * Deletes a Sql Script.
   * @param sqlScriptName The sql script name.
   * @param options The options parameters.
   */
  beginDeleteSqlScript(
    sqlScriptName: string,
    options?: SqlScriptOperationsDeleteSqlScriptOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a Sql Script.
   * @param sqlScriptName The sql script name.
   * @param options The options parameters.
   */
  beginDeleteSqlScriptAndWait(
    sqlScriptName: string,
    options?: SqlScriptOperationsDeleteSqlScriptOptionalParams
  ): Promise<void>;
  /**
   * Renames a sqlScript.
   * @param sqlScriptName The sql script name.
   * @param request proposed new name.
   * @param options The options parameters.
   */
  beginRenameSqlScript(
    sqlScriptName: string,
    request: ArtifactRenameRequest,
    options?: SqlScriptOperationsRenameSqlScriptOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Renames a sqlScript.
   * @param sqlScriptName The sql script name.
   * @param request proposed new name.
   * @param options The options parameters.
   */
  beginRenameSqlScriptAndWait(
    sqlScriptName: string,
    request: ArtifactRenameRequest,
    options?: SqlScriptOperationsRenameSqlScriptOptionalParams
  ): Promise<void>;
}
