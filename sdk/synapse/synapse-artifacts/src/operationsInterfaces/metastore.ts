/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  MetastoreRegisterObject,
  MetastoreRegisterOptionalParams,
  MetastoreRegisterResponse,
  MetastoreGetDatabaseOperationsOptionalParams,
  MetastoreGetDatabaseOperationsResponse,
  MetastoreUpdateObject,
  MetastoreUpdateOptionalParams,
  MetastoreUpdateResponse,
  MetastoreDeleteOptionalParams
} from "../models";

/** Interface representing a Metastore. */
export interface Metastore {
  /**
   * Register files in Syms
   * @param id The name of the database to be created. The name can contain only alphanumeric characters
   *           and should not exceed 24 characters
   * @param registerBody The body for the register request
   * @param options The options parameters.
   */
  register(
    id: string,
    registerBody: MetastoreRegisterObject,
    options?: MetastoreRegisterOptionalParams
  ): Promise<MetastoreRegisterResponse>;
  /**
   * Gets status of the database
   * @param id
   * @param options The options parameters.
   */
  getDatabaseOperations(
    id: string,
    options?: MetastoreGetDatabaseOperationsOptionalParams
  ): Promise<MetastoreGetDatabaseOperationsResponse>;
  /**
   * Update files in Syms
   * @param id The name of the database to be updated
   * @param updateBody The body for the update request
   * @param options The options parameters.
   */
  update(
    id: string,
    updateBody: MetastoreUpdateObject,
    options?: MetastoreUpdateOptionalParams
  ): Promise<MetastoreUpdateResponse>;
  /**
   * Remove files in Syms
   * @param id
   * @param options The options parameters.
   */
  delete(id: string, options?: MetastoreDeleteOptionalParams): Promise<void>;
}
