/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  TriggerRunRerunTriggerInstanceOptionalParams,
  TriggerRunCancelTriggerInstanceOptionalParams,
  RunFilterParameters,
  TriggerRunQueryTriggerRunsByWorkspaceOptionalParams,
  TriggerRunQueryTriggerRunsByWorkspaceResponse
} from "../models";

/** Interface representing a TriggerRunOperations. */
export interface TriggerRunOperations {
  /**
   * Rerun single trigger instance by runId.
   * @param triggerName The trigger name.
   * @param runId The pipeline run identifier.
   * @param options The options parameters.
   */
  rerunTriggerInstance(
    triggerName: string,
    runId: string,
    options?: TriggerRunRerunTriggerInstanceOptionalParams
  ): Promise<void>;
  /**
   * Cancel single trigger instance by runId.
   * @param triggerName The trigger name.
   * @param runId The pipeline run identifier.
   * @param options The options parameters.
   */
  cancelTriggerInstance(
    triggerName: string,
    runId: string,
    options?: TriggerRunCancelTriggerInstanceOptionalParams
  ): Promise<void>;
  /**
   * Query trigger runs.
   * @param filterParameters Parameters to filter the pipeline run.
   * @param options The options parameters.
   */
  queryTriggerRunsByWorkspace(
    filterParameters: RunFilterParameters,
    options?: TriggerRunQueryTriggerRunsByWorkspaceOptionalParams
  ): Promise<TriggerRunQueryTriggerRunsByWorkspaceResponse>;
}
