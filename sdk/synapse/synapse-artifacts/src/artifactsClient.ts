/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  LinkedServiceOperationsImpl,
  DatasetOperationsImpl,
  PipelineOperationsImpl,
  PipelineRunOperationsImpl,
  TriggerOperationsImpl,
  TriggerRunOperationsImpl,
  DataFlowOperationsImpl,
  DataFlowDebugSessionImpl,
  SqlScriptOperationsImpl,
  SparkJobDefinitionOperationsImpl,
  NotebookOperationsImpl,
  WorkspaceOperationsImpl,
  SqlPoolsImpl,
  BigDataPoolsImpl,
  IntegrationRuntimesImpl,
  LibraryImpl,
  WorkspaceGitRepoManagementImpl
} from "./operations";
import {
  LinkedServiceOperations,
  DatasetOperations,
  PipelineOperations,
  PipelineRunOperations,
  TriggerOperations,
  TriggerRunOperations,
  DataFlowOperations,
  DataFlowDebugSession,
  SqlScriptOperations,
  SparkJobDefinitionOperations,
  NotebookOperations,
  WorkspaceOperations,
  SqlPools,
  BigDataPools,
  IntegrationRuntimes,
  Library,
  WorkspaceGitRepoManagement
} from "./operationsInterfaces";
import { ArtifactsClientContext } from "./artifactsClientContext";
import { ArtifactsClientOptionalParams } from "./models";

export class ArtifactsClient extends ArtifactsClientContext {
  /**
   * Initializes a new instance of the ArtifactsClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param endpoint The workspace development endpoint, for example
   *                 https://myworkspace.dev.azuresynapse.net.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    endpoint: string,
    options?: ArtifactsClientOptionalParams
  ) {
    super(credentials, endpoint, options);
    this.linkedServiceOperations = new LinkedServiceOperationsImpl(this);
    this.datasetOperations = new DatasetOperationsImpl(this);
    this.pipelineOperations = new PipelineOperationsImpl(this);
    this.pipelineRunOperations = new PipelineRunOperationsImpl(this);
    this.triggerOperations = new TriggerOperationsImpl(this);
    this.triggerRunOperations = new TriggerRunOperationsImpl(this);
    this.dataFlowOperations = new DataFlowOperationsImpl(this);
    this.dataFlowDebugSession = new DataFlowDebugSessionImpl(this);
    this.sqlScriptOperations = new SqlScriptOperationsImpl(this);
    this.sparkJobDefinitionOperations = new SparkJobDefinitionOperationsImpl(
      this
    );
    this.notebookOperations = new NotebookOperationsImpl(this);
    this.workspaceOperations = new WorkspaceOperationsImpl(this);
    this.sqlPools = new SqlPoolsImpl(this);
    this.bigDataPools = new BigDataPoolsImpl(this);
    this.integrationRuntimes = new IntegrationRuntimesImpl(this);
    this.library = new LibraryImpl(this);
    this.workspaceGitRepoManagement = new WorkspaceGitRepoManagementImpl(this);
  }

  linkedServiceOperations: LinkedServiceOperations;
  datasetOperations: DatasetOperations;
  pipelineOperations: PipelineOperations;
  pipelineRunOperations: PipelineRunOperations;
  triggerOperations: TriggerOperations;
  triggerRunOperations: TriggerRunOperations;
  dataFlowOperations: DataFlowOperations;
  dataFlowDebugSession: DataFlowDebugSession;
  sqlScriptOperations: SqlScriptOperations;
  sparkJobDefinitionOperations: SparkJobDefinitionOperations;
  notebookOperations: NotebookOperations;
  workspaceOperations: WorkspaceOperations;
  sqlPools: SqlPools;
  bigDataPools: BigDataPools;
  integrationRuntimes: IntegrationRuntimes;
  library: Library;
  workspaceGitRepoManagement: WorkspaceGitRepoManagement;
}
