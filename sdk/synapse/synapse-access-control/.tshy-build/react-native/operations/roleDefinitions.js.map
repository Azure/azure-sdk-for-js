{"version":3,"file":"roleDefinitions.js","sourceRoot":"","sources":["../../../src/operations/roleDefinitions.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport type { RoleDefinitions } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport type { AccessControlClient } from \"../accessControlClient.js\";\nimport type {\n  RoleDefinitionsListRoleDefinitionsOptionalParams,\n  RoleDefinitionsListRoleDefinitionsResponse,\n  RoleDefinitionsGetRoleDefinitionByIdOptionalParams,\n  RoleDefinitionsGetRoleDefinitionByIdResponse,\n  RoleDefinitionsListScopesOptionalParams,\n  RoleDefinitionsListScopesResponse,\n} from \"../models/index.js\";\n\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listRoleDefinitionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/roleDefinitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SynapseRoleDefinition\" },\n          },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.ErrorContract,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.scope1, Parameters.isBuiltIn],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getRoleDefinitionByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/roleDefinitions/{roleDefinitionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SynapseRoleDefinition,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorContract,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roleDefinitionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listScopesOperationSpec: coreClient.OperationSpec = {\n  path: \"/rbacScopes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Sequence\", element: { type: { name: \"String\" } } },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.ErrorContract,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n\n/** Class containing RoleDefinitions operations. */\nexport class RoleDefinitionsImpl implements RoleDefinitions {\n  private readonly client: AccessControlClient;\n\n  /**\n   * Initialize a new instance of the class RoleDefinitions class.\n   * @param client - Reference to the service client\n   */\n  constructor(client: AccessControlClient) {\n    this.client = client;\n  }\n\n  /**\n   * List role definitions.\n   * @param options - The options parameters.\n   */\n  async listRoleDefinitions(\n    options?: RoleDefinitionsListRoleDefinitionsOptionalParams,\n  ): Promise<RoleDefinitionsListRoleDefinitionsResponse> {\n    return tracingClient.withSpan(\n      \"AccessControlClient.listRoleDefinitions\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { updatedOptions },\n          listRoleDefinitionsOperationSpec,\n        ) as Promise<RoleDefinitionsListRoleDefinitionsResponse>;\n      },\n    );\n  }\n\n  /**\n   * Get role definition by role definition Id.\n   * @param roleDefinitionId - Synapse Built-In Role Definition Id.\n   * @param options - The options parameters.\n   */\n  async getRoleDefinitionById(\n    roleDefinitionId: string,\n    options?: RoleDefinitionsGetRoleDefinitionByIdOptionalParams,\n  ): Promise<RoleDefinitionsGetRoleDefinitionByIdResponse> {\n    return tracingClient.withSpan(\n      \"AccessControlClient.getRoleDefinitionById\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { roleDefinitionId, updatedOptions },\n          getRoleDefinitionByIdOperationSpec,\n        ) as Promise<RoleDefinitionsGetRoleDefinitionByIdResponse>;\n      },\n    );\n  }\n\n  /**\n   * List rbac scopes.\n   * @param options - The options parameters.\n   */\n  async listScopes(\n    options?: RoleDefinitionsListScopesOptionalParams,\n  ): Promise<RoleDefinitionsListScopesResponse> {\n    return tracingClient.withSpan(\n      \"AccessControlClient.listScopes\",\n      options ?? {},\n      async (updatedOptions) => {\n        return this.client.sendOperationRequest(\n          { updatedOptions },\n          listScopesOperationSpec,\n        ) as Promise<RoleDefinitionsListScopesResponse>;\n      },\n    );\n  }\n}\n"]}