"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.roleDefinitionId = exports.isBuiltIn = exports.roleAssignmentId = exports.principalType = exports.scope2 = exports.principalId1 = exports.roleId1 = exports.continuationToken = exports.scope1 = exports.principalId = exports.roleId = exports.apiVersion = exports.endpoint = exports.scope = exports.actions = exports.subject = exports.accept = exports.contentType = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json, text/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.subject = {
    parameterPath: "subject",
    mapper: mappers_js_1.CheckPrincipalAccessRequest,
};
exports.actions = {
    parameterPath: "actions",
    mapper: mappers_js_1.CheckPrincipalAccessRequest,
};
exports.scope = {
    parameterPath: "scope",
    mapper: mappers_js_1.CheckPrincipalAccessRequest,
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-12-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.roleId = {
    parameterPath: ["options", "roleId"],
    mapper: {
        serializedName: "roleId",
        type: {
            name: "String",
        },
    },
};
exports.principalId = {
    parameterPath: ["options", "principalId"],
    mapper: {
        serializedName: "principalId",
        type: {
            name: "String",
        },
    },
};
exports.scope1 = {
    parameterPath: ["options", "scope"],
    mapper: {
        serializedName: "scope",
        type: {
            name: "String",
        },
    },
};
exports.continuationToken = {
    parameterPath: ["options", "continuationToken"],
    mapper: {
        serializedName: "x-ms-continuation",
        type: {
            name: "String",
        },
    },
};
exports.roleId1 = {
    parameterPath: "roleId",
    mapper: mappers_js_1.RoleAssignmentRequest,
};
exports.principalId1 = {
    parameterPath: "principalId",
    mapper: mappers_js_1.RoleAssignmentRequest,
};
exports.scope2 = {
    parameterPath: "scope",
    mapper: mappers_js_1.RoleAssignmentRequest,
};
exports.principalType = {
    parameterPath: ["options", "principalType"],
    mapper: mappers_js_1.RoleAssignmentRequest,
};
exports.roleAssignmentId = {
    parameterPath: "roleAssignmentId",
    mapper: {
        constraints: {
            MinLength: 1,
        },
        serializedName: "roleAssignmentId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.isBuiltIn = {
    parameterPath: ["options", "isBuiltIn"],
    mapper: {
        serializedName: "isBuiltIn",
        type: {
            name: "Boolean",
        },
    },
};
exports.roleDefinitionId = {
    parameterPath: "roleDefinitionId",
    mapper: {
        serializedName: "roleDefinitionId",
        required: true,
        type: {
            name: "String",
        },
    },
};
//# sourceMappingURL=parameters.js.map