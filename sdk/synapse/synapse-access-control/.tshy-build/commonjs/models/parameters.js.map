{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../../src/models/parameters.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  CheckPrincipalAccessRequest as CheckPrincipalAccessRequestMapper,\n  RoleAssignmentRequest as RoleAssignmentRequestMapper,\n} from \"../models/mappers.js\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json, text/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const subject: OperationParameter = {\n  parameterPath: \"subject\",\n  mapper: CheckPrincipalAccessRequestMapper,\n};\n\nexport const actions: OperationParameter = {\n  parameterPath: \"actions\",\n  mapper: CheckPrincipalAccessRequestMapper,\n};\n\nexport const scope: OperationParameter = {\n  parameterPath: \"scope\",\n  mapper: CheckPrincipalAccessRequestMapper,\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-12-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const roleId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"roleId\"],\n  mapper: {\n    serializedName: \"roleId\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const principalId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"principalId\"],\n  mapper: {\n    serializedName: \"principalId\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const scope1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"scope\"],\n  mapper: {\n    serializedName: \"scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const continuationToken: OperationParameter = {\n  parameterPath: [\"options\", \"continuationToken\"],\n  mapper: {\n    serializedName: \"x-ms-continuation\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const roleId1: OperationParameter = {\n  parameterPath: \"roleId\",\n  mapper: RoleAssignmentRequestMapper,\n};\n\nexport const principalId1: OperationParameter = {\n  parameterPath: \"principalId\",\n  mapper: RoleAssignmentRequestMapper,\n};\n\nexport const scope2: OperationParameter = {\n  parameterPath: \"scope\",\n  mapper: RoleAssignmentRequestMapper,\n};\n\nexport const principalType: OperationParameter = {\n  parameterPath: [\"options\", \"principalType\"],\n  mapper: RoleAssignmentRequestMapper,\n};\n\nexport const roleAssignmentId: OperationURLParameter = {\n  parameterPath: \"roleAssignmentId\",\n  mapper: {\n    constraints: {\n      MinLength: 1,\n    },\n    serializedName: \"roleAssignmentId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const isBuiltIn: OperationQueryParameter = {\n  parameterPath: [\"options\", \"isBuiltIn\"],\n  mapper: {\n    serializedName: \"isBuiltIn\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const roleDefinitionId: OperationURLParameter = {\n  parameterPath: \"roleDefinitionId\",\n  mapper: {\n    serializedName: \"roleDefinitionId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n"]}