"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoleAssignmentsListRoleAssignmentsHeaders = exports.SynapseRbacPermission = exports.SynapseRoleDefinition = exports.RoleAssignmentRequest = exports.RoleAssignmentDetailsList = exports.ErrorAdditionalInfo = exports.ErrorResponse = exports.ErrorContract = exports.RoleAssignmentDetails = exports.CheckAccessDecision = exports.CheckPrincipalAccessResponse = exports.RequiredAction = exports.SubjectInfo = exports.CheckPrincipalAccessRequest = void 0;
exports.CheckPrincipalAccessRequest = {
    type: {
        name: "Composite",
        className: "CheckPrincipalAccessRequest",
        modelProperties: {
            subject: {
                serializedName: "subject",
                type: {
                    name: "Composite",
                    className: "SubjectInfo",
                },
            },
            actions: {
                serializedName: "actions",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RequiredAction",
                        },
                    },
                },
            },
            scope: {
                serializedName: "scope",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.SubjectInfo = {
    type: {
        name: "Composite",
        className: "SubjectInfo",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                required: true,
                type: {
                    name: "Uuid",
                },
            },
            groupIds: {
                serializedName: "groupIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Uuid",
                        },
                    },
                },
            },
        },
    },
};
exports.RequiredAction = {
    type: {
        name: "Composite",
        className: "RequiredAction",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            },
            isDataAction: {
                serializedName: "isDataAction",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
        },
    },
};
exports.CheckPrincipalAccessResponse = {
    type: {
        name: "Composite",
        className: "CheckPrincipalAccessResponse",
        modelProperties: {
            accessDecisions: {
                serializedName: "AccessDecisions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CheckAccessDecision",
                        },
                    },
                },
            },
        },
    },
};
exports.CheckAccessDecision = {
    type: {
        name: "Composite",
        className: "CheckAccessDecision",
        modelProperties: {
            accessDecision: {
                serializedName: "accessDecision",
                type: {
                    name: "String",
                },
            },
            actionId: {
                serializedName: "actionId",
                type: {
                    name: "String",
                },
            },
            roleAssignment: {
                serializedName: "roleAssignment",
                type: {
                    name: "Composite",
                    className: "RoleAssignmentDetails",
                },
            },
        },
    },
};
exports.RoleAssignmentDetails = {
    type: {
        name: "Composite",
        className: "RoleAssignmentDetails",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String",
                },
            },
            roleDefinitionId: {
                serializedName: "roleDefinitionId",
                type: {
                    name: "Uuid",
                },
            },
            principalId: {
                serializedName: "principalId",
                type: {
                    name: "Uuid",
                },
            },
            scope: {
                serializedName: "scope",
                type: {
                    name: "String",
                },
            },
            principalType: {
                serializedName: "principalType",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ErrorContract = {
    type: {
        name: "Composite",
        className: "ErrorContract",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorResponse",
                },
            },
        },
    },
};
exports.ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorResponse",
                        },
                    },
                },
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo",
                        },
                    },
                },
            },
        },
    },
};
exports.ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } },
                },
            },
        },
    },
};
exports.RoleAssignmentDetailsList = {
    type: {
        name: "Composite",
        className: "RoleAssignmentDetailsList",
        modelProperties: {
            count: {
                serializedName: "count",
                type: {
                    name: "Number",
                },
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RoleAssignmentDetails",
                        },
                    },
                },
            },
        },
    },
};
exports.RoleAssignmentRequest = {
    type: {
        name: "Composite",
        className: "RoleAssignmentRequest",
        modelProperties: {
            roleId: {
                serializedName: "roleId",
                required: true,
                type: {
                    name: "Uuid",
                },
            },
            principalId: {
                serializedName: "principalId",
                required: true,
                type: {
                    name: "Uuid",
                },
            },
            scope: {
                serializedName: "scope",
                required: true,
                type: {
                    name: "String",
                },
            },
            principalType: {
                serializedName: "principalType",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.SynapseRoleDefinition = {
    type: {
        name: "Composite",
        className: "SynapseRoleDefinition",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "Uuid",
                },
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String",
                },
            },
            isBuiltIn: {
                serializedName: "isBuiltIn",
                type: {
                    name: "Boolean",
                },
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String",
                },
            },
            permissions: {
                serializedName: "permissions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SynapseRbacPermission",
                        },
                    },
                },
            },
            scopes: {
                serializedName: "scopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            availabilityStatus: {
                serializedName: "availabilityStatus",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.SynapseRbacPermission = {
    type: {
        name: "Composite",
        className: "SynapseRbacPermission",
        modelProperties: {
            actions: {
                serializedName: "actions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            notActions: {
                serializedName: "notActions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            dataActions: {
                serializedName: "dataActions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            notDataActions: {
                serializedName: "notDataActions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
exports.RoleAssignmentsListRoleAssignmentsHeaders = {
    type: {
        name: "Composite",
        className: "RoleAssignmentsListRoleAssignmentsHeaders",
        modelProperties: {
            xMsContinuation: {
                serializedName: "x-ms-continuation",
                type: {
                    name: "String",
                },
            },
        },
    },
};
//# sourceMappingURL=mappers.js.map