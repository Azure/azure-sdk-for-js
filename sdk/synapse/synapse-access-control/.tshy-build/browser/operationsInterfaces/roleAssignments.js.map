{"version":3,"file":"roleAssignments.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/roleAssignments.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport type {\n  RoleAssignmentDetails,\n  RoleAssignmentsListRoleAssignmentsOptionalParams,\n  SubjectInfo,\n  RequiredAction,\n  RoleAssignmentsCheckPrincipalAccessOptionalParams,\n  RoleAssignmentsCheckPrincipalAccessResponse,\n  RoleAssignmentsCreateRoleAssignmentOptionalParams,\n  RoleAssignmentsCreateRoleAssignmentResponse,\n  RoleAssignmentsGetRoleAssignmentByIdOptionalParams,\n  RoleAssignmentsGetRoleAssignmentByIdResponse,\n  RoleAssignmentsDeleteRoleAssignmentByIdOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a RoleAssignments. */\nexport interface RoleAssignments {\n  /**\n   * List role assignments.\n   * @param options - The options parameters.\n   */\n  listRoleAssignments(\n    options?: RoleAssignmentsListRoleAssignmentsOptionalParams,\n  ): PagedAsyncIterableIterator<RoleAssignmentDetails>;\n  /**\n   * Check if the given principalId has access to perform list of actions at a given scope.\n   * @param subject - Subject details\n   * @param actions - List of actions.\n   * @param scope - Scope at which the check access is done.\n   * @param options - The options parameters.\n   */\n  checkPrincipalAccess(\n    subject: SubjectInfo,\n    actions: RequiredAction[],\n    scope: string,\n    options?: RoleAssignmentsCheckPrincipalAccessOptionalParams,\n  ): Promise<RoleAssignmentsCheckPrincipalAccessResponse>;\n  /**\n   * Create role assignment.\n   * @param roleAssignmentId - The ID of the role assignment.\n   * @param roleId - Role ID of the Synapse Built-In Role\n   * @param principalId - Object ID of the AAD principal or security-group\n   * @param scope - Scope at which the role assignment is created\n   * @param options - The options parameters.\n   */\n  createRoleAssignment(\n    roleAssignmentId: string,\n    roleId: string,\n    principalId: string,\n    scope: string,\n    options?: RoleAssignmentsCreateRoleAssignmentOptionalParams,\n  ): Promise<RoleAssignmentsCreateRoleAssignmentResponse>;\n  /**\n   * Get role assignment by role assignment Id.\n   * @param roleAssignmentId - The ID of the role assignment.\n   * @param options - The options parameters.\n   */\n  getRoleAssignmentById(\n    roleAssignmentId: string,\n    options?: RoleAssignmentsGetRoleAssignmentByIdOptionalParams,\n  ): Promise<RoleAssignmentsGetRoleAssignmentByIdResponse>;\n  /**\n   * Delete role assignment by role assignment Id.\n   * @param roleAssignmentId - The ID of the role assignment.\n   * @param options - The options parameters.\n   */\n  deleteRoleAssignmentById(\n    roleAssignmentId: string,\n    options?: RoleAssignmentsDeleteRoleAssignmentByIdOptionalParams,\n  ): Promise<void>;\n}\n"]}