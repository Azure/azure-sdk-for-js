"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.statementId = exports.sparkStatementOptions = exports.sessionId = exports.sparkSessionOptions = exports.batchId = exports.sparkBatchJobOptions = exports.contentType = exports.detailed = exports.size = exports.fromParam = exports.sparkPoolName = exports.livyApiVersion = exports.endpoint = exports.accept = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.livyApiVersion = {
    parameterPath: "livyApiVersion",
    mapper: {
        serializedName: "livyApiVersion",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.sparkPoolName = {
    parameterPath: "sparkPoolName",
    mapper: {
        serializedName: "sparkPoolName",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.fromParam = {
    parameterPath: ["options", "from"],
    mapper: {
        serializedName: "from",
        type: {
            name: "Number",
        },
    },
};
exports.size = {
    parameterPath: ["options", "size"],
    mapper: {
        serializedName: "size",
        type: {
            name: "Number",
        },
    },
};
exports.detailed = {
    parameterPath: ["options", "detailed"],
    mapper: {
        serializedName: "detailed",
        type: {
            name: "Boolean",
        },
    },
};
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.sparkBatchJobOptions = {
    parameterPath: "sparkBatchJobOptions",
    mapper: mappers_js_1.SparkBatchJobOptions,
};
exports.batchId = {
    parameterPath: "batchId",
    mapper: {
        serializedName: "batchId",
        required: true,
        type: {
            name: "Number",
        },
    },
};
exports.sparkSessionOptions = {
    parameterPath: "sparkSessionOptions",
    mapper: mappers_js_1.SparkSessionOptions,
};
exports.sessionId = {
    parameterPath: "sessionId",
    mapper: {
        serializedName: "sessionId",
        required: true,
        type: {
            name: "Number",
        },
    },
};
exports.sparkStatementOptions = {
    parameterPath: "sparkStatementOptions",
    mapper: mappers_js_1.SparkStatementOptions,
};
exports.statementId = {
    parameterPath: "statementId",
    mapper: {
        serializedName: "statementId",
        required: true,
        type: {
            name: "Number",
        },
    },
};
//# sourceMappingURL=parameters.js.map