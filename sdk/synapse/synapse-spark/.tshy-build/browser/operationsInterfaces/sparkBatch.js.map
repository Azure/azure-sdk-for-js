{"version":3,"file":"sparkBatch.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/sparkBatch.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport type {\n  SparkBatchGetSparkBatchJobsOptionalParams,\n  SparkBatchGetSparkBatchJobsResponse,\n  SparkBatchJobOptions,\n  SparkBatchCreateSparkBatchJobOptionalParams,\n  SparkBatchCreateSparkBatchJobResponse,\n  SparkBatchGetSparkBatchJobOptionalParams,\n  SparkBatchGetSparkBatchJobResponse,\n  SparkBatchCancelSparkBatchJobOptionalParams,\n} from \"../models/index.js\";\n\n/** Interface representing a SparkBatch. */\nexport interface SparkBatch {\n  /**\n   * List all spark batch jobs which are running under a particular spark pool.\n   * @param options - The options parameters.\n   */\n  getSparkBatchJobs(\n    options?: SparkBatchGetSparkBatchJobsOptionalParams,\n  ): Promise<SparkBatchGetSparkBatchJobsResponse>;\n  /**\n   * Create new spark batch job.\n   * @param sparkBatchJobOptions - Livy compatible batch job request payload.\n   * @param options - The options parameters.\n   */\n  createSparkBatchJob(\n    sparkBatchJobOptions: SparkBatchJobOptions,\n    options?: SparkBatchCreateSparkBatchJobOptionalParams,\n  ): Promise<SparkBatchCreateSparkBatchJobResponse>;\n  /**\n   * Gets a single spark batch job.\n   * @param batchId - Identifier for the batch job.\n   * @param options - The options parameters.\n   */\n  getSparkBatchJob(\n    batchId: number,\n    options?: SparkBatchGetSparkBatchJobOptionalParams,\n  ): Promise<SparkBatchGetSparkBatchJobResponse>;\n  /**\n   * Cancels a running spark batch job.\n   * @param batchId - Identifier for the batch job.\n   * @param options - The options parameters.\n   */\n  cancelSparkBatchJob(\n    batchId: number,\n    options?: SparkBatchCancelSparkBatchJobOptionalParams,\n  ): Promise<void>;\n}\n"]}