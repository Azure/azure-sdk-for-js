/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link SparkJobType} that the service accepts. */
export var KnownSparkJobType;
(function (KnownSparkJobType) {
    /** SparkBatch */
    KnownSparkJobType["SparkBatch"] = "SparkBatch";
    /** SparkSession */
    KnownSparkJobType["SparkSession"] = "SparkSession";
})(KnownSparkJobType || (KnownSparkJobType = {}));
/** Known values of {@link SparkBatchJobResultType} that the service accepts. */
export var KnownSparkBatchJobResultType;
(function (KnownSparkBatchJobResultType) {
    /** Uncertain */
    KnownSparkBatchJobResultType["Uncertain"] = "Uncertain";
    /** Succeeded */
    KnownSparkBatchJobResultType["Succeeded"] = "Succeeded";
    /** Failed */
    KnownSparkBatchJobResultType["Failed"] = "Failed";
    /** Cancelled */
    KnownSparkBatchJobResultType["Cancelled"] = "Cancelled";
})(KnownSparkBatchJobResultType || (KnownSparkBatchJobResultType = {}));
/** Known values of {@link SchedulerCurrentState} that the service accepts. */
export var KnownSchedulerCurrentState;
(function (KnownSchedulerCurrentState) {
    /** Queued */
    KnownSchedulerCurrentState["Queued"] = "Queued";
    /** Scheduled */
    KnownSchedulerCurrentState["Scheduled"] = "Scheduled";
    /** Ended */
    KnownSchedulerCurrentState["Ended"] = "Ended";
})(KnownSchedulerCurrentState || (KnownSchedulerCurrentState = {}));
/** Known values of {@link PluginCurrentState} that the service accepts. */
export var KnownPluginCurrentState;
(function (KnownPluginCurrentState) {
    /** Preparation */
    KnownPluginCurrentState["Preparation"] = "Preparation";
    /** ResourceAcquisition */
    KnownPluginCurrentState["ResourceAcquisition"] = "ResourceAcquisition";
    /** Queued */
    KnownPluginCurrentState["Queued"] = "Queued";
    /** Submission */
    KnownPluginCurrentState["Submission"] = "Submission";
    /** Monitoring */
    KnownPluginCurrentState["Monitoring"] = "Monitoring";
    /** Cleanup */
    KnownPluginCurrentState["Cleanup"] = "Cleanup";
    /** Ended */
    KnownPluginCurrentState["Ended"] = "Ended";
})(KnownPluginCurrentState || (KnownPluginCurrentState = {}));
/** Known values of {@link SparkErrorSource} that the service accepts. */
export var KnownSparkErrorSource;
(function (KnownSparkErrorSource) {
    /** System */
    KnownSparkErrorSource["System"] = "System";
    /** User */
    KnownSparkErrorSource["User"] = "User";
    /** Unknown */
    KnownSparkErrorSource["Unknown"] = "Unknown";
    /** Dependency */
    KnownSparkErrorSource["Dependency"] = "Dependency";
})(KnownSparkErrorSource || (KnownSparkErrorSource = {}));
/** Known values of {@link LivyStates} that the service accepts. */
export var KnownLivyStates;
(function (KnownLivyStates) {
    /** NotStarted */
    KnownLivyStates["NotStarted"] = "not_started";
    /** Starting */
    KnownLivyStates["Starting"] = "starting";
    /** Idle */
    KnownLivyStates["Idle"] = "idle";
    /** Busy */
    KnownLivyStates["Busy"] = "busy";
    /** ShuttingDown */
    KnownLivyStates["ShuttingDown"] = "shutting_down";
    /** Error */
    KnownLivyStates["Error"] = "error";
    /** Dead */
    KnownLivyStates["Dead"] = "dead";
    /** Killed */
    KnownLivyStates["Killed"] = "killed";
    /** Success */
    KnownLivyStates["Success"] = "success";
    /** Running */
    KnownLivyStates["Running"] = "running";
    /** Recovering */
    KnownLivyStates["Recovering"] = "recovering";
})(KnownLivyStates || (KnownLivyStates = {}));
/** Known values of {@link SparkSessionResultType} that the service accepts. */
export var KnownSparkSessionResultType;
(function (KnownSparkSessionResultType) {
    /** Uncertain */
    KnownSparkSessionResultType["Uncertain"] = "Uncertain";
    /** Succeeded */
    KnownSparkSessionResultType["Succeeded"] = "Succeeded";
    /** Failed */
    KnownSparkSessionResultType["Failed"] = "Failed";
    /** Cancelled */
    KnownSparkSessionResultType["Cancelled"] = "Cancelled";
})(KnownSparkSessionResultType || (KnownSparkSessionResultType = {}));
/** Known values of {@link LivyStatementStates} that the service accepts. */
export var KnownLivyStatementStates;
(function (KnownLivyStatementStates) {
    /** Waiting */
    KnownLivyStatementStates["Waiting"] = "waiting";
    /** Running */
    KnownLivyStatementStates["Running"] = "running";
    /** Available */
    KnownLivyStatementStates["Available"] = "available";
    /** Error */
    KnownLivyStatementStates["Error"] = "error";
    /** Cancelling */
    KnownLivyStatementStates["Cancelling"] = "cancelling";
    /** Cancelled */
    KnownLivyStatementStates["Cancelled"] = "cancelled";
})(KnownLivyStatementStates || (KnownLivyStatementStates = {}));
/** Known values of {@link SparkStatementLanguageType} that the service accepts. */
export var KnownSparkStatementLanguageType;
(function (KnownSparkStatementLanguageType) {
    /** Spark */
    KnownSparkStatementLanguageType["Spark"] = "spark";
    /** PySpark */
    KnownSparkStatementLanguageType["PySpark"] = "pyspark";
    /** DotNetSpark */
    KnownSparkStatementLanguageType["DotNetSpark"] = "dotnetspark";
    /** Sql */
    KnownSparkStatementLanguageType["Sql"] = "sql";
})(KnownSparkStatementLanguageType || (KnownSparkStatementLanguageType = {}));
//# sourceMappingURL=index.js.map