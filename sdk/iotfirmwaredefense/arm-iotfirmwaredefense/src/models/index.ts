/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type SummaryResourcePropertiesUnion =
  | SummaryResourceProperties
  | FirmwareSummary
  | CveSummary
  | BinaryHardeningSummaryResource
  | CryptoCertificateSummaryResource
  | CryptoKeySummaryResource;

/** List of binary hardening results. */
export interface BinaryHardeningListResult {
  /**
   * The list of binary hardening results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BinaryHardeningResource[];
  /** The uri to fetch the next page of resources. */
  nextLink?: string;
}

/** Binary hardening of a firmware. */
export interface BinaryHardeningResult {
  /** ID for the binary hardening result. */
  binaryHardeningId?: string;
  /** Binary hardening features. */
  features?: BinaryHardeningFeatures;
  /** The architecture of the uploaded firmware. */
  architecture?: string;
  /** The executable path. */
  filePath?: string;
  /** The executable class to indicate 32 or 64 bit. */
  class?: string;
  /** The runpath of the uploaded firmware. */
  runpath?: string;
  /** The rpath of the uploaded firmware. */
  rpath?: string;
}

/** Binary hardening features. */
export interface BinaryHardeningFeatures {
  /** NX (no-execute) flag. */
  nx?: boolean;
  /** PIE (position independent executable) flag. */
  pie?: boolean;
  /** RELRO (relocation read-only) flag. */
  relro?: boolean;
  /** Canary (stack canaries) flag. */
  canary?: boolean;
  /** Stripped flag. */
  stripped?: boolean;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** List of crypto certificates. */
export interface CryptoCertificateListResult {
  /**
   * The list of crypto certificate results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: CryptoCertificateResource[];
  /** The uri to fetch the next page of resources. */
  nextLink?: string;
}

/** Crypto certificate properties */
export interface CryptoCertificate {
  /** ID for the certificate result. */
  cryptoCertId?: string;
  /** Name of the certificate. */
  name?: string;
  /** Subject information of the certificate. */
  subject?: CryptoCertificateEntity;
  /** Issuer information of the certificate. */
  issuer?: CryptoCertificateEntity;
  /** Issue date for the certificate. */
  issuedDate?: Date;
  /** Expiration date for the certificate. */
  expirationDate?: Date;
  /** Role of the certificate (Root CA, etc) */
  role?: string;
  /** The signature algorithm used in the certificate. */
  signatureAlgorithm?: string;
  /** Size of the certificate's key in bits */
  keySize?: number;
  /** Key algorithm used in the certificate. */
  keyAlgorithm?: string;
  /** Encoding used for the certificate. */
  encoding?: string;
  /** Serial number of the certificate. */
  serialNumber?: string;
  /** Fingerprint of the certificate. */
  fingerprint?: string;
  /** List of functions the certificate can fulfill. */
  usage?: string[];
  /**
   * List of files where this certificate was found.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly filePaths?: string[];
  /** A matching paired private key. */
  pairedKey?: PairedKey;
  /** Indicates if the certificate is expired. */
  isExpired?: boolean;
  /** Indicates if the certificate is self-signed. */
  isSelfSigned?: boolean;
  /** Indicates the signature algorithm used is insecure. */
  isWeakSignature?: boolean;
  /** Indicates the certificate's key size is considered too small to be secure for the key algorithm. */
  isShortKeySize?: boolean;
}

/** Information on an entity (distinguished name) in a cryptographic certificate. */
export interface CryptoCertificateEntity {
  /** Common name of the certificate entity. */
  commonName?: string;
  /** Organization of the certificate entity. */
  organization?: string;
  /** The organizational unit of the certificate entity. */
  organizationalUnit?: string;
  /** Geographical state or province of the certificate entity. */
  state?: string;
  /** Country code of the certificate entity. */
  country?: string;
}

/** Details of a matching paired key or certificate. */
export interface PairedKey {
  /** ID of the paired key or certificate. */
  id?: string;
  /** The type indicating whether the paired object is a key or certificate. */
  type?: string;
}

/** List of crypto keys. */
export interface CryptoKeyListResult {
  /**
   * The list of crypto key results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: CryptoKeyResource[];
  /** The uri to fetch the next page of resources. */
  nextLink?: string;
}

/** Crypto key properties */
export interface CryptoKey {
  /** ID for the key result. */
  cryptoKeyId?: string;
  /** Type of the key (public or private). */
  keyType?: string;
  /** Size of the key in bits. */
  keySize?: number;
  /** Key algorithm name. */
  keyAlgorithm?: string;
  /** Functions the key can fulfill. */
  usage?: string[];
  /**
   * List of files where this key was found.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly filePaths?: string[];
  /** A matching paired key or certificate. */
  pairedKey?: PairedKey;
  /** Indicates the key size is considered too small to be secure for the algorithm. */
  isShortKeySize?: boolean;
}

/** List of CVE results. */
export interface CveListResult {
  /**
   * The list of CVE results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: CveResource[];
  /** The uri to fetch the next page of resources. */
  nextLink?: string;
}

/** Details of a CVE detected in firmware. */
export interface CveResult {
  /** ID of the CVE result. */
  cveId?: string;
  /** The SBOM component for the CVE. */
  component?: CveComponent;
  /** Severity of the CVE. */
  severity?: string;
  /** Name of the CVE. */
  name?: string;
  /** A single CVSS score to represent the CVE. If a V3 score is specified, then it will use the V3 score. Otherwise if the V2 score is specified it will be the V2 score. */
  cvssScore?: string;
  /** CVSS version of the CVE. */
  cvssVersion?: string;
  /** CVSS V2 score of the CVE. */
  cvssV2Score?: string;
  /** CVSS V3 score of the CVE. */
  cvssV3Score?: string;
  /**
   * The list of reference links for the CVE.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly links?: CveLink[];
  /** The CVE description. */
  description?: string;
}

/** Properties of the SBOM component for a CVE. */
export interface CveComponent {
  /** ID of the SBOM component */
  componentId?: string;
  /** Name of the SBOM component */
  name?: string;
  /** Version of the SBOM component. */
  version?: string;
}

/** Properties of a reference link for a CVE. */
export interface CveLink {
  /** The destination of the reference link. */
  href?: string;
  /** The label of the reference link. */
  label?: string;
}

/** List of firmwares */
export interface FirmwareList {
  /**
   * The list of firmwares.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Firmware[];
  /** The uri to fetch the next page of asset. */
  nextLink?: string;
}

/** Firmware properties. */
export interface FirmwareProperties {
  /** File name for a firmware that user uploaded. */
  fileName?: string;
  /** Firmware vendor. */
  vendor?: string;
  /** Firmware model. */
  model?: string;
  /** Firmware version. */
  version?: string;
  /** User-specified description of the firmware. */
  description?: string;
  /** File size of the uploaded firmware image. */
  fileSize?: number;
  /** The status of firmware scan. */
  status?: Status;
  /** A list of errors or other messages generated during firmware analysis */
  statusMessages?: StatusMessage[];
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Error and status message */
export interface StatusMessage {
  /** The error code */
  errorCode?: number;
  /** The error or status message */
  message?: string;
}

/** Firmware definition */
export interface FirmwareUpdateDefinition {
  /** The editable properties of a firmware */
  properties?: FirmwareProperties;
}

/** Url data for creating or accessing a blob file. */
export interface UrlToken {
  /**
   * SAS URL for creating or accessing a blob file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** List of password hash results */
export interface PasswordHashListResult {
  /**
   * The list of password hash results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PasswordHashResource[];
  /** The uri to fetch the next page of resources. */
  nextLink?: string;
}

/** Password hash properties */
export interface PasswordHash {
  /** ID for password hash */
  passwordHashId?: string;
  /** File path of the password hash */
  filePath?: string;
  /** Salt of the password hash */
  salt?: string;
  /** Hash of the password */
  hash?: string;
  /** Context of password hash */
  context?: string;
  /** User name of password hash */
  username?: string;
  /** Algorithm of the password hash */
  algorithm?: string;
}

/** List of SBOM results. */
export interface SbomComponentListResult {
  /**
   * The list of SBOM components.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SbomComponentResource[];
  /** The uri to fetch the next page of resources. */
  nextLink?: string;
}

/** SBOM component of a firmware. */
export interface SbomComponent {
  /** ID for the component. */
  componentId?: string;
  /** Name for the component. */
  componentName?: string;
  /** Version for the component. */
  version?: string;
  /** License for the component. */
  license?: string;
  /** File paths related to the component. */
  filePaths?: string[];
}

/** List of analysis summaries. */
export interface SummaryListResult {
  /**
   * The list of summaries.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SummaryResource[];
  /** The uri to fetch the next page of resources. */
  nextLink?: string;
}

/** Properties of an analysis summary. */
export interface SummaryResourceProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  summaryType:
    | "Firmware"
    | "CVE"
    | "BinaryHardening"
    | "CryptoCertificate"
    | "CryptoKey";
}

/** Return a list of firmware analysis workspaces. */
export interface WorkspaceList {
  /**
   * The list of firmware analysis workspaces.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Workspace[];
  /** The uri to fetch the next page of asset. */
  nextLink?: string;
}

/** Workspace properties. */
export interface WorkspaceProperties {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Firmware analysis workspace. */
export interface WorkspaceUpdateDefinition {
  /** The editable workspace properties. */
  properties?: WorkspaceProperties;
}

/** Properties for generating an upload URL */
export interface GenerateUploadUrlRequest {
  /** A unique ID for the firmware to be uploaded. */
  firmwareId?: string;
}

/** binary hardening analysis result resource */
export interface BinaryHardeningResource extends Resource {
  /** The properties of a binary hardening result found within a firmware image */
  properties?: BinaryHardeningResult;
}

/** Crypto certificate resource */
export interface CryptoCertificateResource extends Resource {
  /** The properties of a crypto certificate found within a firmware image */
  properties?: CryptoCertificate;
}

/** Crypto key resource */
export interface CryptoKeyResource extends Resource {
  /** The properties of a crypto key found within a firmware image */
  properties?: CryptoKey;
}

/** CVE analysis result resource */
export interface CveResource extends Resource {
  /** The properties of a CVE result found within a firmware image */
  properties?: CveResult;
}

/** Firmware definition */
export interface Firmware extends Resource {
  /** The properties of a firmware */
  properties?: FirmwareProperties;
}

/** Password hash resource */
export interface PasswordHashResource extends Resource {
  /** The properties of a password hash found within a firmware image */
  properties?: PasswordHash;
}

/** SBOM analysis result resource */
export interface SbomComponentResource extends Resource {
  /** The properties of an SBOM component found within a firmware image */
  properties?: SbomComponent;
}

/** The object representing a firmware analysis summary resource. */
export interface SummaryResource extends Resource {
  /**
   * Properties of an analysis summary.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: SummaryResourcePropertiesUnion;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Properties for high level summary of firmware analysis results. */
export interface FirmwareSummary extends SummaryResourceProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  summaryType: "Firmware";
  /** Total extracted size of the firmware in bytes. */
  extractedSize?: number;
  /** Firmware file size in bytes. */
  fileSize?: number;
  /** Extracted file count. */
  extractedFileCount?: number;
  /** Components count. */
  componentCount?: number;
  /** Binary count */
  binaryCount?: number;
  /** Time used for analysis */
  analysisTimeSeconds?: number;
  /** The number of root file systems found. */
  rootFileSystems?: number;
}

/** Properties for a CVE analysis summary. */
export interface CveSummary extends SummaryResourceProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  summaryType: "CVE";
  /** The total number of critical severity CVEs detected */
  critical?: number;
  /** The total number of high severity CVEs detected */
  high?: number;
  /** The total number of medium severity CVEs detected */
  medium?: number;
  /** The total number of low severity CVEs detected */
  low?: number;
  /** The total number of unknown severity CVEs detected */
  unknown?: number;
}

/** Properties for a binary hardening analysis summary. */
export interface BinaryHardeningSummaryResource
  extends SummaryResourceProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  summaryType: "BinaryHardening";
  /** Total number of binaries that were analyzed */
  totalFiles?: number;
  /** NX summary percentage */
  nx?: number;
  /** PIE summary percentage */
  pie?: number;
  /** RELRO summary percentage */
  relro?: number;
  /** Canary summary percentage */
  canary?: number;
  /** Stripped summary percentage */
  stripped?: number;
}

/** Properties for cryptographic certificate summary. */
export interface CryptoCertificateSummaryResource
  extends SummaryResourceProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  summaryType: "CryptoCertificate";
  /** Total number of certificates found. */
  totalCertificates?: number;
  /** Total number of paired private keys found for the certificates. */
  pairedKeys?: number;
  /** Total number of expired certificates found. */
  expired?: number;
  /** Total number of nearly expired certificates found. */
  expiringSoon?: number;
  /** Total number of certificates found using a weak signature algorithm. */
  weakSignature?: number;
  /** Total number of certificates found that are self-signed. */
  selfSigned?: number;
  /** Total number of certificates found that have an insecure key size for the key algorithm. */
  shortKeySize?: number;
}

/** Properties for cryptographic key summary. */
export interface CryptoKeySummaryResource extends SummaryResourceProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  summaryType: "CryptoKey";
  /** Total number of cryptographic keys found. */
  totalKeys?: number;
  /** Total number of (non-certificate) public keys found. */
  publicKeys?: number;
  /** Total number of private keys found. */
  privateKeys?: number;
  /** Total number of keys found that have a matching paired key or certificate. */
  pairedKeys?: number;
  /** Total number of keys found that have an insecure key size for the algorithm. */
  shortKeySize?: number;
}

/** Firmware analysis workspace. */
export interface Workspace extends TrackedResource {
  /** Workspace properties. */
  properties?: WorkspaceProperties;
}

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** Pending */
  Pending = "Pending",
  /** Extracting */
  Extracting = "Extracting",
  /** Analyzing */
  Analyzing = "Analyzing",
  /** Ready */
  Ready = "Ready",
  /** Error */
  Error = "Error",
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Extracting** \
 * **Analyzing** \
 * **Ready** \
 * **Error**
 */
export type Status = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Canceled */
  Canceled = "Canceled",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Succeeded** \
 * **Canceled** \
 * **Failed**
 */
export type ProvisioningState = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link SummaryType} that the service accepts. */
export enum KnownSummaryType {
  /** Firmware */
  Firmware = "Firmware",
  /** CVE */
  CVE = "CVE",
  /** BinaryHardening */
  BinaryHardening = "BinaryHardening",
  /** CryptoCertificate */
  CryptoCertificate = "CryptoCertificate",
  /** CryptoKey */
  CryptoKey = "CryptoKey",
}

/**
 * Defines values for SummaryType. \
 * {@link KnownSummaryType} can be used interchangeably with SummaryType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Firmware** \
 * **CVE** \
 * **BinaryHardening** \
 * **CryptoCertificate** \
 * **CryptoKey**
 */
export type SummaryType = string;

/** Known values of {@link SummaryName} that the service accepts. */
export enum KnownSummaryName {
  /** Firmware */
  Firmware = "Firmware",
  /** CVE */
  CVE = "CVE",
  /** BinaryHardening */
  BinaryHardening = "BinaryHardening",
  /** CryptoCertificate */
  CryptoCertificate = "CryptoCertificate",
  /** CryptoKey */
  CryptoKey = "CryptoKey",
}

/**
 * Defines values for SummaryName. \
 * {@link KnownSummaryName} can be used interchangeably with SummaryName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Firmware** \
 * **CVE** \
 * **BinaryHardening** \
 * **CryptoCertificate** \
 * **CryptoKey**
 */
export type SummaryName = string;

/** Optional parameters. */
export interface BinaryHardeningListByFirmwareOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmware operation. */
export type BinaryHardeningListByFirmwareResponse = BinaryHardeningListResult;

/** Optional parameters. */
export interface BinaryHardeningListByFirmwareNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmwareNext operation. */
export type BinaryHardeningListByFirmwareNextResponse =
  BinaryHardeningListResult;

/** Optional parameters. */
export interface CryptoCertificatesListByFirmwareOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmware operation. */
export type CryptoCertificatesListByFirmwareResponse =
  CryptoCertificateListResult;

/** Optional parameters. */
export interface CryptoCertificatesListByFirmwareNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmwareNext operation. */
export type CryptoCertificatesListByFirmwareNextResponse =
  CryptoCertificateListResult;

/** Optional parameters. */
export interface CryptoKeysListByFirmwareOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmware operation. */
export type CryptoKeysListByFirmwareResponse = CryptoKeyListResult;

/** Optional parameters. */
export interface CryptoKeysListByFirmwareNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmwareNext operation. */
export type CryptoKeysListByFirmwareNextResponse = CryptoKeyListResult;

/** Optional parameters. */
export interface CvesListByFirmwareOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmware operation. */
export type CvesListByFirmwareResponse = CveListResult;

/** Optional parameters. */
export interface CvesListByFirmwareNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmwareNext operation. */
export type CvesListByFirmwareNextResponse = CveListResult;

/** Optional parameters. */
export interface FirmwaresListByWorkspaceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByWorkspace operation. */
export type FirmwaresListByWorkspaceResponse = FirmwareList;

/** Optional parameters. */
export interface FirmwaresCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type FirmwaresCreateResponse = Firmware;

/** Optional parameters. */
export interface FirmwaresUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type FirmwaresUpdateResponse = Firmware;

/** Optional parameters. */
export interface FirmwaresDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface FirmwaresGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FirmwaresGetResponse = Firmware;

/** Optional parameters. */
export interface FirmwaresGenerateDownloadUrlOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the generateDownloadUrl operation. */
export type FirmwaresGenerateDownloadUrlResponse = UrlToken;

/** Optional parameters. */
export interface FirmwaresGenerateFilesystemDownloadUrlOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the generateFilesystemDownloadUrl operation. */
export type FirmwaresGenerateFilesystemDownloadUrlResponse = UrlToken;

/** Optional parameters. */
export interface FirmwaresListByWorkspaceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByWorkspaceNext operation. */
export type FirmwaresListByWorkspaceNextResponse = FirmwareList;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface PasswordHashesListByFirmwareOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmware operation. */
export type PasswordHashesListByFirmwareResponse = PasswordHashListResult;

/** Optional parameters. */
export interface PasswordHashesListByFirmwareNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmwareNext operation. */
export type PasswordHashesListByFirmwareNextResponse = PasswordHashListResult;

/** Optional parameters. */
export interface SbomComponentsListByFirmwareOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmware operation. */
export type SbomComponentsListByFirmwareResponse = SbomComponentListResult;

/** Optional parameters. */
export interface SbomComponentsListByFirmwareNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmwareNext operation. */
export type SbomComponentsListByFirmwareNextResponse = SbomComponentListResult;

/** Optional parameters. */
export interface SummariesListByFirmwareOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmware operation. */
export type SummariesListByFirmwareResponse = SummaryListResult;

/** Optional parameters. */
export interface SummariesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SummariesGetResponse = SummaryResource;

/** Optional parameters. */
export interface SummariesListByFirmwareNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirmwareNext operation. */
export type SummariesListByFirmwareNextResponse = SummaryListResult;

/** Optional parameters. */
export interface WorkspacesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type WorkspacesListBySubscriptionResponse = WorkspaceList;

/** Optional parameters. */
export interface WorkspacesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type WorkspacesListByResourceGroupResponse = WorkspaceList;

/** Optional parameters. */
export interface WorkspacesCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type WorkspacesCreateResponse = Workspace;

/** Optional parameters. */
export interface WorkspacesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type WorkspacesUpdateResponse = Workspace;

/** Optional parameters. */
export interface WorkspacesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WorkspacesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkspacesGetResponse = Workspace;

/** Optional parameters. */
export interface WorkspacesGenerateUploadUrlOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the generateUploadUrl operation. */
export type WorkspacesGenerateUploadUrlResponse = UrlToken;

/** Optional parameters. */
export interface WorkspacesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type WorkspacesListBySubscriptionNextResponse = WorkspaceList;

/** Optional parameters. */
export interface WorkspacesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type WorkspacesListByResourceGroupNextResponse = WorkspaceList;

/** Optional parameters. */
export interface IoTFirmwareDefenseClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
