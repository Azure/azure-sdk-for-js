/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Firmware,
  FirmwareListByWorkspaceOptionalParams,
  Component,
  FirmwareListGenerateComponentListOptionalParams,
  BinaryHardening,
  FirmwareListGenerateBinaryHardeningListOptionalParams,
  PasswordHash,
  FirmwareListGeneratePasswordHashListOptionalParams,
  Cve,
  FirmwareListGenerateCveListOptionalParams,
  CryptoCertificate,
  FirmwareListGenerateCryptoCertificateListOptionalParams,
  CryptoKey,
  FirmwareListGenerateCryptoKeyListOptionalParams,
  FirmwareCreateOptionalParams,
  FirmwareCreateResponse,
  FirmwareUpdateDefinition,
  FirmwareUpdateOptionalParams,
  FirmwareUpdateResponse,
  FirmwareDeleteOptionalParams,
  FirmwareGetOptionalParams,
  FirmwareGetResponse,
  FirmwareGenerateDownloadUrlOptionalParams,
  FirmwareGenerateDownloadUrlResponse,
  FirmwareGenerateFilesystemDownloadUrlOptionalParams,
  FirmwareGenerateFilesystemDownloadUrlResponse,
  FirmwareGenerateSummaryOptionalParams,
  FirmwareGenerateSummaryResponse,
  FirmwareGenerateComponentDetailsOptionalParams,
  FirmwareGenerateComponentDetailsResponse,
  FirmwareGenerateBinaryHardeningSummaryOptionalParams,
  FirmwareGenerateBinaryHardeningSummaryResponse,
  FirmwareGenerateBinaryHardeningDetailsOptionalParams,
  FirmwareGenerateBinaryHardeningDetailsResponse,
  FirmwareGenerateCveSummaryOptionalParams,
  FirmwareGenerateCveSummaryResponse,
  FirmwareGenerateCryptoCertificateSummaryOptionalParams,
  FirmwareGenerateCryptoCertificateSummaryResponse,
  FirmwareGenerateCryptoKeySummaryOptionalParams,
  FirmwareGenerateCryptoKeySummaryResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FirmwareOperations. */
export interface FirmwareOperations {
  /**
   * Lists all of firmwares inside a workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param options The options parameters.
   */
  listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    options?: FirmwareListByWorkspaceOptionalParams
  ): PagedAsyncIterableIterator<Firmware>;
  /**
   * The operation to list all components result for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  listGenerateComponentList(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareListGenerateComponentListOptionalParams
  ): PagedAsyncIterableIterator<Component>;
  /**
   * The operation to list all binary hardening result for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  listGenerateBinaryHardeningList(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareListGenerateBinaryHardeningListOptionalParams
  ): PagedAsyncIterableIterator<BinaryHardening>;
  /**
   * The operation to list all password hashes for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  listGeneratePasswordHashList(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareListGeneratePasswordHashListOptionalParams
  ): PagedAsyncIterableIterator<PasswordHash>;
  /**
   * The operation to list all cve results for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  listGenerateCveList(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareListGenerateCveListOptionalParams
  ): PagedAsyncIterableIterator<Cve>;
  /**
   * The operation to list all crypto certificates for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  listGenerateCryptoCertificateList(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareListGenerateCryptoCertificateListOptionalParams
  ): PagedAsyncIterableIterator<CryptoCertificate>;
  /**
   * The operation to list all crypto keys for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  listGenerateCryptoKeyList(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareListGenerateCryptoKeyListOptionalParams
  ): PagedAsyncIterableIterator<CryptoKey>;
  /**
   * The operation to create a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param firmware Details of the firmware being created or updated.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    firmware: Firmware,
    options?: FirmwareCreateOptionalParams
  ): Promise<FirmwareCreateResponse>;
  /**
   * The operation to update firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param firmware Details of the firmware being created or updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    firmware: FirmwareUpdateDefinition,
    options?: FirmwareUpdateOptionalParams
  ): Promise<FirmwareUpdateResponse>;
  /**
   * The operation to delete a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareDeleteOptionalParams
  ): Promise<void>;
  /**
   * Get firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGetOptionalParams
  ): Promise<FirmwareGetResponse>;
  /**
   * The operation to a url for file download.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateDownloadUrl(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateDownloadUrlOptionalParams
  ): Promise<FirmwareGenerateDownloadUrlResponse>;
  /**
   * The operation to a url for tar file download.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateFilesystemDownloadUrl(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateFilesystemDownloadUrlOptionalParams
  ): Promise<FirmwareGenerateFilesystemDownloadUrlResponse>;
  /**
   * The operation to get a scan summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateSummary(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateSummaryOptionalParams
  ): Promise<FirmwareGenerateSummaryResponse>;
  /**
   * The operation to get component details for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateComponentDetails(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateComponentDetailsOptionalParams
  ): Promise<FirmwareGenerateComponentDetailsResponse>;
  /**
   * The operation to list the binary hardening summary percentages for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateBinaryHardeningSummary(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateBinaryHardeningSummaryOptionalParams
  ): Promise<FirmwareGenerateBinaryHardeningSummaryResponse>;
  /**
   * The operation to get binary hardening details for a firmware.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateBinaryHardeningDetails(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateBinaryHardeningDetailsOptionalParams
  ): Promise<FirmwareGenerateBinaryHardeningDetailsResponse>;
  /**
   * The operation to provide a high level summary of the CVEs reported for the firmware image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateCveSummary(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateCveSummaryOptionalParams
  ): Promise<FirmwareGenerateCveSummaryResponse>;
  /**
   * The operation to provide a high level summary of the discovered cryptographic certificates reported
   * for the firmware image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateCryptoCertificateSummary(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateCryptoCertificateSummaryOptionalParams
  ): Promise<FirmwareGenerateCryptoCertificateSummaryResponse>;
  /**
   * The operation to provide a high level summary of the discovered cryptographic keys reported for the
   * firmware image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the firmware analysis workspace.
   * @param firmwareId The id of the firmware.
   * @param options The options parameters.
   */
  generateCryptoKeySummary(
    resourceGroupName: string,
    workspaceName: string,
    firmwareId: string,
    options?: FirmwareGenerateCryptoKeySummaryOptionalParams
  ): Promise<FirmwareGenerateCryptoKeySummaryResponse>;
}
