/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  FluidRelayServer,
  FluidRelayServersListBySubscriptionOptionalParams,
  FluidRelayServersListByResourceGroupOptionalParams,
  FluidRelayServersGetOptionalParams,
  FluidRelayServersGetResponse,
  FluidRelayServersCreateOrUpdateOptionalParams,
  FluidRelayServersCreateOrUpdateResponse,
  FluidRelayServerUpdate,
  FluidRelayServersUpdateOptionalParams,
  FluidRelayServersUpdateResponse,
  FluidRelayServersDeleteOptionalParams,
  RegenerateKeyRequest,
  FluidRelayServersRegenerateKeyOptionalParams,
  FluidRelayServersRegenerateKeyResponse,
  FluidRelayServersListKeysOptionalParams,
  FluidRelayServersListKeysResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FluidRelayServers. */
export interface FluidRelayServers {
  /**
   * List all Fluid Relay servers in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: FluidRelayServersListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<FluidRelayServer>;
  /**
   * List all Fluid Relay servers in a resource group.
   * @param resourceGroup The resource group containing the resource.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroup: string,
    options?: FluidRelayServersListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<FluidRelayServer>;
  /**
   * Get a Fluid Relay server.
   * @param resourceGroup The resource group containing the resource.
   * @param fluidRelayServerName The Fluid Relay server resource name.
   * @param options The options parameters.
   */
  get(
    resourceGroup: string,
    fluidRelayServerName: string,
    options?: FluidRelayServersGetOptionalParams
  ): Promise<FluidRelayServersGetResponse>;
  /**
   * Create or Update a Fluid Relay server.
   * @param resourceGroup The resource group containing the resource.
   * @param fluidRelayServerName The Fluid Relay server resource name.
   * @param resource The details of the Fluid Relay server resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroup: string,
    fluidRelayServerName: string,
    resource: FluidRelayServer,
    options?: FluidRelayServersCreateOrUpdateOptionalParams
  ): Promise<FluidRelayServersCreateOrUpdateResponse>;
  /**
   * Update a Fluid Relay server.
   * @param resourceGroup The resource group containing the resource.
   * @param fluidRelayServerName The Fluid Relay server resource name.
   * @param resource The details of the Fluid Relay server resource included in update calls.
   * @param options The options parameters.
   */
  update(
    resourceGroup: string,
    fluidRelayServerName: string,
    resource: FluidRelayServerUpdate,
    options?: FluidRelayServersUpdateOptionalParams
  ): Promise<FluidRelayServersUpdateResponse>;
  /**
   * Delete a Fluid Relay server.
   * @param resourceGroup The resource group containing the resource.
   * @param fluidRelayServerName The Fluid Relay server resource name.
   * @param options The options parameters.
   */
  delete(
    resourceGroup: string,
    fluidRelayServerName: string,
    options?: FluidRelayServersDeleteOptionalParams
  ): Promise<void>;
  /**
   * Regenerate the primary or secondary key for this server.
   * @param resourceGroup The resource group containing the resource.
   * @param fluidRelayServerName The Fluid Relay server resource name.
   * @param parameters The details of which keys to generate.
   * @param options The options parameters.
   */
  regenerateKey(
    resourceGroup: string,
    fluidRelayServerName: string,
    parameters: RegenerateKeyRequest,
    options?: FluidRelayServersRegenerateKeyOptionalParams
  ): Promise<FluidRelayServersRegenerateKeyResponse>;
  /**
   * Get primary and secondary key for this server.
   * @param resourceGroup The resource group containing the resource.
   * @param fluidRelayServerName The Fluid Relay server resource name.
   * @param options The options parameters.
   */
  listKeys(
    resourceGroup: string,
    fluidRelayServerName: string,
    options?: FluidRelayServersListKeysOptionalParams
  ): Promise<FluidRelayServersListKeysResponse>;
}
