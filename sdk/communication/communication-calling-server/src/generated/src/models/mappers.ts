/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const AudioRoutingGroupResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudioRoutingGroupResult",
    modelProperties: {
      audioRoutingMode: {
        serializedName: "audioRoutingMode",
        type: {
          name: "String"
        }
      },
      targets: {
        serializedName: "targets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      }
    }
  }
};

export const CommunicationIdentifierModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationIdentifierModel",
    modelProperties: {
      rawId: {
        serializedName: "rawId",
        type: {
          name: "String"
        }
      },
      communicationUser: {
        serializedName: "communicationUser",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      microsoftTeamsUser: {
        serializedName: "microsoftTeamsUser",
        type: {
          name: "Composite",
          className: "MicrosoftTeamsUserIdentifierModel"
        }
      }
    }
  }
};

export const CommunicationUserIdentifierModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationUserIdentifierModel",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhoneNumberIdentifierModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberIdentifierModel",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MicrosoftTeamsUserIdentifierModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftTeamsUserIdentifierModel",
    modelProperties: {
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String"
        }
      },
      isAnonymous: {
        serializedName: "isAnonymous",
        type: {
          name: "Boolean"
        }
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationErrorResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const CommunicationError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationError"
            }
          }
        }
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const UpdateAudioRoutingGroupRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateAudioRoutingGroupRequest",
    modelProperties: {
      targets: {
        serializedName: "targets",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      }
    }
  }
};

export const CreateCallRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateCallRequest",
    modelProperties: {
      alternateCallerId: {
        serializedName: "alternateCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      targets: {
        serializedName: "targets",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        required: true,
        type: {
          name: "String"
        }
      },
      requestedMediaTypes: {
        serializedName: "requestedMediaTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["audio", "video"]
            }
          }
        }
      },
      requestedCallEvents: {
        serializedName: "requestedCallEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["participantsUpdated", "toneReceived"]
            }
          }
        }
      }
    }
  }
};

export const CreateCallResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateCallResult",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallConnectionProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallConnectionProperties",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      alternateCallerId: {
        serializedName: "alternateCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      targets: {
        serializedName: "targets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      callConnectionState: {
        serializedName: "callConnectionState",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String"
        }
      },
      requestedMediaTypes: {
        serializedName: "requestedMediaTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["audio", "video"]
            }
          }
        }
      },
      requestedCallEvents: {
        serializedName: "requestedCallEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["participantsUpdated", "toneReceived"]
            }
          }
        }
      },
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      }
    }
  }
};

export const CallLocatorModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallLocatorModel",
    modelProperties: {
      groupCallId: {
        serializedName: "groupCallId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlayAudioRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioRequest",
    modelProperties: {
      audioFileUri: {
        serializedName: "audioFileUri",
        required: true,
        type: {
          name: "String"
        }
      },
      loop: {
        serializedName: "loop",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      audioFileId: {
        serializedName: "audioFileId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlayAudioResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioResult",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultDetails: {
        serializedName: "resultDetails",
        type: {
          name: "Composite",
          className: "CallingOperationResultDetails"
        }
      }
    }
  }
};

export const CallingOperationResultDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallingOperationResultDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      },
      subcode: {
        serializedName: "subcode",
        required: true,
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransferToParticipantRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferToParticipantRequest",
    modelProperties: {
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      alternateCallerId: {
        serializedName: "alternateCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      userToUserInformation: {
        serializedName: "userToUserInformation",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransferCallResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferCallResult",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultDetails: {
        serializedName: "resultDetails",
        type: {
          name: "Composite",
          className: "CallingOperationResultDetails"
        }
      }
    }
  }
};

export const TransferToCallRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferToCallRequest",
    modelProperties: {
      targetCallConnectionId: {
        serializedName: "targetCallConnectionId",
        required: true,
        type: {
          name: "String"
        }
      },
      userToUserInformation: {
        serializedName: "userToUserInformation",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AudioRoutingGroupRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AudioRoutingGroupRequest",
    modelProperties: {
      audioRoutingMode: {
        serializedName: "audioRoutingMode",
        required: true,
        type: {
          name: "String"
        }
      },
      targets: {
        serializedName: "targets",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      }
    }
  }
};

export const CreateAudioRoutingGroupResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateAudioRoutingGroupResult",
    modelProperties: {
      audioRoutingGroupId: {
        serializedName: "audioRoutingGroupId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetAllParticipantsWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetAllParticipantsWithCallLocatorRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      }
    }
  }
};

export const CallParticipant: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallParticipant",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantId: {
        serializedName: "participantId",
        type: {
          name: "String"
        }
      },
      isMuted: {
        serializedName: "isMuted",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AddParticipantWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantWithCallLocatorRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String"
        }
      },
      alternateCallerId: {
        serializedName: "alternateCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddParticipantResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantResult",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultDetails: {
        serializedName: "resultDetails",
        type: {
          name: "Composite",
          className: "CallingOperationResultDetails"
        }
      }
    }
  }
};

export const RemoveParticipantWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoveParticipantWithCallLocatorRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const GetParticipantWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetParticipantWithCallLocatorRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const PlayAudioToParticipantWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioToParticipantWithCallLocatorRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String"
        }
      },
      audioFileUri: {
        serializedName: "audioFileUri",
        required: true,
        type: {
          name: "String"
        }
      },
      loop: {
        serializedName: "loop",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      audioFileId: {
        serializedName: "audioFileId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CancelParticipantMediaOperationWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CancelParticipantMediaOperationWithCallLocatorRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      mediaOperationId: {
        serializedName: "mediaOperationId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddParticipantRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantRequest",
    modelProperties: {
      alternateCallerId: {
        serializedName: "alternateCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoveParticipantRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoveParticipantRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const GetParticipantRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetParticipantRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const PlayAudioToParticipantRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioToParticipantRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      audioFileUri: {
        serializedName: "audioFileUri",
        required: true,
        type: {
          name: "String"
        }
      },
      loop: {
        serializedName: "loop",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      audioFileId: {
        serializedName: "audioFileId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CancelParticipantMediaOperationRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CancelParticipantMediaOperationRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      mediaOperationId: {
        serializedName: "mediaOperationId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MuteParticipantRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MuteParticipantRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UnmuteParticipantRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UnmuteParticipantRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HoldMeetingAudioRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HoldMeetingAudioRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const ResumeMeetingAudioRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResumeMeetingAudioRequest",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const StartCallRecordingWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartCallRecordingWithCallLocatorRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      recordingStateCallbackUri: {
        serializedName: "recordingStateCallbackUri",
        type: {
          name: "String"
        }
      },
      recordingContentType: {
        serializedName: "recordingContentType",
        type: {
          name: "String"
        }
      },
      recordingChannelType: {
        serializedName: "recordingChannelType",
        type: {
          name: "String"
        }
      },
      recordingFormatType: {
        serializedName: "recordingFormatType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StartCallRecordingResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartCallRecordingResult",
    modelProperties: {
      recordingId: {
        serializedName: "recordingId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallRecordingProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallRecordingProperties",
    modelProperties: {
      recordingState: {
        serializedName: "recordingState",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JoinCallRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JoinCallRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        required: true,
        type: {
          name: "String"
        }
      },
      requestedMediaTypes: {
        serializedName: "requestedMediaTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["audio", "video"]
            }
          }
        }
      },
      requestedCallEvents: {
        serializedName: "requestedCallEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["participantsUpdated", "toneReceived"]
            }
          }
        }
      }
    }
  }
};

export const JoinCallResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JoinCallResult",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlayAudioWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioWithCallLocatorRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String"
        }
      },
      audioFileUri: {
        serializedName: "audioFileUri",
        required: true,
        type: {
          name: "String"
        }
      },
      loop: {
        serializedName: "loop",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      audioFileId: {
        serializedName: "audioFileId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CancelMediaOperationWithCallLocatorRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CancelMediaOperationWithCallLocatorRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      mediaOperationId: {
        serializedName: "mediaOperationId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnswerCallRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnswerCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String"
        }
      },
      requestedMediaTypes: {
        serializedName: "requestedMediaTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["audio", "video"]
            }
          }
        }
      },
      requestedCallEvents: {
        serializedName: "requestedCallEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["participantsUpdated", "toneReceived"]
            }
          }
        }
      }
    }
  }
};

export const AnswerCallResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnswerCallResult",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RejectCallRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RejectCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String"
        }
      },
      callRejectReason: {
        serializedName: "callRejectReason",
        type: {
          name: "Enum",
          allowedValues: ["none", "busy", "forbidden"]
        }
      }
    }
  }
};

export const RedirectCallRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedirectCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const CallConnectionStateChangedEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallConnectionStateChangedEvent",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      callConnectionState: {
        serializedName: "callConnectionState",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallRecordingStateChangeEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallRecordingStateChangeEvent",
    modelProperties: {
      recordingId: {
        serializedName: "recordingId",
        type: {
          name: "String"
        }
      },
      callRecordingState: {
        serializedName: "callRecordingState",
        required: true,
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "startDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocatorModel"
        }
      }
    }
  }
};

export const AddParticipantResultEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantResultEvent",
    modelProperties: {
      resultDetails: {
        serializedName: "resultDetails",
        type: {
          name: "Composite",
          className: "CallingOperationResultDetails"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParticipantsUpdatedEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ParticipantsUpdatedEvent",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      participants: {
        serializedName: "participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CallParticipant"
            }
          }
        }
      }
    }
  }
};

export const PlayAudioResultEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioResultEvent",
    modelProperties: {
      resultDetails: {
        serializedName: "resultDetails",
        type: {
          name: "Composite",
          className: "CallingOperationResultDetails"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToneReceivedEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToneReceivedEvent",
    modelProperties: {
      toneInfo: {
        serializedName: "toneInfo",
        type: {
          name: "Composite",
          className: "ToneInfo"
        }
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToneInfo: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToneInfo",
    modelProperties: {
      sequenceId: {
        serializedName: "sequenceId",
        required: true,
        type: {
          name: "Number"
        }
      },
      tone: {
        serializedName: "tone",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransferCallResultEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferCallResultEvent",
    modelProperties: {
      resultDetails: {
        serializedName: "resultDetails",
        type: {
          name: "Composite",
          className: "CallingOperationResultDetails"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};
