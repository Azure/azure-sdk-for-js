/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { NetworkRelayRestClient } from "../networkRelayRestClient";
import { CommunicationNetworkTraversalIssueTurnCredentialsResponse } from "../models";

/**
 * Class representing a CommunicationNetworkTraversal.
 */
export class CommunicationNetworkTraversal {
  private readonly client: NetworkRelayRestClient;

  /**
   * Initialize a new instance of the class CommunicationNetworkTraversal class.
   * @param client Reference to the service client
   */
  constructor(client: NetworkRelayRestClient) {
    this.client = client;
  }

  /**
   * Issue TURN credentials for an existing identity.
   * @param id Identifier of the existing identity to issue credentials for.
   * @param options The options parameters.
   */
  issueTurnCredentials(
    id: string,
    options?: coreHttp.OperationOptions
  ): Promise<CommunicationNetworkTraversalIssueTurnCredentialsResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { id, options: operationOptions },
      issueTurnCredentialsOperationSpec
    ) as Promise<CommunicationNetworkTraversalIssueTurnCredentialsResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const issueTurnCredentialsOperationSpec: coreHttp.OperationSpec = {
  path: "/turn/{id}/:issueCredentials",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.CommunicationRelayConfiguration
    },
    default: {
      bodyMapper: Mappers.CommunicationErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.endpoint, Parameters.id],
  serializer
};
