/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  CommunicationIdentityCreateRequest as CommunicationIdentityCreateRequestMapper,
  TeamsUserExchangeTokenRequest as TeamsUserExchangeTokenRequestMapper,
  CommunicationIdentityAccessTokenRequest as CommunicationIdentityAccessTokenRequestMapper
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const createTokenWithScopes: OperationParameter = {
  parameterPath: ["options", "createTokenWithScopes"],
  mapper: CommunicationIdentityCreateRequestMapper
};

export const expiresInMinutes: OperationParameter = {
  parameterPath: ["options", "expiresInMinutes"],
  mapper: CommunicationIdentityCreateRequestMapper
};

export const endpoint: OperationURLParameter = {
  parameterPath: "endpoint",
  mapper: {
    serializedName: "endpoint",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-10-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const id: OperationURLParameter = {
  parameterPath: "id",
  mapper: {
    serializedName: "id",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const token: OperationParameter = {
  parameterPath: "token",
  mapper: TeamsUserExchangeTokenRequestMapper
};

export const appId: OperationParameter = {
  parameterPath: "appId",
  mapper: TeamsUserExchangeTokenRequestMapper
};

export const userId: OperationParameter = {
  parameterPath: "userId",
  mapper: TeamsUserExchangeTokenRequestMapper
};

export const scopes: OperationParameter = {
  parameterPath: "scopes",
  mapper: CommunicationIdentityAccessTokenRequestMapper
};

export const expiresInMinutes1: OperationParameter = {
  parameterPath: ["options", "expiresInMinutes"],
  mapper: CommunicationIdentityAccessTokenRequestMapper
};
