/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  CommunicationIdentityCreateRequest as CommunicationIdentityCreateRequestMapper,
  TeamsUserExchangeTokenRequest as TeamsUserExchangeTokenRequestMapper,
  CommunicationIdentityAccessTokenRequest as CommunicationIdentityAccessTokenRequestMapper,
  TeamsExtensionAssignmentCreateOrUpdateRequest as TeamsExtensionAssignmentCreateOrUpdateRequestMapper,
  EntraAssignmentCreateOrUpdateRequest as EntraAssignmentCreateOrUpdateRequestMapper,
} from "../models/mappers.js";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const customId: OperationParameter = {
  parameterPath: ["options", "customId"],
  mapper: CommunicationIdentityCreateRequestMapper,
};

export const createTokenWithScopes: OperationParameter = {
  parameterPath: ["options", "createTokenWithScopes"],
  mapper: CommunicationIdentityCreateRequestMapper,
};

export const expiresInMinutes: OperationParameter = {
  parameterPath: ["options", "expiresInMinutes"],
  mapper: CommunicationIdentityCreateRequestMapper,
};

export const endpoint: OperationURLParameter = {
  parameterPath: "endpoint",
  mapper: {
    serializedName: "endpoint",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2025-03-02-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const id: OperationURLParameter = {
  parameterPath: "id",
  mapper: {
    serializedName: "id",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const token: OperationParameter = {
  parameterPath: "token",
  mapper: TeamsUserExchangeTokenRequestMapper,
};

export const appId: OperationParameter = {
  parameterPath: "appId",
  mapper: TeamsUserExchangeTokenRequestMapper,
};

export const userId: OperationParameter = {
  parameterPath: "userId",
  mapper: TeamsUserExchangeTokenRequestMapper,
};

export const scopes: OperationParameter = {
  parameterPath: "scopes",
  mapper: CommunicationIdentityAccessTokenRequestMapper,
};

export const expiresInMinutes1: OperationParameter = {
  parameterPath: ["options", "expiresInMinutes"],
  mapper: CommunicationIdentityAccessTokenRequestMapper,
};

export const body3: OperationParameter = {
  parameterPath: "body",
  mapper: {
    serializedName: "body",
    required: true,
    type: {
      name: "Dictionary",
      value: { type: { name: "any" } },
    },
  },
};

export const tenantId: OperationURLParameter = {
  parameterPath: "tenantId",
  mapper: {
    serializedName: "tenantId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const objectId: OperationURLParameter = {
  parameterPath: "objectId",
  mapper: {
    serializedName: "objectId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const principalType: OperationParameter = {
  parameterPath: "principalType",
  mapper: TeamsExtensionAssignmentCreateOrUpdateRequestMapper,
};

export const clientIds: OperationParameter = {
  parameterPath: ["options", "clientIds"],
  mapper: TeamsExtensionAssignmentCreateOrUpdateRequestMapper,
};

export const contentType1: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/merge-patch+json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const body5: OperationParameter = {
  parameterPath: "body",
  mapper: {
    serializedName: "body",
    required: true,
    type: {
      name: "Dictionary",
      value: {
        type: {
          name: "Composite",
          className: "EntraAssignmentCreateOrUpdateRequest",
        },
      },
    },
  },
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const tenantId1: OperationParameter = {
  parameterPath: "tenantId",
  mapper: EntraAssignmentCreateOrUpdateRequestMapper,
};

export const principalType1: OperationParameter = {
  parameterPath: "principalType",
  mapper: EntraAssignmentCreateOrUpdateRequestMapper,
};

export const clientIds1: OperationParameter = {
  parameterPath: "clientIds",
  mapper: EntraAssignmentCreateOrUpdateRequestMapper,
};
