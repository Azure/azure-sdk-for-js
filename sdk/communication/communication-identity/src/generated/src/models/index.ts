/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export interface CommunicationIdentityCreateRequest {
  /**
   * Also create access token for the created identity.
   */
  createTokenWithScopes?: CommunicationIdentityTokenScope[];
}

/**
 * A communication identity with access token.
 */
export interface CommunicationIdentityAccessTokenResult {
  /**
   * A communication identity.
   */
  identity: CommunicationIdentity;
  /**
   * An access token.
   */
  accessToken?: CommunicationIdentityAccessToken;
}

/**
 * A communication identity.
 */
export interface CommunicationIdentity {
  /**
   * Identifier of the identity.
   */
  id: string;
}

/**
 * An access token.
 */
export interface CommunicationIdentityAccessToken {
  /**
   * The access token issued for the identity.
   */
  token: string;
  /**
   * The expiry time of the token.
   */
  expiresOn: Date;
}

/**
 * The Communication Services error.
 */
export interface CommunicationErrorResponse {
  /**
   * The Communication Services error.
   */
  error: CommunicationError;
}

/**
 * The Communication Services error.
 */
export interface CommunicationError {
  /**
   * The error code.
   */
  code: string;
  /**
   * The error message.
   */
  message: string;
  /**
   * The error target.
   */
  readonly target?: string;
  /**
   * Further details about specific errors that led to this error.
   */
  readonly details?: CommunicationError[];
  /**
   * The inner error if any.
   */
  readonly innerError?: CommunicationError;
}

export interface TeamsUserAccessTokenRequest {
  /**
   * Azure Active Directory access token to acquire a new ACS access token.
   */
  token: string;
}

export interface CommunicationIdentityAccessTokenRequest {
  /**
   * List of scopes attached to the token.
   */
  scopes: CommunicationIdentityTokenScope[];
}

/**
 * Defines values for CommunicationIdentityTokenScope.
 */
export type CommunicationIdentityTokenScope = "chat" | "voip";

/**
 * Optional parameters.
 */
export interface CommunicationIdentityCreateOptionalParams
  extends coreHttp.OperationOptions {
  body?: CommunicationIdentityCreateRequest;
}

/**
 * Contains response data for the create operation.
 */
export type CommunicationIdentityCreateResponse = CommunicationIdentityAccessTokenResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CommunicationIdentityAccessTokenResult;
  };
};

/**
 * Contains response data for the exchangeTeamsUserAccessToken operation.
 */
export type CommunicationIdentityExchangeTeamsUserAccessTokenResponse = CommunicationIdentityAccessToken & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CommunicationIdentityAccessToken;
  };
};

/**
 * Contains response data for the issueAccessToken operation.
 */
export type CommunicationIdentityIssueAccessTokenResponse = CommunicationIdentityAccessToken & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CommunicationIdentityAccessToken;
  };
};

/**
 * Optional parameters.
 */
export interface IdentityRestClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
