{"version":3,"file":"teamsExtensionToken.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/teamsExtensionToken.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAE9C,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAOtD,uDAAuD;AACvD,MAAM,OAAO,uBAAuB;IAGlC;;;OAGG;IACH,YAAY,MAA0B;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,QAAQ,CACZ,IAA6B,EAC7B,OAAmD;QAEnD,OAAO,aAAa,CAAC,QAAQ,CAC3B,6BAA6B,EAC7B,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,EACb,KAAK,EAAE,OAAO,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,IAAI,EAAE,OAAO,EAAE,EACjB,qBAAqB,CAC0B,CAAC;QACpD,CAAC,CACF,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,qBAAqB,GAA6B;IACtD,IAAI,EAAE,6CAA6C;IACnD,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;KACF;IACD,WAAW,EAAE,UAAU,CAAC,KAAK;IAC7B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;IACpC,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport { TeamsExtensionToken } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { IdentityRestClient } from \"../identityRestClient.js\";\nimport {\n  TeamsExtensionTokenExchangeOptionalParams,\n  TeamsExtensionTokenExchangeResponse,\n} from \"../models/index.js\";\n\n/** Class containing TeamsExtensionToken operations. */\nexport class TeamsExtensionTokenImpl implements TeamsExtensionToken {\n  private readonly client: IdentityRestClient;\n\n  /**\n   * Initialize a new instance of the class TeamsExtensionToken class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IdentityRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Exchanges a Teams Phone token for an ACS user access token.\n   * @param body Request payload for the token exchange.\n   * @param options The options parameters.\n   */\n  async exchange(\n    body: Record<string, unknown>,\n    options?: TeamsExtensionTokenExchangeOptionalParams,\n  ): Promise<TeamsExtensionTokenExchangeResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.exchange\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { body, options },\n          exchangeOperationSpec,\n        ) as Promise<TeamsExtensionTokenExchangeResponse>;\n      },\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst exchangeOperationSpec: coreClient.OperationSpec = {\n  path: \"/access/teamsExtension/:exchangeAccessToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentityAccessTokenResult,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\n"]}