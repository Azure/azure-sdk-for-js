{"version":3,"file":"communicationIdentityOperations.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/communicationIdentityOperations.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport { CommunicationIdentityOperations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { IdentityRestClient } from \"../identityRestClient.js\";\nimport {\n  CommunicationIdentityCreateOptionalParams,\n  CommunicationIdentityCreateResponse,\n  CommunicationIdentityDeleteOptionalParams,\n  CommunicationIdentityGetOptionalParams,\n  CommunicationIdentityGetResponse,\n  CommunicationIdentityRevokeAccessTokensOptionalParams,\n  CommunicationIdentityExchangeTeamsUserAccessTokenOptionalParams,\n  CommunicationIdentityExchangeTeamsUserAccessTokenResponse,\n  CommunicationIdentityTokenScope,\n  CommunicationIdentityIssueAccessTokenOptionalParams,\n  CommunicationIdentityIssueAccessTokenResponse,\n} from \"../models/index.js\";\n\n/** Class containing CommunicationIdentityOperations operations. */\nexport class CommunicationIdentityOperationsImpl\n  implements CommunicationIdentityOperations\n{\n  private readonly client: IdentityRestClient;\n\n  /**\n   * Initialize a new instance of the class CommunicationIdentityOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IdentityRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Create a new identity with an optional customId mapping, and optionally, an access token. If called\n   * again with the same customId, the returned identity will be the same as the one returned previously.\n   * @param options The options parameters.\n   */\n  async create(\n    options?: CommunicationIdentityCreateOptionalParams,\n  ): Promise<CommunicationIdentityCreateResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.create\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { options },\n          createOperationSpec,\n        ) as Promise<CommunicationIdentityCreateResponse>;\n      },\n    );\n  }\n\n  /**\n   * Delete the identity, revoke all tokens for the identity and delete all associated data.\n   * @param id Identifier of the identity to be deleted.\n   * @param options The options parameters.\n   */\n  async delete(\n    id: string,\n    options?: CommunicationIdentityDeleteOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.delete\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { id, options },\n          deleteOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * Get an identity by its id.\n   * @param id Identifier of the identity.\n   * @param options The options parameters.\n   */\n  async get(\n    id: string,\n    options?: CommunicationIdentityGetOptionalParams,\n  ): Promise<CommunicationIdentityGetResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.get\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { id, options },\n          getOperationSpec,\n        ) as Promise<CommunicationIdentityGetResponse>;\n      },\n    );\n  }\n\n  /**\n   * Revoke all access tokens for the specific identity.\n   * @param id Identifier of the identity.\n   * @param options The options parameters.\n   */\n  async revokeAccessTokens(\n    id: string,\n    options?: CommunicationIdentityRevokeAccessTokensOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.revokeAccessTokens\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { id, options },\n          revokeAccessTokensOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * Exchange an Entra ID access token of a Teams user for a new Communication Identity access token with\n   * a matching expiration time.\n   * @param token Entra ID access token of a Teams User to acquire a new Communication Identity access\n   *              token.\n   * @param appId Client ID of an Entra ID application to be verified against the appid claim in the\n   *              Entra ID access token.\n   * @param userId Object ID of an Entra ID user (Teams User) to be verified against the oid claim in the\n   *               Entra ID access token.\n   * @param options The options parameters.\n   */\n  async exchangeTeamsUserAccessToken(\n    token: string,\n    appId: string,\n    userId: string,\n    options?: CommunicationIdentityExchangeTeamsUserAccessTokenOptionalParams,\n  ): Promise<CommunicationIdentityExchangeTeamsUserAccessTokenResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.exchangeTeamsUserAccessToken\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { token, appId, userId, options },\n          exchangeTeamsUserAccessTokenOperationSpec,\n        ) as Promise<CommunicationIdentityExchangeTeamsUserAccessTokenResponse>;\n      },\n    );\n  }\n\n  /**\n   * Issue a new token for an identity.\n   * @param id Identifier of the identity to issue token for.\n   * @param scopes List of scopes attached to the token.\n   * @param options The options parameters.\n   */\n  async issueAccessToken(\n    id: string,\n    scopes: CommunicationIdentityTokenScope[],\n    options?: CommunicationIdentityIssueAccessTokenOptionalParams,\n  ): Promise<CommunicationIdentityIssueAccessTokenResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.issueAccessToken\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { id, scopes, options },\n          issueAccessTokenOperationSpec,\n        ) as Promise<CommunicationIdentityIssueAccessTokenResponse>;\n      },\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.CommunicationIdentityAccessTokenResult,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: {\n    parameterPath: {\n      customId: [\"options\", \"customId\"],\n      createTokenWithScopes: [\"options\", \"createTokenWithScopes\"],\n      expiresInMinutes: [\"options\", \"expiresInMinutes\"],\n    },\n    mapper: Mappers.CommunicationIdentityCreateRequest,\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentity,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst revokeAccessTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities/{id}/:revokeAccessTokens\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst exchangeTeamsUserAccessTokenOperationSpec: coreClient.OperationSpec = {\n  path: \"/teamsUser/:exchangeAccessToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentityAccessToken,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: {\n    parameterPath: { token: [\"token\"], appId: [\"appId\"], userId: [\"userId\"] },\n    mapper: { ...Mappers.TeamsUserExchangeTokenRequest, required: true },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst issueAccessTokenOperationSpec: coreClient.OperationSpec = {\n  path: \"/identities/{id}/:issueAccessToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentityAccessToken,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: {\n    parameterPath: {\n      scopes: [\"scopes\"],\n      expiresInMinutes: [\"options\", \"expiresInMinutes\"],\n    },\n    mapper: {\n      ...Mappers.CommunicationIdentityAccessTokenRequest,\n      required: true,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\n"]}