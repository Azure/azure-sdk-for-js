{"version":3,"file":"entraIdAssignment.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/entraIdAssignment.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAEH,8CAA8C;AAE9C,uEAAiD;AACjD,sEAAgD;AAChD,4EAAsD;AAWtD,qDAAqD;AACrD,MAAa,qBAAqB;IAGhC;;;OAGG;IACH,YAAY,MAA0B;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,GAAG,CACP,QAAgB,EAChB,OAA4C;QAE5C,OAAO,0BAAa,CAAC,QAAQ,CAC3B,wBAAwB,EACxB,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,EACb,KAAK,EAAE,OAAO,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,gBAAgB,CACwB,CAAC;QAC7C,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,MAAM,CACV,QAAgB,EAChB,QAAgB,EAChB,aAAiC,EACjC,SAAmB,EACnB,OAA+C;QAE/C,OAAO,0BAAa,CAAC,QAAQ,CAC3B,2BAA2B,EAC3B,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,EACb,KAAK,EAAE,OAAO,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EACzD,mBAAmB,CACwB,CAAC;QAChD,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,MAAM,CACV,QAAgB,EAChB,OAA+C;QAE/C,OAAO,0BAAa,CAAC,QAAQ,CAC3B,2BAA2B,EAC3B,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,EACb,KAAK,EAAE,OAAO,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,mBAAmB,CACH,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;CACF;AAjFD,sDAiFC;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EAAE,sCAAsC;IAC5C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;IACzD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,sCAAsC;IAC5C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;KACF;IACD,WAAW,EAAE;QACX,aAAa,EAAE;YACb,QAAQ,EAAE,CAAC,UAAU,CAAC;YACtB,aAAa,EAAE,CAAC,eAAe,CAAC;YAChC,SAAS,EAAE,CAAC,WAAW,CAAC;SACzB;QACD,MAAM,kCAAO,OAAO,CAAC,oCAAoC,KAAE,QAAQ,EAAE,IAAI,GAAE;KAC5E;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;IACzD,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,sCAAsC;IAC5C,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;IACzD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport { EntraIdAssignment } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { IdentityRestClient } from \"../identityRestClient.js\";\nimport {\n  EntraIdAssignmentGetOptionalParams,\n  EntraIdAssignmentGetResponse,\n  EntraPrincipalType,\n  EntraIdAssignmentUpsertOptionalParams,\n  EntraIdAssignmentUpsertResponse,\n  EntraIdAssignmentDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/** Class containing EntraIdAssignment operations. */\nexport class EntraIdAssignmentImpl implements EntraIdAssignment {\n  private readonly client: IdentityRestClient;\n\n  /**\n   * Initialize a new instance of the class EntraIdAssignment class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IdentityRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get Entra access assignment by object id.\n   * @param objectId objectId we want to get the assignment for. AcsResourceId is taken from\n   *                 authentication.\n   * @param options The options parameters.\n   */\n  async get(\n    objectId: string,\n    options?: EntraIdAssignmentGetOptionalParams,\n  ): Promise<EntraIdAssignmentGetResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.get\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { objectId, options },\n          getOperationSpec,\n        ) as Promise<EntraIdAssignmentGetResponse>;\n      },\n    );\n  }\n\n  /**\n   * Creates or replaces an Entra access assignment.\n   * @param objectId objectId we want to update the assignment for.\n   * @param tenantId\n   * @param principalType\n   * @param clientIds Array of EntraAssignmentCreateOrUpdateRequestClientIdsItem\n   * @param options The options parameters.\n   */\n  async upsert(\n    objectId: string,\n    tenantId: string,\n    principalType: EntraPrincipalType,\n    clientIds: string[],\n    options?: EntraIdAssignmentUpsertOptionalParams,\n  ): Promise<EntraIdAssignmentUpsertResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.upsert\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { objectId, tenantId, principalType, clientIds, options },\n          upsertOperationSpec,\n        ) as Promise<EntraIdAssignmentUpsertResponse>;\n      },\n    );\n  }\n\n  /**\n   * Removes an Entra access assignment.\n   * @param objectId objectId we want to remove the assignment for. AcsResourceId is taken from\n   *                 authentication.\n   * @param options The options parameters.\n   */\n  async delete(\n    objectId: string,\n    options?: EntraIdAssignmentDeleteOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.delete\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { objectId, options },\n          deleteOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/access/entra/assignments/{objectId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntraAssignment,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.objectId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst upsertOperationSpec: coreClient.OperationSpec = {\n  path: \"/access/entra/assignments/{objectId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntraAssignment,\n    },\n    201: {\n      bodyMapper: Mappers.EntraAssignment,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: {\n    parameterPath: {\n      tenantId: [\"tenantId\"],\n      principalType: [\"principalType\"],\n      clientIds: [\"clientIds\"],\n    },\n    mapper: { ...Mappers.EntraAssignmentCreateOrUpdateRequest, required: true },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.objectId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/access/entra/assignments/{objectId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.objectId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}