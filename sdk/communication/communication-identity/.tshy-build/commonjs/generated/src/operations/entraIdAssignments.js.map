{"version":3,"file":"entraIdAssignments.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/entraIdAssignments.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { EntraIdAssignments } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { IdentityRestClient } from \"../identityRestClient.js\";\nimport {\n  EntraAssignment,\n  EntraAssignmentCreateOrUpdateRequest,\n  EntraIdAssignmentsUpdateNextOptionalParams,\n  EntraIdAssignmentsUpdateOptionalParams,\n  EntraIdAssignmentsUpdateResponse,\n  EntraIdAssignmentsListOptionalParams,\n  EntraIdAssignmentsListResponse,\n  EntraIdAssignmentsUpdateNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EntraIdAssignments operations. */\nexport class EntraIdAssignmentsImpl implements EntraIdAssignments {\n  private readonly client: IdentityRestClient;\n\n  /**\n   * Initialize a new instance of the class EntraIdAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IdentityRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Updates Entra access assignments in bulk.\n   * @param body Set of assignments to be added, updated or removed.\n   * @param options The options parameters.\n   */\n  public listUpdate(\n    body: { [propertyName: string]: EntraAssignmentCreateOrUpdateRequest },\n    options?: EntraIdAssignmentsUpdateOptionalParams,\n  ): PagedAsyncIterableIterator<EntraAssignment> {\n    const iter = this.updatePagingAll(body, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.updatePagingPage(body, options, settings);\n      },\n    };\n  }\n\n  private async *updatePagingPage(\n    body: { [propertyName: string]: EntraAssignmentCreateOrUpdateRequest },\n    options?: EntraIdAssignmentsUpdateOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<EntraAssignment[]> {\n    let result: EntraIdAssignmentsUpdateResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._update(body, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._updateNext(body, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *updatePagingAll(\n    body: { [propertyName: string]: EntraAssignmentCreateOrUpdateRequest },\n    options?: EntraIdAssignmentsUpdateOptionalParams,\n  ): AsyncIterableIterator<EntraAssignment> {\n    for await (const page of this.updatePagingPage(body, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Updates Entra access assignments in bulk.\n   * @param body Set of assignments to be added, updated or removed.\n   * @param options The options parameters.\n   */\n  private async _update(\n    body: { [propertyName: string]: EntraAssignmentCreateOrUpdateRequest },\n    options?: EntraIdAssignmentsUpdateOptionalParams,\n  ): Promise<EntraIdAssignmentsUpdateResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient._update\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { body, options },\n          updateOperationSpec,\n        ) as Promise<EntraIdAssignmentsUpdateResponse>;\n      },\n    );\n  }\n\n  /**\n   * Lists Entra access assignments.\n   * @param options The options parameters.\n   */\n  async list(\n    options?: EntraIdAssignmentsListOptionalParams,\n  ): Promise<EntraIdAssignmentsListResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient.list\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { options },\n          listOperationSpec,\n        ) as Promise<EntraIdAssignmentsListResponse>;\n      },\n    );\n  }\n\n  /**\n   * UpdateNext\n   * @param body Set of assignments to be added, updated or removed.\n   * @param nextLink The nextLink from the previous successful call to the Update method.\n   * @param options The options parameters.\n   */\n  private async _updateNext(\n    body: { [propertyName: string]: EntraAssignmentCreateOrUpdateRequest },\n    nextLink: string,\n    options?: EntraIdAssignmentsUpdateNextOptionalParams,\n  ): Promise<EntraIdAssignmentsUpdateNextResponse> {\n    return tracingClient.withSpan(\n      \"IdentityRestClient._updateNext\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { body, nextLink, options },\n          updateNextOperationSpec,\n        ) as Promise<EntraIdAssignmentsUpdateNextResponse>;\n      },\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/access/entra/assignments\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntraAssignmentsResponse,\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.body5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/access/entra/assignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntraAssignmentsResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntraAssignmentsResponse,\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer,\n};\n"]}