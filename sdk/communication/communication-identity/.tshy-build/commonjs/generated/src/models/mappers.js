"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EntraAssignment = exports.EntraAssignmentsResponse = exports.EntraAssignmentCreateOrUpdateRequest = exports.TeamsExtensionAssignmentCreateOrUpdateRequest = exports.TeamsExtensionAssignmentResponse = exports.CommunicationIdentityAccessTokenRequest = exports.TeamsUserExchangeTokenRequest = exports.CommunicationError = exports.CommunicationErrorResponse = exports.CommunicationIdentityAccessToken = exports.CommunicationIdentity = exports.CommunicationIdentityAccessTokenResult = exports.CommunicationIdentityCreateRequest = void 0;
exports.CommunicationIdentityCreateRequest = {
    type: {
        name: "Composite",
        className: "CommunicationIdentityCreateRequest",
        modelProperties: {
            customId: {
                constraints: {
                    MinLength: 1,
                },
                serializedName: "customId",
                type: {
                    name: "String",
                },
            },
            createTokenWithScopes: {
                serializedName: "createTokenWithScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            expiresInMinutes: {
                defaultValue: 1440,
                constraints: {
                    InclusiveMaximum: 1440,
                    InclusiveMinimum: 60,
                },
                serializedName: "expiresInMinutes",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.CommunicationIdentityAccessTokenResult = {
    type: {
        name: "Composite",
        className: "CommunicationIdentityAccessTokenResult",
        modelProperties: {
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentity",
                },
            },
            accessToken: {
                serializedName: "accessToken",
                type: {
                    name: "Composite",
                    className: "CommunicationIdentityAccessToken",
                },
            },
        },
    },
};
exports.CommunicationIdentity = {
    type: {
        name: "Composite",
        className: "CommunicationIdentity",
        modelProperties: {
            customId: {
                serializedName: "customId",
                type: {
                    name: "String",
                },
            },
            lastTokenIssuedAt: {
                serializedName: "lastTokenIssuedAt",
                type: {
                    name: "DateTime",
                },
            },
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.CommunicationIdentityAccessToken = {
    type: {
        name: "Composite",
        className: "CommunicationIdentityAccessToken",
        modelProperties: {
            token: {
                serializedName: "token",
                required: true,
                type: {
                    name: "String",
                },
            },
            expiresOn: {
                serializedName: "expiresOn",
                required: true,
                type: {
                    name: "DateTime",
                },
            },
        },
    },
};
exports.CommunicationErrorResponse = {
    type: {
        name: "Composite",
        className: "CommunicationErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "CommunicationError",
                },
            },
        },
    },
};
exports.CommunicationError = {
    type: {
        name: "Composite",
        className: "CommunicationError",
        modelProperties: {
            code: {
                serializedName: "code",
                required: true,
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "message",
                required: true,
                type: {
                    name: "String",
                },
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String",
                },
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CommunicationError",
                        },
                    },
                },
            },
            innerError: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "CommunicationError",
                },
            },
        },
    },
};
exports.TeamsUserExchangeTokenRequest = {
    type: {
        name: "Composite",
        className: "TeamsUserExchangeTokenRequest",
        modelProperties: {
            token: {
                serializedName: "token",
                required: true,
                type: {
                    name: "String",
                },
            },
            appId: {
                serializedName: "appId",
                required: true,
                type: {
                    name: "String",
                },
            },
            userId: {
                serializedName: "userId",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.CommunicationIdentityAccessTokenRequest = {
    type: {
        name: "Composite",
        className: "CommunicationIdentityAccessTokenRequest",
        modelProperties: {
            scopes: {
                serializedName: "scopes",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            expiresInMinutes: {
                defaultValue: 1440,
                constraints: {
                    InclusiveMaximum: 1440,
                    InclusiveMinimum: 60,
                },
                serializedName: "expiresInMinutes",
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.TeamsExtensionAssignmentResponse = {
    type: {
        name: "Composite",
        className: "TeamsExtensionAssignmentResponse",
        modelProperties: {
            objectId: {
                serializedName: "objectId",
                required: true,
                type: {
                    name: "String",
                },
            },
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String",
                },
            },
            principalType: {
                serializedName: "principalType",
                required: true,
                type: {
                    name: "String",
                },
            },
            clientIds: {
                serializedName: "clientIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
exports.TeamsExtensionAssignmentCreateOrUpdateRequest = {
    type: {
        name: "Composite",
        className: "TeamsExtensionAssignmentCreateOrUpdateRequest",
        modelProperties: {
            principalType: {
                serializedName: "principalType",
                required: true,
                type: {
                    name: "String",
                },
            },
            clientIds: {
                serializedName: "clientIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
exports.EntraAssignmentCreateOrUpdateRequest = {
    type: {
        name: "Composite",
        className: "EntraAssignmentCreateOrUpdateRequest",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String",
                },
            },
            principalType: {
                serializedName: "principalType",
                required: true,
                type: {
                    name: "String",
                },
            },
            clientIds: {
                serializedName: "clientIds",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
exports.EntraAssignmentsResponse = {
    type: {
        name: "Composite",
        className: "EntraAssignmentsResponse",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntraAssignment",
                        },
                    },
                },
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.EntraAssignment = {
    type: {
        name: "Composite",
        className: "EntraAssignment",
        modelProperties: {
            objectId: {
                serializedName: "objectId",
                required: true,
                type: {
                    name: "String",
                },
            },
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String",
                },
            },
            principalType: {
                serializedName: "principalType",
                required: true,
                type: {
                    name: "String",
                },
            },
            clientIds: {
                serializedName: "clientIds",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
        },
    },
};
//# sourceMappingURL=mappers.js.map