"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.clientIds1 = exports.principalType1 = exports.tenantId1 = exports.nextLink = exports.body5 = exports.contentType1 = exports.clientIds = exports.principalType = exports.objectId = exports.tenantId = exports.body3 = exports.expiresInMinutes1 = exports.scopes = exports.userId = exports.appId = exports.token = exports.id = exports.apiVersion = exports.endpoint = exports.expiresInMinutes = exports.createTokenWithScopes = exports.customId = exports.accept = exports.contentType = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.customId = {
    parameterPath: ["options", "customId"],
    mapper: mappers_js_1.CommunicationIdentityCreateRequest,
};
exports.createTokenWithScopes = {
    parameterPath: ["options", "createTokenWithScopes"],
    mapper: mappers_js_1.CommunicationIdentityCreateRequest,
};
exports.expiresInMinutes = {
    parameterPath: ["options", "expiresInMinutes"],
    mapper: mappers_js_1.CommunicationIdentityCreateRequest,
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2025-03-02-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.id = {
    parameterPath: "id",
    mapper: {
        serializedName: "id",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.token = {
    parameterPath: "token",
    mapper: mappers_js_1.TeamsUserExchangeTokenRequest,
};
exports.appId = {
    parameterPath: "appId",
    mapper: mappers_js_1.TeamsUserExchangeTokenRequest,
};
exports.userId = {
    parameterPath: "userId",
    mapper: mappers_js_1.TeamsUserExchangeTokenRequest,
};
exports.scopes = {
    parameterPath: "scopes",
    mapper: mappers_js_1.CommunicationIdentityAccessTokenRequest,
};
exports.expiresInMinutes1 = {
    parameterPath: ["options", "expiresInMinutes"],
    mapper: mappers_js_1.CommunicationIdentityAccessTokenRequest,
};
exports.body3 = {
    parameterPath: "body",
    mapper: {
        serializedName: "body",
        required: true,
        type: {
            name: "Dictionary",
            value: { type: { name: "any" } },
        },
    },
};
exports.tenantId = {
    parameterPath: "tenantId",
    mapper: {
        serializedName: "tenantId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.objectId = {
    parameterPath: "objectId",
    mapper: {
        serializedName: "objectId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.principalType = {
    parameterPath: "principalType",
    mapper: mappers_js_1.TeamsExtensionAssignmentCreateOrUpdateRequest,
};
exports.clientIds = {
    parameterPath: ["options", "clientIds"],
    mapper: mappers_js_1.TeamsExtensionAssignmentCreateOrUpdateRequest,
};
exports.contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/merge-patch+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.body5 = {
    parameterPath: "body",
    mapper: {
        serializedName: "body",
        required: true,
        type: {
            name: "Dictionary",
            value: {
                type: {
                    name: "Composite",
                    className: "EntraAssignmentCreateOrUpdateRequest",
                },
            },
        },
    },
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.tenantId1 = {
    parameterPath: "tenantId",
    mapper: mappers_js_1.EntraAssignmentCreateOrUpdateRequest,
};
exports.principalType1 = {
    parameterPath: "principalType",
    mapper: mappers_js_1.EntraAssignmentCreateOrUpdateRequest,
};
exports.clientIds1 = {
    parameterPath: "clientIds",
    mapper: mappers_js_1.EntraAssignmentCreateOrUpdateRequest,
};
//# sourceMappingURL=parameters.js.map