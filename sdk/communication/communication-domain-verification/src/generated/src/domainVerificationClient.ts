/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  CreateDomainOwnershipChallengeImpl,
  VerifyDomainOwnershipImpl
} from "./operations";
import {
  CreateDomainOwnershipChallenge,
  VerifyDomainOwnership
} from "./operationsInterfaces";
import { DomainVerificationClientContext } from "./domainVerificationClientContext";
import { DomainVerificationClientOptionalParams } from "./models";

export class DomainVerificationClient extends DomainVerificationClientContext {
  /**
   * Initializes a new instance of the DomainVerificationClient class.
   * @param $host server parameter
   * @param options The parameter options
   */
  constructor($host: string, options?: DomainVerificationClientOptionalParams) {
    super($host, options);
    this.createDomainOwnershipChallenge = new CreateDomainOwnershipChallengeImpl(
      this
    );
    this.verifyDomainOwnership = new VerifyDomainOwnershipImpl(this);
  }

  createDomainOwnershipChallenge: CreateDomainOwnershipChallenge;
  verifyDomainOwnership: VerifyDomainOwnership;
}
