{"version":3,"file":"optOuts.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/optOuts.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport { OptOuts } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { SmsApiClient } from \"../smsApiClient.js\";\nimport {\n  OptOutRequest,\n  OptOutsAddOptionalParams,\n  OptOutsAddResponse,\n  OptOutsRemoveOptionalParams,\n  OptOutsRemoveResponse,\n  OptOutsCheckOptionalParams,\n  OptOutsCheckResponse,\n} from \"../models/index.js\";\n\n/** Class containing OptOuts operations. */\nexport class OptOutsImpl implements OptOuts {\n  private readonly client: SmsApiClient;\n\n  /**\n   * Initialize a new instance of the class OptOuts class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SmsApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Add phone numbers to the optouts list which shall stop receiving messages from a sender number.\n   * @param body An opt out request.\n   * @param options The options parameters.\n   */\n  async add(\n    body: OptOutRequest,\n    options?: OptOutsAddOptionalParams,\n  ): Promise<OptOutsAddResponse> {\n    return tracingClient.withSpan(\n      \"SmsApiClient.add\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { body, options },\n          addOperationSpec,\n        ) as Promise<OptOutsAddResponse>;\n      },\n    );\n  }\n\n  /**\n   * Remove phone numbers from the optouts list.\n   * @param body An opt out request.\n   * @param options The options parameters.\n   */\n  async remove(\n    body: OptOutRequest,\n    options?: OptOutsRemoveOptionalParams,\n  ): Promise<OptOutsRemoveResponse> {\n    return tracingClient.withSpan(\n      \"SmsApiClient.remove\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { body, options },\n          removeOperationSpec,\n        ) as Promise<OptOutsRemoveResponse>;\n      },\n    );\n  }\n\n  /**\n   * Check the opt out status for a recipient phone number with a sender phone number.\n   * @param body An opt out request.\n   * @param options The options parameters.\n   */\n  async check(\n    body: OptOutRequest,\n    options?: OptOutsCheckOptionalParams,\n  ): Promise<OptOutsCheckResponse> {\n    return tracingClient.withSpan(\n      \"SmsApiClient.check\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { body, options },\n          checkOperationSpec,\n        ) as Promise<OptOutsCheckResponse>;\n      },\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst addOperationSpec: coreClient.OperationSpec = {\n  path: \"/sms/optouts:add\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OptOutResponse,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst removeOperationSpec: coreClient.OperationSpec = {\n  path: \"/sms/optouts:remove\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OptOutResponse,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst checkOperationSpec: coreClient.OperationSpec = {\n  path: \"/sms/optouts:check\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OptOutResponse,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\n"]}