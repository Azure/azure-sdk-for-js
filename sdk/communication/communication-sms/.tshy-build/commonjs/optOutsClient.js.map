{"version":3,"file":"optOutsClient.js","sourceRoot":"","sources":["../../src/optOutsClient.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { tracingClient } from \"./generated/src/tracing.js\";\nimport type { OptOutResponseItem } from \"./generated/src/index.js\";\nimport type { SmsApiClient } from \"./generated/src/smsApiClient.js\";\nimport { generateOptOutRequest } from \"./utils/smsUtils.js\";\nimport { extractOperationOptions } from \"./extractOperationOptions.js\";\nimport type { OperationOptions } from \"@azure/core-client\";\n\n/**\n * The result of Opt Out Check request.\n */\nexport interface OptOutCheckResult {\n  /**\n   * The recipient's phone number in E.164 format.\n   */\n  to: string;\n  /**\n   * Indicates if the recipient's phone number in opted out from receiving messages or not.\n   */\n  isOptedOut: boolean;\n  /**\n   * HTTP Status code.\n   */\n  httpStatusCode: number;\n  /**\n   * Optional error message in case of 4xx/5xx/repeatable errors.\n   */\n  errorMessage?: string;\n}\n\n/**\n * The result of Opt Out Add request.\n */\nexport interface OptOutAddResult {\n  /**\n   * The recipient's phone number in E.164 format.\n   */\n  to: string;\n  /**\n   * HTTP Status code.\n   */\n  httpStatusCode: number;\n  /**\n   * Optional error message in case of 4xx/5xx/repeatable errors.\n   */\n  errorMessage?: string;\n}\n\n/**\n * The result of Opt Out Remove request.\n */\nexport interface OptOutRemoveResult {\n  /**\n   * The recipient's phone number in E.164 format.\n   */\n  to: string;\n  /**\n   * HTTP Status code.\n   */\n  httpStatusCode: number;\n  /**\n   * Optional error message in case of 4xx/5xx/repeatable errors.\n   */\n  errorMessage?: string;\n}\n\n/**\n * Client options used to configure OptOuts Client API Check requests.\n */\nexport interface CheckOptions extends OperationOptions {}\n\n/**\n * Client options used to configure OptOuts Client API Add requests.\n */\nexport interface AddOptions extends OperationOptions {}\n\n/**\n * Client options used to configure OptOuts Client API Remove requests.\n */\nexport interface RemoveOptions extends OperationOptions {}\n\n/**\n * A OptOutsClient represents a Client to the Azure Communication Sms service allowing you\n * to call Opt Out Management Api methods.\n */\nexport class OptOutsClient {\n  private readonly api: SmsApiClient;\n\n  constructor(api: SmsApiClient) {\n    this.api = api;\n  }\n\n  /**\n   * Removes phone numbers from the optouts list.\n   *\n   * @param from - The sender's phone number\n   * @param to - The recipient's phone numbers\n   * @param options - Additional request options\n   */\n  public async remove(\n    from: string,\n    to: string[],\n    options: RemoveOptions = {},\n  ): Promise<OptOutRemoveResult[]> {\n    const { operationOptions } = extractOperationOptions(options);\n    return tracingClient.withSpan(\"OptOuts-Remove\", operationOptions, async (updatedOptions) => {\n      const response = await this.api.optOuts.remove(\n        generateOptOutRequest(from, to),\n        updatedOptions,\n      );\n\n      return response.value.map((optOutResponseItem: OptOutResponseItem) => {\n        return {\n          to: optOutResponseItem.to,\n          httpStatusCode: optOutResponseItem.httpStatusCode,\n          errorMessage: optOutResponseItem.errorMessage ?? \"\",\n        };\n      });\n    });\n  }\n\n  /**\n   * Adds phone numbers to the optouts list.\n   *\n   * @param from - The sender's phone number\n   * @param to - The recipient's phone numbers\n   * @param options - Additional request options\n   */\n  public async add(\n    from: string,\n    to: string[],\n    options: AddOptions = {},\n  ): Promise<OptOutAddResult[]> {\n    const { operationOptions } = extractOperationOptions(options);\n    return tracingClient.withSpan(\"OptOuts-Add\", operationOptions, async (updatedOptions) => {\n      const response = await this.api.optOuts.add(generateOptOutRequest(from, to), updatedOptions);\n\n      return response.value.map((optOutResponseItem: OptOutResponseItem) => {\n        return {\n          to: optOutResponseItem.to,\n          httpStatusCode: optOutResponseItem.httpStatusCode,\n          errorMessage: optOutResponseItem.errorMessage ?? \"\",\n        };\n      });\n    });\n  }\n\n  /**\n   * Checks if phone numbers are in the optouts list.\n   *\n   * @param from - The sender's phone number\n   * @param to - The recipient's phone numbers\n   * @param options - Additional request options\n   */\n  public async check(\n    from: string,\n    to: string[],\n    options: CheckOptions = {},\n  ): Promise<OptOutCheckResult[]> {\n    const { operationOptions } = extractOperationOptions(options);\n    return tracingClient.withSpan(\"OptOuts-Check\", operationOptions, async (updatedOptions) => {\n      const response = await this.api.optOuts.check(\n        generateOptOutRequest(from, to),\n        updatedOptions,\n      );\n\n      return response.value.map((optOutResponseItem: OptOutResponseItem) => {\n        return {\n          to: optOutResponseItem.to,\n          isOptedOut: optOutResponseItem.isOptedOut ?? false,\n          httpStatusCode: optOutResponseItem.httpStatusCode,\n          errorMessage: optOutResponseItem.errorMessage ?? \"\",\n        };\n      });\n    });\n  }\n}\n"]}