/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { tracingClient } from "../tracing.js";
import { DeliveryReports } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { SmsApiClient } from "../smsApiClient.js";
import {
  DeliveryReportsGetOptionalParams,
  DeliveryReportsGetResponse,
} from "../models/index.js";

/** Class containing DeliveryReports operations. */
export class DeliveryReportsImpl implements DeliveryReports {
  private readonly client: SmsApiClient;

  /**
   * Initialize a new instance of the class DeliveryReports class.
   * @param client Reference to the service client
   */
  constructor(client: SmsApiClient) {
    this.client = client;
  }

  /**
   * Gets delivery report for a specific outgoing message.
   * @param outgoingMessageId The identifier of the outgoing message.
   * @param options The options parameters.
   */
  async get(
    outgoingMessageId: string,
    options?: DeliveryReportsGetOptionalParams,
  ): Promise<DeliveryReportsGetResponse> {
    return tracingClient.withSpan(
      "SmsApiClient.get",
      options ?? {},
      async (options) => {
        return this.client.sendOperationRequest(
          { outgoingMessageId, options },
          getOperationSpec,
        ) as Promise<DeliveryReportsGetResponse>;
      },
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/deliveryReports/{outgoingMessageId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DeliveryReport,
    },
    404: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.endpoint, Parameters.outgoingMessageId],
  headerParameters: [Parameters.accept],
  serializer,
};
