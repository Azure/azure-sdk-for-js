/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";


export const SmsSendOptions: coreHttp.CompositeMapper = {
  serializedName: "SmsSendOptions",
  type: {
    name: "Composite",
    className: "SmsSendOptions",
    modelProperties: {
      enableDeliveryReport: {
        serializedName: "enableDeliveryReport",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SendMessageRequest: coreHttp.CompositeMapper = {
  serializedName: "SendMessageRequest",
  type: {
    name: "Composite",
    className: "SendMessageRequest",
    modelProperties: {
      from: {
        required: true,
        serializedName: "from",
        type: {
          name: "String"
        }
      },
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      message: {
        required: true,
        serializedName: "message",
        constraints: {
          MaxLength: 2048,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      smsSendOptions: {
        serializedName: "smsSendOptions",
        type: {
          name: "Composite",
          className: "SmsSendOptions"
        }
      }
    }
  }
};

export const SmsSendResult: coreHttp.CompositeMapper = {
  serializedName: "SmsSendResult",
  type: {
    name: "Composite",
    className: "SmsSendResult",
    modelProperties: {
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "String"
        }
      },
      messageId: {
        serializedName: "messageId",
        type: {
          name: "String"
        }
      },
      httpStatusCode: {
        required: true,
        serializedName: "httpStatusCode",
        type: {
          name: "Number"
        }
      },
      succeeded: {
        required: true,
        serializedName: "succeeded",
        type: {
          name: "Boolean"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SmsSendResponse: coreHttp.CompositeMapper = {
  serializedName: "SmsSendResponse",
  type: {
    name: "Composite",
    className: "SmsSendResponse",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SmsSendResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SmsSendHeaders: coreHttp.CompositeMapper = {
  serializedName: "sms-send-headers",
  type: {
    name: "Composite",
    className: "SmsSendHeaders",
    modelProperties: {
      repeatabilityResult: {
        serializedName: "repeatability-result",
        type: {
          name: "String"
        }
      }
    }
  }
};
