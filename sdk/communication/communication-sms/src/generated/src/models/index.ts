/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */


import * as coreHttp from "@azure/core-http";

/**
 * Optional configuration for sending SMS messages.
 */
export interface SendSmsOptions {
  /**
   * Enable this flag to receive a delivery report for this message on the Azure Resource
   * EventGrid.
   */
  enableDeliveryReport?: boolean;
  /**
   * Use this field to provide metadata that will then be sent back in the corresponding Delivery
   * Report.
   */
  tag?: string;
}

/**
 * Represents the properties of a send message request.
 */
export interface SendMessageRequest {
  /**
   * The sender's phone number in E.164 format that is owned by the authenticated account.
   */
  from: string;
  /**
   * The recipient's phone number in E.164 format. In this version, a minimum of 1 and upto 100
   * recipients in the list are supported.
   */
  to: string[];
  /**
   * The contents of the message that will be sent to the recipient. The allowable content is
   * defined by RFC 5724.
   */
  message: string;
  sendSmsOptions?: SendSmsOptions;
}

/**
 * Response for a single recipient.
 */
export interface SendSmsResult {
  /**
   * The recipients's phone number in E.164 format.
   */
  to: string;
  /**
   * The identifier of the outgoing SMS message. Only present if message processed.
   */
  messageId?: string;
  /**
   * HTTP Status code.
   */
  httpStatusCode: number;
  /**
   * Optional error message in case of 4xx or 5xx errors.
   */
  errorMessage?: string;
}

/**
 * Response for a successful or multi status send Sms request.
 */
export interface SendSmsResponse {
  value: SendSmsResult[];
  nextLink?: string;
}

/**
 * Optional Parameters.
 */
export interface SmsSendOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * If specified, the client directs that the request is repeatable; that is, the client can make
   * the request multiple times with the same Repeatability-Request-ID and get back an appropriate
   * response without the server executing the request multiple times. The value of the
   * Repeatability-Request-ID is an opaque string representing a client-generated, 36-character
   * hexadecimal case-insensitive encoding of a UUID (GUID), identifier for the request.
   */
  repeatabilityRequestId?: string;
  /**
   * MUST be sent by clients to specify that a request is repeatable. Repeatability-First-Sent is
   * used to specify the date and time at which the request was first created.eg- Tue, 26 Mar 2019
   * 16:06:51 GMT
   */
  repeatabilityFirstSent?: string;
}

/**
 * Defines headers for Send operation.
 */
export interface SmsSendHeaders {
  /**
   * Result of repeatibility request, if repeatability-request-id is provided.Values could be
   * accepted or rejected.
   */
  repeatabilityResult?: string;
}

/**
 * Contains response data for the send operation.
 */
export type SmsSendResponse = SendSmsResponse & SmsSendHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SmsSendHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SendSmsResponse;
    };
};
