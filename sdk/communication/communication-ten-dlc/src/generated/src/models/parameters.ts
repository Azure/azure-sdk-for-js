/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  USBrand as USBrandMapper,
  USCampaign as USCampaignMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const endpoint: OperationURLParameter = {
  parameterPath: "endpoint",
  mapper: {
    serializedName: "endpoint",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const skip: OperationQueryParameter = {
  parameterPath: ["options", "skip"],
  mapper: {
    defaultValue: 0,
    serializedName: "skip",
    type: {
      name: "Number"
    }
  }
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    defaultValue: 100,
    serializedName: "top",
    type: {
      name: "Number"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2024-01-31-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/merge-patch+json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const id: OperationParameter = {
  parameterPath: "id",
  mapper: USBrandMapper
};

export const status: OperationParameter = {
  parameterPath: ["options", "status"],
  mapper: USBrandMapper
};

export const brandDetails: OperationParameter = {
  parameterPath: ["options", "brandDetails"],
  mapper: USBrandMapper
};

export const brandId: OperationURLParameter = {
  parameterPath: "brandId",
  mapper: {
    serializedName: "brandId",
    required: true,
    type: {
      name: "Uuid"
    }
  }
};

export const id1: OperationParameter = {
  parameterPath: "id",
  mapper: USCampaignMapper
};

export const brandId1: OperationParameter = {
  parameterPath: ["options", "brandId"],
  mapper: USCampaignMapper
};

export const status1: OperationParameter = {
  parameterPath: ["options", "status"],
  mapper: USCampaignMapper
};

export const campaignDetails: OperationParameter = {
  parameterPath: ["options", "campaignDetails"],
  mapper: USCampaignMapper
};

export const messageDetails: OperationParameter = {
  parameterPath: ["options", "messageDetails"],
  mapper: USCampaignMapper
};

export const campaignId: OperationURLParameter = {
  parameterPath: "campaignId",
  mapper: {
    serializedName: "campaignId",
    required: true,
    type: {
      name: "Uuid"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
