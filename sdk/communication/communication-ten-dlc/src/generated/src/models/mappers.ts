/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const USBrand: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "USBrand",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      statusUpdatedDate: {
        serializedName: "statusUpdatedDate",
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      costs: {
        serializedName: "costs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TenDlcCost"
            }
          }
        }
      },
      submissionDate: {
        serializedName: "submissionDate",
        type: {
          name: "DateTime"
        }
      },
      reviewNotes: {
        serializedName: "reviewNotes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReviewNote"
            }
          }
        }
      },
      brandDetails: {
        serializedName: "brandDetails",
        type: {
          name: "Composite",
          className: "BrandDetails"
        }
      }
    }
  }
};

export const TenDlcCost: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TenDlcCost",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      amount: {
        serializedName: "amount",
        type: {
          name: "Number"
        }
      },
      currencyCode: {
        serializedName: "currencyCode",
        type: {
          name: "String"
        }
      },
      countryCode: {
        serializedName: "countryCode",
        type: {
          name: "String"
        }
      },
      billingFrequency: {
        serializedName: "billingFrequency",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReviewNote: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReviewNote",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      date: {
        serializedName: "date",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const BrandDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BrandDetails",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      companyName: {
        serializedName: "companyName",
        type: {
          name: "String"
        }
      },
      companyVertical: {
        serializedName: "companyVertical",
        type: {
          name: "String"
        }
      },
      contactInformation: {
        serializedName: "contactInformation",
        type: {
          name: "Composite",
          className: "ContactInformation"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "Composite",
          className: "Address"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      stockExchange: {
        serializedName: "stockExchange",
        type: {
          name: "String"
        }
      },
      stockSymbol: {
        serializedName: "stockSymbol",
        type: {
          name: "String"
        }
      },
      alternateBusinessIdType: {
        serializedName: "alternateBusinessIdType",
        type: {
          name: "String"
        }
      },
      alternateBusinessId: {
        serializedName: "alternateBusinessId",
        type: {
          name: "String"
        }
      },
      taxNumber: {
        serializedName: "taxNumber",
        type: {
          name: "String"
        }
      },
      taxNumberIssuingCountry: {
        serializedName: "taxNumberIssuingCountry",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContactInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContactInformation",
    modelProperties: {
      phone: {
        serializedName: "phone",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Address: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Address",
    modelProperties: {
      line1: {
        serializedName: "line1",
        type: {
          name: "String"
        }
      },
      line2: {
        serializedName: "line2",
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      postalCode: {
        serializedName: "postalCode",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const CommunicationError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationError"
            }
          }
        }
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const USBrands: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "USBrands",
    modelProperties: {
      brands: {
        serializedName: "brands",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "USBrand"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const USCampaign: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "USCampaign",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      brandId: {
        serializedName: "brandId",
        type: {
          name: "Uuid"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusUpdatedDate: {
        serializedName: "statusUpdatedDate",
        type: {
          name: "DateTime"
        }
      },
      costs: {
        serializedName: "costs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TenDlcCost"
            }
          }
        }
      },
      submissionDate: {
        serializedName: "submissionDate",
        type: {
          name: "DateTime"
        }
      },
      reviewNotes: {
        serializedName: "reviewNotes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReviewNote"
            }
          }
        }
      },
      phoneNumberCount: {
        serializedName: "phoneNumberCount",
        type: {
          name: "Number"
        }
      },
      campaignDetails: {
        serializedName: "campaignDetails",
        type: {
          name: "Composite",
          className: "CampaignDetails"
        }
      },
      messageDetails: {
        serializedName: "messageDetails",
        type: {
          name: "Composite",
          className: "MessageDetails"
        }
      }
    }
  }
};

export const CampaignDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CampaignDetails",
    modelProperties: {
      callToAction: {
        serializedName: "callToAction",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MessageDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MessageDetails",
    modelProperties: {
      useCase: {
        serializedName: "useCase",
        type: {
          name: "Composite",
          className: "UseCase"
        }
      },
      helpAnswerToUserRequired: {
        serializedName: "helpAnswerToUserRequired",
        type: {
          name: "Boolean"
        }
      },
      helpAnswerToUser: {
        serializedName: "helpAnswerToUser",
        type: {
          name: "String"
        }
      },
      optOutAnswerToUserRequired: {
        serializedName: "optOutAnswerToUserRequired",
        type: {
          name: "Boolean"
        }
      },
      optOutAnswerToUser: {
        serializedName: "optOutAnswerToUser",
        type: {
          name: "String"
        }
      },
      optInMessageToUserRequired: {
        serializedName: "optInMessageToUserRequired",
        type: {
          name: "Boolean"
        }
      },
      optInMessageToUser: {
        serializedName: "optInMessageToUser",
        type: {
          name: "String"
        }
      },
      hasEmbeddedLink: {
        serializedName: "hasEmbeddedLink",
        type: {
          name: "Boolean"
        }
      },
      hasEmbeddedPhone: {
        serializedName: "hasEmbeddedPhone",
        type: {
          name: "Boolean"
        }
      },
      termsAndConditionsAccepted: {
        serializedName: "termsAndConditionsAccepted",
        type: {
          name: "Boolean"
        }
      },
      hasAgeGatedContent: {
        serializedName: "hasAgeGatedContent",
        type: {
          name: "Boolean"
        }
      },
      hasDirectLending: {
        serializedName: "hasDirectLending",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const UseCase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UseCase",
    modelProperties: {
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      subContentTypes: {
        serializedName: "subContentTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "twoFactorAuthentication",
                "accountNotification",
                "customerCare",
                "deliveryNotification",
                "fraudAlert",
                "higherEducation",
                "marketing",
                "pollingVoting",
                "publicServiceAnnouncement",
                "securityAlert"
              ]
            }
          }
        }
      },
      sampleMessages: {
        serializedName: "sampleMessages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const USCampaigns: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "USCampaigns",
    modelProperties: {
      campaigns: {
        serializedName: "campaigns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "USCampaign"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenDlcCosts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TenDlcCosts",
    modelProperties: {
      costs: {
        serializedName: "costs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TenDlcCost"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
