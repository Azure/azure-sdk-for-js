/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A wrapper for a list of local number costs entities. */
export interface LocalNumberCosts {
  /** List of local numbers costs. */
  costs?: LocalNumberCost[];
  /** Represents the URL link to the next page of local number costs results. */
  nextLink?: string;
}

/** The incurred cost for a single local number */
export interface LocalNumberCost {
  /** The type of cost. */
  type?: LocalNumberCostType;
  /** The cost amount. */
  amount?: number;
  /** The ISO 4217 currency code for the cost amount, e.g. USD. */
  currencyCode?: string;
  /** The ISO 3166-2 code of the phone number's country, e.g. US. */
  countryCode?: string;
  /** The frequency with which the cost gets billed. */
  billingFrequency?: BillingFrequency;
}

/** The Communication Services error. */
export interface CommunicationErrorResponse {
  /** The Communication Services error. */
  error: CommunicationError;
}

/** The Communication Services error. */
export interface CommunicationError {
  /** The error code. */
  code: string;
  /** The error message. */
  message: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * Further details about specific errors that led to this error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: CommunicationError[];
  /**
   * The inner error if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly innerError?: CommunicationError;
}

export interface USBrand {
  /** Unique identifier that corresponds to a brand */
  id: string;
  /**
   * Last date and time when the 10Dlc status was updated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusUpdatedDate?: string;
  /** 10 Dlc status e.g. 'submitted', 'approved', etc */
  status?: string;
  /**
   * Date and time when the 10Dlc was submitted
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly submissionDate?: string;
  /**
   * Notes added to the 10Dlc object after being reviewed to help customer understand
   * review results and necessary follow up actions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reviewNotes?: string;
  brandDetails?: BrandDetails;
}

export interface BrandDetails {
  /** Gets or sets Name */
  name?: string;
  /** Gets or sets Company Name */
  companyName?: string;
  /** Category of companies motive/use case */
  companyVertical?: CompanyVertical;
  contactInformation?: ContactInformation;
  address?: Address;
  /** Legal structure or form a company takes */
  entityType?: EntityType;
  /** Marketplace where stocks, bonds, etc... are bought and sold */
  stockExchange?: StockExchange;
  /** Stock Exchange */
  stockSymbol?: string;
  /** Business Relationship */
  relationship?: Relationship;
  /** Alternate Business Id Type */
  alternateBusinessIdType?: AlternateBusinessIdType;
  /** Alternate Business Id */
  alternateBusinessId?: string;
  /** Business Id that corresponds to your business */
  taxNumber?: string;
  /** Tax Issuing Country */
  taxNumberIssuingCountry?: string;
  /** URL */
  url?: string;
}

export interface ContactInformation {
  /** Contact phone number for the authorized user for the customer. Use E164 format. e.g. +14086111111 */
  phone?: string;
  /** Contact email address number for the authorized user for the customer */
  email?: string;
}

export interface Address {
  /** Address line 1 */
  line1?: string;
  /** Address line 2 */
  line2?: string;
  /** The City for US addresses, for example */
  city?: string;
  /** The State for US addresses, for example */
  state?: string;
  /** Postal code */
  postalCode?: string;
  /** Country */
  country?: string;
}

/** A wrapper for a list of USBrands. */
export interface USBrands {
  /** List of USBrands */
  brands?: USBrand[];
  /** Represents the URL link to the next page */
  nextLink?: string;
}

export interface USCampaign {
  /** Unique identifier that corresponds to a campaign */
  id: string;
  /** Unique identifier that corresponds to a brand */
  brandId?: string;
  /** 10 Dlc status e.g. 'submitted', 'approved', etc */
  status?: string;
  /**
   * Last date and time when the 10Dlc status was updated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusUpdatedDate?: string;
  /**
   * Date and time when the 10Dlc was submitted
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly submissionDate?: string;
  /**
   * Notes added to the 10Dlc object after being reviewed to help customer understand
   * review results and necessary follow up actions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reviewNotes?: string;
  campaignDetails?: CampaignDetails;
  messageDetails?: MessageDetails;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly nextLink?: string;
}

export interface CampaignDetails {
  /** Call to action text. To be provided when InteractiveVoiceResponse is specified as call to action type */
  callToAction?: string;
  /** Describes how and why the number will be used for messaging as part of the program. */
  description?: string;
}

export interface MessageDetails {
  useCase?: UseCase;
  /** Boolean to determine if HelpAnswerToUser is required */
  helpAnswerToUserRequired?: boolean;
  /**
   * Message text for mobile terminated message associated with HELP keyword
   * e.g 'This is the HELP message test.'.
   */
  helpAnswerToUser?: string;
  /** Boolean to determine if optOutAnswerToUser is required */
  optOutAnswerToUserRequired?: boolean;
  /**
   * "Message text for mobile terminated message associated with STOP keyword
   * e.g. 'This is the STOP message test.'.
   */
  optOutAnswerToUser?: string;
  /** Boolean to determine if optInMessage is required */
  optInMessageToUserRequired?: boolean;
  optInMessageToUser?: string;
  hasEmbeddedLink?: boolean;
  hasEmbeddedPhone?: boolean;
  termsAndConditionsAccepted?: boolean;
  hasAgeGatedContent?: boolean;
  hasDirectLending?: boolean;
}

export interface UseCase {
  /** Type of user content */
  contentType?: ContentType;
  /** Type of user sub-content */
  subContentType?: SubContentType[];
  /** Sample messages that a user might send, as a proof of concept */
  sampleMessages?: string[];
}

/** A wrapper for a list of USCampaigns */
export interface USCampaigns {
  /** List of USCampaigns */
  campaigns?: USCampaign[];
  /** Represents the URL link to the next page */
  nextLink?: string;
}

/** Defines values for LocalNumberCostType. */
export type LocalNumberCostType = "brand" | "campaign";
/** Defines values for BillingFrequency. */
export type BillingFrequency = "monthly" | "once";
/** Defines values for CompanyVertical. */
export type CompanyVertical =
  | "Agriculture"
  | "Communication"
  | "Construction"
  | "Education"
  | "Energy"
  | "Entertainment"
  | "Financial"
  | "Gambling"
  | "Government"
  | "Healthcare"
  | "Hospitality"
  | "HumanResources"
  | "Insurance"
  | "Legal"
  | "Manufacturing"
  | "Ngo"
  | "Political"
  | "Postal"
  | "Professional"
  | "RealEstate"
  | "Retail"
  | "Technology"
  | "Transportation";
/** Defines values for EntityType. */
export type EntityType =
  | "PrivateProfit"
  | "PublicProfit"
  | "NonProfit"
  | "Government";
/** Defines values for StockExchange. */
export type StockExchange =
  | "Nasdaq"
  | "Nyse"
  | "Amex"
  | "Amx"
  | "Asx"
  | "B3"
  | "Bme"
  | "Bse"
  | "Fra"
  | "Icex"
  | "Jpx"
  | "Jse"
  | "Krx"
  | "Lon"
  | "Nse"
  | "Omx"
  | "Sehk"
  | "Sgx"
  | "Sse"
  | "Sto"
  | "Swx"
  | "Szse"
  | "Tsx"
  | "Twse"
  | "Vse"
  | "Other";
/** Defines values for Relationship. */
export type Relationship =
  | "BasicAccount"
  | "SmallAccount"
  | "MediumAccount"
  | "LargeAccount"
  | "KeyAccount";
/** Defines values for AlternateBusinessIdType. */
export type AlternateBusinessIdType = "DUNS" | "LEI" | "GIIN";
/** Defines values for ContentType. */
export type ContentType =
  | "TwoFactorAuthentication"
  | "AccountNotification"
  | "AgentsFranchises"
  | "CarrierExempt"
  | "Charity"
  | "CustomerCare"
  | "DeliveryNotification"
  | "Emergency"
  | "FraudAlert"
  | "HigherEducation"
  | "K12Education"
  | "LowVolume"
  | "M2M"
  | "Marketing"
  | "Mixed"
  | "Political"
  | "PollingVoting"
  | "Proxy"
  | "PublicServiceAnnouncement"
  | "SecurityAlert"
  | "Social"
  | "SoleProprietor"
  | "Sweepstake"
  | "Trial"
  | "UcaasHigh"
  | "UcaasLow";
/** Defines values for SubContentType. */
export type SubContentType =
  | "twoFactorAuthentication"
  | "accountNotification"
  | "customerCare"
  | "deliveryNotification"
  | "fraudAlert"
  | "higherEducation"
  | "marketing"
  | "pollingVoting"
  | "publicServiceAnnouncement"
  | "securityAlert";

/** Optional parameters. */
export interface TenDLCGetCostsOptionalParams
  extends coreClient.OperationOptions {
  /** The number of items to skip in the result set (default: 0). */
  skip?: number;
  /** The maximum number of items to return in the result set (default: 100). */
  top?: number;
}

/** Contains response data for the getCosts operation. */
export type TenDLCGetCostsResponse = LocalNumberCosts;

/** Optional parameters. */
export interface TenDLCCreateOrUpdateBrandOptionalParams
  extends coreClient.OperationOptions {
  /** 10 Dlc status e.g. 'submitted', 'approved', etc */
  status?: string;
  brandDetails?: BrandDetails;
}

/** Contains response data for the createOrUpdateBrand operation. */
export type TenDLCCreateOrUpdateBrandResponse = USBrand;

/** Optional parameters. */
export interface TenDLCDeleteBrandOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TenDLCGetBrandOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getBrand operation. */
export type TenDLCGetBrandResponse = USBrand;

/** Optional parameters. */
export interface TenDLCSubmitBrandOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the submitBrand operation. */
export type TenDLCSubmitBrandResponse = USBrand;

/** Optional parameters. */
export interface TenDLCGetBrandsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getBrands operation. */
export type TenDLCGetBrandsResponse = USBrands;

/** Optional parameters. */
export interface TenDLCCreateOrUpdateCampaignOptionalParams
  extends coreClient.OperationOptions {
  /** Unique identifier that corresponds to a brand */
  brandId?: string;
  /** 10 Dlc status e.g. 'submitted', 'approved', etc */
  status?: string;
  campaignDetails?: CampaignDetails;
  messageDetails?: MessageDetails;
}

/** Contains response data for the createOrUpdateCampaign operation. */
export type TenDLCCreateOrUpdateCampaignResponse = USCampaign;

/** Optional parameters. */
export interface TenDLCDeleteCampaignOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TenDLCGetCampaignOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getCampaign operation. */
export type TenDLCGetCampaignResponse = USCampaign;

/** Optional parameters. */
export interface TenDLCSubmitCampaignOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the submitCampaign operation. */
export type TenDLCSubmitCampaignResponse = USCampaign;

/** Optional parameters. */
export interface TenDLCGetCampaignsOptionalParams
  extends coreClient.OperationOptions {
  /** The number of items to skip in the result set (default: 0). */
  skip?: number;
  /** The maximum number of items to return in the result set (default: 100). */
  top?: number;
}

/** Contains response data for the getCampaigns operation. */
export type TenDLCGetCampaignsResponse = USCampaigns;

/** Optional parameters. */
export interface TenDLCGetCostsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getCostsNext operation. */
export type TenDLCGetCostsNextResponse = LocalNumberCosts;

/** Optional parameters. */
export interface TenDLCGetCampaignsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getCampaignsNext operation. */
export type TenDLCGetCampaignsNextResponse = USCampaigns;

/** Optional parameters. */
export interface TenDLCClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
