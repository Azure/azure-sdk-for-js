/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const StatusFoundResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StatusFoundResponse",
    modelProperties: {
      messageId: {
        serializedName: "messageId",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationErrorResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const CommunicationError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "CommunicationError" }
          }
        }
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const EmailMessage: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailMessage",
    modelProperties: {
      customHeaders: {
        serializedName: "headers",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "EmailCustomHeader" }
          }
        }
      },
      sender: {
        serializedName: "sender",
        required: true,
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        type: {
          name: "Composite",
          className: "EmailContent"
        }
      },
      recipients: {
        serializedName: "recipients",
        type: {
          name: "Composite",
          className: "EmailRecipients"
        }
      },
      attachments: {
        serializedName: "attachments",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "EmailAttachment" } }
        }
      },
      replyTo: {
        serializedName: "replyTo",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "EmailAddress" } }
        }
      },
      userEngagementTrackingOverride: {
        defaultValue: "none",
        serializedName: "userEngagementTrackingOverride",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailCustomHeader: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailCustomHeader",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailContent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailContent",
    modelProperties: {
      subject: {
        serializedName: "subject",
        required: true,
        type: {
          name: "String"
        }
      },
      body: {
        serializedName: "body",
        type: {
          name: "Composite",
          className: "EmailBody"
        }
      },
      importance: {
        defaultValue: "normal",
        serializedName: "importance",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailBody: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailBody",
    modelProperties: {
      plainText: {
        serializedName: "plainText",
        type: {
          name: "String"
        }
      },
      html: {
        serializedName: "html",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailRecipients: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailRecipients",
    modelProperties: {
      toRecipients: {
        serializedName: "toRecipients",
        required: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "EmailAddress" } }
        }
      },
      ccRecipients: {
        serializedName: "ccRecipients",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "EmailAddress" } }
        }
      },
      bccRecipients: {
        serializedName: "bccRecipients",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "EmailAddress" } }
        }
      }
    }
  }
};

export const EmailAddress: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailAddress",
    modelProperties: {
      email: {
        serializedName: "email",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailAttachment: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailAttachment",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      attachmentType: {
        serializedName: "attachmentType",
        required: true,
        type: {
          name: "String"
        }
      },
      contentBytesBase64: {
        serializedName: "contentBytesBase64",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailGetMessageStatusHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailGetMessageStatusHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EmailSendEmailHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailSendEmailHeaders",
    modelProperties: {
      repeatabilityResult: {
        serializedName: "repeatability-result",
        type: {
          name: "String"
        }
      },
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};
