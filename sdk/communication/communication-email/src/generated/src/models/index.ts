/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Status of an email message that was sent previously.
 */
export interface SendStatusResult {
  /**
   * System generated id of an email message sent.
   */
  messageId: string;
  /**
   * The type indicating the status of a request.
   */
  status: SendStatus;
}

/**
 * The Communication Services error.
 */
export interface CommunicationErrorResponse {
  /**
   * The Communication Services error.
   */
  error: CommunicationError;
}

/**
 * The Communication Services error.
 */
export interface CommunicationError {
  /**
   * The error code.
   */
  code: string;
  /**
   * The error message.
   */
  message: string;
  /**
   * The error target.
   */
  readonly target?: string;
  /**
   * Further details about specific errors that led to this error.
   */
  readonly details?: CommunicationError[];
  /**
   * The inner error if any.
   */
  readonly innerError?: CommunicationError;
}

/**
 * Message payload for sending an email
 */
export interface EmailMessage {
  /**
   * Custom email headers to be passed.
   */
  customHeaders?: EmailCustomHeader[];
  /**
   * Sender email address from a verified domain.
   */
  sender: string;
  /**
   * Email content to be sent.
   */
  content: EmailContent;
  /**
   * The importance type for the email.
   */
  importance?: EmailImportance;
  /**
   * Recipients for the email.
   */
  recipients: EmailRecipients;
  /**
   * list of attachments
   */
  attachments?: EmailAttachment[];
  /**
   * Email addresses where recipients' replies will be sent to.
   */
  replyTo?: EmailAddress[];
  /**
   * Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking setting was already enabled in the control plane.
   */
  disableUserEngagementTracking?: boolean;
}

/**
 * Custom header for email.
 */
export interface EmailCustomHeader {
  /**
   * Header name.
   */
  name: string;
  /**
   * Header value.
   */
  value: string;
}

/**
 * Content of the email.
 */
export interface EmailContent {
  /**
   * Subject of the email message
   */
  subject: string;
  /**
   * Plain text version of the email message.
   */
  plainText?: string;
  /**
   * Html version of the email message.
   */
  html?: string;
}

/**
 * Recipients of the email
 */
export interface EmailRecipients {
  /**
   * Email to recipients
   */
  to: EmailAddress[];
  /**
   * Email cc recipients
   */
  cC?: EmailAddress[];
  /**
   * Email bcc recipients
   */
  bCC?: EmailAddress[];
}

/**
 * An object representing the email address and its display name
 */
export interface EmailAddress {
  /**
   * Email address.
   */
  email: string;
  /**
   * Email display name.
   */
  displayName?: string;
}

/**
 * Attachment to the email.
 */
export interface EmailAttachment {
  /**
   * Name of the attachment
   */
  name: string;
  /**
   * The type of attachment file.
   */
  attachmentType: EmailAttachmentType;
  /**
   * Base64 encoded contents of the attachment
   */
  contentBytesBase64: string;
}

/**
 * Defines headers for Email_getSendStatus operation.
 */
export interface EmailGetSendStatusHeaders {
  retryAfter?: number;
}

/**
 * Defines headers for Email_send operation.
 */
export interface EmailSendHeaders {
  repeatabilityResult?: string;
  operationLocation?: string;
  retryAfter?: number;
  xMsRequestId?: string;
}

/**
 * Defines values for SendStatus.
 */
export type SendStatus = "queued" | "outForDelivery" | "dropped";
/**
 * Defines values for EmailImportance.
 */
export type EmailImportance = "high" | "normal" | "low";
/**
 * Defines values for EmailAttachmentType.
 */
export type EmailAttachmentType =
  | "avi"
  | "bmp"
  | "doc"
  | "docm"
  | "docx"
  | "gif"
  | "jpeg"
  | "mp3"
  | "one"
  | "pdf"
  | "png"
  | "ppsm"
  | "ppsx"
  | "ppt"
  | "pptm"
  | "pptx"
  | "pub"
  | "rpmsg"
  | "rtf"
  | "tif"
  | "txt"
  | "vsd"
  | "wav"
  | "wma"
  | "xls"
  | "xlsb"
  | "xlsm"
  | "xlsx";

/**
 * Contains response data for the getSendStatus operation.
 */
export type EmailGetSendStatusResponse = EmailGetSendStatusHeaders &
  SendStatusResult & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SendStatusResult;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EmailGetSendStatusHeaders;
    };
  };

/**
 * Contains response data for the send operation.
 */
export type EmailSendResponse = EmailSendHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: EmailSendHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface EmailRestApiClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
