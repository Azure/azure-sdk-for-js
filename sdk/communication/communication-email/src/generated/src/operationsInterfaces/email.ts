/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  EmailGetSendResultOptionalParams,
  EmailGetSendResultResponse,
  EmailMessage,
  EmailSendOptionalParams,
  EmailSendResponse
} from "../models";

/** Interface representing a Email. */
export interface Email {
  /**
   * Gets the status of the email send operation.
   * @param operationId ID of the long running operation (GUID) returned from a previous call to send
   *                    email
   * @param options The options parameters.
   */
  getSendResult(
    operationId: string,
    options?: EmailGetSendResultOptionalParams
  ): Promise<EmailGetSendResultResponse>;
  /**
   * Queues an email message to be sent to one or more recipients
   * @param message Message payload for sending an email
   * @param options The options parameters.
   */
  beginSend(
    message: EmailMessage,
    options?: EmailSendOptionalParams
  ): Promise<
    PollerLike<PollOperationState<EmailSendResponse>, EmailSendResponse>
  >;
  /**
   * Queues an email message to be sent to one or more recipients
   * @param message Message payload for sending an email
   * @param options The options parameters.
   */
  beginSendAndWait(
    message: EmailMessage,
    options?: EmailSendOptionalParams
  ): Promise<EmailSendResponse>;
}
