/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const SearchRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SearchRequest",
    modelProperties: {
      numberType: {
        serializedName: "numberType",
        required: true,
        type: {
          name: "String"
        }
      },
      assignmentType: {
        serializedName: "assignmentType",
        required: true,
        type: {
          name: "String"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        type: {
          name: "Composite",
          className: "CapabilitiesRequest"
        }
      },
      areaCode: {
        serializedName: "areaCode",
        type: {
          name: "String"
        }
      },
      quantity: {
        defaultValue: 1,
        serializedName: "quantity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CapabilitiesRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CapabilitiesRequest",
    modelProperties: {
      sms: {
        defaultValue: "none",
        serializedName: "sms",
        type: {
          name: "String"
        }
      },
      calling: {
        defaultValue: "none",
        serializedName: "calling",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const ErrorModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const SearchResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SearchResult",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      phoneNumbers: {
        serializedName: "phoneNumbers",
        required: true,
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      numberType: {
        serializedName: "numberType",
        required: true,
        type: {
          name: "String"
        }
      },
      assignmentType: {
        serializedName: "assignmentType",
        required: true,
        type: {
          name: "String"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        type: {
          name: "Composite",
          className: "Capabilities"
        }
      },
      monthlyRate: {
        serializedName: "monthlyRate",
        type: {
          name: "Composite",
          className: "MonthlyRate"
        }
      },
      searchExpiresBy: {
        serializedName: "searchExpiresBy",
        required: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Capabilities: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Capabilities",
    modelProperties: {
      sms: {
        defaultValue: "none",
        serializedName: "sms",
        required: true,
        type: {
          name: "String"
        }
      },
      calling: {
        defaultValue: "none",
        serializedName: "calling",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonthlyRate: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonthlyRate",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Number"
        }
      },
      currency: {
        serializedName: "currency",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PurchaseRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PurchaseRequest",
    modelProperties: {
      searchId: {
        serializedName: "searchId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["notStarted", "running", "succeeded", "failed"]
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        serializedName: "createdDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastActionDateTime: {
        serializedName: "lastActionDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      resourceLocation: {
        serializedName: "resourceLocation",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const AcquiredPhoneNumbers: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcquiredPhoneNumbers",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "AcquiredPhoneNumber" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcquiredPhoneNumber: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcquiredPhoneNumber",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      countryCode: {
        serializedName: "countryCode",
        required: true,
        type: {
          name: "String"
        }
      },
      numberType: {
        serializedName: "numberType",
        required: true,
        type: {
          name: "String"
        }
      },
      assignmentType: {
        serializedName: "assignmentType",
        required: true,
        type: {
          name: "String"
        }
      },
      purchaseDate: {
        serializedName: "purchaseDate",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        type: {
          name: "Composite",
          className: "Capabilities"
        }
      },
      callbackUrl: {
        serializedName: "callbackUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      applicationId: {
        serializedName: "applicationId",
        required: true,
        type: {
          name: "String"
        }
      },
      monthlyRate: {
        serializedName: "monthlyRate",
        type: {
          name: "Composite",
          className: "MonthlyRate"
        }
      }
    }
  }
};

export const AcquiredPhoneNumberUpdate: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcquiredPhoneNumberUpdate",
    modelProperties: {
      callbackUrl: {
        serializedName: "callbackUrl",
        type: {
          name: "String"
        }
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        type: {
          name: "Composite",
          className: "CapabilitiesRequest"
        }
      }
    }
  }
};

export const PhoneNumberAdministrationSearchAvailablePhoneNumbersHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberAdministrationSearchAvailablePhoneNumbersHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhoneNumberAdministrationPurchasePhoneNumbersHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberAdministrationPurchasePhoneNumbersHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhoneNumberAdministrationUpdatePhoneNumberHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberAdministrationUpdatePhoneNumberHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhoneNumberAdministrationReleasePhoneNumberHeaders: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberAdministrationReleasePhoneNumberHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};
