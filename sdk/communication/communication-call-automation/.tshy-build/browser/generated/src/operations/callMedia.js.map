{"version":3,"file":"callMedia.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/callMedia.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CallMedia } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { CallAutomationApiClient } from \"../callAutomationApiClient.js\";\nimport {\n  PlayRequest,\n  CallMediaPlayOptionalParams,\n  StartTranscriptionRequest,\n  CallMediaStartTranscriptionOptionalParams,\n  StopTranscriptionRequest,\n  CallMediaStopTranscriptionOptionalParams,\n  CallMediaCancelAllMediaOperationsOptionalParams,\n  RecognizeRequest,\n  CallMediaRecognizeOptionalParams,\n  ContinuousDtmfRecognitionRequest,\n  CallMediaStartContinuousDtmfRecognitionOptionalParams,\n  CallMediaStopContinuousDtmfRecognitionOptionalParams,\n  SendDtmfTonesRequest,\n  CallMediaSendDtmfTonesOptionalParams,\n  CallMediaSendDtmfTonesResponse,\n  UpdateTranscriptionRequest,\n  CallMediaUpdateTranscriptionOptionalParams,\n  HoldRequest,\n  CallMediaHoldOptionalParams,\n  UnholdRequest,\n  CallMediaUnholdOptionalParams,\n  StartMediaStreamingRequest,\n  CallMediaStartMediaStreamingOptionalParams,\n  StopMediaStreamingRequest,\n  CallMediaStopMediaStreamingOptionalParams,\n  InterruptAudioAndAnnounceRequest,\n  CallMediaInterruptAudioAndAnnounceOptionalParams,\n} from \"../models/index.js\";\n\n/** Class containing CallMedia operations. */\nexport class CallMediaImpl implements CallMedia {\n  private readonly client: CallAutomationApiClient;\n\n  /**\n   * Initialize a new instance of the class CallMedia class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CallAutomationApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Plays audio to participants in the call.\n   * @param callConnectionId The call connection id.\n   * @param playRequest play request payload.\n   * @param options The options parameters.\n   */\n  play(\n    callConnectionId: string,\n    playRequest: PlayRequest,\n    options?: CallMediaPlayOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, playRequest, options },\n      playOperationSpec,\n    );\n  }\n\n  /**\n   * Starts transcription in the call\n   * @param callConnectionId The call connection id.\n   * @param startTranscriptionRequest\n   * @param options The options parameters.\n   */\n  startTranscription(\n    callConnectionId: string,\n    startTranscriptionRequest: StartTranscriptionRequest,\n    options?: CallMediaStartTranscriptionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, startTranscriptionRequest, options },\n      startTranscriptionOperationSpec,\n    );\n  }\n\n  /**\n   * Stops transcription in the call.\n   * @param callConnectionId The call connection id.\n   * @param stopTranscriptionRequest stop transcription request payload.\n   * @param options The options parameters.\n   */\n  stopTranscription(\n    callConnectionId: string,\n    stopTranscriptionRequest: StopTranscriptionRequest,\n    options?: CallMediaStopTranscriptionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, stopTranscriptionRequest, options },\n      stopTranscriptionOperationSpec,\n    );\n  }\n\n  /**\n   * Cancel all media operations in a call.\n   * @param callConnectionId The call connection id\n   * @param options The options parameters.\n   */\n  cancelAllMediaOperations(\n    callConnectionId: string,\n    options?: CallMediaCancelAllMediaOperationsOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      cancelAllMediaOperationsOperationSpec,\n    );\n  }\n\n  /**\n   * Recognize media from call.\n   * @param callConnectionId The call connection id\n   * @param recognizeRequest The media recognize request\n   * @param options The options parameters.\n   */\n  recognize(\n    callConnectionId: string,\n    recognizeRequest: RecognizeRequest,\n    options?: CallMediaRecognizeOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, recognizeRequest, options },\n      recognizeOperationSpec,\n    );\n  }\n\n  /**\n   * Start continuous Dtmf recognition by subscribing to tones.\n   * @param callConnectionId The call connection id\n   * @param continuousDtmfRecognitionRequest The continuous recognize request\n   * @param options The options parameters.\n   */\n  startContinuousDtmfRecognition(\n    callConnectionId: string,\n    continuousDtmfRecognitionRequest: ContinuousDtmfRecognitionRequest,\n    options?: CallMediaStartContinuousDtmfRecognitionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, continuousDtmfRecognitionRequest, options },\n      startContinuousDtmfRecognitionOperationSpec,\n    );\n  }\n\n  /**\n   * Stop continuous Dtmf recognition by unsubscribing to tones.\n   * @param callConnectionId The call connection id\n   * @param continuousDtmfRecognitionRequest The continuous recognize request\n   * @param options The options parameters.\n   */\n  stopContinuousDtmfRecognition(\n    callConnectionId: string,\n    continuousDtmfRecognitionRequest: ContinuousDtmfRecognitionRequest,\n    options?: CallMediaStopContinuousDtmfRecognitionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, continuousDtmfRecognitionRequest, options },\n      stopContinuousDtmfRecognitionOperationSpec,\n    );\n  }\n\n  /**\n   * Send dtmf tones.\n   * @param callConnectionId The call connection id\n   * @param sendDtmfTonesRequest The send dtmf tones request\n   * @param options The options parameters.\n   */\n  sendDtmfTones(\n    callConnectionId: string,\n    sendDtmfTonesRequest: SendDtmfTonesRequest,\n    options?: CallMediaSendDtmfTonesOptionalParams,\n  ): Promise<CallMediaSendDtmfTonesResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, sendDtmfTonesRequest, options },\n      sendDtmfTonesOperationSpec,\n    );\n  }\n\n  /**\n   * API to change transcription language.\n   * @param callConnectionId The call connection id\n   * @param updateTranscriptionRequest The UpdateTranscription request\n   * @param options The options parameters.\n   */\n  updateTranscription(\n    callConnectionId: string,\n    updateTranscriptionRequest: UpdateTranscriptionRequest,\n    options?: CallMediaUpdateTranscriptionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, updateTranscriptionRequest, options },\n      updateTranscriptionOperationSpec,\n    );\n  }\n\n  /**\n   * Hold participant from the call using identifier.\n   * @param callConnectionId The call connection id.\n   * @param holdRequest The participants to be hold from the call.\n   * @param options The options parameters.\n   */\n  hold(\n    callConnectionId: string,\n    holdRequest: HoldRequest,\n    options?: CallMediaHoldOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, holdRequest, options },\n      holdOperationSpec,\n    );\n  }\n\n  /**\n   * Unhold participants from the call using identifier.\n   * @param callConnectionId The call connection id.\n   * @param unholdRequest The participants to be hold from the call.\n   * @param options The options parameters.\n   */\n  unhold(\n    callConnectionId: string,\n    unholdRequest: UnholdRequest,\n    options?: CallMediaUnholdOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, unholdRequest, options },\n      unholdOperationSpec,\n    );\n  }\n\n  /**\n   * Starts media streaming in the call.\n   * @param callConnectionId The call connection id.\n   * @param startMediaStreamingRequest\n   * @param options The options parameters.\n   */\n  startMediaStreaming(\n    callConnectionId: string,\n    startMediaStreamingRequest: StartMediaStreamingRequest,\n    options?: CallMediaStartMediaStreamingOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, startMediaStreamingRequest, options },\n      startMediaStreamingOperationSpec,\n    );\n  }\n\n  /**\n   * Stops media streaming in the call.\n   * @param callConnectionId The call connection id.\n   * @param stopMediaStreamingRequest stop media streaming request payload.\n   * @param options The options parameters.\n   */\n  stopMediaStreaming(\n    callConnectionId: string,\n    stopMediaStreamingRequest: StopMediaStreamingRequest,\n    options?: CallMediaStopMediaStreamingOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, stopMediaStreamingRequest, options },\n      stopMediaStreamingOperationSpec,\n    );\n  }\n\n  /**\n   * Plays audio to participants in the call.\n   * @param callConnectionId The call connection id.\n   * @param interruptRequest play request payload.\n   * @param options The options parameters.\n   */\n  interruptAudioAndAnnounce(\n    callConnectionId: string,\n    interruptRequest: InterruptAudioAndAnnounceRequest,\n    options?: CallMediaInterruptAudioAndAnnounceOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, interruptRequest, options },\n      interruptAudioAndAnnounceOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst playOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:play\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.playRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst startTranscriptionOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:startTranscription\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.startTranscriptionRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst stopTranscriptionOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:stopTranscription\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.stopTranscriptionRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst cancelAllMediaOperationsOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:cancelAllMediaOperations\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst recognizeOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:recognize\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.recognizeRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst startContinuousDtmfRecognitionOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:startContinuousDtmfRecognition\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.continuousDtmfRecognitionRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst stopContinuousDtmfRecognitionOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:stopContinuousDtmfRecognition\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.continuousDtmfRecognitionRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst sendDtmfTonesOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:sendDtmfTones\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.SendDtmfTonesResult,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.sendDtmfTonesRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateTranscriptionOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:updateTranscription\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.updateTranscriptionRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst holdOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:hold\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.holdRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst unholdOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:unhold\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.unholdRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst startMediaStreamingOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:startMediaStreaming\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.startMediaStreamingRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst stopMediaStreamingOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:stopMediaStreaming\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.stopMediaStreamingRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst interruptAudioAndAnnounceOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:interruptAudioAndAnnounce\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.interruptRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\n"]}