{"version":3,"file":"callConnection.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/callConnection.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { CallConnection } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { CallAutomationApiClient } from \"../callAutomationApiClient.js\";\nimport {\n  CallParticipantInternal,\n  CallConnectionGetParticipantsNextOptionalParams,\n  CallConnectionGetParticipantsOptionalParams,\n  CallConnectionGetParticipantsResponse,\n  CallConnectionGetCallOptionalParams,\n  CallConnectionGetCallResponse,\n  CallConnectionHangupCallOptionalParams,\n  CallConnectionTerminateCallOptionalParams,\n  TransferToParticipantRequest,\n  CallConnectionTransferToParticipantOptionalParams,\n  CallConnectionTransferToParticipantResponse,\n  AddParticipantRequest,\n  CallConnectionAddParticipantOptionalParams,\n  CallConnectionAddParticipantResponse,\n  RemoveParticipantRequest,\n  CallConnectionRemoveParticipantOptionalParams,\n  CallConnectionRemoveParticipantResponse,\n  MuteParticipantsRequest,\n  CallConnectionMuteOptionalParams,\n  CallConnectionMuteResponse,\n  UnmuteParticipantsRequest,\n  CallConnectionUnmuteOptionalParams,\n  CallConnectionUnmuteResponse,\n  CancelAddParticipantRequest,\n  CallConnectionCancelAddParticipantOptionalParams,\n  CallConnectionCancelAddParticipantResponse,\n  CallConnectionGetParticipantOptionalParams,\n  CallConnectionGetParticipantResponse,\n  CallConnectionGetParticipantsNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CallConnection operations. */\nexport class CallConnectionImpl implements CallConnection {\n  private readonly client: CallAutomationApiClient;\n\n  /**\n   * Initialize a new instance of the class CallConnection class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CallAutomationApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get participants from a call. Recording and transcription bots are omitted from this list.\n   * @param callConnectionId The call connection Id\n   * @param options The options parameters.\n   */\n  public listParticipants(\n    callConnectionId: string,\n    options?: CallConnectionGetParticipantsOptionalParams,\n  ): PagedAsyncIterableIterator<CallParticipantInternal> {\n    const iter = this.getParticipantsPagingAll(callConnectionId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getParticipantsPagingPage(\n          callConnectionId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getParticipantsPagingPage(\n    callConnectionId: string,\n    options?: CallConnectionGetParticipantsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CallParticipantInternal[]> {\n    let result: CallConnectionGetParticipantsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getParticipants(callConnectionId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getParticipantsNext(\n        callConnectionId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getParticipantsPagingAll(\n    callConnectionId: string,\n    options?: CallConnectionGetParticipantsOptionalParams,\n  ): AsyncIterableIterator<CallParticipantInternal> {\n    for await (const page of this.getParticipantsPagingPage(\n      callConnectionId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the detail properties of an ongoing call.\n   * @param callConnectionId The call connection id.\n   * @param options The options parameters.\n   */\n  getCall(\n    callConnectionId: string,\n    options?: CallConnectionGetCallOptionalParams,\n  ): Promise<CallConnectionGetCallResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      getCallOperationSpec,\n    );\n  }\n\n  /**\n   * Hang up call automation service from the call. This will make call automation service leave the\n   * call, but does not terminate if there are more than 1 caller in the call.\n   * @param callConnectionId The call connection id.\n   * @param options The options parameters.\n   */\n  hangupCall(\n    callConnectionId: string,\n    options?: CallConnectionHangupCallOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      hangupCallOperationSpec,\n    );\n  }\n\n  /**\n   * Terminate a call using CallConnectionId.\n   * @param callConnectionId The terminate call request.\n   * @param options The options parameters.\n   */\n  terminateCall(\n    callConnectionId: string,\n    options?: CallConnectionTerminateCallOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      terminateCallOperationSpec,\n    );\n  }\n\n  /**\n   * Transfer the call to a participant.\n   * @param callConnectionId The call connection id.\n   * @param transferToParticipantRequest The transfer to participant request.\n   * @param options The options parameters.\n   */\n  transferToParticipant(\n    callConnectionId: string,\n    transferToParticipantRequest: TransferToParticipantRequest,\n    options?: CallConnectionTransferToParticipantOptionalParams,\n  ): Promise<CallConnectionTransferToParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, transferToParticipantRequest, options },\n      transferToParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * Get participants from a call. Recording and transcription bots are omitted from this list.\n   * @param callConnectionId The call connection Id\n   * @param options The options parameters.\n   */\n  private _getParticipants(\n    callConnectionId: string,\n    options?: CallConnectionGetParticipantsOptionalParams,\n  ): Promise<CallConnectionGetParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      getParticipantsOperationSpec,\n    );\n  }\n\n  /**\n   * Add a participant to the call.\n   * @param callConnectionId The call connection Id\n   * @param addParticipantRequest The add participants request.\n   * @param options The options parameters.\n   */\n  addParticipant(\n    callConnectionId: string,\n    addParticipantRequest: AddParticipantRequest,\n    options?: CallConnectionAddParticipantOptionalParams,\n  ): Promise<CallConnectionAddParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, addParticipantRequest, options },\n      addParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * Remove a participant from the call using identifier.\n   * @param callConnectionId The call connection id.\n   * @param removeParticipantRequest The participant to be removed from the call.\n   * @param options The options parameters.\n   */\n  removeParticipant(\n    callConnectionId: string,\n    removeParticipantRequest: RemoveParticipantRequest,\n    options?: CallConnectionRemoveParticipantOptionalParams,\n  ): Promise<CallConnectionRemoveParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, removeParticipantRequest, options },\n      removeParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * Mute participants from the call using identifier.\n   * @param callConnectionId The call connection id.\n   * @param muteParticipantsRequest The participants to be muted from the call.\n   * @param options The options parameters.\n   */\n  mute(\n    callConnectionId: string,\n    muteParticipantsRequest: MuteParticipantsRequest,\n    options?: CallConnectionMuteOptionalParams,\n  ): Promise<CallConnectionMuteResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, muteParticipantsRequest, options },\n      muteOperationSpec,\n    );\n  }\n\n  /**\n   * Unmute participants from the call using identifier.\n   * @param callConnectionId The call connection id.\n   * @param unmuteParticipantsRequest The participants to be unmuted from the call.\n   * @param options The options parameters.\n   */\n  unmute(\n    callConnectionId: string,\n    unmuteParticipantsRequest: UnmuteParticipantsRequest,\n    options?: CallConnectionUnmuteOptionalParams,\n  ): Promise<CallConnectionUnmuteResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, unmuteParticipantsRequest, options },\n      unmuteOperationSpec,\n    );\n  }\n\n  /**\n   * Cancel add participant operation.\n   * @param callConnectionId The call connection Id\n   * @param cancelAddParticipantRequest Cancellation request.\n   * @param options The options parameters.\n   */\n  cancelAddParticipant(\n    callConnectionId: string,\n    cancelAddParticipantRequest: CancelAddParticipantRequest,\n    options?: CallConnectionCancelAddParticipantOptionalParams,\n  ): Promise<CallConnectionCancelAddParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, cancelAddParticipantRequest, options },\n      cancelAddParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * Get participant from a call.\n   * @param callConnectionId The call connection Id\n   * @param participantRawId Raw id of the participant to retrieve.\n   * @param options The options parameters.\n   */\n  getParticipant(\n    callConnectionId: string,\n    participantRawId: string,\n    options?: CallConnectionGetParticipantOptionalParams,\n  ): Promise<CallConnectionGetParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, participantRawId, options },\n      getParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * GetParticipantsNext\n   * @param callConnectionId The call connection Id\n   * @param nextLink The nextLink from the previous successful call to the GetParticipants method.\n   * @param options The options parameters.\n   */\n  private _getParticipantsNext(\n    callConnectionId: string,\n    nextLink: string,\n    options?: CallConnectionGetParticipantsNextOptionalParams,\n  ): Promise<CallConnectionGetParticipantsNextResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, nextLink, options },\n      getParticipantsNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CallConnectionPropertiesInternal,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst hangupCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst terminateCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:terminate\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  serializer,\n};\nconst transferToParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:transferToParticipant\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.TransferCallResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.transferToParticipantRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst getParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetParticipantsResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst addParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:add\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.AddParticipantResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.addParticipantRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst removeParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:remove\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.RemoveParticipantResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.removeParticipantRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst muteOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:mute\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MuteParticipantsResult,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.muteParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst unmuteOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:unmute\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UnmuteParticipantsResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.unmuteParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst cancelAddParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:cancelAddParticipant\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.CancelAddParticipantResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.cancelAddParticipantRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst getParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants/{participantRawId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CallParticipantInternal,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.callConnectionId,\n    Parameters.participantRawId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getParticipantsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetParticipantsResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.callConnectionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}