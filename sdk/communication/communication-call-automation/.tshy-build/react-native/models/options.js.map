{"version":3,"file":"options.js","sourceRoot":"","sources":["../../../src/models/options.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PhoneNumberIdentifier,\n  CommunicationIdentifier,\n  MicrosoftTeamsAppIdentifier,\n} from \"@azure/communication-common\";\nimport type { OperationOptions } from \"@azure/core-client\";\nimport type {\n  MediaStreamingOptions,\n  TranscriptionOptions,\n  CallRejectReason,\n  FileSource,\n  TextSource,\n  SsmlSource,\n  DtmfTone,\n  RecognitionChoice,\n  RecordingContent,\n  RecordingChannel,\n  RecordingFormat,\n  RecordingStorage,\n  CallLocator,\n  ChannelAffinity,\n  CallIntelligenceOptions,\n  CustomCallingContext,\n} from \"./models.js\";\n\n/** Options to configure the recognize operation. */\nexport interface CallMediaRecognizeOptions extends OperationOptions {\n  /** The source of the audio to be played for recognition. */\n  playPrompt?: FileSource | TextSource | SsmlSource;\n  /** The list source of the audio to be played for recognition. */\n  playPrompts?: (FileSource | TextSource | SsmlSource)[];\n  /** If set recognize can barge into other existing queued-up/currently-processing requests. */\n  interruptCallMediaOperation?: boolean;\n  /** @deprecated Not in use, instead use interruptCallMediaOperation for similar functionality*/\n  stopCurrentOperations?: boolean;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /** Determines if we interrupt the prompt and start recognizing. */\n  interruptPrompt?: boolean;\n  /** Time to wait for first input after prompt. */\n  initialSilenceTimeoutInSeconds?: number;\n  /** speechModelEndpointId. */\n  speechModelEndpointId?: string;\n  /**\n   * Set a callback URL that overrides the default callback URL set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/** The recognize configuration specific to Dtmf. */\nexport interface CallMediaRecognizeDtmfOptions extends CallMediaRecognizeOptions {\n  /** Time to wait between DTMF inputs to stop recognizing. */\n  interToneTimeoutInSeconds?: number;\n  /** List of tones that will stop recognizing. */\n  stopDtmfTones?: DtmfTone[];\n  /** Maximum number of DTMF tones to be collected. */\n  maxTonesToCollect?: number;\n  readonly kind: \"callMediaRecognizeDtmfOptions\";\n}\n\n/** The recognize configuration specific to Choices. */\nexport interface CallMediaRecognizeChoiceOptions extends CallMediaRecognizeOptions {\n  /** The IvR choices for recognize. */\n  choices: RecognitionChoice[];\n  /** Speech language to be recognized, If not set default is en-US */\n  speechLanguage?: string;\n  /** Endpoint where the custom model was deployed. */\n  speechRecognitionModelEndpointId?: string;\n  readonly kind: \"callMediaRecognizeChoiceOptions\";\n}\n\n/** The recognize configuration specific to Speech. */\nexport interface CallMediaRecognizeSpeechOptions extends CallMediaRecognizeOptions {\n  /** The length of end silence when user stops speaking and cogservice send response. */\n  endSilenceTimeoutInSeconds?: number;\n  /** Speech language to be recognized, If not set default is en-US */\n  speechLanguage?: string;\n  /** Endpoint where the custom model was deployed. */\n  speechRecognitionModelEndpointId?: string;\n  readonly kind: \"callMediaRecognizeSpeechOptions\";\n}\n\n/** The recognize configuration for Speech or Dtmf  */\nexport interface CallMediaRecognizeSpeechOrDtmfOptions extends CallMediaRecognizeOptions {\n  /** The length of end silence when user stops speaking and cogservice send response. */\n  endSilenceTimeoutInSeconds?: number;\n  /** Time to wait between DTMF inputs to stop recognizing. */\n  interToneTimeoutInSeconds?: number;\n  /** List of tones that will stop recognizing. */\n  stopDtmfTones?: DtmfTone[];\n  /** Maximum number of DTMF tones to be collected. */\n  maxTonesToCollect?: number;\n  /** Speech language to be recognized, If not set default is en-US */\n  speechLanguage?: string;\n  /** Endpoint where the custom model was deployed. */\n  speechRecognitionModelEndpointId?: string;\n  readonly kind: \"callMediaRecognizeSpeechOrDtmfOptions\";\n}\n\n/**\n * Options to create a call.\n */\nexport interface CreateCallOptions extends OperationOptions {\n  /**\n   * The source caller Id, a phone number, that's shown to the PSTN participant being invited.\n   * Required only when calling a PSTN callee.\n   */\n  sourceCallIdNumber?: PhoneNumberIdentifier;\n  /** Display name of the call if dialing out to a pstn number */\n  sourceDisplayName?: string;\n  /** The operation context. */\n  operationContext?: string;\n  /** AI options for the call. */\n  callIntelligenceOptions?: CallIntelligenceOptions;\n  /** Options for Media streaming. */\n  mediaStreamingOptions?: MediaStreamingOptions;\n  /** Options for live transcription. */\n  transcriptionOptions?: TranscriptionOptions;\n  /** The Custom Context. */\n  customCallingContext?: CustomCallingContext;\n  /**\n   * Overrides default client source by a MicrosoftTeamsAppIdentifier type source.\n   * Required for creating call with Teams resource account ID.\n   * This is per-operation setting and does not change the client's default source.\n   */\n  teamsAppSource?: MicrosoftTeamsAppIdentifier;\n}\n\n/**\n * Options to answer a call.\n */\nexport interface AnswerCallOptions extends OperationOptions {\n  /** AI options for the call. */\n  callIntelligenceOptions?: CallIntelligenceOptions;\n  /** Used by customer to send custom context to targets. */\n  customCallingContext?: CustomCallingContext;\n  /** Options for Media streaming. */\n  mediaStreamingOptions?: MediaStreamingOptions;\n  /** Options for live transcription. */\n  transcriptionOptions?: TranscriptionOptions;\n  /** The operation context. */\n  operationContext?: string;\n}\n\n/**\n * Options to redirect call.\n */\nexport interface RedirectCallOptions extends OperationOptions {\n  /** The Custom Context. */\n  customCallingContext?: CustomCallingContext;\n}\n\n/**\n * Options to reject call.\n */\nexport interface RejectCallOptions extends OperationOptions {\n  /** The rejection reason. */\n  callRejectReason?: CallRejectReason;\n}\n\n/**\n * Options to transfer participants.\n */\nexport interface TransferCallToParticipantOptions extends OperationOptions {\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URL set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n  /** Transferee is the participant who is transferred away. */\n  transferee?: CommunicationIdentifier;\n  /** Used by customer to send custom context to targets. */\n  customCallingContext?: CustomCallingContext;\n  /** The source caller Id, a phone number, that's will be used as the transferor's(Contoso) caller id when transfering a call a pstn target. */\n  sourceCallIdNumber?: PhoneNumberIdentifier;\n}\n\n/** Options to add participants. */\nexport interface AddParticipantOptions extends OperationOptions {\n  /**\n   * Gets or sets the timeout to wait for the invited participant to pickup.\n   * The maximum value of this is 180 seconds\n   */\n  invitationTimeoutInSeconds?: number;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URL set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/**\n * Options to remove participants.\n */\nexport interface RemoveParticipantsOption extends OperationOptions {\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URL set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/**\n * Options to mute participant.\n */\nexport interface MuteParticipantOption extends OperationOptions {\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n}\n\n/**\n * Options to play audio.\n */\nexport interface PlayOptions extends OperationOptions {\n  /** Determine if it is looping */\n  loop?: boolean;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URL set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n  /** If set, hold audio will be interrupted, then this request will be played, and then the hold audio will be resumed. */\n  interruptHoldAudio?: boolean;\n}\n\n/**\n * Options to playToAll audio.\n */\nexport interface PlayToAllOptions extends PlayOptions {\n  /** If set play can barge into other existing queued-up/currently-processing requests. */\n  interruptCallMediaOperation?: boolean;\n}\n\n/**\n * Options to get call connection properties.\n */\nexport type GetCallConnectionPropertiesOptions = OperationOptions;\n\n/**\n * Options to hang up the call\n */\nexport type HangUpOptions = OperationOptions;\n\n/**\n * Options to get a participant.\n */\nexport type GetParticipantOptions = OperationOptions;\n\n/**\n * Options to get a start a recording.\n */\nexport interface StartRecordingOptions extends OperationOptions {\n  /** The call locator. (Only one of callLocator or callConnectionId to be used) */\n  callLocator?: CallLocator;\n  /** The call connectionId. (Only one of callLocator or callConnectionId to be used) */\n  callConnectionId?: string;\n  /** The url to send notifications to. */\n  recordingStateCallbackEndpointUrl?: string;\n  /** The content type of call recording. */\n  recordingContent?: RecordingContent;\n  /** The channel type of call recording. */\n  recordingChannel?: RecordingChannel;\n  /** The format type of call recording. */\n  recordingFormat?: RecordingFormat;\n  /** Recording storage option. */\n  recordingStorage?: RecordingStorage;\n  /** Pause on start call recording option. */\n  pauseOnStart?: boolean;\n  /**\n   * The sequential order in which audio channels are assigned to participants in the unmixed recording.\n   * When 'recordingChannelType' is set to 'unmixed' and `audioChannelParticipantOrdering` is not specified,\n   * the audio channel to participant mapping will be automatically assigned based on the order in which participant\n   * first audio was detected.  Channel to participant mapping details can be found in the metadata of the recording.\n   */\n  audioChannelParticipantOrdering?: CommunicationIdentifier[];\n  /**\n   * The channel affinity of call recording\n   * When 'recordingChannelType' is set to 'unmixed', if channelAffinity is not specified, 'channel' will be automatically assigned.\n   * Channel-Participant mapping details can be found in the metadata of the recording.\n   */\n  channelAffinity?: ChannelAffinity[];\n}\n\n/**\n * Options to get a stop a recording.\n */\nexport type StopRecordingOptions = OperationOptions;\n\n/**\n * Options to get a pause a recording.\n */\nexport type PauseRecordingOptions = OperationOptions;\n\n/**\n * Options to get recording properties.\n */\nexport type GetRecordingPropertiesOptions = OperationOptions;\n\n/**\n * Options to resume recording.\n */\nexport type ResumeRecordingOptions = OperationOptions;\n\n/**\n * Options to delete recording.\n */\nexport type DeleteRecordingOptions = OperationOptions;\n\n/**\n * Options to download recording.\n */\nexport interface DownloadRecordingOptions extends OperationOptions {\n  /** Offset byte to start download from. */\n  offset?: number;\n  /** Max content length in bytes. */\n  length?: number;\n}\n\n/**\n * Options to continuous Dtmf recognition.\n */\nexport interface ContinuousDtmfRecognitionOptions extends OperationOptions {\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URL set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/**\n * Options to send Dtmf tones.\n */\nexport interface SendDtmfTonesOptions extends OperationOptions {\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URL set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/** Options for cancelling add participant request. */\nexport interface CancelAddParticipantOperationOptions extends OperationOptions {\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URL set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/**\n * Options to start transcription\n */\nexport interface StartTranscriptionOptions extends OperationOptions {\n  /** Defines Locale for the transcription e,g en-US */\n  locale?: string;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /** Endpoint where the custom model was deployed. */\n  speechRecognitionModelEndpointId?: string;\n  /**\n   * Set a callback URL that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/**\n * Options to stop transcription\n */\nexport interface StopTranscriptionOptions extends OperationOptions {\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/**\n * Options to hold participant.\n */\nexport interface HoldOptions extends OperationOptions {\n  /** A PlaySource representing the source to play. */\n  playSource?: FileSource | TextSource | SsmlSource;\n  /** Operation Context. */\n  operationContext?: string;\n  /** Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation. */\n  operationCallbackUri?: string;\n}\n\n/**\n * Options to Unhold participant.\n */\nexport interface UnholdOptions extends OperationOptions {\n  /** Operation Context. */\n  operationContext?: string;\n}\n\n/**\n * Options to Connect request.\n */\nexport interface ConnectCallOptions extends OperationOptions {\n  /** Used by customers to correlate the request to the response event. */\n  operationContext?: string;\n  /** AI options for the call. */\n  callIntelligenceOptions?: CallIntelligenceOptions;\n  /** Options for Media streaming. */\n  mediaStreamingOptions?: MediaStreamingOptions;\n  /** Options for live transcription. */\n  transcriptionOptions?: TranscriptionOptions;\n}\n\n/** Options for start media streaming request. */\nexport interface StartMediaStreamingOptions extends OperationOptions {\n  /**\n   * Set a callback URL that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n}\n\n/** Options for stop media streaming request. */\nexport interface StopMediaStreamingOptions extends OperationOptions {\n  /**\n   * Set a callback URL that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n}\n\n/**\n * Options to update transcription\n */\nexport interface UpdateTranscriptionOptions extends OperationOptions {\n  /** Endpoint where the custom model was deployed. */\n  speechRecognitionModelEndpointId?: string;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URL that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUrl?: string;\n}\n\n/**\n * Options to interrupt audio and announce.\n */\nexport interface InterruptAudioAndAnnounceOptions extends OperationOptions {\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n}\n"]}