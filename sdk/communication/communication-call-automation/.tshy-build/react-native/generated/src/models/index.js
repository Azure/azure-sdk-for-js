/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link CommunicationIdentifierModelKind} that the service accepts. */
export var KnownCommunicationIdentifierModelKind;
(function (KnownCommunicationIdentifierModelKind) {
    /** Unknown */
    KnownCommunicationIdentifierModelKind["Unknown"] = "unknown";
    /** CommunicationUser */
    KnownCommunicationIdentifierModelKind["CommunicationUser"] = "communicationUser";
    /** PhoneNumber */
    KnownCommunicationIdentifierModelKind["PhoneNumber"] = "phoneNumber";
    /** MicrosoftTeamsUser */
    KnownCommunicationIdentifierModelKind["MicrosoftTeamsUser"] = "microsoftTeamsUser";
    /** MicrosoftTeamsApp */
    KnownCommunicationIdentifierModelKind["MicrosoftTeamsApp"] = "microsoftTeamsApp";
})(KnownCommunicationIdentifierModelKind || (KnownCommunicationIdentifierModelKind = {}));
/** Known values of {@link CommunicationCloudEnvironmentModel} that the service accepts. */
export var KnownCommunicationCloudEnvironmentModel;
(function (KnownCommunicationCloudEnvironmentModel) {
    /** Public */
    KnownCommunicationCloudEnvironmentModel["Public"] = "public";
    /** Dod */
    KnownCommunicationCloudEnvironmentModel["Dod"] = "dod";
    /** Gcch */
    KnownCommunicationCloudEnvironmentModel["Gcch"] = "gcch";
})(KnownCommunicationCloudEnvironmentModel || (KnownCommunicationCloudEnvironmentModel = {}));
/** Known values of {@link MediaStreamingTransportType} that the service accepts. */
export var KnownMediaStreamingTransportType;
(function (KnownMediaStreamingTransportType) {
    /** Websocket */
    KnownMediaStreamingTransportType["Websocket"] = "websocket";
})(KnownMediaStreamingTransportType || (KnownMediaStreamingTransportType = {}));
/** Known values of {@link MediaStreamingContentType} that the service accepts. */
export var KnownMediaStreamingContentType;
(function (KnownMediaStreamingContentType) {
    /** Audio */
    KnownMediaStreamingContentType["Audio"] = "audio";
})(KnownMediaStreamingContentType || (KnownMediaStreamingContentType = {}));
/** Known values of {@link MediaStreamingAudioChannelType} that the service accepts. */
export var KnownMediaStreamingAudioChannelType;
(function (KnownMediaStreamingAudioChannelType) {
    /** Mixed */
    KnownMediaStreamingAudioChannelType["Mixed"] = "mixed";
    /** Unmixed */
    KnownMediaStreamingAudioChannelType["Unmixed"] = "unmixed";
})(KnownMediaStreamingAudioChannelType || (KnownMediaStreamingAudioChannelType = {}));
/** Known values of {@link AudioFormat} that the service accepts. */
export var KnownAudioFormat;
(function (KnownAudioFormat) {
    /** Pcm16KMono */
    KnownAudioFormat["Pcm16KMono"] = "Pcm16KMono";
    /** Pcm24KMono */
    KnownAudioFormat["Pcm24KMono"] = "Pcm24KMono";
})(KnownAudioFormat || (KnownAudioFormat = {}));
/** Known values of {@link TranscriptionTransportType} that the service accepts. */
export var KnownTranscriptionTransportType;
(function (KnownTranscriptionTransportType) {
    /** Websocket */
    KnownTranscriptionTransportType["Websocket"] = "websocket";
})(KnownTranscriptionTransportType || (KnownTranscriptionTransportType = {}));
/** Known values of {@link CallConnectionStateModel} that the service accepts. */
export var KnownCallConnectionStateModel;
(function (KnownCallConnectionStateModel) {
    /** Unknown */
    KnownCallConnectionStateModel["Unknown"] = "unknown";
    /** Connecting */
    KnownCallConnectionStateModel["Connecting"] = "connecting";
    /** Connected */
    KnownCallConnectionStateModel["Connected"] = "connected";
    /** Transferring */
    KnownCallConnectionStateModel["Transferring"] = "transferring";
    /** TransferAccepted */
    KnownCallConnectionStateModel["TransferAccepted"] = "transferAccepted";
    /** Disconnecting */
    KnownCallConnectionStateModel["Disconnecting"] = "disconnecting";
    /** Disconnected */
    KnownCallConnectionStateModel["Disconnected"] = "disconnected";
})(KnownCallConnectionStateModel || (KnownCallConnectionStateModel = {}));
/** Known values of {@link MediaStreamingSubscriptionState} that the service accepts. */
export var KnownMediaStreamingSubscriptionState;
(function (KnownMediaStreamingSubscriptionState) {
    /** Disabled */
    KnownMediaStreamingSubscriptionState["Disabled"] = "disabled";
    /** Inactive */
    KnownMediaStreamingSubscriptionState["Inactive"] = "inactive";
    /** Active */
    KnownMediaStreamingSubscriptionState["Active"] = "active";
})(KnownMediaStreamingSubscriptionState || (KnownMediaStreamingSubscriptionState = {}));
/** Known values of {@link TranscriptionSubscriptionState} that the service accepts. */
export var KnownTranscriptionSubscriptionState;
(function (KnownTranscriptionSubscriptionState) {
    /** Disabled */
    KnownTranscriptionSubscriptionState["Disabled"] = "disabled";
    /** Inactive */
    KnownTranscriptionSubscriptionState["Inactive"] = "inactive";
    /** Active */
    KnownTranscriptionSubscriptionState["Active"] = "active";
})(KnownTranscriptionSubscriptionState || (KnownTranscriptionSubscriptionState = {}));
/** Known values of {@link TranscriptionResultState} that the service accepts. */
export var KnownTranscriptionResultState;
(function (KnownTranscriptionResultState) {
    /** Final */
    KnownTranscriptionResultState["Final"] = "final";
    /** Intermediate */
    KnownTranscriptionResultState["Intermediate"] = "intermediate";
})(KnownTranscriptionResultState || (KnownTranscriptionResultState = {}));
/** Known values of {@link CallRejectReason} that the service accepts. */
export var KnownCallRejectReason;
(function (KnownCallRejectReason) {
    /** None */
    KnownCallRejectReason["None"] = "none";
    /** Busy */
    KnownCallRejectReason["Busy"] = "busy";
    /** Forbidden */
    KnownCallRejectReason["Forbidden"] = "forbidden";
})(KnownCallRejectReason || (KnownCallRejectReason = {}));
/** Known values of {@link CallLocatorKind} that the service accepts. */
export var KnownCallLocatorKind;
(function (KnownCallLocatorKind) {
    /** Unknown */
    KnownCallLocatorKind["Unknown"] = "unknown";
    /** GroupCallLocator */
    KnownCallLocatorKind["GroupCallLocator"] = "groupCallLocator";
    /** ServerCallLocator */
    KnownCallLocatorKind["ServerCallLocator"] = "serverCallLocator";
    /** RoomCallLocator */
    KnownCallLocatorKind["RoomCallLocator"] = "roomCallLocator";
})(KnownCallLocatorKind || (KnownCallLocatorKind = {}));
/** Known values of {@link PlaySourceType} that the service accepts. */
export var KnownPlaySourceType;
(function (KnownPlaySourceType) {
    /** File */
    KnownPlaySourceType["File"] = "file";
    /** Text */
    KnownPlaySourceType["Text"] = "text";
    /** Ssml */
    KnownPlaySourceType["Ssml"] = "ssml";
})(KnownPlaySourceType || (KnownPlaySourceType = {}));
/** Known values of {@link VoiceKind} that the service accepts. */
export var KnownVoiceKind;
(function (KnownVoiceKind) {
    /** Male */
    KnownVoiceKind["Male"] = "male";
    /** Female */
    KnownVoiceKind["Female"] = "female";
})(KnownVoiceKind || (KnownVoiceKind = {}));
/** Known values of {@link RecognizeInputType} that the service accepts. */
export var KnownRecognizeInputType;
(function (KnownRecognizeInputType) {
    /** Dtmf */
    KnownRecognizeInputType["Dtmf"] = "dtmf";
    /** Speech */
    KnownRecognizeInputType["Speech"] = "speech";
    /** SpeechOrDtmf */
    KnownRecognizeInputType["SpeechOrDtmf"] = "speechOrDtmf";
    /** Choices */
    KnownRecognizeInputType["Choices"] = "choices";
})(KnownRecognizeInputType || (KnownRecognizeInputType = {}));
/** Known values of {@link Tone} that the service accepts. */
export var KnownTone;
(function (KnownTone) {
    /** Zero */
    KnownTone["Zero"] = "zero";
    /** One */
    KnownTone["One"] = "one";
    /** Two */
    KnownTone["Two"] = "two";
    /** Three */
    KnownTone["Three"] = "three";
    /** Four */
    KnownTone["Four"] = "four";
    /** Five */
    KnownTone["Five"] = "five";
    /** Six */
    KnownTone["Six"] = "six";
    /** Seven */
    KnownTone["Seven"] = "seven";
    /** Eight */
    KnownTone["Eight"] = "eight";
    /** Nine */
    KnownTone["Nine"] = "nine";
    /** A */
    KnownTone["A"] = "a";
    /** B */
    KnownTone["B"] = "b";
    /** C */
    KnownTone["C"] = "c";
    /** D */
    KnownTone["D"] = "d";
    /** Pound */
    KnownTone["Pound"] = "pound";
    /** Asterisk */
    KnownTone["Asterisk"] = "asterisk";
})(KnownTone || (KnownTone = {}));
/** Known values of {@link DialogInputType} that the service accepts. */
export var KnownDialogInputType;
(function (KnownDialogInputType) {
    /** PowerVirtualAgents */
    KnownDialogInputType["PowerVirtualAgents"] = "powerVirtualAgents";
    /** AzureOpenAI */
    KnownDialogInputType["AzureOpenAI"] = "azureOpenAI";
})(KnownDialogInputType || (KnownDialogInputType = {}));
/** Known values of {@link RecordingContentType} that the service accepts. */
export var KnownRecordingContentType;
(function (KnownRecordingContentType) {
    /** Audio */
    KnownRecordingContentType["Audio"] = "audio";
    /** AudioVideo */
    KnownRecordingContentType["AudioVideo"] = "audioVideo";
})(KnownRecordingContentType || (KnownRecordingContentType = {}));
/** Known values of {@link RecordingChannelType} that the service accepts. */
export var KnownRecordingChannelType;
(function (KnownRecordingChannelType) {
    /** Mixed */
    KnownRecordingChannelType["Mixed"] = "mixed";
    /** Unmixed */
    KnownRecordingChannelType["Unmixed"] = "unmixed";
})(KnownRecordingChannelType || (KnownRecordingChannelType = {}));
/** Known values of {@link RecordingFormatType} that the service accepts. */
export var KnownRecordingFormatType;
(function (KnownRecordingFormatType) {
    /** Wav */
    KnownRecordingFormatType["Wav"] = "wav";
    /** Mp3 */
    KnownRecordingFormatType["Mp3"] = "mp3";
    /** Mp4 */
    KnownRecordingFormatType["Mp4"] = "mp4";
})(KnownRecordingFormatType || (KnownRecordingFormatType = {}));
/** Known values of {@link RecordingStorageKind} that the service accepts. */
export var KnownRecordingStorageKind;
(function (KnownRecordingStorageKind) {
    /** Storage managed by Azure Communication Services */
    KnownRecordingStorageKind["AzureCommunicationServices"] = "AzureCommunicationServices";
    /** Storage managed by provided Azure blob */
    KnownRecordingStorageKind["AzureBlobStorage"] = "AzureBlobStorage";
})(KnownRecordingStorageKind || (KnownRecordingStorageKind = {}));
/** Known values of {@link RecordingState} that the service accepts. */
export var KnownRecordingState;
(function (KnownRecordingState) {
    /** Active */
    KnownRecordingState["Active"] = "active";
    /** Inactive */
    KnownRecordingState["Inactive"] = "inactive";
})(KnownRecordingState || (KnownRecordingState = {}));
/** Known values of {@link RecordingKind} that the service accepts. */
export var KnownRecordingKind;
(function (KnownRecordingKind) {
    /** Recording initiated by Azure Communication Services */
    KnownRecordingKind["AzureCommunicationServices"] = "AzureCommunicationServices";
    /** Recording initiated by Teams user */
    KnownRecordingKind["Teams"] = "Teams";
    /** Recording initiated by Teams compliance policy */
    KnownRecordingKind["TeamsCompliance"] = "TeamsCompliance";
})(KnownRecordingKind || (KnownRecordingKind = {}));
/** Known values of {@link ChunkEndReason} that the service accepts. */
export var KnownChunkEndReason;
(function (KnownChunkEndReason) {
    /** ChunkIsBeingRecorded */
    KnownChunkEndReason["ChunkIsBeingRecorded"] = "chunkIsBeingRecorded";
    /** SessionEnded */
    KnownChunkEndReason["SessionEnded"] = "sessionEnded";
    /** ChunkMaximumSizeExceeded */
    KnownChunkEndReason["ChunkMaximumSizeExceeded"] = "chunkMaximumSizeExceeded";
    /** ChunkMaximumTimeExceeded */
    KnownChunkEndReason["ChunkMaximumTimeExceeded"] = "chunkMaximumTimeExceeded";
    /** ChunkUploadFailure */
    KnownChunkEndReason["ChunkUploadFailure"] = "chunkUploadFailure";
})(KnownChunkEndReason || (KnownChunkEndReason = {}));
/** Known values of {@link CallSessionEndReason} that the service accepts. */
export var KnownCallSessionEndReason;
(function (KnownCallSessionEndReason) {
    /** SessionStillOngoing */
    KnownCallSessionEndReason["SessionStillOngoing"] = "sessionStillOngoing";
    /** CallEnded */
    KnownCallSessionEndReason["CallEnded"] = "callEnded";
    /** InitiatorLeft */
    KnownCallSessionEndReason["InitiatorLeft"] = "initiatorLeft";
    /** HandedOverOrTransfered */
    KnownCallSessionEndReason["HandedOverOrTransfered"] = "handedOverOrTransfered";
    /** MaximumSessionTimeReached */
    KnownCallSessionEndReason["MaximumSessionTimeReached"] = "maximumSessionTimeReached";
    /** CallStartTimeout */
    KnownCallSessionEndReason["CallStartTimeout"] = "callStartTimeout";
    /** MediaTimeout */
    KnownCallSessionEndReason["MediaTimeout"] = "mediaTimeout";
    /** AudioStreamFailure */
    KnownCallSessionEndReason["AudioStreamFailure"] = "audioStreamFailure";
    /** AllInstancesBusy */
    KnownCallSessionEndReason["AllInstancesBusy"] = "allInstancesBusy";
    /** TeamsTokenConversionFailed */
    KnownCallSessionEndReason["TeamsTokenConversionFailed"] = "teamsTokenConversionFailed";
    /** ReportCallStateFailed */
    KnownCallSessionEndReason["ReportCallStateFailed"] = "reportCallStateFailed";
    /** ReportCallStateFailedAndSessionMustBeDiscarded */
    KnownCallSessionEndReason["ReportCallStateFailedAndSessionMustBeDiscarded"] = "reportCallStateFailedAndSessionMustBeDiscarded";
    /** CouldNotRejoinCall */
    KnownCallSessionEndReason["CouldNotRejoinCall"] = "couldNotRejoinCall";
    /** InvalidBotData */
    KnownCallSessionEndReason["InvalidBotData"] = "invalidBotData";
    /** CouldNotStart */
    KnownCallSessionEndReason["CouldNotStart"] = "couldNotStart";
    /** AppHostedMediaFailureOutcomeWithError */
    KnownCallSessionEndReason["AppHostedMediaFailureOutcomeWithError"] = "appHostedMediaFailureOutcomeWithError";
    /** AppHostedMediaFailureOutcomeGracefully */
    KnownCallSessionEndReason["AppHostedMediaFailureOutcomeGracefully"] = "appHostedMediaFailureOutcomeGracefully";
    /** HandedOverDueToMediaTimeout */
    KnownCallSessionEndReason["HandedOverDueToMediaTimeout"] = "handedOverDueToMediaTimeout";
    /** HandedOverDueToAudioStreamFailure */
    KnownCallSessionEndReason["HandedOverDueToAudioStreamFailure"] = "handedOverDueToAudioStreamFailure";
    /** SpeechRecognitionSessionNonRetriableError */
    KnownCallSessionEndReason["SpeechRecognitionSessionNonRetriableError"] = "speechRecognitionSessionNonRetriableError";
    /** SpeechRecognitionSessionRetriableErrorMaxRetryCountReached */
    KnownCallSessionEndReason["SpeechRecognitionSessionRetriableErrorMaxRetryCountReached"] = "speechRecognitionSessionRetriableErrorMaxRetryCountReached";
    /** HandedOverDueToChunkCreationFailure */
    KnownCallSessionEndReason["HandedOverDueToChunkCreationFailure"] = "handedOverDueToChunkCreationFailure";
    /** ChunkCreationFailed */
    KnownCallSessionEndReason["ChunkCreationFailed"] = "chunkCreationFailed";
    /** HandedOverDueToProcessingTimeout */
    KnownCallSessionEndReason["HandedOverDueToProcessingTimeout"] = "handedOverDueToProcessingTimeout";
    /** ProcessingTimeout */
    KnownCallSessionEndReason["ProcessingTimeout"] = "processingTimeout";
    /** TranscriptObjectCreationFailed */
    KnownCallSessionEndReason["TranscriptObjectCreationFailed"] = "transcriptObjectCreationFailed";
})(KnownCallSessionEndReason || (KnownCallSessionEndReason = {}));
/** Known values of {@link TranscriptionStatus} that the service accepts. */
export var KnownTranscriptionStatus;
(function (KnownTranscriptionStatus) {
    /** TranscriptionStarted */
    KnownTranscriptionStatus["TranscriptionStarted"] = "transcriptionStarted";
    /** TranscriptionFailed */
    KnownTranscriptionStatus["TranscriptionFailed"] = "transcriptionFailed";
    /** TranscriptionResumed */
    KnownTranscriptionStatus["TranscriptionResumed"] = "transcriptionResumed";
    /** TranscriptionUpdated */
    KnownTranscriptionStatus["TranscriptionUpdated"] = "transcriptionUpdated";
    /** TranscriptionStopped */
    KnownTranscriptionStatus["TranscriptionStopped"] = "transcriptionStopped";
    /** UnspecifiedError */
    KnownTranscriptionStatus["UnspecifiedError"] = "unspecifiedError";
})(KnownTranscriptionStatus || (KnownTranscriptionStatus = {}));
/** Known values of {@link TranscriptionStatusDetails} that the service accepts. */
export var KnownTranscriptionStatusDetails;
(function (KnownTranscriptionStatusDetails) {
    /** SubscriptionStarted */
    KnownTranscriptionStatusDetails["SubscriptionStarted"] = "subscriptionStarted";
    /** StreamConnectionReestablished */
    KnownTranscriptionStatusDetails["StreamConnectionReestablished"] = "streamConnectionReestablished";
    /** StreamConnectionUnsuccessful */
    KnownTranscriptionStatusDetails["StreamConnectionUnsuccessful"] = "streamConnectionUnsuccessful";
    /** StreamUrlMissing */
    KnownTranscriptionStatusDetails["StreamUrlMissing"] = "streamUrlMissing";
    /** ServiceShutdown */
    KnownTranscriptionStatusDetails["ServiceShutdown"] = "serviceShutdown";
    /** StreamConnectionInterrupted */
    KnownTranscriptionStatusDetails["StreamConnectionInterrupted"] = "streamConnectionInterrupted";
    /** SpeechServicesConnectionError */
    KnownTranscriptionStatusDetails["SpeechServicesConnectionError"] = "speechServicesConnectionError";
    /** SubscriptionStopped */
    KnownTranscriptionStatusDetails["SubscriptionStopped"] = "subscriptionStopped";
    /** UnspecifiedError */
    KnownTranscriptionStatusDetails["UnspecifiedError"] = "unspecifiedError";
    /** AuthenticationFailure */
    KnownTranscriptionStatusDetails["AuthenticationFailure"] = "authenticationFailure";
    /** BadRequest */
    KnownTranscriptionStatusDetails["BadRequest"] = "badRequest";
    /** TooManyRequests */
    KnownTranscriptionStatusDetails["TooManyRequests"] = "tooManyRequests";
    /** Forbidden */
    KnownTranscriptionStatusDetails["Forbidden"] = "forbidden";
    /** ServiceTimeout */
    KnownTranscriptionStatusDetails["ServiceTimeout"] = "serviceTimeout";
    /** TranscriptionLocaleUpdated */
    KnownTranscriptionStatusDetails["TranscriptionLocaleUpdated"] = "transcriptionLocaleUpdated";
})(KnownTranscriptionStatusDetails || (KnownTranscriptionStatusDetails = {}));
/** Known values of {@link MediaStreamingStatus} that the service accepts. */
export var KnownMediaStreamingStatus;
(function (KnownMediaStreamingStatus) {
    /** MediaStreamingStarted */
    KnownMediaStreamingStatus["MediaStreamingStarted"] = "mediaStreamingStarted";
    /** MediaStreamingFailed */
    KnownMediaStreamingStatus["MediaStreamingFailed"] = "mediaStreamingFailed";
    /** MediaStreamingStopped */
    KnownMediaStreamingStatus["MediaStreamingStopped"] = "mediaStreamingStopped";
    /** UnspecifiedError */
    KnownMediaStreamingStatus["UnspecifiedError"] = "unspecifiedError";
})(KnownMediaStreamingStatus || (KnownMediaStreamingStatus = {}));
/** Known values of {@link MediaStreamingStatusDetails} that the service accepts. */
export var KnownMediaStreamingStatusDetails;
(function (KnownMediaStreamingStatusDetails) {
    /** SubscriptionStarted */
    KnownMediaStreamingStatusDetails["SubscriptionStarted"] = "subscriptionStarted";
    /** StreamConnectionReestablished */
    KnownMediaStreamingStatusDetails["StreamConnectionReestablished"] = "streamConnectionReestablished";
    /** StreamConnectionUnsuccessful */
    KnownMediaStreamingStatusDetails["StreamConnectionUnsuccessful"] = "streamConnectionUnsuccessful";
    /** StreamUrlMissing */
    KnownMediaStreamingStatusDetails["StreamUrlMissing"] = "streamUrlMissing";
    /** ServiceShutdown */
    KnownMediaStreamingStatusDetails["ServiceShutdown"] = "serviceShutdown";
    /** StreamConnectionInterrupted */
    KnownMediaStreamingStatusDetails["StreamConnectionInterrupted"] = "streamConnectionInterrupted";
    /** SpeechServicesConnectionError */
    KnownMediaStreamingStatusDetails["SpeechServicesConnectionError"] = "speechServicesConnectionError";
    /** SubscriptionStopped */
    KnownMediaStreamingStatusDetails["SubscriptionStopped"] = "subscriptionStopped";
    /** UnspecifiedError */
    KnownMediaStreamingStatusDetails["UnspecifiedError"] = "unspecifiedError";
    /** AuthenticationFailure */
    KnownMediaStreamingStatusDetails["AuthenticationFailure"] = "authenticationFailure";
    /** BadRequest */
    KnownMediaStreamingStatusDetails["BadRequest"] = "badRequest";
    /** TooManyRequests */
    KnownMediaStreamingStatusDetails["TooManyRequests"] = "tooManyRequests";
    /** Forbidden */
    KnownMediaStreamingStatusDetails["Forbidden"] = "forbidden";
    /** ServiceTimeout */
    KnownMediaStreamingStatusDetails["ServiceTimeout"] = "serviceTimeout";
    /** InitialWebSocketConnectionFailed */
    KnownMediaStreamingStatusDetails["InitialWebSocketConnectionFailed"] = "initialWebSocketConnectionFailed";
})(KnownMediaStreamingStatusDetails || (KnownMediaStreamingStatusDetails = {}));
/** Known values of {@link RecognitionType} that the service accepts. */
export var KnownRecognitionType;
(function (KnownRecognitionType) {
    /** Dtmf */
    KnownRecognitionType["Dtmf"] = "dtmf";
    /** Speech */
    KnownRecognitionType["Speech"] = "speech";
    /** Choices */
    KnownRecognitionType["Choices"] = "choices";
})(KnownRecognitionType || (KnownRecognitionType = {}));
//# sourceMappingURL=index.js.map