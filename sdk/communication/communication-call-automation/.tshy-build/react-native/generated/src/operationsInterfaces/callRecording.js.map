{"version":3,"file":"callRecording.js","sourceRoot":"","sources":["../../../../../src/generated/src/operationsInterfaces/callRecording.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  StartCallRecordingRequest,\n  CallRecordingStartRecordingOptionalParams,\n  CallRecordingStartRecordingResponse,\n  CallRecordingGetRecordingPropertiesOptionalParams,\n  CallRecordingGetRecordingPropertiesResponse,\n  CallRecordingStopRecordingOptionalParams,\n  CallRecordingPauseRecordingOptionalParams,\n  CallRecordingResumeRecordingOptionalParams,\n  CallRecordingGetRecordingResultOptionalParams,\n  CallRecordingGetRecordingResultResponse,\n} from \"../models/index.js\";\n\n/** Interface representing a CallRecording. */\nexport interface CallRecording {\n  /**\n   * Start recording the call.\n   * @param startCallRecording The request body of start call recording request.\n   * @param options The options parameters.\n   */\n  startRecording(\n    startCallRecording: StartCallRecordingRequest,\n    options?: CallRecordingStartRecordingOptionalParams,\n  ): Promise<CallRecordingStartRecordingResponse>;\n  /**\n   * Get call recording properties.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  getRecordingProperties(\n    recordingId: string,\n    options?: CallRecordingGetRecordingPropertiesOptionalParams,\n  ): Promise<CallRecordingGetRecordingPropertiesResponse>;\n  /**\n   * Stop recording the call.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  stopRecording(\n    recordingId: string,\n    options?: CallRecordingStopRecordingOptionalParams,\n  ): Promise<void>;\n  /**\n   * Pause recording the call.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  pauseRecording(\n    recordingId: string,\n    options?: CallRecordingPauseRecordingOptionalParams,\n  ): Promise<void>;\n  /**\n   * Resume recording the call.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  resumeRecording(\n    recordingId: string,\n    options?: CallRecordingResumeRecordingOptionalParams,\n  ): Promise<void>;\n  /**\n   * Get recording result. This includes the download URLs for the recording chunks.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  getRecordingResult(\n    recordingId: string,\n    options?: CallRecordingGetRecordingResultOptionalParams,\n  ): Promise<CallRecordingGetRecordingResultResponse>;\n}\n"]}