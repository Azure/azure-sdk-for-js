{"version":3,"file":"callDialog.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/callDialog.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAGH,uEAAiD;AACjD,sEAAgD;AAChD,4EAAsD;AAWtD,8CAA8C;AAC9C,MAAa,cAAc;IAGzB;;;OAGG;IACH,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;;;OAMG;IACH,WAAW,CACT,gBAAwB,EACxB,QAAgB,EAChB,kBAAsC,EACtC,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAC3D,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,UAAU,CACR,gBAAwB,EACxB,QAAgB,EAChB,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvC,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,YAAY,CACV,gBAAwB,EACxB,QAAgB,EAChB,mBAAwC,EACxC,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,mBAAmB,EAAE,OAAO,EAAE,EAC5D,yBAAyB,CAC1B,CAAC;IACJ,CAAC;CACF;AAhED,wCAgEC;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,gEAAgE;IACtE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,gBAAgB;QAC3B,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EAAE,gEAAgE;IACtE,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,oBAAoB,CAAC;IACzE,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,gBAAgB;QAC3B,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,gEAAgE;IACtE,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,gBAAgB;QAC3B,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CallDialog } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { CallAutomationApiClient } from \"../callAutomationApiClient.js\";\nimport {\n  StartDialogRequest,\n  CallDialogStartDialogOptionalParams,\n  CallDialogStartDialogResponse,\n  CallDialogStopDialogOptionalParams,\n  UpdateDialogRequest,\n  CallDialogUpdateDialogOptionalParams,\n} from \"../models/index.js\";\n\n/** Class containing CallDialog operations. */\nexport class CallDialogImpl implements CallDialog {\n  private readonly client: CallAutomationApiClient;\n\n  /**\n   * Initialize a new instance of the class CallDialog class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CallAutomationApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Start a dialog.\n   * @param callConnectionId The call connection id\n   * @param dialogId The dialog id\n   * @param startDialogRequest The start dialog request\n   * @param options The options parameters.\n   */\n  startDialog(\n    callConnectionId: string,\n    dialogId: string,\n    startDialogRequest: StartDialogRequest,\n    options?: CallDialogStartDialogOptionalParams,\n  ): Promise<CallDialogStartDialogResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, dialogId, startDialogRequest, options },\n      startDialogOperationSpec,\n    );\n  }\n\n  /**\n   * @param callConnectionId\n   * @param dialogId\n   * @param options The options parameters.\n   */\n  stopDialog(\n    callConnectionId: string,\n    dialogId: string,\n    options?: CallDialogStopDialogOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, dialogId, options },\n      stopDialogOperationSpec,\n    );\n  }\n\n  /**\n   * Update a dialog.\n   * @param callConnectionId The call connection id\n   * @param dialogId The dialog id\n   * @param updateDialogRequest The update dialog request\n   * @param options The options parameters.\n   */\n  updateDialog(\n    callConnectionId: string,\n    dialogId: string,\n    updateDialogRequest: UpdateDialogRequest,\n    options?: CallDialogUpdateDialogOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, dialogId, updateDialogRequest, options },\n      updateDialogOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst startDialogOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/dialogs/{dialogId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.DialogStateResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.startDialogRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.callConnectionId,\n    Parameters.dialogId,\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst stopDialogOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/dialogs/{dialogId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.operationCallbackUri],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.callConnectionId,\n    Parameters.dialogId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateDialogOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/dialogs/{dialogId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.updateDialogRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.callConnectionId,\n    Parameters.dialogId,\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\n"]}