{"version":3,"file":"eventResponses.js","sourceRoot":"","sources":["../../../src/eventprocessor/eventResponses.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  AddParticipantSucceeded,\n  AddParticipantFailed,\n  CallConnected,\n  PlayCanceled,\n  RecognizeCanceled,\n  PlayCompleted,\n  PlayFailed,\n  RemoveParticipantSucceeded,\n  RemoveParticipantFailed,\n  SendDtmfTonesCompleted,\n  SendDtmfTonesFailed,\n  RecognizeCompleted,\n  RecognizeFailed,\n  CallTransferAccepted,\n  CallTransferFailed,\n  CancelAddParticipantSucceeded,\n  CancelAddParticipantFailed,\n  CreateCallFailed,\n  AnswerFailed,\n  ConnectFailed,\n} from \"../models/events.js\";\n\n/**\n * AddParticipant event result\n */\nexport interface AddParticipantEventResult {\n  /** returns true if add participant was successful */\n  isSuccess: boolean;\n\n  /** contains success event if the result was successful */\n  successResult?: AddParticipantSucceeded;\n\n  /** contains failure event if the result was failure */\n  failureResult?: AddParticipantFailed;\n}\n\n/**\n * AnswerCall event result\n */\nexport interface AnswerCallEventResult {\n  /** returns true if answer call was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: CallConnected;\n  /** contains failure event if the result was failure */\n  failureResult?: AnswerFailed;\n}\n\n/**\n * CancelAllMediaOperations event result\n */\nexport interface CancelAllMediaOperationsEventResult {\n  /** returns true if cancel all media was successful */\n  isSuccess: boolean;\n  /** contains play cancel event if play media was canceled */\n  playCanceledSuccessResult?: PlayCanceled;\n  /** contains recognize cancel event if recognize media was canceled */\n  recognizeCanceledSuccessResult?: RecognizeCanceled;\n}\n\n/**\n * CreateCall event result\n */\nexport interface CreateCallEventResult {\n  /** returns true if create call was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: CallConnected;\n  /** contains failure event if the result was failure */\n  failureResult?: CreateCallFailed;\n}\n\n/**\n * ConnectCall event result\n */\nexport interface ConnectCallEventResult {\n  /** returns true if create call was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: CallConnected;\n  /** contains failure event if the result was failure */\n  failureResult?: ConnectFailed;\n}\n\n/**\n * Play event result\n */\nexport interface PlayEventResult {\n  /** returns true if play was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: PlayCompleted;\n  /** contains failure event if the result was failure */\n  failureResult?: PlayFailed;\n}\n\n/**\n * RemoveParticipant event result\n */\nexport interface RemoveParticipantEventResult {\n  /** returns true if remove participant was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: RemoveParticipantSucceeded;\n  /** contains failure event if the result was failure */\n  failureResult?: RemoveParticipantFailed;\n}\n\n/**\n * SendDtmf event result\n */\nexport interface SendDtmfEventResult {\n  /** returns true if send dtmf was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: SendDtmfTonesCompleted;\n  /** contains failure event if the result was failure */\n  failureResult?: SendDtmfTonesFailed;\n}\n\n/**\n * StartRecognizing event result\n */\nexport interface StartRecognizingEventResult {\n  /** returns true if recognize was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: RecognizeCompleted;\n  /** contains failure event if the result was failure */\n  failureResult?: RecognizeFailed;\n}\n\n/**\n * TransferCallToParticipant event result\n */\nexport interface TransferCallToParticipantEventResult {\n  /** returns true if transfer call to participant was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: CallTransferAccepted;\n  /** contains failure event if the result was failure */\n  failureResult?: CallTransferFailed;\n}\n\n/**\n * TransferCallToParticipant event result\n */\nexport interface CancelAddParticipantEventResult {\n  /** returns true if cancel add participant was successful */\n  isSuccess: boolean;\n  /** contains success event if the result was successful */\n  successResult?: CancelAddParticipantSucceeded;\n  /** contains failure event if the result was failure */\n  failureResult?: CancelAddParticipantFailed;\n}\n"]}