{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../src/models/models.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAelC,6DAmB0C;AAhBxC,iHAAA,qBAAqB,OAAA;AACrB,+HAAA,mCAAmC,OAAA;AACnC,0HAAA,8BAA8B,OAAA;AAC9B,4HAAA,gCAAgC,OAAA;AAkElC,6DAA6D;AAC7D,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,WAAW;IACX,0BAAa,CAAA;IACb,aAAa;IACb,8BAAiB,CAAA;AACnB,CAAC,EALW,SAAS,yBAAT,SAAS,QAKpB;AAiCD,mBAAmB;AACnB,IAAY,QAiCX;AAjCD,WAAY,QAAQ;IAClB,WAAW;IACX,yBAAa,CAAA;IACb,UAAU;IACV,uBAAW,CAAA;IACX,UAAU;IACV,uBAAW,CAAA;IACX,YAAY;IACZ,2BAAe,CAAA;IACf,WAAW;IACX,yBAAa,CAAA;IACb,WAAW;IACX,yBAAa,CAAA;IACb,UAAU;IACV,uBAAW,CAAA;IACX,YAAY;IACZ,2BAAe,CAAA;IACf,YAAY;IACZ,2BAAe,CAAA;IACf,WAAW;IACX,yBAAa,CAAA;IACb,QAAQ;IACR,mBAAO,CAAA;IACP,QAAQ;IACR,mBAAO,CAAA;IACP,QAAQ;IACR,mBAAO,CAAA;IACP,QAAQ;IACR,mBAAO,CAAA;IACP,YAAY;IACZ,2BAAe,CAAA;IACf,eAAe;IACf,iCAAqB,CAAA;AACvB,CAAC,EAjCW,QAAQ,wBAAR,QAAQ,QAiCnB;AAWD,4DAA4D;AAC5D,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC5B,WAAW;IACX,mCAAa,CAAA;IACb,cAAc;IACd,yCAAmB,CAAA;AACrB,CAAC,EALW,kBAAkB,kCAAlB,kBAAkB,QAK7B","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  CommunicationIdentifier,\n  CommunicationUserIdentifier,\n  MicrosoftTeamsUserIdentifier,\n  MicrosoftTeamsAppIdentifier,\n  PhoneNumberIdentifier,\n} from \"@azure/communication-common\";\nimport type {\n  CallConnectionStateModel,\n  MediaStreamingSubscription,\n  TranscriptionSubscription,\n} from \"../generated/src/index.js\";\n\nexport {\n  CallConnectionStateModel,\n  CallRejectReason,\n  KnownCallRejectReason,\n  KnownMediaStreamingAudioChannelType,\n  KnownMediaStreamingContentType,\n  KnownMediaStreamingTransportType,\n  MediaStreamingAudioChannelType,\n  MediaStreamingOptions,\n  MediaStreamingContentType,\n  MediaStreamingTransportType,\n  TranscriptionOptions,\n  TranscriptionTransportType,\n  RecognitionType,\n  ChoiceResult,\n  DtmfResult,\n  SpeechResult,\n  RecordingState,\n  Tone,\n} from \"../generated/src/models/index.js\";\n\n/** Properties of a call connection */\nexport interface CallConnectionProperties {\n  /** The call connection id. */\n  callConnectionId?: string;\n  /** The server call id. */\n  serverCallId?: string;\n  /**\n   * The source caller Id, a phone number, that's shown to the PSTN participant being invited.\n   * Required only when calling a PSTN callee.\n   */\n  sourceCallerIdNumber?: PhoneNumberIdentifier;\n  /** Display name of the call if dialing out to a pstn number. */\n  sourceDisplayName?: string;\n  /** Source identity. */\n  source?: CommunicationIdentifier;\n  /** The targets of the call. */\n  targetParticipants?: CommunicationIdentifier[];\n  /** The state of the call connection. */\n  callConnectionState?: CallConnectionStateModel;\n  /** The callback URL. */\n  callbackUrl?: string;\n  /** SubscriptionId for media streaming */\n  mediaSubscriptionId?: string;\n  /** The correlation ID. */\n  correlationId?: string;\n  /** Identity of the answering entity. Only populated when identity is provided in the request. */\n  answeredby?: CommunicationUserIdentifier;\n  /** Identity of the original Pstn target of an incoming Call. Only populated when the original target is a Pstn number. */\n  answeredFor?: PhoneNumberIdentifier;\n  /** Media streaming subscription */\n  mediaStreamingSubscription?: MediaStreamingSubscription;\n  /** Transcription Subscription. */\n  transcriptionSubscription?: TranscriptionSubscription;\n}\n\n/** Contract model of an ACS call participant */\nexport interface CallParticipant {\n  /** Communication identifier of the participant */\n  identifier?: CommunicationIdentifier;\n  /** Is participant muted */\n  isMuted?: boolean;\n  /** Is participant on hold. */\n  isOnHold?: boolean;\n}\n\n/** The locator used for joining or taking action on a call. */\nexport interface CallLocator {\n  id: string;\n  kind: CallLocatorType;\n}\n\n/** Defines values for VoiceKind that the service accepts. */\nexport enum VoiceKind {\n  /** Male */\n  Male = \"male\",\n  /** Female */\n  Female = \"female\",\n}\n\n/** The PlaySource model. */\nexport interface PlaySource {\n  /** @deprecated Not in use, instead use playsourcecacheid for similar functionality*/\n  playsourcacheid?: string;\n  /** Sets the play source cache id.*/\n  playSourceCacheId?: string;\n}\n\n/** The FileSource model. */\nexport interface FileSource extends PlaySource {\n  url: string;\n  readonly kind: \"fileSource\";\n}\n\n/** The TextSource model. */\nexport interface TextSource extends PlaySource {\n  text: string;\n  sourceLocale?: string;\n  voiceKind?: VoiceKind;\n  voiceName?: string;\n  customVoiceEndpointId?: string;\n  readonly kind: \"textSource\";\n}\n\n/** The SsmlSource model. */\nexport interface SsmlSource extends PlaySource {\n  ssmlText: string;\n  customVoiceEndpointId?: string;\n  readonly kind: \"ssmlSource\";\n}\n\n/** A Dtmf Tone. */\nexport enum DtmfTone {\n  /** Zero */\n  Zero = \"zero\",\n  /** One */\n  One = \"one\",\n  /** Two */\n  Two = \"two\",\n  /** Three */\n  Three = \"three\",\n  /** Four */\n  Four = \"four\",\n  /** Five */\n  Five = \"five\",\n  /** Six */\n  Six = \"six\",\n  /** Seven */\n  Seven = \"seven\",\n  /** Eight */\n  Eight = \"eight\",\n  /** Nine */\n  Nine = \"nine\",\n  /** A */\n  A = \"a\",\n  /** B */\n  B = \"b\",\n  /** C */\n  C = \"c\",\n  /** D */\n  D = \"d\",\n  /** Pound */\n  Pound = \"pound\",\n  /** Asterisk */\n  Asterisk = \"asterisk\",\n}\n\n/** A Recognition Choice */\nexport interface RecognitionChoice {\n  /** Identifier for a given choice */\n  label: string;\n  /** List of phrases to recognize */\n  phrases: string[];\n  tone?: DtmfTone;\n}\n\n/** The type of the recognition that the service accepts. */\nexport enum RecognizeInputType {\n  /** Dtmf */\n  Dtmf = \"dtmf\",\n  /** Choices */\n  Choices = \"choices\",\n}\n\n/** Call invitee details. */\nexport interface CallInvite {\n  /** The Target's PhoneNumberIdentifier, CommunicationUserIdentifier, MicrosoftTeamsUserIdentifier or MicrosoftTeamsAppIdentifier. */\n  readonly targetParticipant:\n    | PhoneNumberIdentifier\n    | CommunicationUserIdentifier\n    | MicrosoftTeamsUserIdentifier\n    | MicrosoftTeamsAppIdentifier;\n  /** Caller's phone number identifier. */\n  readonly sourceCallIdNumber?: PhoneNumberIdentifier;\n  sourceDisplayName?: string;\n  /** Used by customer to send custom context to targets. */\n  customCallingContext?: CustomCallingContext;\n}\n\n/** The locator type of a call. */\nexport type CallLocatorType = \"serverCallLocator\" | \"groupCallLocator\" | \"roomCallLocator\";\n\n/** The content type of a call recording. */\nexport type RecordingContent = \"audio\" | \"audioVideo\";\n\n/** The channel type of a call recording. */\nexport type RecordingChannel = \"mixed\" | \"unmixed\";\n\n/** The format type of a call recording. */\nexport type RecordingFormat = \"mp3\" | \"mp4\" | \"wav\";\n\n/** The format type of a call recording. */\nexport type RecordingKind = \"azureCommunicationServices\" | \"teams\" | \"teamsCompliance\";\n\n/** The storage type of a call recording. */\nexport type RecordingStorageKind = \"azureCommunicationServices\" | \"azureBlobStorage\";\n\n/** Channel affinity for a participant */\nexport interface ChannelAffinity {\n  /** Channel number to which bitstream from a particular participant will be written. */\n  channel?: number;\n  /**\n   * The identifier for the participant whose bitstream will be written to the channel\n   * represented by the channel number.\n   */\n  targetParticipant: CommunicationIdentifier;\n}\n\n/** The recording storage */\nexport interface RecordingStorage {\n  /** Defines the kind of recording storage */\n  recordingStorageKind: RecordingStorageKind;\n  /** Uri of a container or a location within a container */\n  recordingDestinationContainerUrl?: string;\n}\n\ninterface CustomCallingContextHeader {\n  key: string;\n  value: string;\n}\n\n/** VOIP header. */\nexport interface VoipHeader extends CustomCallingContextHeader {\n  kind: \"voip\";\n}\n\n/** SIP User To User header. */\nexport interface SipUserToUserHeader extends CustomCallingContextHeader {\n  kind: \"sipuui\";\n}\n\n/** SIP Custom header. */\nexport interface SipCustomHeader extends CustomCallingContextHeader {\n  kind: \"sipx\";\n  sipHeaderPrefix?: SipHeaderPrefix;\n}\n\n/** The type of the Sip header prefix. */\nexport type SipHeaderPrefix = \"X-\" | \"X-MS-Custom-\";\n\n/** Custom Calling Context */\nexport type CustomCallingContext = (VoipHeader | SipUserToUserHeader | SipCustomHeader)[];\n\n/** AI options for the call. */\nexport interface CallIntelligenceOptions {\n  /** The identifier of the Cognitive Service resource assigned to this call. */\n  cognitiveServicesEndpoint?: string;\n}\n"]}