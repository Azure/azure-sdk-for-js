/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const CreateCallRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateCallRequest",
    modelProperties: {
      targets: {
        serializedName: "targets",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel",
            },
          },
        },
      },
      sourceCallerIdNumber: {
        serializedName: "sourceCallerIdNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel",
        },
      },
      sourceDisplayName: {
        serializedName: "sourceDisplayName",
        type: {
          name: "String",
        },
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel",
        },
      },
      opsSource: {
        serializedName: "opsSource",
        type: {
          name: "Composite",
          className: "MicrosoftTeamsAppIdentifierModel",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      callbackUri: {
        serializedName: "callbackUri",
        required: true,
        type: {
          name: "String",
        },
      },
      mediaStreamingConfiguration: {
        serializedName: "mediaStreamingConfiguration",
        type: {
          name: "Composite",
          className: "MediaStreamingConfiguration",
        },
      },
      transcriptionConfiguration: {
        serializedName: "transcriptionConfiguration",
        type: {
          name: "Composite",
          className: "TranscriptionConfiguration",
        },
      },
      callIntelligenceOptions: {
        serializedName: "callIntelligenceOptions",
        type: {
          name: "Composite",
          className: "CallIntelligenceOptionsInternal",
        },
      },
      customCallingContext: {
        serializedName: "customCallingContext",
        type: {
          name: "Composite",
          className: "CustomCallingContextInternal",
        },
      },
    },
  },
};

export const CommunicationIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationIdentifierModel",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String",
        },
      },
      rawId: {
        serializedName: "rawId",
        type: {
          name: "String",
        },
      },
      communicationUser: {
        serializedName: "communicationUser",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel",
        },
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel",
        },
      },
      microsoftTeamsUser: {
        serializedName: "microsoftTeamsUser",
        type: {
          name: "Composite",
          className: "MicrosoftTeamsUserIdentifierModel",
        },
      },
      microsoftTeamsApp: {
        serializedName: "microsoftTeamsApp",
        type: {
          name: "Composite",
          className: "MicrosoftTeamsAppIdentifierModel",
        },
      },
    },
  },
};

export const CommunicationUserIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationUserIdentifierModel",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PhoneNumberIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberIdentifierModel",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MicrosoftTeamsUserIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftTeamsUserIdentifierModel",
    modelProperties: {
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String",
        },
      },
      isAnonymous: {
        serializedName: "isAnonymous",
        type: {
          name: "Boolean",
        },
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MicrosoftTeamsAppIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftTeamsAppIdentifierModel",
    modelProperties: {
      appId: {
        serializedName: "appId",
        required: true,
        type: {
          name: "String",
        },
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MediaStreamingConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaStreamingConfiguration",
    modelProperties: {
      transportUrl: {
        serializedName: "transportUrl",
        required: true,
        type: {
          name: "String",
        },
      },
      transportType: {
        serializedName: "transportType",
        required: true,
        type: {
          name: "String",
        },
      },
      contentType: {
        serializedName: "contentType",
        required: true,
        type: {
          name: "String",
        },
      },
      audioChannelType: {
        serializedName: "audioChannelType",
        required: true,
        type: {
          name: "String",
        },
      },
      startMediaStreaming: {
        serializedName: "startMediaStreaming",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const TranscriptionConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TranscriptionConfiguration",
    modelProperties: {
      transportUrl: {
        serializedName: "transportUrl",
        required: true,
        type: {
          name: "String",
        },
      },
      transportType: {
        serializedName: "transportType",
        required: true,
        type: {
          name: "String",
        },
      },
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String",
        },
      },
      startTranscription: {
        serializedName: "startTranscription",
        required: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const CallIntelligenceOptionsInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallIntelligenceOptionsInternal",
    modelProperties: {
      cognitiveServicesEndpoint: {
        serializedName: "cognitiveServicesEndpoint",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CustomCallingContextInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomCallingContextInternal",
    modelProperties: {
      voipHeaders: {
        serializedName: "voipHeaders",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      sipHeaders: {
        serializedName: "sipHeaders",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const CallConnectionPropertiesInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallConnectionPropertiesInternal",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String",
        },
      },
      targets: {
        serializedName: "targets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel",
            },
          },
        },
      },
      callConnectionState: {
        serializedName: "callConnectionState",
        type: {
          name: "String",
        },
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String",
        },
      },
      mediaSubscriptionId: {
        serializedName: "mediaSubscriptionId",
        type: {
          name: "String",
        },
      },
      dataSubscriptionId: {
        serializedName: "dataSubscriptionId",
        type: {
          name: "String",
        },
      },
      sourceCallerIdNumber: {
        serializedName: "sourceCallerIdNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel",
        },
      },
      sourceDisplayName: {
        serializedName: "sourceDisplayName",
        type: {
          name: "String",
        },
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String",
        },
      },
      answeredBy: {
        serializedName: "answeredBy",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel",
        },
      },
      answeredFor: {
        serializedName: "answeredFor",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel",
        },
      },
    },
  },
};

export const CommunicationErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError",
        },
      },
    },
  },
};

export const CommunicationError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationError",
            },
          },
        },
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError",
        },
      },
    },
  },
};

export const AnswerCallRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnswerCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String",
        },
      },
      callbackUri: {
        serializedName: "callbackUri",
        required: true,
        type: {
          name: "String",
        },
      },
      customCallingContext: {
        serializedName: "customCallingContext",
        type: {
          name: "Composite",
          className: "CustomCallingContextInternal",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      mediaStreamingConfiguration: {
        serializedName: "mediaStreamingConfiguration",
        type: {
          name: "Composite",
          className: "MediaStreamingConfiguration",
        },
      },
      transcriptionConfiguration: {
        serializedName: "transcriptionConfiguration",
        type: {
          name: "Composite",
          className: "TranscriptionConfiguration",
        },
      },
      callIntelligenceOptions: {
        serializedName: "callIntelligenceOptions",
        type: {
          name: "Composite",
          className: "CallIntelligenceOptionsInternal",
        },
      },
      answeredBy: {
        serializedName: "answeredBy",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel",
        },
      },
    },
  },
};

export const RedirectCallRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedirectCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      customCallingContext: {
        serializedName: "customCallingContext",
        type: {
          name: "Composite",
          className: "CustomCallingContextInternal",
        },
      },
    },
  },
};

export const RejectCallRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RejectCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String",
        },
      },
      callRejectReason: {
        serializedName: "callRejectReason",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TransferToParticipantRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferToParticipantRequest",
    modelProperties: {
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      customCallingContext: {
        serializedName: "customCallingContext",
        type: {
          name: "Composite",
          className: "CustomCallingContextInternal",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      transferee: {
        serializedName: "transferee",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
      sourceCallerIdNumber: {
        serializedName: "sourceCallerIdNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel",
        },
      },
    },
  },
};

export const TransferCallResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferCallResponse",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PlayRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayRequest",
    modelProperties: {
      playSources: {
        serializedName: "playSources",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PlaySourceInternal",
            },
          },
        },
      },
      playTo: {
        serializedName: "playTo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel",
            },
          },
        },
      },
      playOptions: {
        serializedName: "playOptions",
        type: {
          name: "Composite",
          className: "PlayOptionsInternal",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PlaySourceInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlaySourceInternal",
    modelProperties: {
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String",
        },
      },
      playSourceCacheId: {
        serializedName: "playSourceCacheId",
        type: {
          name: "String",
        },
      },
      file: {
        serializedName: "file",
        type: {
          name: "Composite",
          className: "FileSourceInternal",
        },
      },
      text: {
        serializedName: "text",
        type: {
          name: "Composite",
          className: "TextSourceInternal",
        },
      },
      ssml: {
        serializedName: "ssml",
        type: {
          name: "Composite",
          className: "SsmlSourceInternal",
        },
      },
    },
  },
};

export const FileSourceInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileSourceInternal",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TextSourceInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TextSourceInternal",
    modelProperties: {
      text: {
        serializedName: "text",
        required: true,
        type: {
          name: "String",
        },
      },
      sourceLocale: {
        serializedName: "sourceLocale",
        type: {
          name: "String",
        },
      },
      voiceKind: {
        serializedName: "voiceKind",
        type: {
          name: "String",
        },
      },
      voiceName: {
        serializedName: "voiceName",
        type: {
          name: "String",
        },
      },
      customVoiceEndpointId: {
        serializedName: "customVoiceEndpointId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SsmlSourceInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SsmlSourceInternal",
    modelProperties: {
      ssmlText: {
        serializedName: "ssmlText",
        required: true,
        type: {
          name: "String",
        },
      },
      customVoiceEndpointId: {
        serializedName: "customVoiceEndpointId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PlayOptionsInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayOptionsInternal",
    modelProperties: {
      loop: {
        serializedName: "loop",
        required: true,
        type: {
          name: "Boolean",
        },
      },
      interruptCallMediaOperation: {
        serializedName: "interruptCallMediaOperation",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const StartTranscriptionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartTranscriptionRequest",
    modelProperties: {
      locale: {
        serializedName: "locale",
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StopTranscriptionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StopTranscriptionRequest",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecognizeRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecognizeRequest",
    modelProperties: {
      recognizeInputType: {
        serializedName: "recognizeInputType",
        required: true,
        type: {
          name: "String",
        },
      },
      playPrompt: {
        serializedName: "playPrompt",
        type: {
          name: "Composite",
          className: "PlaySourceInternal",
        },
      },
      playPrompts: {
        serializedName: "playPrompts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PlaySourceInternal",
            },
          },
        },
      },
      interruptCallMediaOperation: {
        serializedName: "interruptCallMediaOperation",
        type: {
          name: "Boolean",
        },
      },
      recognizeOptions: {
        serializedName: "recognizeOptions",
        type: {
          name: "Composite",
          className: "RecognizeOptions",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecognizeOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecognizeOptions",
    modelProperties: {
      interruptPrompt: {
        serializedName: "interruptPrompt",
        type: {
          name: "Boolean",
        },
      },
      initialSilenceTimeoutInSeconds: {
        constraints: {
          InclusiveMaximum: 300,
          InclusiveMinimum: 0,
        },
        serializedName: "initialSilenceTimeoutInSeconds",
        type: {
          name: "Number",
        },
      },
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      speechLanguage: {
        serializedName: "speechLanguage",
        type: {
          name: "String",
        },
      },
      speechRecognitionModelEndpointId: {
        serializedName: "speechRecognitionModelEndpointId",
        type: {
          name: "String",
        },
      },
      dtmfOptions: {
        serializedName: "dtmfOptions",
        type: {
          name: "Composite",
          className: "DtmfOptions",
        },
      },
      choices: {
        serializedName: "choices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Choice",
            },
          },
        },
      },
      speechOptions: {
        serializedName: "speechOptions",
        type: {
          name: "Composite",
          className: "SpeechOptions",
        },
      },
    },
  },
};

export const DtmfOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DtmfOptions",
    modelProperties: {
      interToneTimeoutInSeconds: {
        constraints: {
          InclusiveMaximum: 60,
          InclusiveMinimum: 1,
        },
        serializedName: "interToneTimeoutInSeconds",
        type: {
          name: "Number",
        },
      },
      maxTonesToCollect: {
        serializedName: "maxTonesToCollect",
        type: {
          name: "Number",
        },
      },
      stopTones: {
        serializedName: "stopTones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const Choice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Choice",
    modelProperties: {
      label: {
        serializedName: "label",
        required: true,
        type: {
          name: "String",
        },
      },
      phrases: {
        serializedName: "phrases",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      tone: {
        serializedName: "tone",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SpeechOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpeechOptions",
    modelProperties: {
      endSilenceTimeoutInMs: {
        serializedName: "endSilenceTimeoutInMs",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ContinuousDtmfRecognitionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContinuousDtmfRecognitionRequest",
    modelProperties: {
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SendDtmfTonesRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SendDtmfTonesRequest",
    modelProperties: {
      tones: {
        serializedName: "tones",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SendDtmfTonesResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SendDtmfTonesResult",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpdateTranscriptionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateTranscriptionRequest",
    modelProperties: {
      locale: {
        serializedName: "locale",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const HoldRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HoldRequest",
    modelProperties: {
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      playSourceInfo: {
        serializedName: "playSourceInfo",
        type: {
          name: "Composite",
          className: "PlaySourceInternal",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UnholdRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UnholdRequest",
    modelProperties: {
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StartHoldMusicRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartHoldMusicRequest",
    modelProperties: {
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      playSourceInfo: {
        serializedName: "playSourceInfo",
        type: {
          name: "Composite",
          className: "PlaySourceInternal",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StopHoldMusicRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StopHoldMusicRequest",
    modelProperties: {
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StartMediaStreamingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartMediaStreamingRequest",
    modelProperties: {
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StopMediaStreamingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StopMediaStreamingRequest",
    modelProperties: {
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StartDialogRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartDialogRequest",
    modelProperties: {
      dialog: {
        serializedName: "dialog",
        type: {
          name: "Composite",
          className: "BaseDialog",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const BaseDialog: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BaseDialog",
    uberParent: "BaseDialog",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind",
    },
    modelProperties: {
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String",
        },
      },
      context: {
        serializedName: "context",
        required: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } },
          },
        },
      },
    },
  },
};

export const DialogStateResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogStateResponse",
    modelProperties: {
      dialogId: {
        serializedName: "dialogId",
        type: {
          name: "String",
        },
      },
      dialog: {
        serializedName: "dialog",
        type: {
          name: "Composite",
          className: "BaseDialog",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpdateDialogRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateDialogRequest",
    modelProperties: {
      dialog: {
        serializedName: "dialog",
        type: {
          name: "Composite",
          className: "DialogUpdateBase",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogUpdateBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogUpdateBase",
    uberParent: "DialogUpdateBase",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind",
    },
    modelProperties: {
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String",
        },
      },
      context: {
        serializedName: "context",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } },
          },
        },
      },
    },
  },
};

export const GetParticipantsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetParticipantsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CallParticipantInternal",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CallParticipantInternal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallParticipantInternal",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      isMuted: {
        serializedName: "isMuted",
        type: {
          name: "Boolean",
        },
      },
      isOnHold: {
        serializedName: "isOnHold",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const AddParticipantRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantRequest",
    modelProperties: {
      sourceCallerIdNumber: {
        serializedName: "sourceCallerIdNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel",
        },
      },
      sourceDisplayName: {
        serializedName: "sourceDisplayName",
        type: {
          name: "String",
        },
      },
      participantToAdd: {
        serializedName: "participantToAdd",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      invitationTimeoutInSeconds: {
        constraints: {
          InclusiveMaximum: 180,
          InclusiveMinimum: 0,
        },
        serializedName: "invitationTimeoutInSeconds",
        type: {
          name: "Number",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      customCallingContext: {
        serializedName: "customCallingContext",
        type: {
          name: "Composite",
          className: "CustomCallingContextInternal",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AddParticipantResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantResponse",
    modelProperties: {
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CallParticipantInternal",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      invitationId: {
        serializedName: "invitationId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RemoveParticipantRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoveParticipantRequest",
    modelProperties: {
      participantToRemove: {
        serializedName: "participantToRemove",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RemoveParticipantResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoveParticipantResponse",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MuteParticipantsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MuteParticipantsRequest",
    modelProperties: {
      targetParticipants: {
        serializedName: "targetParticipants",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel",
            },
          },
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MuteParticipantsResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MuteParticipantsResult",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UnmuteParticipantsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UnmuteParticipantsRequest",
    modelProperties: {
      targetParticipants: {
        serializedName: "targetParticipants",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel",
            },
          },
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UnmuteParticipantsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UnmuteParticipantsResponse",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CancelAddParticipantRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CancelAddParticipantRequest",
    modelProperties: {
      invitationId: {
        serializedName: "invitationId",
        required: true,
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
      operationCallbackUri: {
        serializedName: "operationCallbackUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CancelAddParticipantResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CancelAddParticipantResponse",
    modelProperties: {
      invitationId: {
        serializedName: "invitationId",
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StartCallRecordingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartCallRecordingRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocator",
        },
      },
      recordingStateCallbackUri: {
        serializedName: "recordingStateCallbackUri",
        type: {
          name: "String",
        },
      },
      recordingContentType: {
        serializedName: "recordingContentType",
        type: {
          name: "String",
        },
      },
      recordingChannelType: {
        serializedName: "recordingChannelType",
        type: {
          name: "String",
        },
      },
      recordingFormatType: {
        serializedName: "recordingFormatType",
        type: {
          name: "String",
        },
      },
      audioChannelParticipantOrdering: {
        serializedName: "audioChannelParticipantOrdering",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel",
            },
          },
        },
      },
      channelAffinity: {
        serializedName: "channelAffinity",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ChannelAffinity",
            },
          },
        },
      },
      recordingStorage: {
        serializedName: "externalStorage",
        type: {
          name: "Composite",
          className: "RecordingStorage",
        },
      },
      pauseOnStart: {
        serializedName: "pauseOnStart",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const CallLocator: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallLocator",
    modelProperties: {
      groupCallId: {
        serializedName: "groupCallId",
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String",
        },
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ChannelAffinity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChannelAffinity",
    modelProperties: {
      channel: {
        constraints: {
          InclusiveMaximum: 4,
          InclusiveMinimum: 0,
        },
        serializedName: "channel",
        type: {
          name: "Number",
        },
      },
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
    },
  },
};

export const RecordingStorage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecordingStorage",
    modelProperties: {
      recordingStorageKind: {
        serializedName: "recordingStorageKind",
        required: true,
        type: {
          name: "String",
        },
      },
      recordingDestinationContainerUrl: {
        serializedName: "recordingDestinationContainerUrl",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecordingStateResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecordingStateResponse",
    modelProperties: {
      recordingId: {
        serializedName: "recordingId",
        type: {
          name: "String",
        },
      },
      recordingState: {
        serializedName: "recordingState",
        type: {
          name: "String",
        },
      },
      recordingKind: {
        serializedName: "recordingKind",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CollectTonesResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectTonesResult",
    modelProperties: {
      tones: {
        serializedName: "tones",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const DtmfResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DtmfResult",
    modelProperties: {
      tones: {
        serializedName: "tones",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const SpeechResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SpeechResult",
    modelProperties: {
      speech: {
        serializedName: "speech",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ChoiceResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChoiceResult",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String",
        },
      },
      recognizedPhrase: {
        serializedName: "recognizedPhrase",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogCompleted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogCompleted",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestResultInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestResultInformation",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number",
        },
      },
      subCode: {
        serializedName: "subCode",
        type: {
          name: "Number",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogConsent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogConsent",
    modelProperties: {
      userConsent: {
        serializedName: "userConsent",
        type: {
          name: "Composite",
          className: "UserConsent",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UserConsent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserConsent",
    modelProperties: {
      recording: {
        serializedName: "recording",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const DialogStarted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogStarted",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogHangup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogHangup",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ivrContext: {
        serializedName: "ivrContext",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogTransfer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogTransfer",
    modelProperties: {
      transferType: {
        serializedName: "transferType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      transferDestination: {
        serializedName: "transferDestination",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ivrContext: {
        serializedName: "ivrContext",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogLanguageChange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogLanguageChange",
    modelProperties: {
      selectedLanguage: {
        serializedName: "selectedLanguage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ivrContext: {
        serializedName: "ivrContext",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogSensitivityUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogSensitivityUpdate",
    modelProperties: {
      sensitiveMask: {
        serializedName: "sensitiveMask",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DialogUpdated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DialogUpdated",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      dialogInputType: {
        serializedName: "dialogInputType",
        type: {
          name: "String",
        },
      },
      dialogId: {
        serializedName: "dialogId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ivrContext: {
        serializedName: "ivrContext",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TranscriptionUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TranscriptionUpdate",
    modelProperties: {
      transcriptionStatus: {
        serializedName: "transcriptionStatus",
        type: {
          name: "String",
        },
      },
      transcriptionStatusDetails: {
        serializedName: "transcriptionStatusDetails",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MediaStreamingFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaStreamingFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      mediaStreamingUpdate: {
        serializedName: "mediaStreamingUpdate",
        type: {
          name: "Composite",
          className: "MediaStreamingUpdate",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MediaStreamingUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaStreamingUpdate",
    modelProperties: {
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String",
        },
      },
      mediaStreamingStatus: {
        serializedName: "mediaStreamingStatus",
        type: {
          name: "String",
        },
      },
      mediaStreamingStatusDetails: {
        serializedName: "mediaStreamingStatusDetails",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MediaStreamingStarted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaStreamingStarted",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      mediaStreamingUpdate: {
        serializedName: "mediaStreamingUpdate",
        type: {
          name: "Composite",
          className: "MediaStreamingUpdate",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MediaStreamingStopped: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaStreamingStopped",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      mediaStreamingUpdate: {
        serializedName: "mediaStreamingUpdate",
        type: {
          name: "Composite",
          className: "MediaStreamingUpdate",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestAddParticipantSucceeded: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestAddParticipantSucceeded",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestAddParticipantFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestAddParticipantFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestRemoveParticipantSucceeded: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestRemoveParticipantSucceeded",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestRemoveParticipantFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestRemoveParticipantFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestCallConnected: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestCallConnected",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestCallDisconnected: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestCallDisconnected",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestCallTransferAccepted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestCallTransferAccepted",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      transferTarget: {
        serializedName: "transferTarget",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      transferee: {
        serializedName: "transferee",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestCallTransferFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestCallTransferFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestRecordingStateChanged: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestRecordingStateChanged",
    modelProperties: {
      recordingId: {
        serializedName: "recordingId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        type: {
          name: "String",
        },
      },
      startDateTime: {
        serializedName: "startDateTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      recordingKind: {
        serializedName: "recordingKind",
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestParticipantsUpdated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestParticipantsUpdated",
    modelProperties: {
      participants: {
        serializedName: "participants",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CallParticipantInternal",
            },
          },
        },
      },
      sequenceNumber: {
        serializedName: "sequenceNumber",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestPlayCompleted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestPlayCompleted",
    modelProperties: {
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestPlayFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestPlayFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      failedPlaySourceIndex: {
        serializedName: "failedPlaySourceIndex",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestPlayCanceled: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestPlayCanceled",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestRecognizeCompleted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestRecognizeCompleted",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      recognitionType: {
        serializedName: "recognitionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      collectTonesResult: {
        serializedName: "collectTonesResult",
        type: {
          name: "Composite",
          className: "CollectTonesResult",
        },
      },
      dtmfResult: {
        serializedName: "dtmfResult",
        type: {
          name: "Composite",
          className: "DtmfResult",
        },
      },
      speechResult: {
        serializedName: "speechResult",
        type: {
          name: "Composite",
          className: "SpeechResult",
        },
      },
      choiceResult: {
        serializedName: "choiceResult",
        type: {
          name: "Composite",
          className: "ChoiceResult",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestRecognizeFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestRecognizeFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      failedPlaySourceIndex: {
        serializedName: "failedPlaySourceIndex",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestRecognizeCanceled: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestRecognizeCanceled",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestContinuousDtmfRecognitionToneReceived: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "RestContinuousDtmfRecognitionToneReceived",
      modelProperties: {
        resultInformation: {
          serializedName: "resultInformation",
          type: {
            name: "Composite",
            className: "RestResultInformation",
          },
        },
        sequenceId: {
          serializedName: "sequenceId",
          readOnly: true,
          type: {
            name: "Number",
          },
        },
        tone: {
          serializedName: "tone",
          type: {
            name: "String",
          },
        },
        operationContext: {
          serializedName: "operationContext",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        callConnectionId: {
          serializedName: "callConnectionId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        serverCallId: {
          serializedName: "serverCallId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        correlationId: {
          serializedName: "correlationId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const RestContinuousDtmfRecognitionToneFailed: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "RestContinuousDtmfRecognitionToneFailed",
      modelProperties: {
        resultInformation: {
          serializedName: "resultInformation",
          type: {
            name: "Composite",
            className: "RestResultInformation",
          },
        },
        operationContext: {
          serializedName: "operationContext",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        callConnectionId: {
          serializedName: "callConnectionId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        serverCallId: {
          serializedName: "serverCallId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        correlationId: {
          serializedName: "correlationId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const RestContinuousDtmfRecognitionStopped: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "RestContinuousDtmfRecognitionStopped",
      modelProperties: {
        operationContext: {
          serializedName: "operationContext",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        resultInformation: {
          serializedName: "resultInformation",
          type: {
            name: "Composite",
            className: "RestResultInformation",
          },
        },
        callConnectionId: {
          serializedName: "callConnectionId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        serverCallId: {
          serializedName: "serverCallId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        correlationId: {
          serializedName: "correlationId",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const RestSendDtmfTonesCompleted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestSendDtmfTonesCompleted",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestSendDtmfTonesFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestSendDtmfTonesFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestCancelAddParticipantSucceeded: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestCancelAddParticipantSucceeded",
    modelProperties: {
      invitationId: {
        serializedName: "invitationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestCancelAddParticipantFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestCancelAddParticipantFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      invitationId: {
        serializedName: "invitationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestTranscriptionStarted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestTranscriptionStarted",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      transcriptionUpdate: {
        serializedName: "transcriptionUpdate",
        type: {
          name: "Composite",
          className: "TranscriptionUpdate",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestTranscriptionStopped: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestTranscriptionStopped",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      transcriptionUpdate: {
        serializedName: "transcriptionUpdate",
        type: {
          name: "Composite",
          className: "TranscriptionUpdate",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestTranscriptionUpdated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestTranscriptionUpdated",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      transcriptionUpdate: {
        serializedName: "transcriptionUpdate",
        type: {
          name: "Composite",
          className: "TranscriptionUpdate",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestTranscriptionFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestTranscriptionFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      transcriptionUpdate: {
        serializedName: "transcriptionUpdate",
        type: {
          name: "Composite",
          className: "TranscriptionUpdate",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestCreateCallFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestCreateCallFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestAnswerFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestAnswerFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestHoldFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestHoldFailed",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "RestResultInformation",
        },
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverCallId: {
        serializedName: "serverCallId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureOpenAIDialog: coreClient.CompositeMapper = {
  serializedName: "azureOpenAI",
  type: {
    name: "Composite",
    className: "AzureOpenAIDialog",
    uberParent: "BaseDialog",
    polymorphicDiscriminator: BaseDialog.type.polymorphicDiscriminator,
    modelProperties: {
      ...BaseDialog.type.modelProperties,
    },
  },
};

export const PowerVirtualAgentsDialog: coreClient.CompositeMapper = {
  serializedName: "powerVirtualAgents",
  type: {
    name: "Composite",
    className: "PowerVirtualAgentsDialog",
    uberParent: "BaseDialog",
    polymorphicDiscriminator: BaseDialog.type.polymorphicDiscriminator,
    modelProperties: {
      ...BaseDialog.type.modelProperties,
      botAppId: {
        serializedName: "botAppId",
        required: true,
        type: {
          name: "String",
        },
      },
      language: {
        serializedName: "language",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureOpenAIDialogUpdate: coreClient.CompositeMapper = {
  serializedName: "azureOpenAI",
  type: {
    name: "Composite",
    className: "AzureOpenAIDialogUpdate",
    uberParent: "DialogUpdateBase",
    polymorphicDiscriminator: DialogUpdateBase.type.polymorphicDiscriminator,
    modelProperties: {
      ...DialogUpdateBase.type.modelProperties,
    },
  },
};

export let discriminators = {
  BaseDialog: BaseDialog,
  DialogUpdateBase: DialogUpdateBase,
  "BaseDialog.azureOpenAI": AzureOpenAIDialog,
  "BaseDialog.powerVirtualAgents": PowerVirtualAgentsDialog,
  "DialogUpdateBase.azureOpenAI": AzureOpenAIDialogUpdate,
};
