/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const CreateCallRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateCallRequest",
    modelProperties: {
      targets: {
        serializedName: "targets",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CallSource"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        required: true,
        type: {
          name: "String"
        }
      },
      mediaStreamingConfiguration: {
        serializedName: "mediaStreamingConfiguration",
        type: {
          name: "Composite",
          className: "MediaStreamingConfiguration"
        }
      },
      azureCognitiveServicesEndpointUrl: {
        serializedName: "azureCognitiveServicesEndpointUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationIdentifierModel",
    modelProperties: {
      rawId: {
        serializedName: "rawId",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      communicationUser: {
        serializedName: "communicationUser",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      microsoftTeamsUser: {
        serializedName: "microsoftTeamsUser",
        type: {
          name: "Composite",
          className: "MicrosoftTeamsUserIdentifierModel"
        }
      }
    }
  }
};

export const CommunicationUserIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationUserIdentifierModel",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PhoneNumberIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberIdentifierModel",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MicrosoftTeamsUserIdentifierModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftTeamsUserIdentifierModel",
    modelProperties: {
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String"
        }
      },
      isAnonymous: {
        serializedName: "isAnonymous",
        type: {
          name: "Boolean"
        }
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallSource",
    modelProperties: {
      callerId: {
        serializedName: "callerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const MediaStreamingConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MediaStreamingConfiguration",
    modelProperties: {
      transportUrl: {
        serializedName: "transportUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      transportType: {
        serializedName: "transportType",
        required: true,
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        required: true,
        type: {
          name: "String"
        }
      },
      audioChannelType: {
        serializedName: "audioChannelType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallConnectionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallConnectionProperties",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CallSource"
        }
      },
      targets: {
        serializedName: "targets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      callConnectionState: {
        serializedName: "callConnectionState",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String"
        }
      },
      mediaSubscriptionId: {
        serializedName: "mediaSubscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const CommunicationError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationError"
            }
          }
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const AnswerCallRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnswerCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        required: true,
        type: {
          name: "String"
        }
      },
      mediaStreamingConfiguration: {
        serializedName: "mediaStreamingConfiguration",
        type: {
          name: "Composite",
          className: "MediaStreamingConfiguration"
        }
      },
      azureCognitiveServicesEndpointUrl: {
        serializedName: "azureCognitiveServicesEndpointUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RedirectCallRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RedirectCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      }
    }
  }
};

export const RejectCallRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RejectCallRequest",
    modelProperties: {
      incomingCallContext: {
        serializedName: "incomingCallContext",
        required: true,
        type: {
          name: "String"
        }
      },
      callRejectReason: {
        serializedName: "callRejectReason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransferToParticipantRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferToParticipantRequest",
    modelProperties: {
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      transfereeCallerId: {
        serializedName: "transfereeCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      userToUserInformation: {
        serializedName: "userToUserInformation",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransferCallResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransferCallResponse",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlayRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayRequest",
    modelProperties: {
      playSourceInfo: {
        serializedName: "playSourceInfo",
        type: {
          name: "Composite",
          className: "PlaySource"
        }
      },
      playTo: {
        serializedName: "playTo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      playOptions: {
        serializedName: "playOptions",
        type: {
          name: "Composite",
          className: "PlayOptions"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlaySource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlaySource",
    modelProperties: {
      sourceType: {
        serializedName: "sourceType",
        required: true,
        type: {
          name: "String"
        }
      },
      playSourceId: {
        serializedName: "playSourceId",
        type: {
          name: "String"
        }
      },
      fileSource: {
        serializedName: "fileSource",
        type: {
          name: "Composite",
          className: "FileSource"
        }
      },
      textSource: {
        serializedName: "textSource",
        type: {
          name: "Composite",
          className: "TextSource"
        }
      }
    }
  }
};

export const FileSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileSource",
    modelProperties: {
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TextSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TextSource",
    modelProperties: {
      text: {
        serializedName: "text",
        required: true,
        type: {
          name: "String"
        }
      },
      sourceLocale: {
        serializedName: "sourceLocale",
        type: {
          name: "String"
        }
      },
      voiceGender: {
        serializedName: "voiceGender",
        type: {
          name: "String"
        }
      },
      voiceName: {
        serializedName: "voiceName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlayOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayOptions",
    modelProperties: {
      loop: {
        serializedName: "loop",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const RecognizeRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecognizeRequest",
    modelProperties: {
      recognizeInputType: {
        serializedName: "recognizeInputType",
        required: true,
        type: {
          name: "String"
        }
      },
      playPrompt: {
        serializedName: "playPrompt",
        type: {
          name: "Composite",
          className: "PlaySource"
        }
      },
      interruptCallMediaOperation: {
        serializedName: "interruptCallMediaOperation",
        type: {
          name: "Boolean"
        }
      },
      recognizeOptions: {
        serializedName: "recognizeOptions",
        type: {
          name: "Composite",
          className: "RecognizeOptions"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecognizeOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecognizeOptions",
    modelProperties: {
      interruptPrompt: {
        serializedName: "interruptPrompt",
        type: {
          name: "Boolean"
        }
      },
      initialSilenceTimeoutInSeconds: {
        constraints: {
          InclusiveMaximum: 300,
          InclusiveMinimum: 0
        },
        serializedName: "initialSilenceTimeoutInSeconds",
        type: {
          name: "Number"
        }
      },
      targetParticipant: {
        serializedName: "targetParticipant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      dtmfOptions: {
        serializedName: "dtmfOptions",
        type: {
          name: "Composite",
          className: "DtmfOptions"
        }
      },
      choices: {
        serializedName: "choices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Choice"
            }
          }
        }
      }
    }
  }
};

export const DtmfOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DtmfOptions",
    modelProperties: {
      interToneTimeoutInSeconds: {
        constraints: {
          InclusiveMaximum: 60,
          InclusiveMinimum: 1
        },
        serializedName: "interToneTimeoutInSeconds",
        type: {
          name: "Number"
        }
      },
      maxTonesToCollect: {
        serializedName: "maxTonesToCollect",
        type: {
          name: "Number"
        }
      },
      stopTones: {
        serializedName: "stopTones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Choice: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Choice",
    modelProperties: {
      label: {
        serializedName: "label",
        required: true,
        type: {
          name: "String"
        }
      },
      phrases: {
        serializedName: "phrases",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tone: {
        serializedName: "tone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetParticipantsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetParticipantsResponse",
    modelProperties: {
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsCallParticipant"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsCallParticipant: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsCallParticipant",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      isMuted: {
        serializedName: "isMuted",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AddParticipantsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantsRequest",
    modelProperties: {
      sourceCallerId: {
        serializedName: "sourceCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      sourceDisplayName: {
        serializedName: "sourceDisplayName",
        type: {
          name: "String"
        }
      },
      sourceIdentifier: {
        serializedName: "sourceIdentity",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantsToAdd: {
        serializedName: "participantsToAdd",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      invitationTimeoutInSeconds: {
        constraints: {
          InclusiveMaximum: 180,
          InclusiveMinimum: 0
        },
        serializedName: "invitationTimeoutInSeconds",
        type: {
          name: "Number"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddParticipantsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantsResponse",
    modelProperties: {
      participants: {
        serializedName: "participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AcsCallParticipant"
            }
          }
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoveParticipantsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoveParticipantsRequest",
    modelProperties: {
      participantsToRemove: {
        serializedName: "participantsToRemove",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoveParticipantsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoveParticipantsResponse",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StartCallRecordingRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartCallRecordingRequest",
    modelProperties: {
      callLocator: {
        serializedName: "callLocator",
        type: {
          name: "Composite",
          className: "CallLocator"
        }
      },
      recordingStateCallbackUri: {
        serializedName: "recordingStateCallbackUri",
        type: {
          name: "String"
        }
      },
      recordingContentType: {
        serializedName: "recordingContentType",
        type: {
          name: "String"
        }
      },
      recordingChannelType: {
        serializedName: "recordingChannelType",
        type: {
          name: "String"
        }
      },
      recordingFormatType: {
        serializedName: "recordingFormatType",
        type: {
          name: "String"
        }
      },
      audioChannelParticipantOrdering: {
        serializedName: "audioChannelParticipantOrdering",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      recordingStorageType: {
        serializedName: "recordingStorageType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallLocator: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallLocator",
    modelProperties: {
      groupCallId: {
        serializedName: "groupCallId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecordingStateResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecordingStateResponse",
    modelProperties: {
      recordingId: {
        serializedName: "recordingId",
        type: {
          name: "String"
        }
      },
      recordingState: {
        serializedName: "recordingState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddParticipantsFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantsFailed",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "ResultInformation"
        }
      },
      participants: {
        serializedName: "participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      }
    }
  }
};

export const ResultInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResultInformation",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      subCode: {
        serializedName: "subCode",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddParticipantsSucceeded: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantsSucceeded",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "ResultInformation"
        }
      },
      participants: {
        serializedName: "participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      }
    }
  }
};

export const CallConnected: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallConnected",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallDisconnected: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallDisconnected",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallTransferAccepted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallTransferAccepted",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "ResultInformation"
        }
      }
    }
  }
};

export const CallTransferFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallTransferFailed",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "ResultInformation"
        }
      }
    }
  }
};

export const ParticipantsUpdated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ParticipantsUpdated",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      participants: {
        serializedName: "participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      }
    }
  }
};

export const RecordingStateChanged: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecordingStateChanged",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      recordingId: {
        serializedName: "recordingId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "startDateTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PlayCompleted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayCompleted",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "ResultInformation"
        }
      }
    }
  }
};

export const PlayFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayFailed",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "ResultInformation"
        }
      }
    }
  }
};

export const PlayCanceled: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayCanceled",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecognizeCompleted: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecognizeCompleted",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "ResultInformation"
        }
      },
      recognitionType: {
        serializedName: "recognitionType",
        type: {
          name: "String"
        }
      },
      collectTonesResult: {
        serializedName: "collectTonesResult",
        type: {
          name: "Composite",
          className: "CollectTonesResult"
        }
      },
      choiceResult: {
        serializedName: "choiceResult",
        type: {
          name: "Composite",
          className: "ChoiceResult"
        }
      }
    }
  }
};

export const CollectTonesResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectTonesResult",
    modelProperties: {
      tones: {
        serializedName: "tones",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ChoiceResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChoiceResult",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      recognizedPhrase: {
        serializedName: "recognizedPhrase",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecognizeFailed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecognizeFailed",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInformation: {
        serializedName: "resultInformation",
        type: {
          name: "Composite",
          className: "ResultInformation"
        }
      }
    }
  }
};

export const RecognizeCanceled: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecognizeCanceled",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};
