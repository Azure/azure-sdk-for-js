/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  CreateRoomRequest as CreateRoomRequestMapper,
  UpdateRoomRequest as UpdateRoomRequestMapper,
  AddParticipantsRequest as AddParticipantsRequestMapper,
  UpdateParticipantsRequest as UpdateParticipantsRequestMapper,
  RemoveParticipantsRequest as RemoveParticipantsRequestMapper
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const createRoomRequest: OperationParameter = {
  parameterPath: "createRoomRequest",
  mapper: CreateRoomRequestMapper
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const endpoint: OperationURLParameter = {
  parameterPath: "endpoint",
  mapper: {
    serializedName: "endpoint",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-02-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const repeatabilityRequestID: OperationParameter = {
  parameterPath: ["options", "repeatabilityRequestID"],
  mapper: {
    serializedName: "Repeatability-Request-ID",
    type: {
      name: "Uuid"
    }
  }
};

export const repeatabilityFirstSent: OperationParameter = {
  parameterPath: ["options", "repeatabilityFirstSent"],
  mapper: {
    serializedName: "Repeatability-First-Sent",
    type: {
      name: "DateTime"
    }
  }
};

export const roomId: OperationURLParameter = {
  parameterPath: "roomId",
  mapper: {
    serializedName: "roomId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const patchRoomRequest: OperationParameter = {
  parameterPath: ["options", "patchRoomRequest"],
  mapper: UpdateRoomRequestMapper
};

export const addParticipantsRequest: OperationParameter = {
  parameterPath: "addParticipantsRequest",
  mapper: AddParticipantsRequestMapper
};

export const updateParticipantsRequest: OperationParameter = {
  parameterPath: "updateParticipantsRequest",
  mapper: UpdateParticipantsRequestMapper
};

export const removeParticipantsRequest: OperationParameter = {
  parameterPath: "removeParticipantsRequest",
  mapper: RemoveParticipantsRequestMapper
};
