/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  CreateRoomRequest,
  RoomsCreateRoomOptionalParams,
  RoomsCreateRoomResponse,
  RoomsGetRoomOptionalParams,
  RoomsGetRoomResponse,
  RoomsUpdateRoomOptionalParams,
  RoomsUpdateRoomResponse,
  RoomsDeleteRoomOptionalParams,
  RoomsGetParticipantsOptionalParams,
  RoomsGetParticipantsResponse,
  AddParticipantsRequest,
  RoomsAddParticipantsOptionalParams,
  RoomsAddParticipantsResponse,
  UpdateParticipantsRequest,
  RoomsUpdateParticipantsOptionalParams,
  RoomsUpdateParticipantsResponse,
  RemoveParticipantsRequest,
  RoomsRemoveParticipantsOptionalParams,
  RoomsRemoveParticipantsResponse
} from "../models";

/** Interface representing a Rooms. */
export interface Rooms {
  /**
   * Creates a new room.
   * @param createRoomRequest The create room request body.
   * @param options The options parameters.
   */
  createRoom(
    createRoomRequest: CreateRoomRequest,
    options?: RoomsCreateRoomOptionalParams
  ): Promise<RoomsCreateRoomResponse>;
  /**
   * Retrieves an existing room by id.
   * @param roomId The id of the room requested
   * @param options The options parameters.
   */
  getRoom(
    roomId: string,
    options?: RoomsGetRoomOptionalParams
  ): Promise<RoomsGetRoomResponse>;
  /**
   * Update a room with given changes.
   * @param roomId The id of the room requested
   * @param options The options parameters.
   */
  updateRoom(
    roomId: string,
    options?: RoomsUpdateRoomOptionalParams
  ): Promise<RoomsUpdateRoomResponse>;
  /**
   * Delete a room.
   * @param roomId The id of the room to be deleted
   * @param options The options parameters.
   */
  deleteRoom(
    roomId: string,
    options?: RoomsDeleteRoomOptionalParams
  ): Promise<void>;
  /**
   * Get participants in a room.
   * @param roomId The id of the room to get participants from
   * @param options The options parameters.
   */
  getParticipants(
    roomId: string,
    options?: RoomsGetParticipantsOptionalParams
  ): Promise<RoomsGetParticipantsResponse>;
  /**
   * Adds participants to a room. If participants already exist, no change occurs.
   * @param roomId Room id to add participants.
   * @param addParticipantsRequest Participants to be added to the room.
   * @param options The options parameters.
   */
  addParticipants(
    roomId: string,
    addParticipantsRequest: AddParticipantsRequest,
    options?: RoomsAddParticipantsOptionalParams
  ): Promise<RoomsAddParticipantsResponse>;
  /**
   * Update participants in a room.
   * @param roomId The room id.
   * @param updateParticipantsRequest Participants in a room to be updated.
   * @param options The options parameters.
   */
  updateParticipants(
    roomId: string,
    updateParticipantsRequest: UpdateParticipantsRequest,
    options?: RoomsUpdateParticipantsOptionalParams
  ): Promise<RoomsUpdateParticipantsResponse>;
  /**
   * Remove participants from a room.
   * @param roomId Room id to remove the participants from.
   * @param removeParticipantsRequest Participants in a room to be removed.
   * @param options The options parameters.
   */
  removeParticipants(
    roomId: string,
    removeParticipantsRequest: RemoveParticipantsRequest,
    options?: RoomsRemoveParticipantsOptionalParams
  ): Promise<RoomsRemoveParticipantsResponse>;
}
