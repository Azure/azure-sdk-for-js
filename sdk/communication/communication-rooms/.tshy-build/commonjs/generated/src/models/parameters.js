"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.participants1 = exports.nextLink = exports.pstnDialOutEnabled1 = exports.validUntil1 = exports.validFrom1 = exports.contentType1 = exports.roomId = exports.repeatabilityFirstSent = exports.repeatabilityRequestID = exports.apiVersion = exports.endpoint = exports.participants = exports.pstnDialOutEnabled = exports.validUntil = exports.validFrom = exports.accept = exports.contentType = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.validFrom = {
    parameterPath: ["options", "validFrom"],
    mapper: mappers_js_1.CreateRoomRequest,
};
exports.validUntil = {
    parameterPath: ["options", "validUntil"],
    mapper: mappers_js_1.CreateRoomRequest,
};
exports.pstnDialOutEnabled = {
    parameterPath: ["options", "pstnDialOutEnabled"],
    mapper: mappers_js_1.CreateRoomRequest,
};
exports.participants = {
    parameterPath: ["options", "participants"],
    mapper: mappers_js_1.CreateRoomRequest,
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2025-03-13",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.repeatabilityRequestID = {
    parameterPath: ["options", "repeatabilityRequestID"],
    mapper: {
        serializedName: "Repeatability-Request-ID",
        type: {
            name: "Uuid",
        },
    },
};
exports.repeatabilityFirstSent = {
    parameterPath: ["options", "repeatabilityFirstSent"],
    mapper: {
        serializedName: "Repeatability-First-Sent",
        type: {
            name: "DateTimeRfc1123",
        },
    },
};
exports.roomId = {
    parameterPath: "roomId",
    mapper: {
        serializedName: "roomId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/merge-patch+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.validFrom1 = {
    parameterPath: ["options", "validFrom"],
    mapper: mappers_js_1.UpdateRoomRequest,
};
exports.validUntil1 = {
    parameterPath: ["options", "validUntil"],
    mapper: mappers_js_1.UpdateRoomRequest,
};
exports.pstnDialOutEnabled1 = {
    parameterPath: ["options", "pstnDialOutEnabled"],
    mapper: mappers_js_1.UpdateRoomRequest,
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.participants1 = {
    parameterPath: ["options", "participants"],
    mapper: mappers_js_1.UpdateParticipantsRequest,
};
//# sourceMappingURL=parameters.js.map