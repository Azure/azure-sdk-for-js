{"version":3,"file":"rooms.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/rooms.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing.js\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Rooms } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { RoomsRestClient } from \"../roomsRestClient.js\";\nimport {\n  RoomModel,\n  RoomsListNextOptionalParams,\n  RoomsListOptionalParams,\n  RoomsListResponse,\n  RoomsCreateOptionalParams,\n  RoomsCreateResponse,\n  RoomsGetOptionalParams,\n  RoomsGetResponse,\n  RoomsUpdateOptionalParams,\n  RoomsUpdateResponse,\n  RoomsDeleteOptionalParams,\n  RoomsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Rooms operations. */\nexport class RoomsImpl implements Rooms {\n  private readonly client: RoomsRestClient;\n\n  /**\n   * Initialize a new instance of the class Rooms class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RoomsRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieves all created rooms.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: RoomsListOptionalParams,\n  ): PagedAsyncIterableIterator<RoomModel> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: RoomsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<RoomModel[]> {\n    let result: RoomsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: RoomsListOptionalParams,\n  ): AsyncIterableIterator<RoomModel> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a new room.\n   * @param options The options parameters.\n   */\n  async create(\n    options?: RoomsCreateOptionalParams,\n  ): Promise<RoomsCreateResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.create\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { options },\n          createOperationSpec,\n        ) as Promise<RoomsCreateResponse>;\n      },\n    );\n  }\n\n  /**\n   * Retrieves all created rooms.\n   * @param options The options parameters.\n   */\n  private async _list(\n    options?: RoomsListOptionalParams,\n  ): Promise<RoomsListResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient._list\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { options },\n          listOperationSpec,\n        ) as Promise<RoomsListResponse>;\n      },\n    );\n  }\n\n  /**\n   * Retrieves an existing room by id.\n   * @param roomId The id of the room requested.\n   * @param options The options parameters.\n   */\n  async get(\n    roomId: string,\n    options?: RoomsGetOptionalParams,\n  ): Promise<RoomsGetResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.get\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          getOperationSpec,\n        ) as Promise<RoomsGetResponse>;\n      },\n    );\n  }\n\n  /**\n   * Update a room with given changes.\n   * @param roomId The id of the room requested.\n   * @param options The options parameters.\n   */\n  async update(\n    roomId: string,\n    options?: RoomsUpdateOptionalParams,\n  ): Promise<RoomsUpdateResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.update\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          updateOperationSpec,\n        ) as Promise<RoomsUpdateResponse>;\n      },\n    );\n  }\n\n  /**\n   * Delete a room.\n   * @param roomId The id of the room to be deleted.\n   * @param options The options parameters.\n   */\n  async delete(\n    roomId: string,\n    options?: RoomsDeleteOptionalParams,\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient.delete\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { roomId, options },\n          deleteOperationSpec,\n        ) as Promise<void>;\n      },\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private async _listNext(\n    nextLink: string,\n    options?: RoomsListNextOptionalParams,\n  ): Promise<RoomsListNextResponse> {\n    return tracingClient.withSpan(\n      \"RoomsRestClient._listNext\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { nextLink, options },\n          listNextOperationSpec,\n        ) as Promise<RoomsListNextResponse>;\n      },\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.RoomModel,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsCreateExceptionHeaders,\n    },\n  },\n  requestBody: {\n    parameterPath: {\n      validFrom: [\"options\", \"validFrom\"],\n      validUntil: [\"options\", \"validUntil\"],\n      pstnDialOutEnabled: [\"options\", \"pstnDialOutEnabled\"],\n      participants: [\"options\", \"participants\"],\n    },\n    mapper: { ...Mappers.CreateRoomRequest, required: true },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomsCollection,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsListExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomModel,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsGetExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomModel,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsUpdateExceptionHeaders,\n    },\n  },\n  requestBody: {\n    parameterPath: {\n      validFrom: [\"options\", \"validFrom\"],\n      validUntil: [\"options\", \"validUntil\"],\n      pstnDialOutEnabled: [\"options\", \"pstnDialOutEnabled\"],\n    },\n    mapper: { ...Mappers.UpdateRoomRequest, required: true },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept, Parameters.contentType1],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsDeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomsCollection,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsListNextExceptionHeaders,\n    },\n  },\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}