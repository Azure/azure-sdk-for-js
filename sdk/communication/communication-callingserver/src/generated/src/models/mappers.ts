/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const CreateCallRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateCallRequest",
    modelProperties: {
      alternateCallerId: {
        serializedName: "alternateCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      targets: {
        serializedName: "targets",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationIdentifierModel"
            }
          }
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        required: true,
        type: {
          name: "String"
        }
      },
      requestedMediaTypes: {
        serializedName: "requestedMediaTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requestedCallEvents: {
        serializedName: "requestedCallEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PhoneNumberIdentifierModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberIdentifierModel",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationIdentifierModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationIdentifierModel",
    modelProperties: {
      rawId: {
        serializedName: "rawId",
        type: {
          name: "String"
        }
      },
      communicationUser: {
        serializedName: "communicationUser",
        type: {
          name: "Composite",
          className: "CommunicationUserIdentifierModel"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      microsoftTeamsUser: {
        serializedName: "microsoftTeamsUser",
        type: {
          name: "Composite",
          className: "MicrosoftTeamsUserIdentifierModel"
        }
      }
    }
  }
};

export const CommunicationUserIdentifierModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationUserIdentifierModel",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MicrosoftTeamsUserIdentifierModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftTeamsUserIdentifierModel",
    modelProperties: {
      userId: {
        serializedName: "userId",
        required: true,
        type: {
          name: "String"
        }
      },
      isAnonymous: {
        serializedName: "isAnonymous",
        type: {
          name: "Boolean"
        }
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateCallResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateCallResult",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationErrorResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const CommunicationError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationError"
            }
          }
        }
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const PlayAudioRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioRequest",
    modelProperties: {
      audioFileUri: {
        serializedName: "audioFileUri",
        type: {
          name: "String"
        }
      },
      loop: {
        serializedName: "loop",
        type: {
          name: "Boolean"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      audioFileId: {
        serializedName: "audioFileId",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlayAudioResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioResult",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInfo: {
        serializedName: "resultInfo",
        type: {
          name: "Composite",
          className: "ResultInfo"
        }
      }
    }
  }
};

export const ResultInfo: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResultInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      },
      subcode: {
        serializedName: "subcode",
        required: true,
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CancelAllMediaOperationsRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CancelAllMediaOperationsRequest",
    modelProperties: {
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CancelAllMediaOperationsResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CancelAllMediaOperationsResult",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      resultInfo: {
        serializedName: "resultInfo",
        type: {
          name: "Composite",
          className: "ResultInfo"
        }
      }
    }
  }
};

export const AddParticipantRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantRequest",
    modelProperties: {
      alternateCallerId: {
        serializedName: "alternateCallerId",
        type: {
          name: "Composite",
          className: "PhoneNumberIdentifierModel"
        }
      },
      participant: {
        serializedName: "participant",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddParticipantResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantResult",
    modelProperties: {
      participantId: {
        serializedName: "participantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StartCallRecordingRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartCallRecordingRequest",
    modelProperties: {
      recordingStateCallbackUri: {
        serializedName: "recordingStateCallbackUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StartCallRecordingResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartCallRecordingResult",
    modelProperties: {
      recordingId: {
        serializedName: "recordingId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallRecordingProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallRecordingProperties",
    modelProperties: {
      recordingState: {
        serializedName: "recordingState",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JoinCallRequest: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JoinCallRequest",
    modelProperties: {
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      },
      callbackUri: {
        serializedName: "callbackUri",
        required: true,
        type: {
          name: "String"
        }
      },
      requestedMediaTypes: {
        serializedName: "requestedMediaTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requestedCallEvents: {
        serializedName: "requestedCallEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const JoinCallResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JoinCallResult",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallConnectionStateChangedEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallConnectionStateChangedEvent",
    modelProperties: {
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      callConnectionState: {
        serializedName: "callConnectionState",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallRecordingStateChangeEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallRecordingStateChangeEvent",
    modelProperties: {
      recordingId: {
        serializedName: "recordingId",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "startDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      serverCallId: {
        serializedName: "serverCallId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddParticipantResultEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddParticipantResultEvent",
    modelProperties: {
      resultInfo: {
        serializedName: "resultInfo",
        type: {
          name: "Composite",
          className: "ResultInfo"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParticipantsUpdatedEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ParticipantsUpdatedEvent",
    modelProperties: {
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      },
      participants: {
        serializedName: "participants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CallParticipant"
            }
          }
        }
      }
    }
  }
};

export const CallParticipant: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallParticipant",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "Composite",
          className: "CommunicationIdentifierModel"
        }
      },
      participantId: {
        serializedName: "participantId",
        type: {
          name: "String"
        }
      },
      isMuted: {
        serializedName: "isMuted",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PlayAudioResultEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlayAudioResultEvent",
    modelProperties: {
      resultInfo: {
        serializedName: "resultInfo",
        type: {
          name: "Composite",
          className: "ResultInfo"
        }
      },
      operationContext: {
        serializedName: "operationContext",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToneReceivedEvent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToneReceivedEvent",
    modelProperties: {
      toneInfo: {
        serializedName: "toneInfo",
        type: {
          name: "Composite",
          className: "ToneInfo"
        }
      },
      callConnectionId: {
        serializedName: "callConnectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToneInfo: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ToneInfo",
    modelProperties: {
      sequenceId: {
        serializedName: "sequenceId",
        required: true,
        type: {
          name: "Number"
        }
      },
      tone: {
        serializedName: "tone",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};
