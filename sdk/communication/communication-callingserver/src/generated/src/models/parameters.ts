/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-http";
import {
  CreateCallRequest as CreateCallRequestMapper,
  PlayAudioRequest as PlayAudioRequestMapper,
  CancelAllMediaOperationsRequest as CancelAllMediaOperationsRequestMapper,
  AddParticipantRequest as AddParticipantRequestMapper,
  StartCallRecordingRequest as StartCallRecordingRequestMapper,
  JoinCallRequest as JoinCallRequestMapper
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const callRequest: OperationParameter = {
  parameterPath: "callRequest",
  mapper: CreateCallRequestMapper
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const endpoint: OperationURLParameter = {
  parameterPath: "endpoint",
  mapper: {
    serializedName: "endpoint",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2021-06-15-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const callConnectionId: OperationURLParameter = {
  parameterPath: "callConnectionId",
  mapper: {
    serializedName: "callConnectionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const request: OperationParameter = {
  parameterPath: "request",
  mapper: PlayAudioRequestMapper
};

export const cancelAllMediaOperationRequest: OperationParameter = {
  parameterPath: "cancelAllMediaOperationRequest",
  mapper: CancelAllMediaOperationsRequestMapper
};

export const addParticipantRequest: OperationParameter = {
  parameterPath: "addParticipantRequest",
  mapper: AddParticipantRequestMapper
};

export const participantId: OperationURLParameter = {
  parameterPath: "participantId",
  mapper: {
    serializedName: "participantId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const serverCallId: OperationURLParameter = {
  parameterPath: "serverCallId",
  mapper: {
    serializedName: "serverCallId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const request1: OperationParameter = {
  parameterPath: "request",
  mapper: StartCallRecordingRequestMapper
};

export const recordingId: OperationURLParameter = {
  parameterPath: "recordingId",
  mapper: {
    serializedName: "recordingId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const callRequest1: OperationParameter = {
  parameterPath: "callRequest",
  mapper: JoinCallRequestMapper
};
