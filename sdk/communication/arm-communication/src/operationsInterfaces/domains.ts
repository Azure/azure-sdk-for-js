/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DomainResource,
  DomainsListByEmailServiceResourceOptionalParams,
  DomainsGetOptionalParams,
  DomainsGetResponse,
  DomainsCreateOrUpdateOptionalParams,
  DomainsCreateOrUpdateResponse,
  DomainsDeleteOptionalParams,
  UpdateDomainRequestParameters,
  DomainsUpdateOptionalParams,
  DomainsUpdateResponse,
  VerificationParameter,
  DomainsInitiateVerificationOptionalParams,
  DomainsInitiateVerificationResponse,
  DomainsCancelVerificationOptionalParams,
  DomainsCancelVerificationResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Domains. */
export interface Domains {
  /**
   * Handles requests to list all Domains resources under the parent EmailServices resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param options The options parameters.
   */
  listByEmailServiceResource(
    resourceGroupName: string,
    emailServiceName: string,
    options?: DomainsListByEmailServiceResourceOptionalParams
  ): PagedAsyncIterableIterator<DomainResource>;
  /**
   * Get the Domains resource and its properties.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    options?: DomainsGetOptionalParams
  ): Promise<DomainsGetResponse>;
  /**
   * Add a new Domains resource under the parent EmailService resource or update an existing Domains
   * resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param parameters Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    parameters: DomainResource,
    options?: DomainsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<DomainsCreateOrUpdateResponse>,
      DomainsCreateOrUpdateResponse
    >
  >;
  /**
   * Add a new Domains resource under the parent EmailService resource or update an existing Domains
   * resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param parameters Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    parameters: DomainResource,
    options?: DomainsCreateOrUpdateOptionalParams
  ): Promise<DomainsCreateOrUpdateResponse>;
  /**
   * Operation to delete a Domains resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    options?: DomainsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Operation to delete a Domains resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    options?: DomainsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Operation to update an existing Domains resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param parameters Parameters for the update operation
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    parameters: UpdateDomainRequestParameters,
    options?: DomainsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<DomainsUpdateResponse>,
      DomainsUpdateResponse
    >
  >;
  /**
   * Operation to update an existing Domains resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param parameters Parameters for the update operation
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    parameters: UpdateDomainRequestParameters,
    options?: DomainsUpdateOptionalParams
  ): Promise<DomainsUpdateResponse>;
  /**
   * Initiate verification of DNS record.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param parameters Type of verification to be initiated.
   * @param options The options parameters.
   */
  beginInitiateVerification(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    parameters: VerificationParameter,
    options?: DomainsInitiateVerificationOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<DomainsInitiateVerificationResponse>,
      DomainsInitiateVerificationResponse
    >
  >;
  /**
   * Initiate verification of DNS record.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param parameters Type of verification to be initiated.
   * @param options The options parameters.
   */
  beginInitiateVerificationAndWait(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    parameters: VerificationParameter,
    options?: DomainsInitiateVerificationOptionalParams
  ): Promise<DomainsInitiateVerificationResponse>;
  /**
   * Cancel verification of DNS record.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param parameters Type of verification to be canceled.
   * @param options The options parameters.
   */
  beginCancelVerification(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    parameters: VerificationParameter,
    options?: DomainsCancelVerificationOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<DomainsCancelVerificationResponse>,
      DomainsCancelVerificationResponse
    >
  >;
  /**
   * Cancel verification of DNS record.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param emailServiceName The name of the EmailService resource.
   * @param domainName The name of the Domains resource.
   * @param parameters Type of verification to be canceled.
   * @param options The options parameters.
   */
  beginCancelVerificationAndWait(
    resourceGroupName: string,
    emailServiceName: string,
    domainName: string,
    parameters: VerificationParameter,
    options?: DomainsCancelVerificationOptionalParams
  ): Promise<DomainsCancelVerificationResponse>;
}
