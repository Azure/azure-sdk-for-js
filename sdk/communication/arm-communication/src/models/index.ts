/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The check availability request body. */
export interface CheckNameAvailabilityRequest {
  /** The name of the resource for which availability needs to be checked. */
  name?: string;
  /** The resource type. */
  type?: string;
}

/** The check availability result. */
export interface CheckNameAvailabilityResponse {
  /** Indicates if the resource name is available. */
  nameAvailable?: boolean;
  /** The reason why the given name is not available. */
  reason?: CheckNameAvailabilityReason;
  /** Detailed reason why the given name is available. */
  message?: string;
}

/** Description of an Azure Notification Hub to link to the communication service */
export interface LinkNotificationHubParameters {
  /** The resource ID of the notification hub */
  resourceId: string;
  /** Connection string for the notification hub */
  connectionString: string;
}

/** A notification hub that has been linked to the communication service */
export interface LinkedNotificationHub {
  /** The resource ID of the notification hub */
  resourceId?: string;
}

/** Object that includes an array of CommunicationServices and a possible link for next set. */
export interface CommunicationServiceResourceList {
  /** List of CommunicationService */
  value?: CommunicationServiceResource[];
  /**
   * The URL the client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** An ARM resource with that can accept tags */
export interface TaggedResource {
  /** Tags of the service which is a list of key value pairs that describe the resource. */
  tags?: { [propertyName: string]: string };
}

/** A class representing the access keys of a CommunicationService. */
export interface CommunicationServiceKeys {
  /** The primary access key. */
  primaryKey?: string;
  /** The secondary access key. */
  secondaryKey?: string;
  /** CommunicationService connection string constructed via the primaryKey */
  primaryConnectionString?: string;
  /** CommunicationService connection string constructed via the secondaryKey */
  secondaryConnectionString?: string;
}

/** Parameters describes the request to regenerate access keys */
export interface RegenerateKeyParameters {
  /** The keyType to regenerate. Must be either 'primary' or 'secondary'(case-insensitive). */
  keyType?: KeyType;
}

/** List of VerificationStatusRecord */
export interface DomainPropertiesVerificationStates {
  /** A class that represents a VerificationStatus record. */
  domain?: VerificationStatusRecord;
  /** A class that represents a VerificationStatus record. */
  spf?: VerificationStatusRecord;
  /** A class that represents a VerificationStatus record. */
  dkim?: VerificationStatusRecord;
  /** A class that represents a VerificationStatus record. */
  dkim2?: VerificationStatusRecord;
  /** A class that represents a VerificationStatus record. */
  dmarc?: VerificationStatusRecord;
}

/** A class that represents a VerificationStatus record. */
export interface VerificationStatusRecord {
  /**
   * Status of the verification operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: VerificationStatus;
  /**
   * Error code. This property will only be present if the status is UnableToVerify.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: string;
}

/** List of DnsRecord */
export interface DomainPropertiesVerificationRecords {
  /** A class that represents a VerificationStatus record. */
  domain?: DnsRecord;
  /** A class that represents a VerificationStatus record. */
  spf?: DnsRecord;
  /** A class that represents a VerificationStatus record. */
  dkim?: DnsRecord;
  /** A class that represents a VerificationStatus record. */
  dkim2?: DnsRecord;
  /** A class that represents a VerificationStatus record. */
  dmarc?: DnsRecord;
}

/** A class that represents a VerificationStatus record. */
export interface DnsRecord {
  /**
   * Type of the DNS record. Example: TXT
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Name of the DNS record.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Value of the DNS record.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
  /**
   * Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ttl?: number;
}

/** Object that includes an array of Domains resource and a possible link for next set. */
export interface DomainResourceList {
  /** List of Domains resource */
  value?: DomainResource[];
  /**
   * The URL the client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/** Input parameter for verification APIs */
export interface VerificationParameter {
  /** Type of verification. */
  verificationType: VerificationType;
}

/** Object that includes an array of EmailServices and a possible link for next set. */
export interface EmailServiceResourceList {
  /** List of EmailService */
  value?: EmailServiceResource[];
  /**
   * The URL the client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/** Data POST-ed to the nameAvailability action */
export interface NameAvailabilityParameters
  extends CheckNameAvailabilityRequest {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** A class representing update parameters for CommunicationService resource. */
export interface CommunicationServiceResourceUpdate extends TaggedResource {
  /** List of email Domain resource Ids. */
  linkedDomains?: string[];
}

/** A class that describes the PATCH request parameters of a Domains resource. */
export interface UpdateDomainRequestParameters extends TaggedResource {
  /** Collection of valid sender usernames. This is a key-value pair where key=username and value=display name. */
  validSenderUsernames?: { [propertyName: string]: string };
  /** Describes whether user engagement tracking is enabled or disabled. */
  userEngagementTracking?: UserEngagementTracking;
}

/** A class representing update parameters for EmailService resource. */
export interface EmailServiceResourceUpdate extends TaggedResource {}

/** A class representing a CommunicationService resource. */
export interface CommunicationServiceResource extends TrackedResource {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: CommunicationServicesProvisioningState;
  /**
   * FQDN of the CommunicationService instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostName?: string;
  /** The location where the communication service stores its data at rest. */
  dataLocation?: string;
  /**
   * Resource ID of an Azure Notification Hub linked to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly notificationHubId?: string;
  /**
   * Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The immutable resource Id of the communication service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly immutableResourceId?: string;
  /** List of email Domain resource Ids. */
  linkedDomains?: string[];
}

/** A class representing a Domains resource. */
export interface DomainResource extends TrackedResource {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DomainsProvisioningState;
  /**
   * The location where the Domains resource data is stored at rest.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataLocation?: string;
  /**
   * P2 sender domain that is displayed to the email recipients [RFC 5322].
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fromSenderDomain?: string;
  /**
   * P1 sender domain that is present on the email envelope [RFC 5321].
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mailFromSenderDomain?: string;
  /** Describes how a Domains resource is being managed. */
  domainManagement?: DomainManagement;
  /**
   * List of VerificationStatusRecord
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly verificationStates?: DomainPropertiesVerificationStates;
  /**
   * List of DnsRecord
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly verificationRecords?: DomainPropertiesVerificationRecords;
  /** Collection of valid sender usernames. This is a key-value pair where key=username and value=display name. */
  validSenderUsernames?: { [propertyName: string]: string };
  /** Describes whether user engagement tracking is enabled or disabled. */
  userEngagementTracking?: UserEngagementTracking;
}

/** A class representing an EmailService resource. */
export interface EmailServiceResource extends TrackedResource {
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: EmailServicesProvisioningState;
  /** The location where the email service stores its data at rest. */
  dataLocation?: string;
}

/** Defines headers for CommunicationServices_update operation. */
export interface CommunicationServicesUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for CommunicationServices_createOrUpdate operation. */
export interface CommunicationServicesCreateOrUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for CommunicationServices_delete operation. */
export interface CommunicationServicesDeleteHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for Domains_createOrUpdate operation. */
export interface DomainsCreateOrUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for Domains_delete operation. */
export interface DomainsDeleteHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for Domains_update operation. */
export interface DomainsUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for Domains_initiateVerification operation. */
export interface DomainsInitiateVerificationHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for Domains_cancelVerification operation. */
export interface DomainsCancelVerificationHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for EmailServices_createOrUpdate operation. */
export interface EmailServicesCreateOrUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for EmailServices_delete operation. */
export interface EmailServicesDeleteHeaders {
  /** URL to query for status of the operation. */
  location?: string;
}

/** Defines headers for EmailServices_update operation. */
export interface EmailServicesUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export enum KnownCheckNameAvailabilityReason {
  /** Invalid */
  Invalid = "Invalid",
  /** AlreadyExists */
  AlreadyExists = "AlreadyExists"
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type CheckNameAvailabilityReason = string;

/** Known values of {@link CommunicationServicesProvisioningState} that the service accepts. */
export enum KnownCommunicationServicesProvisioningState {
  /** Unknown */
  Unknown = "Unknown",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Running */
  Running = "Running",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Moving */
  Moving = "Moving"
}

/**
 * Defines values for CommunicationServicesProvisioningState. \
 * {@link KnownCommunicationServicesProvisioningState} can be used interchangeably with CommunicationServicesProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Running** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Moving**
 */
export type CommunicationServicesProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link DomainsProvisioningState} that the service accepts. */
export enum KnownDomainsProvisioningState {
  /** Unknown */
  Unknown = "Unknown",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Running */
  Running = "Running",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Moving */
  Moving = "Moving"
}

/**
 * Defines values for DomainsProvisioningState. \
 * {@link KnownDomainsProvisioningState} can be used interchangeably with DomainsProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Running** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Moving**
 */
export type DomainsProvisioningState = string;

/** Known values of {@link DomainManagement} that the service accepts. */
export enum KnownDomainManagement {
  /** AzureManaged */
  AzureManaged = "AzureManaged",
  /** CustomerManaged */
  CustomerManaged = "CustomerManaged",
  /** CustomerManagedInExchangeOnline */
  CustomerManagedInExchangeOnline = "CustomerManagedInExchangeOnline"
}

/**
 * Defines values for DomainManagement. \
 * {@link KnownDomainManagement} can be used interchangeably with DomainManagement,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureManaged** \
 * **CustomerManaged** \
 * **CustomerManagedInExchangeOnline**
 */
export type DomainManagement = string;

/** Known values of {@link VerificationStatus} that the service accepts. */
export enum KnownVerificationStatus {
  /** NotStarted */
  NotStarted = "NotStarted",
  /** VerificationRequested */
  VerificationRequested = "VerificationRequested",
  /** VerificationInProgress */
  VerificationInProgress = "VerificationInProgress",
  /** VerificationFailed */
  VerificationFailed = "VerificationFailed",
  /** Verified */
  Verified = "Verified",
  /** CancellationRequested */
  CancellationRequested = "CancellationRequested"
}

/**
 * Defines values for VerificationStatus. \
 * {@link KnownVerificationStatus} can be used interchangeably with VerificationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotStarted** \
 * **VerificationRequested** \
 * **VerificationInProgress** \
 * **VerificationFailed** \
 * **Verified** \
 * **CancellationRequested**
 */
export type VerificationStatus = string;

/** Known values of {@link UserEngagementTracking} that the service accepts. */
export enum KnownUserEngagementTracking {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for UserEngagementTracking. \
 * {@link KnownUserEngagementTracking} can be used interchangeably with UserEngagementTracking,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type UserEngagementTracking = string;

/** Known values of {@link VerificationType} that the service accepts. */
export enum KnownVerificationType {
  /** Domain */
  Domain = "Domain",
  /** SPF */
  SPF = "SPF",
  /** Dkim */
  Dkim = "DKIM",
  /** Dkim2 */
  Dkim2 = "DKIM2",
  /** Dmarc */
  Dmarc = "DMARC"
}

/**
 * Defines values for VerificationType. \
 * {@link KnownVerificationType} can be used interchangeably with VerificationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Domain** \
 * **SPF** \
 * **DKIM** \
 * **DKIM2** \
 * **DMARC**
 */
export type VerificationType = string;

/** Known values of {@link EmailServicesProvisioningState} that the service accepts. */
export enum KnownEmailServicesProvisioningState {
  /** Unknown */
  Unknown = "Unknown",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Running */
  Running = "Running",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Moving */
  Moving = "Moving"
}

/**
 * Defines values for EmailServicesProvisioningState. \
 * {@link KnownEmailServicesProvisioningState} can be used interchangeably with EmailServicesProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Running** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Moving**
 */
export type EmailServicesProvisioningState = string;
/** Defines values for KeyType. */
export type KeyType = "Primary" | "Secondary";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface CommunicationServicesCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type CommunicationServicesCheckNameAvailabilityResponse = CheckNameAvailabilityResponse;

/** Optional parameters. */
export interface CommunicationServicesLinkNotificationHubOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the operation. */
  linkNotificationHubParameters?: LinkNotificationHubParameters;
}

/** Contains response data for the linkNotificationHub operation. */
export type CommunicationServicesLinkNotificationHubResponse = LinkedNotificationHub;

/** Optional parameters. */
export interface CommunicationServicesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type CommunicationServicesListBySubscriptionResponse = CommunicationServiceResourceList;

/** Optional parameters. */
export interface CommunicationServicesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type CommunicationServicesListByResourceGroupResponse = CommunicationServiceResourceList;

/** Optional parameters. */
export interface CommunicationServicesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type CommunicationServicesUpdateResponse = CommunicationServiceResource;

/** Optional parameters. */
export interface CommunicationServicesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CommunicationServicesGetResponse = CommunicationServiceResource;

/** Optional parameters. */
export interface CommunicationServicesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CommunicationServicesCreateOrUpdateResponse = CommunicationServiceResource;

/** Optional parameters. */
export interface CommunicationServicesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CommunicationServicesListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type CommunicationServicesListKeysResponse = CommunicationServiceKeys;

/** Optional parameters. */
export interface CommunicationServicesRegenerateKeyOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the regenerateKey operation. */
export type CommunicationServicesRegenerateKeyResponse = CommunicationServiceKeys;

/** Optional parameters. */
export interface CommunicationServicesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type CommunicationServicesListBySubscriptionNextResponse = CommunicationServiceResourceList;

/** Optional parameters. */
export interface CommunicationServicesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type CommunicationServicesListByResourceGroupNextResponse = CommunicationServiceResourceList;

/** Optional parameters. */
export interface DomainsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DomainsGetResponse = DomainResource;

/** Optional parameters. */
export interface DomainsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DomainsCreateOrUpdateResponse = DomainResource;

/** Optional parameters. */
export interface DomainsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DomainsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type DomainsUpdateResponse = DomainResource;

/** Optional parameters. */
export interface DomainsListByEmailServiceResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEmailServiceResource operation. */
export type DomainsListByEmailServiceResourceResponse = DomainResourceList;

/** Optional parameters. */
export interface DomainsInitiateVerificationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the initiateVerification operation. */
export type DomainsInitiateVerificationResponse = DomainsInitiateVerificationHeaders;

/** Optional parameters. */
export interface DomainsCancelVerificationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the cancelVerification operation. */
export type DomainsCancelVerificationResponse = DomainsCancelVerificationHeaders;

/** Optional parameters. */
export interface DomainsListByEmailServiceResourceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByEmailServiceResourceNext operation. */
export type DomainsListByEmailServiceResourceNextResponse = DomainResourceList;

/** Optional parameters. */
export interface EmailServicesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EmailServicesGetResponse = EmailServiceResource;

/** Optional parameters. */
export interface EmailServicesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type EmailServicesCreateOrUpdateResponse = EmailServiceResource;

/** Optional parameters. */
export interface EmailServicesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface EmailServicesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type EmailServicesUpdateResponse = EmailServiceResource;

/** Optional parameters. */
export interface EmailServicesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type EmailServicesListBySubscriptionResponse = EmailServiceResourceList;

/** Optional parameters. */
export interface EmailServicesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type EmailServicesListByResourceGroupResponse = EmailServiceResourceList;

/** Optional parameters. */
export interface EmailServicesListVerifiedExchangeOnlineDomainsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listVerifiedExchangeOnlineDomains operation. */
export type EmailServicesListVerifiedExchangeOnlineDomainsResponse = {
  /** The parsed response body. */
  body: string[];
};

/** Optional parameters. */
export interface EmailServicesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type EmailServicesListBySubscriptionNextResponse = EmailServiceResourceList;

/** Optional parameters. */
export interface EmailServicesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type EmailServicesListByResourceGroupNextResponse = EmailServiceResourceList;

/** Optional parameters. */
export interface CommunicationServiceManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
