{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/generated/src/siprouting/models/index.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/**\n * Represents a SIP configuration.\n * When a call is being routed the routes are applied in the same order as in the routes list.\n * A route is matched by its number pattern.\n * Call is then directed into route's first available trunk, based on the order in the route's trunks list.\n */\nexport interface SipConfiguration {\n  /**\n   * SIP trunks for routing calls.\n   * Map key is trunk's FQDN (1-249 characters).\n   */\n  trunks?: { [propertyName: string]: SipTrunk };\n  /** Trunk routes for routing calls. */\n  routes?: SipTrunkRoute[];\n}\n\n/** Represents a SIP trunk for routing calls. See RFC 4904. */\nexport interface SipTrunk {\n  /** Gets or sets SIP signaling port of the trunk. */\n  sipSignalingPort: number;\n}\n\n/** Represents a trunk route for routing calls. */\nexport interface SipTrunkRoute {\n  /** Gets or sets description of the route. */\n  description?: string;\n  /** Gets or sets name of the route. */\n  name: string;\n  /**\n   * Gets or sets regex number pattern for routing calls. .NET regex format is supported.\n   * The regex should match only digits with an optional '+' prefix without spaces.\n   * I.e. \"^\\+[1-9][0-9]{3,23}$\".\n   */\n  numberPattern: string;\n  /** Gets or sets list of SIP trunks for routing calls. Trunks are represented as FQDN. */\n  trunks?: string[];\n}\n\n/** The Communication Services error. */\nexport interface CommunicationErrorResponse {\n  /** The Communication Services error. */\n  error: SipRoutingError;\n}\n\n/** The Communication Services error. */\nexport interface SipRoutingError {\n  /** The error code. */\n  code: string;\n  /** The error message. */\n  message: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * Further details about specific errors that led to this error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: SipRoutingError[];\n  /**\n   * The inner error if any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly innerError?: SipRoutingError;\n}\n\n/** Represents a SIP configuration update. */\nexport interface SipConfigurationUpdate {\n  /**\n   * SIP trunks for routing calls.\n   * Map key is trunk's FQDN (1-249 characters).\n   */\n  trunks?: { [propertyName: string]: TrunkUpdate | null };\n  /** Trunk routes for routing calls. */\n  routes?: SipTrunkRoute[];\n}\n\n/** Represents a SIP trunk update. */\nexport interface TrunkUpdate {\n  /** Gets or sets SIP signaling port of the trunk. */\n  sipSignalingPort?: number;\n}\n\n/** Defines headers for SipRouting_get operation. */\nexport interface SipRoutingGetExceptionHeaders {\n  /** Error code */\n  xMsErrorCode?: string;\n}\n\n/** Defines headers for SipRouting_update operation. */\nexport interface SipRoutingUpdateExceptionHeaders {\n  /** Error code */\n  xMsErrorCode?: string;\n}\n\n/** Optional parameters. */\nexport interface SipRoutingGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SipRoutingGetResponse = SipConfiguration;\n\n/** Optional parameters. */\nexport interface SipRoutingUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /**\n   * SIP trunks for routing calls.\n   * Map key is trunk's FQDN (1-249 characters).\n   */\n  trunks?: { [propertyName: string]: TrunkUpdate | null };\n  /** Trunk routes for routing calls. */\n  routes?: SipTrunkRoute[];\n}\n\n/** Contains response data for the update operation. */\nexport type SipRoutingUpdateResponse = SipConfiguration;\n\n/** Optional parameters. */\nexport interface SipRoutingClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}