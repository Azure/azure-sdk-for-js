"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.nextLink = exports.options = exports.phoneNumbers = exports.top = exports.phoneNumber = exports.sms = exports.calling = exports.contentType1 = exports.operationId = exports.searchId1 = exports.searchId = exports.quantity = exports.areaCode = exports.capabilities = exports.assignmentType1 = exports.phoneNumberType2 = exports.contentType = exports.phoneNumberType1 = exports.acceptLanguage = exports.apiVersion = exports.administrativeDivision = exports.locality = exports.assignmentType = exports.maxPageSize = exports.skip = exports.phoneNumberType = exports.countryCode = exports.endpoint = exports.accept = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.countryCode = {
    parameterPath: "countryCode",
    mapper: {
        serializedName: "countryCode",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.phoneNumberType = {
    parameterPath: "phoneNumberType",
    mapper: {
        serializedName: "phoneNumberType",
        required: true,
        type: {
            name: "Enum",
            allowedValues: ["geographic", "tollFree"],
        },
    },
};
exports.skip = {
    parameterPath: ["options", "skip"],
    mapper: {
        defaultValue: 0,
        serializedName: "skip",
        type: {
            name: "Number",
        },
    },
};
exports.maxPageSize = {
    parameterPath: ["options", "maxPageSize"],
    mapper: {
        defaultValue: 100,
        serializedName: "maxPageSize",
        type: {
            name: "Number",
        },
    },
};
exports.assignmentType = {
    parameterPath: ["options", "assignmentType"],
    mapper: {
        serializedName: "assignmentType",
        type: {
            name: "Enum",
            allowedValues: ["person", "application"],
        },
    },
};
exports.locality = {
    parameterPath: ["options", "locality"],
    mapper: {
        serializedName: "locality",
        type: {
            name: "String",
        },
    },
};
exports.administrativeDivision = {
    parameterPath: ["options", "administrativeDivision"],
    mapper: {
        serializedName: "administrativeDivision",
        type: {
            name: "String",
        },
    },
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2025-02-11",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.acceptLanguage = {
    parameterPath: ["options", "acceptLanguage"],
    mapper: {
        serializedName: "accept-language",
        type: {
            name: "String",
        },
    },
};
exports.phoneNumberType1 = {
    parameterPath: ["options", "phoneNumberType"],
    mapper: {
        serializedName: "phoneNumberType",
        type: {
            name: "Enum",
            allowedValues: ["geographic", "tollFree"],
        },
    },
};
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.phoneNumberType2 = {
    parameterPath: "phoneNumberType",
    mapper: mappers_js_1.PhoneNumberSearchRequest,
};
exports.assignmentType1 = {
    parameterPath: "assignmentType",
    mapper: mappers_js_1.PhoneNumberSearchRequest,
};
exports.capabilities = {
    parameterPath: "capabilities",
    mapper: mappers_js_1.PhoneNumberSearchRequest,
};
exports.areaCode = {
    parameterPath: ["options", "areaCode"],
    mapper: mappers_js_1.PhoneNumberSearchRequest,
};
exports.quantity = {
    parameterPath: ["options", "quantity"],
    mapper: mappers_js_1.PhoneNumberSearchRequest,
};
exports.searchId = {
    parameterPath: "searchId",
    mapper: {
        serializedName: "searchId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.searchId1 = {
    parameterPath: ["options", "searchId"],
    mapper: mappers_js_1.PhoneNumberPurchaseRequest,
};
exports.operationId = {
    parameterPath: "operationId",
    mapper: {
        serializedName: "operationId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/merge-patch+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.calling = {
    parameterPath: ["options", "calling"],
    mapper: mappers_js_1.PhoneNumberCapabilitiesRequest,
};
exports.sms = {
    parameterPath: ["options", "sms"],
    mapper: mappers_js_1.PhoneNumberCapabilitiesRequest,
};
exports.phoneNumber = {
    parameterPath: "phoneNumber",
    mapper: {
        serializedName: "phoneNumber",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.top = {
    parameterPath: ["options", "top"],
    mapper: {
        defaultValue: 100,
        serializedName: "top",
        type: {
            name: "Number",
        },
    },
};
exports.phoneNumbers = {
    parameterPath: "phoneNumbers",
    mapper: mappers_js_1.OperatorInformationRequest,
};
exports.options = {
    parameterPath: ["options", "options"],
    mapper: mappers_js_1.OperatorInformationRequest,
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
//# sourceMappingURL=parameters.js.map