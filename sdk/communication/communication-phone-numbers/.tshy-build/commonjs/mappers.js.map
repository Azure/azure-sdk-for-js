{"version":3,"file":"mappers.js","sourceRoot":"","sources":["../../src/mappers.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AASlC,wDAaC;AAMD,wDAUC;AAjCD;;;GAGG;AACH,SAAgB,sBAAsB,CACpC,MAA4D;IAE5D,MAAM,MAAM,GAAe,EAAE,CAAC;IAE9B,IAAI,MAAM,EAAE,CAAC;QACX,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,IAAY,EAAE,EAAE;YAC3C,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC;YAC3C,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAc,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;GAGG;AACH,SAAgB,sBAAsB,CAAC,MAAkB;IAGvD,MAAM,MAAM,GAA6C,EAAE,CAAC;IAE5D,MAAM,CAAC,OAAO,CAAC,CAAC,KAAe,EAAE,EAAE;QACjC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,gBAAgB,EAAE,KAAK,CAAC,gBAAgB,EAAkB,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { SipTrunk } from \"./models.js\";\nimport type { TrunkUpdate as RestSipTrunk } from \"./generated/src/siprouting/models/index.js\";\n\n/**\n * @internal\n * Transforming SIP trunks REST model to SDK model\n */\nexport function transformFromRestModel(\n  trunks: { [propertyName: string]: RestSipTrunk } | undefined,\n): SipTrunk[] {\n  const result: SipTrunk[] = [];\n\n  if (trunks) {\n    Object.keys(trunks).forEach((fqdn: string) => {\n      const port = trunks[fqdn].sipSignalingPort;\n      result.push({ fqdn: fqdn, sipSignalingPort: port } as SipTrunk);\n    });\n  }\n\n  return result;\n}\n\n/**\n * @internal\n * Transforming SIP trunks SDK model to REST model\n */\nexport function transformIntoRestModel(trunks: SipTrunk[]): {\n  [propertyName: string]: RestSipTrunk;\n} {\n  const result: { [propertyName: string]: RestSipTrunk } = {};\n\n  trunks.forEach((trunk: SipTrunk) => {\n    result[trunk.fqdn] = { sipSignalingPort: trunk.sipSignalingPort } as RestSipTrunk;\n  });\n\n  return result;\n}\n"]}