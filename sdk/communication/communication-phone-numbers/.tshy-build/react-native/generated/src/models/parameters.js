/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { PhoneNumberSearchRequest as PhoneNumberSearchRequestMapper, PhoneNumberPurchaseRequest as PhoneNumberPurchaseRequestMapper, PhoneNumberCapabilitiesRequest as PhoneNumberCapabilitiesRequestMapper, OperatorInformationRequest as OperatorInformationRequestMapper, } from "../models/mappers.js";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
export const countryCode = {
    parameterPath: "countryCode",
    mapper: {
        serializedName: "countryCode",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const phoneNumberType = {
    parameterPath: "phoneNumberType",
    mapper: {
        serializedName: "phoneNumberType",
        required: true,
        type: {
            name: "Enum",
            allowedValues: ["geographic", "tollFree"],
        },
    },
};
export const skip = {
    parameterPath: ["options", "skip"],
    mapper: {
        defaultValue: 0,
        serializedName: "skip",
        type: {
            name: "Number",
        },
    },
};
export const maxPageSize = {
    parameterPath: ["options", "maxPageSize"],
    mapper: {
        defaultValue: 100,
        serializedName: "maxPageSize",
        type: {
            name: "Number",
        },
    },
};
export const assignmentType = {
    parameterPath: ["options", "assignmentType"],
    mapper: {
        serializedName: "assignmentType",
        type: {
            name: "Enum",
            allowedValues: ["person", "application"],
        },
    },
};
export const locality = {
    parameterPath: ["options", "locality"],
    mapper: {
        serializedName: "locality",
        type: {
            name: "String",
        },
    },
};
export const administrativeDivision = {
    parameterPath: ["options", "administrativeDivision"],
    mapper: {
        serializedName: "administrativeDivision",
        type: {
            name: "String",
        },
    },
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2025-02-11",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const acceptLanguage = {
    parameterPath: ["options", "acceptLanguage"],
    mapper: {
        serializedName: "accept-language",
        type: {
            name: "String",
        },
    },
};
export const phoneNumberType1 = {
    parameterPath: ["options", "phoneNumberType"],
    mapper: {
        serializedName: "phoneNumberType",
        type: {
            name: "Enum",
            allowedValues: ["geographic", "tollFree"],
        },
    },
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
export const phoneNumberType2 = {
    parameterPath: "phoneNumberType",
    mapper: PhoneNumberSearchRequestMapper,
};
export const assignmentType1 = {
    parameterPath: "assignmentType",
    mapper: PhoneNumberSearchRequestMapper,
};
export const capabilities = {
    parameterPath: "capabilities",
    mapper: PhoneNumberSearchRequestMapper,
};
export const areaCode = {
    parameterPath: ["options", "areaCode"],
    mapper: PhoneNumberSearchRequestMapper,
};
export const quantity = {
    parameterPath: ["options", "quantity"],
    mapper: PhoneNumberSearchRequestMapper,
};
export const searchId = {
    parameterPath: "searchId",
    mapper: {
        serializedName: "searchId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const searchId1 = {
    parameterPath: ["options", "searchId"],
    mapper: PhoneNumberPurchaseRequestMapper,
};
export const operationId = {
    parameterPath: "operationId",
    mapper: {
        serializedName: "operationId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/merge-patch+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
export const calling = {
    parameterPath: ["options", "calling"],
    mapper: PhoneNumberCapabilitiesRequestMapper,
};
export const sms = {
    parameterPath: ["options", "sms"],
    mapper: PhoneNumberCapabilitiesRequestMapper,
};
export const phoneNumber = {
    parameterPath: "phoneNumber",
    mapper: {
        serializedName: "phoneNumber",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const top = {
    parameterPath: ["options", "top"],
    mapper: {
        defaultValue: 100,
        serializedName: "top",
        type: {
            name: "Number",
        },
    },
};
export const phoneNumbers = {
    parameterPath: "phoneNumbers",
    mapper: OperatorInformationRequestMapper,
};
export const options = {
    parameterPath: ["options", "options"],
    mapper: OperatorInformationRequestMapper,
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
//# sourceMappingURL=parameters.js.map