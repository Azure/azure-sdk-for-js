/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const Paths190FnhrAdministrationResourcesResourceidTelephoneNumberSummaryGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Paths190FnhrAdministrationResourcesResourceidTelephoneNumberSummaryGetResponses200ContentApplicationJsonSchema",
    modelProperties: {
      assetDetails: {
        serializedName: "assetDetails",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssetDetails"
            }
          }
        }
      }
    }
  }
};

export const AssetDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssetDetails",
    modelProperties: {
      numberType: {
        serializedName: "numberType",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      resourceAcquiredCount: {
        serializedName: "resourceAcquiredCount",
        type: {
          name: "Number"
        }
      },
      subscriptionAcquiredCount: {
        serializedName: "subscriptionAcquiredCount",
        type: {
          name: "Number"
        }
      },
      aadTenantAcquiredCount: {
        serializedName: "aadTenantAcquiredCount",
        type: {
          name: "Number"
        }
      },
      tierInfo: {
        serializedName: "tierInfo",
        type: {
          name: "Composite",
          className: "AssetDetailsTierInfo"
        }
      }
    }
  }
};

export const AssetDetailsTierInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssetDetailsTierInfo",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      allowed: {
        serializedName: "allowed",
        type: {
          name: "Number"
        }
      },
      acquired: {
        serializedName: "acquired",
        type: {
          name: "Number"
        }
      },
      balance: {
        serializedName: "balance",
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommunicationErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const CommunicationError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationError"
            }
          }
        }
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const AcsTier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsTier",
    modelProperties: {
      tierId: {
        serializedName: "tierId",
        type: {
          name: "String"
        }
      },
      tierType: {
        serializedName: "tierType",
        type: {
          name: "String"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        type: {
          name: "Composite",
          className: "AcsTierCapabilities"
        }
      }
    }
  }
};

export const AcsTierCapabilities: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsTierCapabilities",
    modelProperties: {
      phoneNumberPurchase: {
        serializedName: "phoneNumberPurchase",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PhoneNumberPurchase"
            }
          }
        }
      },
      sms: {
        serializedName: "sms",
        type: {
          name: "Composite",
          className: "AcsTierCapabilitiesSms"
        }
      },
      calling: {
        serializedName: "calling",
        type: {
          name: "Composite",
          className: "AcsTierCapabilitiesCalling"
        }
      },
      trialPhoneNumberPurchase: {
        serializedName: "trialPhoneNumberPurchase",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrialPhoneNumberPurchase"
            }
          }
        }
      },
      trialPhoneNumberUsage: {
        serializedName: "trialPhoneNumberUsage",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrialPhoneNumberUsage"
            }
          }
        }
      }
    }
  }
};

export const PhoneNumberPurchase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PhoneNumberPurchase",
    modelProperties: {
      numberType: {
        serializedName: "numberType",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      totalNumbers: {
        serializedName: "totalNumbers",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsTierCapabilitiesSms: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsTierCapabilitiesSms",
    modelProperties: {
      outbound: {
        serializedName: "outbound",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SmsOutbound"
            }
          }
        }
      },
      inbound: {
        serializedName: "inbound",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SmsInbound"
            }
          }
        }
      }
    }
  }
};

export const SmsOutbound: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SmsOutbound",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      smsPerMin: {
        serializedName: "smsPerMin",
        type: {
          name: "Number"
        }
      },
      geographicLimitations: {
        serializedName: "geographicLimitations",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SmsInbound: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SmsInbound",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      smsPerMin: {
        serializedName: "smsPerMin",
        type: {
          name: "Number"
        }
      },
      geographicLimitations: {
        serializedName: "geographicLimitations",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcsTierCapabilitiesCalling: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcsTierCapabilitiesCalling",
    modelProperties: {
      outbound: {
        serializedName: "outbound",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CallingOutbound"
            }
          }
        }
      },
      inbound: {
        serializedName: "inbound",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CallingInbound"
            }
          }
        }
      }
    }
  }
};

export const CallingOutbound: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallingOutbound",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      concurrentCalls: {
        serializedName: "concurrentCalls",
        type: {
          name: "Number"
        }
      },
      geographicLimitations: {
        serializedName: "geographicLimitations",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CallingInbound: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CallingInbound",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      concurrentCalls: {
        serializedName: "concurrentCalls",
        type: {
          name: "Number"
        }
      },
      geographicLimitations: {
        serializedName: "geographicLimitations",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrialPhoneNumberPurchase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrialPhoneNumberPurchase",
    modelProperties: {
      numberType: {
        serializedName: "numberType",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      totalNumbers: {
        serializedName: "totalNumbers",
        type: {
          name: "Number"
        }
      },
      trialPeriodDays: {
        serializedName: "trialPeriodDays",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TrialPhoneNumberUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrialPhoneNumberUsage",
    modelProperties: {
      numberType: {
        serializedName: "numberType",
        type: {
          name: "String"
        }
      },
      calling: {
        serializedName: "calling",
        type: {
          name: "Composite",
          className: "TrialPhoneNumberUsageCalling"
        }
      },
      sms: {
        serializedName: "sms",
        type: {
          name: "Composite",
          className: "TrialPhoneNumberUsageSms"
        }
      }
    }
  }
};

export const TrialPhoneNumberUsageCalling: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrialPhoneNumberUsageCalling",
    modelProperties: {
      outbound: {
        serializedName: "outbound",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrialPhoneNumberUsageCallingBounds"
            }
          }
        }
      },
      inbound: {
        serializedName: "inbound",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrialPhoneNumberUsageCallingBounds"
            }
          }
        }
      }
    }
  }
};

export const TrialPhoneNumberUsageCallingBounds: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrialPhoneNumberUsageCallingBounds",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      totalMinutes: {
        serializedName: "totalMinutes",
        type: {
          name: "Number"
        }
      },
      maximumCallDurationMinutes: {
        serializedName: "maximumCallDurationMinutes",
        type: {
          name: "Number"
        }
      },
      concurrentCalls: {
        serializedName: "concurrentCalls",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TrialPhoneNumberUsageSms: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrialPhoneNumberUsageSms",
    modelProperties: {
      outbound: {
        serializedName: "outbound",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrialPhoneNumberUsageSmsBounds"
            }
          }
        }
      },
      inbound: {
        serializedName: "inbound",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrialPhoneNumberUsageSmsBounds"
            }
          }
        }
      }
    }
  }
};

export const TrialPhoneNumberUsageSmsBounds: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrialPhoneNumberUsageSmsBounds",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      smsPerMin: {
        serializedName: "smsPerMin",
        type: {
          name: "Number"
        }
      }
    }
  }
};
