/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  AlphaId,
  AlphaIdsGetAlphaIdsOptionalParams,
  AlphaIdsGetDynamicAlphaIdConfigurationOptionalParams,
  AlphaIdsGetDynamicAlphaIdConfigurationResponse,
  AlphaIdsUpsertDynamicAlphaIdConfigurationOptionalParams,
  AlphaIdsUpsertDynamicAlphaIdConfigurationResponse,
  AlphaIdsGetDynamicAlphaIdCountriesOptionalParams,
  AlphaIdsGetDynamicAlphaIdCountriesResponse,
  AlphaIdsGetPreRegisteredAlphaIdCountriesOptionalParams,
  AlphaIdsGetPreRegisteredAlphaIdCountriesResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AlphaIds. */
export interface AlphaIds {
  /**
   * Gets the list of alpha ids for the current resource.
   * @param options The options parameters.
   */
  listAlphaIds(
    options?: AlphaIdsGetAlphaIdsOptionalParams
  ): PagedAsyncIterableIterator<AlphaId>;
  /**
   * Get the Dynamic Alpha ID configuration that's applied for the current resource.
   * @param options The options parameters.
   */
  getDynamicAlphaIdConfiguration(
    options?: AlphaIdsGetDynamicAlphaIdConfigurationOptionalParams
  ): Promise<AlphaIdsGetDynamicAlphaIdConfigurationResponse>;
  /**
   * Creates or updates Dynamic Alpha ID Configuration for the current resource.
   * @param enabled Indicates whether the use of Dynamic Alpha IDs is supported for a specific resource.
   * @param options The options parameters.
   */
  upsertDynamicAlphaIdConfiguration(
    enabled: boolean,
    options?: AlphaIdsUpsertDynamicAlphaIdConfigurationOptionalParams
  ): Promise<AlphaIdsUpsertDynamicAlphaIdConfigurationResponse>;
  /**
   * Gets the list of countries that support Dynamic Alpha IDs.
   * @param options The options parameters.
   */
  getDynamicAlphaIdCountries(
    options?: AlphaIdsGetDynamicAlphaIdCountriesOptionalParams
  ): Promise<AlphaIdsGetDynamicAlphaIdCountriesResponse>;
  /**
   * Gets the list of countries that support Pre-Registered Alpha IDs.
   * @param options The options parameters.
   */
  getPreRegisteredAlphaIdCountries(
    options?: AlphaIdsGetPreRegisteredAlphaIdCountriesOptionalParams
  ): Promise<AlphaIdsGetPreRegisteredAlphaIdCountriesResponse>;
}
