/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  CreateChatThreadRequest,
  ChatCreateChatThreadOptionalParams,
  ChatCreateChatThreadResponse,
  ChatListChatThreadsOptionalParams,
  ChatListChatThreadsResponse,
  ChatDeleteChatThreadOptionalParams,
  ChatListChatThreadsNextOptionalParams,
  ChatListChatThreadsNextResponse
} from "../models";

/** Interface representing a Chat. */
export interface Chat {
  /**
   * Creates a chat thread.
   * @param createChatThreadRequest Request payload for creating a chat thread.
   * @param options The options parameters.
   */
  createChatThread(
    createChatThreadRequest: CreateChatThreadRequest,
    options?: ChatCreateChatThreadOptionalParams
  ): Promise<ChatCreateChatThreadResponse>;
  /**
   * Gets the list of chat threads of a user.
   * @param options The options parameters.
   */
  listChatThreads(
    options?: ChatListChatThreadsOptionalParams
  ): Promise<ChatListChatThreadsResponse>;
  /**
   * Deletes a thread.
   * @param chatThreadId Id of the thread to be deleted.
   * @param options The options parameters.
   */
  deleteChatThread(
    chatThreadId: string,
    options?: ChatDeleteChatThreadOptionalParams
  ): Promise<void>;
  /**
   * ListChatThreadsNext
   * @param nextLink The nextLink from the previous successful call to the ListChatThreads method.
   * @param options The options parameters.
   */
  listChatThreadsNext(
    nextLink: string,
    options?: ChatListChatThreadsNextOptionalParams
  ): Promise<ChatListChatThreadsNextResponse>;
}
