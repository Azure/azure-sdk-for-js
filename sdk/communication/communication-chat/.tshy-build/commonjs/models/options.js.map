{"version":3,"file":"options.js","sourceRoot":"","sources":["../../../src/models/options.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { CommonClientOptions, OperationOptions } from \"@azure/core-client\";\nimport type { ChatMessageType } from \"../generated/src/models/index.js\";\nimport {\n  ChatListChatThreadsOptionalParams as RestListChatThreadsOptions,\n  ChatThreadListChatMessagesOptionalParams as RestListMessagesOptions,\n  ChatThreadListChatParticipantsOptionalParams as RestListParticipantsOptions,\n  ChatThreadListChatReadReceiptsOptionalParams as RestListReadReceiptsOptions,\n} from \"../generated/src/models/index.js\";\nimport type { ChatParticipant, ChatRetentionPolicy } from \"./models.js\";\n\nexport {\n  RestListMessagesOptions,\n  RestListChatThreadsOptions,\n  RestListParticipantsOptions,\n  RestListReadReceiptsOptions,\n};\n\n/**\n * Options to create chat client.\n */\nexport interface ChatClientOptions extends CommonClientOptions {}\n\n/**\n * Options to create chat thread client.\n */\nexport interface ChatThreadClientOptions extends ChatClientOptions {}\n\n/**\n * Options to update a chat thread.\n */\nexport interface UpdateTopicOptions extends OperationOptions {}\n\n/**\n * Options to update a chat thread.\n */\nexport interface UpdateChatThreadPropertiesOptions extends OperationOptions {\n  /** Thread topic. */\n  topic?: string;\n  /** Thread metadata. */\n  metadata?: Record<string, string>;\n  /** Data retention policy for auto deletion. */\n  retentionPolicy?: ChatRetentionPolicy;\n}\n\n/**\n * Options to get chat threads.\n */\nexport type ListChatThreadsOptions = RestListChatThreadsOptions;\n\n/**\n * Options to send a chat message.\n */\nexport interface SendMessageOptions extends OperationOptions {\n  /** The display name of the chat message sender. This property is used to populate sender name for push notifications. */\n  senderDisplayName?: string;\n  /** The chat message type. */\n  type?: ChatMessageType;\n  /** Message metadata. */\n  metadata?: Record<string, string>;\n}\n\n/**\n * Options to update a chat message.\n */\nexport interface UpdateMessageOptions extends OperationOptions {\n  /** Chat message content. */\n  content?: string;\n  /** Message metadata. */\n  metadata?: Record<string, string>;\n}\n\n/**\n * Options to list chat messages.\n */\nexport type ListMessagesOptions = RestListMessagesOptions;\n\n/**\n * Options to create a chat thread.\n */\nexport interface CreateChatThreadOptions extends OperationOptions {\n  /** Participants to be added to the chat thread. */\n  participants?: ChatParticipant[];\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Idempotency-Token and get back an appropriate response without the server executing the request multiple times. The value of the Idempotency-Token is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs. */\n  idempotencyToken?: string;\n  /** metadata */\n  metadata?: Record<string, string>;\n  /** Data retention policy for auto deletion. */\n  retentionPolicy?: ChatRetentionPolicy;\n}\n\n/**\n * Options to get a chat thread.\n */\nexport type GetPropertiesOptions = OperationOptions;\n\n/**\n * Options to delete a chat thread.\n */\nexport type DeleteChatThreadOptions = OperationOptions;\n\n/**\n * Options to get a chat message.\n */\nexport type GetMessageOptions = OperationOptions;\n\n/**\n * Options to delete a chat message.\n */\nexport type DeleteMessageOptions = OperationOptions;\n\n/**\n * Options to add a chat participant.\n */\nexport type AddParticipantsOptions = OperationOptions;\n\n/**\n * Options to list chat participants.\n */\nexport type ListParticipantsOptions = RestListParticipantsOptions;\n\n/**\n * Options to remove a chat participant.\n */\nexport type RemoveParticipantOptions = OperationOptions;\n\n/**\n * Options to send typing notifications.\n */\nexport interface SendTypingNotificationOptions extends OperationOptions {\n  /** The display name of the typing notification sender. This property is used to populate sender name for push notifications. */\n  senderDisplayName?: string;\n}\n\n/**\n * Options to send read receipt.\n */\nexport type SendReadReceiptOptions = OperationOptions;\n\n/**\n * Options to list read receipts.\n */\nexport type ListReadReceiptsOptions = RestListReadReceiptsOptions;\n"]}