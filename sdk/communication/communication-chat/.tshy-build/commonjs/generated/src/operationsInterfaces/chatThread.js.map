{"version":3,"file":"chatThread.js","sourceRoot":"","sources":["../../../../../src/generated/src/operationsInterfaces/chatThread.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  ChatThreadListChatReadReceiptsOptionalParams,\n  ChatThreadListChatReadReceiptsResponse,\n  SendReadReceiptRequest,\n  ChatThreadSendChatReadReceiptOptionalParams,\n  SendChatMessageRequest,\n  ChatThreadSendChatMessageOptionalParams,\n  ChatThreadSendChatMessageResponse,\n  ChatThreadListChatMessagesOptionalParams,\n  ChatThreadListChatMessagesResponse,\n  ChatThreadGetChatMessageOptionalParams,\n  ChatThreadGetChatMessageResponse,\n  UpdateChatMessageRequest,\n  ChatThreadUpdateChatMessageOptionalParams,\n  ChatThreadDeleteChatMessageOptionalParams,\n  ChatThreadListChatParticipantsOptionalParams,\n  ChatThreadListChatParticipantsResponse,\n  CommunicationIdentifierModel,\n  ChatThreadRemoveChatParticipantOptionalParams,\n  AddChatParticipantsRequest,\n  ChatThreadAddChatParticipantsOptionalParams,\n  ChatThreadAddChatParticipantsResponse,\n  UpdateChatThreadRequest,\n  ChatThreadUpdateChatThreadPropertiesOptionalParams,\n  ChatThreadGetChatThreadPropertiesOptionalParams,\n  ChatThreadGetChatThreadPropertiesResponse,\n  ChatThreadSendTypingNotificationOptionalParams,\n  ChatThreadListChatReadReceiptsNextOptionalParams,\n  ChatThreadListChatReadReceiptsNextResponse,\n  ChatThreadListChatMessagesNextOptionalParams,\n  ChatThreadListChatMessagesNextResponse,\n  ChatThreadListChatParticipantsNextOptionalParams,\n  ChatThreadListChatParticipantsNextResponse,\n} from \"../models/index.js\";\n\n/** Interface representing a ChatThread. */\nexport interface ChatThread {\n  /**\n   * Gets chat message read receipts for a thread.\n   * @param chatThreadId Thread id to get the chat message read receipts for.\n   * @param options The options parameters.\n   */\n  listChatReadReceipts(\n    chatThreadId: string,\n    options?: ChatThreadListChatReadReceiptsOptionalParams,\n  ): Promise<ChatThreadListChatReadReceiptsResponse>;\n  /**\n   * Sends a read receipt event to a thread, on behalf of a user.\n   * @param chatThreadId Thread id to send the read receipt event to.\n   * @param sendReadReceiptRequest Read receipt details.\n   * @param options The options parameters.\n   */\n  sendChatReadReceipt(\n    chatThreadId: string,\n    sendReadReceiptRequest: SendReadReceiptRequest,\n    options?: ChatThreadSendChatReadReceiptOptionalParams,\n  ): Promise<void>;\n  /**\n   * Sends a message to a thread.\n   * @param chatThreadId The thread id to send the message to.\n   * @param sendChatMessageRequest Details of the message to send.\n   * @param options The options parameters.\n   */\n  sendChatMessage(\n    chatThreadId: string,\n    sendChatMessageRequest: SendChatMessageRequest,\n    options?: ChatThreadSendChatMessageOptionalParams,\n  ): Promise<ChatThreadSendChatMessageResponse>;\n  /**\n   * Gets a list of messages from a thread.\n   * @param chatThreadId The thread id of the message.\n   * @param options The options parameters.\n   */\n  listChatMessages(\n    chatThreadId: string,\n    options?: ChatThreadListChatMessagesOptionalParams,\n  ): Promise<ChatThreadListChatMessagesResponse>;\n  /**\n   * Gets a message by id.\n   * @param chatThreadId The thread id to which the message was sent.\n   * @param chatMessageId The message id.\n   * @param options The options parameters.\n   */\n  getChatMessage(\n    chatThreadId: string,\n    chatMessageId: string,\n    options?: ChatThreadGetChatMessageOptionalParams,\n  ): Promise<ChatThreadGetChatMessageResponse>;\n  /**\n   * Updates a message.\n   * @param chatThreadId The thread id to which the message was sent.\n   * @param chatMessageId The message id.\n   * @param updateChatMessageRequest Details of the request to update the message.\n   * @param options The options parameters.\n   */\n  updateChatMessage(\n    chatThreadId: string,\n    chatMessageId: string,\n    updateChatMessageRequest: UpdateChatMessageRequest,\n    options?: ChatThreadUpdateChatMessageOptionalParams,\n  ): Promise<void>;\n  /**\n   * Deletes a message.\n   * @param chatThreadId The thread id to which the message was sent.\n   * @param chatMessageId The message id.\n   * @param options The options parameters.\n   */\n  deleteChatMessage(\n    chatThreadId: string,\n    chatMessageId: string,\n    options?: ChatThreadDeleteChatMessageOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the participants of a thread.\n   * @param chatThreadId Thread id to get participants for.\n   * @param options The options parameters.\n   */\n  listChatParticipants(\n    chatThreadId: string,\n    options?: ChatThreadListChatParticipantsOptionalParams,\n  ): Promise<ChatThreadListChatParticipantsResponse>;\n  /**\n   * Remove a participant from a thread.\n   * @param chatThreadId Thread id to remove the participant from.\n   * @param participantCommunicationIdentifier Id of the thread participant to remove from the thread.\n   * @param options The options parameters.\n   */\n  removeChatParticipant(\n    chatThreadId: string,\n    participantCommunicationIdentifier: CommunicationIdentifierModel,\n    options?: ChatThreadRemoveChatParticipantOptionalParams,\n  ): Promise<void>;\n  /**\n   * Adds thread participants to a thread. If participants already exist, no change occurs.\n   * @param chatThreadId Id of the thread to add participants to.\n   * @param addChatParticipantsRequest Thread participants to be added to the thread.\n   * @param options The options parameters.\n   */\n  addChatParticipants(\n    chatThreadId: string,\n    addChatParticipantsRequest: AddChatParticipantsRequest,\n    options?: ChatThreadAddChatParticipantsOptionalParams,\n  ): Promise<ChatThreadAddChatParticipantsResponse>;\n  /**\n   * Updates a thread's properties.\n   * @param chatThreadId The id of the thread to update.\n   * @param updateChatThreadRequest Request payload for updating a chat thread.\n   * @param options The options parameters.\n   */\n  updateChatThreadProperties(\n    chatThreadId: string,\n    updateChatThreadRequest: UpdateChatThreadRequest,\n    options?: ChatThreadUpdateChatThreadPropertiesOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets a chat thread's properties.\n   * @param chatThreadId Id of the thread.\n   * @param options The options parameters.\n   */\n  getChatThreadProperties(\n    chatThreadId: string,\n    options?: ChatThreadGetChatThreadPropertiesOptionalParams,\n  ): Promise<ChatThreadGetChatThreadPropertiesResponse>;\n  /**\n   * Posts a typing event to a thread, on behalf of a user.\n   * @param chatThreadId Id of the thread.\n   * @param options The options parameters.\n   */\n  sendTypingNotification(\n    chatThreadId: string,\n    options?: ChatThreadSendTypingNotificationOptionalParams,\n  ): Promise<void>;\n  /**\n   * ListChatReadReceiptsNext\n   * @param chatThreadId Thread id to get the chat message read receipts for.\n   * @param nextLink The nextLink from the previous successful call to the ListChatReadReceipts method.\n   * @param options The options parameters.\n   */\n  listChatReadReceiptsNext(\n    chatThreadId: string,\n    nextLink: string,\n    options?: ChatThreadListChatReadReceiptsNextOptionalParams,\n  ): Promise<ChatThreadListChatReadReceiptsNextResponse>;\n  /**\n   * ListChatMessagesNext\n   * @param chatThreadId The thread id of the message.\n   * @param nextLink The nextLink from the previous successful call to the ListChatMessages method.\n   * @param options The options parameters.\n   */\n  listChatMessagesNext(\n    chatThreadId: string,\n    nextLink: string,\n    options?: ChatThreadListChatMessagesNextOptionalParams,\n  ): Promise<ChatThreadListChatMessagesNextResponse>;\n  /**\n   * ListChatParticipantsNext\n   * @param chatThreadId Thread id to get participants for.\n   * @param nextLink The nextLink from the previous successful call to the ListChatParticipants method.\n   * @param options The options parameters.\n   */\n  listChatParticipantsNext(\n    chatThreadId: string,\n    nextLink: string,\n    options?: ChatThreadListChatParticipantsNextOptionalParams,\n  ): Promise<ChatThreadListChatParticipantsNextResponse>;\n}\n"]}