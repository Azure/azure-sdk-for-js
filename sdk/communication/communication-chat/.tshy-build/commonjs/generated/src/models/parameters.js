"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.repeatabilityRequestId = exports.createChatThreadRequest = exports.nextLink = exports.sendTypingNotificationRequest = exports.updateChatThreadRequest = exports.addChatParticipantsRequest = exports.participantCommunicationIdentifier = exports.updateChatMessageRequest = exports.contentType1 = exports.chatMessageId = exports.startTime = exports.sendChatMessageRequest = exports.sendReadReceiptRequest = exports.contentType = exports.apiVersion = exports.skip = exports.maxPageSize = exports.chatThreadId = exports.endpoint = exports.accept = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.chatThreadId = {
    parameterPath: "chatThreadId",
    mapper: {
        serializedName: "chatThreadId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.maxPageSize = {
    parameterPath: ["options", "maxPageSize"],
    mapper: {
        serializedName: "maxPageSize",
        type: {
            name: "Number",
        },
    },
};
exports.skip = {
    parameterPath: ["options", "skip"],
    mapper: {
        serializedName: "skip",
        type: {
            name: "Number",
        },
    },
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2025-03-15",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.sendReadReceiptRequest = {
    parameterPath: "sendReadReceiptRequest",
    mapper: mappers_js_1.SendReadReceiptRequest,
};
exports.sendChatMessageRequest = {
    parameterPath: "sendChatMessageRequest",
    mapper: mappers_js_1.SendChatMessageRequest,
};
exports.startTime = {
    parameterPath: ["options", "startTime"],
    mapper: {
        serializedName: "startTime",
        type: {
            name: "DateTime",
        },
    },
};
exports.chatMessageId = {
    parameterPath: "chatMessageId",
    mapper: {
        serializedName: "chatMessageId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.contentType1 = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/merge-patch+json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.updateChatMessageRequest = {
    parameterPath: "updateChatMessageRequest",
    mapper: mappers_js_1.UpdateChatMessageRequest,
};
exports.participantCommunicationIdentifier = {
    parameterPath: "participantCommunicationIdentifier",
    mapper: mappers_js_1.CommunicationIdentifierModel,
};
exports.addChatParticipantsRequest = {
    parameterPath: "addChatParticipantsRequest",
    mapper: mappers_js_1.AddChatParticipantsRequest,
};
exports.updateChatThreadRequest = {
    parameterPath: "updateChatThreadRequest",
    mapper: mappers_js_1.UpdateChatThreadRequest,
};
exports.sendTypingNotificationRequest = {
    parameterPath: ["options", "sendTypingNotificationRequest"],
    mapper: mappers_js_1.SendTypingNotificationRequest,
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.createChatThreadRequest = {
    parameterPath: "createChatThreadRequest",
    mapper: mappers_js_1.CreateChatThreadRequest,
};
exports.repeatabilityRequestId = {
    parameterPath: ["options", "repeatabilityRequestId"],
    mapper: {
        serializedName: "repeatability-request-id",
        type: {
            name: "String",
        },
    },
};
//# sourceMappingURL=parameters.js.map