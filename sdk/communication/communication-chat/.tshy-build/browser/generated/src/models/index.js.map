{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/generated/src/models/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAuVH,yFAAyF;AACzF,MAAM,CAAN,IAAY,qCAWX;AAXD,WAAY,qCAAqC;IAC/C,cAAc;IACd,4DAAmB,CAAA;IACnB,wBAAwB;IACxB,gFAAuC,CAAA;IACvC,kBAAkB;IAClB,oEAA2B,CAAA;IAC3B,yBAAyB;IACzB,kFAAyC,CAAA;IACzC,wBAAwB;IACxB,gFAAuC,CAAA;AACzC,CAAC,EAXW,qCAAqC,KAArC,qCAAqC,QAWhD;AAeD,2FAA2F;AAC3F,MAAM,CAAN,IAAY,uCAOX;AAPD,WAAY,uCAAuC;IACjD,aAAa;IACb,4DAAiB,CAAA;IACjB,UAAU;IACV,sDAAW,CAAA;IACX,WAAW;IACX,wDAAa,CAAA;AACf,CAAC,EAPW,uCAAuC,KAAvC,uCAAuC,QAOlD;AAaD,4EAA4E;AAC5E,MAAM,CAAN,IAAY,wBAKX;AALD,WAAY,wBAAwB;IAClC,6DAA6D;IAC7D,qEAAyC,CAAA;IACzC,iCAAiC;IACjC,yCAAa,CAAA;AACf,CAAC,EALW,wBAAwB,KAAxB,wBAAwB,QAKnC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type ChatRetentionPolicyUnion =\n  | ChatRetentionPolicy\n  | ThreadCreationDateRetentionPolicy\n  | NoneRetentionPolicy;\n\n/** A paged collection of chat message read receipts. */\nexport interface ChatMessageReadReceiptsCollection {\n  /** Collection of chat message read receipts. */\n  value: ChatMessageReadReceipt[];\n  /**\n   * If there are more chat message read receipts that can be retrieved, the next link will be populated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A chat message read receipt indicates the time a chat message was read by a recipient. */\nexport interface ChatMessageReadReceipt {\n  /** Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model is polymorphic: Apart from kind and rawId, at most one further property may be set which must match the kind enum value. */\n  senderCommunicationIdentifier: CommunicationIdentifierModel;\n  /** Id of the chat message that has been read. This id is generated by the server. */\n  chatMessageId: string;\n  /** The time at which the message was read. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  readOn: Date;\n}\n\n/** Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model is polymorphic: Apart from kind and rawId, at most one further property may be set which must match the kind enum value. */\nexport interface CommunicationIdentifierModel {\n  /** The identifier kind. Only required in responses. */\n  kind?: CommunicationIdentifierModelKind;\n  /** Raw Id of the identifier. Optional in requests, required in responses. */\n  rawId?: string;\n  /** The communication user. */\n  communicationUser?: CommunicationUserIdentifierModel;\n  /** The phone number. */\n  phoneNumber?: PhoneNumberIdentifierModel;\n  /** The Microsoft Teams user. */\n  microsoftTeamsUser?: MicrosoftTeamsUserIdentifierModel;\n  /** The Microsoft Teams application. */\n  microsoftTeamsApp?: MicrosoftTeamsAppIdentifierModel;\n}\n\n/** A user that got created with an Azure Communication Services resource. */\nexport interface CommunicationUserIdentifierModel {\n  /** The Id of the communication user. */\n  id: string;\n}\n\n/** A phone number. */\nexport interface PhoneNumberIdentifierModel {\n  /** The phone number in E.164 format. */\n  value: string;\n}\n\n/** A Microsoft Teams user. */\nexport interface MicrosoftTeamsUserIdentifierModel {\n  /** The Id of the Microsoft Teams user. If not anonymous, this is the AAD object Id of the user. */\n  userId: string;\n  /** True if the Microsoft Teams user is anonymous. By default false if missing. */\n  isAnonymous?: boolean;\n  /** The cloud that the Microsoft Teams user belongs to. By default 'public' if missing. */\n  cloud?: CommunicationCloudEnvironmentModel;\n}\n\n/** A Microsoft Teams application. */\nexport interface MicrosoftTeamsAppIdentifierModel {\n  /** The Id of the Microsoft Teams application. */\n  appId: string;\n  /** The cloud that the Microsoft Teams application belongs to. By default 'public' if missing. */\n  cloud?: CommunicationCloudEnvironmentModel;\n}\n\n/** The Communication Services error. */\nexport interface CommunicationErrorResponse {\n  /** The Communication Services error. */\n  error: ChatError;\n}\n\n/** The Communication Services error. */\nexport interface ChatError {\n  /** The error code. */\n  code: string;\n  /** The error message. */\n  message: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * Further details about specific errors that led to this error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ChatError[];\n  /**\n   * The inner error if any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly innerError?: ChatError;\n}\n\n/** Request payload for sending a read receipt. */\nexport interface SendReadReceiptRequest {\n  /** Id of the latest chat message read by the user. */\n  chatMessageId: string;\n}\n\n/** Details of the message to send. */\nexport interface SendChatMessageRequest {\n  /** Chat message content. */\n  content: string;\n  /** The display name of the chat message sender. This property is used to populate sender name for push notifications. */\n  senderDisplayName?: string;\n  /** The chat message type. */\n  type?: ChatMessageType;\n  /** Message metadata. */\n  metadata?: { [propertyName: string]: string };\n}\n\n/** Result of the send message operation. */\nexport interface SendChatMessageResult {\n  /** A server-generated message id. */\n  id: string;\n}\n\n/** Collection of chat messages for a particular chat thread. */\nexport interface ChatMessagesCollection {\n  /** Collection of chat messages. */\n  value: ChatMessage[];\n  /**\n   * If there are more chat messages that can be retrieved, the next link will be populated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Chat message. */\nexport interface ChatMessage {\n  /** The id of the chat message. This id is server generated. */\n  id: string;\n  /** The chat message type. */\n  type: ChatMessageType;\n  /** Sequence of the chat message in the conversation. */\n  sequenceId: string;\n  /** Version of the chat message. */\n  version: string;\n  /** Content of a chat message. */\n  content?: ChatMessageContent;\n  /** The display name of the chat message sender. This property is used to populate sender name for push notifications. */\n  senderDisplayName?: string;\n  /** The timestamp when the chat message arrived at the server. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  createdOn: Date;\n  /** Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model is polymorphic: Apart from kind and rawId, at most one further property may be set which must match the kind enum value. */\n  senderCommunicationIdentifier?: CommunicationIdentifierModel;\n  /** The timestamp (if applicable) when the message was deleted. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  deletedOn?: Date;\n  /** The last timestamp (if applicable) when the message was edited. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  editedOn?: Date;\n  /** Message metadata. */\n  metadata?: { [propertyName: string]: string };\n}\n\n/** Content of a chat message. */\nexport interface ChatMessageContent {\n  /** Chat message content for messages of types text or html. */\n  message?: string;\n  /** Chat message content for messages of type topicUpdated. */\n  topic?: string;\n  /** Chat message content for messages of types participantAdded or participantRemoved. */\n  participants?: ChatParticipant[];\n  /** List of attachments for this message */\n  attachments?: ChatAttachment[];\n  /** Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model is polymorphic: Apart from kind and rawId, at most one further property may be set which must match the kind enum value. */\n  initiatorCommunicationIdentifier?: CommunicationIdentifierModel;\n}\n\n/** A participant of the chat thread. */\nexport interface ChatParticipant {\n  /** Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model is polymorphic: Apart from kind and rawId, at most one further property may be set which must match the kind enum value. */\n  communicationIdentifier: CommunicationIdentifierModel;\n  /** Display name for the chat participant. */\n  displayName?: string;\n  /** Time from which the chat history is shared with the participant. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  shareHistoryTime?: Date;\n  /** Contextual metadata for the chat participant. The metadata consists of name/value pairs. The total size of all metadata pairs can be up to 1KB in size. */\n  metadata?: { [propertyName: string]: string };\n}\n\n/** An attachment in a chat message. */\nexport interface ChatAttachment {\n  /** Id of the attachment */\n  id: string;\n  /** The type of attachment. */\n  attachmentType: ChatAttachmentType;\n  /** The name of the attachment content. */\n  name?: string;\n  /** The URL where the attachment can be downloaded */\n  url?: string;\n  /** The URL where the preview of attachment can be downloaded */\n  previewUrl?: string;\n}\n\n/** Request payload for updating a chat message. */\nexport interface UpdateChatMessageRequest {\n  /** Chat message content. */\n  content?: string;\n  /** Message metadata. */\n  metadata?: { [propertyName: string]: string };\n}\n\n/** Collection of participants belong to a particular thread. */\nexport interface ChatParticipantsCollection {\n  /** Chat participants. */\n  value: ChatParticipant[];\n  /**\n   * If there are more chat participants that can be retrieved, the next link will be populated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Participants to be added to the thread. */\nexport interface AddChatParticipantsRequest {\n  /** Participants to add to a chat thread. */\n  participants: ChatParticipant[];\n}\n\n/** Result of the add chat participants operation. */\nexport interface AddChatParticipantsResult {\n  /**\n   * The participants that failed to be added to the chat thread.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invalidParticipants?: ChatError[];\n}\n\n/** Request payload for creating a chat thread. */\nexport interface CreateChatThreadRequest {\n  /** The chat thread topic. */\n  topic: string;\n  /** Participants to be added to the chat thread. */\n  participants?: ChatParticipant[];\n  /** Contextual metadata for the thread. The metadata consists of name/value pairs. The total size of all metadata pairs can be up to 1KB in size. */\n  metadata?: { [propertyName: string]: string };\n  /** Data retention policy for auto deletion. */\n  retentionPolicy?: ChatRetentionPolicyUnion;\n}\n\n/** Data retention policy for auto deletion. */\nexport interface ChatRetentionPolicy {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"threadCreationDate\" | \"none\";\n}\n\n/** Result of the create chat thread operation. */\nexport interface CreateChatThreadResult {\n  /** Chat thread. */\n  chatThread?: ChatThreadProperties;\n  /**\n   * The participants that failed to be added to the chat thread.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly invalidParticipants?: ChatError[];\n}\n\n/** Chat thread. */\nexport interface ChatThreadProperties {\n  /** Chat thread id. */\n  id: string;\n  /** Chat thread topic. */\n  topic: string;\n  /** The timestamp when the chat thread was created. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  createdOn: Date;\n  /** Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model is polymorphic: Apart from kind and rawId, at most one further property may be set which must match the kind enum value. */\n  createdByCommunicationIdentifier: CommunicationIdentifierModel;\n  /** The timestamp when the chat thread was deleted. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  deletedOn?: Date;\n  /** Contextual metadata for the thread. The metadata consists of name/value pairs. The total size of all metadata pairs can be up to 1KB in size. */\n  metadata?: { [propertyName: string]: string };\n  /** Data retention policy for auto deletion. */\n  retentionPolicy?: ChatRetentionPolicyUnion;\n}\n\n/** Collection of chat threads. */\nexport interface ChatThreadsItemCollection {\n  /** Collection of chat threads. */\n  value: ChatThreadItem[];\n  /**\n   * If there are more chat threads that can be retrieved, the next link will be populated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Summary information of a chat thread. */\nexport interface ChatThreadItem {\n  /** Chat thread id. */\n  id: string;\n  /** Chat thread topic. */\n  topic: string;\n  /** The timestamp when the chat thread was deleted. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  deletedOn?: Date;\n  /**\n   * The timestamp when the last message arrived at the server. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastMessageReceivedOn?: Date;\n}\n\n/** Request payload for updating a chat thread. */\nexport interface UpdateChatThreadRequest {\n  /** Chat thread topic. */\n  topic?: string;\n  /** Contextual metadata for the thread. The metadata consists of name/value pairs. The total size of all metadata pairs can be up to 1KB in size. */\n  metadata?: { [propertyName: string]: string };\n  /** Data retention policy for auto deletion. */\n  retentionPolicy?: ChatRetentionPolicyUnion;\n}\n\n/** Request payload for typing notifications. */\nexport interface SendTypingNotificationRequest {\n  /** The display name of the typing notification sender. This property is used to populate sender name for push notifications. */\n  senderDisplayName?: string;\n}\n\n/** Thread retention policy based on thread creation date. */\nexport interface ThreadCreationDateRetentionPolicy extends ChatRetentionPolicy {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"threadCreationDate\";\n  /** Indicates how many days after the thread creation the thread will be deleted. */\n  deleteThreadAfterDays: number;\n}\n\n/** No thread retention policy. */\nexport interface NoneRetentionPolicy extends ChatRetentionPolicy {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"none\";\n}\n\n/** Known values of {@link CommunicationIdentifierModelKind} that the service accepts. */\nexport enum KnownCommunicationIdentifierModelKind {\n  /** Unknown */\n  Unknown = \"unknown\",\n  /** CommunicationUser */\n  CommunicationUser = \"communicationUser\",\n  /** PhoneNumber */\n  PhoneNumber = \"phoneNumber\",\n  /** MicrosoftTeamsUser */\n  MicrosoftTeamsUser = \"microsoftTeamsUser\",\n  /** MicrosoftTeamsApp */\n  MicrosoftTeamsApp = \"microsoftTeamsApp\",\n}\n\n/**\n * Defines values for CommunicationIdentifierModelKind. \\\n * {@link KnownCommunicationIdentifierModelKind} can be used interchangeably with CommunicationIdentifierModelKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **unknown** \\\n * **communicationUser** \\\n * **phoneNumber** \\\n * **microsoftTeamsUser** \\\n * **microsoftTeamsApp**\n */\nexport type CommunicationIdentifierModelKind = string;\n\n/** Known values of {@link CommunicationCloudEnvironmentModel} that the service accepts. */\nexport enum KnownCommunicationCloudEnvironmentModel {\n  /** Public */\n  Public = \"public\",\n  /** Dod */\n  Dod = \"dod\",\n  /** Gcch */\n  Gcch = \"gcch\",\n}\n\n/**\n * Defines values for CommunicationCloudEnvironmentModel. \\\n * {@link KnownCommunicationCloudEnvironmentModel} can be used interchangeably with CommunicationCloudEnvironmentModel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **public** \\\n * **dod** \\\n * **gcch**\n */\nexport type CommunicationCloudEnvironmentModel = string;\n\n/** Known values of {@link RetentionPolicyKind} that the service accepts. */\nexport enum KnownRetentionPolicyKind {\n  /** Thread retention policy based on thread creation date. */\n  ThreadCreationDate = \"threadCreationDate\",\n  /** No thread retention policy */\n  None = \"none\",\n}\n\n/**\n * Defines values for RetentionPolicyKind. \\\n * {@link KnownRetentionPolicyKind} can be used interchangeably with RetentionPolicyKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **threadCreationDate**: Thread retention policy based on thread creation date. \\\n * **none**: No thread retention policy\n */\nexport type RetentionPolicyKind = string;\n/** Defines values for ChatMessageType. */\nexport type ChatMessageType =\n  | \"text\"\n  | \"html\"\n  | \"topicUpdated\"\n  | \"participantAdded\"\n  | \"participantRemoved\";\n/** Defines values for ChatAttachmentType. */\nexport type ChatAttachmentType = \"image\" | \"file\";\n\n/** Optional parameters. */\nexport interface ChatThreadListChatReadReceiptsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The maximum number of chat message read receipts to be returned per page. */\n  maxPageSize?: number;\n  /** Skips chat message read receipts up to a specified position in response. */\n  skip?: number;\n}\n\n/** Contains response data for the listChatReadReceipts operation. */\nexport type ChatThreadListChatReadReceiptsResponse =\n  ChatMessageReadReceiptsCollection;\n\n/** Optional parameters. */\nexport interface ChatThreadSendChatReadReceiptOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ChatThreadSendChatMessageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the sendChatMessage operation. */\nexport type ChatThreadSendChatMessageResponse = SendChatMessageResult;\n\n/** Optional parameters. */\nexport interface ChatThreadListChatMessagesOptionalParams\n  extends coreClient.OperationOptions {\n  /** The maximum number of messages to be returned per page. */\n  maxPageSize?: number;\n  /** The earliest point in time to get messages after. The timestamp should be in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  startTime?: Date;\n}\n\n/** Contains response data for the listChatMessages operation. */\nexport type ChatThreadListChatMessagesResponse = ChatMessagesCollection;\n\n/** Optional parameters. */\nexport interface ChatThreadGetChatMessageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getChatMessage operation. */\nexport type ChatThreadGetChatMessageResponse = ChatMessage;\n\n/** Optional parameters. */\nexport interface ChatThreadUpdateChatMessageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ChatThreadDeleteChatMessageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ChatThreadListChatParticipantsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The maximum number of participants to be returned per page. */\n  maxPageSize?: number;\n  /** Skips participants up to a specified position in response. */\n  skip?: number;\n}\n\n/** Contains response data for the listChatParticipants operation. */\nexport type ChatThreadListChatParticipantsResponse = ChatParticipantsCollection;\n\n/** Optional parameters. */\nexport interface ChatThreadRemoveChatParticipantOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ChatThreadAddChatParticipantsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the addChatParticipants operation. */\nexport type ChatThreadAddChatParticipantsResponse = AddChatParticipantsResult;\n\n/** Optional parameters. */\nexport interface ChatThreadUpdateChatThreadPropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ChatThreadGetChatThreadPropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getChatThreadProperties operation. */\nexport type ChatThreadGetChatThreadPropertiesResponse = ChatThreadProperties;\n\n/** Optional parameters. */\nexport interface ChatThreadSendTypingNotificationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Details of the typing notification request. */\n  sendTypingNotificationRequest?: SendTypingNotificationRequest;\n}\n\n/** Optional parameters. */\nexport interface ChatThreadListChatReadReceiptsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listChatReadReceiptsNext operation. */\nexport type ChatThreadListChatReadReceiptsNextResponse =\n  ChatMessageReadReceiptsCollection;\n\n/** Optional parameters. */\nexport interface ChatThreadListChatMessagesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listChatMessagesNext operation. */\nexport type ChatThreadListChatMessagesNextResponse = ChatMessagesCollection;\n\n/** Optional parameters. */\nexport interface ChatThreadListChatParticipantsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listChatParticipantsNext operation. */\nexport type ChatThreadListChatParticipantsNextResponse =\n  ChatParticipantsCollection;\n\n/** Optional parameters. */\nexport interface ChatCreateChatThreadOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs. */\n  repeatabilityRequestId?: string;\n}\n\n/** Contains response data for the createChatThread operation. */\nexport type ChatCreateChatThreadResponse = CreateChatThreadResult;\n\n/** Optional parameters. */\nexport interface ChatListChatThreadsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The maximum number of chat threads returned per page. */\n  maxPageSize?: number;\n  /** The earliest point in time to get chat threads up to. The timestamp should be in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. */\n  startTime?: Date;\n}\n\n/** Contains response data for the listChatThreads operation. */\nexport type ChatListChatThreadsResponse = ChatThreadsItemCollection;\n\n/** Optional parameters. */\nexport interface ChatDeleteChatThreadOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ChatListChatThreadsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listChatThreadsNext operation. */\nexport type ChatListChatThreadsNextResponse = ChatThreadsItemCollection;\n\n/** Optional parameters. */\nexport interface ChatApiClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}