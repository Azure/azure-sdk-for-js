/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const GlobalRulestackResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalRulestackResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GlobalRulestackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityServices: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityServices",
    modelProperties: {
      vulnerabilityProfile: {
        serializedName: "vulnerabilityProfile",
        type: {
          name: "String"
        }
      },
      antiSpywareProfile: {
        serializedName: "antiSpywareProfile",
        type: {
          name: "String"
        }
      },
      antiVirusProfile: {
        serializedName: "antiVirusProfile",
        type: {
          name: "String"
        }
      },
      urlFilteringProfile: {
        serializedName: "urlFilteringProfile",
        type: {
          name: "String"
        }
      },
      fileBlockingProfile: {
        serializedName: "fileBlockingProfile",
        type: {
          name: "String"
        }
      },
      dnsSubscription: {
        serializedName: "dnsSubscription",
        type: {
          name: "String"
        }
      },
      outboundUnTrustCertificate: {
        serializedName: "outboundUnTrustCertificate",
        type: {
          name: "String"
        }
      },
      outboundTrustCertificate: {
        serializedName: "outboundTrustCertificate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceManagerManagedIdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerManagedIdentityProperties",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "AzureResourceManagerUserAssignedIdentity"
            }
          }
        }
      }
    }
  }
};

export const AzureResourceManagerUserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerUserAssignedIdentity",
    modelProperties: {
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const GlobalRulestackResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalRulestackResourceUpdate",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AzureResourceManagerManagedIdentityProperties"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GlobalRulestackResourceUpdateProperties"
        }
      }
    }
  }
};

export const GlobalRulestackResourceUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalRulestackResourceUpdateProperties",
    modelProperties: {
      panEtag: {
        serializedName: "panEtag",
        type: {
          name: "String"
        }
      },
      panLocation: {
        serializedName: "panLocation",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      associatedSubscriptions: {
        serializedName: "associatedSubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      defaultMode: {
        serializedName: "defaultMode",
        type: {
          name: "String"
        }
      },
      minAppIdVersion: {
        serializedName: "minAppIdVersion",
        type: {
          name: "String"
        }
      },
      securityServices: {
        serializedName: "securityServices",
        type: {
          name: "Composite",
          className: "SecurityServices"
        }
      }
    }
  }
};

export const CertificateObjectGlobalRulestackResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CertificateObjectGlobalRulestackResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateObjectGlobalRulestackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FqdnListGlobalRulestackResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FqdnListGlobalRulestackResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FqdnListGlobalRulestackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Changelog: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Changelog",
    modelProperties: {
      changes: {
        serializedName: "changes",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      lastCommitted: {
        serializedName: "lastCommitted",
        type: {
          name: "DateTime"
        }
      },
      lastModified: {
        serializedName: "lastModified",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AdvSecurityObjectListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdvSecurityObjectListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "AdvSecurityObjectModel"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdvSecurityObjectModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdvSecurityObjectModel",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      entry: {
        serializedName: "entry",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameDescriptionObject"
            }
          }
        }
      }
    }
  }
};

export const NameDescriptionObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NameDescriptionObject",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ListAppIdResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListAppIdResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CountriesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CountriesResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Country"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Country: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Country",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ListFirewallsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListFirewallsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PredefinedUrlCategoriesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PredefinedUrlCategoriesResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PredefinedUrlCategory"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PredefinedUrlCategory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PredefinedUrlCategory",
    modelProperties: {
      action: {
        serializedName: "action",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityServicesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityServicesResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "SecurityServicesTypeList"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityServicesTypeList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityServicesTypeList",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      entry: {
        serializedName: "entry",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NameDescriptionObject"
            }
          }
        }
      }
    }
  }
};

export const PostRulesResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostRulesResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PostRulesResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceAddr: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SourceAddr",
    modelProperties: {
      cidrs: {
        serializedName: "cidrs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      countries: {
        serializedName: "countries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      feeds: {
        serializedName: "feeds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      prefixLists: {
        serializedName: "prefixLists",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DestinationAddr: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DestinationAddr",
    modelProperties: {
      cidrs: {
        serializedName: "cidrs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      countries: {
        serializedName: "countries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      feeds: {
        serializedName: "feeds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      prefixLists: {
        serializedName: "prefixLists",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fqdnLists: {
        serializedName: "fqdnLists",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Category: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Category",
    modelProperties: {
      urlCustom: {
        serializedName: "urlCustom",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      feeds: {
        serializedName: "feeds",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TagInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagInfo",
    modelProperties: {
      key: {
        serializedName: "key",
        required: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RuleCounter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RuleCounter",
    modelProperties: {
      priority: {
        serializedName: "priority",
        required: true,
        type: {
          name: "String"
        }
      },
      ruleStackName: {
        serializedName: "ruleStackName",
        type: {
          name: "String"
        }
      },
      ruleListName: {
        serializedName: "ruleListName",
        type: {
          name: "String"
        }
      },
      firewallName: {
        serializedName: "firewallName",
        type: {
          name: "String"
        }
      },
      ruleName: {
        serializedName: "ruleName",
        required: true,
        type: {
          name: "String"
        }
      },
      hitCount: {
        serializedName: "hitCount",
        type: {
          name: "Number"
        }
      },
      appSeen: {
        serializedName: "appSeen",
        type: {
          name: "Composite",
          className: "AppSeenData"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      requestTimestamp: {
        serializedName: "requestTimestamp",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedTimestamp: {
        serializedName: "lastUpdatedTimestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AppSeenData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppSeenData",
    modelProperties: {
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      appSeenList: {
        serializedName: "appSeenList",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppSeenInfo"
            }
          }
        }
      }
    }
  }
};

export const AppSeenInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppSeenInfo",
    modelProperties: {
      title: {
        serializedName: "title",
        required: true,
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        required: true,
        type: {
          name: "String"
        }
      },
      subCategory: {
        serializedName: "subCategory",
        required: true,
        type: {
          name: "String"
        }
      },
      risk: {
        serializedName: "risk",
        required: true,
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        required: true,
        type: {
          name: "String"
        }
      },
      technology: {
        serializedName: "technology",
        required: true,
        type: {
          name: "String"
        }
      },
      standardPorts: {
        serializedName: "standardPorts",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RuleCounterReset: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RuleCounterReset",
    modelProperties: {
      priority: {
        serializedName: "priority",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ruleStackName: {
        serializedName: "ruleStackName",
        type: {
          name: "String"
        }
      },
      ruleListName: {
        serializedName: "ruleListName",
        type: {
          name: "String"
        }
      },
      firewallName: {
        serializedName: "firewallName",
        type: {
          name: "String"
        }
      },
      ruleName: {
        serializedName: "ruleName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrefixListGlobalRulestackResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrefixListGlobalRulestackResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrefixListGlobalRulestackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PreRulesResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PreRulesResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PreRulesResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FirewallResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FirewallResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FirewallResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkProfile",
    modelProperties: {
      vnetConfiguration: {
        serializedName: "vnetConfiguration",
        type: {
          name: "Composite",
          className: "VnetConfiguration"
        }
      },
      vwanConfiguration: {
        serializedName: "vwanConfiguration",
        type: {
          name: "Composite",
          className: "VwanConfiguration"
        }
      },
      networkType: {
        serializedName: "networkType",
        required: true,
        type: {
          name: "String"
        }
      },
      publicIps: {
        serializedName: "publicIps",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPAddress"
            }
          }
        }
      },
      enableEgressNat: {
        serializedName: "enableEgressNat",
        required: true,
        type: {
          name: "String"
        }
      },
      egressNatIp: {
        serializedName: "egressNatIp",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPAddress"
            }
          }
        }
      }
    }
  }
};

export const VnetConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VnetConfiguration",
    modelProperties: {
      vnet: {
        serializedName: "vnet",
        type: {
          name: "Composite",
          className: "IPAddressSpace"
        }
      },
      trustSubnet: {
        serializedName: "trustSubnet",
        type: {
          name: "Composite",
          className: "IPAddressSpace"
        }
      },
      unTrustSubnet: {
        serializedName: "unTrustSubnet",
        type: {
          name: "Composite",
          className: "IPAddressSpace"
        }
      },
      ipOfTrustSubnetForUdr: {
        serializedName: "ipOfTrustSubnetForUdr",
        type: {
          name: "Composite",
          className: "IPAddress"
        }
      }
    }
  }
};

export const IPAddressSpace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPAddressSpace",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      addressSpace: {
        serializedName: "addressSpace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPAddress: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPAddress",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VwanConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VwanConfiguration",
    modelProperties: {
      networkVirtualApplianceId: {
        serializedName: "networkVirtualApplianceId",
        type: {
          name: "String"
        }
      },
      vHub: {
        serializedName: "vHub",
        type: {
          name: "Composite",
          className: "IPAddressSpace"
        }
      },
      trustSubnet: {
        serializedName: "trustSubnet",
        type: {
          name: "Composite",
          className: "IPAddressSpace"
        }
      },
      unTrustSubnet: {
        serializedName: "unTrustSubnet",
        type: {
          name: "Composite",
          className: "IPAddressSpace"
        }
      },
      ipOfTrustSubnetForUdr: {
        serializedName: "ipOfTrustSubnetForUdr",
        type: {
          name: "Composite",
          className: "IPAddress"
        }
      }
    }
  }
};

export const PanoramaConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PanoramaConfig",
    modelProperties: {
      configString: {
        serializedName: "configString",
        required: true,
        type: {
          name: "String"
        }
      },
      vmAuthKey: {
        serializedName: "vmAuthKey",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      panoramaServer: {
        serializedName: "panoramaServer",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      panoramaServer2: {
        serializedName: "panoramaServer2",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dgName: {
        serializedName: "dgName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tplName: {
        serializedName: "tplName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      cgName: {
        serializedName: "cgName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostName: {
        serializedName: "hostName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RulestackDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RulestackDetails",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      rulestackId: {
        serializedName: "rulestackId",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DNSSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DNSSettings",
    modelProperties: {
      enableDnsProxy: {
        serializedName: "enableDnsProxy",
        type: {
          name: "String"
        }
      },
      enabledDnsType: {
        serializedName: "enabledDnsType",
        type: {
          name: "String"
        }
      },
      dnsServers: {
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPAddress"
            }
          }
        }
      }
    }
  }
};

export const FrontendSetting: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FrontendSetting",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      protocol: {
        serializedName: "protocol",
        required: true,
        type: {
          name: "String"
        }
      },
      frontendConfiguration: {
        serializedName: "frontendConfiguration",
        type: {
          name: "Composite",
          className: "EndpointConfiguration"
        }
      },
      backendConfiguration: {
        serializedName: "backendConfiguration",
        type: {
          name: "Composite",
          className: "EndpointConfiguration"
        }
      }
    }
  }
};

export const EndpointConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EndpointConfiguration",
    modelProperties: {
      port: {
        serializedName: "port",
        required: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "address",
        type: {
          name: "Composite",
          className: "IPAddress"
        }
      }
    }
  }
};

export const PlanData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlanData",
    modelProperties: {
      usageType: {
        serializedName: "usageType",
        type: {
          name: "String"
        }
      },
      billingCycle: {
        serializedName: "billingCycle",
        required: true,
        type: {
          name: "String"
        }
      },
      planId: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "planId",
        required: true,
        type: {
          name: "String"
        }
      },
      effectiveDate: {
        serializedName: "effectiveDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const MarketplaceDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceDetails",
    modelProperties: {
      marketplaceSubscriptionId: {
        serializedName: "marketplaceSubscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      offerId: {
        serializedName: "offerId",
        required: true,
        type: {
          name: "String"
        }
      },
      publisherId: {
        serializedName: "publisherId",
        required: true,
        type: {
          name: "String"
        }
      },
      marketplaceSubscriptionStatus: {
        serializedName: "marketplaceSubscriptionStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocalRulestackResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LocalRulestackResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LocalRulestackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FirewallResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FirewallResourceUpdate",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AzureResourceManagerManagedIdentityProperties"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "FirewallResourceUpdateProperties"
        }
      }
    }
  }
};

export const FirewallResourceUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FirewallResourceUpdateProperties",
    modelProperties: {
      panEtag: {
        serializedName: "panEtag",
        type: {
          name: "String"
        }
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      isPanoramaManaged: {
        serializedName: "isPanoramaManaged",
        type: {
          name: "String"
        }
      },
      panoramaConfig: {
        serializedName: "panoramaConfig",
        type: {
          name: "Composite",
          className: "PanoramaConfig"
        }
      },
      associatedRulestack: {
        serializedName: "associatedRulestack",
        type: {
          name: "Composite",
          className: "RulestackDetails"
        }
      },
      dnsSettings: {
        serializedName: "dnsSettings",
        type: {
          name: "Composite",
          className: "DNSSettings"
        }
      },
      frontEndSettings: {
        serializedName: "frontEndSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FrontendSetting"
            }
          }
        }
      },
      planData: {
        serializedName: "planData",
        type: {
          name: "Composite",
          className: "PlanData"
        }
      },
      marketplaceDetails: {
        serializedName: "marketplaceDetails",
        type: {
          name: "Composite",
          className: "MarketplaceDetails"
        }
      }
    }
  }
};

export const GlobalRulestackInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalRulestackInfo",
    modelProperties: {
      azureId: {
        serializedName: "azureId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogSettings",
    modelProperties: {
      logType: {
        serializedName: "logType",
        type: {
          name: "String"
        }
      },
      logOption: {
        serializedName: "logOption",
        type: {
          name: "String"
        }
      },
      applicationInsights: {
        serializedName: "applicationInsights",
        type: {
          name: "Composite",
          className: "ApplicationInsights"
        }
      },
      commonDestination: {
        serializedName: "commonDestination",
        type: {
          name: "Composite",
          className: "LogDestination"
        }
      },
      trafficLogDestination: {
        serializedName: "trafficLogDestination",
        type: {
          name: "Composite",
          className: "LogDestination"
        }
      },
      threatLogDestination: {
        serializedName: "threatLogDestination",
        type: {
          name: "Composite",
          className: "LogDestination"
        }
      },
      decryptLogDestination: {
        serializedName: "decryptLogDestination",
        type: {
          name: "Composite",
          className: "LogDestination"
        }
      }
    }
  }
};

export const ApplicationInsights: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationInsights",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogDestination: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogDestination",
    modelProperties: {
      storageConfigurations: {
        serializedName: "storageConfigurations",
        type: {
          name: "Composite",
          className: "StorageAccount"
        }
      },
      eventHubConfigurations: {
        serializedName: "eventHubConfigurations",
        type: {
          name: "Composite",
          className: "EventHub"
        }
      },
      monitorConfigurations: {
        serializedName: "monitorConfigurations",
        type: {
          name: "Composite",
          className: "MonitorLog"
        }
      }
    }
  }
};

export const StorageAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageAccount",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventHub: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventHub",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      nameSpace: {
        serializedName: "nameSpace",
        type: {
          name: "String"
        }
      },
      policyName: {
        serializedName: "policyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitorLog: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorLog",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      workspace: {
        serializedName: "workspace",
        type: {
          name: "String"
        }
      },
      primaryKey: {
        serializedName: "primaryKey",
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "secondaryKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SupportInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportInfo",
    modelProperties: {
      productSku: {
        serializedName: "productSku",
        type: {
          name: "String"
        }
      },
      productSerial: {
        serializedName: "productSerial",
        type: {
          name: "String"
        }
      },
      accountRegistered: {
        serializedName: "accountRegistered",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      userDomainSupported: {
        serializedName: "userDomainSupported",
        type: {
          name: "String"
        }
      },
      userRegistered: {
        serializedName: "userRegistered",
        type: {
          name: "String"
        }
      },
      freeTrial: {
        serializedName: "freeTrial",
        type: {
          name: "String"
        }
      },
      freeTrialDaysLeft: {
        serializedName: "freeTrialDaysLeft",
        type: {
          name: "Number"
        }
      },
      freeTrialCreditLeft: {
        serializedName: "freeTrialCreditLeft",
        type: {
          name: "Number"
        }
      },
      helpURL: {
        serializedName: "helpURL",
        type: {
          name: "String"
        }
      },
      supportURL: {
        serializedName: "supportURL",
        type: {
          name: "String"
        }
      },
      registerURL: {
        serializedName: "registerURL",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocalRulestackResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LocalRulestackResourceUpdate",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AzureResourceManagerManagedIdentityProperties"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LocalRulestackResourceUpdateProperties"
        }
      }
    }
  }
};

export const LocalRulestackResourceUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LocalRulestackResourceUpdateProperties",
    modelProperties: {
      panEtag: {
        serializedName: "panEtag",
        type: {
          name: "String"
        }
      },
      panLocation: {
        serializedName: "panLocation",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      associatedSubscriptions: {
        serializedName: "associatedSubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      defaultMode: {
        serializedName: "defaultMode",
        type: {
          name: "String"
        }
      },
      minAppIdVersion: {
        serializedName: "minAppIdVersion",
        type: {
          name: "String"
        }
      },
      securityServices: {
        serializedName: "securityServices",
        type: {
          name: "Composite",
          className: "SecurityServices"
        }
      }
    }
  }
};

export const CertificateObjectLocalRulestackResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CertificateObjectLocalRulestackResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateObjectLocalRulestackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FqdnListLocalRulestackResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FqdnListLocalRulestackResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FqdnListLocalRulestackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocalRulesResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LocalRulesResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LocalRulesResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrefixListResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrefixListResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrefixListResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GlobalRulestackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalRulestackResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AzureResourceManagerManagedIdentityProperties"
        }
      },
      panEtag: {
        serializedName: "properties.panEtag",
        type: {
          name: "String"
        }
      },
      panLocation: {
        serializedName: "properties.panLocation",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      associatedSubscriptions: {
        serializedName: "properties.associatedSubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      defaultMode: {
        serializedName: "properties.defaultMode",
        type: {
          name: "String"
        }
      },
      minAppIdVersion: {
        serializedName: "properties.minAppIdVersion",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      securityServices: {
        serializedName: "properties.securityServices",
        type: {
          name: "Composite",
          className: "SecurityServices"
        }
      }
    }
  }
};

export const CertificateObjectGlobalRulestackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CertificateObjectGlobalRulestackResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      certificateSignerResourceId: {
        serializedName: "properties.certificateSignerResourceId",
        type: {
          name: "String"
        }
      },
      certificateSelfSigned: {
        serializedName: "properties.certificateSelfSigned",
        required: true,
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FqdnListGlobalRulestackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FqdnListGlobalRulestackResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      fqdnList: {
        serializedName: "properties.fqdnList",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PostRulesResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PostRulesResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      ruleName: {
        serializedName: "properties.ruleName",
        required: true,
        type: {
          name: "String"
        }
      },
      priority: {
        serializedName: "properties.priority",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      ruleState: {
        serializedName: "properties.ruleState",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "SourceAddr"
        }
      },
      negateSource: {
        serializedName: "properties.negateSource",
        type: {
          name: "String"
        }
      },
      destination: {
        serializedName: "properties.destination",
        type: {
          name: "Composite",
          className: "DestinationAddr"
        }
      },
      negateDestination: {
        serializedName: "properties.negateDestination",
        type: {
          name: "String"
        }
      },
      applications: {
        serializedName: "properties.applications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "Composite",
          className: "Category"
        }
      },
      protocol: {
        defaultValue: "application-default",
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      protocolPortList: {
        serializedName: "properties.protocolPortList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      inboundInspectionCertificate: {
        serializedName: "properties.inboundInspectionCertificate",
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "properties.actionType",
        type: {
          name: "String"
        }
      },
      enableLogging: {
        serializedName: "properties.enableLogging",
        type: {
          name: "String"
        }
      },
      decryptionRuleType: {
        serializedName: "properties.decryptionRuleType",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagInfo"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrefixListGlobalRulestackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrefixListGlobalRulestackResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      prefixList: {
        serializedName: "properties.prefixList",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PreRulesResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PreRulesResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      ruleName: {
        serializedName: "properties.ruleName",
        required: true,
        type: {
          name: "String"
        }
      },
      priority: {
        serializedName: "properties.priority",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      ruleState: {
        serializedName: "properties.ruleState",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "SourceAddr"
        }
      },
      negateSource: {
        serializedName: "properties.negateSource",
        type: {
          name: "String"
        }
      },
      destination: {
        serializedName: "properties.destination",
        type: {
          name: "Composite",
          className: "DestinationAddr"
        }
      },
      negateDestination: {
        serializedName: "properties.negateDestination",
        type: {
          name: "String"
        }
      },
      applications: {
        serializedName: "properties.applications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "Composite",
          className: "Category"
        }
      },
      protocol: {
        defaultValue: "application-default",
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      protocolPortList: {
        serializedName: "properties.protocolPortList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      inboundInspectionCertificate: {
        serializedName: "properties.inboundInspectionCertificate",
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "properties.actionType",
        type: {
          name: "String"
        }
      },
      enableLogging: {
        serializedName: "properties.enableLogging",
        type: {
          name: "String"
        }
      },
      decryptionRuleType: {
        serializedName: "properties.decryptionRuleType",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagInfo"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateObjectLocalRulestackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CertificateObjectLocalRulestackResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      certificateSignerResourceId: {
        serializedName: "properties.certificateSignerResourceId",
        type: {
          name: "String"
        }
      },
      certificateSelfSigned: {
        serializedName: "properties.certificateSelfSigned",
        required: true,
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FqdnListLocalRulestackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FqdnListLocalRulestackResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      fqdnList: {
        serializedName: "properties.fqdnList",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocalRulesResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LocalRulesResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      ruleName: {
        serializedName: "properties.ruleName",
        required: true,
        type: {
          name: "String"
        }
      },
      priority: {
        serializedName: "properties.priority",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      ruleState: {
        serializedName: "properties.ruleState",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "SourceAddr"
        }
      },
      negateSource: {
        serializedName: "properties.negateSource",
        type: {
          name: "String"
        }
      },
      destination: {
        serializedName: "properties.destination",
        type: {
          name: "Composite",
          className: "DestinationAddr"
        }
      },
      negateDestination: {
        serializedName: "properties.negateDestination",
        type: {
          name: "String"
        }
      },
      applications: {
        serializedName: "properties.applications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "Composite",
          className: "Category"
        }
      },
      protocol: {
        defaultValue: "application-default",
        serializedName: "properties.protocol",
        type: {
          name: "String"
        }
      },
      protocolPortList: {
        serializedName: "properties.protocolPortList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      inboundInspectionCertificate: {
        serializedName: "properties.inboundInspectionCertificate",
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "properties.actionType",
        type: {
          name: "String"
        }
      },
      enableLogging: {
        serializedName: "properties.enableLogging",
        type: {
          name: "String"
        }
      },
      decryptionRuleType: {
        serializedName: "properties.decryptionRuleType",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "properties.tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagInfo"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrefixListResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrefixListResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      prefixList: {
        serializedName: "properties.prefixList",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      etag: {
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      auditComment: {
        serializedName: "properties.auditComment",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FirewallResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FirewallResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AzureResourceManagerManagedIdentityProperties"
        }
      },
      panEtag: {
        serializedName: "properties.panEtag",
        type: {
          name: "String"
        }
      },
      networkProfile: {
        serializedName: "properties.networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      isPanoramaManaged: {
        serializedName: "properties.isPanoramaManaged",
        type: {
          name: "String"
        }
      },
      panoramaConfig: {
        serializedName: "properties.panoramaConfig",
        type: {
          name: "Composite",
          className: "PanoramaConfig"
        }
      },
      associatedRulestack: {
        serializedName: "properties.associatedRulestack",
        type: {
          name: "Composite",
          className: "RulestackDetails"
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "DNSSettings"
        }
      },
      frontEndSettings: {
        serializedName: "properties.frontEndSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FrontendSetting"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      planData: {
        serializedName: "properties.planData",
        type: {
          name: "Composite",
          className: "PlanData"
        }
      },
      marketplaceDetails: {
        serializedName: "properties.marketplaceDetails",
        type: {
          name: "Composite",
          className: "MarketplaceDetails"
        }
      }
    }
  }
};

export const LocalRulestackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LocalRulestackResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AzureResourceManagerManagedIdentityProperties"
        }
      },
      panEtag: {
        serializedName: "properties.panEtag",
        type: {
          name: "String"
        }
      },
      panLocation: {
        serializedName: "properties.panLocation",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      associatedSubscriptions: {
        serializedName: "properties.associatedSubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      defaultMode: {
        serializedName: "properties.defaultMode",
        type: {
          name: "String"
        }
      },
      minAppIdVersion: {
        serializedName: "properties.minAppIdVersion",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      securityServices: {
        serializedName: "properties.securityServices",
        type: {
          name: "Composite",
          className: "SecurityServices"
        }
      }
    }
  }
};
