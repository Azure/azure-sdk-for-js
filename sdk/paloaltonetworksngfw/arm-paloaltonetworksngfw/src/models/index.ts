/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The response of a GlobalRulestackResource list operation. */
export interface GlobalRulestackResourceListResult {
  /** The items on this page */
  value: GlobalRulestackResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** security services */
export interface SecurityServices {
  /** IPs Vulnerability Profile Data */
  vulnerabilityProfile?: string;
  /** Anti spyware Profile data */
  antiSpywareProfile?: string;
  /** anti virus profile data */
  antiVirusProfile?: string;
  /** URL filtering profile data */
  urlFilteringProfile?: string;
  /** File blocking profile data */
  fileBlockingProfile?: string;
  /** DNS Subscription profile data */
  dnsSubscription?: string;
  /** Untrusted Egress Decryption profile data */
  outboundUnTrustCertificate?: string;
  /** Trusted Egress Decryption profile data */
  outboundTrustCertificate?: string;
}

/** The properties of the managed service identities assigned to this resource. */
export interface AzureResourceManagerManagedIdentityProperties {
  /**
   * The Active Directory tenant id of the principal.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /**
   * The active directory identifier of this principal.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /** The type of managed identity assigned to this resource. */
  type: ManagedIdentityType;
  /** The identities assigned to this resource by the user. */
  userAssignedIdentities?: {
    [propertyName: string]: AzureResourceManagerUserAssignedIdentity;
  };
}

/** A managed identity assigned by the user. */
export interface AzureResourceManagerUserAssignedIdentity {
  /** The active directory client identifier for this principal. */
  clientId?: string;
  /** The active directory identifier for this principal. */
  principalId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The type used for update operations of the GlobalRulestackResource. */
export interface GlobalRulestackResourceUpdate {
  /** Global Location */
  location?: string;
  /** The managed service identities assigned to this resource. */
  identity?: AzureResourceManagerManagedIdentityProperties;
  /** The updatable properties of the GlobalRulestackResource. */
  properties?: GlobalRulestackResourceUpdateProperties;
}

/** The updatable properties of the GlobalRulestackResource. */
export interface GlobalRulestackResourceUpdateProperties {
  /** PanEtag info */
  panEtag?: string;
  /** Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks */
  panLocation?: string;
  /** Rulestack Type */
  scope?: ScopeType;
  /** subscription scope of global rulestack */
  associatedSubscriptions?: string[];
  /** rulestack description */
  description?: string;
  /** Mode for default rules creation */
  defaultMode?: DefaultMode;
  /** minimum version */
  minAppIdVersion?: string;
  /** Security Profile */
  securityServices?: SecurityServices;
}

/** The response of a CertificateObjectGlobalRulestackResource list operation. */
export interface CertificateObjectGlobalRulestackResourceListResult {
  /** The items on this page */
  value: CertificateObjectGlobalRulestackResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a FqdnListGlobalRulestackResource list operation. */
export interface FqdnListGlobalRulestackResourceListResult {
  /** The items on this page */
  value: FqdnListGlobalRulestackResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Changelog list */
export interface Changelog {
  /** list of changes */
  changes: string[];
  /** lastCommitted timestamp */
  lastCommitted?: Date;
  /** lastModified timestamp */
  lastModified?: Date;
}

/** advanced security object */
export interface AdvSecurityObjectListResponse {
  /** response value */
  value: AdvSecurityObjectModel;
  /** next link */
  nextLink?: string;
}

/** List of custom and predefined url category */
export interface AdvSecurityObjectModel {
  /** type of object */
  type?: string;
  /** URL entry */
  entry: NameDescriptionObject[];
}

/** object type info */
export interface NameDescriptionObject {
  /** name value */
  name: string;
  /** description value */
  description?: string;
}

export interface ListAppIdResponse {
  /** List of AppIds */
  value: string[];
  /** next Link */
  nextLink?: string;
}

/** Countries Response Object */
export interface CountriesResponse {
  /** List of countries */
  value: Country[];
  /** next link */
  nextLink?: string;
}

/** Country Description */
export interface Country {
  /** country code */
  code: string;
  /** code description */
  description?: string;
}

/** List firewalls response */
export interface ListFirewallsResponse {
  /** firewalls list */
  value: string[];
  /** next link */
  nextLink?: string;
}

/** predefined url categories response */
export interface PredefinedUrlCategoriesResponse {
  /** predefined url categories */
  value: PredefinedUrlCategory[];
  /** next link */
  nextLink?: string;
}

/** Predefined URL category object */
export interface PredefinedUrlCategory {
  action: string;
  name: string;
}

/** Security services list response */
export interface SecurityServicesResponse {
  /** response value */
  value: SecurityServicesTypeList;
  /** next link */
  nextLink?: string;
}

/** Security services type list */
export interface SecurityServicesTypeList {
  /** security services type */
  type?: string;
  /** list */
  entry: NameDescriptionObject[];
}

/** The response of a PostRulesResource list operation. */
export interface PostRulesResourceListResult {
  /** The items on this page */
  value: PostRulesResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Address properties */
export interface SourceAddr {
  /** special value 'any' */
  cidrs?: string[];
  /** list of countries */
  countries?: string[];
  /** list of feeds */
  feeds?: string[];
  /** prefix list */
  prefixLists?: string[];
}

/** destination address */
export interface DestinationAddr {
  /** special value 'any' */
  cidrs?: string[];
  /** list of countries */
  countries?: string[];
  /** list of feeds */
  feeds?: string[];
  /** prefix list */
  prefixLists?: string[];
  /** fqdn list */
  fqdnLists?: string[];
}

/** URL/EDL to match */
export interface Category {
  /** custom URL */
  urlCustom: string[];
  /** feed list */
  feeds: string[];
}

/** Tag */
export interface TagInfo {
  /** tag name */
  key: string;
  /** tag value */
  value: string;
}

/** Rule counter */
export interface RuleCounter {
  /** priority number */
  priority: string;
  /** rule Stack Name */
  ruleStackName?: string;
  /** rule list name */
  ruleListName?: string;
  /** firewall name */
  firewallName?: string;
  /** rule name */
  ruleName: string;
  /** hit count */
  hitCount?: number;
  /** apps seen */
  appSeen?: AppSeenData;
  /** timestamp of response */
  timestamp?: Date;
  /** timestamp of request */
  requestTimestamp?: Date;
  /** last updated timestamp */
  lastUpdatedTimestamp?: Date;
}

/** Data Type for App Seen */
export interface AppSeenData {
  /** number of rows */
  count: number;
  /** array of appSeen */
  appSeenList: AppSeenInfo[];
}

/** Definition for App Seen */
export interface AppSeenInfo {
  /** title */
  title: string;
  /** category */
  category: string;
  /** subCategory */
  subCategory: string;
  /** risk */
  risk: string;
  /** tag */
  tag: string;
  /** technology */
  technology: string;
  /** standardPorts */
  standardPorts: string;
}

/** Rule counter reset */
export interface RuleCounterReset {
  /**
   * priority number
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly priority?: string;
  /** rule Stack Name */
  ruleStackName?: string;
  /** rule list name */
  ruleListName?: string;
  /** firewall name */
  firewallName?: string;
  /** rule name */
  ruleName?: string;
}

/** The response of a PrefixListGlobalRulestackResource list operation. */
export interface PrefixListGlobalRulestackResourceListResult {
  /** The items on this page */
  value: PrefixListGlobalRulestackResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a PreRulesResource list operation. */
export interface PreRulesResourceListResult {
  /** The items on this page */
  value: PreRulesResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The response of a FirewallResource list operation. */
export interface FirewallResourceListResult {
  /** The items on this page */
  value: FirewallResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Network settings for Firewall */
export interface NetworkProfile {
  /** Vnet configurations */
  vnetConfiguration?: VnetConfiguration;
  /** Vwan configurations */
  vwanConfiguration?: VwanConfiguration;
  /** vnet or vwan, cannot be updated */
  networkType: NetworkType;
  /** List of IPs associated with the Firewall */
  publicIps: IPAddress[];
  /** Enable egress NAT, enabled by default */
  enableEgressNat: EgressNat;
  /** Egress nat IP to use */
  egressNatIp?: IPAddress[];
}

/** VnetInfo for Firewall Networking */
export interface VnetConfiguration {
  /** Azure Virtual Network */
  vnet: IPAddressSpace;
  /** Trust Subnet */
  trustSubnet: IPAddressSpace;
  /** Untrust Subnet */
  unTrustSubnet: IPAddressSpace;
  /** IP of trust subnet for UDR */
  ipOfTrustSubnetForUdr?: IPAddress;
}

/** IP Address Space */
export interface IPAddressSpace {
  /** Resource Id */
  resourceId?: string;
  /** Address Space */
  addressSpace?: string;
}

/** IP Address */
export interface IPAddress {
  /** Resource Id */
  resourceId?: string;
  /** Address value */
  address?: string;
}

/** VwanInfo for Firewall Networking */
export interface VwanConfiguration {
  /** Network Virtual Appliance resource ID */
  networkVirtualApplianceId?: string;
  /** vHub Address */
  vHub: IPAddressSpace;
  /** Trust Subnet */
  trustSubnet?: IPAddressSpace;
  /** Untrust Subnet */
  unTrustSubnet?: IPAddressSpace;
  /** IP of trust subnet for UDR */
  ipOfTrustSubnetForUdr?: IPAddress;
}

/** Panorama Config */
export interface PanoramaConfig {
  /** Base64 encoded string representing Panorama parameters to be used by Firewall to connect to Panorama. This string is generated via azure plugin in Panorama */
  configString: string;
  /**
   * VM auth key for panorama connectivity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmAuthKey?: string;
  /**
   * Primary Panorama Server IP address value in dotted format for IPv4
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly panoramaServer?: string;
  /**
   * Secondary Panorama Server IP address value in dotted format for IPv4
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly panoramaServer2?: string;
  /**
   * Panorama Device Group to join
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dgName?: string;
  /**
   * Panorama Template Stack to join - (Once configured we can not edit the value)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tplName?: string;
  /**
   * Panorama Collector Group to join - (Once configured we can not edit the value)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cgName?: string;
  /**
   * Resource name(may be unique) for PN admin
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostName?: string;
}

/** Associated rulestack details */
export interface RulestackDetails {
  /** Resource Id */
  resourceId?: string;
  /** Associated rulestack Id */
  rulestackId?: string;
  /** Rulestack location */
  location?: string;
}

/** DNS Proxy settings for Firewall */
export interface DNSSettings {
  /** Enable DNS proxy, disabled by default */
  enableDnsProxy?: DNSProxy;
  /** Enabled DNS proxy type, disabled by default */
  enabledDnsType?: EnabledDNSType;
  /** List of IPs associated with the Firewall */
  dnsServers?: IPAddress[];
}

/** Frontend setting for Firewall */
export interface FrontendSetting {
  /** Settings name */
  name: string;
  /** Protocol Type */
  protocol: ProtocolType;
  /** Frontend configurations */
  frontendConfiguration: EndpointConfiguration;
  /** Backend configurations */
  backendConfiguration: EndpointConfiguration;
}

/** Endpoint Configuration for frontend and backend */
export interface EndpointConfiguration {
  /** port ID */
  port: string;
  /** Address Space */
  address: IPAddress;
}

/** Billing plan information. */
export interface PlanData {
  /** different usage type like PAYG/COMMITTED */
  usageType?: UsageType;
  /** different billing cycles like MONTHLY/WEEKLY */
  billingCycle: BillingCycle;
  /** plan id as published by Liftr.PAN */
  planId: string;
  /**
   * date when plan was applied
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDate?: Date;
}

/** MarketplaceDetails of PAN Firewall resource */
export interface MarketplaceDetails {
  /**
   * Marketplace Subscription Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marketplaceSubscriptionId?: string;
  /** Offer Id */
  offerId: string;
  /** Publisher Id */
  publisherId: string;
  /** Marketplace Subscription Status */
  marketplaceSubscriptionStatus?: MarketplaceSubscriptionStatus;
}

/** The response of a LocalRulestackResource list operation. */
export interface LocalRulestackResourceListResult {
  /** The items on this page */
  value: LocalRulestackResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The type used for update operations of the FirewallResource. */
export interface FirewallResourceUpdate {
  /** The managed service identities assigned to this resource. */
  identity?: AzureResourceManagerManagedIdentityProperties;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The updatable properties of the FirewallResource. */
  properties?: FirewallResourceUpdateProperties;
}

/** The updatable properties of the FirewallResource. */
export interface FirewallResourceUpdateProperties {
  /** panEtag info */
  panEtag?: string;
  /** Network settings */
  networkProfile?: NetworkProfile;
  /** Panorama Managed: Default is False. Default will be CloudSec managed */
  isPanoramaManaged?: BooleanEnum;
  /** Panorama Configuration */
  panoramaConfig?: PanoramaConfig;
  /** Associated Rulestack */
  associatedRulestack?: RulestackDetails;
  /** DNS settings for Firewall */
  dnsSettings?: DNSSettings;
  /** Frontend settings for Firewall */
  frontEndSettings?: FrontendSetting[];
  /** Billing plan information. */
  planData?: PlanData;
  /** Marketplace details */
  marketplaceDetails?: MarketplaceDetails;
}

/** PAN Rulestack Describe Object */
export interface GlobalRulestackInfo {
  /** rulestack description */
  azureId: string;
}

/** Log Settings for Firewall */
export interface LogSettings {
  /** One of possible log type */
  logType?: LogType;
  /** Log option SAME/INDIVIDUAL */
  logOption?: LogOption;
  /** Application Insight details */
  applicationInsights?: ApplicationInsights;
  /** Common destination configurations */
  commonDestination?: LogDestination;
  /** Traffic destination configurations */
  trafficLogDestination?: LogDestination;
  /** Threat destination configurations */
  threatLogDestination?: LogDestination;
  /** Decrypt destination configurations */
  decryptLogDestination?: LogDestination;
}

/** Application Insights key */
export interface ApplicationInsights {
  /** Resource id for Application Insights */
  id?: string;
  /** Application Insights key */
  key?: string;
}

/** Log Destination */
export interface LogDestination {
  /** Storage account configurations */
  storageConfigurations?: StorageAccount;
  /** Event Hub configurations */
  eventHubConfigurations?: EventHub;
  /** Monitor Log configurations */
  monitorConfigurations?: MonitorLog;
}

/** Storage Account configurations */
export interface StorageAccount {
  /** Resource ID of storage account */
  id?: string;
  /** Subscription Id */
  subscriptionId?: string;
  /** Storage account name */
  accountName?: string;
}

/** EventHub configurations */
export interface EventHub {
  /** Resource ID of EventHub */
  id?: string;
  /** Subscription Id */
  subscriptionId?: string;
  /** EventHub name */
  name?: string;
  /** EventHub namespace */
  nameSpace?: string;
  /** EventHub policy name */
  policyName?: string;
}

/** MonitorLog configurations */
export interface MonitorLog {
  /** Resource ID of MonitorLog */
  id?: string;
  /** Subscription Id */
  subscriptionId?: string;
  /** MonitorLog workspace */
  workspace?: string;
  /** Primary Key value for Monitor */
  primaryKey?: string;
  /** Secondary Key value for Monitor */
  secondaryKey?: string;
}

/** Support information for the resource */
export interface SupportInfo {
  /** product SKU associated with given resource */
  productSku?: string;
  /** product Serial associated with given resource */
  productSerial?: string;
  /** account registered in Customer Support Portal */
  accountRegistered?: BooleanEnum;
  /** Support account associated with given resource */
  accountId?: string;
  /** user domain is supported in Customer Support Portal */
  userDomainSupported?: BooleanEnum;
  /** user registered in Customer Support Portal */
  userRegistered?: BooleanEnum;
  /** Product usage is in free trial period */
  freeTrial?: BooleanEnum;
  /** Free trial days remaining */
  freeTrialDaysLeft?: number;
  /** Free trial credit remaining */
  freeTrialCreditLeft?: number;
  /** URL for paloaltonetworks live community */
  helpURL?: string;
  /** URL for paloaltonetworks Customer Service Portal */
  supportURL?: string;
  /** URL for registering product in paloaltonetworks Customer Service Portal */
  registerURL?: string;
}

/** The response of a FirewallStatusResource list operation. */
export interface FirewallStatusResourceListResult {
  /** The items on this page */
  value: FirewallStatusResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Panorama connectivity information */
export interface PanoramaStatus {
  /**
   * Primary Panorama connection status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly panoramaServerStatus?: ServerStatus;
  /**
   * Secondary Panorama connection status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly panoramaServer2Status?: ServerStatus;
}

/** The type used for update operations of the LocalRulestackResource. */
export interface LocalRulestackResourceUpdate {
  /** The managed service identities assigned to this resource. */
  identity?: AzureResourceManagerManagedIdentityProperties;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The updatable properties of the LocalRulestackResource. */
  properties?: LocalRulestackResourceUpdateProperties;
}

/** The updatable properties of the LocalRulestackResource. */
export interface LocalRulestackResourceUpdateProperties {
  /** PanEtag info */
  panEtag?: string;
  /** Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks */
  panLocation?: string;
  /** Rulestack Type */
  scope?: ScopeType;
  /** subscription scope of global rulestack */
  associatedSubscriptions?: string[];
  /** rulestack description */
  description?: string;
  /** Mode for default rules creation */
  defaultMode?: DefaultMode;
  /** minimum version */
  minAppIdVersion?: string;
  /** Security Profile */
  securityServices?: SecurityServices;
}

/** The response of a CertificateObjectLocalRulestackResource list operation. */
export interface CertificateObjectLocalRulestackResourceListResult {
  /** The items on this page */
  value: CertificateObjectLocalRulestackResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a FqdnListLocalRulestackResource list operation. */
export interface FqdnListLocalRulestackResourceListResult {
  /** The items on this page */
  value: FqdnListLocalRulestackResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a LocalRulesResource list operation. */
export interface LocalRulesResourceListResult {
  /** The items on this page */
  value: LocalRulesResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a PrefixListResource list operation. */
export interface PrefixListResourceListResult {
  /** The items on this page */
  value: PrefixListResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** PaloAltoNetworks GlobalRulestack */
export interface GlobalRulestackResource extends ProxyResource {
  /** Global Location */
  location: string;
  /** The managed service identities assigned to this resource. */
  identity?: AzureResourceManagerManagedIdentityProperties;
  /** PanEtag info */
  panEtag?: string;
  /** Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks */
  panLocation?: string;
  /** Rulestack Type */
  scope?: ScopeType;
  /** subscription scope of global rulestack */
  associatedSubscriptions?: string[];
  /** rulestack description */
  description?: string;
  /** Mode for default rules creation */
  defaultMode?: DefaultMode;
  /** minimum version */
  minAppIdVersion?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Security Profile */
  securityServices?: SecurityServices;
}

/** GlobalRulestack Certificate Object */
export interface CertificateObjectGlobalRulestackResource
  extends ProxyResource {
  /** Resource Id of certificate signer, to be populated only when certificateSelfSigned is false */
  certificateSignerResourceId?: string;
  /** use certificate self signed */
  certificateSelfSigned: BooleanEnum;
  /** comment for this object */
  auditComment?: string;
  /** user description for this object */
  description?: string;
  /** read only string representing last create or update */
  etag?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** GlobalRulestack fqdnList */
export interface FqdnListGlobalRulestackResource extends ProxyResource {
  /** fqdn object description */
  description?: string;
  /** fqdn list */
  fqdnList: string[];
  /** etag info */
  etag?: string;
  /** comment for this object */
  auditComment?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** PostRulestack rule list */
export interface PostRulesResource extends ProxyResource {
  /** etag info */
  etag?: string;
  /** rule name */
  ruleName: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly priority?: number;
  /** rule description */
  description?: string;
  /** state of this rule */
  ruleState?: StateEnum;
  /** source address */
  source?: SourceAddr;
  /** cidr should not be 'any' */
  negateSource?: BooleanEnum;
  /** destination address */
  destination?: DestinationAddr;
  /** cidr should not be 'any' */
  negateDestination?: BooleanEnum;
  /** array of rule applications */
  applications?: string[];
  /** rule category */
  category?: Category;
  /** any, application-default, TCP:number, UDP:number */
  protocol?: string;
  /** prot port list */
  protocolPortList?: string[];
  /** inbound Inspection Certificate */
  inboundInspectionCertificate?: string;
  /** rule comment */
  auditComment?: string;
  /** rule action */
  actionType?: ActionEnum;
  /** enable or disable logging */
  enableLogging?: StateEnum;
  /** enable or disable decryption */
  decryptionRuleType?: DecryptionRuleTypeEnum;
  /** tag for rule */
  tags?: TagInfo[];
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** GlobalRulestack prefixList */
export interface PrefixListGlobalRulestackResource extends ProxyResource {
  /** prefix description */
  description?: string;
  /** prefix list */
  prefixList: string[];
  /** etag info */
  etag?: string;
  /** comment for this object */
  auditComment?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** PreRulestack rule list */
export interface PreRulesResource extends ProxyResource {
  /** etag info */
  etag?: string;
  /** rule name */
  ruleName: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly priority?: number;
  /** rule description */
  description?: string;
  /** state of this rule */
  ruleState?: StateEnum;
  /** source address */
  source?: SourceAddr;
  /** cidr should not be 'any' */
  negateSource?: BooleanEnum;
  /** destination address */
  destination?: DestinationAddr;
  /** cidr should not be 'any' */
  negateDestination?: BooleanEnum;
  /** array of rule applications */
  applications?: string[];
  /** rule category */
  category?: Category;
  /** any, application-default, TCP:number, UDP:number */
  protocol?: string;
  /** prot port list */
  protocolPortList?: string[];
  /** inbound Inspection Certificate */
  inboundInspectionCertificate?: string;
  /** rule comment */
  auditComment?: string;
  /** rule action */
  actionType?: ActionEnum;
  /** enable or disable logging */
  enableLogging?: StateEnum;
  /** enable or disable decryption */
  decryptionRuleType?: DecryptionRuleTypeEnum;
  /** tag for rule */
  tags?: TagInfo[];
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Firewall Status */
export interface FirewallStatusResource extends ProxyResource {
  /**
   * Panorama Managed: Default is False. Default will be CloudSec managed
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isPanoramaManaged?: BooleanEnum;
  /**
   * Current status of the Firewall
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthStatus?: HealthStatus;
  /**
   * Detail description of current health of the Firewall
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthReason?: string;
  /**
   * Panorama Status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly panoramaStatus?: PanoramaStatus;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ReadOnlyProvisioningState;
}

/** LocalRulestack Certificate Object */
export interface CertificateObjectLocalRulestackResource extends ProxyResource {
  /** Resource Id of certificate signer, to be populated only when certificateSelfSigned is false */
  certificateSignerResourceId?: string;
  /** use certificate self signed */
  certificateSelfSigned: BooleanEnum;
  /** comment for this object */
  auditComment?: string;
  /** user description for this object */
  description?: string;
  /** read only string representing last create or update */
  etag?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** LocalRulestack fqdnList */
export interface FqdnListLocalRulestackResource extends ProxyResource {
  /** fqdn object description */
  description?: string;
  /** fqdn list */
  fqdnList: string[];
  /** etag info */
  etag?: string;
  /** comment for this object */
  auditComment?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** LocalRulestack rule list */
export interface LocalRulesResource extends ProxyResource {
  /** etag info */
  etag?: string;
  /** rule name */
  ruleName: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly priority?: number;
  /** rule description */
  description?: string;
  /** state of this rule */
  ruleState?: StateEnum;
  /** source address */
  source?: SourceAddr;
  /** cidr should not be 'any' */
  negateSource?: BooleanEnum;
  /** destination address */
  destination?: DestinationAddr;
  /** cidr should not be 'any' */
  negateDestination?: BooleanEnum;
  /** array of rule applications */
  applications?: string[];
  /** rule category */
  category?: Category;
  /** any, application-default, TCP:number, UDP:number */
  protocol?: string;
  /** prot port list */
  protocolPortList?: string[];
  /** inbound Inspection Certificate */
  inboundInspectionCertificate?: string;
  /** rule comment */
  auditComment?: string;
  /** rule action */
  actionType?: ActionEnum;
  /** enable or disable logging */
  enableLogging?: StateEnum;
  /** enable or disable decryption */
  decryptionRuleType?: DecryptionRuleTypeEnum;
  /** tag for rule */
  tags?: TagInfo[];
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** LocalRulestack prefixList */
export interface PrefixListResource extends ProxyResource {
  /** prefix description */
  description?: string;
  /** prefix list */
  prefixList: string[];
  /** etag info */
  etag?: string;
  /** comment for this object */
  auditComment?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** PaloAltoNetworks Firewall */
export interface FirewallResource extends TrackedResource {
  /** The managed service identities assigned to this resource. */
  identity?: AzureResourceManagerManagedIdentityProperties;
  /** panEtag info */
  panEtag?: string;
  /** Network settings */
  networkProfile: NetworkProfile;
  /** Panorama Managed: Default is False. Default will be CloudSec managed */
  isPanoramaManaged?: BooleanEnum;
  /** Panorama Configuration */
  panoramaConfig?: PanoramaConfig;
  /** Associated Rulestack */
  associatedRulestack?: RulestackDetails;
  /** DNS settings for Firewall */
  dnsSettings: DNSSettings;
  /** Frontend settings for Firewall */
  frontEndSettings?: FrontendSetting[];
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Billing plan information. */
  planData: PlanData;
  /** Marketplace details */
  marketplaceDetails: MarketplaceDetails;
}

/** PaloAltoNetworks LocalRulestack */
export interface LocalRulestackResource extends TrackedResource {
  /** The managed service identities assigned to this resource. */
  identity?: AzureResourceManagerManagedIdentityProperties;
  /** PanEtag info */
  panEtag?: string;
  /** Rulestack Location, Required for GlobalRulestacks, Not for LocalRulestacks */
  panLocation?: string;
  /** Rulestack Type */
  scope?: ScopeType;
  /** subscription scope of global rulestack */
  associatedSubscriptions?: string[];
  /** rulestack description */
  description?: string;
  /** Mode for default rules creation */
  defaultMode?: DefaultMode;
  /** minimum version */
  minAppIdVersion?: string;
  /**
   * Provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Security Profile */
  securityServices?: SecurityServices;
}

/** Known values of {@link ScopeType} that the service accepts. */
export enum KnownScopeType {
  /** Local */
  Local = "LOCAL",
  /** Global */
  Global = "GLOBAL"
}

/**
 * Defines values for ScopeType. \
 * {@link KnownScopeType} can be used interchangeably with ScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LOCAL** \
 * **GLOBAL**
 */
export type ScopeType = string;

/** Known values of {@link DefaultMode} that the service accepts. */
export enum KnownDefaultMode {
  /** IPS */
  IPS = "IPS",
  /** Firewall */
  Firewall = "FIREWALL",
  /** None */
  None = "NONE"
}

/**
 * Defines values for DefaultMode. \
 * {@link KnownDefaultMode} can be used interchangeably with DefaultMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPS** \
 * **FIREWALL** \
 * **NONE**
 */
export type DefaultMode = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Deleted */
  Deleted = "Deleted",
  /** NotSpecified */
  NotSpecified = "NotSpecified"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Deleted** \
 * **NotSpecified**
 */
export type ProvisioningState = string;

/** Known values of {@link ManagedIdentityType} that the service accepts. */
export enum KnownManagedIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAndUserAssigned */
  SystemAndUserAssigned = "SystemAssigned,UserAssigned"
}

/**
 * Defines values for ManagedIdentityType. \
 * {@link KnownManagedIdentityType} can be used interchangeably with ManagedIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link BooleanEnum} that the service accepts. */
export enum KnownBooleanEnum {
  /** True */
  True = "TRUE",
  /** False */
  False = "FALSE"
}

/**
 * Defines values for BooleanEnum. \
 * {@link KnownBooleanEnum} can be used interchangeably with BooleanEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TRUE** \
 * **FALSE**
 */
export type BooleanEnum = string;

/** Known values of {@link AdvSecurityObjectTypeEnum} that the service accepts. */
export enum KnownAdvSecurityObjectTypeEnum {
  /** UrlCustom */
  UrlCustom = "urlCustom",
  /** Feeds */
  Feeds = "feeds"
}

/**
 * Defines values for AdvSecurityObjectTypeEnum. \
 * {@link KnownAdvSecurityObjectTypeEnum} can be used interchangeably with AdvSecurityObjectTypeEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **urlCustom** \
 * **feeds**
 */
export type AdvSecurityObjectTypeEnum = string;

/** Known values of {@link SecurityServicesTypeEnum} that the service accepts. */
export enum KnownSecurityServicesTypeEnum {
  /** AntiSpyware */
  AntiSpyware = "antiSpyware",
  /** AntiVirus */
  AntiVirus = "antiVirus",
  /** IpsVulnerability */
  IpsVulnerability = "ipsVulnerability",
  /** UrlFiltering */
  UrlFiltering = "urlFiltering",
  /** FileBlocking */
  FileBlocking = "fileBlocking",
  /** DnsSubscription */
  DnsSubscription = "dnsSubscription"
}

/**
 * Defines values for SecurityServicesTypeEnum. \
 * {@link KnownSecurityServicesTypeEnum} can be used interchangeably with SecurityServicesTypeEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **antiSpyware** \
 * **antiVirus** \
 * **ipsVulnerability** \
 * **urlFiltering** \
 * **fileBlocking** \
 * **dnsSubscription**
 */
export type SecurityServicesTypeEnum = string;

/** Known values of {@link StateEnum} that the service accepts. */
export enum KnownStateEnum {
  /** Disabled */
  Disabled = "DISABLED",
  /** Enabled */
  Enabled = "ENABLED"
}

/**
 * Defines values for StateEnum. \
 * {@link KnownStateEnum} can be used interchangeably with StateEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DISABLED** \
 * **ENABLED**
 */
export type StateEnum = string;

/** Known values of {@link ActionEnum} that the service accepts. */
export enum KnownActionEnum {
  /** Allow */
  Allow = "Allow",
  /** DenySilent */
  DenySilent = "DenySilent",
  /** DenyResetServer */
  DenyResetServer = "DenyResetServer",
  /** DenyResetBoth */
  DenyResetBoth = "DenyResetBoth"
}

/**
 * Defines values for ActionEnum. \
 * {@link KnownActionEnum} can be used interchangeably with ActionEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **DenySilent** \
 * **DenyResetServer** \
 * **DenyResetBoth**
 */
export type ActionEnum = string;

/** Known values of {@link DecryptionRuleTypeEnum} that the service accepts. */
export enum KnownDecryptionRuleTypeEnum {
  /** SSLOutboundInspection */
  SSLOutboundInspection = "SSLOutboundInspection",
  /** SSLInboundInspection */
  SSLInboundInspection = "SSLInboundInspection",
  /** None */
  None = "None"
}

/**
 * Defines values for DecryptionRuleTypeEnum. \
 * {@link KnownDecryptionRuleTypeEnum} can be used interchangeably with DecryptionRuleTypeEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SSLOutboundInspection** \
 * **SSLInboundInspection** \
 * **None**
 */
export type DecryptionRuleTypeEnum = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link NetworkType} that the service accepts. */
export enum KnownNetworkType {
  /** Vnet */
  Vnet = "VNET",
  /** Vwan */
  Vwan = "VWAN"
}

/**
 * Defines values for NetworkType. \
 * {@link KnownNetworkType} can be used interchangeably with NetworkType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VNET** \
 * **VWAN**
 */
export type NetworkType = string;

/** Known values of {@link EgressNat} that the service accepts. */
export enum KnownEgressNat {
  /** Disabled */
  Disabled = "DISABLED",
  /** Enabled */
  Enabled = "ENABLED"
}

/**
 * Defines values for EgressNat. \
 * {@link KnownEgressNat} can be used interchangeably with EgressNat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DISABLED** \
 * **ENABLED**
 */
export type EgressNat = string;

/** Known values of {@link DNSProxy} that the service accepts. */
export enum KnownDNSProxy {
  /** Disabled */
  Disabled = "DISABLED",
  /** Enabled */
  Enabled = "ENABLED"
}

/**
 * Defines values for DNSProxy. \
 * {@link KnownDNSProxy} can be used interchangeably with DNSProxy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DISABLED** \
 * **ENABLED**
 */
export type DNSProxy = string;

/** Known values of {@link EnabledDNSType} that the service accepts. */
export enum KnownEnabledDNSType {
  /** Custom */
  Custom = "CUSTOM",
  /** Azure */
  Azure = "AZURE"
}

/**
 * Defines values for EnabledDNSType. \
 * {@link KnownEnabledDNSType} can be used interchangeably with EnabledDNSType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CUSTOM** \
 * **AZURE**
 */
export type EnabledDNSType = string;

/** Known values of {@link ProtocolType} that the service accepts. */
export enum KnownProtocolType {
  /** TCP */
  TCP = "TCP",
  /** UDP */
  UDP = "UDP"
}

/**
 * Defines values for ProtocolType. \
 * {@link KnownProtocolType} can be used interchangeably with ProtocolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP** \
 * **UDP**
 */
export type ProtocolType = string;

/** Known values of {@link UsageType} that the service accepts. */
export enum KnownUsageType {
  /** Payg */
  Payg = "PAYG",
  /** Committed */
  Committed = "COMMITTED"
}

/**
 * Defines values for UsageType. \
 * {@link KnownUsageType} can be used interchangeably with UsageType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PAYG** \
 * **COMMITTED**
 */
export type UsageType = string;

/** Known values of {@link BillingCycle} that the service accepts. */
export enum KnownBillingCycle {
  /** Weekly */
  Weekly = "WEEKLY",
  /** Monthly */
  Monthly = "MONTHLY"
}

/**
 * Defines values for BillingCycle. \
 * {@link KnownBillingCycle} can be used interchangeably with BillingCycle,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **WEEKLY** \
 * **MONTHLY**
 */
export type BillingCycle = string;

/** Known values of {@link MarketplaceSubscriptionStatus} that the service accepts. */
export enum KnownMarketplaceSubscriptionStatus {
  /** PendingFulfillmentStart */
  PendingFulfillmentStart = "PendingFulfillmentStart",
  /** Subscribed */
  Subscribed = "Subscribed",
  /** Suspended */
  Suspended = "Suspended",
  /** Unsubscribed */
  Unsubscribed = "Unsubscribed",
  /** NotStarted */
  NotStarted = "NotStarted",
  /** FulfillmentRequested */
  FulfillmentRequested = "FulfillmentRequested"
}

/**
 * Defines values for MarketplaceSubscriptionStatus. \
 * {@link KnownMarketplaceSubscriptionStatus} can be used interchangeably with MarketplaceSubscriptionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PendingFulfillmentStart** \
 * **Subscribed** \
 * **Suspended** \
 * **Unsubscribed** \
 * **NotStarted** \
 * **FulfillmentRequested**
 */
export type MarketplaceSubscriptionStatus = string;

/** Known values of {@link LogType} that the service accepts. */
export enum KnownLogType {
  /** Traffic */
  Traffic = "TRAFFIC",
  /** Threat */
  Threat = "THREAT",
  /** Decryption */
  Decryption = "DECRYPTION",
  /** Wildfire */
  Wildfire = "WILDFIRE",
  /** DLP */
  DLP = "DLP",
  /** Audit */
  Audit = "AUDIT"
}

/**
 * Defines values for LogType. \
 * {@link KnownLogType} can be used interchangeably with LogType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TRAFFIC** \
 * **THREAT** \
 * **DECRYPTION** \
 * **WILDFIRE** \
 * **DLP** \
 * **AUDIT**
 */
export type LogType = string;

/** Known values of {@link LogOption} that the service accepts. */
export enum KnownLogOption {
  /** SameDestination */
  SameDestination = "SAME_DESTINATION",
  /** IndividualDestination */
  IndividualDestination = "INDIVIDUAL_DESTINATION"
}

/**
 * Defines values for LogOption. \
 * {@link KnownLogOption} can be used interchangeably with LogOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SAME_DESTINATION** \
 * **INDIVIDUAL_DESTINATION**
 */
export type LogOption = string;

/** Known values of {@link HealthStatus} that the service accepts. */
export enum KnownHealthStatus {
  /** Green */
  Green = "GREEN",
  /** Yellow */
  Yellow = "YELLOW",
  /** RED */
  RED = "RED",
  /** Initializing */
  Initializing = "INITIALIZING"
}

/**
 * Defines values for HealthStatus. \
 * {@link KnownHealthStatus} can be used interchangeably with HealthStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GREEN** \
 * **YELLOW** \
 * **RED** \
 * **INITIALIZING**
 */
export type HealthStatus = string;

/** Known values of {@link ServerStatus} that the service accepts. */
export enum KnownServerStatus {
  /** UP */
  UP = "UP",
  /** Down */
  Down = "DOWN"
}

/**
 * Defines values for ServerStatus. \
 * {@link KnownServerStatus} can be used interchangeably with ServerStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UP** \
 * **DOWN**
 */
export type ServerStatus = string;

/** Known values of {@link ReadOnlyProvisioningState} that the service accepts. */
export enum KnownReadOnlyProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Deleted */
  Deleted = "Deleted"
}

/**
 * Defines values for ReadOnlyProvisioningState. \
 * {@link KnownReadOnlyProvisioningState} can be used interchangeably with ReadOnlyProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Deleted**
 */
export type ReadOnlyProvisioningState = string;

/** Optional parameters. */
export interface GlobalRulestackListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type GlobalRulestackListResponse = GlobalRulestackResourceListResult;

/** Optional parameters. */
export interface GlobalRulestackGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GlobalRulestackGetResponse = GlobalRulestackResource;

/** Optional parameters. */
export interface GlobalRulestackCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type GlobalRulestackCreateOrUpdateResponse = GlobalRulestackResource;

/** Optional parameters. */
export interface GlobalRulestackUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type GlobalRulestackUpdateResponse = GlobalRulestackResource;

/** Optional parameters. */
export interface GlobalRulestackDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface GlobalRulestackCommitOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface GlobalRulestackGetChangeLogOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getChangeLog operation. */
export type GlobalRulestackGetChangeLogResponse = Changelog;

/** Optional parameters. */
export interface GlobalRulestackListAdvancedSecurityObjectsOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
}

/** Contains response data for the listAdvancedSecurityObjects operation. */
export type GlobalRulestackListAdvancedSecurityObjectsResponse = AdvSecurityObjectListResponse;

/** Optional parameters. */
export interface GlobalRulestackListAppIdsOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
  appIdVersion?: string;
  appPrefix?: string;
}

/** Contains response data for the listAppIds operation. */
export type GlobalRulestackListAppIdsResponse = ListAppIdResponse;

/** Optional parameters. */
export interface GlobalRulestackListCountriesOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
}

/** Contains response data for the listCountries operation. */
export type GlobalRulestackListCountriesResponse = CountriesResponse;

/** Optional parameters. */
export interface GlobalRulestackListFirewallsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listFirewalls operation. */
export type GlobalRulestackListFirewallsResponse = ListFirewallsResponse;

/** Optional parameters. */
export interface GlobalRulestackListPredefinedUrlCategoriesOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
}

/** Contains response data for the listPredefinedUrlCategories operation. */
export type GlobalRulestackListPredefinedUrlCategoriesResponse = PredefinedUrlCategoriesResponse;

/** Optional parameters. */
export interface GlobalRulestackListSecurityServicesOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
}

/** Contains response data for the listSecurityServices operation. */
export type GlobalRulestackListSecurityServicesResponse = SecurityServicesResponse;

/** Optional parameters. */
export interface GlobalRulestackRevertOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GlobalRulestackListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type GlobalRulestackListNextResponse = GlobalRulestackResourceListResult;

/** Optional parameters. */
export interface CertificateObjectGlobalRulestackListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type CertificateObjectGlobalRulestackListResponse = CertificateObjectGlobalRulestackResourceListResult;

/** Optional parameters. */
export interface CertificateObjectGlobalRulestackGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CertificateObjectGlobalRulestackGetResponse = CertificateObjectGlobalRulestackResource;

/** Optional parameters. */
export interface CertificateObjectGlobalRulestackCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CertificateObjectGlobalRulestackCreateOrUpdateResponse = CertificateObjectGlobalRulestackResource;

/** Optional parameters. */
export interface CertificateObjectGlobalRulestackDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CertificateObjectGlobalRulestackListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type CertificateObjectGlobalRulestackListNextResponse = CertificateObjectGlobalRulestackResourceListResult;

/** Optional parameters. */
export interface FqdnListGlobalRulestackListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type FqdnListGlobalRulestackListResponse = FqdnListGlobalRulestackResourceListResult;

/** Optional parameters. */
export interface FqdnListGlobalRulestackGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FqdnListGlobalRulestackGetResponse = FqdnListGlobalRulestackResource;

/** Optional parameters. */
export interface FqdnListGlobalRulestackCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type FqdnListGlobalRulestackCreateOrUpdateResponse = FqdnListGlobalRulestackResource;

/** Optional parameters. */
export interface FqdnListGlobalRulestackDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface FqdnListGlobalRulestackListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type FqdnListGlobalRulestackListNextResponse = FqdnListGlobalRulestackResourceListResult;

/** Optional parameters. */
export interface PostRulesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PostRulesListResponse = PostRulesResourceListResult;

/** Optional parameters. */
export interface PostRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PostRulesGetResponse = PostRulesResource;

/** Optional parameters. */
export interface PostRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PostRulesCreateOrUpdateResponse = PostRulesResource;

/** Optional parameters. */
export interface PostRulesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PostRulesGetCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Contains response data for the getCounters operation. */
export type PostRulesGetCountersResponse = RuleCounter;

/** Optional parameters. */
export interface PostRulesRefreshCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Optional parameters. */
export interface PostRulesResetCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Contains response data for the resetCounters operation. */
export type PostRulesResetCountersResponse = RuleCounterReset;

/** Optional parameters. */
export interface PostRulesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PostRulesListNextResponse = PostRulesResourceListResult;

/** Optional parameters. */
export interface PrefixListGlobalRulestackListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrefixListGlobalRulestackListResponse = PrefixListGlobalRulestackResourceListResult;

/** Optional parameters. */
export interface PrefixListGlobalRulestackGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrefixListGlobalRulestackGetResponse = PrefixListGlobalRulestackResource;

/** Optional parameters. */
export interface PrefixListGlobalRulestackCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PrefixListGlobalRulestackCreateOrUpdateResponse = PrefixListGlobalRulestackResource;

/** Optional parameters. */
export interface PrefixListGlobalRulestackDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrefixListGlobalRulestackListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PrefixListGlobalRulestackListNextResponse = PrefixListGlobalRulestackResourceListResult;

/** Optional parameters. */
export interface PreRulesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PreRulesListResponse = PreRulesResourceListResult;

/** Optional parameters. */
export interface PreRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PreRulesGetResponse = PreRulesResource;

/** Optional parameters. */
export interface PreRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PreRulesCreateOrUpdateResponse = PreRulesResource;

/** Optional parameters. */
export interface PreRulesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PreRulesGetCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Contains response data for the getCounters operation. */
export type PreRulesGetCountersResponse = RuleCounter;

/** Optional parameters. */
export interface PreRulesRefreshCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Optional parameters. */
export interface PreRulesResetCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Contains response data for the resetCounters operation. */
export type PreRulesResetCountersResponse = RuleCounterReset;

/** Optional parameters. */
export interface PreRulesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PreRulesListNextResponse = PreRulesResourceListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface FirewallsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type FirewallsListBySubscriptionResponse = FirewallResourceListResult;

/** Optional parameters. */
export interface FirewallsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type FirewallsListByResourceGroupResponse = FirewallResourceListResult;

/** Optional parameters. */
export interface FirewallsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FirewallsGetResponse = FirewallResource;

/** Optional parameters. */
export interface FirewallsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type FirewallsCreateOrUpdateResponse = FirewallResource;

/** Optional parameters. */
export interface FirewallsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type FirewallsUpdateResponse = FirewallResource;

/** Optional parameters. */
export interface FirewallsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface FirewallsGetGlobalRulestackOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getGlobalRulestack operation. */
export type FirewallsGetGlobalRulestackResponse = GlobalRulestackInfo;

/** Optional parameters. */
export interface FirewallsGetLogProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getLogProfile operation. */
export type FirewallsGetLogProfileResponse = LogSettings;

/** Optional parameters. */
export interface FirewallsGetSupportInfoOptionalParams
  extends coreClient.OperationOptions {
  /** email address on behalf of which this API called */
  email?: string;
}

/** Contains response data for the getSupportInfo operation. */
export type FirewallsGetSupportInfoResponse = SupportInfo;

/** Optional parameters. */
export interface FirewallsSaveLogProfileOptionalParams
  extends coreClient.OperationOptions {
  /** Log Settings for Firewall */
  logSettings?: LogSettings;
}

/** Optional parameters. */
export interface FirewallsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type FirewallsListBySubscriptionNextResponse = FirewallResourceListResult;

/** Optional parameters. */
export interface FirewallsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type FirewallsListByResourceGroupNextResponse = FirewallResourceListResult;

/** Optional parameters. */
export interface LocalRulestacksListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type LocalRulestacksListBySubscriptionResponse = LocalRulestackResourceListResult;

/** Optional parameters. */
export interface LocalRulestacksListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type LocalRulestacksListByResourceGroupResponse = LocalRulestackResourceListResult;

/** Optional parameters. */
export interface LocalRulestacksGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LocalRulestacksGetResponse = LocalRulestackResource;

/** Optional parameters. */
export interface LocalRulestacksCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type LocalRulestacksCreateOrUpdateResponse = LocalRulestackResource;

/** Optional parameters. */
export interface LocalRulestacksUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type LocalRulestacksUpdateResponse = LocalRulestackResource;

/** Optional parameters. */
export interface LocalRulestacksDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface LocalRulestacksCommitOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface LocalRulestacksGetChangeLogOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getChangeLog operation. */
export type LocalRulestacksGetChangeLogResponse = Changelog;

/** Optional parameters. */
export interface LocalRulestacksGetSupportInfoOptionalParams
  extends coreClient.OperationOptions {
  /** email address on behalf of which this API called */
  email?: string;
}

/** Contains response data for the getSupportInfo operation. */
export type LocalRulestacksGetSupportInfoResponse = SupportInfo;

/** Optional parameters. */
export interface LocalRulestacksListAdvancedSecurityObjectsOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
}

/** Contains response data for the listAdvancedSecurityObjects operation. */
export type LocalRulestacksListAdvancedSecurityObjectsResponse = AdvSecurityObjectListResponse;

/** Optional parameters. */
export interface LocalRulestacksListAppIdsOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
  appIdVersion?: string;
  appPrefix?: string;
}

/** Contains response data for the listAppIds operation. */
export type LocalRulestacksListAppIdsResponse = ListAppIdResponse;

/** Optional parameters. */
export interface LocalRulestacksListCountriesOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
}

/** Contains response data for the listCountries operation. */
export type LocalRulestacksListCountriesResponse = CountriesResponse;

/** Optional parameters. */
export interface LocalRulestacksListFirewallsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listFirewalls operation. */
export type LocalRulestacksListFirewallsResponse = ListFirewallsResponse;

/** Optional parameters. */
export interface LocalRulestacksListPredefinedUrlCategoriesOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
}

/** Contains response data for the listPredefinedUrlCategories operation. */
export type LocalRulestacksListPredefinedUrlCategoriesResponse = PredefinedUrlCategoriesResponse;

/** Optional parameters. */
export interface LocalRulestacksListSecurityServicesOptionalParams
  extends coreClient.OperationOptions {
  skip?: string;
  top?: number;
}

/** Contains response data for the listSecurityServices operation. */
export type LocalRulestacksListSecurityServicesResponse = SecurityServicesResponse;

/** Optional parameters. */
export interface LocalRulestacksRevertOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface LocalRulestacksListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type LocalRulestacksListBySubscriptionNextResponse = LocalRulestackResourceListResult;

/** Optional parameters. */
export interface LocalRulestacksListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type LocalRulestacksListByResourceGroupNextResponse = LocalRulestackResourceListResult;

/** Optional parameters. */
export interface FirewallStatusListByFirewallsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirewalls operation. */
export type FirewallStatusListByFirewallsResponse = FirewallStatusResourceListResult;

/** Optional parameters. */
export interface FirewallStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FirewallStatusGetResponse = FirewallStatusResource;

/** Optional parameters. */
export interface FirewallStatusListByFirewallsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByFirewallsNext operation. */
export type FirewallStatusListByFirewallsNextResponse = FirewallStatusResourceListResult;

/** Optional parameters. */
export interface CertificateObjectLocalRulestackListByLocalRulestacksOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocalRulestacks operation. */
export type CertificateObjectLocalRulestackListByLocalRulestacksResponse = CertificateObjectLocalRulestackResourceListResult;

/** Optional parameters. */
export interface CertificateObjectLocalRulestackGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CertificateObjectLocalRulestackGetResponse = CertificateObjectLocalRulestackResource;

/** Optional parameters. */
export interface CertificateObjectLocalRulestackCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CertificateObjectLocalRulestackCreateOrUpdateResponse = CertificateObjectLocalRulestackResource;

/** Optional parameters. */
export interface CertificateObjectLocalRulestackDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CertificateObjectLocalRulestackListByLocalRulestacksNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocalRulestacksNext operation. */
export type CertificateObjectLocalRulestackListByLocalRulestacksNextResponse = CertificateObjectLocalRulestackResourceListResult;

/** Optional parameters. */
export interface FqdnListLocalRulestackListByLocalRulestacksOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocalRulestacks operation. */
export type FqdnListLocalRulestackListByLocalRulestacksResponse = FqdnListLocalRulestackResourceListResult;

/** Optional parameters. */
export interface FqdnListLocalRulestackGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FqdnListLocalRulestackGetResponse = FqdnListLocalRulestackResource;

/** Optional parameters. */
export interface FqdnListLocalRulestackCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type FqdnListLocalRulestackCreateOrUpdateResponse = FqdnListLocalRulestackResource;

/** Optional parameters. */
export interface FqdnListLocalRulestackDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface FqdnListLocalRulestackListByLocalRulestacksNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocalRulestacksNext operation. */
export type FqdnListLocalRulestackListByLocalRulestacksNextResponse = FqdnListLocalRulestackResourceListResult;

/** Optional parameters. */
export interface LocalRulesListByLocalRulestacksOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocalRulestacks operation. */
export type LocalRulesListByLocalRulestacksResponse = LocalRulesResourceListResult;

/** Optional parameters. */
export interface LocalRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LocalRulesGetResponse = LocalRulesResource;

/** Optional parameters. */
export interface LocalRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type LocalRulesCreateOrUpdateResponse = LocalRulesResource;

/** Optional parameters. */
export interface LocalRulesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface LocalRulesGetCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Contains response data for the getCounters operation. */
export type LocalRulesGetCountersResponse = RuleCounter;

/** Optional parameters. */
export interface LocalRulesRefreshCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Optional parameters. */
export interface LocalRulesResetCountersOptionalParams
  extends coreClient.OperationOptions {
  firewallName?: string;
}

/** Contains response data for the resetCounters operation. */
export type LocalRulesResetCountersResponse = RuleCounterReset;

/** Optional parameters. */
export interface LocalRulesListByLocalRulestacksNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocalRulestacksNext operation. */
export type LocalRulesListByLocalRulestacksNextResponse = LocalRulesResourceListResult;

/** Optional parameters. */
export interface PrefixListLocalRulestackListByLocalRulestacksOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocalRulestacks operation. */
export type PrefixListLocalRulestackListByLocalRulestacksResponse = PrefixListResourceListResult;

/** Optional parameters. */
export interface PrefixListLocalRulestackGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrefixListLocalRulestackGetResponse = PrefixListResource;

/** Optional parameters. */
export interface PrefixListLocalRulestackCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PrefixListLocalRulestackCreateOrUpdateResponse = PrefixListResource;

/** Optional parameters. */
export interface PrefixListLocalRulestackDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrefixListLocalRulestackListByLocalRulestacksNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocalRulestacksNext operation. */
export type PrefixListLocalRulestackListByLocalRulestacksNextResponse = PrefixListResourceListResult;

/** Optional parameters. */
export interface PaloAltoNetworksCloudngfwOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
