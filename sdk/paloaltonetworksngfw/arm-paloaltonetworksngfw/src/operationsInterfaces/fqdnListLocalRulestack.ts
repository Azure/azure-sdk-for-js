/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  FqdnListLocalRulestackResource,
  FqdnListLocalRulestackListByLocalRulestacksOptionalParams,
  FqdnListLocalRulestackGetOptionalParams,
  FqdnListLocalRulestackGetResponse,
  FqdnListLocalRulestackCreateOrUpdateOptionalParams,
  FqdnListLocalRulestackCreateOrUpdateResponse,
  FqdnListLocalRulestackDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FqdnListLocalRulestack. */
export interface FqdnListLocalRulestack {
  /**
   * List FqdnListLocalRulestackResource resources by LocalRulestacks
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  listByLocalRulestacks(
    resourceGroupName: string,
    localRulestackName: string,
    options?: FqdnListLocalRulestackListByLocalRulestacksOptionalParams
  ): PagedAsyncIterableIterator<FqdnListLocalRulestackResource>;
  /**
   * Get a FqdnListLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name fqdn list name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: FqdnListLocalRulestackGetOptionalParams
  ): Promise<FqdnListLocalRulestackGetResponse>;
  /**
   * Create a FqdnListLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name fqdn list name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    resource: FqdnListLocalRulestackResource,
    options?: FqdnListLocalRulestackCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<FqdnListLocalRulestackCreateOrUpdateResponse>,
      FqdnListLocalRulestackCreateOrUpdateResponse
    >
  >;
  /**
   * Create a FqdnListLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name fqdn list name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    resource: FqdnListLocalRulestackResource,
    options?: FqdnListLocalRulestackCreateOrUpdateOptionalParams
  ): Promise<FqdnListLocalRulestackCreateOrUpdateResponse>;
  /**
   * Delete a FqdnListLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name fqdn list name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: FqdnListLocalRulestackDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a FqdnListLocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name fqdn list name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: FqdnListLocalRulestackDeleteOptionalParams
  ): Promise<void>;
}
