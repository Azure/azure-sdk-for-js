/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LocalRulesResource,
  LocalRulesListByLocalRulestacksOptionalParams,
  LocalRulesGetOptionalParams,
  LocalRulesGetResponse,
  LocalRulesCreateOrUpdateOptionalParams,
  LocalRulesCreateOrUpdateResponse,
  LocalRulesDeleteOptionalParams,
  LocalRulesGetCountersOptionalParams,
  LocalRulesGetCountersResponse,
  LocalRulesRefreshCountersOptionalParams,
  LocalRulesResetCountersOptionalParams,
  LocalRulesResetCountersResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LocalRules. */
export interface LocalRules {
  /**
   * List LocalRulesResource resources by LocalRulestacks
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  listByLocalRulestacks(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulesListByLocalRulestacksOptionalParams
  ): PagedAsyncIterableIterator<LocalRulesResource>;
  /**
   * Get a LocalRulesResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param priority Local Rule priority
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    localRulestackName: string,
    priority: string,
    options?: LocalRulesGetOptionalParams
  ): Promise<LocalRulesGetResponse>;
  /**
   * Create a LocalRulesResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param priority Local Rule priority
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    localRulestackName: string,
    priority: string,
    resource: LocalRulesResource,
    options?: LocalRulesCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<LocalRulesCreateOrUpdateResponse>,
      LocalRulesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a LocalRulesResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param priority Local Rule priority
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    priority: string,
    resource: LocalRulesResource,
    options?: LocalRulesCreateOrUpdateOptionalParams
  ): Promise<LocalRulesCreateOrUpdateResponse>;
  /**
   * Delete a LocalRulesResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param priority Local Rule priority
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    localRulestackName: string,
    priority: string,
    options?: LocalRulesDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a LocalRulesResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param priority Local Rule priority
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    priority: string,
    options?: LocalRulesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Get counters
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param priority Local Rule priority
   * @param options The options parameters.
   */
  getCounters(
    resourceGroupName: string,
    localRulestackName: string,
    priority: string,
    options?: LocalRulesGetCountersOptionalParams
  ): Promise<LocalRulesGetCountersResponse>;
  /**
   * Refresh counters
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param priority Local Rule priority
   * @param options The options parameters.
   */
  refreshCounters(
    resourceGroupName: string,
    localRulestackName: string,
    priority: string,
    options?: LocalRulesRefreshCountersOptionalParams
  ): Promise<void>;
  /**
   * Reset counters
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param priority Local Rule priority
   * @param options The options parameters.
   */
  resetCounters(
    resourceGroupName: string,
    localRulestackName: string,
    priority: string,
    options?: LocalRulesResetCountersOptionalParams
  ): Promise<LocalRulesResetCountersResponse>;
}
