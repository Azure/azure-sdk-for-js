/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PreRulesResource,
  PreRulesListOptionalParams,
  PreRulesGetOptionalParams,
  PreRulesGetResponse,
  PreRulesCreateOrUpdateOptionalParams,
  PreRulesCreateOrUpdateResponse,
  PreRulesDeleteOptionalParams,
  PreRulesGetCountersOptionalParams,
  PreRulesGetCountersResponse,
  PreRulesRefreshCountersOptionalParams,
  PreRulesResetCountersOptionalParams,
  PreRulesResetCountersResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PreRules. */
export interface PreRules {
  /**
   * List PreRulesResource resources by Tenant
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  list(
    globalRulestackName: string,
    options?: PreRulesListOptionalParams
  ): PagedAsyncIterableIterator<PreRulesResource>;
  /**
   * Get a PreRulesResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param priority Pre Rule priority
   * @param options The options parameters.
   */
  get(
    globalRulestackName: string,
    priority: string,
    options?: PreRulesGetOptionalParams
  ): Promise<PreRulesGetResponse>;
  /**
   * Create a PreRulesResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param priority Pre Rule priority
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    globalRulestackName: string,
    priority: string,
    resource: PreRulesResource,
    options?: PreRulesCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PreRulesCreateOrUpdateResponse>,
      PreRulesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a PreRulesResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param priority Pre Rule priority
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    globalRulestackName: string,
    priority: string,
    resource: PreRulesResource,
    options?: PreRulesCreateOrUpdateOptionalParams
  ): Promise<PreRulesCreateOrUpdateResponse>;
  /**
   * Delete a PreRulesResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param priority Pre Rule priority
   * @param options The options parameters.
   */
  beginDelete(
    globalRulestackName: string,
    priority: string,
    options?: PreRulesDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a PreRulesResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param priority Pre Rule priority
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    globalRulestackName: string,
    priority: string,
    options?: PreRulesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Get counters
   * @param globalRulestackName GlobalRulestack resource name
   * @param priority Pre Rule priority
   * @param options The options parameters.
   */
  getCounters(
    globalRulestackName: string,
    priority: string,
    options?: PreRulesGetCountersOptionalParams
  ): Promise<PreRulesGetCountersResponse>;
  /**
   * Refresh counters
   * @param globalRulestackName GlobalRulestack resource name
   * @param priority Pre Rule priority
   * @param options The options parameters.
   */
  refreshCounters(
    globalRulestackName: string,
    priority: string,
    options?: PreRulesRefreshCountersOptionalParams
  ): Promise<void>;
  /**
   * Reset counters
   * @param globalRulestackName GlobalRulestack resource name
   * @param priority Pre Rule priority
   * @param options The options parameters.
   */
  resetCounters(
    globalRulestackName: string,
    priority: string,
    options?: PreRulesResetCountersOptionalParams
  ): Promise<PreRulesResetCountersResponse>;
}
