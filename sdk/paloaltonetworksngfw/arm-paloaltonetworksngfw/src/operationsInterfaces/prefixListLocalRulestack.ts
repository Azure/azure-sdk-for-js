/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PrefixListResource,
  PrefixListLocalRulestackListByLocalRulestacksOptionalParams,
  PrefixListLocalRulestackGetOptionalParams,
  PrefixListLocalRulestackGetResponse,
  PrefixListLocalRulestackCreateOrUpdateOptionalParams,
  PrefixListLocalRulestackCreateOrUpdateResponse,
  PrefixListLocalRulestackDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PrefixListLocalRulestack. */
export interface PrefixListLocalRulestack {
  /**
   * List PrefixListResource resources by LocalRulestacks
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  listByLocalRulestacks(
    resourceGroupName: string,
    localRulestackName: string,
    options?: PrefixListLocalRulestackListByLocalRulestacksOptionalParams
  ): PagedAsyncIterableIterator<PrefixListResource>;
  /**
   * Get a PrefixListResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name Local Rule priority
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: PrefixListLocalRulestackGetOptionalParams
  ): Promise<PrefixListLocalRulestackGetResponse>;
  /**
   * Create a PrefixListResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name Local Rule priority
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    resource: PrefixListResource,
    options?: PrefixListLocalRulestackCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PrefixListLocalRulestackCreateOrUpdateResponse>,
      PrefixListLocalRulestackCreateOrUpdateResponse
    >
  >;
  /**
   * Create a PrefixListResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name Local Rule priority
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    resource: PrefixListResource,
    options?: PrefixListLocalRulestackCreateOrUpdateOptionalParams
  ): Promise<PrefixListLocalRulestackCreateOrUpdateResponse>;
  /**
   * Delete a PrefixListResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name Local Rule priority
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: PrefixListLocalRulestackDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a PrefixListResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param name Local Rule priority
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    name: string,
    options?: PrefixListLocalRulestackDeleteOptionalParams
  ): Promise<void>;
}
