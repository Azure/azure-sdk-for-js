/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LocalRulestackResource,
  LocalRulestacksListBySubscriptionOptionalParams,
  LocalRulestacksListByResourceGroupOptionalParams,
  LocalRulestacksGetOptionalParams,
  LocalRulestacksGetResponse,
  LocalRulestacksCreateOrUpdateOptionalParams,
  LocalRulestacksCreateOrUpdateResponse,
  LocalRulestackResourceUpdate,
  LocalRulestacksUpdateOptionalParams,
  LocalRulestacksUpdateResponse,
  LocalRulestacksDeleteOptionalParams,
  LocalRulestacksCommitOptionalParams,
  LocalRulestacksGetChangeLogOptionalParams,
  LocalRulestacksGetChangeLogResponse,
  LocalRulestacksGetSupportInfoOptionalParams,
  LocalRulestacksGetSupportInfoResponse,
  AdvSecurityObjectTypeEnum,
  LocalRulestacksListAdvancedSecurityObjectsOptionalParams,
  LocalRulestacksListAdvancedSecurityObjectsResponse,
  LocalRulestacksListAppIdsOptionalParams,
  LocalRulestacksListAppIdsResponse,
  LocalRulestacksListCountriesOptionalParams,
  LocalRulestacksListCountriesResponse,
  LocalRulestacksListFirewallsOptionalParams,
  LocalRulestacksListFirewallsResponse,
  LocalRulestacksListPredefinedUrlCategoriesOptionalParams,
  LocalRulestacksListPredefinedUrlCategoriesResponse,
  SecurityServicesTypeEnum,
  LocalRulestacksListSecurityServicesOptionalParams,
  LocalRulestacksListSecurityServicesResponse,
  LocalRulestacksRevertOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LocalRulestacks. */
export interface LocalRulestacks {
  /**
   * List LocalRulestackResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: LocalRulestacksListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<LocalRulestackResource>;
  /**
   * List LocalRulestackResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: LocalRulestacksListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<LocalRulestackResource>;
  /**
   * Get a LocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksGetOptionalParams
  ): Promise<LocalRulestacksGetResponse>;
  /**
   * Create a LocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    localRulestackName: string,
    resource: LocalRulestackResource,
    options?: LocalRulestacksCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<LocalRulestacksCreateOrUpdateResponse>,
      LocalRulestacksCreateOrUpdateResponse
    >
  >;
  /**
   * Create a LocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    resource: LocalRulestackResource,
    options?: LocalRulestacksCreateOrUpdateOptionalParams
  ): Promise<LocalRulestacksCreateOrUpdateResponse>;
  /**
   * Update a LocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    localRulestackName: string,
    properties: LocalRulestackResourceUpdate,
    options?: LocalRulestacksUpdateOptionalParams
  ): Promise<LocalRulestacksUpdateResponse>;
  /**
   * Delete a LocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a LocalRulestackResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksDeleteOptionalParams
  ): Promise<void>;
  /**
   * Commit rulestack configuration
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  beginCommit(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksCommitOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Commit rulestack configuration
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  beginCommitAndWait(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksCommitOptionalParams
  ): Promise<void>;
  /**
   * Get changelog
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  getChangeLog(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksGetChangeLogOptionalParams
  ): Promise<LocalRulestacksGetChangeLogResponse>;
  /**
   * support info for rulestack.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  getSupportInfo(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksGetSupportInfoOptionalParams
  ): Promise<LocalRulestacksGetSupportInfoResponse>;
  /**
   * Get the list of advanced security objects
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param typeParam
   * @param options The options parameters.
   */
  listAdvancedSecurityObjects(
    resourceGroupName: string,
    localRulestackName: string,
    typeParam: AdvSecurityObjectTypeEnum,
    options?: LocalRulestacksListAdvancedSecurityObjectsOptionalParams
  ): Promise<LocalRulestacksListAdvancedSecurityObjectsResponse>;
  /**
   * List of AppIds for LocalRulestack ApiVersion
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  listAppIds(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksListAppIdsOptionalParams
  ): Promise<LocalRulestacksListAppIdsResponse>;
  /**
   * List of countries for Rulestack
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  listCountries(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksListCountriesOptionalParams
  ): Promise<LocalRulestacksListCountriesResponse>;
  /**
   * List of Firewalls associated with Rulestack
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  listFirewalls(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksListFirewallsOptionalParams
  ): Promise<LocalRulestacksListFirewallsResponse>;
  /**
   * List predefined URL categories for rulestack
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  listPredefinedUrlCategories(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksListPredefinedUrlCategoriesOptionalParams
  ): Promise<LocalRulestacksListPredefinedUrlCategoriesResponse>;
  /**
   * List the security services for rulestack
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param typeParam
   * @param options The options parameters.
   */
  listSecurityServices(
    resourceGroupName: string,
    localRulestackName: string,
    typeParam: SecurityServicesTypeEnum,
    options?: LocalRulestacksListSecurityServicesOptionalParams
  ): Promise<LocalRulestacksListSecurityServicesResponse>;
  /**
   * Revert rulestack configuration
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param localRulestackName LocalRulestack resource name
   * @param options The options parameters.
   */
  revert(
    resourceGroupName: string,
    localRulestackName: string,
    options?: LocalRulestacksRevertOptionalParams
  ): Promise<void>;
}
