/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  GlobalRulestackResource,
  GlobalRulestackListOptionalParams,
  GlobalRulestackGetOptionalParams,
  GlobalRulestackGetResponse,
  GlobalRulestackCreateOrUpdateOptionalParams,
  GlobalRulestackCreateOrUpdateResponse,
  GlobalRulestackResourceUpdate,
  GlobalRulestackUpdateOptionalParams,
  GlobalRulestackUpdateResponse,
  GlobalRulestackDeleteOptionalParams,
  GlobalRulestackCommitOptionalParams,
  GlobalRulestackGetChangeLogOptionalParams,
  GlobalRulestackGetChangeLogResponse,
  AdvSecurityObjectTypeEnum,
  GlobalRulestackListAdvancedSecurityObjectsOptionalParams,
  GlobalRulestackListAdvancedSecurityObjectsResponse,
  GlobalRulestackListAppIdsOptionalParams,
  GlobalRulestackListAppIdsResponse,
  GlobalRulestackListCountriesOptionalParams,
  GlobalRulestackListCountriesResponse,
  GlobalRulestackListFirewallsOptionalParams,
  GlobalRulestackListFirewallsResponse,
  GlobalRulestackListPredefinedUrlCategoriesOptionalParams,
  GlobalRulestackListPredefinedUrlCategoriesResponse,
  SecurityServicesTypeEnum,
  GlobalRulestackListSecurityServicesOptionalParams,
  GlobalRulestackListSecurityServicesResponse,
  GlobalRulestackRevertOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GlobalRulestack. */
export interface GlobalRulestack {
  /**
   * List GlobalRulestackResource resources by Tenant
   * @param options The options parameters.
   */
  list(
    options?: GlobalRulestackListOptionalParams
  ): PagedAsyncIterableIterator<GlobalRulestackResource>;
  /**
   * Get a GlobalRulestackResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  get(
    globalRulestackName: string,
    options?: GlobalRulestackGetOptionalParams
  ): Promise<GlobalRulestackGetResponse>;
  /**
   * Create a GlobalRulestackResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    globalRulestackName: string,
    resource: GlobalRulestackResource,
    options?: GlobalRulestackCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GlobalRulestackCreateOrUpdateResponse>,
      GlobalRulestackCreateOrUpdateResponse
    >
  >;
  /**
   * Create a GlobalRulestackResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    globalRulestackName: string,
    resource: GlobalRulestackResource,
    options?: GlobalRulestackCreateOrUpdateOptionalParams
  ): Promise<GlobalRulestackCreateOrUpdateResponse>;
  /**
   * Update a GlobalRulestackResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    globalRulestackName: string,
    properties: GlobalRulestackResourceUpdate,
    options?: GlobalRulestackUpdateOptionalParams
  ): Promise<GlobalRulestackUpdateResponse>;
  /**
   * Delete a GlobalRulestackResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  beginDelete(
    globalRulestackName: string,
    options?: GlobalRulestackDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a GlobalRulestackResource
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    globalRulestackName: string,
    options?: GlobalRulestackDeleteOptionalParams
  ): Promise<void>;
  /**
   * Commit rulestack configuration
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  beginCommit(
    globalRulestackName: string,
    options?: GlobalRulestackCommitOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Commit rulestack configuration
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  beginCommitAndWait(
    globalRulestackName: string,
    options?: GlobalRulestackCommitOptionalParams
  ): Promise<void>;
  /**
   * Get changelog
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  getChangeLog(
    globalRulestackName: string,
    options?: GlobalRulestackGetChangeLogOptionalParams
  ): Promise<GlobalRulestackGetChangeLogResponse>;
  /**
   * Get the list of advanced security objects
   * @param globalRulestackName GlobalRulestack resource name
   * @param typeParam
   * @param options The options parameters.
   */
  listAdvancedSecurityObjects(
    globalRulestackName: string,
    typeParam: AdvSecurityObjectTypeEnum,
    options?: GlobalRulestackListAdvancedSecurityObjectsOptionalParams
  ): Promise<GlobalRulestackListAdvancedSecurityObjectsResponse>;
  /**
   * List of AppIds for GlobalRulestack ApiVersion
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  listAppIds(
    globalRulestackName: string,
    options?: GlobalRulestackListAppIdsOptionalParams
  ): Promise<GlobalRulestackListAppIdsResponse>;
  /**
   * List of countries for Rulestack
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  listCountries(
    globalRulestackName: string,
    options?: GlobalRulestackListCountriesOptionalParams
  ): Promise<GlobalRulestackListCountriesResponse>;
  /**
   * List of Firewalls associated with Rulestack
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  listFirewalls(
    globalRulestackName: string,
    options?: GlobalRulestackListFirewallsOptionalParams
  ): Promise<GlobalRulestackListFirewallsResponse>;
  /**
   * List predefined URL categories for rulestack
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  listPredefinedUrlCategories(
    globalRulestackName: string,
    options?: GlobalRulestackListPredefinedUrlCategoriesOptionalParams
  ): Promise<GlobalRulestackListPredefinedUrlCategoriesResponse>;
  /**
   * List the security services for rulestack
   * @param globalRulestackName GlobalRulestack resource name
   * @param typeParam
   * @param options The options parameters.
   */
  listSecurityServices(
    globalRulestackName: string,
    typeParam: SecurityServicesTypeEnum,
    options?: GlobalRulestackListSecurityServicesOptionalParams
  ): Promise<GlobalRulestackListSecurityServicesResponse>;
  /**
   * Revert rulestack configuration
   * @param globalRulestackName GlobalRulestack resource name
   * @param options The options parameters.
   */
  revert(
    globalRulestackName: string,
    options?: GlobalRulestackRevertOptionalParams
  ): Promise<void>;
}
