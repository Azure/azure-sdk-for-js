/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  FirewallResource,
  FirewallsListBySubscriptionOptionalParams,
  FirewallsListByResourceGroupOptionalParams,
  FirewallsGetOptionalParams,
  FirewallsGetResponse,
  FirewallsCreateOrUpdateOptionalParams,
  FirewallsCreateOrUpdateResponse,
  FirewallResourceUpdate,
  FirewallsUpdateOptionalParams,
  FirewallsUpdateResponse,
  FirewallsDeleteOptionalParams,
  FirewallsGetGlobalRulestackOptionalParams,
  FirewallsGetGlobalRulestackResponse,
  FirewallsGetLogProfileOptionalParams,
  FirewallsGetLogProfileResponse,
  FirewallsGetSupportInfoOptionalParams,
  FirewallsGetSupportInfoResponse,
  FirewallsSaveLogProfileOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Firewalls. */
export interface Firewalls {
  /**
   * List FirewallResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: FirewallsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<FirewallResource>;
  /**
   * List FirewallResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: FirewallsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<FirewallResource>;
  /**
   * Get a FirewallResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    firewallName: string,
    options?: FirewallsGetOptionalParams
  ): Promise<FirewallsGetResponse>;
  /**
   * Create a FirewallResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    firewallName: string,
    resource: FirewallResource,
    options?: FirewallsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<FirewallsCreateOrUpdateResponse>,
      FirewallsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a FirewallResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    firewallName: string,
    resource: FirewallResource,
    options?: FirewallsCreateOrUpdateOptionalParams
  ): Promise<FirewallsCreateOrUpdateResponse>;
  /**
   * Update a FirewallResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    firewallName: string,
    properties: FirewallResourceUpdate,
    options?: FirewallsUpdateOptionalParams
  ): Promise<FirewallsUpdateResponse>;
  /**
   * Delete a FirewallResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    firewallName: string,
    options?: FirewallsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a FirewallResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    firewallName: string,
    options?: FirewallsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Get Global Rulestack associated with the Firewall
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param options The options parameters.
   */
  getGlobalRulestack(
    resourceGroupName: string,
    firewallName: string,
    options?: FirewallsGetGlobalRulestackOptionalParams
  ): Promise<FirewallsGetGlobalRulestackResponse>;
  /**
   * Log Profile for Firewall
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param options The options parameters.
   */
  getLogProfile(
    resourceGroupName: string,
    firewallName: string,
    options?: FirewallsGetLogProfileOptionalParams
  ): Promise<FirewallsGetLogProfileResponse>;
  /**
   * support info for firewall.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param options The options parameters.
   */
  getSupportInfo(
    resourceGroupName: string,
    firewallName: string,
    options?: FirewallsGetSupportInfoOptionalParams
  ): Promise<FirewallsGetSupportInfoResponse>;
  /**
   * Log Profile for Firewall
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param firewallName Firewall resource name
   * @param options The options parameters.
   */
  saveLogProfile(
    resourceGroupName: string,
    firewallName: string,
    options?: FirewallsSaveLogProfileOptionalParams
  ): Promise<void>;
}
