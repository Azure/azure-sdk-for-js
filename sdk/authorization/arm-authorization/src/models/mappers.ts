/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ClassicAdministratorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClassicAdministratorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClassicAdministrator"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClassicAdministrator: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClassicAdministrator",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        serializedName: "properties.emailAddress",
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "properties.role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const DenyAssignmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DenyAssignmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DenyAssignment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DenyAssignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DenyAssignment",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      denyAssignmentName: {
        serializedName: "properties.denyAssignmentName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "properties.permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DenyAssignmentPermission"
            }
          }
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      doNotApplyToChildScopes: {
        serializedName: "properties.doNotApplyToChildScopes",
        type: {
          name: "Boolean"
        }
      },
      principals: {
        serializedName: "properties.principals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Principal"
            }
          }
        }
      },
      excludePrincipals: {
        serializedName: "properties.excludePrincipals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Principal"
            }
          }
        }
      },
      isSystemProtected: {
        serializedName: "properties.isSystemProtected",
        type: {
          name: "Boolean"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedOn: {
        serializedName: "properties.updatedOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DenyAssignmentPermission: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DenyAssignmentPermission",
    modelProperties: {
      actions: {
        serializedName: "actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notActions: {
        serializedName: "notActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataActions: {
        serializedName: "dataActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notDataActions: {
        serializedName: "notDataActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      condition: {
        serializedName: "condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "conditionVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Principal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Principal",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderOperationsMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderOperationsMetadata",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      resourceTypes: {
        serializedName: "resourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceType"
            }
          }
        }
      },
      operations: {
        serializedName: "operations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProviderOperation"
            }
          }
        }
      }
    }
  }
};

export const ResourceType: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceType",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      operations: {
        serializedName: "operations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProviderOperation"
            }
          }
        }
      }
    }
  }
};

export const ProviderOperation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderOperation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ProviderOperationsMetadataListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProviderOperationsMetadataListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProviderOperationsMetadata"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleAssignment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignment",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedOn: {
        serializedName: "properties.updatedOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      delegatedManagedIdentityResourceId: {
        serializedName: "properties.delegatedManagedIdentityResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentCreateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentCreateParameters",
    modelProperties: {
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        required: true,
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        required: true,
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedOn: {
        serializedName: "properties.updatedOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      delegatedManagedIdentityResourceId: {
        serializedName: "properties.delegatedManagedIdentityResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PermissionGetResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PermissionGetResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Permission"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Permission: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Permission",
    modelProperties: {
      actions: {
        serializedName: "actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notActions: {
        serializedName: "notActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataActions: {
        serializedName: "dataActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notDataActions: {
        serializedName: "notDataActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RoleDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleName: {
        serializedName: "properties.roleName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      roleType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "properties.permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Permission"
            }
          }
        }
      },
      assignableScopes: {
        serializedName: "properties.assignableScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedOn: {
        serializedName: "properties.updatedOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleDefinitionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EligibleChildResourcesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EligibleChildResourcesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EligibleChildResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EligibleChildResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EligibleChildResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentSchedule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentSchedule",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        type: {
          name: "String"
        }
      },
      roleAssignmentScheduleRequestId: {
        serializedName: "properties.roleAssignmentScheduleRequestId",
        type: {
          name: "String"
        }
      },
      linkedRoleEligibilityScheduleId: {
        serializedName: "properties.linkedRoleEligibilityScheduleId",
        type: {
          name: "String"
        }
      },
      assignmentType: {
        serializedName: "properties.assignmentType",
        type: {
          name: "String"
        }
      },
      memberType: {
        serializedName: "properties.memberType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        type: {
          name: "DateTime"
        }
      },
      updatedOn: {
        serializedName: "properties.updatedOn",
        type: {
          name: "DateTime"
        }
      },
      expandedProperties: {
        serializedName: "properties.expandedProperties",
        type: {
          name: "Composite",
          className: "ExpandedProperties"
        }
      }
    }
  }
};

export const ExpandedProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandedProperties",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "Composite",
          className: "ExpandedPropertiesScope"
        }
      },
      roleDefinition: {
        serializedName: "roleDefinition",
        type: {
          name: "Composite",
          className: "ExpandedPropertiesRoleDefinition"
        }
      },
      principal: {
        serializedName: "principal",
        type: {
          name: "Composite",
          className: "ExpandedPropertiesPrincipal"
        }
      }
    }
  }
};

export const ExpandedPropertiesScope: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandedPropertiesScope",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExpandedPropertiesRoleDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandedPropertiesRoleDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExpandedPropertiesPrincipal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandedPropertiesPrincipal",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleAssignmentSchedule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleInstanceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleAssignmentScheduleInstance"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleInstance",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        type: {
          name: "String"
        }
      },
      roleAssignmentScheduleId: {
        serializedName: "properties.roleAssignmentScheduleId",
        type: {
          name: "String"
        }
      },
      originRoleAssignmentId: {
        serializedName: "properties.originRoleAssignmentId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      },
      linkedRoleEligibilityScheduleId: {
        serializedName: "properties.linkedRoleEligibilityScheduleId",
        type: {
          name: "String"
        }
      },
      linkedRoleEligibilityScheduleInstanceId: {
        serializedName: "properties.linkedRoleEligibilityScheduleInstanceId",
        type: {
          name: "String"
        }
      },
      assignmentType: {
        serializedName: "properties.assignmentType",
        type: {
          name: "String"
        }
      },
      memberType: {
        serializedName: "properties.memberType",
        type: {
          name: "String"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        type: {
          name: "DateTime"
        }
      },
      expandedProperties: {
        serializedName: "properties.expandedProperties",
        type: {
          name: "Composite",
          className: "ExpandedProperties"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestType: {
        serializedName: "properties.requestType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      approvalId: {
        serializedName: "properties.approvalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      targetRoleAssignmentScheduleId: {
        serializedName: "properties.targetRoleAssignmentScheduleId",
        type: {
          name: "String"
        }
      },
      targetRoleAssignmentScheduleInstanceId: {
        serializedName: "properties.targetRoleAssignmentScheduleInstanceId",
        type: {
          name: "String"
        }
      },
      scheduleInfo: {
        serializedName: "properties.scheduleInfo",
        type: {
          name: "Composite",
          className: "RoleAssignmentScheduleRequestPropertiesScheduleInfo"
        }
      },
      linkedRoleEligibilityScheduleId: {
        serializedName: "properties.linkedRoleEligibilityScheduleId",
        type: {
          name: "String"
        }
      },
      justification: {
        serializedName: "properties.justification",
        type: {
          name: "String"
        }
      },
      ticketInfo: {
        serializedName: "properties.ticketInfo",
        type: {
          name: "Composite",
          className: "RoleAssignmentScheduleRequestPropertiesTicketInfo"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      requestorId: {
        serializedName: "properties.requestorId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expandedProperties: {
        serializedName: "properties.expandedProperties",
        type: {
          name: "Composite",
          className: "ExpandedProperties"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestPropertiesScheduleInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestPropertiesScheduleInfo",
    modelProperties: {
      startDateTime: {
        serializedName: "startDateTime",
        type: {
          name: "DateTime"
        }
      },
      expiration: {
        serializedName: "expiration",
        type: {
          name: "Composite",
          className:
            "RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      endDateTime: {
        serializedName: "endDateTime",
        type: {
          name: "DateTime"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestPropertiesTicketInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestPropertiesTicketInfo",
    modelProperties: {
      ticketNumber: {
        serializedName: "ticketNumber",
        type: {
          name: "String"
        }
      },
      ticketSystem: {
        serializedName: "ticketSystem",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleAssignmentScheduleRequest"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleEligibilitySchedule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilitySchedule",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        type: {
          name: "String"
        }
      },
      roleEligibilityScheduleRequestId: {
        serializedName: "properties.roleEligibilityScheduleRequestId",
        type: {
          name: "String"
        }
      },
      memberType: {
        serializedName: "properties.memberType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        type: {
          name: "DateTime"
        }
      },
      updatedOn: {
        serializedName: "properties.updatedOn",
        type: {
          name: "DateTime"
        }
      },
      expandedProperties: {
        serializedName: "properties.expandedProperties",
        type: {
          name: "Composite",
          className: "ExpandedProperties"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleEligibilitySchedule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleInstanceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleEligibilityScheduleInstance"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleInstance",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        type: {
          name: "String"
        }
      },
      roleEligibilityScheduleId: {
        serializedName: "properties.roleEligibilityScheduleId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      },
      memberType: {
        serializedName: "properties.memberType",
        type: {
          name: "String"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        type: {
          name: "DateTime"
        }
      },
      expandedProperties: {
        serializedName: "properties.expandedProperties",
        type: {
          name: "Composite",
          className: "ExpandedProperties"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestType: {
        serializedName: "properties.requestType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      approvalId: {
        serializedName: "properties.approvalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scheduleInfo: {
        serializedName: "properties.scheduleInfo",
        type: {
          name: "Composite",
          className: "RoleEligibilityScheduleRequestPropertiesScheduleInfo"
        }
      },
      targetRoleEligibilityScheduleId: {
        serializedName: "properties.targetRoleEligibilityScheduleId",
        type: {
          name: "String"
        }
      },
      targetRoleEligibilityScheduleInstanceId: {
        serializedName: "properties.targetRoleEligibilityScheduleInstanceId",
        type: {
          name: "String"
        }
      },
      justification: {
        serializedName: "properties.justification",
        type: {
          name: "String"
        }
      },
      ticketInfo: {
        serializedName: "properties.ticketInfo",
        type: {
          name: "Composite",
          className: "RoleEligibilityScheduleRequestPropertiesTicketInfo"
        }
      },
      condition: {
        serializedName: "properties.condition",
        type: {
          name: "String"
        }
      },
      conditionVersion: {
        serializedName: "properties.conditionVersion",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "properties.createdOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      requestorId: {
        serializedName: "properties.requestorId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expandedProperties: {
        serializedName: "properties.expandedProperties",
        type: {
          name: "Composite",
          className: "ExpandedProperties"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleRequestPropertiesScheduleInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleRequestPropertiesScheduleInfo",
    modelProperties: {
      startDateTime: {
        serializedName: "startDateTime",
        type: {
          name: "DateTime"
        }
      },
      expiration: {
        serializedName: "expiration",
        type: {
          name: "Composite",
          className:
            "RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      endDateTime: {
        serializedName: "endDateTime",
        type: {
          name: "DateTime"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleRequestPropertiesTicketInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleRequestPropertiesTicketInfo",
    modelProperties: {
      ticketNumber: {
        serializedName: "ticketNumber",
        type: {
          name: "String"
        }
      },
      ticketSystem: {
        serializedName: "ticketSystem",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleRequestListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleRequestListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleEligibilityScheduleRequest"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleManagementPolicy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleManagementPolicy",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      isOrganizationDefault: {
        serializedName: "properties.isOrganizationDefault",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedBy: {
        serializedName: "properties.lastModifiedBy",
        type: {
          name: "Composite",
          className: "Principal"
        }
      },
      lastModifiedDateTime: {
        serializedName: "properties.lastModifiedDateTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      rules: {
        serializedName: "properties.rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleManagementPolicyRule"
            }
          }
        }
      },
      effectiveRules: {
        serializedName: "properties.effectiveRules",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleManagementPolicyRule"
            }
          }
        }
      },
      policyProperties: {
        serializedName: "properties.policyProperties",
        type: {
          name: "Composite",
          className: "PolicyProperties"
        }
      }
    }
  }
};

export const RoleManagementPolicyRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleManagementPolicyRule",
    uberParent: "RoleManagementPolicyRule",
    polymorphicDiscriminator: {
      serializedName: "ruleType",
      clientName: "ruleType"
    },
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      ruleType: {
        serializedName: "ruleType",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "RoleManagementPolicyRuleTarget"
        }
      }
    }
  }
};

export const RoleManagementPolicyRuleTarget: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleManagementPolicyRuleTarget",
    modelProperties: {
      caller: {
        serializedName: "caller",
        type: {
          name: "String"
        }
      },
      operations: {
        serializedName: "operations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      level: {
        serializedName: "level",
        type: {
          name: "String"
        }
      },
      targetObjects: {
        serializedName: "targetObjects",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      inheritableSettings: {
        serializedName: "inheritableSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      enforcedSettings: {
        serializedName: "enforcedSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PolicyProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyProperties",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "Composite",
          className: "PolicyPropertiesScope"
        }
      }
    }
  }
};

export const PolicyPropertiesScope: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyPropertiesScope",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleManagementPolicyListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleManagementPolicyListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleManagementPolicy"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleManagementPolicyAssignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleManagementPolicyAssignment",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.roleDefinitionId",
        type: {
          name: "String"
        }
      },
      policyId: {
        serializedName: "properties.policyId",
        type: {
          name: "String"
        }
      },
      effectiveRules: {
        serializedName: "properties.effectiveRules",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleManagementPolicyRule"
            }
          }
        }
      },
      policyAssignmentProperties: {
        serializedName: "properties.policyAssignmentProperties",
        type: {
          name: "Composite",
          className: "PolicyAssignmentProperties"
        }
      }
    }
  }
};

export const PolicyAssignmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyAssignmentProperties",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "Composite",
          className: "PolicyAssignmentPropertiesScope"
        }
      },
      roleDefinition: {
        serializedName: "roleDefinition",
        type: {
          name: "Composite",
          className: "PolicyAssignmentPropertiesRoleDefinition"
        }
      },
      policy: {
        serializedName: "policy",
        type: {
          name: "Composite",
          className: "PolicyAssignmentPropertiesPolicy"
        }
      }
    }
  }
};

export const PolicyAssignmentPropertiesScope: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyAssignmentPropertiesScope",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyAssignmentPropertiesRoleDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyAssignmentPropertiesRoleDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyAssignmentPropertiesPolicy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyAssignmentPropertiesPolicy",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "Composite",
          className: "Principal"
        }
      },
      lastModifiedDateTime: {
        serializedName: "lastModifiedDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const RoleManagementPolicyAssignmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleManagementPolicyAssignmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleManagementPolicyAssignment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DenyAssignmentFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DenyAssignmentFilter",
    modelProperties: {
      denyAssignmentName: {
        serializedName: "denyAssignmentName",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      gdprExportPrincipalId: {
        serializedName: "gdprExportPrincipalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ValidationResponseErrorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationResponseErrorInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ValidationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationResponse",
    modelProperties: {
      isValid: {
        serializedName: "isValid",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      errorInfo: {
        serializedName: "errorInfo",
        type: {
          name: "Composite",
          className: "ValidationResponseErrorInfo"
        }
      }
    }
  }
};

export const RoleAssignmentFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleDefinitionFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleDefinitionFilter",
    modelProperties: {
      roleName: {
        serializedName: "roleName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApprovalSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApprovalSettings",
    modelProperties: {
      isApprovalRequired: {
        serializedName: "isApprovalRequired",
        type: {
          name: "Boolean"
        }
      },
      isApprovalRequiredForExtension: {
        serializedName: "isApprovalRequiredForExtension",
        type: {
          name: "Boolean"
        }
      },
      isRequestorJustificationRequired: {
        serializedName: "isRequestorJustificationRequired",
        type: {
          name: "Boolean"
        }
      },
      approvalMode: {
        serializedName: "approvalMode",
        type: {
          name: "String"
        }
      },
      approvalStages: {
        serializedName: "approvalStages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApprovalStage"
            }
          }
        }
      }
    }
  }
};

export const ApprovalStage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApprovalStage",
    modelProperties: {
      approvalStageTimeOutInDays: {
        serializedName: "approvalStageTimeOutInDays",
        type: {
          name: "Number"
        }
      },
      isApproverJustificationRequired: {
        serializedName: "isApproverJustificationRequired",
        type: {
          name: "Boolean"
        }
      },
      escalationTimeInMinutes: {
        serializedName: "escalationTimeInMinutes",
        type: {
          name: "Number"
        }
      },
      primaryApprovers: {
        serializedName: "primaryApprovers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserSet"
            }
          }
        }
      },
      isEscalationEnabled: {
        serializedName: "isEscalationEnabled",
        type: {
          name: "Boolean"
        }
      },
      escalationApprovers: {
        serializedName: "escalationApprovers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserSet"
            }
          }
        }
      }
    }
  }
};

export const UserSet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserSet",
    modelProperties: {
      userType: {
        serializedName: "userType",
        type: {
          name: "String"
        }
      },
      isBackup: {
        serializedName: "isBackup",
        type: {
          name: "Boolean"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleInstanceFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleInstanceFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      roleAssignmentScheduleId: {
        serializedName: "roleAssignmentScheduleId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentScheduleRequestFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleAssignmentScheduleRequestFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      requestorId: {
        serializedName: "requestorId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleInstanceFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleInstanceFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      roleEligibilityScheduleId: {
        serializedName: "roleEligibilityScheduleId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleEligibilityScheduleRequestFilter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RoleEligibilityScheduleRequestFilter",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      },
      requestorId: {
        serializedName: "requestorId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleManagementPolicyApprovalRule: coreClient.CompositeMapper = {
  serializedName: "RoleManagementPolicyApprovalRule",
  type: {
    name: "Composite",
    className: "RoleManagementPolicyApprovalRule",
    uberParent: "RoleManagementPolicyRule",
    polymorphicDiscriminator:
      RoleManagementPolicyRule.type.polymorphicDiscriminator,
    modelProperties: {
      ...RoleManagementPolicyRule.type.modelProperties,
      setting: {
        serializedName: "setting",
        type: {
          name: "Composite",
          className: "ApprovalSettings"
        }
      }
    }
  }
};

export const RoleManagementPolicyAuthenticationContextRule: coreClient.CompositeMapper = {
  serializedName: "RoleManagementPolicyAuthenticationContextRule",
  type: {
    name: "Composite",
    className: "RoleManagementPolicyAuthenticationContextRule",
    uberParent: "RoleManagementPolicyRule",
    polymorphicDiscriminator:
      RoleManagementPolicyRule.type.polymorphicDiscriminator,
    modelProperties: {
      ...RoleManagementPolicyRule.type.modelProperties,
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      claimValue: {
        serializedName: "claimValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleManagementPolicyEnablementRule: coreClient.CompositeMapper = {
  serializedName: "RoleManagementPolicyEnablementRule",
  type: {
    name: "Composite",
    className: "RoleManagementPolicyEnablementRule",
    uberParent: "RoleManagementPolicyRule",
    polymorphicDiscriminator:
      RoleManagementPolicyRule.type.polymorphicDiscriminator,
    modelProperties: {
      ...RoleManagementPolicyRule.type.modelProperties,
      enabledRules: {
        serializedName: "enabledRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RoleManagementPolicyExpirationRule: coreClient.CompositeMapper = {
  serializedName: "RoleManagementPolicyExpirationRule",
  type: {
    name: "Composite",
    className: "RoleManagementPolicyExpirationRule",
    uberParent: "RoleManagementPolicyRule",
    polymorphicDiscriminator:
      RoleManagementPolicyRule.type.polymorphicDiscriminator,
    modelProperties: {
      ...RoleManagementPolicyRule.type.modelProperties,
      isExpirationRequired: {
        serializedName: "isExpirationRequired",
        type: {
          name: "Boolean"
        }
      },
      maximumDuration: {
        serializedName: "maximumDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleManagementPolicyNotificationRule: coreClient.CompositeMapper = {
  serializedName: "RoleManagementPolicyNotificationRule",
  type: {
    name: "Composite",
    className: "RoleManagementPolicyNotificationRule",
    uberParent: "RoleManagementPolicyRule",
    polymorphicDiscriminator:
      RoleManagementPolicyRule.type.polymorphicDiscriminator,
    modelProperties: {
      ...RoleManagementPolicyRule.type.modelProperties,
      notificationType: {
        serializedName: "notificationType",
        type: {
          name: "String"
        }
      },
      notificationLevel: {
        serializedName: "notificationLevel",
        type: {
          name: "String"
        }
      },
      recipientType: {
        serializedName: "recipientType",
        type: {
          name: "String"
        }
      },
      notificationRecipients: {
        serializedName: "notificationRecipients",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isDefaultRecipientsEnabled: {
        serializedName: "isDefaultRecipientsEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export let discriminators = {
  RoleManagementPolicyRule: RoleManagementPolicyRule,
  "RoleManagementPolicyRule.RoleManagementPolicyApprovalRule": RoleManagementPolicyApprovalRule,
  "RoleManagementPolicyRule.RoleManagementPolicyAuthenticationContextRule": RoleManagementPolicyAuthenticationContextRule,
  "RoleManagementPolicyRule.RoleManagementPolicyEnablementRule": RoleManagementPolicyEnablementRule,
  "RoleManagementPolicyRule.RoleManagementPolicyExpirationRule": RoleManagementPolicyExpirationRule,
  "RoleManagementPolicyRule.RoleManagementPolicyNotificationRule": RoleManagementPolicyNotificationRule
};
