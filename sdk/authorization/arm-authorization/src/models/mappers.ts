/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDefinitionProperties"
        }
      }
    }
  }
};

export const ErrorDefinitionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDefinitionProperties",
    modelProperties: {
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewHistoryDefinitionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewHistoryDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewHistoryDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewHistoryDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewHistoryDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      reviewHistoryPeriodStartDateTime: {
        serializedName: "properties.reviewHistoryPeriodStartDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      reviewHistoryPeriodEndDateTime: {
        serializedName: "properties.reviewHistoryPeriodEndDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      decisions: {
        serializedName: "properties.decisions",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        serializedName: "properties.createdDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      scopes: {
        serializedName: "properties.scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewScope"
            }
          }
        }
      },
      instances: {
        serializedName: "properties.instances",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewHistoryInstance"
            }
          }
        }
      },
      typePropertiesSettingsRangeType: {
        serializedName: "properties.settings.range.type",
        nullable: true,
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName: "properties.settings.range.numberOfOccurrences",
        nullable: true,
        type: {
          name: "Number"
        }
      },
      startDate: {
        serializedName: "properties.settings.range.startDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "properties.settings.range.endDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      typePropertiesSettingsPatternType: {
        serializedName: "properties.settings.pattern.type",
        nullable: true,
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "properties.settings.pattern.interval",
        nullable: true,
        type: {
          name: "Number"
        }
      },
      principalId: {
        serializedName: "properties.createdBy.principalId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "properties.createdBy.principalType",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalName: {
        serializedName: "properties.createdBy.principalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "properties.createdBy.userPrincipalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewHistoryDefinitionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewHistoryDefinitionProperties",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      reviewHistoryPeriodStartDateTime: {
        serializedName: "reviewHistoryPeriodStartDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      reviewHistoryPeriodEndDateTime: {
        serializedName: "reviewHistoryPeriodEndDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      decisions: {
        serializedName: "decisions",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        serializedName: "createdDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewScope"
            }
          }
        }
      },
      instances: {
        serializedName: "instances",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewHistoryInstance"
            }
          }
        }
      },
      typeSettingsRangeType: {
        serializedName: "settings.range.type",
        nullable: true,
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName: "settings.range.numberOfOccurrences",
        nullable: true,
        type: {
          name: "Number"
        }
      },
      startDate: {
        serializedName: "settings.range.startDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "settings.range.endDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      typeSettingsPatternType: {
        serializedName: "settings.pattern.type",
        nullable: true,
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "settings.pattern.interval",
        nullable: true,
        type: {
          name: "Number"
        }
      },
      principalId: {
        serializedName: "createdBy.principalId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "createdBy.principalType",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalName: {
        serializedName: "createdBy.principalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "createdBy.userPrincipalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewScope: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewScope",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assignmentState: {
        serializedName: "assignmentState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      inactiveDuration: {
        serializedName: "inactiveDuration",
        type: {
          name: "TimeSpan"
        }
      },
      expandNestedMemberships: {
        serializedName: "expandNestedMemberships",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AccessReviewHistoryInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewHistoryInstance",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reviewHistoryPeriodStartDateTime: {
        serializedName: "properties.reviewHistoryPeriodStartDateTime",
        type: {
          name: "DateTime"
        }
      },
      reviewHistoryPeriodEndDateTime: {
        serializedName: "properties.reviewHistoryPeriodEndDateTime",
        type: {
          name: "DateTime"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      runDateTime: {
        serializedName: "properties.runDateTime",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      fulfilledDateTime: {
        serializedName: "properties.fulfilledDateTime",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      downloadUri: {
        serializedName: "properties.downloadUri",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expiration: {
        serializedName: "properties.expiration",
        nullable: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AccessReviewHistoryDefinitionInstanceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewHistoryDefinitionInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewHistoryInstance"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewScheduleDefinitionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewScheduleDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewScheduleDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewScheduleDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewScheduleDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      descriptionForAdmins: {
        serializedName: "properties.descriptionForAdmins",
        type: {
          name: "String"
        }
      },
      descriptionForReviewers: {
        serializedName: "properties.descriptionForReviewers",
        type: {
          name: "String"
        }
      },
      reviewers: {
        serializedName: "properties.reviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      backupReviewers: {
        serializedName: "properties.backupReviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      reviewersType: {
        serializedName: "properties.reviewersType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instances: {
        serializedName: "properties.instances",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewInstance"
            }
          }
        }
      },
      resourceId: {
        serializedName: "properties.scope.resourceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "properties.scope.roleDefinitionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalTypePropertiesScopePrincipalType: {
        serializedName: "properties.scope.principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assignmentState: {
        serializedName: "properties.scope.assignmentState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      inactiveDuration: {
        serializedName: "properties.scope.inactiveDuration",
        type: {
          name: "TimeSpan"
        }
      },
      expandNestedMemberships: {
        serializedName: "properties.scope.expandNestedMemberships",
        type: {
          name: "Boolean"
        }
      },
      mailNotificationsEnabled: {
        serializedName: "properties.settings.mailNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      reminderNotificationsEnabled: {
        serializedName: "properties.settings.reminderNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      defaultDecisionEnabled: {
        serializedName: "properties.settings.defaultDecisionEnabled",
        type: {
          name: "Boolean"
        }
      },
      justificationRequiredOnApproval: {
        serializedName: "properties.settings.justificationRequiredOnApproval",
        type: {
          name: "Boolean"
        }
      },
      defaultDecision: {
        serializedName: "properties.settings.defaultDecision",
        type: {
          name: "String"
        }
      },
      autoApplyDecisionsEnabled: {
        serializedName: "properties.settings.autoApplyDecisionsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationsEnabled: {
        serializedName: "properties.settings.recommendationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationLookBackDuration: {
        serializedName: "properties.settings.recommendationLookBackDuration",
        type: {
          name: "TimeSpan"
        }
      },
      instanceDurationInDays: {
        serializedName: "properties.settings.instanceDurationInDays",
        type: {
          name: "Number"
        }
      },
      typePropertiesSettingsRecurrenceRangeType: {
        serializedName: "properties.settings.recurrence.range.type",
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName:
          "properties.settings.recurrence.range.numberOfOccurrences",
        type: {
          name: "Number"
        }
      },
      startDate: {
        serializedName: "properties.settings.recurrence.range.startDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "properties.settings.recurrence.range.endDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      typePropertiesSettingsRecurrencePatternType: {
        serializedName: "properties.settings.recurrence.pattern.type",
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "properties.settings.recurrence.pattern.interval",
        type: {
          name: "Number"
        }
      },
      principalId: {
        serializedName: "properties.createdBy.principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalTypePropertiesCreatedByPrincipalType: {
        serializedName: "properties.createdBy.principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalName: {
        serializedName: "properties.createdBy.principalName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "properties.createdBy.userPrincipalName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewScheduleDefinitionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewScheduleDefinitionProperties",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      descriptionForAdmins: {
        serializedName: "descriptionForAdmins",
        type: {
          name: "String"
        }
      },
      descriptionForReviewers: {
        serializedName: "descriptionForReviewers",
        type: {
          name: "String"
        }
      },
      reviewers: {
        serializedName: "reviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      backupReviewers: {
        serializedName: "backupReviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      reviewersType: {
        serializedName: "reviewersType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instances: {
        serializedName: "instances",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewInstance"
            }
          }
        }
      },
      resourceId: {
        serializedName: "scope.resourceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "scope.roleDefinitionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalTypeScopePrincipalType: {
        serializedName: "scope.principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assignmentState: {
        serializedName: "scope.assignmentState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      inactiveDuration: {
        serializedName: "scope.inactiveDuration",
        type: {
          name: "TimeSpan"
        }
      },
      expandNestedMemberships: {
        serializedName: "scope.expandNestedMemberships",
        type: {
          name: "Boolean"
        }
      },
      mailNotificationsEnabled: {
        serializedName: "settings.mailNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      reminderNotificationsEnabled: {
        serializedName: "settings.reminderNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      defaultDecisionEnabled: {
        serializedName: "settings.defaultDecisionEnabled",
        type: {
          name: "Boolean"
        }
      },
      justificationRequiredOnApproval: {
        serializedName: "settings.justificationRequiredOnApproval",
        type: {
          name: "Boolean"
        }
      },
      defaultDecision: {
        serializedName: "settings.defaultDecision",
        type: {
          name: "String"
        }
      },
      autoApplyDecisionsEnabled: {
        serializedName: "settings.autoApplyDecisionsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationsEnabled: {
        serializedName: "settings.recommendationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationLookBackDuration: {
        serializedName: "settings.recommendationLookBackDuration",
        type: {
          name: "TimeSpan"
        }
      },
      instanceDurationInDays: {
        serializedName: "settings.instanceDurationInDays",
        type: {
          name: "Number"
        }
      },
      typeSettingsRecurrenceRangeType: {
        serializedName: "settings.recurrence.range.type",
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName: "settings.recurrence.range.numberOfOccurrences",
        type: {
          name: "Number"
        }
      },
      startDate: {
        serializedName: "settings.recurrence.range.startDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "settings.recurrence.range.endDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      typeSettingsRecurrencePatternType: {
        serializedName: "settings.recurrence.pattern.type",
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "settings.recurrence.pattern.interval",
        type: {
          name: "Number"
        }
      },
      principalId: {
        serializedName: "createdBy.principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalTypeCreatedByPrincipalType: {
        serializedName: "createdBy.principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      principalName: {
        serializedName: "createdBy.principalName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "createdBy.userPrincipalName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewScheduleSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewScheduleSettings",
    modelProperties: {
      mailNotificationsEnabled: {
        serializedName: "mailNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      reminderNotificationsEnabled: {
        serializedName: "reminderNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      defaultDecisionEnabled: {
        serializedName: "defaultDecisionEnabled",
        type: {
          name: "Boolean"
        }
      },
      justificationRequiredOnApproval: {
        serializedName: "justificationRequiredOnApproval",
        type: {
          name: "Boolean"
        }
      },
      defaultDecision: {
        serializedName: "defaultDecision",
        type: {
          name: "String"
        }
      },
      autoApplyDecisionsEnabled: {
        serializedName: "autoApplyDecisionsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationsEnabled: {
        serializedName: "recommendationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationLookBackDuration: {
        serializedName: "recommendationLookBackDuration",
        type: {
          name: "TimeSpan"
        }
      },
      instanceDurationInDays: {
        serializedName: "instanceDurationInDays",
        type: {
          name: "Number"
        }
      },
      typeRecurrenceRangeType: {
        serializedName: "recurrence.range.type",
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName: "recurrence.range.numberOfOccurrences",
        type: {
          name: "Number"
        }
      },
      startDate: {
        serializedName: "recurrence.range.startDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "recurrence.range.endDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      typeRecurrencePatternType: {
        serializedName: "recurrence.pattern.type",
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "recurrence.pattern.interval",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AccessReviewReviewer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewReviewer",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        serializedName: "principalType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewInstance",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      },
      reviewers: {
        serializedName: "properties.reviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      backupReviewers: {
        serializedName: "properties.backupReviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      reviewersType: {
        serializedName: "properties.reviewersType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewInstanceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewInstanceProperties",
    modelProperties: {
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "endDateTime",
        type: {
          name: "DateTime"
        }
      },
      reviewers: {
        serializedName: "reviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      backupReviewers: {
        serializedName: "backupReviewers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewReviewer"
            }
          }
        }
      },
      reviewersType: {
        serializedName: "reviewersType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewInstanceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewInstance"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecisionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewDecisionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewDecision"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecision: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewDecision",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      recommendation: {
        serializedName: "properties.recommendation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      decision: {
        serializedName: "properties.decision",
        type: {
          name: "String"
        }
      },
      justification: {
        serializedName: "properties.justification",
        type: {
          name: "String"
        }
      },
      reviewedDateTime: {
        serializedName: "properties.reviewedDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      applyResult: {
        serializedName: "properties.applyResult",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      appliedDateTime: {
        serializedName: "properties.appliedDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      principalIdPropertiesAppliedByPrincipalId: {
        serializedName: "properties.appliedBy.principalId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalTypePropertiesAppliedByPrincipalType: {
        serializedName: "properties.appliedBy.principalType",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalNamePropertiesAppliedByPrincipalName: {
        serializedName: "properties.appliedBy.principalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      userPrincipalNamePropertiesAppliedByUserPrincipalName: {
        serializedName: "properties.appliedBy.userPrincipalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalIdPropertiesReviewedByPrincipalId: {
        serializedName: "properties.reviewedBy.principalId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalTypePropertiesReviewedByPrincipalType: {
        serializedName: "properties.reviewedBy.principalType",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalNamePropertiesReviewedByPrincipalName: {
        serializedName: "properties.reviewedBy.principalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      userPrincipalNamePropertiesReviewedByUserPrincipalName: {
        serializedName: "properties.reviewedBy.userPrincipalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      typePropertiesResourceType: {
        serializedName: "properties.resource.type",
        nullable: true,
        type: {
          name: "String"
        }
      },
      idPropertiesResourceId: {
        serializedName: "properties.resource.id",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      displayNamePropertiesResourceDisplayName: {
        serializedName: "properties.resource.displayName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      typePropertiesPrincipalType: {
        serializedName: "properties.principal.type",
        nullable: true,
        type: {
          name: "String"
        }
      },
      idPropertiesPrincipalId: {
        serializedName: "properties.principal.id",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      displayNamePropertiesPrincipalDisplayName: {
        serializedName: "properties.principal.displayName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecisionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewDecisionProperties",
    modelProperties: {
      recommendation: {
        serializedName: "recommendation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      decision: {
        serializedName: "decision",
        type: {
          name: "String"
        }
      },
      justification: {
        serializedName: "justification",
        type: {
          name: "String"
        }
      },
      reviewedDateTime: {
        serializedName: "reviewedDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      applyResult: {
        serializedName: "applyResult",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      appliedDateTime: {
        serializedName: "appliedDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      principalIdAppliedByPrincipalId: {
        serializedName: "appliedBy.principalId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalTypeAppliedByPrincipalType: {
        serializedName: "appliedBy.principalType",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalNameAppliedByPrincipalName: {
        serializedName: "appliedBy.principalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      userPrincipalNameAppliedByUserPrincipalName: {
        serializedName: "appliedBy.userPrincipalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalIdReviewedByPrincipalId: {
        serializedName: "reviewedBy.principalId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalTypeReviewedByPrincipalType: {
        serializedName: "reviewedBy.principalType",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      principalNameReviewedByPrincipalName: {
        serializedName: "reviewedBy.principalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      userPrincipalNameReviewedByUserPrincipalName: {
        serializedName: "reviewedBy.userPrincipalName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      typeResourceType: {
        serializedName: "resource.type",
        nullable: true,
        type: {
          name: "String"
        }
      },
      idResourceId: {
        serializedName: "resource.id",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      displayNameResourceDisplayName: {
        serializedName: "resource.displayName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      typePrincipalType: {
        serializedName: "principal.type",
        nullable: true,
        type: {
          name: "String"
        }
      },
      idPrincipalId: {
        serializedName: "principal.id",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      displayNamePrincipalDisplayName: {
        serializedName: "principal.displayName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecisionIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewDecisionIdentity",
    uberParent: "AccessReviewDecisionIdentity",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecisionResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewDecisionResource",
    uberParent: "AccessReviewDecisionResource",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewContactedReviewerListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewContactedReviewerListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessReviewContactedReviewer"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewContactedReviewer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewContactedReviewer",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userDisplayName: {
        serializedName: "properties.userDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "properties.userPrincipalName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        serializedName: "properties.createdDateTime",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AccessReviewDefaultSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessReviewDefaultSettings",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      mailNotificationsEnabled: {
        serializedName: "properties.mailNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      reminderNotificationsEnabled: {
        serializedName: "properties.reminderNotificationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      defaultDecisionEnabled: {
        serializedName: "properties.defaultDecisionEnabled",
        type: {
          name: "Boolean"
        }
      },
      justificationRequiredOnApproval: {
        serializedName: "properties.justificationRequiredOnApproval",
        type: {
          name: "Boolean"
        }
      },
      defaultDecision: {
        serializedName: "properties.defaultDecision",
        type: {
          name: "String"
        }
      },
      autoApplyDecisionsEnabled: {
        serializedName: "properties.autoApplyDecisionsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationsEnabled: {
        serializedName: "properties.recommendationsEnabled",
        type: {
          name: "Boolean"
        }
      },
      recommendationLookBackDuration: {
        serializedName: "properties.recommendationLookBackDuration",
        type: {
          name: "TimeSpan"
        }
      },
      instanceDurationInDays: {
        serializedName: "properties.instanceDurationInDays",
        type: {
          name: "Number"
        }
      },
      typePropertiesRecurrenceRangeType: {
        serializedName: "properties.recurrence.range.type",
        type: {
          name: "String"
        }
      },
      numberOfOccurrences: {
        serializedName: "properties.recurrence.range.numberOfOccurrences",
        type: {
          name: "Number"
        }
      },
      startDate: {
        serializedName: "properties.recurrence.range.startDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "properties.recurrence.range.endDate",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      typePropertiesRecurrencePatternType: {
        serializedName: "properties.recurrence.pattern.type",
        type: {
          name: "String"
        }
      },
      interval: {
        serializedName: "properties.recurrence.pattern.interval",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AccessReviewDecisionUserIdentity: coreClient.CompositeMapper = {
  serializedName: "user",
  type: {
    name: "Composite",
    className: "AccessReviewDecisionUserIdentity",
    uberParent: "AccessReviewDecisionIdentity",
    polymorphicDiscriminator:
      AccessReviewDecisionIdentity.type.polymorphicDiscriminator,
    modelProperties: {
      ...AccessReviewDecisionIdentity.type.modelProperties,
      userPrincipalName: {
        serializedName: "userPrincipalName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecisionServicePrincipalIdentity: coreClient.CompositeMapper = {
  serializedName: "servicePrincipal",
  type: {
    name: "Composite",
    className: "AccessReviewDecisionServicePrincipalIdentity",
    uberParent: "AccessReviewDecisionIdentity",
    polymorphicDiscriminator:
      AccessReviewDecisionIdentity.type.polymorphicDiscriminator,
    modelProperties: {
      ...AccessReviewDecisionIdentity.type.modelProperties,
      appId: {
        serializedName: "appId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessReviewDecisionResourceAzureRole: coreClient.CompositeMapper = {
  serializedName: "azureRole",
  type: {
    name: "Composite",
    className: "AccessReviewDecisionResourceAzureRole",
    uberParent: "AccessReviewDecisionResource",
    polymorphicDiscriminator:
      AccessReviewDecisionResource.type.polymorphicDiscriminator,
    modelProperties: {
      ...AccessReviewDecisionResource.type.modelProperties
    }
  }
};

export let discriminators = {
  AccessReviewDecisionIdentity: AccessReviewDecisionIdentity,
  AccessReviewDecisionResource: AccessReviewDecisionResource,
  "AccessReviewDecisionIdentity.user": AccessReviewDecisionUserIdentity,
  "AccessReviewDecisionIdentity.servicePrincipal": AccessReviewDecisionServicePrincipalIdentity,
  "AccessReviewDecisionResource.azureRole": AccessReviewDecisionResourceAzureRole
};
