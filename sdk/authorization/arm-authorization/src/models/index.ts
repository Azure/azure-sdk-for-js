/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Role Assignments filter
 */
export interface RoleAssignmentFilter {
  /**
   * Returns role assignment of the specific principal.
   */
  principalId?: string;
  /**
   * The Delegation flag for the role assignment
   */
  canDelegate?: boolean;
}

/**
 * Role Assignments
 */
export interface RoleAssignment {
  /**
   * The role assignment ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The role assignment name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The role assignment type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The role assignment scope.
   */
  scope?: string;
  /**
   * The role definition ID.
   */
  roleDefinitionId?: string;
  /**
   * The principal ID.
   */
  principalId?: string;
  /**
   * The principal type of the assigned principal ID. Possible values include: 'User', 'Group',
   * 'ServicePrincipal', 'Unknown', 'DirectoryRoleTemplate', 'ForeignGroup', 'Application', 'MSI',
   * 'DirectoryObjectOrGroup', 'Everyone'
   */
  principalType?: PrincipalType;
  /**
   * The Delegation flag for the role assignment
   */
  canDelegate?: boolean;
  /**
   * Description of role assignment
   */
  description?: string;
  /**
   * The conditions on the role assignment. This limits the resources it can be assigned to. e.g.:
   * @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
   * StringEqualsIgnoreCase 'foo_storage_container'
   */
  condition?: string;
  /**
   * Version of the condition. Currently accepted value is '2.0'
   */
  conditionVersion?: string;
  /**
   * Time it was created
   */
  createdOn?: Date;
  /**
   * Time it was updated
   */
  updatedOn?: Date;
  /**
   * Id of the user who created the assignment
   */
  createdBy?: string;
  /**
   * Id of the user who updated the assignment
   */
  updatedBy?: string;
  /**
   * Id of the delegated managed identity resource
   */
  delegatedManagedIdentityResourceId?: string;
}

/**
 * Role assignment create parameters.
 */
export interface RoleAssignmentCreateParameters {
  /**
   * The role definition ID used in the role assignment.
   */
  roleDefinitionId: string;
  /**
   * The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can
   * point to a user, service principal, or security group.
   */
  principalId: string;
  /**
   * The principal type of the assigned principal ID. Possible values include: 'User', 'Group',
   * 'ServicePrincipal', 'Unknown', 'DirectoryRoleTemplate', 'ForeignGroup', 'Application', 'MSI',
   * 'DirectoryObjectOrGroup', 'Everyone'. Default value: 'User'.
   */
  principalType?: PrincipalType;
  /**
   * The delegation flag used for creating a role assignment
   */
  canDelegate?: boolean;
  /**
   * Description of role assignment
   */
  description?: string;
  /**
   * The conditions on the role assignment. This limits the resources it can be assigned to. e.g.:
   * @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
   * StringEqualsIgnoreCase 'foo_storage_container'
   */
  condition?: string;
  /**
   * Version of the condition. Currently accepted value is '2.0'
   */
  conditionVersion?: string;
  /**
   * Id of the delegated managed identity resource
   */
  delegatedManagedIdentityResourceId?: string;
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The error detail.
 */
export interface ErrorDetail {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Common error response for all Azure Resource Manager APIs to return error details for failed
 * operations. (This also follows the OData error response format.).
 * @summary Error response
 */
export interface ErrorResponse {
  /**
   * The error object.
   */
  error?: ErrorDetail;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsDeleteByIdOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsGetByIdOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForResourceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForScopeNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
  /**
   * Tenant ID for cross-tenant request
   */
  tenantId?: string;
}

/**
 * An interface representing AuthorizationManagementClientOptions.
 */
export interface AuthorizationManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Role assignment list operation result.
 * @extends Array<RoleAssignment>
 */
export interface RoleAssignmentListResult extends Array<RoleAssignment> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * Defines values for PrincipalType.
 * Possible values include: 'User', 'Group', 'ServicePrincipal', 'Unknown',
 * 'DirectoryRoleTemplate', 'ForeignGroup', 'Application', 'MSI', 'DirectoryObjectOrGroup',
 * 'Everyone'
 * @readonly
 * @enum {string}
 */
export type PrincipalType = 'User' | 'Group' | 'ServicePrincipal' | 'Unknown' | 'DirectoryRoleTemplate' | 'ForeignGroup' | 'Application' | 'MSI' | 'DirectoryObjectOrGroup' | 'Everyone';

/**
 * Contains response data for the listForResource operation.
 */
export type RoleAssignmentsListForResourceResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type RoleAssignmentsListForResourceGroupResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type RoleAssignmentsDeleteMethodResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RoleAssignmentsCreateResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoleAssignmentsGetResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the deleteById operation.
 */
export type RoleAssignmentsDeleteByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the createById operation.
 */
export type RoleAssignmentsCreateByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type RoleAssignmentsGetByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RoleAssignmentsListResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForScope operation.
 */
export type RoleAssignmentsListForScopeResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type RoleAssignmentsListForResourceNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type RoleAssignmentsListForResourceGroupNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RoleAssignmentsListNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForScopeNext operation.
 */
export type RoleAssignmentsListForScopeNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};
