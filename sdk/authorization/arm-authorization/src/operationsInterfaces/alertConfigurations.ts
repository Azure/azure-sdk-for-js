/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  AlertConfiguration,
  AlertConfigurationsListForScopeOptionalParams,
  AlertConfigurationsGetOptionalParams,
  AlertConfigurationsGetResponse,
  AlertConfigurationsUpdateOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AlertConfigurations. */
export interface AlertConfigurations {
  /**
   * Gets alert configurations for a resource scope.
   * @param scope The scope of the alert configuration.
   * @param options The options parameters.
   */
  listForScope(
    scope: string,
    options?: AlertConfigurationsListForScopeOptionalParams
  ): PagedAsyncIterableIterator<AlertConfiguration>;
  /**
   * Get the specified alert configuration.
   * @param scope The scope of the alert configuration. The scope can be any REST resource instance. For
   *              example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a
   *              subscription,
   *              '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
   *              for a resource group, and
   *              '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
   *              for a resource.
   * @param alertId The name of the alert configuration to get.
   * @param options The options parameters.
   */
  get(
    scope: string,
    alertId: string,
    options?: AlertConfigurationsGetOptionalParams
  ): Promise<AlertConfigurationsGetResponse>;
  /**
   * Update an alert configuration.
   * @param scope The scope of the alert configuration.
   * @param alertId The name of the alert configuration to update.
   * @param parameters Parameters for the alert configuration.
   * @param options The options parameters.
   */
  update(
    scope: string,
    alertId: string,
    parameters: AlertConfiguration,
    options?: AlertConfigurationsUpdateOptionalParams
  ): Promise<void>;
}
