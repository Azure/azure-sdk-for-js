/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  RoleEligibilityScheduleRequest,
  RoleEligibilityScheduleRequestsListForScopeOptionalParams,
  RoleEligibilityScheduleRequestsCreateOptionalParams,
  RoleEligibilityScheduleRequestsCreateResponse,
  RoleEligibilityScheduleRequestsGetOptionalParams,
  RoleEligibilityScheduleRequestsGetResponse,
  RoleEligibilityScheduleRequestsCancelOptionalParams,
  RoleEligibilityScheduleRequestsValidateOptionalParams,
  RoleEligibilityScheduleRequestsValidateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a RoleEligibilityScheduleRequests. */
export interface RoleEligibilityScheduleRequests {
  /**
   * Gets role eligibility schedule requests for a scope.
   * @param scope The scope of the role eligibility schedule requests.
   * @param options The options parameters.
   */
  listForScope(
    scope: string,
    options?: RoleEligibilityScheduleRequestsListForScopeOptionalParams
  ): PagedAsyncIterableIterator<RoleEligibilityScheduleRequest>;
  /**
   * Creates a role eligibility schedule request.
   * @param scope The scope of the role eligibility schedule request to create. The scope can be any REST
   *              resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription,
   *              '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
   *              '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
   *              for a resource.
   * @param roleEligibilityScheduleRequestName The name of the role eligibility to create. It can be any
   *                                           valid GUID.
   * @param parameters Parameters for the role eligibility schedule request.
   * @param options The options parameters.
   */
  create(
    scope: string,
    roleEligibilityScheduleRequestName: string,
    parameters: RoleEligibilityScheduleRequest,
    options?: RoleEligibilityScheduleRequestsCreateOptionalParams
  ): Promise<RoleEligibilityScheduleRequestsCreateResponse>;
  /**
   * Get the specified role eligibility schedule request.
   * @param scope The scope of the role eligibility schedule request.
   * @param roleEligibilityScheduleRequestName The name (guid) of the role eligibility schedule request
   *                                           to get.
   * @param options The options parameters.
   */
  get(
    scope: string,
    roleEligibilityScheduleRequestName: string,
    options?: RoleEligibilityScheduleRequestsGetOptionalParams
  ): Promise<RoleEligibilityScheduleRequestsGetResponse>;
  /**
   * Cancels a pending role eligibility schedule request.
   * @param scope The scope of the role eligibility request to cancel.
   * @param roleEligibilityScheduleRequestName The name of the role eligibility request to cancel.
   * @param options The options parameters.
   */
  cancel(
    scope: string,
    roleEligibilityScheduleRequestName: string,
    options?: RoleEligibilityScheduleRequestsCancelOptionalParams
  ): Promise<void>;
  /**
   * Validates a new role eligibility schedule request.
   * @param scope The scope of the role eligibility request to validate.
   * @param roleEligibilityScheduleRequestName The name of the role eligibility request to validate.
   * @param parameters Parameters for the role eligibility schedule request.
   * @param options The options parameters.
   */
  validate(
    scope: string,
    roleEligibilityScheduleRequestName: string,
    parameters: RoleEligibilityScheduleRequest,
    options?: RoleEligibilityScheduleRequestsValidateOptionalParams
  ): Promise<RoleEligibilityScheduleRequestsValidateResponse>;
}
