/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  RoleEligibilityScheduleInstance,
  RoleEligibilityScheduleInstancesListForScopeOptionalParams,
  RoleEligibilityScheduleInstancesGetOptionalParams,
  RoleEligibilityScheduleInstancesGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a RoleEligibilityScheduleInstances. */
export interface RoleEligibilityScheduleInstances {
  /**
   * Gets role eligibility schedule instances of a role eligibility schedule.
   * @param scope The scope of the role eligibility schedule.
   * @param options The options parameters.
   */
  listForScope(
    scope: string,
    options?: RoleEligibilityScheduleInstancesListForScopeOptionalParams
  ): PagedAsyncIterableIterator<RoleEligibilityScheduleInstance>;
  /**
   * Gets the specified role eligibility schedule instance.
   * @param scope The scope of the role eligibility schedules.
   * @param roleEligibilityScheduleInstanceName The name (hash of schedule name + time) of the role
   *                                            eligibility schedule to get.
   * @param options The options parameters.
   */
  get(
    scope: string,
    roleEligibilityScheduleInstanceName: string,
    options?: RoleEligibilityScheduleInstancesGetOptionalParams
  ): Promise<RoleEligibilityScheduleInstancesGetResponse>;
}
