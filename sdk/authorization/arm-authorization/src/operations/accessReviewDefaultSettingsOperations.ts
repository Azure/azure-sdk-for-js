/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { AccessReviewDefaultSettingsOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AuthorizationManagementClient } from "../authorizationManagementClient";
import {
  AccessReviewDefaultSettingsGetOptionalParams,
  AccessReviewDefaultSettingsGetResponse,
  AccessReviewScheduleSettings,
  AccessReviewDefaultSettingsPutOptionalParams,
  AccessReviewDefaultSettingsPutResponse
} from "../models";

/** Class containing AccessReviewDefaultSettingsOperations operations. */
export class AccessReviewDefaultSettingsOperationsImpl
  implements AccessReviewDefaultSettingsOperations {
  private readonly client: AuthorizationManagementClient;

  /**
   * Initialize a new instance of the class AccessReviewDefaultSettingsOperations class.
   * @param client Reference to the service client
   */
  constructor(client: AuthorizationManagementClient) {
    this.client = client;
  }

  /**
   * Get access review default settings for the subscription
   * @param options The options parameters.
   */
  get(
    options?: AccessReviewDefaultSettingsGetOptionalParams
  ): Promise<AccessReviewDefaultSettingsGetResponse> {
    return this.client.sendOperationRequest({ options }, getOperationSpec);
  }

  /**
   * Get access review default settings for the subscription
   * @param properties Access review schedule settings.
   * @param options The options parameters.
   */
  put(
    properties: AccessReviewScheduleSettings,
    options?: AccessReviewDefaultSettingsPutOptionalParams
  ): Promise<AccessReviewDefaultSettingsPutResponse> {
    return this.client.sendOperationRequest(
      { properties, options },
      putOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleSettings/default",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewDefaultSettings
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  queryParameters: [Parameters.apiVersion3],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer
};
const putOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleSettings/default",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewDefaultSettings
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  requestBody: Parameters.properties3,
  queryParameters: [Parameters.apiVersion3],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
