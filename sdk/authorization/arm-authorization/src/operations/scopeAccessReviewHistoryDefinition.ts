/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ScopeAccessReviewHistoryDefinition } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AuthorizationManagementClient } from "../authorizationManagementClient";
import {
  AccessReviewHistoryDefinitionProperties,
  ScopeAccessReviewHistoryDefinitionCreateOptionalParams,
  ScopeAccessReviewHistoryDefinitionCreateResponse,
  ScopeAccessReviewHistoryDefinitionDeleteByIdOptionalParams
} from "../models";

/** Class containing ScopeAccessReviewHistoryDefinition operations. */
export class ScopeAccessReviewHistoryDefinitionImpl
  implements ScopeAccessReviewHistoryDefinition {
  private readonly client: AuthorizationManagementClient;

  /**
   * Initialize a new instance of the class ScopeAccessReviewHistoryDefinition class.
   * @param client Reference to the service client
   */
  constructor(client: AuthorizationManagementClient) {
    this.client = client;
  }

  /**
   * Create a scheduled or one-time Access Review History Definition
   * @param scope The scope of the resource.
   * @param historyDefinitionId The id of the access review history definition.
   * @param properties Access review history definition properties.
   * @param options The options parameters.
   */
  create(
    scope: string,
    historyDefinitionId: string,
    properties: AccessReviewHistoryDefinitionProperties,
    options?: ScopeAccessReviewHistoryDefinitionCreateOptionalParams
  ): Promise<ScopeAccessReviewHistoryDefinitionCreateResponse> {
    return this.client.sendOperationRequest(
      { scope, historyDefinitionId, properties, options },
      createOperationSpec
    );
  }

  /**
   * Delete an access review history definition
   * @param scope The scope of the resource.
   * @param historyDefinitionId The id of the access review history definition.
   * @param options The options parameters.
   */
  deleteById(
    scope: string,
    historyDefinitionId: string,
    options?: ScopeAccessReviewHistoryDefinitionDeleteByIdOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { scope, historyDefinitionId, options },
      deleteByIdOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const createOperationSpec: coreClient.OperationSpec = {
  path:
    "/{scope}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/{historyDefinitionId}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.AccessReviewHistoryDefinition
    },
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  requestBody: Parameters.properties,
  queryParameters: [Parameters.apiVersion3],
  urlParameters: [
    Parameters.$host,
    Parameters.historyDefinitionId,
    Parameters.scope1
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
const deleteByIdOperationSpec: coreClient.OperationSpec = {
  path:
    "/{scope}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/{historyDefinitionId}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorDefinition
    }
  },
  queryParameters: [Parameters.apiVersion3],
  urlParameters: [
    Parameters.$host,
    Parameters.historyDefinitionId,
    Parameters.scope1
  ],
  headerParameters: [Parameters.accept],
  serializer
};
