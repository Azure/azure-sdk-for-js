/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { AlertOperation } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AuthorizationManagementClient } from "../authorizationManagementClient";
import {
  AlertOperationGetOptionalParams,
  AlertOperationGetResponse
} from "../models";

/** Class containing AlertOperation operations. */
export class AlertOperationImpl implements AlertOperation {
  private readonly client: AuthorizationManagementClient;

  /**
   * Initialize a new instance of the class AlertOperation class.
   * @param client Reference to the service client
   */
  constructor(client: AuthorizationManagementClient) {
    this.client = client;
  }

  /**
   * Get the specified alert operation.
   * @param scope The scope of the alert operation.
   * @param operationId The id of the alert operation.
   * @param options The options parameters.
   */
  get(
    scope: string,
    operationId: string,
    options?: AlertOperationGetOptionalParams
  ): Promise<AlertOperationGetResponse> {
    return this.client.sendOperationRequest(
      { scope, operationId, options },
      getOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/{scope}/providers/Microsoft.Authorization/roleManagementAlertOperations/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AlertOperationResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion6],
  urlParameters: [Parameters.$host, Parameters.scope, Parameters.operationId],
  headerParameters: [Parameters.accept],
  serializer
};
