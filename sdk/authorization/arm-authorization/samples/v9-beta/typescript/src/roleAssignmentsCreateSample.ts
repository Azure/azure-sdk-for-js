/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  RoleAssignmentCreateParameters,
  AuthorizationManagementClient
} from "@azure/arm-authorization";
import { DefaultAzureCredential } from "@azure/identity";

/**
 * This sample demonstrates how to Create a role assignment.
 *
 * @summary Create a role assignment.
 * x-ms-original-file: specification/authorization/resource-manager/Microsoft.Authorization/preview/2020-04-01-preview/examples/PutRoleAssignment.json
 */
async function createRoleAssignment() {
  const subscriptionId = "00000000-0000-0000-0000-000000000000";
  const scope = "scope";
  const roleAssignmentName = "roleAssignmentName";
  const parameters: RoleAssignmentCreateParameters = {
    description: "Grants UserFoo role assignment bar in scope baz",
    canDelegate: false,
    condition:
      "@Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'",
    conditionVersion: "1.0",
    principalId: "d93a38bc-d029-4160-bfb0-fbda779ac214",
    principalType: "User",
    roleDefinitionId:
      "/subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f/providers/Microsoft.Authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772"
  };
  const credential = new DefaultAzureCredential();
  const client = new AuthorizationManagementClient(credential, subscriptionId);
  const result = await client.roleAssignments.create(
    scope,
    roleAssignmentName,
    parameters
  );
  console.log(result);
}

createRoleAssignment().catch(console.error);
