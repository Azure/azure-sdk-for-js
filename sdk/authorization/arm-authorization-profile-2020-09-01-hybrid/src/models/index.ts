/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Role Definitions filter
 */
export interface RoleDefinitionFilter {
  /**
   * Returns role definition with the specific name.
   */
  roleName?: string;
}

/**
 * Role definition permissions.
 */
export interface Permission {
  /**
   * Allowed actions.
   */
  actions?: string[];
  /**
   * Denied actions.
   */
  notActions?: string[];
}

/**
 * Role definition.
 */
export interface RoleDefinition {
  /**
   * The role definition ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The role definition name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The role definition type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The role name.
   */
  roleName?: string;
  /**
   * The role definition description.
   */
  description?: string;
  /**
   * The role type.
   */
  roleType?: string;
  /**
   * Role definition permissions.
   */
  permissions?: Permission[];
  /**
   * Role definition assignable scopes.
   */
  assignableScopes?: string[];
}

/**
 * Operation
 */
export interface ProviderOperation {
  /**
   * The operation name.
   */
  name?: string;
  /**
   * The operation display name.
   */
  displayName?: string;
  /**
   * The operation description.
   */
  description?: string;
  /**
   * The operation origin.
   */
  origin?: string;
  /**
   * The operation properties.
   */
  properties?: any;
}

/**
 * Resource Type
 */
export interface ResourceType {
  /**
   * The resource type name.
   */
  name?: string;
  /**
   * The resource type display name.
   */
  displayName?: string;
  /**
   * The resource type operations.
   */
  operations?: ProviderOperation[];
}

/**
 * Provider Operations metadata
 */
export interface ProviderOperationsMetadata {
  /**
   * The provider id.
   */
  id?: string;
  /**
   * The provider name.
   */
  name?: string;
  /**
   * The provider type.
   */
  type?: string;
  /**
   * The provider display name.
   */
  displayName?: string;
  /**
   * The provider resource types
   */
  resourceTypes?: ResourceType[];
  /**
   * The provider operations.
   */
  operations?: ProviderOperation[];
}

/**
 * Role Assignments filter
 */
export interface RoleAssignmentFilter {
  /**
   * Returns role assignment of the specific principal.
   */
  principalId?: string;
}

/**
 * Role assignment properties with scope.
 */
export interface RoleAssignmentPropertiesWithScope {
  /**
   * The role assignment scope.
   */
  scope?: string;
  /**
   * The role definition ID.
   */
  roleDefinitionId?: string;
  /**
   * The principal ID.
   */
  principalId?: string;
}

/**
 * Role Assignments
 */
export interface RoleAssignment {
  /**
   * The role assignment ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The role assignment name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The role assignment type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Role assignment properties.
   */
  properties?: RoleAssignmentPropertiesWithScope;
}

/**
 * Role assignment properties.
 */
export interface RoleAssignmentProperties {
  /**
   * The role definition ID used in the role assignment.
   */
  roleDefinitionId: string;
  /**
   * The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can
   * point to a user, service principal, or security group.
   */
  principalId: string;
}

/**
 * Role assignment create parameters.
 */
export interface RoleAssignmentCreateParameters {
  /**
   * Role assignment properties.
   */
  properties: RoleAssignmentProperties;
}

/**
 * Optional Parameters.
 */
export interface RoleDefinitionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use atScopeAndBelow filter to search below the given
   * scope as well.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ProviderOperationsMetadataGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies whether to expand the values. Default value: 'resourceTypes'.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ProviderOperationsMetadataListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specifies whether to expand the values. Default value: 'resourceTypes'.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface RoleAssignmentsListForScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Use $filter=atScope() to return all role assignments at
   * or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * An interface representing AuthorizationManagementClientOptions.
 */
export interface AuthorizationManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Permissions information.
 * @extends Array<Permission>
 */
export interface PermissionGetResult extends Array<Permission> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * Role definition list operation result.
 * @extends Array<RoleDefinition>
 */
export interface RoleDefinitionListResult extends Array<RoleDefinition> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * Provider operations metadata list
 * @extends Array<ProviderOperationsMetadata>
 */
export interface ProviderOperationsMetadataListResult extends Array<ProviderOperationsMetadata> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * Role assignment list operation result.
 * @extends Array<RoleAssignment>
 */
export interface RoleAssignmentListResult extends Array<RoleAssignment> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type PermissionsListForResourceGroupResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type PermissionsListForResourceResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type PermissionsListForResourceGroupNextResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type PermissionsListForResourceNextResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type RoleDefinitionsDeleteMethodResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoleDefinitionsGetResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RoleDefinitionsCreateOrUpdateResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RoleDefinitionsListResponse = RoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinitionListResult;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type RoleDefinitionsGetByIdResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RoleDefinitionsListNextResponse = RoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinitionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProviderOperationsMetadataGetResponse = ProviderOperationsMetadata & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadata;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ProviderOperationsMetadataListResponse = ProviderOperationsMetadataListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadataListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProviderOperationsMetadataListNextResponse = ProviderOperationsMetadataListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadataListResult;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type RoleAssignmentsListForResourceResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type RoleAssignmentsListForResourceGroupResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type RoleAssignmentsDeleteMethodResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RoleAssignmentsCreateResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoleAssignmentsGetResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the deleteById operation.
 */
export type RoleAssignmentsDeleteByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the createById operation.
 */
export type RoleAssignmentsCreateByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type RoleAssignmentsGetByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RoleAssignmentsListResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForScope operation.
 */
export type RoleAssignmentsListForScopeResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type RoleAssignmentsListForResourceNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type RoleAssignmentsListForResourceGroupNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RoleAssignmentsListNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForScopeNext operation.
 */
export type RoleAssignmentsListForScopeNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};
