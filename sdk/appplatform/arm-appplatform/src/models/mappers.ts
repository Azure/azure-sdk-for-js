/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ClusterResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClusterResourceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      vnetAddons: {
        serializedName: "vnetAddons",
        type: {
          name: "Composite",
          className: "ServiceVNetAddons"
        }
      },
      version: {
        serializedName: "version",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      serviceId: {
        serializedName: "serviceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      powerState: {
        serializedName: "powerState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      zoneRedundant: {
        defaultValue: false,
        serializedName: "zoneRedundant",
        type: {
          name: "Boolean"
        }
      },
      fqdn: {
        serializedName: "fqdn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      marketplaceResource: {
        serializedName: "marketplaceResource",
        type: {
          name: "Composite",
          className: "MarketplaceResource"
        }
      }
    }
  }
};

export const NetworkProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkProfile",
    modelProperties: {
      serviceRuntimeSubnetId: {
        serializedName: "serviceRuntimeSubnetId",
        type: {
          name: "String"
        }
      },
      appSubnetId: {
        serializedName: "appSubnetId",
        type: {
          name: "String"
        }
      },
      serviceCidr: {
        serializedName: "serviceCidr",
        type: {
          name: "String"
        }
      },
      serviceRuntimeNetworkResourceGroup: {
        serializedName: "serviceRuntimeNetworkResourceGroup",
        type: {
          name: "String"
        }
      },
      appNetworkResourceGroup: {
        serializedName: "appNetworkResourceGroup",
        type: {
          name: "String"
        }
      },
      outboundIPs: {
        serializedName: "outboundIPs",
        type: {
          name: "Composite",
          className: "NetworkProfileOutboundIPs"
        }
      },
      requiredTraffics: {
        serializedName: "requiredTraffics",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RequiredTraffic"
            }
          }
        }
      },
      ingressConfig: {
        serializedName: "ingressConfig",
        type: {
          name: "Composite",
          className: "IngressConfig"
        }
      },
      outboundType: {
        serializedName: "outboundType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkProfileOutboundIPs: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkProfileOutboundIPs",
    modelProperties: {
      publicIPs: {
        serializedName: "publicIPs",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RequiredTraffic: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RequiredTraffic",
    modelProperties: {
      protocol: {
        serializedName: "protocol",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "port",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      ips: {
        serializedName: "ips",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fqdns: {
        serializedName: "fqdns",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      direction: {
        serializedName: "direction",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IngressConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IngressConfig",
    modelProperties: {
      readTimeoutInSeconds: {
        serializedName: "readTimeoutInSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServiceVNetAddons: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceVNetAddons",
    modelProperties: {
      logStreamPublicEndpoint: {
        defaultValue: false,
        serializedName: "logStreamPublicEndpoint",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MarketplaceResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceResource",
    modelProperties: {
      plan: {
        serializedName: "plan",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "product",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        defaultValue: "S0",
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        defaultValue: "Standard",
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      }
    }
  }
};

export const TestKeys: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestKeys",
    modelProperties: {
      primaryKey: {
        serializedName: "primaryKey",
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "secondaryKey",
        type: {
          name: "String"
        }
      },
      primaryTestEndpoint: {
        serializedName: "primaryTestEndpoint",
        type: {
          name: "String"
        }
      },
      secondaryTestEndpoint: {
        serializedName: "secondaryTestEndpoint",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const RegenerateTestKeyRequestPayload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegenerateTestKeyRequestPayload",
    modelProperties: {
      keyType: {
        serializedName: "keyType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigServerProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigServerProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      },
      configServer: {
        serializedName: "configServer",
        type: {
          name: "Composite",
          className: "ConfigServerSettings"
        }
      }
    }
  }
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigServerSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigServerSettings",
    modelProperties: {
      gitProperty: {
        serializedName: "gitProperty",
        type: {
          name: "Composite",
          className: "ConfigServerGitProperty"
        }
      }
    }
  }
};

export const ConfigServerGitProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigServerGitProperty",
    modelProperties: {
      repositories: {
        serializedName: "repositories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GitPatternRepository"
            }
          }
        }
      },
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      searchPaths: {
        serializedName: "searchPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      hostKey: {
        serializedName: "hostKey",
        type: {
          name: "String"
        }
      },
      hostKeyAlgorithm: {
        serializedName: "hostKeyAlgorithm",
        type: {
          name: "String"
        }
      },
      privateKey: {
        serializedName: "privateKey",
        type: {
          name: "String"
        }
      },
      strictHostKeyChecking: {
        serializedName: "strictHostKeyChecking",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GitPatternRepository: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitPatternRepository",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      pattern: {
        serializedName: "pattern",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      searchPaths: {
        serializedName: "searchPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      hostKey: {
        serializedName: "hostKey",
        type: {
          name: "String"
        }
      },
      hostKeyAlgorithm: {
        serializedName: "hostKeyAlgorithm",
        type: {
          name: "String"
        }
      },
      privateKey: {
        serializedName: "privateKey",
        type: {
          name: "String"
        }
      },
      strictHostKeyChecking: {
        serializedName: "strictHostKeyChecking",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ConfigServerSettingsValidateResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigServerSettingsValidateResult",
    modelProperties: {
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigServerSettingsErrorRecord"
            }
          }
        }
      }
    }
  }
};

export const ConfigServerSettingsErrorRecord: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigServerSettingsErrorRecord",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      },
      messages: {
        serializedName: "messages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ConfigurationServiceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "ConfigurationServiceResourceRequests"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationServiceInstance"
            }
          }
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "ConfigurationServiceSettings"
        }
      }
    }
  }
};

export const ConfigurationServiceResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceCount: {
        serializedName: "instanceCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ConfigurationServiceInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceInstance",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationServiceSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceSettings",
    modelProperties: {
      gitProperty: {
        serializedName: "gitProperty",
        type: {
          name: "Composite",
          className: "ConfigurationServiceGitProperty"
        }
      }
    }
  }
};

export const ConfigurationServiceGitProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceGitProperty",
    modelProperties: {
      repositories: {
        serializedName: "repositories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationServiceGitRepository"
            }
          }
        }
      }
    }
  }
};

export const ConfigurationServiceGitRepository: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceGitRepository",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      patterns: {
        serializedName: "patterns",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      uri: {
        serializedName: "uri",
        required: true,
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        required: true,
        type: {
          name: "String"
        }
      },
      searchPaths: {
        serializedName: "searchPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      hostKey: {
        serializedName: "hostKey",
        type: {
          name: "String"
        }
      },
      hostKeyAlgorithm: {
        serializedName: "hostKeyAlgorithm",
        type: {
          name: "String"
        }
      },
      privateKey: {
        serializedName: "privateKey",
        type: {
          name: "String"
        }
      },
      strictHostKeyChecking: {
        serializedName: "strictHostKeyChecking",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ConfigurationServiceResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationServiceResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationServiceSettingsValidateResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceSettingsValidateResult",
    modelProperties: {
      gitPropertyValidationResult: {
        serializedName: "gitPropertyValidationResult",
        type: {
          name: "Composite",
          className: "ConfigurationServiceGitPropertyValidateResult"
        }
      }
    }
  }
};

export const ConfigurationServiceGitPropertyValidateResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceGitPropertyValidateResult",
    modelProperties: {
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      gitReposValidationResult: {
        serializedName: "gitReposValidationResult",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ValidationMessages"
            }
          }
        }
      }
    }
  }
};

export const ValidationMessages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationMessages",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      messages: {
        serializedName: "messages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ServiceRegistryProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceRegistryProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "ServiceRegistryResourceRequests"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceRegistryInstance"
            }
          }
        }
      }
    }
  }
};

export const ServiceRegistryResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceRegistryResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceCount: {
        serializedName: "instanceCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServiceRegistryInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceRegistryInstance",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceRegistryResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceRegistryResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceRegistryResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationLiveViewResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationLiveViewResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationLiveViewResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationLiveViewProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationLiveViewProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      components: {
        serializedName: "components",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationLiveViewComponent"
            }
          }
        }
      }
    }
  }
};

export const ApplicationLiveViewComponent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationLiveViewComponent",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "any"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "ApplicationLiveViewResourceRequests"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationLiveViewInstance"
            }
          }
        }
      }
    }
  }
};

export const ApplicationLiveViewResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationLiveViewResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceCount: {
        serializedName: "instanceCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationLiveViewInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationLiveViewInstance",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DevToolPortalResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DevToolPortalResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DevToolPortalResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DevToolPortalProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DevToolPortalProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "DevToolPortalResourceRequests"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DevToolPortalInstance"
            }
          }
        }
      },
      public: {
        defaultValue: false,
        serializedName: "public",
        type: {
          name: "Boolean"
        }
      },
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ssoProperties: {
        serializedName: "ssoProperties",
        type: {
          name: "Composite",
          className: "DevToolPortalSsoProperties"
        }
      },
      features: {
        serializedName: "features",
        type: {
          name: "Composite",
          className: "DevToolPortalFeatureSettings"
        }
      }
    }
  }
};

export const DevToolPortalResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DevToolPortalResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceCount: {
        serializedName: "instanceCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DevToolPortalInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DevToolPortalInstance",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DevToolPortalSsoProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DevToolPortalSsoProperties",
    modelProperties: {
      scopes: {
        serializedName: "scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String"
        }
      },
      metadataUrl: {
        serializedName: "metadataUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DevToolPortalFeatureSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DevToolPortalFeatureSettings",
    modelProperties: {
      applicationAccelerator: {
        serializedName: "applicationAccelerator",
        type: {
          name: "Composite",
          className: "DevToolPortalFeatureDetail"
        }
      },
      applicationLiveView: {
        serializedName: "applicationLiveView",
        type: {
          name: "Composite",
          className: "DevToolPortalFeatureDetail"
        }
      }
    }
  }
};

export const DevToolPortalFeatureDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DevToolPortalFeatureDetail",
    modelProperties: {
      state: {
        defaultValue: "Enabled",
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      route: {
        serializedName: "route",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildServiceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildServiceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildService"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildServiceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildServiceProperties",
    modelProperties: {
      kPackVersion: {
        serializedName: "kPackVersion",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "BuildServicePropertiesResourceRequests"
        }
      }
    }
  }
};

export const BuildServicePropertiesResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildServicePropertiesResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Build"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildProperties",
    modelProperties: {
      relativePath: {
        serializedName: "relativePath",
        type: {
          name: "String"
        }
      },
      builder: {
        serializedName: "builder",
        type: {
          name: "String"
        }
      },
      agentPool: {
        serializedName: "agentPool",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      env: {
        serializedName: "env",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      triggeredBuildResult: {
        serializedName: "triggeredBuildResult",
        type: {
          name: "Composite",
          className: "TriggeredBuildResult"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "BuildResourceRequests"
        }
      }
    }
  }
};

export const TriggeredBuildResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TriggeredBuildResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildResourceRequests",
    modelProperties: {
      cpu: {
        defaultValue: "1",
        serializedName: "cpu",
        type: {
          name: "String"
        }
      },
      memory: {
        defaultValue: "2Gi",
        serializedName: "memory",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildpackBindingProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildpackBindingProperties",
    modelProperties: {
      bindingType: {
        serializedName: "bindingType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      launchProperties: {
        serializedName: "launchProperties",
        type: {
          name: "Composite",
          className: "BuildpackBindingLaunchProperties"
        }
      }
    }
  }
};

export const BuildpackBindingLaunchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildpackBindingLaunchProperties",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const BuildpackBindingResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildpackBindingResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildpackBindingResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildResultCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildResultCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildResultProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildResultProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      },
      buildPodName: {
        serializedName: "buildPodName",
        type: {
          name: "String"
        }
      },
      buildStages: {
        serializedName: "buildStages",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildStageProperties"
            }
          }
        }
      }
    }
  }
};

export const BuildStageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildStageProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      exitCode: {
        serializedName: "exitCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildResultLog: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildResultLog",
    modelProperties: {
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuilderProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuilderProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      stack: {
        serializedName: "stack",
        type: {
          name: "Composite",
          className: "StackProperties"
        }
      },
      buildpackGroups: {
        serializedName: "buildpackGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildpacksGroupProperties"
            }
          }
        }
      }
    }
  }
};

export const StackProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StackProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildpacksGroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildpacksGroupProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      buildpacks: {
        serializedName: "buildpacks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildpackProperties"
            }
          }
        }
      }
    }
  }
};

export const BuildpackProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildpackProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuilderResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuilderResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuilderResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceUploadDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceUploadDefinition",
    modelProperties: {
      relativePath: {
        serializedName: "relativePath",
        type: {
          name: "String"
        }
      },
      uploadUrl: {
        serializedName: "uploadUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SupportedBuildpacksCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportedBuildpacksCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SupportedBuildpackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SupportedBuildpackResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportedBuildpackResourceProperties",
    modelProperties: {
      buildpackId: {
        serializedName: "buildpackId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SupportedStacksCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportedStacksCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SupportedStackResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SupportedStackResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportedStackResourceProperties",
    modelProperties: {
      stackId: {
        serializedName: "stackId",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildServiceAgentPoolResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildServiceAgentPoolResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BuildServiceAgentPoolResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildServiceAgentPoolProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildServiceAgentPoolProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      poolSize: {
        serializedName: "poolSize",
        type: {
          name: "Composite",
          className: "BuildServiceAgentPoolSizeProperties"
        }
      }
    }
  }
};

export const BuildServiceAgentPoolSizeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildServiceAgentPoolSizeProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoringSettingProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringSettingProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      },
      traceEnabled: {
        serializedName: "traceEnabled",
        type: {
          name: "Boolean"
        }
      },
      appInsightsInstrumentationKey: {
        serializedName: "appInsightsInstrumentationKey",
        type: {
          name: "String"
        }
      },
      appInsightsSamplingRate: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        serializedName: "appInsightsSamplingRate",
        type: {
          name: "Number"
        }
      },
      appInsightsAgentVersions: {
        serializedName: "appInsightsAgentVersions",
        type: {
          name: "Composite",
          className: "ApplicationInsightsAgentVersions"
        }
      }
    }
  }
};

export const ApplicationInsightsAgentVersions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationInsightsAgentVersions",
    modelProperties: {
      java: {
        serializedName: "java",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResourceProperties",
    modelProperties: {
      public: {
        serializedName: "public",
        type: {
          name: "Boolean"
        }
      },
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      addonConfigs: {
        serializedName: "addonConfigs",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Dictionary",
              value: {
                type: { name: "Dictionary", value: { type: { name: "any" } } }
              }
            }
          }
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fqdn: {
        serializedName: "fqdn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      httpsOnly: {
        defaultValue: false,
        serializedName: "httpsOnly",
        type: {
          name: "Boolean"
        }
      },
      temporaryDisk: {
        serializedName: "temporaryDisk",
        type: {
          name: "Composite",
          className: "TemporaryDisk"
        }
      },
      persistentDisk: {
        serializedName: "persistentDisk",
        type: {
          name: "Composite",
          className: "PersistentDisk"
        }
      },
      customPersistentDisks: {
        serializedName: "customPersistentDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomPersistentDiskResource"
            }
          }
        }
      },
      enableEndToEndTLS: {
        defaultValue: false,
        serializedName: "enableEndToEndTLS",
        type: {
          name: "Boolean"
        }
      },
      loadedCertificates: {
        serializedName: "loadedCertificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LoadedCertificate"
            }
          }
        }
      },
      vnetAddons: {
        serializedName: "vnetAddons",
        type: {
          name: "Composite",
          className: "AppVNetAddons"
        }
      },
      ingressSettings: {
        serializedName: "ingressSettings",
        type: {
          name: "Composite",
          className: "IngressSettings"
        }
      }
    }
  }
};

export const TemporaryDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TemporaryDisk",
    modelProperties: {
      sizeInGB: {
        constraints: {
          InclusiveMaximum: 5,
          InclusiveMinimum: 0
        },
        serializedName: "sizeInGB",
        type: {
          name: "Number"
        }
      },
      mountPath: {
        defaultValue: "/tmp",
        serializedName: "mountPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PersistentDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PersistentDisk",
    modelProperties: {
      sizeInGB: {
        constraints: {
          InclusiveMaximum: 50,
          InclusiveMinimum: 0
        },
        serializedName: "sizeInGB",
        type: {
          name: "Number"
        }
      },
      usedInGB: {
        constraints: {
          InclusiveMaximum: 50,
          InclusiveMinimum: 0
        },
        serializedName: "usedInGB",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      mountPath: {
        serializedName: "mountPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomPersistentDiskResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomPersistentDiskResource",
    modelProperties: {
      customPersistentDiskProperties: {
        serializedName: "customPersistentDiskProperties",
        type: {
          name: "Composite",
          className: "CustomPersistentDiskProperties"
        }
      },
      storageId: {
        serializedName: "storageId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomPersistentDiskProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomPersistentDiskProperties",
    uberParent: "CustomPersistentDiskProperties",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      mountPath: {
        serializedName: "mountPath",
        required: true,
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      mountOptions: {
        serializedName: "mountOptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const LoadedCertificate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LoadedCertificate",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        required: true,
        type: {
          name: "String"
        }
      },
      loadTrustStore: {
        defaultValue: false,
        serializedName: "loadTrustStore",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AppVNetAddons: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppVNetAddons",
    modelProperties: {
      publicEndpoint: {
        defaultValue: false,
        serializedName: "publicEndpoint",
        type: {
          name: "Boolean"
        }
      },
      publicEndpointUrl: {
        serializedName: "publicEndpointUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IngressSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IngressSettings",
    modelProperties: {
      readTimeoutInSeconds: {
        serializedName: "readTimeoutInSeconds",
        type: {
          name: "Number"
        }
      },
      sendTimeoutInSeconds: {
        serializedName: "sendTimeoutInSeconds",
        type: {
          name: "Number"
        }
      },
      sessionAffinity: {
        serializedName: "sessionAffinity",
        type: {
          name: "String"
        }
      },
      sessionCookieMaxAge: {
        serializedName: "sessionCookieMaxAge",
        type: {
          name: "Number"
        }
      },
      backendProtocol: {
        serializedName: "backendProtocol",
        type: {
          name: "String"
        }
      },
      clientAuth: {
        serializedName: "clientAuth",
        type: {
          name: "Composite",
          className: "IngressSettingsClientAuth"
        }
      }
    }
  }
};

export const IngressSettingsClientAuth: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IngressSettingsClientAuth",
    modelProperties: {
      certificates: {
        serializedName: "certificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ManagedIdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedIdentityProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "UserAssignedManagedIdentity"
            }
          }
        }
      }
    }
  }
};

export const UserAssignedManagedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedManagedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActiveDeploymentCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActiveDeploymentCollection",
    modelProperties: {
      activeDeploymentNames: {
        serializedName: "activeDeploymentNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BindingResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BindingResourceProperties",
    modelProperties: {
      resourceName: {
        serializedName: "resourceName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      bindingParameters: {
        serializedName: "bindingParameters",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } }
          }
        }
      },
      generatedProperties: {
        serializedName: "generatedProperties",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BindingResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BindingResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BindingResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageProperties",
    uberParent: "StorageProperties",
    polymorphicDiscriminator: {
      serializedName: "storageType",
      clientName: "storageType"
    },
    modelProperties: {
      storageType: {
        serializedName: "storageType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CertificateProperties",
    uberParent: "CertificateProperties",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      thumbprint: {
        serializedName: "thumbprint",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      issuer: {
        serializedName: "issuer",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      issuedDate: {
        serializedName: "issuedDate",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expirationDate: {
        serializedName: "expirationDate",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      activateDate: {
        serializedName: "activateDate",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subjectName: {
        serializedName: "subjectName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dnsNames: {
        serializedName: "dnsNames",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CertificateResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameAvailabilityParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NameAvailabilityParameters",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NameAvailability: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NameAvailability",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomDomainProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomDomainProperties",
    modelProperties: {
      thumbprint: {
        serializedName: "thumbprint",
        type: {
          name: "String"
        }
      },
      appName: {
        serializedName: "appName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      certName: {
        serializedName: "certName",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomDomainResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomDomainResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomDomainResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomDomainValidatePayload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomDomainValidatePayload",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomDomainValidateResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomDomainValidateResult",
    modelProperties: {
      isValid: {
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentResourceProperties",
    modelProperties: {
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "UserSourceInfo"
        }
      },
      deploymentSettings: {
        serializedName: "deploymentSettings",
        type: {
          name: "Composite",
          className: "DeploymentSettings"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      active: {
        serializedName: "active",
        type: {
          name: "Boolean"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeploymentInstance"
            }
          }
        }
      }
    }
  }
};

export const UserSourceInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserSourceInfo",
    uberParent: "UserSourceInfo",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentSettings",
    modelProperties: {
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "ResourceRequests"
        }
      },
      environmentVariables: {
        serializedName: "environmentVariables",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      addonConfigs: {
        serializedName: "addonConfigs",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Dictionary",
              value: {
                type: { name: "Dictionary", value: { type: { name: "any" } } }
              }
            }
          }
        }
      },
      livenessProbe: {
        serializedName: "livenessProbe",
        type: {
          name: "Composite",
          className: "Probe"
        }
      },
      readinessProbe: {
        serializedName: "readinessProbe",
        type: {
          name: "Composite",
          className: "Probe"
        }
      },
      startupProbe: {
        serializedName: "startupProbe",
        type: {
          name: "Composite",
          className: "Probe"
        }
      },
      terminationGracePeriodSeconds: {
        defaultValue: 90,
        serializedName: "terminationGracePeriodSeconds",
        type: {
          name: "Number"
        }
      },
      containerProbeSettings: {
        serializedName: "containerProbeSettings",
        type: {
          name: "Composite",
          className: "ContainerProbeSettings"
        }
      }
    }
  }
};

export const ResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Probe: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Probe",
    modelProperties: {
      probeAction: {
        serializedName: "probeAction",
        type: {
          name: "Composite",
          className: "ProbeAction"
        }
      },
      disableProbe: {
        defaultValue: false,
        serializedName: "disableProbe",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      initialDelaySeconds: {
        serializedName: "initialDelaySeconds",
        type: {
          name: "Number"
        }
      },
      periodSeconds: {
        serializedName: "periodSeconds",
        type: {
          name: "Number"
        }
      },
      timeoutSeconds: {
        serializedName: "timeoutSeconds",
        type: {
          name: "Number"
        }
      },
      failureThreshold: {
        serializedName: "failureThreshold",
        type: {
          name: "Number"
        }
      },
      successThreshold: {
        serializedName: "successThreshold",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ProbeAction: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProbeAction",
    uberParent: "ProbeAction",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerProbeSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerProbeSettings",
    modelProperties: {
      disableProbe: {
        serializedName: "disableProbe",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DeploymentInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentInstance",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      discoveryStatus: {
        serializedName: "discoveryStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      zone: {
        serializedName: "zone",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeploymentResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentList",
    modelProperties: {
      deployments: {
        serializedName: "deployments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RemoteDebuggingPayload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteDebuggingPayload",
    modelProperties: {
      port: {
        serializedName: "port",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RemoteDebugging: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteDebugging",
    modelProperties: {
      port: {
        serializedName: "port",
        type: {
          name: "Number"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LogFileUrlResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogFileUrlResponse",
    modelProperties: {
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticParameters",
    modelProperties: {
      appInstance: {
        serializedName: "appInstance",
        type: {
          name: "String"
        }
      },
      filePath: {
        serializedName: "filePath",
        type: {
          name: "String"
        }
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailableOperations: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableOperations",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationDetail"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDetail",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "OperationProperties"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationProperties",
    modelProperties: {
      serviceSpecification: {
        serializedName: "serviceSpecification",
        type: {
          name: "Composite",
          className: "ServiceSpecification"
        }
      }
    }
  }
};

export const ServiceSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceSpecification",
    modelProperties: {
      logSpecifications: {
        serializedName: "logSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogSpecification"
            }
          }
        }
      },
      metricSpecifications: {
        serializedName: "metricSpecifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricSpecification"
            }
          }
        }
      }
    }
  }
};

export const LogSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      blobDuration: {
        serializedName: "blobDuration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricSpecification",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      displayDescription: {
        serializedName: "displayDescription",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      aggregationType: {
        serializedName: "aggregationType",
        type: {
          name: "String"
        }
      },
      supportedAggregationTypes: {
        serializedName: "supportedAggregationTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedTimeGrainTypes: {
        serializedName: "supportedTimeGrainTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fillGapWithZero: {
        serializedName: "fillGapWithZero",
        type: {
          name: "Boolean"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricDimension"
            }
          }
        }
      },
      sourceMdmNamespace: {
        serializedName: "sourceMdmNamespace",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricDimension: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricDimension",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      toBeExportedForShoebox: {
        serializedName: "toBeExportedForShoebox",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AvailableRuntimeVersions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableRuntimeVersions",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SupportedRuntimeVersion"
            }
          }
        }
      }
    }
  }
};

export const SupportedRuntimeVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportedRuntimeVersion",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      platform: {
        serializedName: "platform",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSku"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSku",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Composite",
          className: "SkuCapacity"
        }
      },
      locations: {
        serializedName: "locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      locationInfo: {
        serializedName: "locationInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuLocationInfo"
            }
          }
        }
      },
      restrictions: {
        serializedName: "restrictions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuRestrictions"
            }
          }
        }
      }
    }
  }
};

export const SkuCapacity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuCapacity",
    modelProperties: {
      minimum: {
        serializedName: "minimum",
        required: true,
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      },
      default: {
        serializedName: "default",
        type: {
          name: "Number"
        }
      },
      scaleType: {
        serializedName: "scaleType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuLocationInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuLocationInfo",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      zoneDetails: {
        serializedName: "zoneDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuZoneDetails"
            }
          }
        }
      }
    }
  }
};

export const ResourceSkuZoneDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuZoneDetails",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      capabilities: {
        serializedName: "capabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceSkuCapabilities"
            }
          }
        }
      }
    }
  }
};

export const ResourceSkuCapabilities: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuCapabilities",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuRestrictions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuRestrictions",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      restrictionInfo: {
        serializedName: "restrictionInfo",
        type: {
          name: "Composite",
          className: "ResourceSkuRestrictionInfo"
        }
      },
      reasonCode: {
        serializedName: "reasonCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceSkuRestrictionInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSkuRestrictionInfo",
    modelProperties: {
      locations: {
        serializedName: "locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GatewayProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      public: {
        defaultValue: false,
        serializedName: "public",
        type: {
          name: "Boolean"
        }
      },
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      httpsOnly: {
        defaultValue: false,
        serializedName: "httpsOnly",
        type: {
          name: "Boolean"
        }
      },
      ssoProperties: {
        serializedName: "ssoProperties",
        type: {
          name: "Composite",
          className: "SsoProperties"
        }
      },
      apiMetadataProperties: {
        serializedName: "apiMetadataProperties",
        type: {
          name: "Composite",
          className: "GatewayApiMetadataProperties"
        }
      },
      corsProperties: {
        serializedName: "corsProperties",
        type: {
          name: "Composite",
          className: "GatewayCorsProperties"
        }
      },
      apmTypes: {
        constraints: {
          UniqueItems: true
        },
        serializedName: "apmTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      environmentVariables: {
        serializedName: "environmentVariables",
        type: {
          name: "Composite",
          className: "GatewayPropertiesEnvironmentVariables"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "GatewayResourceRequests"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayInstance"
            }
          }
        }
      },
      operatorProperties: {
        serializedName: "operatorProperties",
        type: {
          name: "Composite",
          className: "GatewayOperatorProperties"
        }
      }
    }
  }
};

export const SsoProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SsoProperties",
    modelProperties: {
      scope: {
        serializedName: "scope",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String"
        }
      },
      issuerUri: {
        serializedName: "issuerUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayApiMetadataProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayApiMetadataProperties",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      documentation: {
        serializedName: "documentation",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      serverUrl: {
        serializedName: "serverUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayCorsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayCorsProperties",
    modelProperties: {
      allowedOrigins: {
        serializedName: "allowedOrigins",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      allowedMethods: {
        serializedName: "allowedMethods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      allowedHeaders: {
        serializedName: "allowedHeaders",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      maxAge: {
        serializedName: "maxAge",
        type: {
          name: "Number"
        }
      },
      allowCredentials: {
        serializedName: "allowCredentials",
        type: {
          name: "Boolean"
        }
      },
      exposedHeaders: {
        serializedName: "exposedHeaders",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GatewayPropertiesEnvironmentVariables: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayPropertiesEnvironmentVariables",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const GatewayResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayResourceRequests",
    modelProperties: {
      cpu: {
        defaultValue: "1",
        serializedName: "cpu",
        type: {
          name: "String"
        }
      },
      memory: {
        defaultValue: "2Gi",
        serializedName: "memory",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayInstance",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayOperatorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayOperatorProperties",
    modelProperties: {
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "GatewayOperatorResourceRequests"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayInstance"
            }
          }
        }
      }
    }
  }
};

export const GatewayOperatorResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayOperatorResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceCount: {
        serializedName: "instanceCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GatewayResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayRouteConfigProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayRouteConfigProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      appResourceId: {
        serializedName: "appResourceId",
        type: {
          name: "String"
        }
      },
      openApi: {
        serializedName: "openApi",
        type: {
          name: "Composite",
          className: "GatewayRouteConfigOpenApiProperties"
        }
      },
      protocol: {
        defaultValue: "HTTP",
        serializedName: "protocol",
        type: {
          name: "String"
        }
      },
      routes: {
        serializedName: "routes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayApiRoute"
            }
          }
        }
      },
      ssoEnabled: {
        serializedName: "ssoEnabled",
        type: {
          name: "Boolean"
        }
      },
      predicates: {
        serializedName: "predicates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      filters: {
        serializedName: "filters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GatewayRouteConfigOpenApiProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayRouteConfigOpenApiProperties",
    modelProperties: {
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayApiRoute: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayApiRoute",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      },
      ssoEnabled: {
        serializedName: "ssoEnabled",
        type: {
          name: "Boolean"
        }
      },
      tokenRelay: {
        serializedName: "tokenRelay",
        type: {
          name: "Boolean"
        }
      },
      predicates: {
        serializedName: "predicates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      filters: {
        serializedName: "filters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GatewayRouteConfigResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayRouteConfigResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayRouteConfigResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayCustomDomainProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayCustomDomainProperties",
    modelProperties: {
      thumbprint: {
        serializedName: "thumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayCustomDomainResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayCustomDomainResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GatewayCustomDomainResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiPortalProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiPortalProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      public: {
        defaultValue: false,
        serializedName: "public",
        type: {
          name: "Boolean"
        }
      },
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      httpsOnly: {
        defaultValue: false,
        serializedName: "httpsOnly",
        type: {
          name: "Boolean"
        }
      },
      gatewayIds: {
        serializedName: "gatewayIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sourceUrls: {
        serializedName: "sourceUrls",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      ssoProperties: {
        serializedName: "ssoProperties",
        type: {
          name: "Composite",
          className: "SsoProperties"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "ApiPortalResourceRequests"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiPortalInstance"
            }
          }
        }
      }
    }
  }
};

export const ApiPortalResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiPortalResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiPortalInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiPortalInstance",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiPortalResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiPortalResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiPortalResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiPortalCustomDomainProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiPortalCustomDomainProperties",
    modelProperties: {
      thumbprint: {
        serializedName: "thumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiPortalCustomDomainResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiPortalCustomDomainResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiPortalCustomDomainResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationAcceleratorResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationAcceleratorResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationAcceleratorResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationAcceleratorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationAcceleratorProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      components: {
        serializedName: "components",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationAcceleratorComponent"
            }
          }
        }
      }
    }
  }
};

export const ApplicationAcceleratorComponent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationAcceleratorComponent",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceRequests: {
        serializedName: "resourceRequests",
        type: {
          name: "Composite",
          className: "ApplicationAcceleratorResourceRequests"
        }
      },
      instances: {
        serializedName: "instances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationAcceleratorInstance"
            }
          }
        }
      }
    }
  }
};

export const ApplicationAcceleratorResourceRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationAcceleratorResourceRequests",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceCount: {
        serializedName: "instanceCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ApplicationAcceleratorInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationAcceleratorInstance",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomizedAcceleratorResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomizedAcceleratorResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomizedAcceleratorResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomizedAcceleratorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomizedAcceleratorProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "iconUrl",
        type: {
          name: "String"
        }
      },
      acceleratorTags: {
        serializedName: "acceleratorTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      gitRepository: {
        serializedName: "gitRepository",
        type: {
          name: "Composite",
          className: "AcceleratorGitRepository"
        }
      }
    }
  }
};

export const AcceleratorGitRepository: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcceleratorGitRepository",
    modelProperties: {
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      intervalInSeconds: {
        serializedName: "intervalInSeconds",
        type: {
          name: "Number"
        }
      },
      branch: {
        serializedName: "branch",
        type: {
          name: "String"
        }
      },
      commit: {
        serializedName: "commit",
        type: {
          name: "String"
        }
      },
      gitTag: {
        serializedName: "gitTag",
        type: {
          name: "String"
        }
      },
      authSetting: {
        serializedName: "authSetting",
        type: {
          name: "Composite",
          className: "AcceleratorAuthSetting"
        }
      }
    }
  }
};

export const AcceleratorAuthSetting: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AcceleratorAuthSetting",
    uberParent: "AcceleratorAuthSetting",
    polymorphicDiscriminator: {
      serializedName: "authType",
      clientName: "authType"
    },
    modelProperties: {
      authType: {
        serializedName: "authType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomizedAcceleratorValidateResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomizedAcceleratorValidateResult",
    modelProperties: {
      state: {
        defaultValue: "Valid",
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PredefinedAcceleratorResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PredefinedAcceleratorResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PredefinedAcceleratorResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PredefinedAcceleratorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PredefinedAcceleratorProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      iconUrl: {
        serializedName: "iconUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      acceleratorTags: {
        serializedName: "acceleratorTags",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      state: {
        defaultValue: "Enabled",
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomContainer",
    modelProperties: {
      server: {
        serializedName: "server",
        type: {
          name: "String"
        }
      },
      containerImage: {
        serializedName: "containerImage",
        type: {
          name: "String"
        }
      },
      command: {
        serializedName: "command",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      args: {
        serializedName: "args",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      imageRegistryCredential: {
        serializedName: "imageRegistryCredential",
        type: {
          name: "Composite",
          className: "ImageRegistryCredential"
        }
      },
      languageFramework: {
        serializedName: "languageFramework",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageRegistryCredential: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageRegistryCredential",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AzureFileVolume: coreClient.CompositeMapper = {
  serializedName: "AzureFileVolume",
  type: {
    name: "Composite",
    className: "AzureFileVolume",
    uberParent: "CustomPersistentDiskProperties",
    polymorphicDiscriminator:
      CustomPersistentDiskProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...CustomPersistentDiskProperties.type.modelProperties,
      shareName: {
        serializedName: "shareName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageAccount: coreClient.CompositeMapper = {
  serializedName: "StorageAccount",
  type: {
    name: "Composite",
    className: "StorageAccount",
    uberParent: "StorageProperties",
    polymorphicDiscriminator: StorageProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...StorageProperties.type.modelProperties,
      accountName: {
        serializedName: "accountName",
        required: true,
        type: {
          name: "String"
        }
      },
      accountKey: {
        serializedName: "accountKey",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultCertificateProperties: coreClient.CompositeMapper = {
  serializedName: "KeyVaultCertificate",
  type: {
    name: "Composite",
    className: "KeyVaultCertificateProperties",
    uberParent: "CertificateProperties",
    polymorphicDiscriminator:
      CertificateProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...CertificateProperties.type.modelProperties,
      vaultUri: {
        serializedName: "vaultUri",
        required: true,
        type: {
          name: "String"
        }
      },
      keyVaultCertName: {
        serializedName: "keyVaultCertName",
        required: true,
        type: {
          name: "String"
        }
      },
      certVersion: {
        serializedName: "certVersion",
        type: {
          name: "String"
        }
      },
      excludePrivateKey: {
        defaultValue: false,
        serializedName: "excludePrivateKey",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ContentCertificateProperties: coreClient.CompositeMapper = {
  serializedName: "ContentCertificate",
  type: {
    name: "Composite",
    className: "ContentCertificateProperties",
    uberParent: "CertificateProperties",
    polymorphicDiscriminator:
      CertificateProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...CertificateProperties.type.modelProperties,
      content: {
        serializedName: "content",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UploadedUserSourceInfo: coreClient.CompositeMapper = {
  serializedName: "UploadedUserSourceInfo",
  type: {
    name: "Composite",
    className: "UploadedUserSourceInfo",
    uberParent: "UserSourceInfo",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    modelProperties: {
      ...UserSourceInfo.type.modelProperties,
      relativePath: {
        serializedName: "relativePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildResultUserSourceInfo: coreClient.CompositeMapper = {
  serializedName: "BuildResult",
  type: {
    name: "Composite",
    className: "BuildResultUserSourceInfo",
    uberParent: "UserSourceInfo",
    polymorphicDiscriminator: UserSourceInfo.type.polymorphicDiscriminator,
    modelProperties: {
      ...UserSourceInfo.type.modelProperties,
      buildResultId: {
        serializedName: "buildResultId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomContainerUserSourceInfo: coreClient.CompositeMapper = {
  serializedName: "Container",
  type: {
    name: "Composite",
    className: "CustomContainerUserSourceInfo",
    uberParent: "UserSourceInfo",
    polymorphicDiscriminator: UserSourceInfo.type.polymorphicDiscriminator,
    modelProperties: {
      ...UserSourceInfo.type.modelProperties,
      customContainer: {
        serializedName: "customContainer",
        type: {
          name: "Composite",
          className: "CustomContainer"
        }
      }
    }
  }
};

export const HttpGetAction: coreClient.CompositeMapper = {
  serializedName: "HTTPGetAction",
  type: {
    name: "Composite",
    className: "HttpGetAction",
    uberParent: "ProbeAction",
    polymorphicDiscriminator: ProbeAction.type.polymorphicDiscriminator,
    modelProperties: {
      ...ProbeAction.type.modelProperties,
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      scheme: {
        serializedName: "scheme",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExecAction: coreClient.CompositeMapper = {
  serializedName: "ExecAction",
  type: {
    name: "Composite",
    className: "ExecAction",
    uberParent: "ProbeAction",
    polymorphicDiscriminator: ProbeAction.type.polymorphicDiscriminator,
    modelProperties: {
      ...ProbeAction.type.modelProperties,
      command: {
        serializedName: "command",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TCPSocketAction: coreClient.CompositeMapper = {
  serializedName: "TCPSocketAction",
  type: {
    name: "Composite",
    className: "TCPSocketAction",
    uberParent: "ProbeAction",
    polymorphicDiscriminator: ProbeAction.type.polymorphicDiscriminator,
    modelProperties: {
      ...ProbeAction.type.modelProperties
    }
  }
};

export const AcceleratorPublicSetting: coreClient.CompositeMapper = {
  serializedName: "Public",
  type: {
    name: "Composite",
    className: "AcceleratorPublicSetting",
    uberParent: "AcceleratorAuthSetting",
    polymorphicDiscriminator:
      AcceleratorAuthSetting.type.polymorphicDiscriminator,
    modelProperties: {
      ...AcceleratorAuthSetting.type.modelProperties
    }
  }
};

export const AcceleratorBasicAuthSetting: coreClient.CompositeMapper = {
  serializedName: "BasicAuth",
  type: {
    name: "Composite",
    className: "AcceleratorBasicAuthSetting",
    uberParent: "AcceleratorAuthSetting",
    polymorphicDiscriminator:
      AcceleratorAuthSetting.type.polymorphicDiscriminator,
    modelProperties: {
      ...AcceleratorAuthSetting.type.modelProperties,
      username: {
        serializedName: "username",
        required: true,
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AcceleratorSshSetting: coreClient.CompositeMapper = {
  serializedName: "SSH",
  type: {
    name: "Composite",
    className: "AcceleratorSshSetting",
    uberParent: "AcceleratorAuthSetting",
    polymorphicDiscriminator:
      AcceleratorAuthSetting.type.polymorphicDiscriminator,
    modelProperties: {
      ...AcceleratorAuthSetting.type.modelProperties,
      hostKey: {
        serializedName: "hostKey",
        type: {
          name: "String"
        }
      },
      hostKeyAlgorithm: {
        serializedName: "hostKeyAlgorithm",
        type: {
          name: "String"
        }
      },
      privateKey: {
        serializedName: "privateKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ClusterResourceProperties"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const ConfigServerResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigServerResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ConfigServerProperties"
        }
      }
    }
  }
};

export const ConfigurationServiceResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationServiceResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ConfigurationServiceProperties"
        }
      }
    }
  }
};

export const ServiceRegistryResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceRegistryResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServiceRegistryProperties"
        }
      }
    }
  }
};

export const ApplicationLiveViewResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationLiveViewResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApplicationLiveViewProperties"
        }
      }
    }
  }
};

export const DevToolPortalResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DevToolPortalResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DevToolPortalProperties"
        }
      }
    }
  }
};

export const BuildService: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildService",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BuildServiceProperties"
        }
      }
    }
  }
};

export const Build: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Build",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BuildProperties"
        }
      }
    }
  }
};

export const BuildpackBindingResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildpackBindingResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BuildpackBindingProperties"
        }
      }
    }
  }
};

export const BuildResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildResult",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BuildResultProperties"
        }
      }
    }
  }
};

export const BuilderResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuilderResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BuilderProperties"
        }
      }
    }
  }
};

export const SupportedBuildpackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportedBuildpackResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SupportedBuildpackResourceProperties"
        }
      }
    }
  }
};

export const SupportedStackResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportedStackResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SupportedStackResourceProperties"
        }
      }
    }
  }
};

export const BuildServiceAgentPoolResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildServiceAgentPoolResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BuildServiceAgentPoolProperties"
        }
      }
    }
  }
};

export const MonitoringSettingResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringSettingResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitoringSettingProperties"
        }
      }
    }
  }
};

export const AppResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AppResourceProperties"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentityProperties"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BindingResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BindingResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BindingResourceProperties"
        }
      }
    }
  }
};

export const StorageResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "StorageProperties"
        }
      }
    }
  }
};

export const CertificateResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CertificateResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CertificateProperties"
        }
      }
    }
  }
};

export const CustomDomainResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomDomainResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CustomDomainProperties"
        }
      }
    }
  }
};

export const DeploymentResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DeploymentResourceProperties"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const GatewayResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GatewayProperties"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const GatewayRouteConfigResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayRouteConfigResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GatewayRouteConfigProperties"
        }
      }
    }
  }
};

export const GatewayCustomDomainResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayCustomDomainResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GatewayCustomDomainProperties"
        }
      }
    }
  }
};

export const ApiPortalResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiPortalResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApiPortalProperties"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const ApiPortalCustomDomainResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiPortalCustomDomainResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApiPortalCustomDomainProperties"
        }
      }
    }
  }
};

export const ApplicationAcceleratorResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationAcceleratorResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApplicationAcceleratorProperties"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const CustomizedAcceleratorResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomizedAcceleratorResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CustomizedAcceleratorProperties"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const PredefinedAcceleratorResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PredefinedAcceleratorResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PredefinedAcceleratorProperties"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const JarUploadedUserSourceInfo: coreClient.CompositeMapper = {
  serializedName: "Jar",
  type: {
    name: "Composite",
    className: "JarUploadedUserSourceInfo",
    uberParent: "UploadedUserSourceInfo",
    polymorphicDiscriminator:
      UploadedUserSourceInfo.type.polymorphicDiscriminator,
    modelProperties: {
      ...UploadedUserSourceInfo.type.modelProperties,
      runtimeVersion: {
        serializedName: "runtimeVersion",
        type: {
          name: "String"
        }
      },
      jvmOptions: {
        serializedName: "jvmOptions",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceUploadedUserSourceInfo: coreClient.CompositeMapper = {
  serializedName: "Source",
  type: {
    name: "Composite",
    className: "SourceUploadedUserSourceInfo",
    uberParent: "UploadedUserSourceInfo",
    polymorphicDiscriminator:
      UploadedUserSourceInfo.type.polymorphicDiscriminator,
    modelProperties: {
      ...UploadedUserSourceInfo.type.modelProperties,
      artifactSelector: {
        serializedName: "artifactSelector",
        type: {
          name: "String"
        }
      },
      runtimeVersion: {
        serializedName: "runtimeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetCoreZipUploadedUserSourceInfo: coreClient.CompositeMapper = {
  serializedName: "NetCoreZip",
  type: {
    name: "Composite",
    className: "NetCoreZipUploadedUserSourceInfo",
    uberParent: "UploadedUserSourceInfo",
    polymorphicDiscriminator:
      UploadedUserSourceInfo.type.polymorphicDiscriminator,
    modelProperties: {
      ...UploadedUserSourceInfo.type.modelProperties,
      netCoreMainEntryPath: {
        serializedName: "netCoreMainEntryPath",
        type: {
          name: "String"
        }
      },
      runtimeVersion: {
        serializedName: "runtimeVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export let discriminators = {
  CustomPersistentDiskProperties: CustomPersistentDiskProperties,
  StorageProperties: StorageProperties,
  CertificateProperties: CertificateProperties,
  UserSourceInfo: UserSourceInfo,
  ProbeAction: ProbeAction,
  AcceleratorAuthSetting: AcceleratorAuthSetting,
  "CustomPersistentDiskProperties.AzureFileVolume": AzureFileVolume,
  "StorageProperties.StorageAccount": StorageAccount,
  "CertificateProperties.KeyVaultCertificate": KeyVaultCertificateProperties,
  "CertificateProperties.ContentCertificate": ContentCertificateProperties,
  "UserSourceInfo.UploadedUserSourceInfo": UploadedUserSourceInfo,
  "UserSourceInfo.BuildResult": BuildResultUserSourceInfo,
  "UserSourceInfo.Container": CustomContainerUserSourceInfo,
  "ProbeAction.HTTPGetAction": HttpGetAction,
  "ProbeAction.ExecAction": ExecAction,
  "ProbeAction.TCPSocketAction": TCPSocketAction,
  "AcceleratorAuthSetting.Public": AcceleratorPublicSetting,
  "AcceleratorAuthSetting.BasicAuth": AcceleratorBasicAuthSetting,
  "AcceleratorAuthSetting.SSH": AcceleratorSshSetting,
  "UploadedUserSourceInfo.Jar": JarUploadedUserSourceInfo,
  "UploadedUserSourceInfo.Source": SourceUploadedUserSourceInfo,
  "UploadedUserSourceInfo.NetCoreZip": NetCoreZipUploadedUserSourceInfo
};
