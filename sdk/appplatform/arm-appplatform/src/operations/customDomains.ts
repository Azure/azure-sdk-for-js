/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/customDomainsMappers";
import * as Parameters from "../models/parameters";
import { AppPlatformManagementClientContext } from "../appPlatformManagementClientContext";

/** Class representing a CustomDomains. */
export class CustomDomains {
  private readonly client: AppPlatformManagementClientContext;

  /**
   * Create a CustomDomains.
   * @param {AppPlatformManagementClientContext} client Reference to the service client.
   */
  constructor(client: AppPlatformManagementClientContext) {
    this.client = client;
  }

  /**
   * Get the custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsGetResponse>
   */
  get(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param callback The callback
   */
  get(resourceGroupName: string, serviceName: string, appName: string, domainName: string, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomDomainResource>): void;
  get(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CustomDomainResource>, callback?: msRest.ServiceCallback<Models.CustomDomainResource>): Promise<Models.CustomDomainsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.CustomDomainsGetResponse>;
  }

  /**
   * Create or update custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param domainResource Parameters for the create or update operation
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, serviceName: string, appName: string, domainName: string, domainResource: Models.CustomDomainResource, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,serviceName,appName,domainName,domainResource,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.CustomDomainsCreateOrUpdateResponse>;
  }

  /**
   * Delete the custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,serviceName,appName,domainName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Update custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param domainResource Parameters for the create or update operation
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsUpdateResponse>
   */
  update(resourceGroupName: string, serviceName: string, appName: string, domainName: string, domainResource: Models.CustomDomainResource, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsUpdateResponse> {
    return this.beginUpdate(resourceGroupName,serviceName,appName,domainName,domainResource,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.CustomDomainsUpdateResponse>;
  }

  /**
   * List the custom domains of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsListResponse>
   */
  list(resourceGroupName: string, serviceName: string, appName: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsListResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param callback The callback
   */
  list(resourceGroupName: string, serviceName: string, appName: string, callback: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, serviceName: string, appName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): void;
  list(resourceGroupName: string, serviceName: string, appName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CustomDomainResourceCollection>, callback?: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): Promise<Models.CustomDomainsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serviceName,
        appName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.CustomDomainsListResponse>;
  }

  /**
   * Create or update custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param domainResource Parameters for the create or update operation
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, serviceName: string, appName: string, domainName: string, domainResource: Models.CustomDomainResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        domainResource,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * Delete the custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, serviceName: string, appName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Update custom domain of one lifecycle application.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param domainName The name of the custom domain resource.
   * @param domainResource Parameters for the create or update operation
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(resourceGroupName: string, serviceName: string, appName: string, domainName: string, domainResource: Models.CustomDomainResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        serviceName,
        appName,
        domainName,
        domainResource,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * List the custom domains of one lifecycle application.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomDomainsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.CustomDomainsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CustomDomainResourceCollection>, callback?: msRest.ServiceCallback<Models.CustomDomainResourceCollection>): Promise<Models.CustomDomainsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.CustomDomainsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResourceCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "domainResource",
    mapper: {
      ...Mappers.CustomDomainResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResource
    },
    201: {
      bodyMapper: Mappers.CustomDomainResource
    },
    202: {
      bodyMapper: Mappers.CustomDomainResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serviceName,
    Parameters.appName,
    Parameters.domainName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "domainResource",
    mapper: {
      ...Mappers.CustomDomainResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResource
    },
    202: {
      bodyMapper: Mappers.CustomDomainResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CustomDomainResourceCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
