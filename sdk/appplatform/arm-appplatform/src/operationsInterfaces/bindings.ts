/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  BindingResource,
  BindingsListOptionalParams,
  BindingsGetOptionalParams,
  BindingsGetResponse,
  BindingsCreateOrUpdateOptionalParams,
  BindingsCreateOrUpdateResponse,
  BindingsDeleteOptionalParams,
  BindingsUpdateOptionalParams,
  BindingsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Bindings. */
export interface Bindings {
  /**
   * Handles requests to list all resources in an App.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    options?: BindingsListOptionalParams
  ): PagedAsyncIterableIterator<BindingResource>;
  /**
   * Get a Binding and its properties.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param bindingName The name of the Binding resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    bindingName: string,
    options?: BindingsGetOptionalParams
  ): Promise<BindingsGetResponse>;
  /**
   * Create a new Binding or update an exiting Binding.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param bindingName The name of the Binding resource.
   * @param bindingResource Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    bindingName: string,
    bindingResource: BindingResource,
    options?: BindingsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<BindingsCreateOrUpdateResponse>,
      BindingsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new Binding or update an exiting Binding.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param bindingName The name of the Binding resource.
   * @param bindingResource Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    bindingName: string,
    bindingResource: BindingResource,
    options?: BindingsCreateOrUpdateOptionalParams
  ): Promise<BindingsCreateOrUpdateResponse>;
  /**
   * Operation to delete a Binding.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param bindingName The name of the Binding resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    bindingName: string,
    options?: BindingsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Operation to delete a Binding.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param bindingName The name of the Binding resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    bindingName: string,
    options?: BindingsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Operation to update an exiting Binding.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param bindingName The name of the Binding resource.
   * @param bindingResource Parameters for the update operation
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    bindingName: string,
    bindingResource: BindingResource,
    options?: BindingsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<BindingsUpdateResponse>,
      BindingsUpdateResponse
    >
  >;
  /**
   * Operation to update an exiting Binding.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param bindingName The name of the Binding resource.
   * @param bindingResource Parameters for the update operation
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    bindingName: string,
    bindingResource: BindingResource,
    options?: BindingsUpdateOptionalParams
  ): Promise<BindingsUpdateResponse>;
}
