/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  BuildService,
  BuildServiceListBuildServicesOptionalParams,
  Build,
  BuildServiceListBuildsOptionalParams,
  BuildResult,
  BuildServiceListBuildResultsOptionalParams,
  BuildServiceGetBuildServiceOptionalParams,
  BuildServiceGetBuildServiceResponse,
  BuildServiceCreateOrUpdateOptionalParams,
  BuildServiceCreateOrUpdateResponse,
  BuildServiceGetBuildOptionalParams,
  BuildServiceGetBuildResponse,
  BuildServiceCreateOrUpdateBuildOptionalParams,
  BuildServiceCreateOrUpdateBuildResponse,
  BuildServiceDeleteBuildOptionalParams,
  BuildServiceGetBuildResultOptionalParams,
  BuildServiceGetBuildResultResponse,
  BuildServiceGetBuildResultLogOptionalParams,
  BuildServiceGetBuildResultLogResponse,
  BuildServiceGetResourceUploadUrlOptionalParams,
  BuildServiceGetResourceUploadUrlResponse,
  BuildServiceListSupportedBuildpacksOptionalParams,
  BuildServiceListSupportedBuildpacksResponse,
  BuildServiceGetSupportedBuildpackOptionalParams,
  BuildServiceGetSupportedBuildpackResponse,
  BuildServiceListSupportedStacksOptionalParams,
  BuildServiceListSupportedStacksResponse,
  BuildServiceGetSupportedStackOptionalParams,
  BuildServiceGetSupportedStackResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BuildServiceOperations. */
export interface BuildServiceOperations {
  /**
   * List build services resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param options The options parameters.
   */
  listBuildServices(
    resourceGroupName: string,
    serviceName: string,
    options?: BuildServiceListBuildServicesOptionalParams
  ): PagedAsyncIterableIterator<BuildService>;
  /**
   * List KPack builds.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param options The options parameters.
   */
  listBuilds(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    options?: BuildServiceListBuildsOptionalParams
  ): PagedAsyncIterableIterator<Build>;
  /**
   * List KPack build results.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildName The name of the build resource.
   * @param options The options parameters.
   */
  listBuildResults(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildName: string,
    options?: BuildServiceListBuildResultsOptionalParams
  ): PagedAsyncIterableIterator<BuildResult>;
  /**
   * Get a build service resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param options The options parameters.
   */
  getBuildService(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    options?: BuildServiceGetBuildServiceOptionalParams
  ): Promise<BuildServiceGetBuildServiceResponse>;
  /**
   * Create a build service resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildService Parameters for the create operation
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildService: BuildService,
    options?: BuildServiceCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<BuildServiceCreateOrUpdateResponse>,
      BuildServiceCreateOrUpdateResponse
    >
  >;
  /**
   * Create a build service resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildService Parameters for the create operation
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildService: BuildService,
    options?: BuildServiceCreateOrUpdateOptionalParams
  ): Promise<BuildServiceCreateOrUpdateResponse>;
  /**
   * Get a KPack build.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildName The name of the build resource.
   * @param options The options parameters.
   */
  getBuild(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildName: string,
    options?: BuildServiceGetBuildOptionalParams
  ): Promise<BuildServiceGetBuildResponse>;
  /**
   * Create or update a KPack build.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildName The name of the build resource.
   * @param build Parameters for the create or update operation
   * @param options The options parameters.
   */
  createOrUpdateBuild(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildName: string,
    build: Build,
    options?: BuildServiceCreateOrUpdateBuildOptionalParams
  ): Promise<BuildServiceCreateOrUpdateBuildResponse>;
  /**
   * delete a KPack build.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildName The name of the build resource.
   * @param options The options parameters.
   */
  beginDeleteBuild(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildName: string,
    options?: BuildServiceDeleteBuildOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * delete a KPack build.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildName The name of the build resource.
   * @param options The options parameters.
   */
  beginDeleteBuildAndWait(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildName: string,
    options?: BuildServiceDeleteBuildOptionalParams
  ): Promise<void>;
  /**
   * Get a KPack build result.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildName The name of the build resource.
   * @param buildResultName The name of the build result resource.
   * @param options The options parameters.
   */
  getBuildResult(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildName: string,
    buildResultName: string,
    options?: BuildServiceGetBuildResultOptionalParams
  ): Promise<BuildServiceGetBuildResultResponse>;
  /**
   * Get a KPack build result log download URL.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildName The name of the build resource.
   * @param buildResultName The name of the build result resource.
   * @param options The options parameters.
   */
  getBuildResultLog(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildName: string,
    buildResultName: string,
    options?: BuildServiceGetBuildResultLogOptionalParams
  ): Promise<BuildServiceGetBuildResultLogResponse>;
  /**
   * Get an resource upload URL for build service, which may be artifacts or source archive.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param options The options parameters.
   */
  getResourceUploadUrl(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    options?: BuildServiceGetResourceUploadUrlOptionalParams
  ): Promise<BuildServiceGetResourceUploadUrlResponse>;
  /**
   * Get all supported buildpacks.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param options The options parameters.
   */
  listSupportedBuildpacks(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    options?: BuildServiceListSupportedBuildpacksOptionalParams
  ): Promise<BuildServiceListSupportedBuildpacksResponse>;
  /**
   * Get the supported buildpack resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param buildpackName The name of the buildpack resource.
   * @param options The options parameters.
   */
  getSupportedBuildpack(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    buildpackName: string,
    options?: BuildServiceGetSupportedBuildpackOptionalParams
  ): Promise<BuildServiceGetSupportedBuildpackResponse>;
  /**
   * Get all supported stacks.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param options The options parameters.
   */
  listSupportedStacks(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    options?: BuildServiceListSupportedStacksOptionalParams
  ): Promise<BuildServiceListSupportedStacksResponse>;
  /**
   * Get the supported stack resource.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param buildServiceName The name of the build service resource.
   * @param stackName The name of the stack resource.
   * @param options The options parameters.
   */
  getSupportedStack(
    resourceGroupName: string,
    serviceName: string,
    buildServiceName: string,
    stackName: string,
    options?: BuildServiceGetSupportedStackOptionalParams
  ): Promise<BuildServiceGetSupportedStackResponse>;
}
