/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  AppResource,
  AppsListOptionalParams,
  AppsGetOptionalParams,
  AppsGetResponse,
  AppsCreateOrUpdateOptionalParams,
  AppsCreateOrUpdateResponse,
  AppsDeleteOptionalParams,
  AppsUpdateOptionalParams,
  AppsUpdateResponse,
  AppsGetResourceUploadUrlOptionalParams,
  AppsGetResourceUploadUrlResponse,
  ActiveDeploymentCollection,
  AppsSetActiveDeploymentsOptionalParams,
  AppsSetActiveDeploymentsResponse,
  CustomDomainValidatePayload,
  AppsValidateDomainOptionalParams,
  AppsValidateDomainResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Apps. */
export interface Apps {
  /**
   * Handles requests to list all resources in a Service.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    serviceName: string,
    options?: AppsListOptionalParams
  ): PagedAsyncIterableIterator<AppResource>;
  /**
   * Get an App and its properties.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    options?: AppsGetOptionalParams
  ): Promise<AppsGetResponse>;
  /**
   * Create a new App or update an exiting App.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param appResource Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    appResource: AppResource,
    options?: AppsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AppsCreateOrUpdateResponse>,
      AppsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new App or update an exiting App.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param appResource Parameters for the create or update operation
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    appResource: AppResource,
    options?: AppsCreateOrUpdateOptionalParams
  ): Promise<AppsCreateOrUpdateResponse>;
  /**
   * Operation to delete an App.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    options?: AppsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Operation to delete an App.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    options?: AppsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Operation to update an exiting App.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param appResource Parameters for the update operation
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    appResource: AppResource,
    options?: AppsUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<AppsUpdateResponse>, AppsUpdateResponse>
  >;
  /**
   * Operation to update an exiting App.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param appResource Parameters for the update operation
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    appResource: AppResource,
    options?: AppsUpdateOptionalParams
  ): Promise<AppsUpdateResponse>;
  /**
   * Get an resource upload URL for an App, which may be artifacts or source archive.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param options The options parameters.
   */
  getResourceUploadUrl(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    options?: AppsGetResourceUploadUrlOptionalParams
  ): Promise<AppsGetResourceUploadUrlResponse>;
  /**
   * Set existing Deployment under the app as active
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param activeDeploymentCollection A list of Deployment name to be active.
   * @param options The options parameters.
   */
  beginSetActiveDeployments(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    activeDeploymentCollection: ActiveDeploymentCollection,
    options?: AppsSetActiveDeploymentsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AppsSetActiveDeploymentsResponse>,
      AppsSetActiveDeploymentsResponse
    >
  >;
  /**
   * Set existing Deployment under the app as active
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param activeDeploymentCollection A list of Deployment name to be active.
   * @param options The options parameters.
   */
  beginSetActiveDeploymentsAndWait(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    activeDeploymentCollection: ActiveDeploymentCollection,
    options?: AppsSetActiveDeploymentsOptionalParams
  ): Promise<AppsSetActiveDeploymentsResponse>;
  /**
   * Check the resource name is valid as well as not in use.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serviceName The name of the Service resource.
   * @param appName The name of the App resource.
   * @param validatePayload Custom domain payload to be validated
   * @param options The options parameters.
   */
  validateDomain(
    resourceGroupName: string,
    serviceName: string,
    appName: string,
    validatePayload: CustomDomainValidatePayload,
    options?: AppsValidateDomainOptionalParams
  ): Promise<AppsValidateDomainResponse>;
}
