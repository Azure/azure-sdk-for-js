/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  GatewayRouteConfigResource,
  AppPlatformManagementClient
} from "@azure/arm-appplatform";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Create the default Spring Cloud Gateway route configs or update the existing Spring Cloud Gateway route configs.
 *
 * @summary Create the default Spring Cloud Gateway route configs or update the existing Spring Cloud Gateway route configs.
 * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-11-01-preview/examples/GatewayRouteConfigs_CreateOrUpdate.json
 */
async function gatewayRouteConfigsCreateOrUpdate() {
  const subscriptionId =
    process.env["APPPLATFORM_SUBSCRIPTION_ID"] ||
    "00000000-0000-0000-0000-000000000000";
  const resourceGroupName =
    process.env["APPPLATFORM_RESOURCE_GROUP"] || "myResourceGroup";
  const serviceName = "myservice";
  const gatewayName = "default";
  const routeConfigName = "myRouteConfig";
  const gatewayRouteConfigResource: GatewayRouteConfigResource = {
    properties: {
      appResourceId:
        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myApp",
      openApi: {
        uri:
          "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/examples/v3.0/petstore.json"
      },
      routes: [
        {
          filters: ["StripPrefix=2", "RateLimit=1,1s"],
          predicates: ["Path=/api5/customer/**"],
          ssoEnabled: true,
          title: "myApp route config"
        }
      ],
      protocol: "HTTPS"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new AppPlatformManagementClient(credential, subscriptionId);
  const result = await client.gatewayRouteConfigs.beginCreateOrUpdateAndWait(
    resourceGroupName,
    serviceName,
    gatewayName,
    routeConfigName,
    gatewayRouteConfigResource
  );
  console.log(result);
}

async function main() {
  gatewayRouteConfigsCreateOrUpdate();
}

main().catch(console.error);
