/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { AppPlatformManagementClient } = require("@azure/arm-appplatform");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Check the customized accelerator are valid.
 *
 * @summary Check the customized accelerator are valid.
 * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-11-01-preview/examples/CustomizedAccelerators_Validate.json
 */
async function customizedAcceleratorsValidate() {
  const subscriptionId =
    process.env["APPPLATFORM_SUBSCRIPTION_ID"] || "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = process.env["APPPLATFORM_RESOURCE_GROUP"] || "myResourceGroup";
  const serviceName = "myservice";
  const applicationAcceleratorName = "default";
  const customizedAcceleratorName = "acc-name";
  const properties = {
    description: "acc-desc",
    acceleratorTags: ["tag-a", "tag-b"],
    displayName: "acc-name",
    gitRepository: {
      authSetting: {
        authType: "SSH",
        hostKey: "git-auth-hostkey",
        hostKeyAlgorithm: "git-auth-algorithm",
        privateKey: "git-auth-privatekey",
      },
      branch: "git-branch",
      commit: "12345",
      gitTag: "git-tag",
      intervalInSeconds: 70,
      url: "git-url",
    },
    iconUrl: "acc-icon",
  };
  const credential = new DefaultAzureCredential();
  const client = new AppPlatformManagementClient(credential, subscriptionId);
  const result = await client.customizedAccelerators.validate(
    resourceGroupName,
    serviceName,
    applicationAcceleratorName,
    customizedAcceleratorName,
    properties
  );
  console.log(result);
}

async function main() {
  customizedAcceleratorsValidate();
}

main().catch(console.error);
