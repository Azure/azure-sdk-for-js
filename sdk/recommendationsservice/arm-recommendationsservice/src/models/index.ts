/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The check availability request body. */
export interface CheckNameAvailabilityRequest {
  /** The name of the resource for which availability needs to be checked. */
  name?: string;
  /** The resource type. */
  type?: string;
}

/** The check availability result. */
export interface CheckNameAvailabilityResponse {
  /** Indicates if the resource name is available. */
  nameAvailable?: boolean;
  /** The reason why the given name is not available. */
  reason?: CheckNameAvailabilityReason;
  /** Detailed reason why the given name is available. */
  message?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The list of RecommendationsService Account resources. */
export interface AccountResourceList {
  /** The link used to get the next page of RecommendationsService Account resources list. */
  nextLink?: string;
  /** The list of RecommendationsService Account resources. */
  value?: AccountResource[];
}

/** Account resource properties. */
export interface AccountResourceProperties {
  /** Account configuration. This can only be set at RecommendationsService Account creation. */
  configuration?: AccountConfiguration;
  /** The list of service endpoints authentication details. */
  endpointAuthentications?: EndpointAuthentication[];
  /** The list of CORS details. */
  cors?: CorsRule[];
  /** Connection string to write Accounts reports to. */
  reportsConnectionString?: string;
  /**
   * The resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Service endpoints authentication details. */
export interface EndpointAuthentication {
  /** AAD tenant ID. */
  aadTenantID?: string;
  /** AAD principal ID. */
  principalID?: string;
  /** AAD principal type. */
  principalType?: PrincipalType;
}

/** CORS details. */
export interface CorsRule {
  /** The origin domains that are permitted to make a request against the service via CORS. */
  allowedOrigins: string[];
  /** The methods (HTTP request verbs) that the origin domain may use for a CORS request. */
  allowedMethods?: string[];
  /** The request headers that the origin domain may specify on the CORS request. */
  allowedHeaders?: string[];
  /** The response headers to expose to CORS clients. */
  exposedHeaders?: string[];
  /** The number of seconds that the client/browser should cache a preflight response. */
  maxAgeInSeconds?: number;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Account resource patch details. */
export interface AccountPatchResource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Account resource patch properties. */
  properties?: AccountPatchResourceProperties;
}

/** Account resource patch properties. */
export interface AccountPatchResourceProperties {
  /** The list of service endpoints authentication details. */
  endpointAuthentications?: EndpointAuthentication[];
  /** The list of CORS details. */
  cors?: CorsRule[];
  /** Connection string to write Accounts reports to. */
  reportsConnectionString?: string;
}

/** Account status. */
export interface AccountStatus {
  /** The list of scopes statuses. */
  scopesStatuses?: ScopeStatuses[];
}

/** Scope statuses. */
export interface ScopeStatuses {
  /** The scope that the statuses refers to. */
  scope?: string;
  /** Scope stage statuses. */
  statuses?: StageStatus[];
}

/** Stage status. */
export interface StageStatus {
  /** The stage name. */
  stage?: string;
  /** The status of the stage. */
  status?: string;
  /** The time of the status. */
  time?: Date;
}

/** The list of Modeling resources. */
export interface ModelingResourceList {
  /** The link used to get the next page of Modeling resources list. */
  nextLink?: string;
  /** The list of Modeling resources. */
  value?: ModelingResource[];
}

/** Modeling resource properties. */
export interface ModelingResourceProperties {
  /** Modeling features controls the set of supported scenarios\models being computed. This can only be set at Modeling creation. */
  features?: ModelingFeatures;
  /** Modeling frequency controls the modeling compute frequency. */
  frequency?: ModelingFrequency;
  /** Modeling size controls the maximum supported input data size. */
  size?: ModelingSize;
  /** The configuration to raw CDM data to be used as Modeling resource input. */
  inputData?: ModelingInputData;
  /**
   * The resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** The configuration to raw CDM data to be used as Modeling resource input. */
export interface ModelingInputData {
  /** Connection string to raw input data. */
  connectionString?: string;
}

/** Modeling resource patch details. */
export interface ModelingPatchResource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Modeling resource properties to update. */
  properties?: ModelingPatchResourceProperties;
}

/** Modeling resource properties to update. */
export interface ModelingPatchResourceProperties {
  /** The configuration to raw CDM data to be used as Modeling resource input. */
  inputData?: ModelingInputData;
}

/** The list of ServiceEndpoint resources. */
export interface ServiceEndpointResourceList {
  /** The link used to get the next page of ServiceEndpoint resources list. */
  nextLink?: string;
  /** The list of ServiceEndpoint resources. */
  value?: ServiceEndpointResource[];
}

/** ServiceEndpoint resource properties. */
export interface ServiceEndpointResourceProperties {
  /** ServiceEndpoint pre-allocated capacity controls the maximum requests-per-second allowed for that endpoint. Only applicable when Account configuration is Capacity. */
  preAllocatedCapacity?: number;
  /**
   * The paired location that will be used by this ServiceEndpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pairedLocation?: string;
  /**
   * The URL where the ServiceEndpoint API is accessible at.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
  /**
   * The resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** ServiceEndpoint resource patch details. */
export interface ServiceEndpointPatchResource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The current status of an async operation. */
export interface OperationStatusResult {
  /** Fully qualified ID for the async operation. */
  id?: string;
  /** Name of the async operation. */
  name?: string;
  /** Operation status. */
  status: string;
  /** Percent of the operation that is complete. */
  percentComplete?: number;
  /** The start time of the operation. */
  startTime?: Date;
  /** The end time of the operation. */
  endTime?: Date;
  /** The operations list. */
  operations?: OperationStatusResult[];
  /** If present, details of the operation error. */
  error?: ErrorDetail;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** Account resource details. */
export type AccountResource = TrackedResource & {
  /** Account resource properties. */
  properties?: AccountResourceProperties;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
};

/** Modeling resource details. */
export type ModelingResource = TrackedResource & {
  /** Modeling resource properties. */
  properties?: ModelingResourceProperties;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
};

/** ServiceEndpoint resource details. */
export type ServiceEndpointResource = TrackedResource & {
  /** ServiceEndpoint resource properties. */
  properties?: ServiceEndpointResourceProperties;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
};

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export enum KnownCheckNameAvailabilityReason {
  Invalid = "Invalid",
  AlreadyExists = "AlreadyExists"
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type CheckNameAvailabilityReason = string;

/** Known values of {@link AccountConfiguration} that the service accepts. */
export enum KnownAccountConfiguration {
  Free = "Free",
  Capacity = "Capacity"
}

/**
 * Defines values for AccountConfiguration. \
 * {@link KnownAccountConfiguration} can be used interchangeably with AccountConfiguration,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Free** \
 * **Capacity**
 */
export type AccountConfiguration = string;

/** Known values of {@link PrincipalType} that the service accepts. */
export enum KnownPrincipalType {
  Application = "Application",
  User = "User"
}

/**
 * Defines values for PrincipalType. \
 * {@link KnownPrincipalType} can be used interchangeably with PrincipalType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Application** \
 * **User**
 */
export type PrincipalType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  User = "User",
  Application = "Application",
  ManagedIdentity = "ManagedIdentity",
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ModelingFeatures} that the service accepts. */
export enum KnownModelingFeatures {
  Basic = "Basic",
  Standard = "Standard",
  Premium = "Premium"
}

/**
 * Defines values for ModelingFeatures. \
 * {@link KnownModelingFeatures} can be used interchangeably with ModelingFeatures,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic** \
 * **Standard** \
 * **Premium**
 */
export type ModelingFeatures = string;

/** Known values of {@link ModelingFrequency} that the service accepts. */
export enum KnownModelingFrequency {
  Low = "Low",
  Medium = "Medium",
  High = "High"
}

/**
 * Defines values for ModelingFrequency. \
 * {@link KnownModelingFrequency} can be used interchangeably with ModelingFrequency,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Low** \
 * **Medium** \
 * **High**
 */
export type ModelingFrequency = string;

/** Known values of {@link ModelingSize} that the service accepts. */
export enum KnownModelingSize {
  Small = "Small",
  Medium = "Medium",
  Large = "Large"
}

/**
 * Defines values for ModelingSize. \
 * {@link KnownModelingSize} can be used interchangeably with ModelingSize,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Small** \
 * **Medium** \
 * **Large**
 */
export type ModelingSize = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  User = "user",
  System = "system",
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Optional parameters. */
export interface AccountsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type AccountsCheckNameAvailabilityResponse = CheckNameAvailabilityResponse;

/** Optional parameters. */
export interface AccountsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type AccountsListBySubscriptionResponse = AccountResourceList;

/** Optional parameters. */
export interface AccountsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AccountsListByResourceGroupResponse = AccountResourceList;

/** Optional parameters. */
export interface AccountsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AccountsGetResponse = AccountResource;

/** Optional parameters. */
export interface AccountsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AccountsCreateOrUpdateResponse = AccountResource;

/** Optional parameters. */
export interface AccountsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AccountsUpdateResponse = AccountResource;

/** Optional parameters. */
export interface AccountsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AccountsGetStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getStatus operation. */
export type AccountsGetStatusResponse = AccountStatus;

/** Optional parameters. */
export interface AccountsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type AccountsListBySubscriptionNextResponse = AccountResourceList;

/** Optional parameters. */
export interface AccountsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AccountsListByResourceGroupNextResponse = AccountResourceList;

/** Optional parameters. */
export interface ModelingListByAccountResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByAccountResource operation. */
export type ModelingListByAccountResourceResponse = ModelingResourceList;

/** Optional parameters. */
export interface ModelingGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ModelingGetResponse = ModelingResource;

/** Optional parameters. */
export interface ModelingCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ModelingCreateOrUpdateResponse = ModelingResource;

/** Optional parameters. */
export interface ModelingUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ModelingUpdateResponse = ModelingResource;

/** Optional parameters. */
export interface ModelingDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ModelingListByAccountResourceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByAccountResourceNext operation. */
export type ModelingListByAccountResourceNextResponse = ModelingResourceList;

/** Optional parameters. */
export interface ServiceEndpointsListByAccountResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByAccountResource operation. */
export type ServiceEndpointsListByAccountResourceResponse = ServiceEndpointResourceList;

/** Optional parameters. */
export interface ServiceEndpointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ServiceEndpointsGetResponse = ServiceEndpointResource;

/** Optional parameters. */
export interface ServiceEndpointsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ServiceEndpointsCreateOrUpdateResponse = ServiceEndpointResource;

/** Optional parameters. */
export interface ServiceEndpointsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ServiceEndpointsUpdateResponse = ServiceEndpointResource;

/** Optional parameters. */
export interface ServiceEndpointsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ServiceEndpointsListByAccountResourceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByAccountResourceNext operation. */
export type ServiceEndpointsListByAccountResourceNextResponse = ServiceEndpointResourceList;

/** Optional parameters. */
export interface OperationStatusesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationStatusesGetResponse = OperationStatusResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface RecommendationsServiceOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
