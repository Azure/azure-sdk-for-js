/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ResourceLink,
  ResourceLinksListAtSubscriptionOptionalParams,
  ResourceLinksListAtSourceScopeOptionalParams,
  ResourceLinksDeleteOptionalParams,
  ResourceLinksCreateOrUpdateOptionalParams,
  ResourceLinksCreateOrUpdateResponse,
  ResourceLinksGetOptionalParams,
  ResourceLinksGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ResourceLinks. */
export interface ResourceLinks {
  /**
   * Gets all the linked resources for the subscription.
   * @param options The options parameters.
   */
  listAtSubscription(
    options?: ResourceLinksListAtSubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ResourceLink>;
  /**
   * Gets a list of resource links at and below the specified source scope.
   * @param scope The fully qualified ID of the scope for getting the resource links. For example, to
   *              list resource links at and under a resource group, set the scope to
   *              /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup.
   * @param options The options parameters.
   */
  listAtSourceScope(
    scope: string,
    options?: ResourceLinksListAtSourceScopeOptionalParams
  ): PagedAsyncIterableIterator<ResourceLink>;
  /**
   * Deletes a resource link with the specified ID.
   * @param linkId The fully qualified ID of the resource link. Use the format,
   *               /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
   *               For example,
   *               /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
   * @param options The options parameters.
   */
  delete(
    linkId: string,
    options?: ResourceLinksDeleteOptionalParams
  ): Promise<void>;
  /**
   * Creates or updates a resource link between the specified resources.
   * @param linkId The fully qualified ID of the resource link. Use the format,
   *               /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
   *               For example,
   *               /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
   * @param parameters Parameters for creating or updating a resource link.
   * @param options The options parameters.
   */
  createOrUpdate(
    linkId: string,
    parameters: ResourceLink,
    options?: ResourceLinksCreateOrUpdateOptionalParams
  ): Promise<ResourceLinksCreateOrUpdateResponse>;
  /**
   * Gets a resource link with the specified ID.
   * @param linkId The fully qualified Id of the resource link. For example,
   *               /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
   * @param options The options parameters.
   */
  get(
    linkId: string,
    options?: ResourceLinksGetOptionalParams
  ): Promise<ResourceLinksGetResponse>;
}
