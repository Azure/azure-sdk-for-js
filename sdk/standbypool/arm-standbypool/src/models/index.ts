/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a StandbyContainerGroupPoolResource list operation. */
export interface StandbyContainerGroupPoolResourceListResult {
  /** The StandbyContainerGroupPoolResource items on this page */
  value: StandbyContainerGroupPoolResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Details of the StandbyContainerGroupPool. */
export interface StandbyContainerGroupPoolResourceProperties {
  /** Specifies elasticity profile of standby container group pools. */
  elasticityProfile: StandbyContainerGroupPoolElasticityProfile;
  /** Specifies container group properties of standby container group pools. */
  containerGroupProperties: ContainerGroupProperties;
  /**
   * The status of the last operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Specifies the elasticity profile of the standby container group pools. */
export interface StandbyContainerGroupPoolElasticityProfile {
  /** Specifies maximum number of standby container groups in the standby pool. */
  maxReadyCapacity: number;
  /** Specifies refill policy of the pool. */
  refillPolicy?: RefillPolicy;
}

/** Details of the ContainerGroupProperties. */
export interface ContainerGroupProperties {
  /** Specifies container group profile of standby container groups. */
  containerGroupProfile: ContainerGroupProfile;
  /** Specifies subnet Ids for container group. */
  subnetIds?: Subnet[];
}

/** Details of the ContainerGroupProfile. */
export interface ContainerGroupProfile {
  /** Specifies container group profile id of standby container groups. */
  id: string;
  /** Specifies revision of container group profile. */
  revision?: number;
}

/** Subnet of container group */
export interface Subnet {
  /** Specifies ARM resource id of the subnet. */
  id: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The response of a StandbyVirtualMachinePoolResource list operation. */
export interface StandbyVirtualMachinePoolResourceListResult {
  /** The StandbyVirtualMachinePoolResource items on this page */
  value: StandbyVirtualMachinePoolResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Details of the StandbyVirtualMachinePool. */
export interface StandbyVirtualMachinePoolResourceProperties {
  /** Specifies the elasticity profile of the standby virtual machine pools. */
  elasticityProfile?: StandbyVirtualMachinePoolElasticityProfile;
  /** Specifies the desired state of virtual machines in the pool. */
  virtualMachineState: VirtualMachineState;
  /** Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to. */
  attachedVirtualMachineScaleSetId?: string;
  /**
   * The status of the last operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Details of the elasticity profile. */
export interface StandbyVirtualMachinePoolElasticityProfile {
  /** Specifies the maximum number of virtual machines in the standby virtual machine pool. */
  maxReadyCapacity: number;
}

/** The type used for update operations of the StandbyContainerGroupPoolResource. */
export interface StandbyContainerGroupPoolResourceUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The updatable properties of the StandbyContainerGroupPoolResource. */
  properties?: StandbyContainerGroupPoolResourceUpdateProperties;
}

/** The updatable properties of the StandbyContainerGroupPoolResource. */
export interface StandbyContainerGroupPoolResourceUpdateProperties {
  /** Specifies elasticity profile of standby container group pools. */
  elasticityProfile?: StandbyContainerGroupPoolElasticityProfileUpdate;
  /** Specifies container group properties of standby container group pools. */
  containerGroupProperties?: ContainerGroupPropertiesUpdate;
}

/** Specifies the elasticity profile of the standby container group pools. */
export interface StandbyContainerGroupPoolElasticityProfileUpdate {
  /** Specifies maximum number of standby container groups in the standby pool. */
  maxReadyCapacity?: number;
  /** Specifies refill policy of the pool. */
  refillPolicy?: RefillPolicy;
}

/** Details of the ContainerGroupProperties. */
export interface ContainerGroupPropertiesUpdate {
  /** Specifies container group profile of standby container groups. */
  containerGroupProfile?: ContainerGroupProfileUpdate;
  /** Specifies subnet Ids for container group. */
  subnetIds?: Subnet[];
}

/** Details of the ContainerGroupProfile. */
export interface ContainerGroupProfileUpdate {
  /** Specifies container group profile id of standby container groups. */
  id?: string;
  /** Specifies revision of container group profile. */
  revision?: number;
}

/** The type used for update operations of the StandbyVirtualMachinePoolResource. */
export interface StandbyVirtualMachinePoolResourceUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The updatable properties of the StandbyVirtualMachinePoolResource. */
  properties?: StandbyVirtualMachinePoolResourceUpdateProperties;
}

/** The updatable properties of the StandbyVirtualMachinePoolResource. */
export interface StandbyVirtualMachinePoolResourceUpdateProperties {
  /** Specifies the elasticity profile of the standby virtual machine pools. */
  elasticityProfile?: StandbyVirtualMachinePoolElasticityProfileUpdate;
  /** Specifies the desired state of virtual machines in the pool. */
  virtualMachineState?: VirtualMachineState;
  /** Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to. */
  attachedVirtualMachineScaleSetId?: string;
}

/** Details of the elasticity profile. */
export interface StandbyVirtualMachinePoolElasticityProfileUpdate {
  /** Specifies the maximum number of virtual machines in the standby virtual machine pool. */
  maxReadyCapacity?: number;
}

/** The response of a StandbyVirtualMachineResource list operation. */
export interface StandbyVirtualMachineResourceListResult {
  /** The StandbyVirtualMachineResource items on this page */
  value: StandbyVirtualMachineResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Details of the StandbyVirtualMachine. */
export interface StandbyVirtualMachineResourceProperties {
  /** Resource id of the virtual machine. */
  virtualMachineResourceId: string;
  /**
   * The status of the last operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** A StandbyContainerGroupPoolResource. */
export interface StandbyContainerGroupPoolResource extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: StandbyContainerGroupPoolResourceProperties;
}

/** A StandbyVirtualMachinePoolResource. */
export interface StandbyVirtualMachinePoolResource extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: StandbyVirtualMachinePoolResourceProperties;
}

/** Concrete proxy resource types can be created by aliasing this type using a specific property type. */
export interface StandbyVirtualMachineResource extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: StandbyVirtualMachineResourceProperties;
}

/** Defines headers for StandbyContainerGroupPools_createOrUpdate operation. */
export interface StandbyContainerGroupPoolsCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for StandbyContainerGroupPools_delete operation. */
export interface StandbyContainerGroupPoolsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for StandbyVirtualMachinePools_createOrUpdate operation. */
export interface StandbyVirtualMachinePoolsCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for StandbyVirtualMachinePools_delete operation. */
export interface StandbyVirtualMachinePoolsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link RefillPolicy} that the service accepts. */
export enum KnownRefillPolicy {
  /** A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity. */
  Always = "always",
}

/**
 * Defines values for RefillPolicy. \
 * {@link KnownRefillPolicy} can be used interchangeably with RefillPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **always**: A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity.
 */
export type RefillPolicy = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Resource is being deleted. */
  Deleting = "Deleting",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Deleting**: Resource is being deleted.
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link VirtualMachineState} that the service accepts. */
export enum KnownVirtualMachineState {
  /** The virtual machine is up and running. */
  Running = "Running",
  /** The virtual machine has released the lease on the underlying hardware and is powered off. */
  Deallocated = "Deallocated",
}

/**
 * Defines values for VirtualMachineState. \
 * {@link KnownVirtualMachineState} can be used interchangeably with VirtualMachineState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Running**: The virtual machine is up and running. \
 * **Deallocated**: The virtual machine has released the lease on the underlying hardware and is powered off.
 */
export type VirtualMachineState = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface StandbyContainerGroupPoolsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type StandbyContainerGroupPoolsListBySubscriptionResponse =
  StandbyContainerGroupPoolResourceListResult;

/** Optional parameters. */
export interface StandbyContainerGroupPoolsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type StandbyContainerGroupPoolsListByResourceGroupResponse =
  StandbyContainerGroupPoolResourceListResult;

/** Optional parameters. */
export interface StandbyContainerGroupPoolsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StandbyContainerGroupPoolsGetResponse =
  StandbyContainerGroupPoolResource;

/** Optional parameters. */
export interface StandbyContainerGroupPoolsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type StandbyContainerGroupPoolsCreateOrUpdateResponse =
  StandbyContainerGroupPoolResource;

/** Optional parameters. */
export interface StandbyContainerGroupPoolsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type StandbyContainerGroupPoolsUpdateResponse =
  StandbyContainerGroupPoolResource;

/** Optional parameters. */
export interface StandbyContainerGroupPoolsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type StandbyContainerGroupPoolsDeleteResponse =
  StandbyContainerGroupPoolsDeleteHeaders;

/** Optional parameters. */
export interface StandbyContainerGroupPoolsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type StandbyContainerGroupPoolsListBySubscriptionNextResponse =
  StandbyContainerGroupPoolResourceListResult;

/** Optional parameters. */
export interface StandbyContainerGroupPoolsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type StandbyContainerGroupPoolsListByResourceGroupNextResponse =
  StandbyContainerGroupPoolResourceListResult;

/** Optional parameters. */
export interface StandbyVirtualMachinePoolsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type StandbyVirtualMachinePoolsListBySubscriptionResponse =
  StandbyVirtualMachinePoolResourceListResult;

/** Optional parameters. */
export interface StandbyVirtualMachinePoolsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type StandbyVirtualMachinePoolsListByResourceGroupResponse =
  StandbyVirtualMachinePoolResourceListResult;

/** Optional parameters. */
export interface StandbyVirtualMachinePoolsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StandbyVirtualMachinePoolsGetResponse =
  StandbyVirtualMachinePoolResource;

/** Optional parameters. */
export interface StandbyVirtualMachinePoolsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type StandbyVirtualMachinePoolsCreateOrUpdateResponse =
  StandbyVirtualMachinePoolResource;

/** Optional parameters. */
export interface StandbyVirtualMachinePoolsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type StandbyVirtualMachinePoolsUpdateResponse =
  StandbyVirtualMachinePoolResource;

/** Optional parameters. */
export interface StandbyVirtualMachinePoolsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type StandbyVirtualMachinePoolsDeleteResponse =
  StandbyVirtualMachinePoolsDeleteHeaders;

/** Optional parameters. */
export interface StandbyVirtualMachinePoolsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type StandbyVirtualMachinePoolsListBySubscriptionNextResponse =
  StandbyVirtualMachinePoolResourceListResult;

/** Optional parameters. */
export interface StandbyVirtualMachinePoolsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type StandbyVirtualMachinePoolsListByResourceGroupNextResponse =
  StandbyVirtualMachinePoolResourceListResult;

/** Optional parameters. */
export interface StandbyVirtualMachinesListByStandbyVirtualMachinePoolResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByStandbyVirtualMachinePoolResource operation. */
export type StandbyVirtualMachinesListByStandbyVirtualMachinePoolResourceResponse =
  StandbyVirtualMachineResourceListResult;

/** Optional parameters. */
export interface StandbyVirtualMachinesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StandbyVirtualMachinesGetResponse = StandbyVirtualMachineResource;

/** Optional parameters. */
export interface StandbyVirtualMachinesListByStandbyVirtualMachinePoolResourceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByStandbyVirtualMachinePoolResourceNext operation. */
export type StandbyVirtualMachinesListByStandbyVirtualMachinePoolResourceNextResponse =
  StandbyVirtualMachineResourceListResult;

/** Optional parameters. */
export interface StandbyPoolManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
