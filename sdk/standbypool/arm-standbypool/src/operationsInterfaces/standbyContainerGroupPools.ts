/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  StandbyContainerGroupPoolResource,
  StandbyContainerGroupPoolsListBySubscriptionOptionalParams,
  StandbyContainerGroupPoolsListByResourceGroupOptionalParams,
  StandbyContainerGroupPoolsGetOptionalParams,
  StandbyContainerGroupPoolsGetResponse,
  StandbyContainerGroupPoolsCreateOrUpdateOptionalParams,
  StandbyContainerGroupPoolsCreateOrUpdateResponse,
  StandbyContainerGroupPoolResourceUpdate,
  StandbyContainerGroupPoolsUpdateOptionalParams,
  StandbyContainerGroupPoolsUpdateResponse,
  StandbyContainerGroupPoolsDeleteOptionalParams,
  StandbyContainerGroupPoolsDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StandbyContainerGroupPools. */
export interface StandbyContainerGroupPools {
  /**
   * List StandbyContainerGroupPoolResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: StandbyContainerGroupPoolsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<StandbyContainerGroupPoolResource>;
  /**
   * List StandbyContainerGroupPoolResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: StandbyContainerGroupPoolsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<StandbyContainerGroupPoolResource>;
  /**
   * Get a StandbyContainerGroupPoolResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param standbyContainerGroupPoolName Name of the standby container group pool
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    standbyContainerGroupPoolName: string,
    options?: StandbyContainerGroupPoolsGetOptionalParams,
  ): Promise<StandbyContainerGroupPoolsGetResponse>;
  /**
   * Create a StandbyContainerGroupPoolResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param standbyContainerGroupPoolName Name of the standby container group pool
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    standbyContainerGroupPoolName: string,
    resource: StandbyContainerGroupPoolResource,
    options?: StandbyContainerGroupPoolsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<StandbyContainerGroupPoolsCreateOrUpdateResponse>,
      StandbyContainerGroupPoolsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a StandbyContainerGroupPoolResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param standbyContainerGroupPoolName Name of the standby container group pool
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    standbyContainerGroupPoolName: string,
    resource: StandbyContainerGroupPoolResource,
    options?: StandbyContainerGroupPoolsCreateOrUpdateOptionalParams,
  ): Promise<StandbyContainerGroupPoolsCreateOrUpdateResponse>;
  /**
   * Update a StandbyContainerGroupPoolResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param standbyContainerGroupPoolName Name of the standby container group pool
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    standbyContainerGroupPoolName: string,
    properties: StandbyContainerGroupPoolResourceUpdate,
    options?: StandbyContainerGroupPoolsUpdateOptionalParams,
  ): Promise<StandbyContainerGroupPoolsUpdateResponse>;
  /**
   * Delete a StandbyContainerGroupPoolResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param standbyContainerGroupPoolName Name of the standby container group pool
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    standbyContainerGroupPoolName: string,
    options?: StandbyContainerGroupPoolsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<StandbyContainerGroupPoolsDeleteResponse>,
      StandbyContainerGroupPoolsDeleteResponse
    >
  >;
  /**
   * Delete a StandbyContainerGroupPoolResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param standbyContainerGroupPoolName Name of the standby container group pool
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    standbyContainerGroupPoolName: string,
    options?: StandbyContainerGroupPoolsDeleteOptionalParams,
  ): Promise<StandbyContainerGroupPoolsDeleteResponse>;
}
