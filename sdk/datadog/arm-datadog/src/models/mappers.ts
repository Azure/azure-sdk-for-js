/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const DatadogAgreementResourceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogAgreementResourceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatadogAgreementResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogAgreementResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogAgreementResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DatadogAgreementProperties"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const DatadogAgreementProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogAgreementProperties",
    modelProperties: {
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "product",
        type: {
          name: "String"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "String"
        }
      },
      licenseTextLink: {
        serializedName: "licenseTextLink",
        type: {
          name: "String"
        }
      },
      privacyPolicyLink: {
        serializedName: "privacyPolicyLink",
        type: {
          name: "String"
        }
      },
      retrieveDatetime: {
        serializedName: "retrieveDatetime",
        type: {
          name: "DateTime"
        }
      },
      signature: {
        serializedName: "signature",
        type: {
          name: "String"
        }
      },
      accepted: {
        serializedName: "accepted",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const DatadogApiKeyListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogApiKeyListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatadogApiKey"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogApiKey: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogApiKey",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        required: true,
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "created",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogHostListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogHostListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatadogHost"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogHost: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogHost",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      aliases: {
        serializedName: "aliases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      apps: {
        serializedName: "apps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      meta: {
        serializedName: "meta",
        type: {
          name: "Composite",
          className: "DatadogHostMetadata"
        }
      }
    }
  }
};

export const DatadogHostMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogHostMetadata",
    modelProperties: {
      agentVersion: {
        serializedName: "agentVersion",
        type: {
          name: "String"
        }
      },
      installMethod: {
        serializedName: "installMethod",
        type: {
          name: "Composite",
          className: "DatadogInstallMethod"
        }
      },
      logsAgent: {
        serializedName: "logsAgent",
        type: {
          name: "Composite",
          className: "DatadogLogsAgent"
        }
      }
    }
  }
};

export const DatadogInstallMethod: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogInstallMethod",
    modelProperties: {
      tool: {
        serializedName: "tool",
        type: {
          name: "String"
        }
      },
      toolVersion: {
        serializedName: "toolVersion",
        type: {
          name: "String"
        }
      },
      installerVersion: {
        serializedName: "installerVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogLogsAgent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogLogsAgent",
    modelProperties: {
      transport: {
        serializedName: "transport",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkedResourceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LinkedResourceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LinkedResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LinkedResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoredResourceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResourceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitoredResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoredResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      sendingMetrics: {
        serializedName: "sendingMetrics",
        type: {
          name: "Boolean"
        }
      },
      reasonForMetricsStatus: {
        serializedName: "reasonForMetricsStatus",
        type: {
          name: "String"
        }
      },
      sendingLogs: {
        serializedName: "sendingLogs",
        type: {
          name: "Boolean"
        }
      },
      reasonForLogsStatus: {
        serializedName: "reasonForLogsStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationResult",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogMonitorResourceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogMonitorResourceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatadogMonitorResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogMonitorResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogMonitorResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitorProperties"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const ResourceSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      monitoringStatus: {
        defaultValue: "Enabled",
        serializedName: "monitoringStatus",
        type: {
          name: "String"
        }
      },
      marketplaceSubscriptionStatus: {
        serializedName: "marketplaceSubscriptionStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      datadogOrganizationProperties: {
        serializedName: "datadogOrganizationProperties",
        type: {
          name: "Composite",
          className: "DatadogOrganizationProperties"
        }
      },
      userInfo: {
        serializedName: "userInfo",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      liftrResourceCategory: {
        serializedName: "liftrResourceCategory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      liftrResourcePreference: {
        serializedName: "liftrResourcePreference",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DatadogOrganizationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogOrganizationProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      linkingAuthCode: {
        serializedName: "linkingAuthCode",
        type: {
          name: "String"
        }
      },
      linkingClientId: {
        serializedName: "linkingClientId",
        type: {
          name: "String"
        }
      },
      redirectUri: {
        serializedName: "redirectUri",
        type: {
          name: "String"
        }
      },
      apiKey: {
        serializedName: "apiKey",
        type: {
          name: "String"
        }
      },
      applicationKey: {
        serializedName: "applicationKey",
        type: {
          name: "String"
        }
      },
      enterpriseAppId: {
        serializedName: "enterpriseAppId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserInfo",
    modelProperties: {
      name: {
        constraints: {
          MaxLength: 50
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
          )
        },
        serializedName: "emailAddress",
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        constraints: {
          MaxLength: 40
        },
        serializedName: "phoneNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentityProperties",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogMonitorResourceUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogMonitorResourceUpdateParameters",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitorUpdateProperties"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku"
        }
      }
    }
  }
};

export const MonitorUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorUpdateProperties",
    modelProperties: {
      monitoringStatus: {
        defaultValue: "Enabled",
        serializedName: "monitoringStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogSetPasswordLink: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogSetPasswordLink",
    modelProperties: {
      setPasswordLink: {
        serializedName: "setPasswordLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoringTagRulesListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringTagRulesListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitoringTagRules"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoringTagRules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringTagRules",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitoringTagRulesProperties"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const MonitoringTagRulesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringTagRulesProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      logRules: {
        serializedName: "logRules",
        type: {
          name: "Composite",
          className: "LogRules"
        }
      },
      metricRules: {
        serializedName: "metricRules",
        type: {
          name: "Composite",
          className: "MetricRules"
        }
      }
    }
  }
};

export const LogRules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogRules",
    modelProperties: {
      sendAadLogs: {
        serializedName: "sendAadLogs",
        type: {
          name: "Boolean"
        }
      },
      sendSubscriptionLogs: {
        serializedName: "sendSubscriptionLogs",
        type: {
          name: "Boolean"
        }
      },
      sendResourceLogs: {
        serializedName: "sendResourceLogs",
        type: {
          name: "Boolean"
        }
      },
      filteringTags: {
        serializedName: "filteringTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilteringTag"
            }
          }
        }
      }
    }
  }
};

export const FilteringTag: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilteringTag",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricRules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricRules",
    modelProperties: {
      filteringTags: {
        serializedName: "filteringTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilteringTag"
            }
          }
        }
      }
    }
  }
};

export const DatadogSingleSignOnResourceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogSingleSignOnResourceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatadogSingleSignOnResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatadogSingleSignOnResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogSingleSignOnResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DatadogSingleSignOnProperties"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const DatadogSingleSignOnProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatadogSingleSignOnProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      singleSignOnState: {
        serializedName: "singleSignOnState",
        type: {
          name: "String"
        }
      },
      enterpriseAppId: {
        serializedName: "enterpriseAppId",
        type: {
          name: "String"
        }
      },
      singleSignOnUrl: {
        serializedName: "singleSignOnUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};
