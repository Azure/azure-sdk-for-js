{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/instances/index.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAiGlC,0DAIC;AAzFD,qEAO2C;AAgD3C,SAAS,aAAa,CAAC,OAAgC;IACrD,OAAO;QACL,kBAAkB,EAAE,CAAC,OAAmD,EAAE,EAAE,CAC1E,IAAA,kCAAkB,EAAC,OAAO,EAAE,OAAO,CAAC;QACtC,mBAAmB,EAAE,CACnB,iBAAyB,EACzB,OAAoD,EACpD,EAAE,CAAC,IAAA,mCAAmB,EAAC,OAAO,EAAE,iBAAiB,EAAE,OAAO,CAAC;QAC7D,MAAM,EAAE,CACN,iBAAyB,EACzB,YAAoB,EACpB,OAAuC,EACvC,EAAE,CAAC,IAAA,uBAAO,EAAC,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,CAAC;QAC/D,MAAM,EAAE,CACN,iBAAyB,EACzB,YAAoB,EACpB,UAAkC,EAClC,OAAuC,EACvC,EAAE,CAAC,IAAA,sBAAM,EAAC,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC;QAC1E,cAAc,EAAE,CACd,iBAAyB,EACzB,YAAoB,EACpB,QAA0B,EAC1B,OAA+C,EAC/C,EAAE,CAAC,IAAA,8BAAc,EAAC,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,CAAC;QAChF,GAAG,EAAE,CAAC,iBAAyB,EAAE,YAAoB,EAAE,OAAoC,EAAE,EAAE,CAC7F,IAAA,mBAAG,EAAC,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,CAAC;KACzD,CAAC;AACJ,CAAC;AAED,SAAgB,uBAAuB,CAAC,OAAgC;IACtE,yBACK,aAAa,CAAC,OAAO,CAAC,EACzB;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { WeightsAndBiasesContext } from \"../../api/weightsAndBiasesContext.js\";\nimport { InstanceResource, InstanceResourceUpdate } from \"../../models/models.js\";\nimport {\n  InstancesListBySubscriptionOptionalParams,\n  InstancesListByResourceGroupOptionalParams,\n  InstancesDeleteOptionalParams,\n  InstancesUpdateOptionalParams,\n  InstancesCreateOrUpdateOptionalParams,\n  InstancesGetOptionalParams,\n} from \"../../api/instances/options.js\";\nimport {\n  listBySubscription,\n  listByResourceGroup,\n  $delete,\n  update,\n  createOrUpdate,\n  get,\n} from \"../../api/instances/operations.js\";\nimport { PagedAsyncIterableIterator } from \"../../static-helpers/pagingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\n\n/** Interface representing a Instances operations. */\nexport interface InstancesOperations {\n  /** List InstanceResource resources by subscription ID */\n  listBySubscription: (\n    options?: InstancesListBySubscriptionOptionalParams,\n  ) => PagedAsyncIterableIterator<InstanceResource>;\n  /** List InstanceResource resources by resource group */\n  listByResourceGroup: (\n    resourceGroupName: string,\n    options?: InstancesListByResourceGroupOptionalParams,\n  ) => PagedAsyncIterableIterator<InstanceResource>;\n  /** Delete a InstanceResource */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    instancename: string,\n    options?: InstancesDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Update a InstanceResource */\n  update: (\n    resourceGroupName: string,\n    instancename: string,\n    properties: InstanceResourceUpdate,\n    options?: InstancesUpdateOptionalParams,\n  ) => Promise<InstanceResource>;\n  /** Create a InstanceResource */\n  createOrUpdate: (\n    resourceGroupName: string,\n    instancename: string,\n    resource: InstanceResource,\n    options?: InstancesCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<InstanceResource>, InstanceResource>;\n  /** Get a InstanceResource */\n  get: (\n    resourceGroupName: string,\n    instancename: string,\n    options?: InstancesGetOptionalParams,\n  ) => Promise<InstanceResource>;\n}\n\nfunction _getInstances(context: WeightsAndBiasesContext) {\n  return {\n    listBySubscription: (options?: InstancesListBySubscriptionOptionalParams) =>\n      listBySubscription(context, options),\n    listByResourceGroup: (\n      resourceGroupName: string,\n      options?: InstancesListByResourceGroupOptionalParams,\n    ) => listByResourceGroup(context, resourceGroupName, options),\n    delete: (\n      resourceGroupName: string,\n      instancename: string,\n      options?: InstancesDeleteOptionalParams,\n    ) => $delete(context, resourceGroupName, instancename, options),\n    update: (\n      resourceGroupName: string,\n      instancename: string,\n      properties: InstanceResourceUpdate,\n      options?: InstancesUpdateOptionalParams,\n    ) => update(context, resourceGroupName, instancename, properties, options),\n    createOrUpdate: (\n      resourceGroupName: string,\n      instancename: string,\n      resource: InstanceResource,\n      options?: InstancesCreateOrUpdateOptionalParams,\n    ) => createOrUpdate(context, resourceGroupName, instancename, resource, options),\n    get: (resourceGroupName: string, instancename: string, options?: InstancesGetOptionalParams) =>\n      get(context, resourceGroupName, instancename, options),\n  };\n}\n\nexport function _getInstancesOperations(context: WeightsAndBiasesContext): InstancesOperations {\n  return {\n    ..._getInstances(context),\n  };\n}\n"]}