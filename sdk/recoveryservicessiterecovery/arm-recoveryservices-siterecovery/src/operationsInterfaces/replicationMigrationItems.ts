/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  MigrationItem,
  ReplicationMigrationItemsListByReplicationProtectionContainersOptionalParams,
  ReplicationMigrationItemsListOptionalParams,
  ReplicationMigrationItemsGetOptionalParams,
  ReplicationMigrationItemsGetResponse,
  EnableMigrationInput,
  ReplicationMigrationItemsCreateOptionalParams,
  ReplicationMigrationItemsCreateResponse,
  ReplicationMigrationItemsDeleteOptionalParams,
  UpdateMigrationItemInput,
  ReplicationMigrationItemsUpdateOptionalParams,
  ReplicationMigrationItemsUpdateResponse,
  MigrateInput,
  ReplicationMigrationItemsMigrateOptionalParams,
  ReplicationMigrationItemsMigrateResponse,
  ResyncInput,
  ReplicationMigrationItemsResyncOptionalParams,
  ReplicationMigrationItemsResyncResponse,
  TestMigrateInput,
  ReplicationMigrationItemsTestMigrateOptionalParams,
  ReplicationMigrationItemsTestMigrateResponse,
  TestMigrateCleanupInput,
  ReplicationMigrationItemsTestMigrateCleanupOptionalParams,
  ReplicationMigrationItemsTestMigrateCleanupResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReplicationMigrationItems. */
export interface ReplicationMigrationItems {
  /**
   * Gets the list of ASR migration items in the protection container.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param options The options parameters.
   */
  listByReplicationProtectionContainers(
    fabricName: string,
    protectionContainerName: string,
    options?: ReplicationMigrationItemsListByReplicationProtectionContainersOptionalParams
  ): PagedAsyncIterableIterator<MigrationItem>;
  /**
   * Gets the list of migration items in the vault.
   * @param options The options parameters.
   */
  list(
    options?: ReplicationMigrationItemsListOptionalParams
  ): PagedAsyncIterableIterator<MigrationItem>;
  /**
   * Gets the details of a migration item.
   * @param fabricName Fabric unique name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param options The options parameters.
   */
  get(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    options?: ReplicationMigrationItemsGetOptionalParams
  ): Promise<ReplicationMigrationItemsGetResponse>;
  /**
   * The operation to create an ASR migration item (enable migration).
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param input Enable migration input.
   * @param options The options parameters.
   */
  beginCreate(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    input: EnableMigrationInput,
    options?: ReplicationMigrationItemsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationMigrationItemsCreateResponse>,
      ReplicationMigrationItemsCreateResponse
    >
  >;
  /**
   * The operation to create an ASR migration item (enable migration).
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param input Enable migration input.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    input: EnableMigrationInput,
    options?: ReplicationMigrationItemsCreateOptionalParams
  ): Promise<ReplicationMigrationItemsCreateResponse>;
  /**
   * The operation to delete an ASR migration item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param options The options parameters.
   */
  beginDelete(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    options?: ReplicationMigrationItemsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * The operation to delete an ASR migration item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    options?: ReplicationMigrationItemsDeleteOptionalParams
  ): Promise<void>;
  /**
   * The operation to update the recovery settings of an ASR migration item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param input Update migration item input.
   * @param options The options parameters.
   */
  beginUpdate(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    input: UpdateMigrationItemInput,
    options?: ReplicationMigrationItemsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationMigrationItemsUpdateResponse>,
      ReplicationMigrationItemsUpdateResponse
    >
  >;
  /**
   * The operation to update the recovery settings of an ASR migration item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param input Update migration item input.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    input: UpdateMigrationItemInput,
    options?: ReplicationMigrationItemsUpdateOptionalParams
  ): Promise<ReplicationMigrationItemsUpdateResponse>;
  /**
   * The operation to initiate migration of the item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param migrateInput Migrate input.
   * @param options The options parameters.
   */
  beginMigrate(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    migrateInput: MigrateInput,
    options?: ReplicationMigrationItemsMigrateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationMigrationItemsMigrateResponse>,
      ReplicationMigrationItemsMigrateResponse
    >
  >;
  /**
   * The operation to initiate migration of the item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param migrateInput Migrate input.
   * @param options The options parameters.
   */
  beginMigrateAndWait(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    migrateInput: MigrateInput,
    options?: ReplicationMigrationItemsMigrateOptionalParams
  ): Promise<ReplicationMigrationItemsMigrateResponse>;
  /**
   * The operation to resynchronize replication of an ASR migration item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param input Resync input.
   * @param options The options parameters.
   */
  beginResync(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    input: ResyncInput,
    options?: ReplicationMigrationItemsResyncOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationMigrationItemsResyncResponse>,
      ReplicationMigrationItemsResyncResponse
    >
  >;
  /**
   * The operation to resynchronize replication of an ASR migration item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param input Resync input.
   * @param options The options parameters.
   */
  beginResyncAndWait(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    input: ResyncInput,
    options?: ReplicationMigrationItemsResyncOptionalParams
  ): Promise<ReplicationMigrationItemsResyncResponse>;
  /**
   * The operation to initiate test migration of the item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param testMigrateInput Test migrate input.
   * @param options The options parameters.
   */
  beginTestMigrate(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    testMigrateInput: TestMigrateInput,
    options?: ReplicationMigrationItemsTestMigrateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationMigrationItemsTestMigrateResponse>,
      ReplicationMigrationItemsTestMigrateResponse
    >
  >;
  /**
   * The operation to initiate test migration of the item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param testMigrateInput Test migrate input.
   * @param options The options parameters.
   */
  beginTestMigrateAndWait(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    testMigrateInput: TestMigrateInput,
    options?: ReplicationMigrationItemsTestMigrateOptionalParams
  ): Promise<ReplicationMigrationItemsTestMigrateResponse>;
  /**
   * The operation to initiate test migrate cleanup.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param testMigrateCleanupInput Test migrate cleanup input.
   * @param options The options parameters.
   */
  beginTestMigrateCleanup(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    testMigrateCleanupInput: TestMigrateCleanupInput,
    options?: ReplicationMigrationItemsTestMigrateCleanupOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationMigrationItemsTestMigrateCleanupResponse>,
      ReplicationMigrationItemsTestMigrateCleanupResponse
    >
  >;
  /**
   * The operation to initiate test migrate cleanup.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param migrationItemName Migration item name.
   * @param testMigrateCleanupInput Test migrate cleanup input.
   * @param options The options parameters.
   */
  beginTestMigrateCleanupAndWait(
    fabricName: string,
    protectionContainerName: string,
    migrationItemName: string,
    testMigrateCleanupInput: TestMigrateCleanupInput,
    options?: ReplicationMigrationItemsTestMigrateCleanupOptionalParams
  ): Promise<ReplicationMigrationItemsTestMigrateCleanupResponse>;
}
