/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Job,
  ReplicationJobsListOptionalParams,
  ReplicationJobsGetOptionalParams,
  ReplicationJobsGetResponse,
  ReplicationJobsCancelOptionalParams,
  ReplicationJobsCancelResponse,
  ReplicationJobsRestartOptionalParams,
  ReplicationJobsRestartResponse,
  ResumeJobParams,
  ReplicationJobsResumeOptionalParams,
  ReplicationJobsResumeResponse,
  JobQueryParameter,
  ReplicationJobsExportOptionalParams,
  ReplicationJobsExportResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReplicationJobs. */
export interface ReplicationJobs {
  /**
   * Gets the list of Azure Site Recovery Jobs for the vault.
   * @param options The options parameters.
   */
  list(
    options?: ReplicationJobsListOptionalParams
  ): PagedAsyncIterableIterator<Job>;
  /**
   * Get the details of an Azure Site Recovery job.
   * @param jobName Job identifier.
   * @param options The options parameters.
   */
  get(
    jobName: string,
    options?: ReplicationJobsGetOptionalParams
  ): Promise<ReplicationJobsGetResponse>;
  /**
   * The operation to cancel an Azure Site Recovery job.
   * @param jobName Job identifier.
   * @param options The options parameters.
   */
  beginCancel(
    jobName: string,
    options?: ReplicationJobsCancelOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationJobsCancelResponse>,
      ReplicationJobsCancelResponse
    >
  >;
  /**
   * The operation to cancel an Azure Site Recovery job.
   * @param jobName Job identifier.
   * @param options The options parameters.
   */
  beginCancelAndWait(
    jobName: string,
    options?: ReplicationJobsCancelOptionalParams
  ): Promise<ReplicationJobsCancelResponse>;
  /**
   * The operation to restart an Azure Site Recovery job.
   * @param jobName Job identifier.
   * @param options The options parameters.
   */
  beginRestart(
    jobName: string,
    options?: ReplicationJobsRestartOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationJobsRestartResponse>,
      ReplicationJobsRestartResponse
    >
  >;
  /**
   * The operation to restart an Azure Site Recovery job.
   * @param jobName Job identifier.
   * @param options The options parameters.
   */
  beginRestartAndWait(
    jobName: string,
    options?: ReplicationJobsRestartOptionalParams
  ): Promise<ReplicationJobsRestartResponse>;
  /**
   * The operation to resume an Azure Site Recovery job.
   * @param jobName Job identifier.
   * @param resumeJobParams Resume rob comments.
   * @param options The options parameters.
   */
  beginResume(
    jobName: string,
    resumeJobParams: ResumeJobParams,
    options?: ReplicationJobsResumeOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationJobsResumeResponse>,
      ReplicationJobsResumeResponse
    >
  >;
  /**
   * The operation to resume an Azure Site Recovery job.
   * @param jobName Job identifier.
   * @param resumeJobParams Resume rob comments.
   * @param options The options parameters.
   */
  beginResumeAndWait(
    jobName: string,
    resumeJobParams: ResumeJobParams,
    options?: ReplicationJobsResumeOptionalParams
  ): Promise<ReplicationJobsResumeResponse>;
  /**
   * The operation to export the details of the Azure Site Recovery jobs of the vault.
   * @param jobQueryParameter job query filter.
   * @param options The options parameters.
   */
  beginExport(
    jobQueryParameter: JobQueryParameter,
    options?: ReplicationJobsExportOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationJobsExportResponse>,
      ReplicationJobsExportResponse
    >
  >;
  /**
   * The operation to export the details of the Azure Site Recovery jobs of the vault.
   * @param jobQueryParameter job query filter.
   * @param options The options parameters.
   */
  beginExportAndWait(
    jobQueryParameter: JobQueryParameter,
    options?: ReplicationJobsExportOptionalParams
  ): Promise<ReplicationJobsExportResponse>;
}
