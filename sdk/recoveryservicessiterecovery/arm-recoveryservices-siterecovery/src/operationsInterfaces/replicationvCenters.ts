/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  VCenter,
  ReplicationvCentersListByReplicationFabricsOptionalParams,
  ReplicationvCentersListOptionalParams,
  ReplicationvCentersGetOptionalParams,
  ReplicationvCentersGetResponse,
  AddVCenterRequest,
  ReplicationvCentersCreateOptionalParams,
  ReplicationvCentersCreateResponse,
  ReplicationvCentersDeleteOptionalParams,
  UpdateVCenterRequest,
  ReplicationvCentersUpdateOptionalParams,
  ReplicationvCentersUpdateResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReplicationvCenters. */
export interface ReplicationvCenters {
  /**
   * Lists the vCenter servers registered in a fabric.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param fabricName Fabric name.
   * @param options The options parameters.
   */
  listByReplicationFabrics(
    resourceGroupName: string,
    resourceName: string,
    fabricName: string,
    options?: ReplicationvCentersListByReplicationFabricsOptionalParams,
  ): PagedAsyncIterableIterator<VCenter>;
  /**
   * Lists the vCenter servers registered in the vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    resourceName: string,
    options?: ReplicationvCentersListOptionalParams,
  ): PagedAsyncIterableIterator<VCenter>;
  /**
   * Gets the details of a registered vCenter server(Add vCenter server).
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param fabricName Fabric name.
   * @param vcenterName vcenter name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    fabricName: string,
    vcenterName: string,
    options?: ReplicationvCentersGetOptionalParams,
  ): Promise<ReplicationvCentersGetResponse>;
  /**
   * The operation to create a vCenter object..
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param fabricName Fabric name.
   * @param vcenterName vcenter name.
   * @param addVCenterRequest The input to the add vCenter operation.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    resourceName: string,
    fabricName: string,
    vcenterName: string,
    addVCenterRequest: AddVCenterRequest,
    options?: ReplicationvCentersCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationvCentersCreateResponse>,
      ReplicationvCentersCreateResponse
    >
  >;
  /**
   * The operation to create a vCenter object..
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param fabricName Fabric name.
   * @param vcenterName vcenter name.
   * @param addVCenterRequest The input to the add vCenter operation.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    resourceName: string,
    fabricName: string,
    vcenterName: string,
    addVCenterRequest: AddVCenterRequest,
    options?: ReplicationvCentersCreateOptionalParams,
  ): Promise<ReplicationvCentersCreateResponse>;
  /**
   * The operation to remove(unregister) a registered vCenter server from the vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param fabricName Fabric name.
   * @param vcenterName vcenter name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    fabricName: string,
    vcenterName: string,
    options?: ReplicationvCentersDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * The operation to remove(unregister) a registered vCenter server from the vault.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param fabricName Fabric name.
   * @param vcenterName vcenter name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    fabricName: string,
    vcenterName: string,
    options?: ReplicationvCentersDeleteOptionalParams,
  ): Promise<void>;
  /**
   * The operation to update a registered vCenter.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param fabricName Fabric name.
   * @param vcenterName vcenter name.
   * @param updateVCenterRequest The input to the update vCenter operation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    resourceName: string,
    fabricName: string,
    vcenterName: string,
    updateVCenterRequest: UpdateVCenterRequest,
    options?: ReplicationvCentersUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationvCentersUpdateResponse>,
      ReplicationvCentersUpdateResponse
    >
  >;
  /**
   * The operation to update a registered vCenter.
   * @param resourceGroupName The name of the resource group where the recovery services vault is
   *                          present.
   * @param resourceName The name of the recovery services vault.
   * @param fabricName Fabric name.
   * @param vcenterName vcenter name.
   * @param updateVCenterRequest The input to the update vCenter operation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    fabricName: string,
    vcenterName: string,
    updateVCenterRequest: UpdateVCenterRequest,
    options?: ReplicationvCentersUpdateOptionalParams,
  ): Promise<ReplicationvCentersUpdateResponse>;
}
