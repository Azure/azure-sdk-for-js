/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ReplicationProtectedItem,
  ReplicationProtectedItemsListByReplicationProtectionContainersOptionalParams,
  ReplicationProtectedItemsListOptionalParams,
  ReplicationProtectedItemsGetOptionalParams,
  ReplicationProtectedItemsGetResponse,
  EnableProtectionInput,
  ReplicationProtectedItemsCreateOptionalParams,
  ReplicationProtectedItemsCreateResponse,
  ReplicationProtectedItemsPurgeOptionalParams,
  UpdateReplicationProtectedItemInput,
  ReplicationProtectedItemsUpdateOptionalParams,
  ReplicationProtectedItemsUpdateResponse,
  AddDisksInput,
  ReplicationProtectedItemsAddDisksOptionalParams,
  ReplicationProtectedItemsAddDisksResponse,
  ApplyRecoveryPointInput,
  ReplicationProtectedItemsApplyRecoveryPointOptionalParams,
  ReplicationProtectedItemsApplyRecoveryPointResponse,
  ReplicationProtectedItemsFailoverCancelOptionalParams,
  ReplicationProtectedItemsFailoverCancelResponse,
  ReplicationProtectedItemsFailoverCommitOptionalParams,
  ReplicationProtectedItemsFailoverCommitResponse,
  PlannedFailoverInput,
  ReplicationProtectedItemsPlannedFailoverOptionalParams,
  ReplicationProtectedItemsPlannedFailoverResponse,
  DisableProtectionInput,
  ReplicationProtectedItemsDeleteOptionalParams,
  RemoveDisksInput,
  ReplicationProtectedItemsRemoveDisksOptionalParams,
  ReplicationProtectedItemsRemoveDisksResponse,
  ReplicationProtectedItemsRepairReplicationOptionalParams,
  ReplicationProtectedItemsRepairReplicationResponse,
  ReverseReplicationInput,
  ReplicationProtectedItemsReprotectOptionalParams,
  ReplicationProtectedItemsReprotectResponse,
  ResolveHealthInput,
  ReplicationProtectedItemsResolveHealthErrorsOptionalParams,
  ReplicationProtectedItemsResolveHealthErrorsResponse,
  SwitchProviderInput,
  ReplicationProtectedItemsSwitchProviderOptionalParams,
  ReplicationProtectedItemsSwitchProviderResponse,
  TestFailoverInput,
  ReplicationProtectedItemsTestFailoverOptionalParams,
  ReplicationProtectedItemsTestFailoverResponse,
  TestFailoverCleanupInput,
  ReplicationProtectedItemsTestFailoverCleanupOptionalParams,
  ReplicationProtectedItemsTestFailoverCleanupResponse,
  UnplannedFailoverInput,
  ReplicationProtectedItemsUnplannedFailoverOptionalParams,
  ReplicationProtectedItemsUnplannedFailoverResponse,
  UpdateApplianceForReplicationProtectedItemInput,
  ReplicationProtectedItemsUpdateApplianceOptionalParams,
  ReplicationProtectedItemsUpdateApplianceResponse,
  UpdateMobilityServiceRequest,
  ReplicationProtectedItemsUpdateMobilityServiceOptionalParams,
  ReplicationProtectedItemsUpdateMobilityServiceResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReplicationProtectedItems. */
export interface ReplicationProtectedItems {
  /**
   * Gets the list of ASR replication protected items in the protection container.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param options The options parameters.
   */
  listByReplicationProtectionContainers(
    fabricName: string,
    protectionContainerName: string,
    options?: ReplicationProtectedItemsListByReplicationProtectionContainersOptionalParams
  ): PagedAsyncIterableIterator<ReplicationProtectedItem>;
  /**
   * Gets the list of ASR replication protected items in the vault.
   * @param options The options parameters.
   */
  list(
    options?: ReplicationProtectedItemsListOptionalParams
  ): PagedAsyncIterableIterator<ReplicationProtectedItem>;
  /**
   * Gets the details of an ASR replication protected item.
   * @param fabricName Fabric unique name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param options The options parameters.
   */
  get(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsGetOptionalParams
  ): Promise<ReplicationProtectedItemsGetResponse>;
  /**
   * The operation to create an ASR replication protected item (Enable replication).
   * @param fabricName Name of the fabric.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName A name for the replication protected item.
   * @param input Enable Protection Input.
   * @param options The options parameters.
   */
  beginCreate(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    input: EnableProtectionInput,
    options?: ReplicationProtectedItemsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsCreateResponse>,
      ReplicationProtectedItemsCreateResponse
    >
  >;
  /**
   * The operation to create an ASR replication protected item (Enable replication).
   * @param fabricName Name of the fabric.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName A name for the replication protected item.
   * @param input Enable Protection Input.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    input: EnableProtectionInput,
    options?: ReplicationProtectedItemsCreateOptionalParams
  ): Promise<ReplicationProtectedItemsCreateResponse>;
  /**
   * The operation to delete or purge a replication protected item. This operation will force delete the
   * replication protected item. Use the remove operation on replication protected item to perform a
   * clean disable replication for the item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param options The options parameters.
   */
  beginPurge(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsPurgeOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * The operation to delete or purge a replication protected item. This operation will force delete the
   * replication protected item. Use the remove operation on replication protected item to perform a
   * clean disable replication for the item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param options The options parameters.
   */
  beginPurgeAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsPurgeOptionalParams
  ): Promise<void>;
  /**
   * The operation to update the recovery settings of an ASR replication protected item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param updateProtectionInput Update protection input.
   * @param options The options parameters.
   */
  beginUpdate(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    updateProtectionInput: UpdateReplicationProtectedItemInput,
    options?: ReplicationProtectedItemsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsUpdateResponse>,
      ReplicationProtectedItemsUpdateResponse
    >
  >;
  /**
   * The operation to update the recovery settings of an ASR replication protected item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param updateProtectionInput Update protection input.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    updateProtectionInput: UpdateReplicationProtectedItemInput,
    options?: ReplicationProtectedItemsUpdateOptionalParams
  ): Promise<ReplicationProtectedItemsUpdateResponse>;
  /**
   * Operation to add disks(s) to the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param addDisksInput Add disks input.
   * @param options The options parameters.
   */
  beginAddDisks(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    addDisksInput: AddDisksInput,
    options?: ReplicationProtectedItemsAddDisksOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsAddDisksResponse>,
      ReplicationProtectedItemsAddDisksResponse
    >
  >;
  /**
   * Operation to add disks(s) to the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param addDisksInput Add disks input.
   * @param options The options parameters.
   */
  beginAddDisksAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    addDisksInput: AddDisksInput,
    options?: ReplicationProtectedItemsAddDisksOptionalParams
  ): Promise<ReplicationProtectedItemsAddDisksResponse>;
  /**
   * The operation to change the recovery point of a failed over replication protected item.
   * @param fabricName The ARM fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replicated protected item name.
   * @param applyRecoveryPointInput The ApplyRecoveryPointInput.
   * @param options The options parameters.
   */
  beginApplyRecoveryPoint(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    applyRecoveryPointInput: ApplyRecoveryPointInput,
    options?: ReplicationProtectedItemsApplyRecoveryPointOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsApplyRecoveryPointResponse>,
      ReplicationProtectedItemsApplyRecoveryPointResponse
    >
  >;
  /**
   * The operation to change the recovery point of a failed over replication protected item.
   * @param fabricName The ARM fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replicated protected item name.
   * @param applyRecoveryPointInput The ApplyRecoveryPointInput.
   * @param options The options parameters.
   */
  beginApplyRecoveryPointAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    applyRecoveryPointInput: ApplyRecoveryPointInput,
    options?: ReplicationProtectedItemsApplyRecoveryPointOptionalParams
  ): Promise<ReplicationProtectedItemsApplyRecoveryPointResponse>;
  /**
   * Operation to cancel the failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param options The options parameters.
   */
  beginFailoverCancel(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsFailoverCancelOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsFailoverCancelResponse>,
      ReplicationProtectedItemsFailoverCancelResponse
    >
  >;
  /**
   * Operation to cancel the failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param options The options parameters.
   */
  beginFailoverCancelAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsFailoverCancelOptionalParams
  ): Promise<ReplicationProtectedItemsFailoverCancelResponse>;
  /**
   * Operation to commit the failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param options The options parameters.
   */
  beginFailoverCommit(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsFailoverCommitOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsFailoverCommitResponse>,
      ReplicationProtectedItemsFailoverCommitResponse
    >
  >;
  /**
   * Operation to commit the failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param options The options parameters.
   */
  beginFailoverCommitAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsFailoverCommitOptionalParams
  ): Promise<ReplicationProtectedItemsFailoverCommitResponse>;
  /**
   * Operation to initiate a planned failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param failoverInput Planned failover input.
   * @param options The options parameters.
   */
  beginPlannedFailover(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    failoverInput: PlannedFailoverInput,
    options?: ReplicationProtectedItemsPlannedFailoverOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsPlannedFailoverResponse>,
      ReplicationProtectedItemsPlannedFailoverResponse
    >
  >;
  /**
   * Operation to initiate a planned failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param failoverInput Planned failover input.
   * @param options The options parameters.
   */
  beginPlannedFailoverAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    failoverInput: PlannedFailoverInput,
    options?: ReplicationProtectedItemsPlannedFailoverOptionalParams
  ): Promise<ReplicationProtectedItemsPlannedFailoverResponse>;
  /**
   * The operation to disable replication on a replication protected item. This will also remove the
   * item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param disableProtectionInput Disable protection input.
   * @param options The options parameters.
   */
  beginDelete(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    disableProtectionInput: DisableProtectionInput,
    options?: ReplicationProtectedItemsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * The operation to disable replication on a replication protected item. This will also remove the
   * item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param disableProtectionInput Disable protection input.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    disableProtectionInput: DisableProtectionInput,
    options?: ReplicationProtectedItemsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Operation to remove disk(s) from the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param removeDisksInput Remove disks input.
   * @param options The options parameters.
   */
  beginRemoveDisks(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    removeDisksInput: RemoveDisksInput,
    options?: ReplicationProtectedItemsRemoveDisksOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsRemoveDisksResponse>,
      ReplicationProtectedItemsRemoveDisksResponse
    >
  >;
  /**
   * Operation to remove disk(s) from the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param removeDisksInput Remove disks input.
   * @param options The options parameters.
   */
  beginRemoveDisksAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    removeDisksInput: RemoveDisksInput,
    options?: ReplicationProtectedItemsRemoveDisksOptionalParams
  ): Promise<ReplicationProtectedItemsRemoveDisksResponse>;
  /**
   * The operation to start resynchronize/repair replication for a replication protected item requiring
   * resynchronization.
   * @param fabricName The name of the fabric.
   * @param protectionContainerName The name of the container.
   * @param replicatedProtectedItemName The name of the replication protected item.
   * @param options The options parameters.
   */
  beginRepairReplication(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsRepairReplicationOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsRepairReplicationResponse>,
      ReplicationProtectedItemsRepairReplicationResponse
    >
  >;
  /**
   * The operation to start resynchronize/repair replication for a replication protected item requiring
   * resynchronization.
   * @param fabricName The name of the fabric.
   * @param protectionContainerName The name of the container.
   * @param replicatedProtectedItemName The name of the replication protected item.
   * @param options The options parameters.
   */
  beginRepairReplicationAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: ReplicationProtectedItemsRepairReplicationOptionalParams
  ): Promise<ReplicationProtectedItemsRepairReplicationResponse>;
  /**
   * Operation to reprotect or reverse replicate a failed over replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param reprotectInput Reverse replication input.
   * @param options The options parameters.
   */
  beginReprotect(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    reprotectInput: ReverseReplicationInput,
    options?: ReplicationProtectedItemsReprotectOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsReprotectResponse>,
      ReplicationProtectedItemsReprotectResponse
    >
  >;
  /**
   * Operation to reprotect or reverse replicate a failed over replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param reprotectInput Reverse replication input.
   * @param options The options parameters.
   */
  beginReprotectAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    reprotectInput: ReverseReplicationInput,
    options?: ReplicationProtectedItemsReprotectOptionalParams
  ): Promise<ReplicationProtectedItemsReprotectResponse>;
  /**
   * Operation to resolve health issues of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param resolveHealthInput Health issue input object.
   * @param options The options parameters.
   */
  beginResolveHealthErrors(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    resolveHealthInput: ResolveHealthInput,
    options?: ReplicationProtectedItemsResolveHealthErrorsOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsResolveHealthErrorsResponse>,
      ReplicationProtectedItemsResolveHealthErrorsResponse
    >
  >;
  /**
   * Operation to resolve health issues of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param resolveHealthInput Health issue input object.
   * @param options The options parameters.
   */
  beginResolveHealthErrorsAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    resolveHealthInput: ResolveHealthInput,
    options?: ReplicationProtectedItemsResolveHealthErrorsOptionalParams
  ): Promise<ReplicationProtectedItemsResolveHealthErrorsResponse>;
  /**
   * Operation to initiate a switch provider of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param switchProviderInput Switch provider input.
   * @param options The options parameters.
   */
  beginSwitchProvider(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    switchProviderInput: SwitchProviderInput,
    options?: ReplicationProtectedItemsSwitchProviderOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsSwitchProviderResponse>,
      ReplicationProtectedItemsSwitchProviderResponse
    >
  >;
  /**
   * Operation to initiate a switch provider of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param switchProviderInput Switch provider input.
   * @param options The options parameters.
   */
  beginSwitchProviderAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    switchProviderInput: SwitchProviderInput,
    options?: ReplicationProtectedItemsSwitchProviderOptionalParams
  ): Promise<ReplicationProtectedItemsSwitchProviderResponse>;
  /**
   * Operation to perform a test failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param testfailoverInput Test failover input.
   * @param options The options parameters.
   */
  beginTestFailover(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    testfailoverInput: TestFailoverInput,
    options?: ReplicationProtectedItemsTestFailoverOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsTestFailoverResponse>,
      ReplicationProtectedItemsTestFailoverResponse
    >
  >;
  /**
   * Operation to perform a test failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param testfailoverInput Test failover input.
   * @param options The options parameters.
   */
  beginTestFailoverAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    testfailoverInput: TestFailoverInput,
    options?: ReplicationProtectedItemsTestFailoverOptionalParams
  ): Promise<ReplicationProtectedItemsTestFailoverResponse>;
  /**
   * Operation to clean up the test failover of a replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param cleanupInput Test failover cleanup input.
   * @param options The options parameters.
   */
  beginTestFailoverCleanup(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    cleanupInput: TestFailoverCleanupInput,
    options?: ReplicationProtectedItemsTestFailoverCleanupOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsTestFailoverCleanupResponse>,
      ReplicationProtectedItemsTestFailoverCleanupResponse
    >
  >;
  /**
   * Operation to clean up the test failover of a replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param cleanupInput Test failover cleanup input.
   * @param options The options parameters.
   */
  beginTestFailoverCleanupAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    cleanupInput: TestFailoverCleanupInput,
    options?: ReplicationProtectedItemsTestFailoverCleanupOptionalParams
  ): Promise<ReplicationProtectedItemsTestFailoverCleanupResponse>;
  /**
   * Operation to initiate a failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param failoverInput Failover input.
   * @param options The options parameters.
   */
  beginUnplannedFailover(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    failoverInput: UnplannedFailoverInput,
    options?: ReplicationProtectedItemsUnplannedFailoverOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsUnplannedFailoverResponse>,
      ReplicationProtectedItemsUnplannedFailoverResponse
    >
  >;
  /**
   * Operation to initiate a failover of the replication protected item.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param failoverInput Failover input.
   * @param options The options parameters.
   */
  beginUnplannedFailoverAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    failoverInput: UnplannedFailoverInput,
    options?: ReplicationProtectedItemsUnplannedFailoverOptionalParams
  ): Promise<ReplicationProtectedItemsUnplannedFailoverResponse>;
  /**
   * The operation to update appliance of an ASR replication protected item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param applianceUpdateInput Appliance update protection input.
   * @param options The options parameters.
   */
  beginUpdateAppliance(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    applianceUpdateInput: UpdateApplianceForReplicationProtectedItemInput,
    options?: ReplicationProtectedItemsUpdateApplianceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ReplicationProtectedItemsUpdateApplianceResponse>,
      ReplicationProtectedItemsUpdateApplianceResponse
    >
  >;
  /**
   * The operation to update appliance of an ASR replication protected item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param replicatedProtectedItemName Replication protected item name.
   * @param applianceUpdateInput Appliance update protection input.
   * @param options The options parameters.
   */
  beginUpdateApplianceAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    applianceUpdateInput: UpdateApplianceForReplicationProtectedItemInput,
    options?: ReplicationProtectedItemsUpdateApplianceOptionalParams
  ): Promise<ReplicationProtectedItemsUpdateApplianceResponse>;
  /**
   * The operation to update(push update) the installed mobility service software on a replication
   * protected item to the latest available version.
   * @param fabricName The name of the fabric containing the protected item.
   * @param protectionContainerName The name of the container containing the protected item.
   * @param replicationProtectedItemName The name of the protected item on which the agent is to be
   *                                     updated.
   * @param updateMobilityServiceRequest Request to update the mobility service on the protected item.
   * @param options The options parameters.
   */
  beginUpdateMobilityService(
    fabricName: string,
    protectionContainerName: string,
    replicationProtectedItemName: string,
    updateMobilityServiceRequest: UpdateMobilityServiceRequest,
    options?: ReplicationProtectedItemsUpdateMobilityServiceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<
        ReplicationProtectedItemsUpdateMobilityServiceResponse
      >,
      ReplicationProtectedItemsUpdateMobilityServiceResponse
    >
  >;
  /**
   * The operation to update(push update) the installed mobility service software on a replication
   * protected item to the latest available version.
   * @param fabricName The name of the fabric containing the protected item.
   * @param protectionContainerName The name of the container containing the protected item.
   * @param replicationProtectedItemName The name of the protected item on which the agent is to be
   *                                     updated.
   * @param updateMobilityServiceRequest Request to update the mobility service on the protected item.
   * @param options The options parameters.
   */
  beginUpdateMobilityServiceAndWait(
    fabricName: string,
    protectionContainerName: string,
    replicationProtectedItemName: string,
    updateMobilityServiceRequest: UpdateMobilityServiceRequest,
    options?: ReplicationProtectedItemsUpdateMobilityServiceOptionalParams
  ): Promise<ReplicationProtectedItemsUpdateMobilityServiceResponse>;
}
