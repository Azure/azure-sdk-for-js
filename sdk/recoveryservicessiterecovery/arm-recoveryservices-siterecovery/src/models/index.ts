/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Azure VM disk input details.
 */
export interface A2AVmDiskInputDetails {
  /**
   * The disk Uri.
   */
  diskUri?: string;
  /**
   * The recovery VHD storage account Id.
   */
  recoveryAzureStorageAccountId?: string;
  /**
   * The primary staging storage account Id.
   */
  primaryStagingAzureStorageAccountId?: string;
}

/**
 * Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).
 */
export interface DiskEncryptionKeyInfo {
  /**
   * The secret url / identifier.
   */
  secretIdentifier?: string;
  /**
   * The KeyVault resource ARM id for secret.
   */
  keyVaultResourceArmId?: string;
}

/**
 * Key Encryption Key (KEK) information.
 */
export interface KeyEncryptionKeyInfo {
  /**
   * The key url / identifier.
   */
  keyIdentifier?: string;
  /**
   * The KeyVault resource ARM id for key.
   */
  keyVaultResourceArmId?: string;
}

/**
 * Recovery disk encryption info (BEK and KEK).
 */
export interface DiskEncryptionInfo {
  /**
   * The recovery KeyVault reference for secret.
   */
  diskEncryptionKeyInfo?: DiskEncryptionKeyInfo;
  /**
   * The recovery KeyVault reference for key.
   */
  keyEncryptionKeyInfo?: KeyEncryptionKeyInfo;
}

/**
 * Azure VM managed disk input details.
 */
export interface A2AVmManagedDiskInputDetails {
  /**
   * The disk Id.
   */
  diskId?: string;
  /**
   * The primary staging storage account Arm Id.
   */
  primaryStagingAzureStorageAccountId?: string;
  /**
   * The target resource group Arm Id.
   */
  recoveryResourceGroupId?: string;
  /**
   * The replica disk type. Its an optional value and will be same as source disk type if not user
   * provided.
   */
  recoveryReplicaDiskAccountType?: string;
  /**
   * The target disk type after failover. Its an optional value and will be same as source disk
   * type if not user provided.
   */
  recoveryTargetDiskAccountType?: string;
  /**
   * The recovery disk encryption set Id.
   */
  recoveryDiskEncryptionSetId?: string;
  /**
   * The recovery disk encryption information (for one / single pass flows).
   */
  diskEncryptionInfo?: DiskEncryptionInfo;
}

/**
 * Contains the possible cases for AddDisksProviderSpecificInput.
 */
export type AddDisksProviderSpecificInputUnion = AddDisksProviderSpecificInput | A2AAddDisksInput;

/**
 * Add Disks provider specific input.
 */
export interface AddDisksProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "AddDisksProviderSpecificInput";
}

/**
 * A2A add disk(s) input.
 */
export interface A2AAddDisksInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The list of vm disk details.
   */
  vmDisks?: A2AVmDiskInputDetails[];
  /**
   * The list of vm managed disk details.
   */
  vmManagedDisks?: A2AVmManagedDiskInputDetails[];
}

/**
 * Contains the possible cases for ApplyRecoveryPointProviderSpecificInput.
 */
export type ApplyRecoveryPointProviderSpecificInputUnion = ApplyRecoveryPointProviderSpecificInput | A2AApplyRecoveryPointInput | HyperVReplicaAzureApplyRecoveryPointInput | InMageAzureV2ApplyRecoveryPointInput;

/**
 * Provider specific input for apply recovery point.
 */
export interface ApplyRecoveryPointProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ApplyRecoveryPointProviderSpecificInput";
}

/**
 * ApplyRecoveryPoint input specific to A2A provider.
 */
export interface A2AApplyRecoveryPointInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
}

/**
 * Contains the possible cases for ReplicationProviderSpecificContainerCreationInput.
 */
export type ReplicationProviderSpecificContainerCreationInputUnion = ReplicationProviderSpecificContainerCreationInput | A2AContainerCreationInput | VMwareCbtContainerCreationInput;

/**
 * Provider specific input for container creation operation.
 */
export interface ReplicationProviderSpecificContainerCreationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ReplicationProviderSpecificContainerCreationInput";
}

/**
 * A2A cloud creation input.
 */
export interface A2AContainerCreationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
}

/**
 * Contains the possible cases for ReplicationProviderSpecificContainerMappingInput.
 */
export type ReplicationProviderSpecificContainerMappingInputUnion = ReplicationProviderSpecificContainerMappingInput | A2AContainerMappingInput | VMwareCbtContainerMappingInput;

/**
 * Provider specific input for pairing operations.
 */
export interface ReplicationProviderSpecificContainerMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ReplicationProviderSpecificContainerMappingInput";
}

/**
 * A2A container mapping input.
 */
export interface A2AContainerMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * A value indicating whether the auto update is enabled. Possible values include: 'Disabled',
   * 'Enabled'
   */
  agentAutoUpdateStatus?: AgentAutoUpdateStatus;
  /**
   * The automation account arm id.
   */
  automationAccountArmId?: string;
}

/**
 * Contains the possible cases for EnableProtectionProviderSpecificInput.
 */
export type EnableProtectionProviderSpecificInputUnion = EnableProtectionProviderSpecificInput | A2AEnableProtectionInput | HyperVReplicaAzureEnableProtectionInput | InMageAzureV2EnableProtectionInput | InMageEnableProtectionInput | SanEnableProtectionInput;

/**
 * Enable protection provider specific input.
 */
export interface EnableProtectionProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "EnableProtectionProviderSpecificInput";
}

/**
 * A2A enable protection input.
 */
export interface A2AEnableProtectionInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The fabric specific object Id of the virtual machine.
   */
  fabricObjectId?: string;
  /**
   * The recovery container Id.
   */
  recoveryContainerId?: string;
  /**
   * The recovery resource group Id. Valid for V2 scenarios.
   */
  recoveryResourceGroupId?: string;
  /**
   * The recovery cloud service Id. Valid for V1 scenarios.
   */
  recoveryCloudServiceId?: string;
  /**
   * The recovery availability set Id.
   */
  recoveryAvailabilitySetId?: string;
  /**
   * The list of vm disk details.
   */
  vmDisks?: A2AVmDiskInputDetails[];
  /**
   * The list of vm managed disk details.
   */
  vmManagedDisks?: A2AVmManagedDiskInputDetails[];
  /**
   * The multi vm group name.
   */
  multiVmGroupName?: string;
  /**
   * The boot diagnostic storage account.
   */
  recoveryBootDiagStorageAccountId?: string;
  /**
   * The recovery disk encryption information.
   */
  diskEncryptionInfo?: DiskEncryptionInfo;
  /**
   * The recovery availability zone.
   */
  recoveryAvailabilityZone?: string;
  /**
   * The recovery Azure virtual network ARM id.
   */
  recoveryAzureNetworkId?: string;
  /**
   * The recovery subnet name.
   */
  recoverySubnetName?: string;
}

/**
 * Contains the possible cases for EventProviderSpecificDetails.
 */
export type EventProviderSpecificDetailsUnion = EventProviderSpecificDetails | A2AEventDetails | HyperVReplica2012EventDetails | HyperVReplica2012R2EventDetails | HyperVReplicaAzureEventDetails | HyperVReplicaBaseEventDetails | InMageAzureV2EventDetails;

/**
 * Model class for provider specific details for an event.
 */
export interface EventProviderSpecificDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "EventProviderSpecificDetails";
}

/**
 * Model class for event details of a A2A event.
 */
export interface A2AEventDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The protected item arm name.
   */
  protectedItemName?: string;
  /**
   * The azure vm arm id.
   */
  fabricObjectId?: string;
  /**
   * Fabric arm name.
   */
  fabricName?: string;
  /**
   * The fabric location.
   */
  fabricLocation?: string;
  /**
   * Remote fabric arm name.
   */
  remoteFabricName?: string;
  /**
   * Remote fabric location.
   */
  remoteFabricLocation?: string;
}

/**
 * Contains the possible cases for ProviderSpecificFailoverInput.
 */
export type ProviderSpecificFailoverInputUnion = ProviderSpecificFailoverInput | A2AFailoverProviderInput | HyperVReplicaAzureFailbackProviderInput | HyperVReplicaAzureFailoverProviderInput | InMageAzureV2FailoverProviderInput | InMageFailoverProviderInput;

/**
 * Provider specific failover input.
 */
export interface ProviderSpecificFailoverInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ProviderSpecificFailoverInput";
}

/**
 * A2A provider specific input for failover.
 */
export interface A2AFailoverProviderInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The recovery point id to be passed to failover to a particular recovery point. In case of
   * latest recovery point, null should be passed.
   */
  recoveryPointId?: string;
  /**
   * A value indicating whether to use recovery cloud service for TFO or not.
   */
  cloudServiceCreationOption?: string;
}

/**
 * Contains the possible cases for PolicyProviderSpecificInput.
 */
export type PolicyProviderSpecificInputUnion = PolicyProviderSpecificInput | A2APolicyCreationInput | HyperVReplicaAzurePolicyInput | HyperVReplicaBluePolicyInput | HyperVReplicaPolicyInput | InMageAzureV2PolicyInput | InMagePolicyInput | VMwareCbtPolicyCreationInput;

/**
 * Base class for provider specific input
 */
export interface PolicyProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "PolicyProviderSpecificInput";
}

/**
 * A2A Policy creation input.
 */
export interface A2APolicyCreationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistory?: number;
  /**
   * The crash consistent snapshot frequency (in minutes).
   */
  crashConsistentFrequencyInMinutes?: number;
  /**
   * The app consistent snapshot frequency (in minutes).
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or
   * 'Disabled'. Possible values include: 'Enable', 'Disable'
   */
  multiVmSyncStatus: SetMultiVmSyncStatus;
}

/**
 * Contains the possible cases for PolicyProviderSpecificDetails.
 */
export type PolicyProviderSpecificDetailsUnion = PolicyProviderSpecificDetails | A2APolicyDetails | HyperVReplicaAzurePolicyDetails | HyperVReplicaBasePolicyDetails | HyperVReplicaBluePolicyDetails | HyperVReplicaPolicyDetails | InMageAzureV2PolicyDetails | InMageBasePolicyDetails | InMagePolicyDetails | RcmAzureMigrationPolicyDetails | VmwareCbtPolicyDetails;

/**
 * Base class for Provider specific details for policies.
 */
export interface PolicyProviderSpecificDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "PolicyProviderSpecificDetails";
}

/**
 * A2A specific policy details.
 */
export interface A2APolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The recovery point threshold in minutes.
   */
  recoveryPointThresholdInMinutes?: number;
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistory?: number;
  /**
   * The app consistent snapshot frequency in minutes.
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * A value indicating whether multi-VM sync has to be enabled.
   */
  multiVmSyncStatus?: string;
  /**
   * The crash consistent snapshot frequency in minutes.
   */
  crashConsistentFrequencyInMinutes?: number;
}

/**
 * A2A protected disk details.
 */
export interface A2AProtectedDiskDetails {
  /**
   * The disk uri.
   */
  diskUri?: string;
  /**
   * The recovery disk storage account.
   */
  recoveryAzureStorageAccountId?: string;
  /**
   * The primary disk storage account.
   */
  primaryDiskAzureStorageAccountId?: string;
  /**
   * Recovery disk uri.
   */
  recoveryDiskUri?: string;
  /**
   * The disk name.
   */
  diskName?: string;
  /**
   * The disk capacity in bytes.
   */
  diskCapacityInBytes?: number;
  /**
   * The primary staging storage account.
   */
  primaryStagingAzureStorageAccountId?: string;
  /**
   * The type of disk.
   */
  diskType?: string;
  /**
   * A value indicating whether resync is required for this disk.
   */
  resyncRequired?: boolean;
  /**
   * The percentage of the monitoring job. The type of the monitoring job is defined by
   * MonitoringJobType property.
   */
  monitoringPercentageCompletion?: number;
  /**
   * The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion
   * property.
   */
  monitoringJobType?: string;
  /**
   * The data pending for replication in MB at staging account.
   */
  dataPendingInStagingStorageAccountInMB?: number;
  /**
   * The data pending at source virtual machine in MB.
   */
  dataPendingAtSourceAgentInMB?: number;
  /**
   * The disk state.
   */
  diskState?: string;
  /**
   * The disk level operations list.
   */
  allowedDiskLevelOperation?: string[];
  /**
   * A value indicating whether vm has encrypted os disk or not.
   */
  isDiskEncrypted?: boolean;
  /**
   * The secret URL / identifier (BEK).
   */
  secretIdentifier?: string;
  /**
   * The KeyVault resource id for secret (BEK).
   */
  dekKeyVaultArmId?: string;
  /**
   * A value indicating whether disk key got encrypted or not.
   */
  isDiskKeyEncrypted?: boolean;
  /**
   * The key URL / identifier (KEK).
   */
  keyIdentifier?: string;
  /**
   * The KeyVault resource id for key (KEK).
   */
  kekKeyVaultArmId?: string;
}

/**
 * A2A protected managed disk details.
 */
export interface A2AProtectedManagedDiskDetails {
  /**
   * The managed disk Arm id.
   */
  diskId?: string;
  /**
   * The recovery disk resource group Arm Id.
   */
  recoveryResourceGroupId?: string;
  /**
   * Recovery target disk Arm Id.
   */
  recoveryTargetDiskId?: string;
  /**
   * Recovery replica disk Arm Id.
   */
  recoveryReplicaDiskId?: string;
  /**
   * The replica disk type. Its an optional value and will be same as source disk type if not user
   * provided.
   */
  recoveryReplicaDiskAccountType?: string;
  /**
   * The target disk type after failover. Its an optional value and will be same as source disk
   * type if not user provided.
   */
  recoveryTargetDiskAccountType?: string;
  /**
   * The recovery disk encryption set Id.
   */
  recoveryDiskEncryptionSetId?: string;
  /**
   * The disk name.
   */
  diskName?: string;
  /**
   * The disk capacity in bytes.
   */
  diskCapacityInBytes?: number;
  /**
   * The primary staging storage account.
   */
  primaryStagingAzureStorageAccountId?: string;
  /**
   * The type of disk.
   */
  diskType?: string;
  /**
   * A value indicating whether resync is required for this disk.
   */
  resyncRequired?: boolean;
  /**
   * The percentage of the monitoring job. The type of the monitoring job is defined by
   * MonitoringJobType property.
   */
  monitoringPercentageCompletion?: number;
  /**
   * The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion
   * property.
   */
  monitoringJobType?: string;
  /**
   * The data pending for replication in MB at staging account.
   */
  dataPendingInStagingStorageAccountInMB?: number;
  /**
   * The data pending at source virtual machine in MB.
   */
  dataPendingAtSourceAgentInMB?: number;
  /**
   * The disk state.
   */
  diskState?: string;
  /**
   * The disk level operations list.
   */
  allowedDiskLevelOperation?: string[];
  /**
   * A value indicating whether vm has encrypted os disk or not.
   */
  isDiskEncrypted?: boolean;
  /**
   * The secret URL / identifier (BEK).
   */
  secretIdentifier?: string;
  /**
   * The KeyVault resource id for secret (BEK).
   */
  dekKeyVaultArmId?: string;
  /**
   * A value indicating whether disk key got encrypted or not.
   */
  isDiskKeyEncrypted?: boolean;
  /**
   * The key URL / identifier (KEK).
   */
  keyIdentifier?: string;
  /**
   * The KeyVault resource id for key (KEK).
   */
  kekKeyVaultArmId?: string;
  /**
   * The failover name for the managed disk.
   */
  failoverDiskName?: string;
  /**
   * The test failover name for the managed disk.
   */
  tfoDiskName?: string;
}

/**
 * Contains the possible cases for ProtectionContainerMappingProviderSpecificDetails.
 */
export type ProtectionContainerMappingProviderSpecificDetailsUnion = ProtectionContainerMappingProviderSpecificDetails | A2AProtectionContainerMappingDetails | VMwareCbtProtectionContainerMappingDetails;

/**
 * Container mapping provider specific details.
 */
export interface ProtectionContainerMappingProviderSpecificDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ProtectionContainerMappingProviderSpecificDetails";
}

/**
 * A2A provider specific settings.
 */
export interface A2AProtectionContainerMappingDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * A value indicating whether the auto update is enabled. Possible values include: 'Disabled',
   * 'Enabled'
   */
  agentAutoUpdateStatus?: AgentAutoUpdateStatus;
  /**
   * The automation account arm id.
   */
  automationAccountArmId?: string;
  /**
   * The schedule arm name.
   */
  scheduleName?: string;
  /**
   * The job schedule arm name.
   */
  jobScheduleName?: string;
}

/**
 * Contains the possible cases for ProviderSpecificRecoveryPointDetails.
 */
export type ProviderSpecificRecoveryPointDetailsUnion = ProviderSpecificRecoveryPointDetails | A2ARecoveryPointDetails | InMageAzureV2RecoveryPointDetails;

/**
 * Replication provider specific recovery point details.
 */
export interface ProviderSpecificRecoveryPointDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ProviderSpecificRecoveryPointDetails";
}

/**
 * A2A provider specific recovery point details.
 */
export interface A2ARecoveryPointDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * A value indicating whether the recovery point is multi VM consistent. Possible values include:
   * 'MultiVmSyncRecoveryPoint', 'PerVmRecoveryPoint'
   */
  recoveryPointSyncType?: RecoveryPointSyncType;
  /**
   * List of disk ids representing a recovery point.
   */
  disks?: string[];
}

/**
 * Contains the possible cases for RemoveDisksProviderSpecificInput.
 */
export type RemoveDisksProviderSpecificInputUnion = RemoveDisksProviderSpecificInput | A2ARemoveDisksInput;

/**
 * Remove Disk provider specific input.
 */
export interface RemoveDisksProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RemoveDisksProviderSpecificInput";
}

/**
 * A2A remove disk(s) input.
 */
export interface A2ARemoveDisksInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The list of vm disk vhd URIs.
   */
  vmDisksUris?: string[];
  /**
   * The list of vm managed disk Ids.
   */
  vmManagedDisksIds?: string[];
}

/**
 * A2A unprotected disk details.
 */
export interface A2AUnprotectedDiskDetails {
  /**
   * The source lun Id for the data disk.
   */
  diskLunId?: number;
}

/**
 * IP configuration details.
 */
export interface IPConfig {
  /**
   * The static IP address of the IP configuration.
   */
  staticIPAddress?: string;
  /**
   * The Id of the public IP address associated with the IP configuration.
   */
  publicIpAddressId?: string;
  /**
   * The backend address pools associated with the IP configuration.
   */
  lBBackendAddressPoolIds?: string[];
}

/**
 * Hyper V VM network details.
 */
export interface VMNicDetails {
  /**
   * The nic Id.
   */
  nicId?: string;
  /**
   * The replica nic Id.
   */
  replicaNicId?: string;
  /**
   * The source nic ARM Id.
   */
  sourceNicArmId?: string;
  /**
   * VM subnet name.
   */
  vMSubnetName?: string;
  /**
   * VM network name.
   */
  vMNetworkName?: string;
  /**
   * Recovery VM network Id.
   */
  recoveryVMNetworkId?: string;
  /**
   * Recovery VM subnet name.
   */
  recoveryVMSubnetName?: string;
  /**
   * Ip address type.
   */
  ipAddressType?: string;
  /**
   * Primary nic static IP address.
   */
  primaryNicStaticIPAddress?: string;
  /**
   * Replica nic static IP address.
   */
  replicaNicStaticIPAddress?: string;
  /**
   * Selection type for failover.
   */
  selectionType?: string;
  /**
   * IP allocation type for recovery VM.
   */
  recoveryNicIpAddressType?: string;
  /**
   * The id of the public IP address resource associated with the NIC.
   */
  recoveryPublicIpAddressId?: string;
  /**
   * The id of the NSG associated with the NIC.
   */
  recoveryNetworkSecurityGroupId?: string;
  /**
   * The target backend address pools for the NIC.
   */
  recoveryLBBackendAddressPoolIds?: string[];
  /**
   * A value indicating whether the NIC has accelerated networking enabled.
   */
  enableAcceleratedNetworkingOnRecovery?: boolean;
  /**
   * The network to be used by NIC during test failover.
   */
  tfoVMNetworkId?: string;
  /**
   * The subnet to be used by NIC during test failover.
   */
  tfoVMSubnetName?: string;
  /**
   * The NSG to be used by NIC during test failover.
   */
  tfoNetworkSecurityGroupId?: string;
  /**
   * Whether the test failover NIC has accelerated networking enabled.
   */
  enableAcceleratedNetworkingOnTfo?: boolean;
  /**
   * The IP configurations to be used by NIC during test failover.
   */
  tfoIPConfigs?: IPConfig[];
}

/**
 * Azure VM input endpoint details.
 */
export interface InputEndpoint {
  /**
   * The input endpoint name.
   */
  endpointName?: string;
  /**
   * The input endpoint private port.
   */
  privatePort?: number;
  /**
   * The input endpoint public port.
   */
  publicPort?: number;
  /**
   * The input endpoint protocol.
   */
  protocol?: string;
}

/**
 * Azure to Azure VM synced configuration details.
 */
export interface AzureToAzureVmSyncedConfigDetails {
  /**
   * The Azure VM tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The Azure VM input endpoints.
   */
  inputEndpoints?: InputEndpoint[];
}

/**
 * Contains the possible cases for ReplicationProviderSpecificSettings.
 */
export type ReplicationProviderSpecificSettingsUnion = ReplicationProviderSpecificSettings | A2AReplicationDetails | HyperVReplicaAzureReplicationDetails | HyperVReplicaBaseReplicationDetails | HyperVReplicaBlueReplicationDetails | HyperVReplicaReplicationDetails | InMageAzureV2ReplicationDetails | InMageReplicationDetails;

/**
 * Replication provider specific settings.
 */
export interface ReplicationProviderSpecificSettings {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ReplicationProviderSpecificSettings";
}

/**
 * A2A provider specific settings.
 */
export interface A2AReplicationDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The fabric specific object Id of the virtual machine.
   */
  fabricObjectId?: string;
  /**
   * The initial primary fabric location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly initialPrimaryFabricLocation?: string;
  /**
   * The initial recovery fabric location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly initialRecoveryFabricLocation?: string;
  /**
   * The multi vm group Id.
   */
  multiVmGroupId?: string;
  /**
   * The multi vm group name.
   */
  multiVmGroupName?: string;
  /**
   * Whether Multi VM group is auto created or specified by user. Possible values include:
   * 'AutoCreated', 'UserSpecified'
   */
  multiVmGroupCreateOption?: MultiVmGroupCreateOption;
  /**
   * The management Id.
   */
  managementId?: string;
  /**
   * The list of protected disks.
   */
  protectedDisks?: A2AProtectedDiskDetails[];
  /**
   * The list of unprotected disks.
   */
  unprotectedDisks?: A2AUnprotectedDiskDetails[];
  /**
   * The list of protected managed disks.
   */
  protectedManagedDisks?: A2AProtectedManagedDiskDetails[];
  /**
   * The recovery boot diagnostic storage account Arm Id.
   */
  recoveryBootDiagStorageAccountId?: string;
  /**
   * Primary fabric location.
   */
  primaryFabricLocation?: string;
  /**
   * The recovery fabric location.
   */
  recoveryFabricLocation?: string;
  /**
   * The type of operating system.
   */
  osType?: string;
  /**
   * The size of recovery virtual machine.
   */
  recoveryAzureVMSize?: string;
  /**
   * The name of recovery virtual machine.
   */
  recoveryAzureVMName?: string;
  /**
   * The recovery resource group.
   */
  recoveryAzureResourceGroupId?: string;
  /**
   * The recovery cloud service.
   */
  recoveryCloudService?: string;
  /**
   * The recovery availability set.
   */
  recoveryAvailabilitySet?: string;
  /**
   * The recovery virtual network.
   */
  selectedRecoveryAzureNetworkId?: string;
  /**
   * The test failover virtual network.
   */
  selectedTfoAzureNetworkId?: string;
  /**
   * The virtual machine nic details.
   */
  vmNics?: VMNicDetails[];
  /**
   * The synced configuration details.
   */
  vmSyncedConfigDetails?: AzureToAzureVmSyncedConfigDetails;
  /**
   * The percentage of the monitoring job. The type of the monitoring job is defined by
   * MonitoringJobType property.
   */
  monitoringPercentageCompletion?: number;
  /**
   * The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion
   * property.
   */
  monitoringJobType?: string;
  /**
   * The last heartbeat received from the source server.
   */
  lastHeartbeat?: Date;
  /**
   * The agent version.
   */
  agentVersion?: string;
  /**
   * A value indicating whether replication agent update is required.
   */
  isReplicationAgentUpdateRequired?: boolean;
  /**
   * The recovery fabric object Id.
   */
  recoveryFabricObjectId?: string;
  /**
   * The protection state for the vm.
   */
  vmProtectionState?: string;
  /**
   * The protection state description for the vm.
   */
  vmProtectionStateDescription?: string;
  /**
   * An id associated with the PE that survives actions like switch protection which change the
   * backing PE/CPE objects internally.The lifecycle id gets carried forward to have a
   * link/continuity in being able to have an Id that denotes the "same" protected item even though
   * other internal Ids/ARM Id might be changing.
   */
  lifecycleId?: string;
  /**
   * The test failover fabric object Id.
   */
  testFailoverRecoveryFabricObjectId?: string;
  /**
   * The last RPO value in seconds.
   */
  rpoInSeconds?: number;
  /**
   * The time (in UTC) when the last RPO value was calculated by Protection Service.
   */
  lastRpoCalculatedTime?: Date;
  /**
   * The recovery availability zone.
   */
  recoveryAvailabilityZone?: string;
  /**
   * The encryption type of the VM. Possible values include: 'NotEncrypted', 'OnePassEncrypted',
   * 'TwoPassEncrypted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmEncryptionType?: VmEncryptionType;
  /**
   * The test failover VM name.
   */
  tfoAzureVMName?: string;
}

/**
 * Contains the possible cases for ReverseReplicationProviderSpecificInput.
 */
export type ReverseReplicationProviderSpecificInputUnion = ReverseReplicationProviderSpecificInput | A2AReprotectInput | HyperVReplicaAzureReprotectInput | InMageAzureV2ReprotectInput | InMageReprotectInput;

/**
 * Provider specific reverse replication input.
 */
export interface ReverseReplicationProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ReverseReplicationProviderSpecificInput";
}

/**
 * Azure specific reprotect input.
 */
export interface A2AReprotectInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The recovery container Id.
   */
  recoveryContainerId?: string;
  /**
   * The list of vm disk details.
   */
  vmDisks?: A2AVmDiskInputDetails[];
  /**
   * The recovery resource group Id. Valid for V2 scenarios.
   */
  recoveryResourceGroupId?: string;
  /**
   * The recovery cloud service Id. Valid for V1 scenarios.
   */
  recoveryCloudServiceId?: string;
  /**
   * The recovery availability set.
   */
  recoveryAvailabilitySetId?: string;
  /**
   * The Policy Id.
   */
  policyId?: string;
}

/**
 * Contains the possible cases for SwitchProtectionProviderSpecificInput.
 */
export type SwitchProtectionProviderSpecificInputUnion = SwitchProtectionProviderSpecificInput | A2ASwitchProtectionInput;

/**
 * Provider specific switch protection input.
 */
export interface SwitchProtectionProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "SwitchProtectionProviderSpecificInput";
}

/**
 * A2A specific switch protection input.
 */
export interface A2ASwitchProtectionInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The recovery container Id.
   */
  recoveryContainerId?: string;
  /**
   * The list of vm disk details.
   */
  vmDisks?: A2AVmDiskInputDetails[];
  /**
   * The list of vm managed disk details.
   */
  vmManagedDisks?: A2AVmManagedDiskInputDetails[];
  /**
   * The recovery resource group Id. Valid for V2 scenarios.
   */
  recoveryResourceGroupId?: string;
  /**
   * The recovery cloud service Id. Valid for V1 scenarios.
   */
  recoveryCloudServiceId?: string;
  /**
   * The recovery availability set.
   */
  recoveryAvailabilitySetId?: string;
  /**
   * The Policy Id.
   */
  policyId?: string;
  /**
   * The boot diagnostic storage account.
   */
  recoveryBootDiagStorageAccountId?: string;
  /**
   * The recovery disk encryption information.
   */
  diskEncryptionInfo?: DiskEncryptionInfo;
}

/**
 * Contains the possible cases for ReplicationProviderSpecificUpdateContainerMappingInput.
 */
export type ReplicationProviderSpecificUpdateContainerMappingInputUnion = ReplicationProviderSpecificUpdateContainerMappingInput | A2AUpdateContainerMappingInput;

/**
 * Provider specific input for update pairing operations.
 */
export interface ReplicationProviderSpecificUpdateContainerMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ReplicationProviderSpecificUpdateContainerMappingInput";
}

/**
 * A2A update protection container mapping.
 */
export interface A2AUpdateContainerMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * A value indicating whether the auto update is enabled. Possible values include: 'Disabled',
   * 'Enabled'
   */
  agentAutoUpdateStatus?: AgentAutoUpdateStatus;
  /**
   * The automation account arm id.
   */
  automationAccountArmId?: string;
}

/**
 * Azure VM managed disk update input details.
 */
export interface A2AVmManagedDiskUpdateDetails {
  /**
   * The disk Id.
   */
  diskId?: string;
  /**
   * The target disk type before failover.
   */
  recoveryTargetDiskAccountType?: string;
  /**
   * The replica disk type before failover.
   */
  recoveryReplicaDiskAccountType?: string;
  /**
   * The recovery disk encryption information (for one / single pass flows).
   */
  diskEncryptionInfo?: DiskEncryptionInfo;
  /**
   * The target disk name for unplanned failover operation.
   */
  failoverDiskName?: string;
  /**
   * The target disk name for test failover operation.
   */
  tfoDiskName?: string;
}

/**
 * Contains the possible cases for UpdateReplicationProtectedItemProviderInput.
 */
export type UpdateReplicationProtectedItemProviderInputUnion = UpdateReplicationProtectedItemProviderInput | A2AUpdateReplicationProtectedItemInput | HyperVReplicaAzureUpdateReplicationProtectedItemInput | InMageAzureV2UpdateReplicationProtectedItemInput;

/**
 * Update replication protected item provider specific input.
 */
export interface UpdateReplicationProtectedItemProviderInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "UpdateReplicationProtectedItemProviderInput";
}

/**
 * InMage Azure V2 input to update replication protected item.
 */
export interface A2AUpdateReplicationProtectedItemInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The target cloud service ARM Id (for V1).
   */
  recoveryCloudServiceId?: string;
  /**
   * The target resource group ARM Id (for V2).
   */
  recoveryResourceGroupId?: string;
  /**
   * Managed disk update details.
   */
  managedDiskUpdateDetails?: A2AVmManagedDiskUpdateDetails[];
  /**
   * The boot diagnostic storage account.
   */
  recoveryBootDiagStorageAccountId?: string;
  /**
   * The recovery os disk encryption information.
   */
  diskEncryptionInfo?: DiskEncryptionInfo;
  /**
   * The user given name for test failover VM.
   */
  tfoAzureVMName?: string;
}

/**
 * Add Disks input properties.
 */
export interface AddDisksInputProperties {
  /**
   * The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be
   * AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput
   * object. For HyperVReplicaAzure provider, it can be null.
   */
  providerSpecificDetails?: AddDisksProviderSpecificInputUnion;
}

/**
 * Input for add disk(s) operation.
 */
export interface AddDisksInput {
  /**
   * Add disks input properties.
   */
  properties?: AddDisksInputProperties;
}

/**
 * Identity provider input.
 */
export interface IdentityProviderInput {
  /**
   * The tenant Id for the service principal with which the on-premise management/data plane
   * components would communicate with our Azure services.
   */
  tenantId: string;
  /**
   * The application/client Id for the service principal with which the on-premise management/data
   * plane components would communicate with our Azure services.
   */
  applicationId: string;
  /**
   * The object Id of the service principal with which the on-premise management/data plane
   * components would communicate with our Azure services.
   */
  objectId: string;
  /**
   * The intended Audience of the service principal with which the on-premise management/data plane
   * components would communicate with our Azure services.
   */
  audience: string;
  /**
   * The base authority for Azure Active Directory authentication.
   */
  aadAuthority: string;
}

/**
 * The properties of an add provider request.
 */
export interface AddRecoveryServicesProviderInputProperties {
  /**
   * The name of the machine where the provider is getting added.
   */
  machineName: string;
  /**
   * The identity provider input for DRA authentication.
   */
  authenticationIdentityInput: IdentityProviderInput;
  /**
   * The identity provider input for resource access.
   */
  resourceAccessIdentityInput: IdentityProviderInput;
}

/**
 * Input required to add a provider.
 */
export interface AddRecoveryServicesProviderInput {
  /**
   * The properties of an add provider request.
   */
  properties: AddRecoveryServicesProviderInputProperties;
}

/**
 * The properties of an add vCenter request.
 */
export interface AddVCenterRequestProperties {
  /**
   * The friendly name of the vCenter.
   */
  friendlyName?: string;
  /**
   * The IP address of the vCenter to be discovered.
   */
  ipAddress?: string;
  /**
   * The process server Id from where the discovery is orchestrated.
   */
  processServerId?: string;
  /**
   * The port number for discovery.
   */
  port?: string;
  /**
   * The account Id which has privileges to discover the vCenter.
   */
  runAsAccountId?: string;
}

/**
 * Input required to add vCenter.
 */
export interface AddVCenterRequest {
  /**
   * The properties of an add vCenter request.
   */
  properties?: AddVCenterRequestProperties;
}

/**
 * The properties of an alert.
 */
export interface AlertProperties {
  /**
   * A value indicating whether to send email to subscription administrator.
   */
  sendToOwners?: string;
  /**
   * The custom email address for sending emails.
   */
  customEmailAddresses?: string[];
  /**
   * The locale for the email notification.
   */
  locale?: string;
}

/**
 * Azure resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource Name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource Type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource Location
   */
  location?: string;
}

/**
 * Implements the Alert class.
 */
export interface Alert extends Resource {
  /**
   * Alert related data.
   */
  properties?: AlertProperties;
}

/**
 * Input properties to apply recovery point.
 */
export interface ApplyRecoveryPointInputProperties {
  /**
   * The recovery point Id.
   */
  recoveryPointId?: string;
  /**
   * Provider specific input for applying recovery point.
   */
  providerSpecificDetails?: ApplyRecoveryPointProviderSpecificInputUnion;
}

/**
 * Input to apply recovery point.
 */
export interface ApplyRecoveryPointInput {
  /**
   * The input properties to apply recovery point.
   */
  properties?: ApplyRecoveryPointInputProperties;
}

/**
 * Contains the possible cases for JobDetails.
 */
export type JobDetailsUnion = JobDetails | AsrJobDetails | ExportJobDetails | FailoverJobDetails | SwitchProtectionJobDetails | TestFailoverJobDetails;

/**
 * Job details based on specific job type.
 */
export interface JobDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "JobDetails";
  /**
   * The affected object properties like source server, source cloud, target server, target cloud
   * etc. based on the workflow object details.
   */
  affectedObjectDetails?: { [propertyName: string]: string };
}

/**
 * This class represents job details based on specific job type.
 */
export interface AsrJobDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "AsrJobDetails";
  /**
   * The affected object properties like source server, source cloud, target server, target cloud
   * etc. based on the workflow object details.
   */
  affectedObjectDetails?: { [propertyName: string]: string };
}

/**
 * Contains the possible cases for TaskTypeDetails.
 */
export type TaskTypeDetailsUnion = TaskTypeDetails | AutomationRunbookTaskDetails | ConsistencyCheckTaskDetails | FabricReplicationGroupTaskDetails | JobTaskDetails | ManualActionTaskDetails | ScriptActionTaskDetails | VirtualMachineTaskDetails | VmNicUpdatesTaskDetails;

/**
 * Task details based on specific task type.
 */
export interface TaskTypeDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "TaskTypeDetails";
}

/**
 * Contains the possible cases for GroupTaskDetails.
 */
export type GroupTaskDetailsUnion = GroupTaskDetails | InlineWorkflowTaskDetails | RecoveryPlanGroupTaskDetails | RecoveryPlanShutdownGroupTaskDetails;

/**
 * This class represents the group task details when parent child relationship exists in the drill
 * down.
 */
export interface GroupTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "GroupTaskDetails";
  /**
   * The child tasks.
   */
  childTasks?: ASRTask[];
}

/**
 * ASR error model
 */
export interface ServiceError {
  /**
   * Error code.
   */
  code?: string;
  /**
   * Error message.
   */
  message?: string;
  /**
   * Possible causes of error.
   */
  possibleCauses?: string;
  /**
   * Recommended action to resolve error.
   */
  recommendedAction?: string;
  /**
   * Activity Id.
   */
  activityId?: string;
}

/**
 * This class contains the error details per object.
 */
export interface ProviderError {
  /**
   * The Error code.
   */
  errorCode?: number;
  /**
   * The Error message.
   */
  errorMessage?: string;
  /**
   * The Provider error Id.
   */
  errorId?: string;
  /**
   * The possible causes for the error.
   */
  possibleCauses?: string;
  /**
   * The recommended action to resolve the error.
   */
  recommendedAction?: string;
}

/**
 * This class contains the error details per object.
 */
export interface JobErrorDetails {
  /**
   * The Service error details.
   */
  serviceErrorDetails?: ServiceError;
  /**
   * The Provider error details.
   */
  providerErrorDetails?: ProviderError;
  /**
   * Error level of error.
   */
  errorLevel?: string;
  /**
   * The creation time of job error.
   */
  creationTime?: Date;
  /**
   * The Id of the task.
   */
  taskId?: string;
}

/**
 * Task of the Job.
 */
export interface ASRTask {
  /**
   * The Id.
   */
  taskId?: string;
  /**
   * The unique Task name.
   */
  name?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * The state/actions applicable on this task.
   */
  allowedActions?: string[];
  /**
   * The name.
   */
  friendlyName?: string;
  /**
   * The State. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled,
   * Suspended or Other.
   */
  state?: string;
  /**
   * The description of the task state. For example - For Succeeded state, description can be
   * Completed, PartiallySucceeded, CompletedWithInformation or Skipped.
   */
  stateDescription?: string;
  /**
   * The type of task. Details in CustomDetails property depend on this type.
   */
  taskType?: string;
  /**
   * The custom task details based on the task type.
   */
  customDetails?: TaskTypeDetailsUnion;
  /**
   * The custom task details based on the task type, if the task type is GroupTaskDetails or one of
   * the types derived from it.
   */
  groupTaskCustomDetails?: GroupTaskDetailsUnion;
  /**
   * The task error details.
   */
  errors?: JobErrorDetails[];
}

/**
 * This class represents the task details for an automation runbook.
 */
export interface AutomationRunbookTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "AutomationRunbookTaskDetails";
  /**
   * The recovery plan task name.
   */
  name?: string;
  /**
   * The cloud service of the automation runbook account.
   */
  cloudServiceName?: string;
  /**
   * The subscription Id of the automation runbook account.
   */
  subscriptionId?: string;
  /**
   * The automation account name of the runbook.
   */
  accountName?: string;
  /**
   * The runbook Id.
   */
  runbookId?: string;
  /**
   * The runbook name.
   */
  runbookName?: string;
  /**
   * The job Id of the runbook execution.
   */
  jobId?: string;
  /**
   * The execution output of the runbook.
   */
  jobOutput?: string;
  /**
   * A value indicating whether it is a primary side script or not.
   */
  isPrimarySideScript?: boolean;
}

/**
 * Contains the possible cases for FabricSpecificCreationInput.
 */
export type FabricSpecificCreationInputUnion = FabricSpecificCreationInput | AzureFabricCreationInput | VMwareV2FabricCreationInput;

/**
 * Fabric provider specific settings.
 */
export interface FabricSpecificCreationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "FabricSpecificCreationInput";
}

/**
 * Fabric provider specific settings.
 */
export interface AzureFabricCreationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "Azure";
  /**
   * The Location.
   */
  location?: string;
}

/**
 * Contains the possible cases for FabricSpecificDetails.
 */
export type FabricSpecificDetailsUnion = FabricSpecificDetails | AzureFabricSpecificDetails | HyperVSiteDetails | VmmDetails | VMwareDetails | VMwareV2FabricSpecificDetails;

/**
 * Fabric specific details.
 */
export interface FabricSpecificDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "FabricSpecificDetails";
}

/**
 * Azure Fabric Specific Details.
 */
export interface AzureFabricSpecificDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "Azure";
  /**
   * The Location for the Azure fabric.
   */
  location?: string;
  /**
   * The container Ids for the Azure fabric.
   */
  containerIds?: string[];
}

/**
 * Contains the possible cases for FabricSpecificCreateNetworkMappingInput.
 */
export type FabricSpecificCreateNetworkMappingInputUnion = FabricSpecificCreateNetworkMappingInput | AzureToAzureCreateNetworkMappingInput | VmmToAzureCreateNetworkMappingInput | VmmToVmmCreateNetworkMappingInput;

/**
 * Input details specific to fabrics during Network Mapping.
 */
export interface FabricSpecificCreateNetworkMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "FabricSpecificCreateNetworkMappingInput";
}

/**
 * Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
 */
export interface AzureToAzureCreateNetworkMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "AzureToAzure";
  /**
   * The primary azure vnet Id.
   */
  primaryNetworkId?: string;
}

/**
 * Contains the possible cases for NetworkMappingFabricSpecificSettings.
 */
export type NetworkMappingFabricSpecificSettingsUnion = NetworkMappingFabricSpecificSettings | AzureToAzureNetworkMappingSettings | VmmToAzureNetworkMappingSettings | VmmToVmmNetworkMappingSettings;

/**
 * Network Mapping fabric specific settings.
 */
export interface NetworkMappingFabricSpecificSettings {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "NetworkMappingFabricSpecificSettings";
}

/**
 * A2A Network Mapping fabric specific settings.
 */
export interface AzureToAzureNetworkMappingSettings {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "AzureToAzure";
  /**
   * The primary fabric location.
   */
  primaryFabricLocation?: string;
  /**
   * The recovery fabric location.
   */
  recoveryFabricLocation?: string;
}

/**
 * Contains the possible cases for FabricSpecificUpdateNetworkMappingInput.
 */
export type FabricSpecificUpdateNetworkMappingInputUnion = FabricSpecificUpdateNetworkMappingInput | AzureToAzureUpdateNetworkMappingInput | VmmToAzureUpdateNetworkMappingInput | VmmToVmmUpdateNetworkMappingInput;

/**
 * Input details specific to fabrics during Network Mapping.
 */
export interface FabricSpecificUpdateNetworkMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "FabricSpecificUpdateNetworkMappingInput";
}

/**
 * Updates network mappings input.
 */
export interface AzureToAzureUpdateNetworkMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "AzureToAzure";
  /**
   * The primary azure vnet Id.
   */
  primaryNetworkId?: string;
}

/**
 * Disk details for E2A provider.
 */
export interface AzureVmDiskDetails {
  /**
   * VHD type.
   */
  vhdType?: string;
  /**
   * The VHD id.
   */
  vhdId?: string;
  /**
   * The disk resource id.
   */
  diskId?: string;
  /**
   * VHD name.
   */
  vhdName?: string;
  /**
   * Max side in MB.
   */
  maxSizeMB?: string;
  /**
   * Blob uri of the Azure disk.
   */
  targetDiskLocation?: string;
  /**
   * The target Azure disk name.
   */
  targetDiskName?: string;
  /**
   * Ordinal\LunId of the disk for the Azure VM.
   */
  lunId?: string;
  /**
   * The DiskEncryptionSet ARM ID.
   */
  diskEncryptionSetId?: string;
}

/**
 * Represents the error used to indicate why the target compute size is not applicable.
 */
export interface ComputeSizeErrorDetails {
  /**
   * The error message.
   */
  message?: string;
  /**
   * The severity of the error.
   */
  severity?: string;
}

/**
 * Contains the possible cases for ConfigurationSettings.
 */
export type ConfigurationSettingsUnion = ConfigurationSettings | HyperVVirtualMachineDetails | ReplicationGroupDetails | VmmVirtualMachineDetails | VMwareVirtualMachineDetails;

/**
 * Replication provider specific settings.
 */
export interface ConfigurationSettings {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ConfigurationSettings";
}

/**
 * Properties of a configure alert request.
 */
export interface ConfigureAlertRequestProperties {
  /**
   * A value indicating whether to send email to subscription administrator.
   */
  sendToOwners?: string;
  /**
   * The custom email address for sending emails.
   */
  customEmailAddresses?: string[];
  /**
   * The locale for the email notification.
   */
  locale?: string;
}

/**
 * Request to configure alerts for the system.
 */
export interface ConfigureAlertRequest {
  /**
   * The properties of a configure alert request.
   */
  properties?: ConfigureAlertRequestProperties;
}

/**
 * This class stores the monitoring details for consistency check of inconsistent Protected Entity.
 */
export interface InconsistentVmDetails {
  /**
   * The Vm name.
   */
  vmName?: string;
  /**
   * The Cloud name.
   */
  cloudName?: string;
  /**
   * The list of details regarding state of the Protected Entity in SRS and On prem.
   */
  details?: string[];
  /**
   * The list of error ids.
   */
  errorIds?: string[];
}

/**
 * This class contains monitoring details of all the inconsistent Protected Entities in Vmm.
 */
export interface ConsistencyCheckTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ConsistencyCheckTaskDetails";
  /**
   * The list of inconsistent Vm details.
   */
  vmDetails?: InconsistentVmDetails[];
}

/**
 * Common input details for network mapping operation.
 */
export interface CreateNetworkMappingInputProperties {
  /**
   * Recovery fabric Name.
   */
  recoveryFabricName?: string;
  /**
   * Recovery network Id.
   */
  recoveryNetworkId?: string;
  /**
   * Fabric specific input properties.
   */
  fabricSpecificDetails?: FabricSpecificCreateNetworkMappingInputUnion;
}

/**
 * Create network mappings input.
 */
export interface CreateNetworkMappingInput {
  /**
   * Input properties for creating network mapping.
   */
  properties?: CreateNetworkMappingInputProperties;
}

/**
 * Policy creation properties.
 */
export interface CreatePolicyInputProperties {
  /**
   * The ReplicationProviderSettings.
   */
  providerSpecificInput?: PolicyProviderSpecificInputUnion;
}

/**
 * Protection Policy input.
 */
export interface CreatePolicyInput {
  /**
   * Policy creation properties.
   */
  properties?: CreatePolicyInputProperties;
}

/**
 * Create protection container input properties.
 */
export interface CreateProtectionContainerInputProperties {
  /**
   * Provider specific inputs for container creation.
   */
  providerSpecificInput?: ReplicationProviderSpecificContainerCreationInputUnion[];
}

/**
 * Create protection container input.
 */
export interface CreateProtectionContainerInput {
  /**
   * Create protection container input properties.
   */
  properties?: CreateProtectionContainerInputProperties;
}

/**
 * Configure pairing input properties.
 */
export interface CreateProtectionContainerMappingInputProperties {
  /**
   * The target unique protection container name.
   */
  targetProtectionContainerId?: string;
  /**
   * Applicable policy.
   */
  policyId?: string;
  /**
   * Provider specific input for pairing.
   */
  providerSpecificInput?: ReplicationProviderSpecificContainerMappingInputUnion;
}

/**
 * Configure pairing input.
 */
export interface CreateProtectionContainerMappingInput {
  /**
   * Configure protection input properties.
   */
  properties?: CreateProtectionContainerMappingInputProperties;
}

/**
 * Recovery plan protected item.
 */
export interface RecoveryPlanProtectedItem {
  /**
   * The ARM Id of the recovery plan protected item.
   */
  id?: string;
  /**
   * The virtual machine Id.
   */
  virtualMachineId?: string;
}

/**
 * Contains the possible cases for RecoveryPlanActionDetails.
 */
export type RecoveryPlanActionDetailsUnion = RecoveryPlanActionDetails | RecoveryPlanAutomationRunbookActionDetails | RecoveryPlanManualActionDetails | RecoveryPlanScriptActionDetails;

/**
 * Recovery plan action custom details.
 */
export interface RecoveryPlanActionDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RecoveryPlanActionDetails";
}

/**
 * Recovery plan action details.
 */
export interface RecoveryPlanAction {
  /**
   * The action name.
   */
  actionName: string;
  /**
   * The list of failover types.
   */
  failoverTypes: ReplicationProtectedItemOperation[];
  /**
   * The list of failover directions.
   */
  failoverDirections: PossibleOperationsDirections[];
  /**
   * The custom details.
   */
  customDetails: RecoveryPlanActionDetailsUnion;
}

/**
 * Recovery plan group details.
 */
export interface RecoveryPlanGroup {
  /**
   * The group type. Possible values include: 'Shutdown', 'Boot', 'Failover'
   */
  groupType: RecoveryPlanGroupType;
  /**
   * The list of protected items.
   */
  replicationProtectedItems?: RecoveryPlanProtectedItem[];
  /**
   * The start group actions.
   */
  startGroupActions?: RecoveryPlanAction[];
  /**
   * The end group actions.
   */
  endGroupActions?: RecoveryPlanAction[];
}

/**
 * Contains the possible cases for RecoveryPlanProviderSpecificInput.
 */
export type RecoveryPlanProviderSpecificInputUnion = RecoveryPlanProviderSpecificInput | RecoveryPlanA2AInput;

/**
 * Recovery plan provider specific input base class.
 */
export interface RecoveryPlanProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RecoveryPlanProviderSpecificInput";
}

/**
 * Recovery plan creation properties.
 */
export interface CreateRecoveryPlanInputProperties {
  /**
   * The primary fabric Id.
   */
  primaryFabricId: string;
  /**
   * The recovery fabric Id.
   */
  recoveryFabricId: string;
  /**
   * The failover deployment model. Possible values include: 'NotApplicable', 'Classic',
   * 'ResourceManager'
   */
  failoverDeploymentModel?: FailoverDeploymentModel;
  /**
   * The recovery plan groups.
   */
  groups: RecoveryPlanGroup[];
  /**
   * The provider specific input.
   */
  providerSpecificInput?: RecoveryPlanProviderSpecificInputUnion[];
}

/**
 * Create recovery plan input class.
 */
export interface CreateRecoveryPlanInput {
  /**
   * Recovery plan creation properties.
   */
  properties: CreateRecoveryPlanInputProperties;
}

/**
 * Current job details of the migration item.
 */
export interface CurrentJobDetails {
  /**
   * The job name.
   */
  jobName?: string;
  /**
   * The ARM Id of the job being executed.
   */
  jobId?: string;
  /**
   * The start time of the job.
   */
  startTime?: Date;
}

/**
 * Current scenario details of the protected entity.
 */
export interface CurrentScenarioDetails {
  /**
   * Scenario name.
   */
  scenarioName?: string;
  /**
   * ARM Id of the job being executed.
   */
  jobId?: string;
  /**
   * Start time of the workflow.
   */
  startTime?: Date;
}

/**
 * The data store details of the MT.
 */
export interface DataStore {
  /**
   * The symbolic name of data store.
   */
  symbolicName?: string;
  /**
   * The uuid of data store.
   */
  uuid?: string;
  /**
   * The capacity of data store in GBs.
   */
  capacity?: string;
  /**
   * The free space of data store in GBs.
   */
  freeSpace?: string;
  /**
   * The type of data store.
   */
  type?: string;
}

/**
 * Contains the possible cases for DisableProtectionProviderSpecificInput.
 */
export type DisableProtectionProviderSpecificInputUnion = DisableProtectionProviderSpecificInput | InMageDisableProtectionProviderSpecificInput;

/**
 * Disable protection provider specific input.
 */
export interface DisableProtectionProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "DisableProtectionProviderSpecificInput";
}

/**
 * Disable protection input properties.
 */
export interface DisableProtectionInputProperties {
  /**
   * Disable protection reason. It can have values NotSpecified/MigrationComplete. Possible values
   * include: 'NotSpecified', 'MigrationComplete'
   */
  disableProtectionReason?: DisableProtectionReason;
  /**
   * Replication provider specific input.
   */
  replicationProviderInput?: DisableProtectionProviderSpecificInputUnion;
}

/**
 * Disable protection input.
 */
export interface DisableProtectionInput {
  /**
   * Disable protection input properties.
   */
  properties?: DisableProtectionInputProperties;
}

/**
 * Discover protectable item properties.
 */
export interface DiscoverProtectableItemRequestProperties {
  /**
   * The friendly name of the physical machine.
   */
  friendlyName?: string;
  /**
   * The IP address of the physical machine to be discovered.
   */
  ipAddress?: string;
  /**
   * The OS type on the physical machine.
   */
  osType?: string;
}

/**
 * Request to add a physical machine as a protectable item in a container.
 */
export interface DiscoverProtectableItemRequest {
  /**
   * The properties of a discover protectable item request.
   */
  properties?: DiscoverProtectableItemRequestProperties;
}

/**
 * On-prem disk details data.
 */
export interface DiskDetails {
  /**
   * The hard disk max size in MB.
   */
  maxSizeMB?: number;
  /**
   * The type of the volume.
   */
  vhdType?: string;
  /**
   * The VHD Id.
   */
  vhdId?: string;
  /**
   * The VHD name.
   */
  vhdName?: string;
}

/**
 * Volume details.
 */
export interface DiskVolumeDetails {
  /**
   * The volume label.
   */
  label?: string;
  /**
   * The volume name.
   */
  name?: string;
}

/**
 * Contains the localized display information for this particular operation / action. These value
 * will be used by several clients for (1) custom role definitions for RBAC; (2) complex query
 * filters for the event service; and (3) audit history / records for management operations.
 */
export interface Display {
  /**
   * The provider. The localized friendly form of the resource provider name – it is expected to
   * also include the publisher/company responsible. It should use Title Casing and begin with
   * "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft
   * Compute."
   */
  provider?: string;
  /**
   * The resource. The localized friendly form of the resource related to this action/operation –
   * it should match the public documentation for the resource provider. It should use Title
   * Casing. This value should be unique for a particular URL type (e.g. nested types should *not*
   * reuse their parent’s display.resource field). e.g. "Virtual Machines" or "Scheduler Job
   * Collections", or "Virtual Machine VM Sizes" or "Scheduler Jobs"
   */
  resource?: string;
  /**
   * The operation. The localized friendly name for the operation, as it should be shown to the
   * user. It should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should
   * use Title Casing. Prescriptive guidance: Read Create or Update Delete 'ActionName'
   */
  operation?: string;
  /**
   * The description. The localized friendly description for the operation, as it should be shown
   * to the user. It should be thorough, yet concise – it will be used in tool tips and detailed
   * views. Prescriptive guidance for namespaces: Read any 'display.provider' resource Create or
   * Update any 'display.provider' resource Delete any 'display.provider' resource Perform any
   * other action on any 'display.provider' resource Prescriptive guidance for namespaces: Read any
   * 'display.resource' Create or Update any 'display.resource' Delete any 'display.resource'
   * 'ActionName' any 'display.resources'
   */
  description?: string;
}

/**
 * Contains the possible cases for EnableMigrationProviderSpecificInput.
 */
export type EnableMigrationProviderSpecificInputUnion = EnableMigrationProviderSpecificInput | VMwareCbtEnableMigrationInput;

/**
 * Enable migration provider specific input.
 */
export interface EnableMigrationProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "EnableMigrationProviderSpecificInput";
}

/**
 * Enable migration input properties.
 */
export interface EnableMigrationInputProperties {
  /**
   * The policy Id.
   */
  policyId: string;
  /**
   * The provider specific details.
   */
  providerSpecificDetails: EnableMigrationProviderSpecificInputUnion;
}

/**
 * Enable migration input.
 */
export interface EnableMigrationInput {
  /**
   * Enable migration input properties.
   */
  properties: EnableMigrationInputProperties;
}

/**
 * Enable protection input properties.
 */
export interface EnableProtectionInputProperties {
  /**
   * The Policy Id.
   */
  policyId?: string;
  /**
   * The protectable item Id.
   */
  protectableItemId?: string;
  /**
   * The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be
   * AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput
   * object. For HyperVReplicaAzure provider, it can be null.
   */
  providerSpecificDetails?: EnableProtectionProviderSpecificInputUnion;
}

/**
 * Enable protection input.
 */
export interface EnableProtectionInput {
  /**
   * Enable protection input properties.
   */
  properties?: EnableProtectionInputProperties;
}

/**
 * Encryption details for the fabric.
 */
export interface EncryptionDetails {
  /**
   * The key encryption key state for the Vmm.
   */
  kekState?: string;
  /**
   * The key encryption key certificate thumbprint.
   */
  kekCertThumbprint?: string;
  /**
   * The key encryption key certificate expiry date.
   */
  kekCertExpiryDate?: Date;
}

/**
 * Contains the possible cases for EventSpecificDetails.
 */
export type EventSpecificDetailsUnion = EventSpecificDetails | JobStatusEventDetails;

/**
 * Model class for event specific details for an event.
 */
export interface EventSpecificDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "EventSpecificDetails";
}

/**
 * Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child
 * errors. InnerHealthError is used because this will prevent an infinite loop of structures when
 * Hydra tries to auto-generate the contract. We are exposing the related health errors as inner
 * health errors and all API consumers can utilize this in the same fashion as Exception -&gt;
 * InnerException.
 */
export interface InnerHealthError {
  /**
   * Source of error.
   */
  errorSource?: string;
  /**
   * Type of error.
   */
  errorType?: string;
  /**
   * Level of error.
   */
  errorLevel?: string;
  /**
   * Category of error.
   */
  errorCategory?: string;
  /**
   * Error code.
   */
  errorCode?: string;
  /**
   * Summary message of the entity.
   */
  summaryMessage?: string;
  /**
   * Error message.
   */
  errorMessage?: string;
  /**
   * Possible causes of error.
   */
  possibleCauses?: string;
  /**
   * Recommended action to resolve error.
   */
  recommendedAction?: string;
  /**
   * Error creation time (UTC)
   */
  creationTimeUtc?: Date;
  /**
   * DRA error message.
   */
  recoveryProviderErrorMessage?: string;
  /**
   * ID of the entity.
   */
  entityId?: string;
}

/**
 * Health Error
 */
export interface HealthError {
  /**
   * The inner health errors. HealthError having a list of HealthError as child errors is
   * problematic. InnerHealthError is used because this will prevent an infinite loop of structures
   * when Hydra tries to auto-generate the contract. We are exposing the related health errors as
   * inner health errors and all API consumers can utilize this in the same fashion as Exception
   * -&gt; InnerException.
   */
  innerHealthErrors?: InnerHealthError[];
  /**
   * Source of error.
   */
  errorSource?: string;
  /**
   * Type of error.
   */
  errorType?: string;
  /**
   * Level of error.
   */
  errorLevel?: string;
  /**
   * Category of error.
   */
  errorCategory?: string;
  /**
   * Error code.
   */
  errorCode?: string;
  /**
   * Summary message of the entity.
   */
  summaryMessage?: string;
  /**
   * Error message.
   */
  errorMessage?: string;
  /**
   * Possible causes of error.
   */
  possibleCauses?: string;
  /**
   * Recommended action to resolve error.
   */
  recommendedAction?: string;
  /**
   * Error creation time (UTC)
   */
  creationTimeUtc?: Date;
  /**
   * DRA error message.
   */
  recoveryProviderErrorMessage?: string;
  /**
   * ID of the entity.
   */
  entityId?: string;
  /**
   * The health error unique id.
   */
  errorId?: string;
  /**
   * Value indicating whether the health error is customer resolvable. Possible values include:
   * 'Allowed', 'NotAllowed'
   */
  customerResolvability?: HealthErrorCustomerResolvability;
}

/**
 * The properties of a monitoring event.
 */
export interface EventProperties {
  /**
   * The Id of the monitoring event.
   */
  eventCode?: string;
  /**
   * The event name.
   */
  description?: string;
  /**
   * The type of the event. for example: VM Health, Server Health, Job Failure etc.
   */
  eventType?: string;
  /**
   * The friendly name of the source of the event on which it is raised (for example, VM, VMM etc).
   */
  affectedObjectFriendlyName?: string;
  /**
   * The severity of the event.
   */
  severity?: string;
  /**
   * The time of occurrence of the event.
   */
  timeOfOccurrence?: Date;
  /**
   * The ARM ID of the fabric.
   */
  fabricId?: string;
  /**
   * The provider specific settings.
   */
  providerSpecificDetails?: EventProviderSpecificDetailsUnion;
  /**
   * The event specific settings.
   */
  eventSpecificDetails?: EventSpecificDetailsUnion;
  /**
   * The list of errors / warnings capturing details associated with the issue(s).
   */
  healthErrors?: HealthError[];
}

/**
 * Implements the Event class.
 */
export interface Event extends Resource {
  /**
   * Event related data.
   */
  properties?: EventProperties;
}

/**
 * Implements the event query parameter.
 */
export interface EventQueryParameter {
  /**
   * The source id of the events to be queried.
   */
  eventCode?: string;
  /**
   * The severity of the events to be queried.
   */
  severity?: string;
  /**
   * The type of the events to be queried.
   */
  eventType?: string;
  /**
   * The affected object server id of the events to be queried.
   */
  fabricName?: string;
  /**
   * The affected object name of the events to be queried.
   */
  affectedObjectFriendlyName?: string;
  /**
   * The start time of the time range within which the events are to be queried.
   */
  startTime?: Date;
  /**
   * The end time of the time range within which the events are to be queried.
   */
  endTime?: Date;
}

/**
 * This class represents details for export jobs workflow.
 */
export interface ExportJobDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ExportJobDetails";
  /**
   * The affected object properties like source server, source cloud, target server, target cloud
   * etc. based on the workflow object details.
   */
  affectedObjectDetails?: { [propertyName: string]: string };
  /**
   * BlobUri of the exported jobs.
   */
  blobUri?: string;
  /**
   * The sas token to access blob.
   */
  sasToken?: string;
}

/**
 * Fabric properties.
 */
export interface FabricProperties {
  /**
   * Friendly name of the fabric.
   */
  friendlyName?: string;
  /**
   * Encryption details for the fabric.
   */
  encryptionDetails?: EncryptionDetails;
  /**
   * Rollover encryption details for the fabric.
   */
  rolloverEncryptionDetails?: EncryptionDetails;
  /**
   * Dra Registration Id.
   */
  internalIdentifier?: string;
  /**
   * BCDR state of the fabric.
   */
  bcdrState?: string;
  /**
   * Fabric specific settings.
   */
  customDetails?: FabricSpecificDetailsUnion;
  /**
   * Fabric health error details.
   */
  healthErrorDetails?: HealthError[];
  /**
   * Health of fabric.
   */
  health?: string;
}

/**
 * Fabric definition.
 */
export interface Fabric extends Resource {
  /**
   * Fabric related data.
   */
  properties?: FabricProperties;
}

/**
 * Properties of site details provided during the time of site creation
 */
export interface FabricCreationInputProperties {
  /**
   * Fabric provider specific creation input.
   */
  customDetails?: FabricSpecificCreationInputUnion;
}

/**
 * Site details provided during the time of site creation
 */
export interface FabricCreationInput {
  /**
   * Fabric creation input.
   */
  properties?: FabricCreationInputProperties;
}

/**
 * This class contains the minimal job details required to navigate to the desired drill down.
 */
export interface JobEntity {
  /**
   * The job id.
   */
  jobId?: string;
  /**
   * The job display name.
   */
  jobFriendlyName?: string;
  /**
   * The object id.
   */
  targetObjectId?: string;
  /**
   * The object name.
   */
  targetObjectName?: string;
  /**
   * The workflow affected object type.
   */
  targetInstanceType?: string;
  /**
   * The job name. Enum type ScenarioName.
   */
  jobScenarioName?: string;
}

/**
 * This class represents the fabric replication group task details.
 */
export interface FabricReplicationGroupTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "FabricReplicationGroupTaskDetails";
  /**
   * The skipped reason.
   */
  skippedReason?: string;
  /**
   * The skipped reason string.
   */
  skippedReasonString?: string;
  /**
   * The job entity.
   */
  jobTask?: JobEntity;
}

/**
 * Failover details for a replication protected item.
 */
export interface FailoverReplicationProtectedItemDetails {
  /**
   * The name.
   */
  name?: string;
  /**
   * The friendly name.
   */
  friendlyName?: string;
  /**
   * The test Vm name.
   */
  testVmName?: string;
  /**
   * The test Vm friendly name.
   */
  testVmFriendlyName?: string;
  /**
   * The network connection status.
   */
  networkConnectionStatus?: string;
  /**
   * The network friendly name.
   */
  networkFriendlyName?: string;
  /**
   * The network subnet.
   */
  subnet?: string;
  /**
   * The recovery point Id.
   */
  recoveryPointId?: string;
  /**
   * The recovery point time.
   */
  recoveryPointTime?: Date;
}

/**
 * This class represents the details for a failover job.
 */
export interface FailoverJobDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "FailoverJobDetails";
  /**
   * The affected object properties like source server, source cloud, target server, target cloud
   * etc. based on the workflow object details.
   */
  affectedObjectDetails?: { [propertyName: string]: string };
  /**
   * The test VM details.
   */
  protectedItemDetails?: FailoverReplicationProtectedItemDetails[];
}

/**
 * The properties of the Failover Process Server request.
 */
export interface FailoverProcessServerRequestProperties {
  /**
   * The container identifier.
   */
  containerName?: string;
  /**
   * The source process server.
   */
  sourceProcessServerId?: string;
  /**
   * The new process server.
   */
  targetProcessServerId?: string;
  /**
   * The VMS to migrate.
   */
  vmsToMigrate?: string[];
  /**
   * A value for failover type. It can be systemlevel/serverlevel
   */
  updateType?: string;
}

/**
 * Request to failover a process server.
 */
export interface FailoverProcessServerRequest {
  /**
   * The properties of the PS Failover request.
   */
  properties?: FailoverProcessServerRequestProperties;
}

/**
 * class to define the summary of the health error details.
 */
export interface HealthErrorSummary {
  /**
   * The code of the health error.
   */
  summaryCode?: string;
  /**
   * The category of the health error. Possible values include: 'None', 'Replication',
   * 'TestFailover', 'Configuration', 'FabricInfrastructure', 'VersionExpiry', 'AgentAutoUpdate'
   */
  category?: HealthErrorCategory;
  /**
   * Severity of error. Possible values include: 'NONE', 'Warning', 'Error', 'Info'
   */
  severity?: Severity;
  /**
   * The summary message of the health error.
   */
  summaryMessage?: string;
  /**
   * The type of affected ARM resource.
   */
  affectedResourceType?: string;
  /**
   * The sub type of any subcomponent within the ARM resource that this might be applicable. Value
   * remains null if not applicable.
   */
  affectedResourceSubtype?: string;
  /**
   * The list of affected resource correlation Ids. This can be used to uniquely identify the count
   * of items affected by a specific category and severity as well as count of item affected by an
   * specific issue.
   */
  affectedResourceCorrelationIds?: string[];
}

/**
 * Model class for event details of a HyperVReplica E2E event.
 */
export interface HyperVReplica2012EventDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplica2012";
  /**
   * The container friendly name.
   */
  containerName?: string;
  /**
   * The fabric friendly name.
   */
  fabricName?: string;
  /**
   * The remote container name.
   */
  remoteContainerName?: string;
  /**
   * The remote fabric name.
   */
  remoteFabricName?: string;
}

/**
 * Model class for event details of a HyperVReplica blue E2E event.
 */
export interface HyperVReplica2012R2EventDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplica2012R2";
  /**
   * The container friendly name.
   */
  containerName?: string;
  /**
   * The fabric friendly name.
   */
  fabricName?: string;
  /**
   * The remote container name.
   */
  remoteContainerName?: string;
  /**
   * The remote fabric name.
   */
  remoteFabricName?: string;
}

/**
 * ApplyRecoveryPoint input specific to HyperVReplicaAzure provider.
 */
export interface HyperVReplicaAzureApplyRecoveryPointInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * The vault location where the recovery Vm resides.
   */
  vaultLocation?: string;
  /**
   * The primary kek certificate pfx.
   */
  primaryKekCertificatePfx?: string;
  /**
   * The secondary kek certificate pfx.
   */
  secondaryKekCertificatePfx?: string;
}

/**
 * Azure specific enable protection input.
 */
export interface HyperVReplicaAzureEnableProtectionInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * The Hyper-V host Vm Id.
   */
  hvHostVmId?: string;
  /**
   * The Vm Name.
   */
  vmName?: string;
  /**
   * The OS type associated with vm.
   */
  osType?: string;
  /**
   * The OS disk VHD id associated with vm.
   */
  vhdId?: string;
  /**
   * The storage account name.
   */
  targetStorageAccountId?: string;
  /**
   * The selected target Azure network Id.
   */
  targetAzureNetworkId?: string;
  /**
   * The selected target Azure subnet Id.
   */
  targetAzureSubnetId?: string;
  /**
   * The selected option to enable RDP\SSH on target vm after failover. String value of
   * {SrsDataContract.EnableRDPOnTargetOption} enum.
   */
  enableRdpOnTargetOption?: string;
  /**
   * The target azure Vm Name.
   */
  targetAzureVmName?: string;
  /**
   * The storage account to be used for logging during replication.
   */
  logStorageAccountId?: string;
  /**
   * The list of VHD IDs of disks to be protected.
   */
  disksToInclude?: string[];
  /**
   * The Id of the target resource group (for classic deployment) in which the failover VM is to be
   * created.
   */
  targetAzureV1ResourceGroupId?: string;
  /**
   * The Id of the target resource group (for resource manager deployment) in which the failover VM
   * is to be created.
   */
  targetAzureV2ResourceGroupId?: string;
  /**
   * A value indicating whether managed disks should be used during failover.
   */
  useManagedDisks?: string;
}

/**
 * Model class for event details of a HyperVReplica E2A event.
 */
export interface HyperVReplicaAzureEventDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * The container friendly name.
   */
  containerName?: string;
  /**
   * The fabric friendly name.
   */
  fabricName?: string;
  /**
   * The remote container name.
   */
  remoteContainerName?: string;
}

/**
 * HvrA provider specific input for failback.
 */
export interface HyperVReplicaAzureFailbackProviderInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzureFailback";
  /**
   * Data sync option.
   */
  dataSyncOption?: string;
  /**
   * ALR options to create alternate recovery.
   */
  recoveryVmCreationOption?: string;
  /**
   * Provider ID for alternate location
   */
  providerIdForAlternateRecovery?: string;
}

/**
 * HvrA provider specific input for failover.
 */
export interface HyperVReplicaAzureFailoverProviderInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * Location of the vault.
   */
  vaultLocation?: string;
  /**
   * Primary kek certificate pfx.
   */
  primaryKekCertificatePfx?: string;
  /**
   * Secondary kek certificate pfx.
   */
  secondaryKekCertificatePfx?: string;
  /**
   * The recovery point id to be passed to failover to a particular recovery point. In case of
   * latest recovery point, null should be passed.
   */
  recoveryPointId?: string;
}

/**
 * Hyper-V Replica Azure specific protection profile details.
 */
export interface HyperVReplicaAzurePolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * The duration (in hours) to which point the recovery history needs to be maintained.
   */
  recoveryPointHistoryDurationInHours?: number;
  /**
   * The interval (in hours) at which Hyper-V Replica should create an application consistent
   * snapshot within the VM.
   */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /**
   * The replication interval.
   */
  replicationInterval?: number;
  /**
   * The scheduled start time for the initial replication. If this parameter is Null, the initial
   * replication starts immediately.
   */
  onlineReplicationStartTime?: string;
  /**
   * A value indicating whether encryption is enabled for virtual machines in this cloud.
   */
  encryption?: string;
  /**
   * The active storage account Id.
   */
  activeStorageAccountId?: string;
}

/**
 * Hyper-V Replica Azure specific input for creating a protection profile.
 */
export interface HyperVReplicaAzurePolicyInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * The duration (in hours) to which point the recovery history needs to be maintained.
   */
  recoveryPointHistoryDuration?: number;
  /**
   * The interval (in hours) at which Hyper-V Replica should create an application consistent
   * snapshot within the VM.
   */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /**
   * The replication interval.
   */
  replicationInterval?: number;
  /**
   * The scheduled start time for the initial replication. If this parameter is Null, the initial
   * replication starts immediately.
   */
  onlineReplicationStartTime?: string;
  /**
   * The list of storage accounts to which the VMs in the primary cloud can replicate to.
   */
  storageAccounts?: string[];
}

/**
 * Initial replication details.
 */
export interface InitialReplicationDetails {
  /**
   * Initial replication type.
   */
  initialReplicationType?: string;
  /**
   * The initial replication progress percentage.
   */
  initialReplicationProgressPercentage?: string;
}

/**
 * Disk Details.
 */
export interface OSDetails {
  /**
   * VM Disk details.
   */
  osType?: string;
  /**
   * Product type.
   */
  productType?: string;
  /**
   * The OSEdition.
   */
  osEdition?: string;
  /**
   * The OS Version.
   */
  oSVersion?: string;
  /**
   * The OS Major Version.
   */
  oSMajorVersion?: string;
  /**
   * The OS Minor Version.
   */
  oSMinorVersion?: string;
}

/**
 * Hyper V Replica Azure provider specific settings.
 */
export interface HyperVReplicaAzureReplicationDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * Azure VM Disk details.
   */
  azureVmDiskDetails?: AzureVmDiskDetails[];
  /**
   * Recovery Azure given name.
   */
  recoveryAzureVmName?: string;
  /**
   * The Recovery Azure VM size.
   */
  recoveryAzureVMSize?: string;
  /**
   * The recovery Azure storage account.
   */
  recoveryAzureStorageAccount?: string;
  /**
   * The ARM id of the log storage account used for replication. This will be set to null if no log
   * storage account was provided during enable protection.
   */
  recoveryAzureLogStorageAccountId?: string;
  /**
   * The Last replication time.
   */
  lastReplicatedTime?: Date;
  /**
   * Last RPO value.
   */
  rpoInSeconds?: number;
  /**
   * The last RPO calculated time.
   */
  lastRpoCalculatedTime?: Date;
  /**
   * The virtual machine Id.
   */
  vmId?: string;
  /**
   * The protection state for the vm.
   */
  vmProtectionState?: string;
  /**
   * The protection state description for the vm.
   */
  vmProtectionStateDescription?: string;
  /**
   * Initial replication details.
   */
  initialReplicationDetails?: InitialReplicationDetails;
  /**
   * The PE Network details.
   */
  vmNics?: VMNicDetails[];
  /**
   * The selected recovery azure network Id.
   */
  selectedRecoveryAzureNetworkId?: string;
  /**
   * The selected source nic Id which will be used as the primary nic during failover.
   */
  selectedSourceNicId?: string;
  /**
   * The encryption info.
   */
  encryption?: string;
  /**
   * The operating system info.
   */
  oSDetails?: OSDetails;
  /**
   * The RAM size of the VM on the primary side.
   */
  sourceVmRamSizeInMB?: number;
  /**
   * The CPU count of the VM on the primary side.
   */
  sourceVmCpuCount?: number;
  /**
   * The selected option to enable RDP\SSH on target vm after failover. String value of
   * {SrsDataContract.EnableRDPOnTargetOption} enum.
   */
  enableRdpOnTargetOption?: string;
  /**
   * The target resource group Id.
   */
  recoveryAzureResourceGroupId?: string;
  /**
   * The recovery availability set Id.
   */
  recoveryAvailabilitySetId?: string;
  /**
   * A value indicating whether managed disks should be used during failover.
   */
  useManagedDisks?: string;
  /**
   * License Type of the VM to be used.
   */
  licenseType?: string;
}

/**
 * Azure specific reprotect input.
 */
export interface HyperVReplicaAzureReprotectInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * The Hyper-V host Vm Id.
   */
  hvHostVmId?: string;
  /**
   * The Vm Name.
   */
  vmName?: string;
  /**
   * The OS type associated with vm.
   */
  osType?: string;
  /**
   * The OS disk VHD id associated with vm.
   */
  vHDId?: string;
  /**
   * The storage account name.
   */
  storageAccountId?: string;
  /**
   * The storage account to be used for logging during replication.
   */
  logStorageAccountId?: string;
}

/**
 * HyperV replica Azure input to update replication protected item.
 */
export interface HyperVReplicaAzureUpdateReplicationProtectedItemInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * The recovery Azure resource group Id for classic deployment.
   */
  recoveryAzureV1ResourceGroupId?: string;
  /**
   * The recovery Azure resource group Id for resource manager deployment.
   */
  recoveryAzureV2ResourceGroupId?: string;
  /**
   * A value indicating whether managed disks should be used during failover.
   */
  useManagedDisks?: string;
  /**
   * The dictionary of disk resource Id to disk encryption set ARM Id.
   */
  diskIdToDiskEncryptionMap?: { [propertyName: string]: string };
}

/**
 * Abstract model class for event details of a HyperVReplica E2E event.
 */
export interface HyperVReplicaBaseEventDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaBaseEventDetails";
  /**
   * The container friendly name.
   */
  containerName?: string;
  /**
   * The fabric friendly name.
   */
  fabricName?: string;
  /**
   * The remote container name.
   */
  remoteContainerName?: string;
  /**
   * The remote fabric name.
   */
  remoteFabricName?: string;
}

/**
 * Base class for HyperVReplica policy details.
 */
export interface HyperVReplicaBasePolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaBasePolicyDetails";
  /**
   * A value indicating the number of recovery points.
   */
  recoveryPoints?: number;
  /**
   * A value indicating the application consistent frequency.
   */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /**
   * A value indicating whether compression has to be enabled.
   */
  compression?: string;
  /**
   * A value indicating whether IR is online.
   */
  initialReplicationMethod?: string;
  /**
   * A value indicating the online IR start time.
   */
  onlineReplicationStartTime?: string;
  /**
   * A value indicating the offline IR import path.
   */
  offlineReplicationImportPath?: string;
  /**
   * A value indicating the offline IR export path.
   */
  offlineReplicationExportPath?: string;
  /**
   * A value indicating the recovery HTTPS port.
   */
  replicationPort?: number;
  /**
   * A value indicating the authentication type.
   */
  allowedAuthenticationType?: number;
  /**
   * A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty,
   * None, OnRecoveryCloud
   */
  replicaDeletionOption?: string;
}

/**
 * Hyper V replica provider specific settings base class.
 */
export interface HyperVReplicaBaseReplicationDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaBaseReplicationDetails";
  /**
   * The Last replication time.
   */
  lastReplicatedTime?: Date;
  /**
   * The PE Network details.
   */
  vmNics?: VMNicDetails[];
  /**
   * The virtual machine Id.
   */
  vmId?: string;
  /**
   * The protection state for the vm.
   */
  vmProtectionState?: string;
  /**
   * The protection state description for the vm.
   */
  vmProtectionStateDescription?: string;
  /**
   * Initial replication details.
   */
  initialReplicationDetails?: InitialReplicationDetails;
  /**
   * VM disk details.
   */
  vMDiskDetails?: DiskDetails[];
}

/**
 * Hyper-V Replica Blue specific protection profile details.
 */
export interface HyperVReplicaBluePolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplica2012R2";
  /**
   * A value indicating the replication interval.
   */
  replicationFrequencyInSeconds?: number;
  /**
   * A value indicating the number of recovery points.
   */
  recoveryPoints?: number;
  /**
   * A value indicating the application consistent frequency.
   */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /**
   * A value indicating whether compression has to be enabled.
   */
  compression?: string;
  /**
   * A value indicating whether IR is online.
   */
  initialReplicationMethod?: string;
  /**
   * A value indicating the online IR start time.
   */
  onlineReplicationStartTime?: string;
  /**
   * A value indicating the offline IR import path.
   */
  offlineReplicationImportPath?: string;
  /**
   * A value indicating the offline IR export path.
   */
  offlineReplicationExportPath?: string;
  /**
   * A value indicating the recovery HTTPS port.
   */
  replicationPort?: number;
  /**
   * A value indicating the authentication type.
   */
  allowedAuthenticationType?: number;
  /**
   * A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty,
   * None, OnRecoveryCloud
   */
  replicaDeletionOption?: string;
}

/**
 * HyperV Replica Blue policy input.
 */
export interface HyperVReplicaBluePolicyInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplica2012R2";
  /**
   * A value indicating the replication interval.
   */
  replicationFrequencyInSeconds?: number;
  /**
   * A value indicating the number of recovery points.
   */
  recoveryPoints?: number;
  /**
   * A value indicating the application consistent frequency.
   */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /**
   * A value indicating whether compression has to be enabled.
   */
  compression?: string;
  /**
   * A value indicating whether IR is online.
   */
  initialReplicationMethod?: string;
  /**
   * A value indicating the online IR start time.
   */
  onlineReplicationStartTime?: string;
  /**
   * A value indicating the offline IR import path.
   */
  offlineReplicationImportPath?: string;
  /**
   * A value indicating the offline IR export path.
   */
  offlineReplicationExportPath?: string;
  /**
   * A value indicating the recovery HTTPS port.
   */
  replicationPort?: number;
  /**
   * A value indicating the authentication type.
   */
  allowedAuthenticationType?: number;
  /**
   * A value indicating whether the VM has to be auto deleted.
   */
  replicaDeletion?: string;
}

/**
 * HyperV replica 2012 R2 (Blue) replication details.
 */
export interface HyperVReplicaBlueReplicationDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplica2012R2";
  /**
   * The Last replication time.
   */
  lastReplicatedTime?: Date;
  /**
   * The PE Network details.
   */
  vmNics?: VMNicDetails[];
  /**
   * The virtual machine Id.
   */
  vmId?: string;
  /**
   * The protection state for the vm.
   */
  vmProtectionState?: string;
  /**
   * The protection state description for the vm.
   */
  vmProtectionStateDescription?: string;
  /**
   * Initial replication details.
   */
  initialReplicationDetails?: InitialReplicationDetails;
  /**
   * VM disk details.
   */
  vMDiskDetails?: DiskDetails[];
}

/**
 * Hyper-V Replica Blue specific protection profile details.
 */
export interface HyperVReplicaPolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplica2012";
  /**
   * A value indicating the number of recovery points.
   */
  recoveryPoints?: number;
  /**
   * A value indicating the application consistent frequency.
   */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /**
   * A value indicating whether compression has to be enabled.
   */
  compression?: string;
  /**
   * A value indicating whether IR is online.
   */
  initialReplicationMethod?: string;
  /**
   * A value indicating the online IR start time.
   */
  onlineReplicationStartTime?: string;
  /**
   * A value indicating the offline IR import path.
   */
  offlineReplicationImportPath?: string;
  /**
   * A value indicating the offline IR export path.
   */
  offlineReplicationExportPath?: string;
  /**
   * A value indicating the recovery HTTPS port.
   */
  replicationPort?: number;
  /**
   * A value indicating the authentication type.
   */
  allowedAuthenticationType?: number;
  /**
   * A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty,
   * None, OnRecoveryCloud
   */
  replicaDeletionOption?: string;
}

/**
 * Hyper-V Replica specific policy Input.
 */
export interface HyperVReplicaPolicyInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplica2012";
  /**
   * A value indicating the number of recovery points.
   */
  recoveryPoints?: number;
  /**
   * A value indicating the application consistent frequency.
   */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /**
   * A value indicating whether compression has to be enabled.
   */
  compression?: string;
  /**
   * A value indicating whether IR is online.
   */
  initialReplicationMethod?: string;
  /**
   * A value indicating the online IR start time.
   */
  onlineReplicationStartTime?: string;
  /**
   * A value indicating the offline IR import path.
   */
  offlineReplicationImportPath?: string;
  /**
   * A value indicating the offline IR export path.
   */
  offlineReplicationExportPath?: string;
  /**
   * A value indicating the recovery HTTPS port.
   */
  replicationPort?: number;
  /**
   * A value indicating the authentication type.
   */
  allowedAuthenticationType?: number;
  /**
   * A value indicating whether the VM has to be auto deleted.
   */
  replicaDeletion?: string;
}

/**
 * HyperV replica 2012 replication details.
 */
export interface HyperVReplicaReplicationDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplica2012";
  /**
   * The Last replication time.
   */
  lastReplicatedTime?: Date;
  /**
   * The PE Network details.
   */
  vmNics?: VMNicDetails[];
  /**
   * The virtual machine Id.
   */
  vmId?: string;
  /**
   * The protection state for the vm.
   */
  vmProtectionState?: string;
  /**
   * The protection state description for the vm.
   */
  vmProtectionStateDescription?: string;
  /**
   * Initial replication details.
   */
  initialReplicationDetails?: InitialReplicationDetails;
  /**
   * VM disk details.
   */
  vMDiskDetails?: DiskDetails[];
}

/**
 * HyperVSite fabric specific details.
 */
export interface HyperVSiteDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVSite";
}

/**
 * Single Host fabric provider specific VM settings.
 */
export interface HyperVVirtualMachineDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVVirtualMachine";
  /**
   * The source id of the object.
   */
  sourceItemId?: string;
  /**
   * The id of the object in fabric.
   */
  generation?: string;
  /**
   * The Last replication time.
   */
  osDetails?: OSDetails;
  /**
   * The Last successful failover time.
   */
  diskDetails?: DiskDetails[];
  /**
   * A value indicating whether the VM has a physical disk attached. String value of
   * {SrsDataContract.PresenceStatus} enum. Possible values include: 'Unknown', 'Present',
   * 'NotPresent'
   */
  hasPhysicalDisk?: PresenceStatus;
  /**
   * A value indicating whether the VM has a fibre channel adapter attached. String value of
   * {SrsDataContract.PresenceStatus} enum. Possible values include: 'Unknown', 'Present',
   * 'NotPresent'
   */
  hasFibreChannelAdapter?: PresenceStatus;
  /**
   * A value indicating whether the VM has a shared VHD attached. String value of
   * {SrsDataContract.PresenceStatus} enum. Possible values include: 'Unknown', 'Present',
   * 'NotPresent'
   */
  hasSharedVhd?: PresenceStatus;
}

/**
 * Identity provider details.
 */
export interface IdentityProviderDetails {
  /**
   * The tenant Id for the service principal with which the on-premise management/data plane
   * components would communicate with our Azure services.
   */
  tenantId?: string;
  /**
   * The application/client Id for the service principal with which the on-premise management/data
   * plane components would communicate with our Azure services.
   */
  applicationId?: string;
  /**
   * The object Id of the service principal with which the on-premise management/data plane
   * components would communicate with our Azure services.
   */
  objectId?: string;
  /**
   * The intended Audience of the service principal with which the on-premise management/data plane
   * components would communicate with our Azure services.
   */
  audience?: string;
  /**
   * The base authority for Azure Active Directory authentication.
   */
  aadAuthority?: string;
}

/**
 * This class represents the inline workflow task details.
 */
export interface InlineWorkflowTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InlineWorkflowTaskDetails";
  /**
   * The child tasks.
   */
  childTasks?: ASRTask[];
  /**
   * The list of child workflow ids.
   */
  workflowIds?: string[];
}

/**
 * The details of the InMage agent.
 */
export interface InMageAgentDetails {
  /**
   * The agent version.
   */
  agentVersion?: string;
  /**
   * A value indicating whether installed agent needs to be updated.
   */
  agentUpdateStatus?: string;
  /**
   * A value indicating whether reboot is required after update is applied.
   */
  postUpdateRebootStatus?: string;
  /**
   * Agent expiry date.
   */
  agentExpiryDate?: Date;
}

/**
 * InMage agent version details.
 */
export interface InMageAgentVersionDetails {
  /**
   * A value indicating whether reboot is required after update is applied.
   */
  postUpdateRebootStatus?: string;
  /**
   * The agent version.
   */
  version?: string;
  /**
   * Version expiry date.
   */
  expiryDate?: Date;
  /**
   * A value indicating whether security update required. Possible values include: 'Supported',
   * 'NotSupported', 'Deprecated', 'UpdateRequired', 'SecurityUpdateRequired'
   */
  status?: AgentVersionStatus;
}

/**
 * ApplyRecoveryPoint input specific to InMageAzureV2 provider.
 */
export interface InMageAzureV2ApplyRecoveryPointInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * The vault location where the recovery Vm resides.
   */
  vaultLocation?: string;
}

/**
 * Disk input details.
 */
export interface InMageAzureV2DiskInputDetails {
  /**
   * The DiskId.
   */
  diskId?: string;
  /**
   * The LogStorageAccountId.
   */
  logStorageAccountId?: string;
  /**
   * The DiskType. Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS'
   */
  diskType?: DiskAccountType;
  /**
   * The DiskEncryptionSet ARM ID.
   */
  diskEncryptionSetId?: string;
}

/**
 * VMware Azure specific enable protection input.
 */
export interface InMageAzureV2EnableProtectionInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * The Master target Id.
   */
  masterTargetId?: string;
  /**
   * The Process Server Id.
   */
  processServerId?: string;
  /**
   * The storage account name.
   */
  storageAccountId?: string;
  /**
   * The CS account Id.
   */
  runAsAccountId?: string;
  /**
   * The multi vm group Id.
   */
  multiVmGroupId?: string;
  /**
   * The multi vm group name.
   */
  multiVmGroupName?: string;
  /**
   * The disks to include list.
   */
  disksToInclude?: InMageAzureV2DiskInputDetails[];
  /**
   * The selected target Azure network Id.
   */
  targetAzureNetworkId?: string;
  /**
   * The selected target Azure subnet Id.
   */
  targetAzureSubnetId?: string;
  /**
   * The selected option to enable RDP\SSH on target vm after failover. String value of
   * {SrsDataContract.EnableRDPOnTargetOption} enum.
   */
  enableRdpOnTargetOption?: string;
  /**
   * The target azure Vm Name.
   */
  targetAzureVmName?: string;
  /**
   * The storage account to be used for logging during replication.
   */
  logStorageAccountId?: string;
  /**
   * The Id of the target resource group (for classic deployment) in which the failover VM is to be
   * created.
   */
  targetAzureV1ResourceGroupId?: string;
  /**
   * The Id of the target resource group (for resource manager deployment) in which the failover VM
   * is to be created.
   */
  targetAzureV2ResourceGroupId?: string;
  /**
   * The DiskType. Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS'
   */
  diskType?: DiskAccountType;
  /**
   * The DiskEncryptionSet ARM ID.
   */
  diskEncryptionSetId?: string;
}

/**
 * Model class for event details of a VMwareAzureV2 event.
 */
export interface InMageAzureV2EventDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * InMage Event type. Takes one of the values of {InMageDataContract.InMageMonitoringEventType}.
   */
  eventType?: string;
  /**
   * InMage Event Category.
   */
  category?: string;
  /**
   * InMage Event Component.
   */
  component?: string;
  /**
   * Corrective Action string for the event.
   */
  correctiveAction?: string;
  /**
   * InMage Event Details.
   */
  details?: string;
  /**
   * InMage Event Summary.
   */
  summary?: string;
  /**
   * VMware Site name.
   */
  siteName?: string;
}

/**
 * InMageAzureV2 provider specific input for failover.
 */
export interface InMageAzureV2FailoverProviderInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * Location of the vault.
   */
  vaultLocation?: string;
  /**
   * The recovery point id to be passed to failover to a particular recovery point. In case of
   * latest recovery point, null should be passed.
   */
  recoveryPointId?: string;
}

/**
 * InMageAzureV2 Managed disk details.
 */
export interface InMageAzureV2ManagedDiskDetails {
  /**
   * The disk id.
   */
  diskId?: string;
  /**
   * Seed managed disk Id.
   */
  seedManagedDiskId?: string;
  /**
   * The replica disk type.
   */
  replicaDiskType?: string;
}

/**
 * InMage Azure v2 specific protection profile details.
 */
export interface InMageAzureV2PolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * The crash consistent snapshot frequency in minutes.
   */
  crashConsistentFrequencyInMinutes?: number;
  /**
   * The recovery point threshold in minutes.
   */
  recoveryPointThresholdInMinutes?: number;
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistory?: number;
  /**
   * The app consistent snapshot frequency in minutes.
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * A value indicating whether multi-VM sync has to be enabled.
   */
  multiVmSyncStatus?: string;
}

/**
 * VMWare Azure specific policy Input.
 */
export interface InMageAzureV2PolicyInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * The recovery point threshold in minutes.
   */
  recoveryPointThresholdInMinutes?: number;
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistory?: number;
  /**
   * The crash consistent snapshot frequency (in minutes).
   */
  crashConsistentFrequencyInMinutes?: number;
  /**
   * The app consistent snapshot frequency (in minutes).
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or
   * 'Disabled'. Possible values include: 'Enable', 'Disable'
   */
  multiVmSyncStatus: SetMultiVmSyncStatus;
}

/**
 * InMageAzureV2 protected disk details.
 */
export interface InMageAzureV2ProtectedDiskDetails {
  /**
   * The disk id.
   */
  diskId?: string;
  /**
   * The disk name.
   */
  diskName?: string;
  /**
   * The protection stage.
   */
  protectionStage?: string;
  /**
   * The health error code for the disk.
   */
  healthErrorCode?: string;
  /**
   * The RPO in seconds.
   */
  rpoInSeconds?: number;
  /**
   * A value indicating whether resync is required for this disk.
   */
  resyncRequired?: string;
  /**
   * The resync progress percentage.
   */
  resyncProgressPercentage?: number;
  /**
   * The resync duration in seconds.
   */
  resyncDurationInSeconds?: number;
  /**
   * The disk capacity in bytes.
   */
  diskCapacityInBytes?: number;
  /**
   * The disk file system capacity in bytes.
   */
  fileSystemCapacityInBytes?: number;
  /**
   * The source data transit in MB.
   */
  sourceDataInMegaBytes?: number;
  /**
   * The PS data transit in MB.
   */
  psDataInMegaBytes?: number;
  /**
   * The target data transit in MB.
   */
  targetDataInMegaBytes?: number;
  /**
   * A value indicating whether disk is resized.
   */
  diskResized?: string;
  /**
   * The last RPO calculated time.
   */
  lastRpoCalculatedTime?: Date;
}

/**
 * InMage Azure V2 provider specific recovery point details.
 */
export interface InMageAzureV2RecoveryPointDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * A value indicating whether the recovery point is multi VM consistent.
   */
  isMultiVmSyncPoint?: string;
}

/**
 * InMageAzureV2 provider specific settings
 */
export interface InMageAzureV2ReplicationDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * The infrastructure VM Id.
   */
  infrastructureVmId?: string;
  /**
   * The vCenter infrastructure Id.
   */
  vCenterInfrastructureId?: string;
  /**
   * The protection stage.
   */
  protectionStage?: string;
  /**
   * The virtual machine Id.
   */
  vmId?: string;
  /**
   * The protection state for the vm.
   */
  vmProtectionState?: string;
  /**
   * The protection state description for the vm.
   */
  vmProtectionStateDescription?: string;
  /**
   * The resync progress percentage.
   */
  resyncProgressPercentage?: number;
  /**
   * The RPO in seconds.
   */
  rpoInSeconds?: number;
  /**
   * The compressed data change rate in MB.
   */
  compressedDataRateInMB?: number;
  /**
   * The uncompressed data change rate in MB.
   */
  uncompressedDataRateInMB?: number;
  /**
   * The source IP address.
   */
  ipAddress?: string;
  /**
   * The agent version.
   */
  agentVersion?: string;
  /**
   * Agent expiry date.
   */
  agentExpiryDate?: Date;
  /**
   * A value indicating whether installed agent needs to be updated.
   */
  isAgentUpdateRequired?: string;
  /**
   * A value indicating whether the source server requires a restart after update.
   */
  isRebootAfterUpdateRequired?: string;
  /**
   * The last heartbeat received from the source server.
   */
  lastHeartbeat?: Date;
  /**
   * The process server Id.
   */
  processServerId?: string;
  /**
   * The multi vm group Id.
   */
  multiVmGroupId?: string;
  /**
   * The multi vm group name.
   */
  multiVmGroupName?: string;
  /**
   * A value indicating whether multi vm sync is enabled or disabled.
   */
  multiVmSyncStatus?: string;
  /**
   * The list of protected disks.
   */
  protectedDisks?: InMageAzureV2ProtectedDiskDetails[];
  /**
   * A value indicating whether any disk is resized for this VM.
   */
  diskResized?: string;
  /**
   * The master target Id.
   */
  masterTargetId?: string;
  /**
   * The CPU count of the VM on the primary side.
   */
  sourceVmCpuCount?: number;
  /**
   * The RAM size of the VM on the primary side.
   */
  sourceVmRamSizeInMB?: number;
  /**
   * The type of the OS on the VM.
   */
  osType?: string;
  /**
   * The OS disk VHD name.
   */
  vhdName?: string;
  /**
   * The id of the disk containing the OS.
   */
  osDiskId?: string;
  /**
   * Azure VM Disk details.
   */
  azureVMDiskDetails?: AzureVmDiskDetails[];
  /**
   * Recovery Azure given name.
   */
  recoveryAzureVMName?: string;
  /**
   * The Recovery Azure VM size.
   */
  recoveryAzureVMSize?: string;
  /**
   * The recovery Azure storage account.
   */
  recoveryAzureStorageAccount?: string;
  /**
   * The ARM id of the log storage account used for replication. This will be set to null if no log
   * storage account was provided during enable protection.
   */
  recoveryAzureLogStorageAccountId?: string;
  /**
   * The PE Network details.
   */
  vmNics?: VMNicDetails[];
  /**
   * The selected recovery azure network Id.
   */
  selectedRecoveryAzureNetworkId?: string;
  /**
   * The selected source nic Id which will be used as the primary nic during failover.
   */
  selectedSourceNicId?: string;
  /**
   * A value indicating the discovery type of the machine. Value can be vCenter or physical.
   */
  discoveryType?: string;
  /**
   * The selected option to enable RDP\SSH on target vm after failover. String value of
   * {SrsDataContract.EnableRDPOnTargetOption} enum.
   */
  enableRdpOnTargetOption?: string;
  /**
   * The data stores of the on-premise machine. Value can be list of strings that contain data
   * store names.
   */
  datastores?: string[];
  /**
   * The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only
   * after failure it will be populated with the ARM Id of the Azure VM.
   */
  targetVmId?: string;
  /**
   * The target resource group Id.
   */
  recoveryAzureResourceGroupId?: string;
  /**
   * The recovery availability set Id.
   */
  recoveryAvailabilitySetId?: string;
  /**
   * A value indicating whether managed disks should be used during failover.
   */
  useManagedDisks?: string;
  /**
   * License Type of the VM to be used.
   */
  licenseType?: string;
  /**
   * The validation errors of the on-premise machine Value can be list of validation errors.
   */
  validationErrors?: HealthError[];
  /**
   * The last RPO calculated time.
   */
  lastRpoCalculatedTime?: Date;
  /**
   * The last update time received from on-prem components.
   */
  lastUpdateReceivedTime?: Date;
  /**
   * The replica id of the protected item.
   */
  replicaId?: string;
  /**
   * The OS Version of the protected item.
   */
  osVersion?: string;
  /**
   * The list of protected managed disks.
   */
  protectedManagedDisks?: InMageAzureV2ManagedDiskDetails[];
}

/**
 * InMageAzureV2 specific provider input.
 */
export interface InMageAzureV2ReprotectInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * The Master target Id.
   */
  masterTargetId?: string;
  /**
   * The Process Server Id.
   */
  processServerId?: string;
  /**
   * The storage account id.
   */
  storageAccountId?: string;
  /**
   * The CS account Id.
   */
  runAsAccountId?: string;
  /**
   * The Policy Id.
   */
  policyId?: string;
  /**
   * The storage account to be used for logging during replication.
   */
  logStorageAccountId?: string;
  /**
   * The disks to include list.
   */
  disksToInclude?: string[];
}

/**
 * InMage Azure V2 input to update replication protected item.
 */
export interface InMageAzureV2UpdateReplicationProtectedItemInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * The recovery Azure resource group Id for classic deployment.
   */
  recoveryAzureV1ResourceGroupId?: string;
  /**
   * The recovery Azure resource group Id for resource manager deployment.
   */
  recoveryAzureV2ResourceGroupId?: string;
  /**
   * A value indicating whether managed disks should be used during failover.
   */
  useManagedDisks?: string;
}

/**
 * Base class for the policies of providers using InMage replication.
 */
export interface InMageBasePolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageBasePolicyDetails";
  /**
   * The recovery point threshold in minutes.
   */
  recoveryPointThresholdInMinutes?: number;
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistory?: number;
  /**
   * The app consistent snapshot frequency in minutes.
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * A value indicating whether multi-VM sync has to be enabled.
   */
  multiVmSyncStatus?: string;
}

/**
 * InMage disable protection provider specific input.
 */
export interface InMageDisableProtectionProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMage";
  /**
   * A value indicating whether the replica VM should be destroyed or retained. Values from Delete
   * and Retain.
   */
  replicaVmDeletionStatus?: string;
}

/**
 * VMware/Physical specific Disk Details
 */
export interface InMageDiskDetails {
  /**
   * The disk Id.
   */
  diskId?: string;
  /**
   * The disk name.
   */
  diskName?: string;
  /**
   * The disk size in MB.
   */
  diskSizeInMB?: string;
  /**
   * Whether disk is system disk or data disk.
   */
  diskType?: string;
  /**
   * Whether disk is dynamic disk or basic disk.
   */
  diskConfiguration?: string;
  /**
   * Volumes of the disk.
   */
  volumeList?: DiskVolumeDetails[];
}

/**
 * Guest disk signature based disk exclusion option when doing enable protection of virtual machine
 * in InMage provider.
 */
export interface InMageVolumeExclusionOptions {
  /**
   * The volume label. The disk having any volume with this label will be excluded from
   * replication.
   */
  volumeLabel?: string;
  /**
   * The value indicating whether to exclude multi volume disk or not. If a disk has multiple
   * volumes and one of the volume has label matching with VolumeLabel this disk will be excluded
   * from replication if OnlyExcludeIfSingleVolume is false.
   */
  onlyExcludeIfSingleVolume?: string;
}

/**
 * Guest disk signature based disk exclusion option when doing enable protection of virtual machine
 * in InMage provider.
 */
export interface InMageDiskSignatureExclusionOptions {
  /**
   * The guest signature of disk to be excluded from replication.
   */
  diskSignature?: string;
}

/**
 * DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
 */
export interface InMageDiskExclusionInput {
  /**
   * The volume label based option for disk exclusion.
   */
  volumeOptions?: InMageVolumeExclusionOptions[];
  /**
   * The guest disk signature based option for disk exclusion.
   */
  diskSignatureOptions?: InMageDiskSignatureExclusionOptions[];
}

/**
 * VMware Azure specific enable protection input.
 */
export interface InMageEnableProtectionInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMage";
  /**
   * The Vm Name.
   */
  vmFriendlyName?: string;
  /**
   * The Master Target Id.
   */
  masterTargetId: string;
  /**
   * The Process Server Id.
   */
  processServerId: string;
  /**
   * The retention drive to use on the MT.
   */
  retentionDrive: string;
  /**
   * The CS account Id.
   */
  runAsAccountId?: string;
  /**
   * The multi vm group Id.
   */
  multiVmGroupId: string;
  /**
   * The multi vm group name.
   */
  multiVmGroupName: string;
  /**
   * The target data store name.
   */
  datastoreName?: string;
  /**
   * The enable disk exclusion input.
   */
  diskExclusionInput?: InMageDiskExclusionInput;
  /**
   * The disks to include list.
   */
  disksToInclude?: string[];
}

/**
 * Provider specific input for InMage failover.
 */
export interface InMageFailoverProviderInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMage";
  /**
   * The recovery point type. Values from LatestTime, LatestTag or Custom. In the case of custom,
   * the recovery point provided by RecoveryPointId will be used. In the other two cases, recovery
   * point id will be ignored. Possible values include: 'LatestTime', 'LatestTag', 'Custom'
   */
  recoveryPointType?: RecoveryPointType;
  /**
   * The recovery point id to be passed to failover to a particular recovery point. In case of
   * latest recovery point, null should be passed.
   */
  recoveryPointId?: string;
}

/**
 * InMage specific protection profile details.
 */
export interface InMagePolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMage";
  /**
   * The recovery point threshold in minutes.
   */
  recoveryPointThresholdInMinutes?: number;
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistory?: number;
  /**
   * The app consistent snapshot frequency in minutes.
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * A value indicating whether multi-VM sync has to be enabled.
   */
  multiVmSyncStatus?: string;
}

/**
 * VMWare Azure specific protection profile Input.
 */
export interface InMagePolicyInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMage";
  /**
   * The recovery point threshold in minutes.
   */
  recoveryPointThresholdInMinutes?: number;
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistory?: number;
  /**
   * The app consistent snapshot frequency (in minutes).
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or
   * 'Disabled'. Possible values include: 'Enable', 'Disable'
   */
  multiVmSyncStatus: SetMultiVmSyncStatus;
}

/**
 * InMage protected disk details.
 */
export interface InMageProtectedDiskDetails {
  /**
   * The disk id.
   */
  diskId?: string;
  /**
   * The disk name.
   */
  diskName?: string;
  /**
   * The protection stage.
   */
  protectionStage?: string;
  /**
   * The health error code for the disk.
   */
  healthErrorCode?: string;
  /**
   * The RPO in seconds.
   */
  rpoInSeconds?: number;
  /**
   * A value indicating whether resync is required for this disk.
   */
  resyncRequired?: string;
  /**
   * The resync progress percentage.
   */
  resyncProgressPercentage?: number;
  /**
   * The resync duration in seconds.
   */
  resyncDurationInSeconds?: number;
  /**
   * The disk capacity in bytes.
   */
  diskCapacityInBytes?: number;
  /**
   * The file system capacity in bytes.
   */
  fileSystemCapacityInBytes?: number;
  /**
   * The source data transit in MB.
   */
  sourceDataInMB?: number;
  /**
   * The PS data transit in MB.
   */
  psDataInMB?: number;
  /**
   * The target data transit in MB.
   */
  targetDataInMB?: number;
  /**
   * A value indicating whether disk is resized.
   */
  diskResized?: string;
  /**
   * The last RPO calculated time.
   */
  lastRpoCalculatedTime?: Date;
}

/**
 * Details of the OS Disk.
 */
export interface OSDiskDetails {
  /**
   * The id of the disk containing the OS.
   */
  osVhdId?: string;
  /**
   * The type of the OS on the VM.
   */
  osType?: string;
  /**
   * The OS disk VHD name.
   */
  vhdName?: string;
}

/**
 * InMage provider specific settings
 */
export interface InMageReplicationDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMage";
  /**
   * The active location of the VM. If the VM is being protected from Azure, this field will take
   * values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this
   * field will be OnPrem always.
   */
  activeSiteType?: string;
  /**
   * The CPU count of the VM on the primary side.
   */
  sourceVmCpuCount?: number;
  /**
   * The RAM size of the VM on the primary side.
   */
  sourceVmRamSizeInMB?: number;
  /**
   * The OS details.
   */
  osDetails?: OSDiskDetails;
  /**
   * The protection stage.
   */
  protectionStage?: string;
  /**
   * The virtual machine Id.
   */
  vmId?: string;
  /**
   * The protection state for the vm.
   */
  vmProtectionState?: string;
  /**
   * The protection state description for the vm.
   */
  vmProtectionStateDescription?: string;
  /**
   * The resync details of the machine
   */
  resyncDetails?: InitialReplicationDetails;
  /**
   * The retention window start time.
   */
  retentionWindowStart?: Date;
  /**
   * The retention window end time.
   */
  retentionWindowEnd?: Date;
  /**
   * The compressed data change rate in MB.
   */
  compressedDataRateInMB?: number;
  /**
   * The uncompressed data change rate in MB.
   */
  uncompressedDataRateInMB?: number;
  /**
   * The RPO in seconds.
   */
  rpoInSeconds?: number;
  /**
   * The list of protected disks.
   */
  protectedDisks?: InMageProtectedDiskDetails[];
  /**
   * The source IP address.
   */
  ipAddress?: string;
  /**
   * The last heartbeat received from the source server.
   */
  lastHeartbeat?: Date;
  /**
   * The process server Id.
   */
  processServerId?: string;
  /**
   * The master target Id.
   */
  masterTargetId?: string;
  /**
   * The collection of Consistency points.
   */
  consistencyPoints?: { [propertyName: string]: Date } | { [propertyName: string]: string };
  /**
   * A value indicating whether any disk is resized for this VM.
   */
  diskResized?: string;
  /**
   * A value indicating whether the source server requires a restart after update.
   */
  rebootAfterUpdateStatus?: string;
  /**
   * The multi vm group Id, if any.
   */
  multiVmGroupId?: string;
  /**
   * The multi vm group name, if any.
   */
  multiVmGroupName?: string;
  /**
   * A value indicating whether the multi vm sync is enabled or disabled.
   */
  multiVmSyncStatus?: string;
  /**
   * The agent details.
   */
  agentDetails?: InMageAgentDetails;
  /**
   * The vCenter infrastructure Id.
   */
  vCenterInfrastructureId?: string;
  /**
   * The infrastructure VM Id.
   */
  infrastructureVmId?: string;
  /**
   * The PE Network details.
   */
  vmNics?: VMNicDetails[];
  /**
   * A value indicating the discovery type of the machine.
   */
  discoveryType?: string;
  /**
   * A value indicating the underlying Azure storage account. If the VM is not running in Azure,
   * this value shall be set to null.
   */
  azureStorageAccountId?: string;
  /**
   * The data stores of the on-premise machine Value can be list of strings that contain data store
   * names
   */
  datastores?: string[];
  /**
   * The validation errors of the on-premise machine Value can be list of validation errors
   */
  validationErrors?: HealthError[];
  /**
   * The last RPO calculated time.
   */
  lastRpoCalculatedTime?: Date;
  /**
   * The last update time received from on-prem components.
   */
  lastUpdateReceivedTime?: Date;
  /**
   * The replica id of the protected item.
   */
  replicaId?: string;
  /**
   * The OS Version of the protected item.
   */
  osVersion?: string;
}

/**
 * InMageAzureV2 specific provider input.
 */
export interface InMageReprotectInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMage";
  /**
   * The Master Target Id.
   */
  masterTargetId: string;
  /**
   * The Process Server Id.
   */
  processServerId: string;
  /**
   * The retention drive to use on the MT.
   */
  retentionDrive: string;
  /**
   * The CS account Id.
   */
  runAsAccountId?: string;
  /**
   * The target data store name.
   */
  datastoreName?: string;
  /**
   * The enable disk exclusion input.
   */
  diskExclusionInput?: InMageDiskExclusionInput;
  /**
   * The Policy Id.
   */
  profileId: string;
  /**
   * The disks to include list.
   */
  disksToInclude?: string[];
}

/**
 * Job custom data details.
 */
export interface JobProperties {
  /**
   * The activity id.
   */
  activityId?: string;
  /**
   * The ScenarioName.
   */
  scenarioName?: string;
  /**
   * The DisplayName.
   */
  friendlyName?: string;
  /**
   * The status of the Job. It is one of these values - NotStarted, InProgress, Succeeded, Failed,
   * Cancelled, Suspended or Other.
   */
  state?: string;
  /**
   * The description of the state of the Job. For e.g. - For Succeeded state, description can be
   * Completed, PartiallySucceeded, CompletedWithInformation or Skipped.
   */
  stateDescription?: string;
  /**
   * The tasks.
   */
  tasks?: ASRTask[];
  /**
   * The errors.
   */
  errors?: JobErrorDetails[];
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * The Allowed action the job.
   */
  allowedActions?: string[];
  /**
   * The affected Object Id.
   */
  targetObjectId?: string;
  /**
   * The name of the affected object.
   */
  targetObjectName?: string;
  /**
   * The type of the affected object which is of
   * {Microsoft.Azure.SiteRecovery.V2015_11_10.AffectedObjectType} class.
   */
  targetInstanceType?: string;
  /**
   * The custom job details like test failover job details.
   */
  customDetails?: JobDetailsUnion;
}

/**
 * Job details.
 */
export interface Job extends Resource {
  /**
   * The custom data.
   */
  properties?: JobProperties;
}

/**
 * Query parameter to enumerate jobs.
 */
export interface JobQueryParameter {
  /**
   * Date time to get jobs from.
   */
  startTime?: string;
  /**
   * Date time to get jobs up to.
   */
  endTime?: string;
  /**
   * The Id of the fabric to search jobs under.
   */
  fabricId?: string;
  /**
   * The type of objects.
   */
  affectedObjectTypes?: string;
  /**
   * The states of the job to be filtered can be in.
   */
  jobStatus?: string;
}

/**
 * Model class for event details of a job status event.
 */
export interface JobStatusEventDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "JobStatus";
  /**
   * Job arm id for the event.
   */
  jobId?: string;
  /**
   * JobName for the Event.
   */
  jobFriendlyName?: string;
  /**
   * JobStatus for the Event.
   */
  jobStatus?: string;
  /**
   * AffectedObjectType for the event.
   */
  affectedObjectType?: string;
}

/**
 * This class represents a task which is actually a workflow so that one can navigate to its
 * individual drill down.
 */
export interface JobTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "JobTaskDetails";
  /**
   * The job entity.
   */
  jobTask?: JobEntity;
}

/**
 * Logical Network Properties.
 */
export interface LogicalNetworkProperties {
  /**
   * The Friendly Name.
   */
  friendlyName?: string;
  /**
   * A value indicating whether Network Virtualization is enabled for the logical network.
   */
  networkVirtualizationStatus?: string;
  /**
   * A value indicating whether logical network is used as private test network by test failover.
   */
  logicalNetworkUsage?: string;
  /**
   * A value indicating whether logical network definitions are isolated.
   */
  logicalNetworkDefinitionsStatus?: string;
}

/**
 * Logical network data model.
 */
export interface LogicalNetwork extends Resource {
  /**
   * The Logical Network Properties.
   */
  properties?: LogicalNetworkProperties;
}

/**
 * This class represents the manual action task details.
 */
export interface ManualActionTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ManualActionTaskDetails";
  /**
   * The name.
   */
  name?: string;
  /**
   * The instructions.
   */
  instructions?: string;
  /**
   * The observation.
   */
  observation?: string;
}

/**
 * The retention details of the MT.
 */
export interface RetentionVolume {
  /**
   * The volume name.
   */
  volumeName?: string;
  /**
   * The volume capacity.
   */
  capacityInBytes?: number;
  /**
   * The free space available in this volume.
   */
  freeSpaceInBytes?: number;
  /**
   * The threshold percentage.
   */
  thresholdPercentage?: number;
}

/**
 * Version related details.
 */
export interface VersionDetails {
  /**
   * The agent version.
   */
  version?: string;
  /**
   * Version expiry date.
   */
  expiryDate?: Date;
  /**
   * A value indicating whether security update required. Possible values include: 'Supported',
   * 'NotSupported', 'Deprecated', 'UpdateRequired', 'SecurityUpdateRequired'
   */
  status?: AgentVersionStatus;
}

/**
 * Details of a Master Target Server.
 */
export interface MasterTargetServer {
  /**
   * The server Id.
   */
  id?: string;
  /**
   * The IP address of the server.
   */
  ipAddress?: string;
  /**
   * The server name.
   */
  name?: string;
  /**
   * The OS type of the server.
   */
  osType?: string;
  /**
   * The version of the scout component on the server.
   */
  agentVersion?: string;
  /**
   * The last heartbeat received from the server.
   */
  lastHeartbeat?: Date;
  /**
   * Version status
   */
  versionStatus?: string;
  /**
   * The retention volumes of Master target Server.
   */
  retentionVolumes?: RetentionVolume[];
  /**
   * The list of data stores in the fabric.
   */
  dataStores?: DataStore[];
  /**
   * Validation errors.
   */
  validationErrors?: HealthError[];
  /**
   * Health errors.
   */
  healthErrors?: HealthError[];
  /**
   * Disk count of the master target.
   */
  diskCount?: number;
  /**
   * OS Version of the master target.
   */
  osVersion?: string;
  /**
   * Agent expiry date.
   */
  agentExpiryDate?: Date;
  /**
   * MARS agent version.
   */
  marsAgentVersion?: string;
  /**
   * MARS agent expiry date.
   */
  marsAgentExpiryDate?: Date;
  /**
   * Agent version details.
   */
  agentVersionDetails?: VersionDetails;
  /**
   * Mars agent version details.
   */
  marsAgentVersionDetails?: VersionDetails;
}

/**
 * Contains the possible cases for MigrateProviderSpecificInput.
 */
export type MigrateProviderSpecificInputUnion = MigrateProviderSpecificInput | VMwareCbtMigrateInput;

/**
 * Migrate provider specific input.
 */
export interface MigrateProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "MigrateProviderSpecificInput";
}

/**
 * Migrate input properties.
 */
export interface MigrateInputProperties {
  /**
   * The provider specific details.
   */
  providerSpecificDetails: MigrateProviderSpecificInputUnion;
}

/**
 * Input for migrate.
 */
export interface MigrateInput {
  /**
   * Migrate input properties.
   */
  properties: MigrateInputProperties;
}

/**
 * Contains the possible cases for MigrationProviderSpecificSettings.
 */
export type MigrationProviderSpecificSettingsUnion = MigrationProviderSpecificSettings | VMwareCbtMigrationDetails;

/**
 * Migration provider specific settings.
 */
export interface MigrationProviderSpecificSettings {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "MigrationProviderSpecificSettings";
}

/**
 * Migration item properties.
 */
export interface MigrationItemProperties {
  /**
   * The on-premise virtual machine name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly machineName?: string;
  /**
   * The ARM Id of policy governing this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyId?: string;
  /**
   * The name of policy governing this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyFriendlyName?: string;
  /**
   * The recovery services provider ARM Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryServicesProviderId?: string;
  /**
   * The migration status. Possible values include: 'None', 'EnableMigrationInProgress',
   * 'EnableMigrationFailed', 'DisableMigrationInProgress', 'DisableMigrationFailed',
   * 'InitialSeedingInProgress', 'InitialSeedingFailed', 'Replicating', 'MigrationInProgress',
   * 'MigrationSucceeded', 'MigrationFailed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly migrationState?: MigrationState;
  /**
   * The migration state description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly migrationStateDescription?: string;
  /**
   * The test migrate state. Possible values include: 'None', 'TestMigrationInProgress',
   * 'TestMigrationSucceeded', 'TestMigrationFailed', 'TestMigrationCleanupInProgress'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly testMigrateState?: TestMigrationState;
  /**
   * The test migrate state description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly testMigrateStateDescription?: string;
  /**
   * The consolidated health.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly health?: string;
  /**
   * The list of health errors.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly healthErrors?: HealthError[];
  /**
   * The allowed operations on the migration item, based on the current migration state of the
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowedOperations?: MigrationItemOperation[];
  /**
   * The current job details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentJob?: CurrentJobDetails;
  /**
   * The migration provider custom settings.
   */
  providerSpecificDetails?: MigrationProviderSpecificSettingsUnion;
}

/**
 * Migration item.
 */
export interface MigrationItem extends Resource {
  /**
   * The migration item properties.
   */
  properties?: MigrationItemProperties;
}

/**
 * Query parameter to enumerate migration items.
 */
export interface MigrationItemsQueryParameter {
  /**
   * The source fabric name filter.
   */
  sourceFabricName?: string;
  /**
   * The replication provider type.
   */
  instanceType?: string;
}

/**
 * Migration item recovery point properties.
 */
export interface MigrationRecoveryPointProperties {
  /**
   * The recovery point time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointTime?: Date;
  /**
   * The recovery point type. Possible values include: 'NotSpecified', 'ApplicationConsistent',
   * 'CrashConsistent'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recoveryPointType?: MigrationRecoveryPointType;
}

/**
 * Recovery point for a migration item.
 */
export interface MigrationRecoveryPoint extends Resource {
  /**
   * Recovery point properties.
   */
  properties?: MigrationRecoveryPointProperties;
}

/**
 * The Mobility Service update details.
 */
export interface MobilityServiceUpdate {
  /**
   * The version of the latest update.
   */
  version?: string;
  /**
   * The reboot status of the update - whether it is required or not.
   */
  rebootStatus?: string;
  /**
   * The OS type.
   */
  osType?: string;
}

/**
 * Subnets of the network.
 */
export interface Subnet {
  /**
   * The subnet name.
   */
  name?: string;
  /**
   * The subnet friendly name.
   */
  friendlyName?: string;
  /**
   * The list of addresses for the subnet.
   */
  addressList?: string[];
}

/**
 * Network Properties
 */
export interface NetworkProperties {
  /**
   * The Fabric Type.
   */
  fabricType?: string;
  /**
   * The List of subnets.
   */
  subnets?: Subnet[];
  /**
   * The Friendly Name.
   */
  friendlyName?: string;
  /**
   * The Network Type.
   */
  networkType?: string;
}

/**
 * Network model.
 */
export interface Network extends Resource {
  /**
   * The Network Properties.
   */
  properties?: NetworkProperties;
}

/**
 * Network Mapping Properties.
 */
export interface NetworkMappingProperties {
  /**
   * The pairing state for network mapping.
   */
  state?: string;
  /**
   * The primary network friendly name.
   */
  primaryNetworkFriendlyName?: string;
  /**
   * The primary network id for network mapping.
   */
  primaryNetworkId?: string;
  /**
   * The primary fabric friendly name.
   */
  primaryFabricFriendlyName?: string;
  /**
   * The recovery network friendly name.
   */
  recoveryNetworkFriendlyName?: string;
  /**
   * The recovery network id for network mapping.
   */
  recoveryNetworkId?: string;
  /**
   * The recovery fabric ARM id.
   */
  recoveryFabricArmId?: string;
  /**
   * The recovery fabric friendly name.
   */
  recoveryFabricFriendlyName?: string;
  /**
   * The fabric specific settings.
   */
  fabricSpecificSettings?: NetworkMappingFabricSpecificSettingsUnion;
}

/**
 * Network Mapping model. Ideally it should have been possible to inherit this class from prev
 * version in InheritedModels as long as there is no difference in structure or method signature.
 * Since there were no base Models for certain fields and methods viz NetworkMappingProperties and
 * Load with required return type, the class has been introduced in its entirety with references to
 * base models to facilitate extensions in subsequent versions.
 */
export interface NetworkMapping extends Resource {
  /**
   * The Network Mapping Properties.
   */
  properties?: NetworkMappingProperties;
}

/**
 * Operations discovery class.
 */
export interface OperationsDiscovery {
  /**
   * Name of the API. The name of the operation being performed on this particular object. It
   * should match the action name that appears in RBAC / the event service. Examples of operations
   * include: * Microsoft.Compute/virtualMachine/capture/action *
   * Microsoft.Compute/virtualMachine/restart/action * Microsoft.Compute/virtualMachine/write *
   * Microsoft.Compute/virtualMachine/read * Microsoft.Compute/virtualMachine/delete Each action
   * should include, in order: (1) Resource Provider Namespace (2) Type hierarchy for which the
   * action applies (e.g. server/databases for a SQL Azure database) (3) Read, Write, Action or
   * Delete indicating which type applies. If it is a PUT/PATCH on a collection or named value,
   * Write should be used. If it is a GET, Read should be used. If it is a DELETE, Delete should be
   * used. If it is a POST, Action should be used. As a note: all resource providers would need to
   * include the "{Resource Provider Namespace}/register/action" operation in their response. This
   * API is used to register for their service, and should include details about the operation
   * (e.g. a localized name for the resource provider + any special considerations like PII
   * release)
   */
  name?: string;
  /**
   * Object type
   */
  display?: Display;
  /**
   * Origin. The intended executor of the operation; governs the display of the operation in the
   * RBAC UX and the audit logs UX. Default value is "user,system"
   */
  origin?: string;
  /**
   * Properties. Reserved for future use.
   */
  properties?: any;
}

/**
 * Wrapper model for OSVersion to include version and service pack info.
 */
export interface OSVersionWrapper {
  /**
   * The version.
   */
  version?: string;
  /**
   * Service pack.
   */
  servicePack?: string;
}

/**
 * Input definition for planned failover input properties.
 */
export interface PlannedFailoverInputProperties {
  /**
   * Failover direction.
   */
  failoverDirection?: string;
  /**
   * Provider specific settings
   */
  providerSpecificDetails?: ProviderSpecificFailoverInputUnion;
}

/**
 * Input definition for planned failover.
 */
export interface PlannedFailoverInput {
  /**
   * Planned failover input properties
   */
  properties?: PlannedFailoverInputProperties;
}

/**
 * Protection profile custom data details.
 */
export interface PolicyProperties {
  /**
   * The FriendlyName.
   */
  friendlyName?: string;
  /**
   * The ReplicationChannelSetting.
   */
  providerSpecificDetails?: PolicyProviderSpecificDetailsUnion;
}

/**
 * Protection profile details.
 */
export interface Policy extends Resource {
  /**
   * The custom data.
   */
  properties?: PolicyProperties;
}

/**
 * Details of the Process Server.
 */
export interface ProcessServer {
  /**
   * The Process Server's friendly name.
   */
  friendlyName?: string;
  /**
   * The Process Server Id.
   */
  id?: string;
  /**
   * The IP address of the server.
   */
  ipAddress?: string;
  /**
   * The OS type of the server.
   */
  osType?: string;
  /**
   * The version of the scout component on the server.
   */
  agentVersion?: string;
  /**
   * The last heartbeat received from the server.
   */
  lastHeartbeat?: Date;
  /**
   * Version status
   */
  versionStatus?: string;
  /**
   * The list of the mobility service updates available on the Process Server.
   */
  mobilityServiceUpdates?: MobilityServiceUpdate[];
  /**
   * The agent generated Id.
   */
  hostId?: string;
  /**
   * The servers configured with this PS.
   */
  machineCount?: string;
  /**
   * The number of replication pairs configured in this PS.
   */
  replicationPairCount?: string;
  /**
   * The percentage of the system load.
   */
  systemLoad?: string;
  /**
   * The system load status.
   */
  systemLoadStatus?: string;
  /**
   * The percentage of the CPU load.
   */
  cpuLoad?: string;
  /**
   * The CPU load status.
   */
  cpuLoadStatus?: string;
  /**
   * The total memory.
   */
  totalMemoryInBytes?: number;
  /**
   * The available memory.
   */
  availableMemoryInBytes?: number;
  /**
   * The memory usage status.
   */
  memoryUsageStatus?: string;
  /**
   * The total space.
   */
  totalSpaceInBytes?: number;
  /**
   * The available space.
   */
  availableSpaceInBytes?: number;
  /**
   * The space usage status.
   */
  spaceUsageStatus?: string;
  /**
   * The PS service status.
   */
  psServiceStatus?: string;
  /**
   * The PS SSL cert expiry date.
   */
  sslCertExpiryDate?: Date;
  /**
   * CS SSL cert expiry date.
   */
  sslCertExpiryRemainingDays?: number;
  /**
   * OS Version of the process server. Note: This will get populated if user has CS version greater
   * than 9.12.0.0.
   */
  osVersion?: string;
  /**
   * Health errors.
   */
  healthErrors?: HealthError[];
  /**
   * Agent expiry date.
   */
  agentExpiryDate?: Date;
  /**
   * The agent version details.
   */
  agentVersionDetails?: VersionDetails;
}

/**
 * Replication protected item custom data details.
 */
export interface ProtectableItemProperties {
  /**
   * The name.
   */
  friendlyName?: string;
  /**
   * The protection status.
   */
  protectionStatus?: string;
  /**
   * The ARM resource of protected items.
   */
  replicationProtectedItemId?: string;
  /**
   * The recovery provider ARM Id.
   */
  recoveryServicesProviderId?: string;
  /**
   * The Current protection readiness errors.
   */
  protectionReadinessErrors?: string[];
  /**
   * The list of replication providers supported for the protectable item.
   */
  supportedReplicationProviders?: string[];
  /**
   * The Replication provider custom settings.
   */
  customDetails?: ConfigurationSettingsUnion;
}

/**
 * Replication protected item
 */
export interface ProtectableItem extends Resource {
  /**
   * The custom data.
   */
  properties?: ProtectableItemProperties;
}

/**
 * Query parameter to enumerate Protectable items.
 */
export interface ProtectableItemQueryParameter {
  /**
   * State of the Protectable item query filter.
   */
  state?: string;
}

/**
 * Query parameter to enumerate protected items.
 */
export interface ProtectedItemsQueryParameter {
  /**
   * The source fabric name filter.
   */
  sourceFabricName?: string;
  /**
   * The recovery plan filter.
   */
  recoveryPlanName?: string;
  /**
   * The vCenter name filter.
   */
  vCenterName?: string;
  /**
   * The replication provider type.
   */
  instanceType?: string;
  /**
   * Whether Multi VM group is auto created or specified by user. Possible values include:
   * 'AutoCreated', 'UserSpecified'
   */
  multiVmGroupCreateOption?: MultiVmGroupCreateOption;
}

/**
 * Base class for fabric specific details of container.
 */
export interface ProtectionContainerFabricSpecificDetails {
  /**
   * Gets the class type. Overridden in derived classes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceType?: string;
}

/**
 * Protection profile custom data details.
 */
export interface ProtectionContainerProperties {
  /**
   * Fabric friendly name.
   */
  fabricFriendlyName?: string;
  /**
   * The name.
   */
  friendlyName?: string;
  /**
   * The fabric type.
   */
  fabricType?: string;
  /**
   * Number of protected PEs
   */
  protectedItemCount?: number;
  /**
   * The pairing status of this cloud.
   */
  pairingStatus?: string;
  /**
   * The role of this cloud.
   */
  role?: string;
  /**
   * Fabric specific details.
   */
  fabricSpecificDetails?: ProtectionContainerFabricSpecificDetails;
}

/**
 * Protection container details.
 */
export interface ProtectionContainer extends Resource {
  /**
   * The custom data.
   */
  properties?: ProtectionContainerProperties;
}

/**
 * Protection container mapping properties.
 */
export interface ProtectionContainerMappingProperties {
  /**
   * Paired protection container ARM ID.
   */
  targetProtectionContainerId?: string;
  /**
   * Friendly name of paired container.
   */
  targetProtectionContainerFriendlyName?: string;
  /**
   * Provider specific provider details.
   */
  providerSpecificDetails?: ProtectionContainerMappingProviderSpecificDetailsUnion;
  /**
   * Health of pairing.
   */
  health?: string;
  /**
   * Health error.
   */
  healthErrorDetails?: HealthError[];
  /**
   * Policy ARM Id.
   */
  policyId?: string;
  /**
   * Association Status
   */
  state?: string;
  /**
   * Friendly name of source protection container.
   */
  sourceProtectionContainerFriendlyName?: string;
  /**
   * Friendly name of source fabric.
   */
  sourceFabricFriendlyName?: string;
  /**
   * Friendly name of target fabric.
   */
  targetFabricFriendlyName?: string;
  /**
   * Friendly name of replication policy.
   */
  policyFriendlyName?: string;
}

/**
 * Protection container mapping object.
 */
export interface ProtectionContainerMapping extends Resource {
  /**
   * The custom data.
   */
  properties?: ProtectionContainerMappingProperties;
}

/**
 * RCM based Azure migration specific policy details.
 */
export interface RcmAzureMigrationPolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RcmAzureMigration";
  /**
   * The recovery point threshold in minutes.
   */
  recoveryPointThresholdInMinutes?: number;
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistory?: number;
  /**
   * The app consistent snapshot frequency in minutes.
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * A value indicating whether multi-VM sync has to be enabled. Possible values include:
   * 'Enabled', 'Disabled'
   */
  multiVmSyncStatus?: MultiVmSyncStatus;
  /**
   * The crash consistent snapshot frequency in minutes.
   */
  crashConsistentFrequencyInMinutes?: number;
}

/**
 * Contains the possible cases for RecoveryPlanProviderSpecificDetails.
 */
export type RecoveryPlanProviderSpecificDetailsUnion = RecoveryPlanProviderSpecificDetails | RecoveryPlanA2ADetails;

/**
 * Recovery plan provider specific details.
 */
export interface RecoveryPlanProviderSpecificDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RecoveryPlanProviderSpecificDetails";
}

/**
 * Recovery plan custom details.
 */
export interface RecoveryPlanProperties {
  /**
   * The friendly name.
   */
  friendlyName?: string;
  /**
   * The primary fabric Id.
   */
  primaryFabricId?: string;
  /**
   * The primary fabric friendly name.
   */
  primaryFabricFriendlyName?: string;
  /**
   * The recovery fabric Id.
   */
  recoveryFabricId?: string;
  /**
   * The recovery fabric friendly name.
   */
  recoveryFabricFriendlyName?: string;
  /**
   * The failover deployment model.
   */
  failoverDeploymentModel?: string;
  /**
   * The list of replication providers.
   */
  replicationProviders?: string[];
  /**
   * The list of allowed operations.
   */
  allowedOperations?: string[];
  /**
   * The start time of the last planned failover.
   */
  lastPlannedFailoverTime?: Date;
  /**
   * The start time of the last unplanned failover.
   */
  lastUnplannedFailoverTime?: Date;
  /**
   * The start time of the last test failover.
   */
  lastTestFailoverTime?: Date;
  /**
   * The current scenario details.
   */
  currentScenario?: CurrentScenarioDetails;
  /**
   * The recovery plan status.
   */
  currentScenarioStatus?: string;
  /**
   * The recovery plan status description.
   */
  currentScenarioStatusDescription?: string;
  /**
   * The recovery plan groups.
   */
  groups?: RecoveryPlanGroup[];
  /**
   * The provider id and provider specific details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly providerSpecificDetails?: RecoveryPlanProviderSpecificDetailsUnion[];
}

/**
 * Recovery plan details.
 */
export interface RecoveryPlan extends Resource {
  /**
   * The custom details.
   */
  properties?: RecoveryPlanProperties;
}

/**
 * Contains the possible cases for RecoveryPlanProviderSpecificFailoverInput.
 */
export type RecoveryPlanProviderSpecificFailoverInputUnion = RecoveryPlanProviderSpecificFailoverInput | RecoveryPlanA2AFailoverInput | RecoveryPlanHyperVReplicaAzureFailbackInput | RecoveryPlanHyperVReplicaAzureFailoverInput | RecoveryPlanInMageAzureV2FailoverInput | RecoveryPlanInMageFailoverInput;

/**
 * Recovery plan provider specific failover input base class.
 */
export interface RecoveryPlanProviderSpecificFailoverInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RecoveryPlanProviderSpecificFailoverInput";
}

/**
 * Recovery plan A2A failover input.
 */
export interface RecoveryPlanA2AFailoverInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The recovery point type. Possible values include: 'Latest', 'LatestApplicationConsistent',
   * 'LatestCrashConsistent', 'LatestProcessed'
   */
  recoveryPointType: A2ARpRecoveryPointType;
  /**
   * A value indicating whether to use recovery cloud service for TFO or not.
   */
  cloudServiceCreationOption?: string;
  /**
   * A value indicating whether multi VM sync enabled VMs should use multi VM sync points for
   * failover. Possible values include: 'UseMultiVmSyncRecoveryPoint', 'UsePerVmRecoveryPoint'
   */
  multiVmSyncPointOption?: MultiVmSyncPointOption;
}

/**
 * Recovery plan A2A specific details.
 */
export interface RecoveryPlanA2ADetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RecoveryPlanA2ADetails";
  /**
   * The primary zone.
   */
  primaryZone?: string;
  /**
   * The recovery zone.
   */
  recoveryZone?: string;
}

/**
 * Recovery plan A2A input.
 */
export interface RecoveryPlanA2AInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "A2A";
  /**
   * The primary zone.
   */
  primaryZone?: string;
  /**
   * The recovery zone.
   */
  recoveryZone?: string;
}

/**
 * Recovery plan Automation runbook action details.
 */
export interface RecoveryPlanAutomationRunbookActionDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "AutomationRunbookActionDetails";
  /**
   * The runbook ARM Id.
   */
  runbookId?: string;
  /**
   * The runbook timeout.
   */
  timeout?: string;
  /**
   * The fabric location. Possible values include: 'Primary', 'Recovery'
   */
  fabricLocation: RecoveryPlanActionLocation;
}

/**
 * This class represents the recovery plan group task.
 */
export interface RecoveryPlanGroupTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RecoveryPlanGroupTaskDetails";
  /**
   * The child tasks.
   */
  childTasks?: ASRTask[];
  /**
   * The name.
   */
  name?: string;
  /**
   * The group identifier.
   */
  groupId?: string;
  /**
   * The group type.
   */
  rpGroupType?: string;
}

/**
 * Recovery plan HVR Azure failback input.
 */
export interface RecoveryPlanHyperVReplicaAzureFailbackInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzureFailback";
  /**
   * The data sync option. Possible values include: 'ForDownTime', 'ForSynchronization'
   */
  dataSyncOption: DataSyncStatus;
  /**
   * The ALR option. Possible values include: 'CreateVmIfNotFound', 'NoAction'
   */
  recoveryVmCreationOption: AlternateLocationRecoveryOption;
}

/**
 * Recovery plan HVR Azure failover input.
 */
export interface RecoveryPlanHyperVReplicaAzureFailoverInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "HyperVReplicaAzure";
  /**
   * The vault location.
   */
  vaultLocation?: string;
  /**
   * The primary KEK certificate PFX.
   */
  primaryKekCertificatePfx?: string;
  /**
   * The secondary KEK certificate PFX.
   */
  secondaryKekCertificatePfx?: string;
  /**
   * The recovery point type. Possible values include: 'Latest', 'LatestApplicationConsistent',
   * 'LatestProcessed'
   */
  recoveryPointType?: HyperVReplicaAzureRpRecoveryPointType;
}

/**
 * Recovery plan InMageAzureV2 failover input.
 */
export interface RecoveryPlanInMageAzureV2FailoverInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMageAzureV2";
  /**
   * The vault location.
   */
  vaultLocation: string;
  /**
   * The recovery point type. Possible values include: 'Latest', 'LatestApplicationConsistent',
   * 'LatestCrashConsistent', 'LatestProcessed'
   */
  recoveryPointType: InMageV2RpRecoveryPointType;
  /**
   * A value indicating whether multi VM sync enabled VMs should use multi VM sync points for
   * failover.
   */
  useMultiVmSyncPoint?: string;
}

/**
 * Recovery plan InMage failover input.
 */
export interface RecoveryPlanInMageFailoverInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "InMage";
  /**
   * The recovery point type. Possible values include: 'LatestTime', 'LatestTag', 'Custom'
   */
  recoveryPointType: RpInMageRecoveryPointType;
}

/**
 * Recovery plan manual action details.
 */
export interface RecoveryPlanManualActionDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ManualActionDetails";
  /**
   * The manual action description.
   */
  description?: string;
}

/**
 * Recovery plan planned failover input properties.
 */
export interface RecoveryPlanPlannedFailoverInputProperties {
  /**
   * The failover direction. Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
   */
  failoverDirection: PossibleOperationsDirections;
  /**
   * The provider specific properties.
   */
  providerSpecificDetails?: RecoveryPlanProviderSpecificFailoverInputUnion[];
}

/**
 * Recovery plan planned failover input.
 */
export interface RecoveryPlanPlannedFailoverInput {
  /**
   * The recovery plan planned failover input properties.
   */
  properties: RecoveryPlanPlannedFailoverInputProperties;
}

/**
 * Recovery plan script action details.
 */
export interface RecoveryPlanScriptActionDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ScriptActionDetails";
  /**
   * The script path.
   */
  path: string;
  /**
   * The script timeout.
   */
  timeout?: string;
  /**
   * The fabric location. Possible values include: 'Primary', 'Recovery'
   */
  fabricLocation: RecoveryPlanActionLocation;
}

/**
 * This class represents the recovery plan shutdown group task details.
 */
export interface RecoveryPlanShutdownGroupTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "RecoveryPlanShutdownGroupTaskDetails";
  /**
   * The child tasks.
   */
  childTasks?: ASRTask[];
  /**
   * The name.
   */
  name?: string;
  /**
   * The group identifier.
   */
  groupId?: string;
  /**
   * The group type.
   */
  rpGroupType?: string;
}

/**
 * Recovery plan test failover cleanup input properties.
 */
export interface RecoveryPlanTestFailoverCleanupInputProperties {
  /**
   * The test failover cleanup comments.
   */
  comments?: string;
}

/**
 * Recovery plan test failover cleanup input.
 */
export interface RecoveryPlanTestFailoverCleanupInput {
  /**
   * The recovery plan test failover cleanup input properties.
   */
  properties: RecoveryPlanTestFailoverCleanupInputProperties;
}

/**
 * Recovery plan test failover input properties.
 */
export interface RecoveryPlanTestFailoverInputProperties {
  /**
   * The failover direction. Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
   */
  failoverDirection: PossibleOperationsDirections;
  /**
   * The network type to be used for test failover.
   */
  networkType: string;
  /**
   * The Id of the network to be used for test failover.
   */
  networkId?: string;
  /**
   * A value indicating whether the test failover cleanup is to be skipped.
   */
  skipTestFailoverCleanup?: string;
  /**
   * The provider specific properties.
   */
  providerSpecificDetails?: RecoveryPlanProviderSpecificFailoverInputUnion[];
}

/**
 * Recovery plan test failover input.
 */
export interface RecoveryPlanTestFailoverInput {
  /**
   * The recovery plan test failover input properties.
   */
  properties: RecoveryPlanTestFailoverInputProperties;
}

/**
 * Recovery plan unplanned failover input properties.
 */
export interface RecoveryPlanUnplannedFailoverInputProperties {
  /**
   * The failover direction. Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
   */
  failoverDirection: PossibleOperationsDirections;
  /**
   * A value indicating whether source site operations are required. Possible values include:
   * 'Required', 'NotRequired'
   */
  sourceSiteOperations: SourceSiteOperations;
  /**
   * The provider specific properties.
   */
  providerSpecificDetails?: RecoveryPlanProviderSpecificFailoverInputUnion[];
}

/**
 * Recovery plan unplanned failover input.
 */
export interface RecoveryPlanUnplannedFailoverInput {
  /**
   * The recovery plan unplanned failover input properties.
   */
  properties: RecoveryPlanUnplannedFailoverInputProperties;
}

/**
 * Recovery point properties.
 */
export interface RecoveryPointProperties {
  /**
   * The recovery point time.
   */
  recoveryPointTime?: Date;
  /**
   * The recovery point type: ApplicationConsistent, CrashConsistent.
   */
  recoveryPointType?: string;
  /**
   * The provider specific details for the recovery point.
   */
  providerSpecificDetails?: ProviderSpecificRecoveryPointDetailsUnion;
}

/**
 * Base class representing a recovery point.
 */
export interface RecoveryPoint extends Resource {
  /**
   * Recovery point related data.
   */
  properties?: RecoveryPointProperties;
}

/**
 * Recovery services provider properties.
 */
export interface RecoveryServicesProviderProperties {
  /**
   * Type of the site.
   */
  fabricType?: string;
  /**
   * Friendly name of the DRA.
   */
  friendlyName?: string;
  /**
   * The provider version.
   */
  providerVersion?: string;
  /**
   * The fabric provider.
   */
  serverVersion?: string;
  /**
   * DRA version status.
   */
  providerVersionState?: string;
  /**
   * Expiry date of the version.
   */
  providerVersionExpiryDate?: Date;
  /**
   * The fabric friendly name.
   */
  fabricFriendlyName?: string;
  /**
   * Time when last heartbeat was sent by the DRA.
   */
  lastHeartBeat?: Date;
  /**
   * A value indicating whether DRA is responsive.
   */
  connectionStatus?: string;
  /**
   * Number of protected VMs currently managed by the DRA.
   */
  protectedItemCount?: number;
  /**
   * The scenarios allowed on this provider.
   */
  allowedScenarios?: string[];
  /**
   * The recovery services provider health error details.
   */
  healthErrorDetails?: HealthError[];
  /**
   * The DRA Id.
   */
  draIdentifier?: string;
  /**
   * The authentication identity details.
   */
  authenticationIdentityDetails?: IdentityProviderDetails;
  /**
   * The resource access identity details.
   */
  resourceAccessIdentityDetails?: IdentityProviderDetails;
  /**
   * The provider version details.
   */
  providerVersionDetails?: VersionDetails;
}

/**
 * Provider details.
 */
export interface RecoveryServicesProvider extends Resource {
  /**
   * Provider properties.
   */
  properties?: RecoveryServicesProviderProperties;
}

/**
 * Remove Disk input properties.
 */
export interface RemoveDisksInputProperties {
  /**
   * The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be
   * AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput
   * object. For HyperVReplicaAzure provider, it can be null.
   */
  providerSpecificDetails?: RemoveDisksProviderSpecificInputUnion;
}

/**
 * Input for remove disk(s) operation.
 */
export interface RemoveDisksInput {
  /**
   * Remove disk input properties.
   */
  properties?: RemoveDisksInputProperties;
}

/**
 * Provider specific input for unpairing operations.
 */
export interface ReplicationProviderContainerUnmappingInput {
  /**
   * The class type.
   */
  instanceType?: string;
}

/**
 * Unpairing input properties.
 */
export interface RemoveProtectionContainerMappingInputProperties {
  /**
   * Provider specific input for unpairing.
   */
  providerSpecificInput?: ReplicationProviderContainerUnmappingInput;
}

/**
 * Container unpairing input.
 */
export interface RemoveProtectionContainerMappingInput {
  /**
   * Configure protection input properties.
   */
  properties?: RemoveProtectionContainerMappingInputProperties;
}

/**
 * Renew Certificate input properties.
 */
export interface RenewCertificateInputProperties {
  /**
   * Renew certificate type.
   */
  renewCertificateType?: string;
}

/**
 * Certificate renewal input.
 */
export interface RenewCertificateInput {
  /**
   * Renew certificate input properties.
   */
  properties?: RenewCertificateInputProperties;
}

/**
 * Error model that can be exposed to the user.
 */
export interface ReplicationEligibilityResultsErrorInfo {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The possible causes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly possibleCauses?: string;
  /**
   * The recommended action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendedAction?: string;
  /**
   * The error status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
}

/**
 * Properties model for replication eligibility results API.
 */
export interface ReplicationEligibilityResultsProperties {
  /**
   * The client request Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientRequestId?: string;
  /**
   * The error details.
   */
  errors?: ReplicationEligibilityResultsErrorInfo[];
}

/**
 * Replication eligibility results response model.
 */
export interface ReplicationEligibilityResults {
  /**
   * Gets the name of this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Gets the object type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Gets Unique ARM identifier for this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Gets properties model for replication eligibility results API.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: ReplicationEligibilityResultsProperties;
}

/**
 * Replication eligibility results collection response model.
 */
export interface ReplicationEligibilityResultsCollection {
  /**
   * The replication eligibility results details.
   */
  value?: ReplicationEligibilityResults[];
}

/**
 * Replication group details. This will be used in case of San and Wvr.
 */
export interface ReplicationGroupDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ReplicationGroupDetails";
}

/**
 * Replication protected item custom data details.
 */
export interface ReplicationProtectedItemProperties {
  /**
   * The name.
   */
  friendlyName?: string;
  /**
   * The type of protected item type.
   */
  protectedItemType?: string;
  /**
   * The protected item ARM Id.
   */
  protectableItemId?: string;
  /**
   * The recovery provider ARM Id.
   */
  recoveryServicesProviderId?: string;
  /**
   * The friendly name of the primary fabric.
   */
  primaryFabricFriendlyName?: string;
  /**
   * The fabric provider of the primary fabric.
   */
  primaryFabricProvider?: string;
  /**
   * The friendly name of recovery fabric.
   */
  recoveryFabricFriendlyName?: string;
  /**
   * The Arm Id of recovery fabric.
   */
  recoveryFabricId?: string;
  /**
   * The name of primary protection container friendly name.
   */
  primaryProtectionContainerFriendlyName?: string;
  /**
   * The name of recovery container friendly name.
   */
  recoveryProtectionContainerFriendlyName?: string;
  /**
   * The protection status.
   */
  protectionState?: string;
  /**
   * The protection state description.
   */
  protectionStateDescription?: string;
  /**
   * The Current active location of the PE.
   */
  activeLocation?: string;
  /**
   * The Test failover state.
   */
  testFailoverState?: string;
  /**
   * The Test failover state description.
   */
  testFailoverStateDescription?: string;
  /**
   * The allowed operations on the Replication protected item.
   */
  allowedOperations?: string[];
  /**
   * The consolidated protection health for the VM taking any issues with SRS as well as all the
   * replication units associated with the VM's replication group into account. This is a string
   * representation of the ProtectionHealth enumeration.
   */
  replicationHealth?: string;
  /**
   * The consolidated failover health for the VM.
   */
  failoverHealth?: string;
  /**
   * List of health errors.
   */
  healthErrors?: HealthError[];
  /**
   * The ID of Policy governing this PE.
   */
  policyId?: string;
  /**
   * The name of Policy governing this PE.
   */
  policyFriendlyName?: string;
  /**
   * The Last successful failover time.
   */
  lastSuccessfulFailoverTime?: Date;
  /**
   * The Last successful test failover time.
   */
  lastSuccessfulTestFailoverTime?: Date;
  /**
   * The current scenario.
   */
  currentScenario?: CurrentScenarioDetails;
  /**
   * The recovery point ARM Id to which the Vm was failed over.
   */
  failoverRecoveryPointId?: string;
  /**
   * The Replication provider custom settings.
   */
  providerSpecificDetails?: ReplicationProviderSpecificSettingsUnion;
  /**
   * The recovery container Id.
   */
  recoveryContainerId?: string;
}

/**
 * Replication protected item.
 */
export interface ReplicationProtectedItem extends Resource {
  /**
   * The custom data.
   */
  properties?: ReplicationProtectedItemProperties;
}

/**
 * Resolve health errors input properties.
 */
export interface ResolveHealthError {
  /**
   * Health error id.
   */
  healthErrorId?: string;
}

/**
 * Resolve health input properties.
 */
export interface ResolveHealthInputProperties {
  /**
   * Health errors.
   */
  healthErrors?: ResolveHealthError[];
}

/**
 * Resolve health input.
 */
export interface ResolveHealthInput {
  /**
   * Disable resolve health input properties.
   */
  properties?: ResolveHealthInputProperties;
}

/**
 * Base class to define the health summary of the resources contained under an Arm resource.
 */
export interface ResourceHealthSummary {
  /**
   * The count of total resources under the container.
   */
  resourceCount?: number;
  /**
   * The list of summary of health errors across the resources under the container.
   */
  issues?: HealthErrorSummary[];
}

/**
 * Resume job properties.
 */
export interface ResumeJobParamsProperties {
  /**
   * Resume job comments.
   */
  comments?: string;
}

/**
 * Resume job params.
 */
export interface ResumeJobParams {
  /**
   * Resume job properties.
   */
  properties?: ResumeJobParamsProperties;
}

/**
 * Reverse replication input properties.
 */
export interface ReverseReplicationInputProperties {
  /**
   * Failover direction.
   */
  failoverDirection?: string;
  /**
   * Provider specific reverse replication input.
   */
  providerSpecificDetails?: ReverseReplicationProviderSpecificInputUnion;
}

/**
 * Reverse replication input.
 */
export interface ReverseReplicationInput {
  /**
   * Reverse replication properties
   */
  properties?: ReverseReplicationInputProperties;
}

/**
 * Azure role assignment details.
 */
export interface RoleAssignment {
  /**
   * The ARM Id of the role assignment.
   */
  id?: string;
  /**
   * The name of the role assignment.
   */
  name?: string;
  /**
   * Role assignment scope.
   */
  scope?: string;
  /**
   * Principal Id.
   */
  principalId?: string;
  /**
   * Role definition id.
   */
  roleDefinitionId?: string;
}

/**
 * CS Accounts Details.
 */
export interface RunAsAccount {
  /**
   * The CS RunAs account Id.
   */
  accountId?: string;
  /**
   * The CS RunAs account name.
   */
  accountName?: string;
}

/**
 * San enable protection provider specific input.
 */
export interface SanEnableProtectionInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "San";
}

/**
 * This class represents the script action task details.
 */
export interface ScriptActionTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "ScriptActionTaskDetails";
  /**
   * The name.
   */
  name?: string;
  /**
   * The path.
   */
  path?: string;
  /**
   * The output.
   */
  output?: string;
  /**
   * A value indicating whether it is a primary side script or not.
   */
  isPrimarySideScript?: boolean;
}

/**
 * Storage object properties.
 */
export interface StorageClassificationProperties {
  /**
   * Friendly name of the Storage classification.
   */
  friendlyName?: string;
}

/**
 * Storage object definition.
 */
export interface StorageClassification extends Resource {
  /**
   * Properties of the storage object.
   */
  properties?: StorageClassificationProperties;
}

/**
 * Storage mapping properties.
 */
export interface StorageClassificationMappingProperties {
  /**
   * Target storage object Id.
   */
  targetStorageClassificationId?: string;
}

/**
 * Storage mapping object.
 */
export interface StorageClassificationMapping extends Resource {
  /**
   * Properties of the storage mapping object.
   */
  properties?: StorageClassificationMappingProperties;
}

/**
 * Storage mapping input properties.
 */
export interface StorageMappingInputProperties {
  /**
   * The ID of the storage object.
   */
  targetStorageClassificationId?: string;
}

/**
 * Storage mapping input.
 */
export interface StorageClassificationMappingInput {
  /**
   * Storage mapping input properties.
   */
  properties?: StorageMappingInputProperties;
}

/**
 * Supported Operating system details.
 */
export interface SupportedOSDetails {
  /**
   * The name.
   */
  osName?: string;
  /**
   * The type.
   */
  osType?: string;
  /**
   * List of version for OS.
   */
  osVersions?: OSVersionWrapper[];
}

/**
 * Property object for supported OS api.
 */
export interface SupportedOSProperty {
  /**
   * Gets the replication provider type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceType?: string;
  /**
   * List of supported OS.
   */
  supportedOs?: SupportedOSDetails[];
}

/**
 * Properties model for supported OS API.
 */
export interface SupportedOSProperties {
  /**
   * The supported OS List.
   */
  supportedOsList?: SupportedOSProperty[];
}

/**
 * Response object for supported operating systems API.
 */
export interface SupportedOperatingSystems extends Resource {
  /**
   * Properties model for supported OS API.
   */
  properties?: SupportedOSProperties;
}

/**
 * Switch protection input properties.
 */
export interface SwitchProtectionInputProperties {
  /**
   * The unique replication protected item name.
   */
  replicationProtectedItemName?: string;
  /**
   * Provider specific switch protection input.
   */
  providerSpecificDetails?: SwitchProtectionProviderSpecificInputUnion;
}

/**
 * Switch protection input.
 */
export interface SwitchProtectionInput {
  /**
   * Switch protection properties
   */
  properties?: SwitchProtectionInputProperties;
}

/**
 * This class represents details for switch protection job.
 */
export interface SwitchProtectionJobDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "SwitchProtectionJobDetails";
  /**
   * The affected object properties like source server, source cloud, target server, target cloud
   * etc. based on the workflow object details.
   */
  affectedObjectDetails?: { [propertyName: string]: string };
  /**
   * ARM Id of the new replication protected item.
   */
  newReplicationProtectedItemId?: string;
}

/**
 * Represents applicable recovery vm sizes properties.
 */
export interface TargetComputeSizeProperties {
  /**
   * Target compute size name.
   */
  name?: string;
  /**
   * Target compute size display name.
   */
  friendlyName?: string;
  /**
   * The maximum cpu cores count supported by target compute size.
   */
  cpuCoresCount?: number;
  /**
   * The maximum memory in GB supported by target compute size.
   */
  memoryInGB?: number;
  /**
   * The maximum data disks count supported by target compute size.
   */
  maxDataDiskCount?: number;
  /**
   * The maximum Nics count supported by target compute size.
   */
  maxNicsCount?: number;
  /**
   * The reasons why the target compute size is not applicable for the protected item.
   */
  errors?: ComputeSizeErrorDetails[];
  /**
   * The value indicating whether the target compute size supports high Iops.
   */
  highIopsSupported?: string;
}

/**
 * Represents applicable recovery vm sizes.
 */
export interface TargetComputeSize {
  /**
   * The Id.
   */
  id?: string;
  /**
   * The name.
   */
  name?: string;
  /**
   * The Type of the object.
   */
  type?: string;
  /**
   * The custom data.
   */
  properties?: TargetComputeSizeProperties;
}

/**
 * Input definition for test failover cleanup input properties.
 */
export interface TestFailoverCleanupInputProperties {
  /**
   * Test failover cleanup comments.
   */
  comments?: string;
}

/**
 * Input definition for test failover cleanup.
 */
export interface TestFailoverCleanupInput {
  /**
   * Test failover cleanup input properties.
   */
  properties: TestFailoverCleanupInputProperties;
}

/**
 * Input definition for planned failover input properties.
 */
export interface TestFailoverInputProperties {
  /**
   * Failover direction.
   */
  failoverDirection?: string;
  /**
   * Network type to be used for test failover.
   */
  networkType?: string;
  /**
   * The id of the network to be used for test failover
   */
  networkId?: string;
  /**
   * A value indicating whether the test failover cleanup is to be skipped.
   */
  skipTestFailoverCleanup?: string;
  /**
   * Provider specific settings
   */
  providerSpecificDetails?: ProviderSpecificFailoverInputUnion;
}

/**
 * Input definition for planned failover.
 */
export interface TestFailoverInput {
  /**
   * Planned failover input properties
   */
  properties?: TestFailoverInputProperties;
}

/**
 * This class represents the details for a test failover job.
 */
export interface TestFailoverJobDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "TestFailoverJobDetails";
  /**
   * The affected object properties like source server, source cloud, target server, target cloud
   * etc. based on the workflow object details.
   */
  affectedObjectDetails?: { [propertyName: string]: string };
  /**
   * The test failover status.
   */
  testFailoverStatus?: string;
  /**
   * The test failover comments.
   */
  comments?: string;
  /**
   * The test network name.
   */
  networkName?: string;
  /**
   * The test network friendly name.
   */
  networkFriendlyName?: string;
  /**
   * The test network type (see TestFailoverInput enum for possible values).
   */
  networkType?: string;
  /**
   * The test VM details.
   */
  protectedItemDetails?: FailoverReplicationProtectedItemDetails[];
}

/**
 * Test migrate cleanup input properties.
 */
export interface TestMigrateCleanupInputProperties {
  /**
   * Test migrate cleanup comments.
   */
  comments?: string;
}

/**
 * Input for test migrate cleanup.
 */
export interface TestMigrateCleanupInput {
  /**
   * Test migrate cleanup input properties.
   */
  properties: TestMigrateCleanupInputProperties;
}

/**
 * Contains the possible cases for TestMigrateProviderSpecificInput.
 */
export type TestMigrateProviderSpecificInputUnion = TestMigrateProviderSpecificInput | VMwareCbtTestMigrateInput;

/**
 * Test migrate provider specific input.
 */
export interface TestMigrateProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "TestMigrateProviderSpecificInput";
}

/**
 * Test migrate input properties.
 */
export interface TestMigrateInputProperties {
  /**
   * The provider specific details.
   */
  providerSpecificDetails: TestMigrateProviderSpecificInputUnion;
}

/**
 * Input for test migrate.
 */
export interface TestMigrateInput {
  /**
   * Test migrate input properties.
   */
  properties: TestMigrateInputProperties;
}

/**
 * Input definition for planned failover input properties.
 */
export interface UnplannedFailoverInputProperties {
  /**
   * Failover direction.
   */
  failoverDirection?: string;
  /**
   * Source site operations status
   */
  sourceSiteOperations?: string;
  /**
   * Provider specific settings
   */
  providerSpecificDetails?: ProviderSpecificFailoverInputUnion;
}

/**
 * Input definition for planned failover.
 */
export interface UnplannedFailoverInput {
  /**
   * Planned failover input properties
   */
  properties?: UnplannedFailoverInputProperties;
}

/**
 * Contains the possible cases for UpdateMigrationItemProviderSpecificInput.
 */
export type UpdateMigrationItemProviderSpecificInputUnion = UpdateMigrationItemProviderSpecificInput | VMwareCbtUpdateMigrationItemInput;

/**
 * Update migration item provider specific input.
 */
export interface UpdateMigrationItemProviderSpecificInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "UpdateMigrationItemProviderSpecificInput";
}

/**
 * Update migration item input properties.
 */
export interface UpdateMigrationItemInputProperties {
  /**
   * The provider specific input to update migration item.
   */
  providerSpecificDetails: UpdateMigrationItemProviderSpecificInputUnion;
}

/**
 * Update migration item input.
 */
export interface UpdateMigrationItemInput {
  /**
   * Update migration item input properties.
   */
  properties?: UpdateMigrationItemInputProperties;
}

/**
 * The properties of an update mobility service request.
 */
export interface UpdateMobilityServiceRequestProperties {
  /**
   * The CS run as account Id.
   */
  runAsAccountId?: string;
}

/**
 * Request to update the mobility service on a protected item.
 */
export interface UpdateMobilityServiceRequest {
  /**
   * The properties of the update mobility service request.
   */
  properties?: UpdateMobilityServiceRequestProperties;
}

/**
 * Common input details for network mapping operation.
 */
export interface UpdateNetworkMappingInputProperties {
  /**
   * Recovery fabric name.
   */
  recoveryFabricName?: string;
  /**
   * Recovery network Id.
   */
  recoveryNetworkId?: string;
  /**
   * Fabrics specific input network Id.
   */
  fabricSpecificDetails?: FabricSpecificUpdateNetworkMappingInputUnion;
}

/**
 * Update network mapping input.
 */
export interface UpdateNetworkMappingInput {
  /**
   * The input properties needed to update network mapping.
   */
  properties?: UpdateNetworkMappingInputProperties;
}

/**
 * Policy update properties.
 */
export interface UpdatePolicyInputProperties {
  /**
   * The ReplicationProviderSettings.
   */
  replicationProviderSettings?: PolicyProviderSpecificInputUnion;
}

/**
 * Update policy input.
 */
export interface UpdatePolicyInput {
  /**
   * The ReplicationProviderSettings.
   */
  properties?: UpdatePolicyInputProperties;
}

/**
 * Container pairing update input.
 */
export interface UpdateProtectionContainerMappingInputProperties {
  /**
   * Provider specific input for updating protection container mapping.
   */
  providerSpecificInput?: ReplicationProviderSpecificUpdateContainerMappingInputUnion;
}

/**
 * Container pairing update input.
 */
export interface UpdateProtectionContainerMappingInput {
  /**
   * Update protection container mapping input properties.
   */
  properties?: UpdateProtectionContainerMappingInputProperties;
}

/**
 * Recovery plan update properties.
 */
export interface UpdateRecoveryPlanInputProperties {
  /**
   * The recovery plan groups.
   */
  groups?: RecoveryPlanGroup[];
}

/**
 * Update recovery plan input class.
 */
export interface UpdateRecoveryPlanInput {
  /**
   * Recovery plan update properties.
   */
  properties?: UpdateRecoveryPlanInputProperties;
}

/**
 * Hyper V VM network input details.
 */
export interface VMNicInputDetails {
  /**
   * The nic Id.
   */
  nicId?: string;
  /**
   * Recovery VM subnet name.
   */
  recoveryVMSubnetName?: string;
  /**
   * Replica nic static IP address.
   */
  replicaNicStaticIPAddress?: string;
  /**
   * Selection type for failover.
   */
  selectionType?: string;
  /**
   * The id of the public IP address resource associated with the NIC.
   */
  recoveryPublicIpAddressId?: string;
  /**
   * The id of the NSG associated with the NIC.
   */
  recoveryNetworkSecurityGroupId?: string;
  /**
   * The target backend address pools for the NIC.
   */
  recoveryLBBackendAddressPoolIds?: string[];
  /**
   * Whether the NIC has accelerated networking enabled.
   */
  enableAcceleratedNetworkingOnRecovery?: boolean;
  /**
   * The subnet to be used by NIC during test failover.
   */
  tfoVMSubnetName?: string;
  /**
   * The NSG to be used by NIC during test failover.
   */
  tfoNetworkSecurityGroupId?: string;
  /**
   * Whether the test NIC has accelerated networking enabled.
   */
  enableAcceleratedNetworkingOnTfo?: boolean;
  /**
   * The IP configurations to be used by NIC during test failover.
   */
  tfoIPConfigs?: IPConfig[];
}

/**
 * Update protected item input properties.
 */
export interface UpdateReplicationProtectedItemInputProperties {
  /**
   * Target azure VM name given by the user.
   */
  recoveryAzureVMName?: string;
  /**
   * Target Azure Vm size.
   */
  recoveryAzureVMSize?: string;
  /**
   * Target Azure Network Id.
   */
  selectedRecoveryAzureNetworkId?: string;
  /**
   * The Azure Network Id for test failover.
   */
  selectedTfoAzureNetworkId?: string;
  /**
   * The selected source nic Id which will be used as the primary nic during failover.
   */
  selectedSourceNicId?: string;
  /**
   * The selected option to enable RDP\SSH on target vm after failover. String value of
   * {SrsDataContract.EnableRDPOnTargetOption} enum.
   */
  enableRdpOnTargetOption?: string;
  /**
   * The list of vm nic details.
   */
  vmNics?: VMNicInputDetails[];
  /**
   * License type. Possible values include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
   */
  licenseType?: LicenseType;
  /**
   * The target availability set id.
   */
  recoveryAvailabilitySetId?: string;
  /**
   * The provider specific input to update replication protected item.
   */
  providerSpecificDetails?: UpdateReplicationProtectedItemProviderInputUnion;
}

/**
 * Update replication protected item input.
 */
export interface UpdateReplicationProtectedItemInput {
  /**
   * Update replication protected item properties.
   */
  properties?: UpdateReplicationProtectedItemInputProperties;
}

/**
 * The properties of an update vCenter request.
 */
export interface UpdateVCenterRequestProperties {
  /**
   * The friendly name of the vCenter.
   */
  friendlyName?: string;
  /**
   * The IP address of the vCenter to be discovered.
   */
  ipAddress?: string;
  /**
   * The process server Id from where the update can be orchestrated.
   */
  processServerId?: string;
  /**
   * The port number for discovery.
   */
  port?: string;
  /**
   * The CS account Id which has privileges to update the vCenter.
   */
  runAsAccountId?: string;
}

/**
 * Input required to update vCenter.
 */
export interface UpdateVCenterRequest {
  /**
   * The update VCenter Request Properties.
   */
  properties?: UpdateVCenterRequestProperties;
}

/**
 * class to define the health summary of the Vault.
 */
export interface VaultHealthProperties {
  /**
   * The list of errors on the vault.
   */
  vaultErrors?: HealthError[];
  /**
   * The list of the health detail of the protected items in the vault.
   */
  protectedItemsHealth?: ResourceHealthSummary;
  /**
   * The list of the health detail of the fabrics in the vault.
   */
  fabricsHealth?: ResourceHealthSummary;
  /**
   * The list of the health detail of the containers in the vault.
   */
  containersHealth?: ResourceHealthSummary;
}

/**
 * Vault health details definition.
 */
export interface VaultHealthDetails extends Resource {
  /**
   * The vault health related data.
   */
  properties?: VaultHealthProperties;
}

/**
 * Vault setting properties.
 */
export interface VaultSettingProperties {
  /**
   * The migration solution ARM Id.
   */
  migrationSolutionId?: string;
}

/**
 * Vault setting.
 */
export interface VaultSetting extends Resource {
  /**
   * The vault setting properties.
   */
  properties?: VaultSettingProperties;
}

/**
 * Input to create vault setting.
 */
export interface VaultSettingCreationInputProperties {
  /**
   * The migration solution Id.
   */
  migrationSolutionId: string;
}

/**
 * Input to create vault setting.
 */
export interface VaultSettingCreationInput {
  /**
   * Vault setting creation input properties.
   */
  properties: VaultSettingCreationInputProperties;
}

/**
 * vCenter properties.
 */
export interface VCenterProperties {
  /**
   * Friendly name of the vCenter.
   */
  friendlyName?: string;
  /**
   * VCenter internal ID.
   */
  internalId?: string;
  /**
   * The time when the last heartbeat was received by vCenter.
   */
  lastHeartbeat?: Date;
  /**
   * The VCenter discovery status.
   */
  discoveryStatus?: string;
  /**
   * The process server Id.
   */
  processServerId?: string;
  /**
   * The IP address of the vCenter.
   */
  ipAddress?: string;
  /**
   * The infrastructure Id of vCenter.
   */
  infrastructureId?: string;
  /**
   * The port number for discovery.
   */
  port?: string;
  /**
   * The account Id which has privileges to discover the vCenter.
   */
  runAsAccountId?: string;
  /**
   * The ARM resource name of the fabric containing this VCenter.
   */
  fabricArmResourceName?: string;
  /**
   * The health errors for this VCenter.
   */
  healthErrors?: HealthError[];
}

/**
 * vCenter definition.
 */
export interface VCenter extends Resource {
  /**
   * VCenter related data.
   */
  properties?: VCenterProperties;
}

/**
 * This class represents the virtual machine task details.
 */
export interface VirtualMachineTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VirtualMachineTaskDetails";
  /**
   * The skipped reason.
   */
  skippedReason?: string;
  /**
   * The skipped reason string.
   */
  skippedReasonString?: string;
  /**
   * The job entity.
   */
  jobTask?: JobEntity;
}

/**
 * VMM fabric specific details.
 */
export interface VmmDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMM";
}

/**
 * Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
 */
export interface VmmToAzureCreateNetworkMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VmmToAzure";
}

/**
 * E2A Network Mapping fabric specific settings.
 */
export interface VmmToAzureNetworkMappingSettings {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VmmToAzure";
}

/**
 * Update network mappings input properties/behavior specific to vmm to azure.
 */
export interface VmmToAzureUpdateNetworkMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VmmToAzure";
}

/**
 * Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
 */
export interface VmmToVmmCreateNetworkMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VmmToVmm";
}

/**
 * E2E Network Mapping fabric specific settings.
 */
export interface VmmToVmmNetworkMappingSettings {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VmmToVmm";
}

/**
 * Update network mappings input properties/behavior specific to vmm to vmm.
 */
export interface VmmToVmmUpdateNetworkMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VmmToVmm";
}

/**
 * VMM fabric provider specific VM settings.
 */
export interface VmmVirtualMachineDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VmmVirtualMachine";
  /**
   * The source id of the object.
   */
  sourceItemId?: string;
  /**
   * The id of the object in fabric.
   */
  generation?: string;
  /**
   * The Last replication time.
   */
  osDetails?: OSDetails;
  /**
   * The Last successful failover time.
   */
  diskDetails?: DiskDetails[];
  /**
   * A value indicating whether the VM has a physical disk attached. String value of
   * {SrsDataContract.PresenceStatus} enum. Possible values include: 'Unknown', 'Present',
   * 'NotPresent'
   */
  hasPhysicalDisk?: PresenceStatus;
  /**
   * A value indicating whether the VM has a fibre channel adapter attached. String value of
   * {SrsDataContract.PresenceStatus} enum. Possible values include: 'Unknown', 'Present',
   * 'NotPresent'
   */
  hasFibreChannelAdapter?: PresenceStatus;
  /**
   * A value indicating whether the VM has a shared VHD attached. String value of
   * {SrsDataContract.PresenceStatus} enum. Possible values include: 'Unknown', 'Present',
   * 'NotPresent'
   */
  hasSharedVhd?: PresenceStatus;
}

/**
 * This class represents the vm NicUpdates task details.
 */
export interface VmNicUpdatesTaskDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VmNicUpdatesTaskDetails";
  /**
   * Virtual machine Id.
   */
  vmId?: string;
  /**
   * Nic Id.
   */
  nicId?: string;
  /**
   * Name of the Nic.
   */
  name?: string;
}

/**
 * VMwareCbt container creation input.
 */
export interface VMwareCbtContainerCreationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "6c7da455-506f-43ff-a16a-8eb101aebb70";
}

/**
 * VMwareCbt container mapping input.
 */
export interface VMwareCbtContainerMappingInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * The target key vault ARM Id.
   */
  keyVaultId: string;
  /**
   * The target key vault URL.
   */
  keyVaultUri: string;
  /**
   * The storage account ARM Id.
   */
  storageAccountId: string;
  /**
   * The secret name of the storage account.
   */
  storageAccountSasSecretName: string;
  /**
   * The secret name of the service bus connection string.
   */
  serviceBusConnectionStringSecretName: string;
  /**
   * The target location.
   */
  targetLocation: string;
}

/**
 * VMwareCbt disk input.
 */
export interface VMwareCbtDiskInput {
  /**
   * The disk Id.
   */
  diskId: string;
  /**
   * A value indicating whether the disk is the OS disk.
   */
  isOSDisk: string;
  /**
   * The log storage account ARM Id.
   */
  logStorageAccountId: string;
  /**
   * The key vault secret name of the log storage account.
   */
  logStorageAccountSasSecretName: string;
  /**
   * The disk type. Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS'
   */
  diskType?: DiskAccountType;
}

/**
 * VMwareCbt specific enable migration input.
 */
export interface VMwareCbtEnableMigrationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * The ARM Id of the VM discovered in VMware.
   */
  vmwareMachineId: string;
  /**
   * The disks to include list.
   */
  disksToInclude: VMwareCbtDiskInput[];
  /**
   * License type. Possible values include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
   */
  licenseType?: LicenseType;
  /**
   * The data mover RunAs account Id.
   */
  dataMoverRunAsAccountId: string;
  /**
   * The snapshot RunAs account Id.
   */
  snapshotRunAsAccountId: string;
  /**
   * The target VM name.
   */
  targetVmName?: string;
  /**
   * The target VM size.
   */
  targetVmSize?: string;
  /**
   * The target resource group ARM Id.
   */
  targetResourceGroupId: string;
  /**
   * The target network ARM Id.
   */
  targetNetworkId: string;
  /**
   * The target subnet name.
   */
  targetSubnetName?: string;
  /**
   * The target availability set ARM Id.
   */
  targetAvailabilitySetId?: string;
  /**
   * The target boot diagnostics storage account ARM Id.
   */
  targetBootDiagnosticsStorageAccountId?: string;
}

/**
 * VMwareCbt specific migrate input.
 */
export interface VMwareCbtMigrateInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * A value indicating whether VM is to be shutdown.
   */
  performShutdown: string;
}

/**
 * VMwareCbt protected disk details.
 */
export interface VMwareCbtProtectedDiskDetails {
  /**
   * The disk id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskId?: string;
  /**
   * The disk name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskName?: string;
  /**
   * The disk path.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskPath?: string;
  /**
   * A value indicating whether the disk is the OS disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isOSDisk?: string;
  /**
   * The disk capacity in bytes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capacityInBytes?: number;
  /**
   * The log storage account ARM Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly logStorageAccountId?: string;
  /**
   * The key vault secret name of the log storage account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly logStorageAccountSasSecretName?: string;
  /**
   * The ARM Id of the seed managed disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly seedManagedDiskId?: string;
  /**
   * The ARM Id of the target managed disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetManagedDiskId?: string;
  /**
   * The disk type. Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS'
   */
  diskType?: DiskType;
}

/**
 * VMwareCbt NIC details.
 */
export interface VMwareCbtNicDetails {
  /**
   * The NIC Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nicId?: string;
  /**
   * A value indicating whether this is the primary NIC.
   */
  isPrimaryNic?: string;
  /**
   * The source IP address.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceIPAddress?: string;
  /**
   * The source IP address type. Possible values include: 'Dynamic', 'Static'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceIPAddressType?: EthernetAddressType;
  /**
   * Source network Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceNetworkId?: string;
  /**
   * The target IP address.
   */
  targetIPAddress?: string;
  /**
   * The target IP address type. Possible values include: 'Dynamic', 'Static'
   */
  targetIPAddressType?: EthernetAddressType;
  /**
   * Target subnet name.
   */
  targetSubnetName?: string;
  /**
   * A value indicating whether this NIC is selected for migration.
   */
  isSelectedForMigration?: string;
}

/**
 * VMwareCbt provider specific settings
 */
export interface VMwareCbtMigrationDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * The ARM Id of the VM discovered in VMware.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmwareMachineId?: string;
  /**
   * The type of the OS on the VM.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly osType?: string;
  /**
   * License Type of the VM to be used.
   */
  licenseType?: string;
  /**
   * The data mover RunAs account Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dataMoverRunAsAccountId?: string;
  /**
   * The snapshot RunAs account Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly snapshotRunAsAccountId?: string;
  /**
   * Target VM name.
   */
  targetVmName?: string;
  /**
   * The target VM size.
   */
  targetVmSize?: string;
  /**
   * The target location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetLocation?: string;
  /**
   * The target resource group Id.
   */
  targetResourceGroupId?: string;
  /**
   * The target availability set Id.
   */
  targetAvailabilitySetId?: string;
  /**
   * The target boot diagnostics storage account ARM Id.
   */
  targetBootDiagnosticsStorageAccountId?: string;
  /**
   * The list of protected disks.
   */
  protectedDisks?: VMwareCbtProtectedDiskDetails[];
  /**
   * The target network Id.
   */
  targetNetworkId?: string;
  /**
   * The network details.
   */
  vmNics?: VMwareCbtNicDetails[];
  /**
   * The recovery point Id to which the VM was migrated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly migrationRecoveryPointId?: string;
  /**
   * The last recovery point received time.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastRecoveryPointReceived?: Date;
}

/**
 * VMwareCbt NIC input.
 */
export interface VMwareCbtNicInput {
  /**
   * The NIC Id.
   */
  nicId: string;
  /**
   * A value indicating whether this is the primary NIC.
   */
  isPrimaryNic: string;
  /**
   * Target subnet name.
   */
  targetSubnetName?: string;
  /**
   * The static IP address.
   */
  targetStaticIPAddress?: string;
  /**
   * A value indicating whether this NIC is selected for migration.
   */
  isSelectedForMigration?: string;
}

/**
 * VMware Cbt policy creation input.
 */
export interface VMwareCbtPolicyCreationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistoryInMinutes?: number;
  /**
   * The crash consistent snapshot frequency (in minutes).
   */
  crashConsistentFrequencyInMinutes?: number;
  /**
   * The app consistent snapshot frequency (in minutes).
   */
  appConsistentFrequencyInMinutes?: number;
}

/**
 * VMware Cbt specific policy details.
 */
export interface VmwareCbtPolicyDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * The duration in minutes until which the recovery points need to be stored.
   */
  recoveryPointHistoryInMinutes?: number;
  /**
   * The app consistent snapshot frequency in minutes.
   */
  appConsistentFrequencyInMinutes?: number;
  /**
   * The crash consistent snapshot frequency in minutes.
   */
  crashConsistentFrequencyInMinutes?: number;
}

/**
 * VMwareCbt provider specific container mapping details.
 */
export interface VMwareCbtProtectionContainerMappingDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * The target key vault ARM Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyVaultId?: string;
  /**
   * The target key vault URI.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyVaultUri?: string;
  /**
   * The storage account ARM Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageAccountId?: string;
  /**
   * The secret name of the storage account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageAccountSasSecretName?: string;
  /**
   * The secret name of the service bus connection string.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceBusConnectionStringSecretName?: string;
  /**
   * The target location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetLocation?: string;
}

/**
 * VMwareCbt specific test migrate input.
 */
export interface VMwareCbtTestMigrateInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * The recovery point Id.
   */
  recoveryPointId: string;
  /**
   * The test network Id.
   */
  networkId: string;
}

/**
 * VMwareCbt specific update migration item input.
 */
export interface VMwareCbtUpdateMigrationItemInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareCbt";
  /**
   * The target VM name.
   */
  targetVmName?: string;
  /**
   * The target VM size.
   */
  targetVmSize?: string;
  /**
   * The target resource group ARM Id.
   */
  targetResourceGroupId?: string;
  /**
   * The target availability set ARM Id.
   */
  targetAvailabilitySetId?: string;
  /**
   * The target boot diagnostics storage account ARM Id.
   */
  targetBootDiagnosticsStorageAccountId?: string;
  /**
   * The target network ARM Id.
   */
  targetNetworkId?: string;
  /**
   * The list of NIC details.
   */
  vmNics?: VMwareCbtNicInput[];
  /**
   * The license type. Possible values include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
   */
  licenseType?: LicenseType;
}

/**
 * Store the fabric details specific to the VMware fabric.
 */
export interface VMwareDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMware";
  /**
   * The list of Process Servers associated with the fabric.
   */
  processServers?: ProcessServer[];
  /**
   * The list of Master Target servers associated with the fabric.
   */
  masterTargetServers?: MasterTargetServer[];
  /**
   * The list of run as accounts created on the server.
   */
  runAsAccounts?: RunAsAccount[];
  /**
   * The number of replication pairs configured in this CS.
   */
  replicationPairCount?: string;
  /**
   * The number of process servers.
   */
  processServerCount?: string;
  /**
   * The number of source and target servers configured to talk to this CS.
   */
  agentCount?: string;
  /**
   * The number of protected servers.
   */
  protectedServers?: string;
  /**
   * The percentage of the system load.
   */
  systemLoad?: string;
  /**
   * The system load status.
   */
  systemLoadStatus?: string;
  /**
   * The percentage of the CPU load.
   */
  cpuLoad?: string;
  /**
   * The CPU load status.
   */
  cpuLoadStatus?: string;
  /**
   * The total memory.
   */
  totalMemoryInBytes?: number;
  /**
   * The available memory.
   */
  availableMemoryInBytes?: number;
  /**
   * The memory usage status.
   */
  memoryUsageStatus?: string;
  /**
   * The total space.
   */
  totalSpaceInBytes?: number;
  /**
   * The available space.
   */
  availableSpaceInBytes?: number;
  /**
   * The space usage status.
   */
  spaceUsageStatus?: string;
  /**
   * The web load.
   */
  webLoad?: string;
  /**
   * The web load status.
   */
  webLoadStatus?: string;
  /**
   * The database server load.
   */
  databaseServerLoad?: string;
  /**
   * The database server load status.
   */
  databaseServerLoadStatus?: string;
  /**
   * The CS service status.
   */
  csServiceStatus?: string;
  /**
   * The IP address.
   */
  ipAddress?: string;
  /**
   * The agent Version.
   */
  agentVersion?: string;
  /**
   * The host name.
   */
  hostName?: string;
  /**
   * The last heartbeat received from CS server.
   */
  lastHeartbeat?: Date;
  /**
   * Version status
   */
  versionStatus?: string;
  /**
   * CS SSL cert expiry date.
   */
  sslCertExpiryDate?: Date;
  /**
   * CS SSL cert expiry date.
   */
  sslCertExpiryRemainingDays?: number;
  /**
   * PS template version.
   */
  psTemplateVersion?: string;
  /**
   * Agent expiry date.
   */
  agentExpiryDate?: Date;
  /**
   * The agent version details.
   */
  agentVersionDetails?: VersionDetails;
}

/**
 * VMwareV2 fabric provider specific settings.
 */
export interface VMwareV2FabricCreationInput {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareV2";
  /**
   * The ARM Id of the VMware site.
   */
  vmwareSiteId: string;
  /**
   * The ARM Id of the migration solution.
   */
  migrationSolutionId: string;
}

/**
 * VMwareV2 fabric specific details.
 */
export interface VMwareV2FabricSpecificDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareV2";
  /**
   * The ARM Id of the VMware site.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmwareSiteId?: string;
  /**
   * The Migration solution ARM Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly migrationSolutionId?: string;
  /**
   * The service endpoint.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceEndpoint?: string;
  /**
   * The service resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceResourceId?: string;
}

/**
 * VMware provider specific settings
 */
export interface VMwareVirtualMachineDetails {
  /**
   * Polymorphic Discriminator
   */
  instanceType: "VMwareVirtualMachine";
  /**
   * The ID generated by the InMage agent after it gets installed on guest. This is the ID to be
   * used during InMage CreateProtection.
   */
  agentGeneratedId?: string;
  /**
   * The value indicating if InMage scout agent is installed on guest.
   */
  agentInstalled?: string;
  /**
   * The OsType installed on VM.
   */
  osType?: string;
  /**
   * The agent version.
   */
  agentVersion?: string;
  /**
   * The IP address.
   */
  ipAddress?: string;
  /**
   * The value indicating whether VM is powered on.
   */
  poweredOn?: string;
  /**
   * The VCenter infrastructure Id.
   */
  vCenterInfrastructureId?: string;
  /**
   * A value indicating the discovery type of the machine. Value can be vCenter or physical.
   */
  discoveryType?: string;
  /**
   * The disk details.
   */
  diskDetails?: InMageDiskDetails[];
  /**
   * The validation errors.
   */
  validationErrors?: HealthError[];
}

/**
 * Optional Parameters.
 */
export interface ReplicationEventsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ReplicationMigrationItemsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The delete option.
   */
  deleteOption?: string;
}

/**
 * Optional Parameters.
 */
export interface ReplicationMigrationItemsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The pagination token.
   */
  skipToken?: string;
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ReplicationMigrationItemsBeginDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The delete option.
   */
  deleteOption?: string;
}

/**
 * Optional Parameters.
 */
export interface ReplicationProtectableItemsListByReplicationProtectionContainersOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ReplicationProtectedItemsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The pagination token. Possible values: "FabricId" or "FabricId_CloudId" or null
   */
  skipToken?: string;
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ReplicationJobsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * OData filter options.
   */
  filter?: string;
}

/**
 * An interface representing SiteRecoveryManagementClientOptions.
 */
export interface SiteRecoveryManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Collection of ClientDiscovery details.
 * @extends Array<OperationsDiscovery>
 */
export interface OperationsDiscoveryCollection extends Array<OperationsDiscovery> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of alerts.
 * @extends Array<Alert>
 */
export interface AlertCollection extends Array<Alert> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of fabric details.
 * @extends Array<Event>
 */
export interface EventCollection extends Array<Event> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of fabric details.
 * @extends Array<Fabric>
 */
export interface FabricCollection extends Array<Fabric> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of logical networks.
 * @extends Array<LogicalNetwork>
 */
export interface LogicalNetworkCollection extends Array<LogicalNetwork> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of networks.
 * @extends Array<Network>
 */
export interface NetworkCollection extends Array<Network> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of network mappings. As with NetworkMapping, it should be possible to reuse a prev version
 * of this class. It doesn't seem likely this class could be anything more than a slightly bespoke
 * collection of NetworkMapping. Hence it makes sense to override Load with Base.NetworkMapping
 * instead of existing CurrentVersion.NetworkMapping.
 * @extends Array<NetworkMapping>
 */
export interface NetworkMappingCollection extends Array<NetworkMapping> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Protection Container collection.
 * @extends Array<ProtectionContainer>
 */
export interface ProtectionContainerCollection extends Array<ProtectionContainer> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Migration item collection.
 * @extends Array<MigrationItem>
 */
export interface MigrationItemCollection extends Array<MigrationItem> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of migration recovery points.
 * @extends Array<MigrationRecoveryPoint>
 */
export interface MigrationRecoveryPointCollection extends Array<MigrationRecoveryPoint> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Protectable item collection.
 * @extends Array<ProtectableItem>
 */
export interface ProtectableItemCollection extends Array<ProtectableItem> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Replication protected item collection.
 * @extends Array<ReplicationProtectedItem>
 */
export interface ReplicationProtectedItemCollection extends Array<ReplicationProtectedItem> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of recovery point details.
 * @extends Array<RecoveryPoint>
 */
export interface RecoveryPointCollection extends Array<RecoveryPoint> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Target compute size collection.
 * @extends Array<TargetComputeSize>
 */
export interface TargetComputeSizeCollection extends Array<TargetComputeSize> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Protection container mapping collection class.
 * @extends Array<ProtectionContainerMapping>
 */
export interface ProtectionContainerMappingCollection extends Array<ProtectionContainerMapping> {
  /**
   * Link to fetch rest of the data.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of providers.
 * @extends Array<RecoveryServicesProvider>
 */
export interface RecoveryServicesProviderCollection extends Array<RecoveryServicesProvider> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of storage details.
 * @extends Array<StorageClassification>
 */
export interface StorageClassificationCollection extends Array<StorageClassification> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of storage mapping details.
 * @extends Array<StorageClassificationMapping>
 */
export interface StorageClassificationMappingCollection extends Array<StorageClassificationMapping> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of vCenter details.
 * @extends Array<VCenter>
 */
export interface VCenterCollection extends Array<VCenter> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Collection of jobs.
 * @extends Array<Job>
 */
export interface JobCollection extends Array<Job> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Protection Profile Collection details.
 * @extends Array<Policy>
 */
export interface PolicyCollection extends Array<Policy> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Recovery plan collection details.
 * @extends Array<RecoveryPlan>
 */
export interface RecoveryPlanCollection extends Array<RecoveryPlan> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * @interface
 * Vault setting collection.
 * @extends Array<VaultSetting>
 */
export interface VaultSettingCollection extends Array<VaultSetting> {
  /**
   * The value of next link.
   */
  nextLink?: string;
}

/**
 * Defines values for AgentAutoUpdateStatus.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type AgentAutoUpdateStatus = 'Disabled' | 'Enabled';

/**
 * Defines values for SetMultiVmSyncStatus.
 * Possible values include: 'Enable', 'Disable'
 * @readonly
 * @enum {string}
 */
export type SetMultiVmSyncStatus = 'Enable' | 'Disable';

/**
 * Defines values for RecoveryPointSyncType.
 * Possible values include: 'MultiVmSyncRecoveryPoint', 'PerVmRecoveryPoint'
 * @readonly
 * @enum {string}
 */
export type RecoveryPointSyncType = 'MultiVmSyncRecoveryPoint' | 'PerVmRecoveryPoint';

/**
 * Defines values for MultiVmGroupCreateOption.
 * Possible values include: 'AutoCreated', 'UserSpecified'
 * @readonly
 * @enum {string}
 */
export type MultiVmGroupCreateOption = 'AutoCreated' | 'UserSpecified';

/**
 * Defines values for VmEncryptionType.
 * Possible values include: 'NotEncrypted', 'OnePassEncrypted', 'TwoPassEncrypted'
 * @readonly
 * @enum {string}
 */
export type VmEncryptionType = 'NotEncrypted' | 'OnePassEncrypted' | 'TwoPassEncrypted';

/**
 * Defines values for FailoverDeploymentModel.
 * Possible values include: 'NotApplicable', 'Classic', 'ResourceManager'
 * @readonly
 * @enum {string}
 */
export type FailoverDeploymentModel = 'NotApplicable' | 'Classic' | 'ResourceManager';

/**
 * Defines values for RecoveryPlanGroupType.
 * Possible values include: 'Shutdown', 'Boot', 'Failover'
 * @readonly
 * @enum {string}
 */
export type RecoveryPlanGroupType = 'Shutdown' | 'Boot' | 'Failover';

/**
 * Defines values for ReplicationProtectedItemOperation.
 * Possible values include: 'ReverseReplicate', 'Commit', 'PlannedFailover', 'UnplannedFailover',
 * 'DisableProtection', 'TestFailover', 'TestFailoverCleanup', 'Failback', 'FinalizeFailback',
 * 'ChangePit', 'RepairReplication', 'SwitchProtection', 'CompleteMigration'
 * @readonly
 * @enum {string}
 */
export type ReplicationProtectedItemOperation = 'ReverseReplicate' | 'Commit' | 'PlannedFailover' | 'UnplannedFailover' | 'DisableProtection' | 'TestFailover' | 'TestFailoverCleanup' | 'Failback' | 'FinalizeFailback' | 'ChangePit' | 'RepairReplication' | 'SwitchProtection' | 'CompleteMigration';

/**
 * Defines values for PossibleOperationsDirections.
 * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
 * @readonly
 * @enum {string}
 */
export type PossibleOperationsDirections = 'PrimaryToRecovery' | 'RecoveryToPrimary';

/**
 * Defines values for DisableProtectionReason.
 * Possible values include: 'NotSpecified', 'MigrationComplete'
 * @readonly
 * @enum {string}
 */
export type DisableProtectionReason = 'NotSpecified' | 'MigrationComplete';

/**
 * Defines values for HealthErrorCustomerResolvability.
 * Possible values include: 'Allowed', 'NotAllowed'
 * @readonly
 * @enum {string}
 */
export type HealthErrorCustomerResolvability = 'Allowed' | 'NotAllowed';

/**
 * Defines values for HealthErrorCategory.
 * Possible values include: 'None', 'Replication', 'TestFailover', 'Configuration',
 * 'FabricInfrastructure', 'VersionExpiry', 'AgentAutoUpdate'
 * @readonly
 * @enum {string}
 */
export type HealthErrorCategory = 'None' | 'Replication' | 'TestFailover' | 'Configuration' | 'FabricInfrastructure' | 'VersionExpiry' | 'AgentAutoUpdate';

/**
 * Defines values for Severity.
 * Possible values include: 'NONE', 'Warning', 'Error', 'Info'
 * @readonly
 * @enum {string}
 */
export type Severity = 'NONE' | 'Warning' | 'Error' | 'Info';

/**
 * Defines values for PresenceStatus.
 * Possible values include: 'Unknown', 'Present', 'NotPresent'
 * @readonly
 * @enum {string}
 */
export type PresenceStatus = 'Unknown' | 'Present' | 'NotPresent';

/**
 * Defines values for AgentVersionStatus.
 * Possible values include: 'Supported', 'NotSupported', 'Deprecated', 'UpdateRequired',
 * 'SecurityUpdateRequired'
 * @readonly
 * @enum {string}
 */
export type AgentVersionStatus = 'Supported' | 'NotSupported' | 'Deprecated' | 'UpdateRequired' | 'SecurityUpdateRequired';

/**
 * Defines values for DiskAccountType.
 * Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS'
 * @readonly
 * @enum {string}
 */
export type DiskAccountType = 'Standard_LRS' | 'Premium_LRS' | 'StandardSSD_LRS';

/**
 * Defines values for RecoveryPointType.
 * Possible values include: 'LatestTime', 'LatestTag', 'Custom'
 * @readonly
 * @enum {string}
 */
export type RecoveryPointType = 'LatestTime' | 'LatestTag' | 'Custom';

/**
 * Defines values for MigrationState.
 * Possible values include: 'None', 'EnableMigrationInProgress', 'EnableMigrationFailed',
 * 'DisableMigrationInProgress', 'DisableMigrationFailed', 'InitialSeedingInProgress',
 * 'InitialSeedingFailed', 'Replicating', 'MigrationInProgress', 'MigrationSucceeded',
 * 'MigrationFailed'
 * @readonly
 * @enum {string}
 */
export type MigrationState = 'None' | 'EnableMigrationInProgress' | 'EnableMigrationFailed' | 'DisableMigrationInProgress' | 'DisableMigrationFailed' | 'InitialSeedingInProgress' | 'InitialSeedingFailed' | 'Replicating' | 'MigrationInProgress' | 'MigrationSucceeded' | 'MigrationFailed';

/**
 * Defines values for TestMigrationState.
 * Possible values include: 'None', 'TestMigrationInProgress', 'TestMigrationSucceeded',
 * 'TestMigrationFailed', 'TestMigrationCleanupInProgress'
 * @readonly
 * @enum {string}
 */
export type TestMigrationState = 'None' | 'TestMigrationInProgress' | 'TestMigrationSucceeded' | 'TestMigrationFailed' | 'TestMigrationCleanupInProgress';

/**
 * Defines values for MigrationItemOperation.
 * Possible values include: 'DisableMigration', 'TestMigrate', 'TestMigrateCleanup', 'Migrate'
 * @readonly
 * @enum {string}
 */
export type MigrationItemOperation = 'DisableMigration' | 'TestMigrate' | 'TestMigrateCleanup' | 'Migrate';

/**
 * Defines values for MigrationRecoveryPointType.
 * Possible values include: 'NotSpecified', 'ApplicationConsistent', 'CrashConsistent'
 * @readonly
 * @enum {string}
 */
export type MigrationRecoveryPointType = 'NotSpecified' | 'ApplicationConsistent' | 'CrashConsistent';

/**
 * Defines values for MultiVmSyncStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type MultiVmSyncStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for A2ARpRecoveryPointType.
 * Possible values include: 'Latest', 'LatestApplicationConsistent', 'LatestCrashConsistent',
 * 'LatestProcessed'
 * @readonly
 * @enum {string}
 */
export type A2ARpRecoveryPointType = 'Latest' | 'LatestApplicationConsistent' | 'LatestCrashConsistent' | 'LatestProcessed';

/**
 * Defines values for MultiVmSyncPointOption.
 * Possible values include: 'UseMultiVmSyncRecoveryPoint', 'UsePerVmRecoveryPoint'
 * @readonly
 * @enum {string}
 */
export type MultiVmSyncPointOption = 'UseMultiVmSyncRecoveryPoint' | 'UsePerVmRecoveryPoint';

/**
 * Defines values for RecoveryPlanActionLocation.
 * Possible values include: 'Primary', 'Recovery'
 * @readonly
 * @enum {string}
 */
export type RecoveryPlanActionLocation = 'Primary' | 'Recovery';

/**
 * Defines values for DataSyncStatus.
 * Possible values include: 'ForDownTime', 'ForSynchronization'
 * @readonly
 * @enum {string}
 */
export type DataSyncStatus = 'ForDownTime' | 'ForSynchronization';

/**
 * Defines values for AlternateLocationRecoveryOption.
 * Possible values include: 'CreateVmIfNotFound', 'NoAction'
 * @readonly
 * @enum {string}
 */
export type AlternateLocationRecoveryOption = 'CreateVmIfNotFound' | 'NoAction';

/**
 * Defines values for HyperVReplicaAzureRpRecoveryPointType.
 * Possible values include: 'Latest', 'LatestApplicationConsistent', 'LatestProcessed'
 * @readonly
 * @enum {string}
 */
export type HyperVReplicaAzureRpRecoveryPointType = 'Latest' | 'LatestApplicationConsistent' | 'LatestProcessed';

/**
 * Defines values for InMageV2RpRecoveryPointType.
 * Possible values include: 'Latest', 'LatestApplicationConsistent', 'LatestCrashConsistent',
 * 'LatestProcessed'
 * @readonly
 * @enum {string}
 */
export type InMageV2RpRecoveryPointType = 'Latest' | 'LatestApplicationConsistent' | 'LatestCrashConsistent' | 'LatestProcessed';

/**
 * Defines values for RpInMageRecoveryPointType.
 * Possible values include: 'LatestTime', 'LatestTag', 'Custom'
 * @readonly
 * @enum {string}
 */
export type RpInMageRecoveryPointType = 'LatestTime' | 'LatestTag' | 'Custom';

/**
 * Defines values for SourceSiteOperations.
 * Possible values include: 'Required', 'NotRequired'
 * @readonly
 * @enum {string}
 */
export type SourceSiteOperations = 'Required' | 'NotRequired';

/**
 * Defines values for LicenseType.
 * Possible values include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
 * @readonly
 * @enum {string}
 */
export type LicenseType = 'NotSpecified' | 'NoLicenseType' | 'WindowsServer';

/**
 * Defines values for DiskType.
 * Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS'
 * @readonly
 * @enum {string}
 */
export type DiskType = 'Standard_LRS' | 'Premium_LRS' | 'StandardSSD_LRS';

/**
 * Defines values for EthernetAddressType.
 * Possible values include: 'Dynamic', 'Static'
 * @readonly
 * @enum {string}
 */
export type EthernetAddressType = 'Dynamic' | 'Static';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsDiscoveryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsDiscoveryCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationsDiscoveryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsDiscoveryCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationAlertSettingsListResponse = AlertCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationAlertSettingsGetResponse = Alert & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Alert;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationAlertSettingsCreateResponse = Alert & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Alert;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationAlertSettingsListNextResponse = AlertCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationEligibilityResultsListResponse = ReplicationEligibilityResultsCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationEligibilityResultsCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationEligibilityResultsGetResponse = ReplicationEligibilityResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationEligibilityResults;
    };
};

/**
 * Contains response data for the beginList operation.
 */
export type ReplicationEligibilityResultsBeginListResponse = ReplicationEligibilityResultsCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationEligibilityResultsCollection;
    };
};

/**
 * Contains response data for the beginGet operation.
 */
export type ReplicationEligibilityResultsBeginGetResponse = ReplicationEligibilityResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationEligibilityResults;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationEventsListResponse = EventCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationEventsGetResponse = Event & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Event;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationEventsListNextResponse = EventCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationFabricsListResponse = FabricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FabricCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationFabricsGetResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationFabricsCreateResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the checkConsistency operation.
 */
export type ReplicationFabricsCheckConsistencyResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the reassociateGateway operation.
 */
export type ReplicationFabricsReassociateGatewayResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the renewCertificate operation.
 */
export type ReplicationFabricsRenewCertificateResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationFabricsBeginCreateResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the beginCheckConsistency operation.
 */
export type ReplicationFabricsBeginCheckConsistencyResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the beginReassociateGateway operation.
 */
export type ReplicationFabricsBeginReassociateGatewayResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the beginRenewCertificate operation.
 */
export type ReplicationFabricsBeginRenewCertificateResponse = Fabric & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Fabric;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationFabricsListNextResponse = FabricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FabricCollection;
    };
};

/**
 * Contains response data for the listByReplicationFabrics operation.
 */
export type ReplicationLogicalNetworksListByReplicationFabricsResponse = LogicalNetworkCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogicalNetworkCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationLogicalNetworksGetResponse = LogicalNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogicalNetwork;
    };
};

/**
 * Contains response data for the listByReplicationFabricsNext operation.
 */
export type ReplicationLogicalNetworksListByReplicationFabricsNextResponse = LogicalNetworkCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogicalNetworkCollection;
    };
};

/**
 * Contains response data for the listByReplicationFabrics operation.
 */
export type ReplicationNetworksListByReplicationFabricsResponse = NetworkCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationNetworksGetResponse = Network & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Network;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationNetworksListResponse = NetworkCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkCollection;
    };
};

/**
 * Contains response data for the listByReplicationFabricsNext operation.
 */
export type ReplicationNetworksListByReplicationFabricsNextResponse = NetworkCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationNetworksListNextResponse = NetworkCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkCollection;
    };
};

/**
 * Contains response data for the listByReplicationNetworks operation.
 */
export type ReplicationNetworkMappingsListByReplicationNetworksResponse = NetworkMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMappingCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationNetworkMappingsGetResponse = NetworkMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMapping;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationNetworkMappingsCreateResponse = NetworkMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMapping;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReplicationNetworkMappingsUpdateResponse = NetworkMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMapping;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationNetworkMappingsListResponse = NetworkMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMappingCollection;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationNetworkMappingsBeginCreateResponse = NetworkMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMapping;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ReplicationNetworkMappingsBeginUpdateResponse = NetworkMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMapping;
    };
};

/**
 * Contains response data for the listByReplicationNetworksNext operation.
 */
export type ReplicationNetworkMappingsListByReplicationNetworksNextResponse = NetworkMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMappingCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationNetworkMappingsListNextResponse = NetworkMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkMappingCollection;
    };
};

/**
 * Contains response data for the listByReplicationFabrics operation.
 */
export type ReplicationProtectionContainersListByReplicationFabricsResponse = ProtectionContainerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationProtectionContainersGetResponse = ProtectionContainer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainer;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationProtectionContainersCreateResponse = ProtectionContainer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainer;
    };
};

/**
 * Contains response data for the discoverProtectableItem operation.
 */
export type ReplicationProtectionContainersDiscoverProtectableItemResponse = ProtectionContainer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainer;
    };
};

/**
 * Contains response data for the switchProtection operation.
 */
export type ReplicationProtectionContainersSwitchProtectionResponse = ProtectionContainer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainer;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationProtectionContainersListResponse = ProtectionContainerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerCollection;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationProtectionContainersBeginCreateResponse = ProtectionContainer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainer;
    };
};

/**
 * Contains response data for the beginDiscoverProtectableItem operation.
 */
export type ReplicationProtectionContainersBeginDiscoverProtectableItemResponse = ProtectionContainer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainer;
    };
};

/**
 * Contains response data for the beginSwitchProtection operation.
 */
export type ReplicationProtectionContainersBeginSwitchProtectionResponse = ProtectionContainer & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainer;
    };
};

/**
 * Contains response data for the listByReplicationFabricsNext operation.
 */
export type ReplicationProtectionContainersListByReplicationFabricsNextResponse = ProtectionContainerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationProtectionContainersListNextResponse = ProtectionContainerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerCollection;
    };
};

/**
 * Contains response data for the listByReplicationProtectionContainers operation.
 */
export type ReplicationMigrationItemsListByReplicationProtectionContainersResponse = MigrationItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItemCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationMigrationItemsGetResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationMigrationItemsCreateResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReplicationMigrationItemsUpdateResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the migrate operation.
 */
export type ReplicationMigrationItemsMigrateResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the testMigrate operation.
 */
export type ReplicationMigrationItemsTestMigrateResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the testMigrateCleanup operation.
 */
export type ReplicationMigrationItemsTestMigrateCleanupResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationMigrationItemsListResponse = MigrationItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItemCollection;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationMigrationItemsBeginCreateResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ReplicationMigrationItemsBeginUpdateResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the beginMigrate operation.
 */
export type ReplicationMigrationItemsBeginMigrateResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the beginTestMigrate operation.
 */
export type ReplicationMigrationItemsBeginTestMigrateResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the beginTestMigrateCleanup operation.
 */
export type ReplicationMigrationItemsBeginTestMigrateCleanupResponse = MigrationItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItem;
    };
};

/**
 * Contains response data for the listByReplicationProtectionContainersNext operation.
 */
export type ReplicationMigrationItemsListByReplicationProtectionContainersNextResponse = MigrationItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItemCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationMigrationItemsListNextResponse = MigrationItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationItemCollection;
    };
};

/**
 * Contains response data for the listByReplicationMigrationItems operation.
 */
export type MigrationRecoveryPointsListByReplicationMigrationItemsResponse = MigrationRecoveryPointCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationRecoveryPointCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MigrationRecoveryPointsGetResponse = MigrationRecoveryPoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationRecoveryPoint;
    };
};

/**
 * Contains response data for the listByReplicationMigrationItemsNext operation.
 */
export type MigrationRecoveryPointsListByReplicationMigrationItemsNextResponse = MigrationRecoveryPointCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationRecoveryPointCollection;
    };
};

/**
 * Contains response data for the listByReplicationProtectionContainers operation.
 */
export type ReplicationProtectableItemsListByReplicationProtectionContainersResponse = ProtectableItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectableItemCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationProtectableItemsGetResponse = ProtectableItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectableItem;
    };
};

/**
 * Contains response data for the listByReplicationProtectionContainersNext operation.
 */
export type ReplicationProtectableItemsListByReplicationProtectionContainersNextResponse = ProtectableItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectableItemCollection;
    };
};

/**
 * Contains response data for the listByReplicationProtectionContainers operation.
 */
export type ReplicationProtectedItemsListByReplicationProtectionContainersResponse = ReplicationProtectedItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItemCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationProtectedItemsGetResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationProtectedItemsCreateResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReplicationProtectedItemsUpdateResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the addDisks operation.
 */
export type ReplicationProtectedItemsAddDisksResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the applyRecoveryPoint operation.
 */
export type ReplicationProtectedItemsApplyRecoveryPointResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the failoverCommit operation.
 */
export type ReplicationProtectedItemsFailoverCommitResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the plannedFailover operation.
 */
export type ReplicationProtectedItemsPlannedFailoverResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the removeDisks operation.
 */
export type ReplicationProtectedItemsRemoveDisksResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the repairReplication operation.
 */
export type ReplicationProtectedItemsRepairReplicationResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the reprotect operation.
 */
export type ReplicationProtectedItemsReprotectResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the resolveHealthErrors operation.
 */
export type ReplicationProtectedItemsResolveHealthErrorsResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the testFailover operation.
 */
export type ReplicationProtectedItemsTestFailoverResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the testFailoverCleanup operation.
 */
export type ReplicationProtectedItemsTestFailoverCleanupResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the unplannedFailover operation.
 */
export type ReplicationProtectedItemsUnplannedFailoverResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the updateMobilityService operation.
 */
export type ReplicationProtectedItemsUpdateMobilityServiceResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationProtectedItemsListResponse = ReplicationProtectedItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItemCollection;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationProtectedItemsBeginCreateResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ReplicationProtectedItemsBeginUpdateResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginAddDisks operation.
 */
export type ReplicationProtectedItemsBeginAddDisksResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginApplyRecoveryPoint operation.
 */
export type ReplicationProtectedItemsBeginApplyRecoveryPointResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginFailoverCommit operation.
 */
export type ReplicationProtectedItemsBeginFailoverCommitResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginPlannedFailover operation.
 */
export type ReplicationProtectedItemsBeginPlannedFailoverResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginRemoveDisks operation.
 */
export type ReplicationProtectedItemsBeginRemoveDisksResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginRepairReplication operation.
 */
export type ReplicationProtectedItemsBeginRepairReplicationResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginReprotect operation.
 */
export type ReplicationProtectedItemsBeginReprotectResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginResolveHealthErrors operation.
 */
export type ReplicationProtectedItemsBeginResolveHealthErrorsResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginTestFailover operation.
 */
export type ReplicationProtectedItemsBeginTestFailoverResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginTestFailoverCleanup operation.
 */
export type ReplicationProtectedItemsBeginTestFailoverCleanupResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginUnplannedFailover operation.
 */
export type ReplicationProtectedItemsBeginUnplannedFailoverResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the beginUpdateMobilityService operation.
 */
export type ReplicationProtectedItemsBeginUpdateMobilityServiceResponse = ReplicationProtectedItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItem;
    };
};

/**
 * Contains response data for the listByReplicationProtectionContainersNext operation.
 */
export type ReplicationProtectedItemsListByReplicationProtectionContainersNextResponse = ReplicationProtectedItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItemCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationProtectedItemsListNextResponse = ReplicationProtectedItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationProtectedItemCollection;
    };
};

/**
 * Contains response data for the listByReplicationProtectedItems operation.
 */
export type RecoveryPointsListByReplicationProtectedItemsResponse = RecoveryPointCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPointCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecoveryPointsGetResponse = RecoveryPoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPoint;
    };
};

/**
 * Contains response data for the listByReplicationProtectedItemsNext operation.
 */
export type RecoveryPointsListByReplicationProtectedItemsNextResponse = RecoveryPointCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPointCollection;
    };
};

/**
 * Contains response data for the listByReplicationProtectedItems operation.
 */
export type TargetComputeSizesListByReplicationProtectedItemsResponse = TargetComputeSizeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TargetComputeSizeCollection;
    };
};

/**
 * Contains response data for the listByReplicationProtectedItemsNext operation.
 */
export type TargetComputeSizesListByReplicationProtectedItemsNextResponse = TargetComputeSizeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TargetComputeSizeCollection;
    };
};

/**
 * Contains response data for the listByReplicationProtectionContainers operation.
 */
export type ReplicationProtectionContainerMappingsListByReplicationProtectionContainersResponse = ProtectionContainerMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMappingCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationProtectionContainerMappingsGetResponse = ProtectionContainerMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMapping;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationProtectionContainerMappingsCreateResponse = ProtectionContainerMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMapping;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReplicationProtectionContainerMappingsUpdateResponse = ProtectionContainerMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMapping;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationProtectionContainerMappingsListResponse = ProtectionContainerMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMappingCollection;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationProtectionContainerMappingsBeginCreateResponse = ProtectionContainerMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMapping;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ReplicationProtectionContainerMappingsBeginUpdateResponse = ProtectionContainerMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMapping;
    };
};

/**
 * Contains response data for the listByReplicationProtectionContainersNext operation.
 */
export type ReplicationProtectionContainerMappingsListByReplicationProtectionContainersNextResponse = ProtectionContainerMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMappingCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationProtectionContainerMappingsListNextResponse = ProtectionContainerMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProtectionContainerMappingCollection;
    };
};

/**
 * Contains response data for the listByReplicationFabrics operation.
 */
export type ReplicationRecoveryServicesProvidersListByReplicationFabricsResponse = RecoveryServicesProviderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProviderCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationRecoveryServicesProvidersGetResponse = RecoveryServicesProvider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProvider;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationRecoveryServicesProvidersCreateResponse = RecoveryServicesProvider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProvider;
    };
};

/**
 * Contains response data for the refreshProvider operation.
 */
export type ReplicationRecoveryServicesProvidersRefreshProviderResponse = RecoveryServicesProvider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProvider;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationRecoveryServicesProvidersListResponse = RecoveryServicesProviderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProviderCollection;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationRecoveryServicesProvidersBeginCreateResponse = RecoveryServicesProvider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProvider;
    };
};

/**
 * Contains response data for the beginRefreshProvider operation.
 */
export type ReplicationRecoveryServicesProvidersBeginRefreshProviderResponse = RecoveryServicesProvider & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProvider;
    };
};

/**
 * Contains response data for the listByReplicationFabricsNext operation.
 */
export type ReplicationRecoveryServicesProvidersListByReplicationFabricsNextResponse = RecoveryServicesProviderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProviderCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationRecoveryServicesProvidersListNextResponse = RecoveryServicesProviderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryServicesProviderCollection;
    };
};

/**
 * Contains response data for the listByReplicationFabrics operation.
 */
export type ReplicationStorageClassificationsListByReplicationFabricsResponse = StorageClassificationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationStorageClassificationsGetResponse = StorageClassification & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassification;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationStorageClassificationsListResponse = StorageClassificationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationCollection;
    };
};

/**
 * Contains response data for the listByReplicationFabricsNext operation.
 */
export type ReplicationStorageClassificationsListByReplicationFabricsNextResponse = StorageClassificationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationStorageClassificationsListNextResponse = StorageClassificationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationCollection;
    };
};

/**
 * Contains response data for the listByReplicationStorageClassifications operation.
 */
export type ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsResponse = StorageClassificationMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationMappingCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationStorageClassificationMappingsGetResponse = StorageClassificationMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationMapping;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationStorageClassificationMappingsCreateResponse = StorageClassificationMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationMapping;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationStorageClassificationMappingsListResponse = StorageClassificationMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationMappingCollection;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationStorageClassificationMappingsBeginCreateResponse = StorageClassificationMapping & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationMapping;
    };
};

/**
 * Contains response data for the listByReplicationStorageClassificationsNext operation.
 */
export type ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsNextResponse = StorageClassificationMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationMappingCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationStorageClassificationMappingsListNextResponse = StorageClassificationMappingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageClassificationMappingCollection;
    };
};

/**
 * Contains response data for the listByReplicationFabrics operation.
 */
export type ReplicationvCentersListByReplicationFabricsResponse = VCenterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenterCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationvCentersGetResponse = VCenter & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenter;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationvCentersCreateResponse = VCenter & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenter;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReplicationvCentersUpdateResponse = VCenter & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenter;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationvCentersListResponse = VCenterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenterCollection;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationvCentersBeginCreateResponse = VCenter & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenter;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ReplicationvCentersBeginUpdateResponse = VCenter & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenter;
    };
};

/**
 * Contains response data for the listByReplicationFabricsNext operation.
 */
export type ReplicationvCentersListByReplicationFabricsNextResponse = VCenterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenterCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationvCentersListNextResponse = VCenterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VCenterCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationJobsListResponse = JobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationJobsGetResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the cancel operation.
 */
export type ReplicationJobsCancelResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the restart operation.
 */
export type ReplicationJobsRestartResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the resume operation.
 */
export type ReplicationJobsResumeResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type ReplicationJobsExportMethodResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the beginCancel operation.
 */
export type ReplicationJobsBeginCancelResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the beginRestart operation.
 */
export type ReplicationJobsBeginRestartResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the beginResume operation.
 */
export type ReplicationJobsBeginResumeResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the beginExportMethod operation.
 */
export type ReplicationJobsBeginExportMethodResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationJobsListNextResponse = JobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationPoliciesListResponse = PolicyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationPoliciesGetResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Policy;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationPoliciesCreateResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Policy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReplicationPoliciesUpdateResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Policy;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationPoliciesBeginCreateResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Policy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ReplicationPoliciesBeginUpdateResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Policy;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationPoliciesListNextResponse = PolicyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationRecoveryPlansListResponse = RecoveryPlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlanCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationRecoveryPlansGetResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationRecoveryPlansCreateResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReplicationRecoveryPlansUpdateResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the failoverCommit operation.
 */
export type ReplicationRecoveryPlansFailoverCommitResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the plannedFailover operation.
 */
export type ReplicationRecoveryPlansPlannedFailoverResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the reprotect operation.
 */
export type ReplicationRecoveryPlansReprotectResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the testFailover operation.
 */
export type ReplicationRecoveryPlansTestFailoverResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the testFailoverCleanup operation.
 */
export type ReplicationRecoveryPlansTestFailoverCleanupResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the unplannedFailover operation.
 */
export type ReplicationRecoveryPlansUnplannedFailoverResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ReplicationRecoveryPlansBeginCreateResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ReplicationRecoveryPlansBeginUpdateResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the beginFailoverCommit operation.
 */
export type ReplicationRecoveryPlansBeginFailoverCommitResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the beginPlannedFailover operation.
 */
export type ReplicationRecoveryPlansBeginPlannedFailoverResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the beginReprotect operation.
 */
export type ReplicationRecoveryPlansBeginReprotectResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the beginTestFailover operation.
 */
export type ReplicationRecoveryPlansBeginTestFailoverResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the beginTestFailoverCleanup operation.
 */
export type ReplicationRecoveryPlansBeginTestFailoverCleanupResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the beginUnplannedFailover operation.
 */
export type ReplicationRecoveryPlansBeginUnplannedFailoverResponse = RecoveryPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlan;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationRecoveryPlansListNextResponse = RecoveryPlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryPlanCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedOperatingSystemsGetResponse = SupportedOperatingSystems & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SupportedOperatingSystems;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationVaultHealthGetResponse = VaultHealthDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VaultHealthDetails;
    };
};

/**
 * Contains response data for the refresh operation.
 */
export type ReplicationVaultHealthRefreshResponse = VaultHealthDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VaultHealthDetails;
    };
};

/**
 * Contains response data for the beginRefresh operation.
 */
export type ReplicationVaultHealthBeginRefreshResponse = VaultHealthDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VaultHealthDetails;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReplicationVaultSettingListResponse = VaultSettingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VaultSettingCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationVaultSettingGetResponse = VaultSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VaultSetting;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ReplicationVaultSettingCreateResponse = VaultSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VaultSetting;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReplicationVaultSettingListNextResponse = VaultSettingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VaultSettingCollection;
    };
};
