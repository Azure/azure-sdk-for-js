/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type ApplianceSpecificDetailsUnion =
  | ApplianceSpecificDetails
  | InMageRcmApplianceSpecificDetails;
export type EventProviderSpecificDetailsUnion =
  | EventProviderSpecificDetails
  | A2AEventDetails
  | HyperVReplica2012EventDetails
  | HyperVReplica2012R2EventDetails
  | HyperVReplicaAzureEventDetails
  | HyperVReplicaBaseEventDetails
  | InMageAzureV2EventDetails
  | InMageRcmEventDetails
  | InMageRcmFailbackEventDetails
  | VMwareCbtEventDetails;
export type EventSpecificDetailsUnion =
  | EventSpecificDetails
  | JobStatusEventDetails;
export type FabricSpecificDetailsUnion =
  | FabricSpecificDetails
  | AzureFabricSpecificDetails
  | HyperVSiteDetails
  | InMageRcmFabricSpecificDetails
  | VmmDetails
  | VMwareDetails
  | VMwareV2FabricSpecificDetails;
export type FabricSpecificCreationInputUnion =
  | FabricSpecificCreationInput
  | AzureFabricCreationInput
  | InMageRcmFabricCreationInput
  | VMwareV2FabricCreationInput;
export type NetworkMappingFabricSpecificSettingsUnion =
  | NetworkMappingFabricSpecificSettings
  | AzureToAzureNetworkMappingSettings
  | VmmToAzureNetworkMappingSettings
  | VmmToVmmNetworkMappingSettings;
export type FabricSpecificCreateNetworkMappingInputUnion =
  | FabricSpecificCreateNetworkMappingInput
  | AzureToAzureCreateNetworkMappingInput
  | VmmToAzureCreateNetworkMappingInput
  | VmmToVmmCreateNetworkMappingInput;
export type FabricSpecificUpdateNetworkMappingInputUnion =
  | FabricSpecificUpdateNetworkMappingInput
  | AzureToAzureUpdateNetworkMappingInput
  | VmmToAzureUpdateNetworkMappingInput
  | VmmToVmmUpdateNetworkMappingInput;
export type ReplicationProviderSpecificContainerCreationInputUnion =
  | ReplicationProviderSpecificContainerCreationInput
  | A2AContainerCreationInput
  | A2ACrossClusterMigrationContainerCreationInput
  | VMwareCbtContainerCreationInput;
export type MigrationProviderSpecificSettingsUnion =
  | MigrationProviderSpecificSettings
  | VMwareCbtMigrationDetails;
export type EnableMigrationProviderSpecificInputUnion =
  | EnableMigrationProviderSpecificInput
  | VMwareCbtEnableMigrationInput;
export type UpdateMigrationItemProviderSpecificInputUnion =
  | UpdateMigrationItemProviderSpecificInput
  | VMwareCbtUpdateMigrationItemInput;
export type MigrateProviderSpecificInputUnion =
  | MigrateProviderSpecificInput
  | VMwareCbtMigrateInput;
export type ResumeReplicationProviderSpecificInputUnion =
  | ResumeReplicationProviderSpecificInput
  | VMwareCbtResumeReplicationInput;
export type ResyncProviderSpecificInputUnion =
  | ResyncProviderSpecificInput
  | VMwareCbtResyncInput;
export type TestMigrateProviderSpecificInputUnion =
  | TestMigrateProviderSpecificInput
  | VMwareCbtTestMigrateInput;
export type ConfigurationSettingsUnion =
  | ConfigurationSettings
  | HyperVVirtualMachineDetailsUnion
  | ReplicationGroupDetails
  | VMwareVirtualMachineDetails;
export type ReplicationProviderSpecificSettingsUnion =
  | ReplicationProviderSpecificSettings
  | A2ACrossClusterMigrationReplicationDetails
  | A2AReplicationDetails
  | HyperVReplicaAzureReplicationDetails
  | HyperVReplicaBaseReplicationDetails
  | HyperVReplicaBlueReplicationDetails
  | HyperVReplicaReplicationDetails
  | InMageAzureV2ReplicationDetails
  | InMageRcmFailbackReplicationDetails
  | InMageRcmReplicationDetails
  | InMageReplicationDetails;
export type EnableProtectionProviderSpecificInputUnion =
  | EnableProtectionProviderSpecificInput
  | A2ACrossClusterMigrationEnableProtectionInput
  | A2AEnableProtectionInput
  | HyperVReplicaAzureEnableProtectionInput
  | InMageAzureV2EnableProtectionInput
  | InMageEnableProtectionInput
  | InMageRcmEnableProtectionInput;
export type UpdateReplicationProtectedItemProviderInputUnion =
  | UpdateReplicationProtectedItemProviderInput
  | A2AUpdateReplicationProtectedItemInput
  | HyperVReplicaAzureUpdateReplicationProtectedItemInput
  | InMageAzureV2UpdateReplicationProtectedItemInput
  | InMageRcmUpdateReplicationProtectedItemInput;
export type AddDisksProviderSpecificInputUnion =
  | AddDisksProviderSpecificInput
  | A2AAddDisksInput;
export type ApplyRecoveryPointProviderSpecificInputUnion =
  | ApplyRecoveryPointProviderSpecificInput
  | A2AApplyRecoveryPointInput
  | A2ACrossClusterMigrationApplyRecoveryPointInput
  | HyperVReplicaAzureApplyRecoveryPointInput
  | InMageAzureV2ApplyRecoveryPointInput
  | InMageRcmApplyRecoveryPointInput;
export type PlannedFailoverProviderSpecificFailoverInputUnion =
  | PlannedFailoverProviderSpecificFailoverInput
  | HyperVReplicaAzureFailbackProviderInput
  | HyperVReplicaAzurePlannedFailoverProviderInput
  | InMageRcmFailbackPlannedFailoverProviderInput;
export type ProviderSpecificRecoveryPointDetailsUnion =
  | ProviderSpecificRecoveryPointDetails
  | A2ARecoveryPointDetails
  | InMageAzureV2RecoveryPointDetails
  | InMageRcmRecoveryPointDetails;
export type DisableProtectionProviderSpecificInputUnion =
  | DisableProtectionProviderSpecificInput
  | InMageDisableProtectionProviderSpecificInput;
export type RemoveDisksProviderSpecificInputUnion =
  | RemoveDisksProviderSpecificInput
  | A2ARemoveDisksInput;
export type ReverseReplicationProviderSpecificInputUnion =
  | ReverseReplicationProviderSpecificInput
  | A2AReprotectInput
  | HyperVReplicaAzureReprotectInput
  | InMageAzureV2ReprotectInput
  | InMageRcmFailbackReprotectInput
  | InMageRcmReprotectInput
  | InMageReprotectInput;
export type SwitchProviderSpecificInputUnion =
  | SwitchProviderSpecificInput
  | InMageAzureV2SwitchProviderInput;
export type TestFailoverProviderSpecificInputUnion =
  | TestFailoverProviderSpecificInput
  | A2ATestFailoverInput
  | HyperVReplicaAzureTestFailoverInput
  | InMageAzureV2TestFailoverInput
  | InMageRcmTestFailoverInput
  | InMageTestFailoverInput;
export type UnplannedFailoverProviderSpecificInputUnion =
  | UnplannedFailoverProviderSpecificInput
  | A2AUnplannedFailoverInput
  | HyperVReplicaAzureUnplannedFailoverInput
  | InMageAzureV2UnplannedFailoverInput
  | InMageRcmUnplannedFailoverInput
  | InMageUnplannedFailoverInput;
export type UpdateApplianceForReplicationProtectedItemProviderSpecificInputUnion =
  | UpdateApplianceForReplicationProtectedItemProviderSpecificInput
  | InMageRcmUpdateApplianceForReplicationProtectedItemInput;
export type ProtectionContainerMappingProviderSpecificDetailsUnion =
  | ProtectionContainerMappingProviderSpecificDetails
  | A2AProtectionContainerMappingDetails
  | InMageRcmProtectionContainerMappingDetails
  | VMwareCbtProtectionContainerMappingDetails;
export type ReplicationProviderSpecificContainerMappingInputUnion =
  | ReplicationProviderSpecificContainerMappingInput
  | A2AContainerMappingInput
  | VMwareCbtContainerMappingInput;
export type ReplicationProviderSpecificUpdateContainerMappingInputUnion =
  | ReplicationProviderSpecificUpdateContainerMappingInput
  | A2AUpdateContainerMappingInput
  | InMageRcmUpdateContainerMappingInput;
export type SwitchProtectionProviderSpecificInputUnion =
  | SwitchProtectionProviderSpecificInput
  | A2ASwitchProtectionInput;
export type TaskTypeDetailsUnion =
  | TaskTypeDetails
  | AutomationRunbookTaskDetails
  | ConsistencyCheckTaskDetails
  | JobTaskDetailsUnion
  | ManualActionTaskDetails
  | ScriptActionTaskDetails
  | VmNicUpdatesTaskDetails;
export type GroupTaskDetailsUnion =
  | GroupTaskDetails
  | InlineWorkflowTaskDetails
  | RecoveryPlanGroupTaskDetailsUnion;
export type JobDetailsUnion =
  | JobDetails
  | AsrJobDetails
  | ExportJobDetails
  | FailoverJobDetails
  | SwitchProtectionJobDetails
  | TestFailoverJobDetails;
export type PolicyProviderSpecificDetailsUnion =
  | PolicyProviderSpecificDetails
  | A2APolicyDetails
  | HyperVReplicaAzurePolicyDetails
  | HyperVReplicaBasePolicyDetails
  | HyperVReplicaBluePolicyDetails
  | HyperVReplicaPolicyDetails
  | InMageAzureV2PolicyDetails
  | InMageBasePolicyDetails
  | InMagePolicyDetails
  | InMageRcmFailbackPolicyDetails
  | InMageRcmPolicyDetails
  | VmwareCbtPolicyDetails;
export type PolicyProviderSpecificInputUnion =
  | PolicyProviderSpecificInput
  | A2ACrossClusterMigrationPolicyCreationInput
  | A2APolicyCreationInput
  | HyperVReplicaAzurePolicyInput
  | HyperVReplicaPolicyInputUnion
  | InMageAzureV2PolicyInput
  | InMagePolicyInput
  | InMageRcmFailbackPolicyCreationInput
  | InMageRcmPolicyCreationInput
  | VMwareCbtPolicyCreationInput;
export type ReplicationProtectionIntentProviderSpecificSettingsUnion =
  | ReplicationProtectionIntentProviderSpecificSettings
  | A2AReplicationIntentDetails;
export type CreateProtectionIntentProviderSpecificDetailsUnion =
  | CreateProtectionIntentProviderSpecificDetails
  | A2ACreateProtectionIntentInput;
export type RecoveryPlanActionDetailsUnion =
  | RecoveryPlanActionDetails
  | RecoveryPlanAutomationRunbookActionDetails
  | RecoveryPlanManualActionDetails
  | RecoveryPlanScriptActionDetails;
export type RecoveryPlanProviderSpecificDetailsUnion =
  | RecoveryPlanProviderSpecificDetails
  | RecoveryPlanA2ADetails;
export type RecoveryPlanProviderSpecificInputUnion =
  | RecoveryPlanProviderSpecificInput
  | RecoveryPlanA2AInput;
export type RecoveryPlanProviderSpecificFailoverInputUnion =
  | RecoveryPlanProviderSpecificFailoverInput
  | RecoveryPlanA2AFailoverInput
  | RecoveryPlanHyperVReplicaAzureFailbackInput
  | RecoveryPlanHyperVReplicaAzureFailoverInput
  | RecoveryPlanInMageAzureV2FailoverInput
  | RecoveryPlanInMageFailoverInput
  | RecoveryPlanInMageRcmFailbackFailoverInput
  | RecoveryPlanInMageRcmFailoverInput;
export type ProtectionProfileCustomDetailsUnion =
  | ProtectionProfileCustomDetails
  | ExistingProtectionProfile
  | NewProtectionProfile;
export type StorageAccountCustomDetailsUnion =
  | StorageAccountCustomDetails
  | ExistingStorageAccount;
export type RecoveryAvailabilitySetCustomDetailsUnion =
  | RecoveryAvailabilitySetCustomDetails
  | ExistingRecoveryAvailabilitySet;
export type RecoveryVirtualNetworkCustomDetailsUnion =
  | RecoveryVirtualNetworkCustomDetails
  | ExistingRecoveryVirtualNetwork
  | NewRecoveryVirtualNetwork;
export type RecoveryProximityPlacementGroupCustomDetailsUnion =
  | RecoveryProximityPlacementGroupCustomDetails
  | ExistingRecoveryProximityPlacementGroup;
export type RecoveryResourceGroupCustomDetailsUnion =
  | RecoveryResourceGroupCustomDetails
  | ExistingRecoveryResourceGroup;
export type HyperVVirtualMachineDetailsUnion =
  | HyperVVirtualMachineDetails
  | VmmVirtualMachineDetails;
export type JobTaskDetailsUnion =
  | JobTaskDetails
  | FabricReplicationGroupTaskDetails
  | VirtualMachineTaskDetails;
export type RecoveryPlanGroupTaskDetailsUnion =
  | RecoveryPlanGroupTaskDetails
  | RecoveryPlanShutdownGroupTaskDetails;
export type HyperVReplicaPolicyInputUnion =
  | HyperVReplicaPolicyInput
  | HyperVReplicaBluePolicyInput;

/** Collection of ClientDiscovery details. */
export interface OperationsDiscoveryCollection {
  /** The ClientDiscovery details. */
  value?: OperationsDiscovery[];
  /** The value of next link. */
  nextLink?: string;
}

/** Operations discovery class. */
export interface OperationsDiscovery {
  /** Name of the API. The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service. Examples of operations include: * Microsoft.Compute/virtualMachine/capture/action * Microsoft.Compute/virtualMachine/restart/action * Microsoft.Compute/virtualMachine/write * Microsoft.Compute/virtualMachine/read * Microsoft.Compute/virtualMachine/delete Each action should include, in order: (1) Resource Provider Namespace (2) Type hierarchy for which the action applies (e.g. server/databases for a SQL Azure database) (3) Read, Write, Action or Delete indicating which type applies. If it is a PUT/PATCH on a collection or named value, Write should be used. If it is a GET, Read should be used. If it is a DELETE, Delete should be used. If it is a POST, Action should be used. As a note: all resource providers would need to include the "{Resource Provider Namespace}/register/action" operation in their response. This API is used to register for their service, and should include details about the operation (e.g. a localized name for the resource provider + any special considerations like PII release). */
  name?: string;
  /** Object type. */
  display?: Display;
  /** Origin. The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is "user,system". */
  origin?: string;
  /** Properties. Reserved for future use. */
  properties?: Record<string, unknown>;
}

/** Contains the localized display information for this particular operation / action. These value will be used by several clients for (1) custom role definitions for RBAC; (2) complex query filters for the event service; and (3) audit history / records for management operations. */
export interface Display {
  /** The provider. The localized friendly form of the resource provider name - it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute.". */
  provider?: string;
  /** The resource. The localized friendly form of the resource related to this action/operation - it should match the public documentation for the resource provider. It should use Title Casing. This value should be unique for a particular URL type (e.g. nested types should *not* reuse their parent's display.resource field). e.g. "Virtual Machines" or "Scheduler Job Collections", or "Virtual Machine VM Sizes" or "Scheduler Jobs". */
  resource?: string;
  /** The operation. The localized friendly name for the operation, as it should be shown to the user. It should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing. Prescriptive guidance: Read Create or Update Delete 'ActionName'. */
  operation?: string;
  /** The description. The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise - it will be used in tool tips and detailed views. Prescriptive guidance for namespaces: Read any 'display.provider' resource Create or Update any 'display.provider' resource Delete any 'display.provider' resource Perform any other action on any 'display.provider' resource Prescriptive guidance for namespaces: Read any 'display.resource' Create or Update any 'display.resource' Delete any 'display.resource' 'ActionName' any 'display.resources'. */
  description?: string;
}

/** Collection of alerts. */
export interface AlertCollection {
  /** The list of alerts. */
  value?: Alert[];
  /** The value of next link. */
  nextLink?: string;
}

/** The properties of an alert. */
export interface AlertProperties {
  /** A value indicating whether to send email to subscription administrator. */
  sendToOwners?: string;
  /** The custom email address for sending emails. */
  customEmailAddresses?: string[];
  /** The locale for the email notification. */
  locale?: string;
}

/** Azure resource. */
export interface Resource {
  /**
   * Resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource Type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource Location */
  location?: string;
}

/** Request to configure alerts for the system. */
export interface ConfigureAlertRequest {
  /** The properties of a configure alert request. */
  properties?: ConfigureAlertRequestProperties;
}

/** Properties of a configure alert request. */
export interface ConfigureAlertRequestProperties {
  /** A value indicating whether to send email to subscription administrator. */
  sendToOwners?: string;
  /** The custom email address for sending emails. */
  customEmailAddresses?: string[];
  /** The locale for the email notification. */
  locale?: string;
}

/** Collection of appliance details. */
export interface ApplianceCollection {
  /** The appliance details. */
  value?: ReplicationAppliance[];
  /** The value of next link. */
  nextLink?: string;
}

/** Replication appliance definition. */
export interface ReplicationAppliance {
  /** Appliance related data. */
  properties?: ReplicationApplianceProperties;
}

/** Replication appliance properties. */
export interface ReplicationApplianceProperties {
  /** Provider specific settings. */
  providerSpecificDetails?: ApplianceSpecificDetailsUnion;
}

/** Appliance specific details. */
export interface ApplianceSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
}

/** Replication eligibility results collection response model. */
export interface ReplicationEligibilityResultsCollection {
  /** The replication eligibility results details. */
  value?: ReplicationEligibilityResults[];
}

/** Replication eligibility results response model. */
export interface ReplicationEligibilityResults {
  /**
   * Gets the name of this object.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets the object type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Gets Unique ARM identifier for this object.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets properties model for replication eligibility results API.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: ReplicationEligibilityResultsProperties;
}

/** Properties model for replication eligibility results API. */
export interface ReplicationEligibilityResultsProperties {
  /**
   * The client request Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientRequestId?: string;
  /** The error details. */
  errors?: ReplicationEligibilityResultsErrorInfo[];
}

/** Error model that can be exposed to the user. */
export interface ReplicationEligibilityResultsErrorInfo {
  /** The error code. */
  code?: string;
  /** The error message. */
  message?: string;
  /** The possible causes. */
  possibleCauses?: string;
  /** The recommended action. */
  recommendedAction?: string;
  /**
   * The error status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
}

/** Collection of fabric details. */
export interface EventCollection {
  /** The list of events. */
  value?: Event[];
  /** The value of next link. */
  nextLink?: string;
}

/** The properties of a monitoring event. */
export interface EventProperties {
  /** The Id of the monitoring event. */
  eventCode?: string;
  /** The event name. */
  description?: string;
  /** The type of the event. for example: VM Health, Server Health, Job Failure etc. */
  eventType?: string;
  /** The friendly name of the source of the event on which it is raised (for example, VM, VMM etc). */
  affectedObjectFriendlyName?: string;
  /** The affected object correlationId for the event. */
  affectedObjectCorrelationId?: string;
  /** The severity of the event. */
  severity?: string;
  /** The time of occurrence of the event. */
  timeOfOccurrence?: Date;
  /** The ARM ID of the fabric. */
  fabricId?: string;
  /** The provider specific settings. */
  providerSpecificDetails?: EventProviderSpecificDetailsUnion;
  /** The event specific settings. */
  eventSpecificDetails?: EventSpecificDetailsUnion;
  /** The list of errors / warnings capturing details associated with the issue(s). */
  healthErrors?: HealthError[];
}

/** Model class for provider specific details for an event. */
export interface EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2A"
    | "HyperVReplica2012"
    | "HyperVReplica2012R2"
    | "HyperVReplicaAzure"
    | "HyperVReplicaBaseEventDetails"
    | "InMageAzureV2"
    | "InMageRcm"
    | "InMageRcmFailback"
    | "VMwareCbt";
}

/** Model class for event specific details for an event. */
export interface EventSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "JobStatus";
}

/** Health Error. */
export interface HealthError {
  /** The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException. */
  innerHealthErrors?: InnerHealthError[];
  /** Source of error. */
  errorSource?: string;
  /** Type of error. */
  errorType?: string;
  /** Level of error. */
  errorLevel?: string;
  /** Category of error. */
  errorCategory?: string;
  /** Error code. */
  errorCode?: string;
  /** Summary message of the entity. */
  summaryMessage?: string;
  /** Error message. */
  errorMessage?: string;
  /** Possible causes of error. */
  possibleCauses?: string;
  /** Recommended action to resolve error. */
  recommendedAction?: string;
  /** Error creation time (UTC). */
  creationTimeUtc?: Date;
  /** DRA error message. */
  recoveryProviderErrorMessage?: string;
  /** ID of the entity. */
  entityId?: string;
  /** The health error unique id. */
  errorId?: string;
  /** Value indicating whether the health error is customer resolvable. */
  customerResolvability?: HealthErrorCustomerResolvability;
}

/** Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException. */
export interface InnerHealthError {
  /** Source of error. */
  errorSource?: string;
  /** Type of error. */
  errorType?: string;
  /** Level of error. */
  errorLevel?: string;
  /** Category of error. */
  errorCategory?: string;
  /** Error code. */
  errorCode?: string;
  /** Summary message of the entity. */
  summaryMessage?: string;
  /** Error message. */
  errorMessage?: string;
  /** Possible causes of error. */
  possibleCauses?: string;
  /** Recommended action to resolve error. */
  recommendedAction?: string;
  /** Error creation time (UTC). */
  creationTimeUtc?: Date;
  /** DRA error message. */
  recoveryProviderErrorMessage?: string;
  /** ID of the entity. */
  entityId?: string;
  /** The health error unique id. */
  errorId?: string;
  /** Value indicating whether the health error is customer resolvable. */
  customerResolvability?: HealthErrorCustomerResolvability;
}

/** Collection of fabric details. */
export interface FabricCollection {
  /** The fabric details. */
  value?: Fabric[];
  /** The value of next link. */
  nextLink?: string;
}

/** Fabric properties. */
export interface FabricProperties {
  /** Friendly name of the fabric. */
  friendlyName?: string;
  /** Encryption details for the fabric. */
  encryptionDetails?: EncryptionDetails;
  /** Rollover encryption details for the fabric. */
  rolloverEncryptionDetails?: EncryptionDetails;
  /** Dra Registration Id. */
  internalIdentifier?: string;
  /** BCDR state of the fabric. */
  bcdrState?: string;
  /** Fabric specific settings. */
  customDetails?: FabricSpecificDetailsUnion;
  /** Fabric health error details. */
  healthErrorDetails?: HealthError[];
  /** Health of fabric. */
  health?: string;
}

/** Encryption details for the fabric. */
export interface EncryptionDetails {
  /** The key encryption key state for the Vmm. */
  kekState?: string;
  /** The key encryption key certificate thumbprint. */
  kekCertThumbprint?: string;
  /** The key encryption key certificate expiry date. */
  kekCertExpiryDate?: Date;
}

/** Fabric specific details. */
export interface FabricSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "Azure"
    | "HyperVSite"
    | "InMageRcm"
    | "VMM"
    | "VMware"
    | "VMwareV2";
}

/** Site details provided during the time of site creation. */
export interface FabricCreationInput {
  /** Fabric creation input. */
  properties?: FabricCreationInputProperties;
}

/** Properties of site details provided during the time of site creation. */
export interface FabricCreationInputProperties {
  /** Fabric provider specific creation input. */
  customDetails?: FabricSpecificCreationInputUnion;
}

/** Fabric provider specific settings. */
export interface FabricSpecificCreationInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "Azure" | "InMageRcm" | "VMwareV2";
}

/** Request to failover a process server. */
export interface FailoverProcessServerRequest {
  /** The properties of the PS Failover request. */
  properties?: FailoverProcessServerRequestProperties;
}

/** The properties of the Failover Process Server request. */
export interface FailoverProcessServerRequestProperties {
  /** The container identifier. */
  containerName?: string;
  /** The source process server. */
  sourceProcessServerId?: string;
  /** The new process server. */
  targetProcessServerId?: string;
  /** The VMS to migrate. */
  vmsToMigrate?: string[];
  /** A value for failover type. It can be systemlevel/serverlevel. */
  updateType?: string;
}

/** Certificate renewal input. */
export interface RenewCertificateInput {
  /** Renew certificate input properties. */
  properties?: RenewCertificateInputProperties;
}

/** Renew Certificate input properties. */
export interface RenewCertificateInputProperties {
  /** Renew certificate type. */
  renewCertificateType?: string;
}

/** List of logical networks. */
export interface LogicalNetworkCollection {
  /** The Logical Networks list details. */
  value?: LogicalNetwork[];
  /** The value of next link. */
  nextLink?: string;
}

/** Logical Network Properties. */
export interface LogicalNetworkProperties {
  /** The Friendly Name. */
  friendlyName?: string;
  /** A value indicating whether Network Virtualization is enabled for the logical network. */
  networkVirtualizationStatus?: string;
  /** A value indicating whether logical network is used as private test network by test failover. */
  logicalNetworkUsage?: string;
  /** A value indicating whether logical network definitions are isolated. */
  logicalNetworkDefinitionsStatus?: string;
}

/** List of networks. */
export interface NetworkCollection {
  /** The Networks list details. */
  value?: Network[];
  /** The value of next link. */
  nextLink?: string;
}

/** Network Properties. */
export interface NetworkProperties {
  /** The Fabric Type. */
  fabricType?: string;
  /** The List of subnets. */
  subnets?: Subnet[];
  /** The Friendly Name. */
  friendlyName?: string;
  /** The Network Type. */
  networkType?: string;
}

/** Subnets of the network. */
export interface Subnet {
  /** The subnet name. */
  name?: string;
  /** The subnet friendly name. */
  friendlyName?: string;
  /** The list of addresses for the subnet. */
  addressList?: string[];
}

/** List of network mappings. As with NetworkMapping, it should be possible to reuse a prev version of this class. It doesn't seem likely this class could be anything more than a slightly bespoke collection of NetworkMapping. Hence it makes sense to override Load with Base.NetworkMapping instead of existing CurrentVersion.NetworkMapping. */
export interface NetworkMappingCollection {
  /** The Network Mappings list. */
  value?: NetworkMapping[];
  /** The value of next link. */
  nextLink?: string;
}

/** Network Mapping Properties. */
export interface NetworkMappingProperties {
  /** The pairing state for network mapping. */
  state?: string;
  /** The primary network friendly name. */
  primaryNetworkFriendlyName?: string;
  /** The primary network id for network mapping. */
  primaryNetworkId?: string;
  /** The primary fabric friendly name. */
  primaryFabricFriendlyName?: string;
  /** The recovery network friendly name. */
  recoveryNetworkFriendlyName?: string;
  /** The recovery network id for network mapping. */
  recoveryNetworkId?: string;
  /** The recovery fabric ARM id. */
  recoveryFabricArmId?: string;
  /** The recovery fabric friendly name. */
  recoveryFabricFriendlyName?: string;
  /** The fabric specific settings. */
  fabricSpecificSettings?: NetworkMappingFabricSpecificSettingsUnion;
}

/** Network Mapping fabric specific settings. */
export interface NetworkMappingFabricSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzureToAzure" | "VmmToAzure" | "VmmToVmm";
}

/** Create network mappings input. */
export interface CreateNetworkMappingInput {
  /** Input properties for creating network mapping. */
  properties: CreateNetworkMappingInputProperties;
}

/** Common input details for network mapping operation. */
export interface CreateNetworkMappingInputProperties {
  /** Recovery fabric Name. */
  recoveryFabricName?: string;
  /** Recovery network Id. */
  recoveryNetworkId: string;
  /** Fabric specific input properties. */
  fabricSpecificDetails?: FabricSpecificCreateNetworkMappingInputUnion;
}

/** Input details specific to fabrics during Network Mapping. */
export interface FabricSpecificCreateNetworkMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzureToAzure" | "VmmToAzure" | "VmmToVmm";
}

/** Update network mapping input. */
export interface UpdateNetworkMappingInput {
  /** The input properties needed to update network mapping. */
  properties?: UpdateNetworkMappingInputProperties;
}

/** Common input details for network mapping operation. */
export interface UpdateNetworkMappingInputProperties {
  /** Recovery fabric name. */
  recoveryFabricName?: string;
  /** Recovery network Id. */
  recoveryNetworkId?: string;
  /** Fabrics specific input network Id. */
  fabricSpecificDetails?: FabricSpecificUpdateNetworkMappingInputUnion;
}

/** Input details specific to fabrics during Network Mapping. */
export interface FabricSpecificUpdateNetworkMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzureToAzure" | "VmmToAzure" | "VmmToVmm";
}

/** Protection Container collection. */
export interface ProtectionContainerCollection {
  /** The Protection Container details. */
  value?: ProtectionContainer[];
  /** The value of next link. */
  nextLink?: string;
}

/** Protection profile custom data details. */
export interface ProtectionContainerProperties {
  /** Fabric friendly name. */
  fabricFriendlyName?: string;
  /** The name. */
  friendlyName?: string;
  /** The fabric type. */
  fabricType?: string;
  /** Number of protected PEs. */
  protectedItemCount?: number;
  /** The pairing status of this cloud. */
  pairingStatus?: string;
  /** The role of this cloud. */
  role?: string;
  /** Fabric specific details. */
  fabricSpecificDetails?: ProtectionContainerFabricSpecificDetails;
}

/** Base class for fabric specific details of container. */
export interface ProtectionContainerFabricSpecificDetails {
  /**
   * Gets the class type. Overridden in derived classes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly instanceType?: string;
}

/** Create protection container input. */
export interface CreateProtectionContainerInput {
  /** Create protection container input properties. */
  properties?: CreateProtectionContainerInputProperties;
}

/** Create protection container input properties. */
export interface CreateProtectionContainerInputProperties {
  /** Provider specific inputs for container creation. */
  providerSpecificInput?: ReplicationProviderSpecificContainerCreationInputUnion[];
}

/** Provider specific input for container creation operation. */
export interface ReplicationProviderSpecificContainerCreationInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A" | "A2ACrossClusterMigration" | "VMwareCbt";
}

/** Request to add a physical machine as a protectable item in a container. */
export interface DiscoverProtectableItemRequest {
  /** The properties of a discover protectable item request. */
  properties?: DiscoverProtectableItemRequestProperties;
}

/** Discover protectable item properties. */
export interface DiscoverProtectableItemRequestProperties {
  /** The friendly name of the physical machine. */
  friendlyName?: string;
  /** The IP address of the physical machine to be discovered. */
  ipAddress?: string;
  /** The OS type on the physical machine. */
  osType?: string;
}

/** Migration item collection. */
export interface MigrationItemCollection {
  /** The list of migration items. */
  value?: MigrationItem[];
  /** The value of next link. */
  nextLink?: string;
}

/** Migration item properties. */
export interface MigrationItemProperties {
  /**
   * The on-premise virtual machine name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly machineName?: string;
  /**
   * The ARM Id of policy governing this item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policyId?: string;
  /**
   * The name of policy governing this item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policyFriendlyName?: string;
  /**
   * The recovery services provider ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryServicesProviderId?: string;
  /**
   * The replication status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationStatus?: string;
  /**
   * The migration status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationState?: MigrationState;
  /**
   * The migration state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationStateDescription?: string;
  /**
   * The last test migration time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastTestMigrationTime?: Date;
  /**
   * The status of the last test migration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastTestMigrationStatus?: string;
  /**
   * The last migration time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMigrationTime?: Date;
  /**
   * The status of the last migration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMigrationStatus?: string;
  /**
   * The test migrate state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testMigrateState?: TestMigrationState;
  /**
   * The test migrate state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testMigrateStateDescription?: string;
  /**
   * The consolidated health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthError[];
  /**
   * The allowed operations on the migration item based on the current migration state of the item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedOperations?: MigrationItemOperation[];
  /**
   * The current job details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentJob?: CurrentJobDetails;
  /**
   * The critical past job details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly criticalJobHistory?: CriticalJobHistoryDetails[];
  /**
   * The correlation Id for events associated with this migration item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eventCorrelationId?: string;
  /** The migration provider custom settings. */
  providerSpecificDetails?: MigrationProviderSpecificSettingsUnion;
}

/** Current job details of the migration item. */
export interface CurrentJobDetails {
  /**
   * The job name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobName?: string;
  /**
   * The ARM Id of the job being executed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobId?: string;
  /**
   * The start time of the job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
}

/** Critical past job details of the migration item. */
export interface CriticalJobHistoryDetails {
  /**
   * The job name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobName?: string;
  /**
   * The ARM Id of the job being executed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobId?: string;
  /**
   * The start time of the job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * The job state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobStatus?: string;
}

/** Migration provider specific settings. */
export interface MigrationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
}

/** Enable migration input. */
export interface EnableMigrationInput {
  /** Enable migration input properties. */
  properties: EnableMigrationInputProperties;
}

/** Enable migration input properties. */
export interface EnableMigrationInputProperties {
  /** The policy Id. */
  policyId: string;
  /** The provider specific details. */
  providerSpecificDetails: EnableMigrationProviderSpecificInputUnion;
}

/** Enable migration provider specific input. */
export interface EnableMigrationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
}

/** Update migration item input. */
export interface UpdateMigrationItemInput {
  /** Update migration item input properties. */
  properties?: UpdateMigrationItemInputProperties;
}

/** Update migration item input properties. */
export interface UpdateMigrationItemInputProperties {
  /** The provider specific input to update migration item. */
  providerSpecificDetails: UpdateMigrationItemProviderSpecificInputUnion;
}

/** Update migration item provider specific input. */
export interface UpdateMigrationItemProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
}

/** Input for migrate. */
export interface MigrateInput {
  /** Migrate input properties. */
  properties: MigrateInputProperties;
}

/** Migrate input properties. */
export interface MigrateInputProperties {
  /** The provider specific details. */
  providerSpecificDetails: MigrateProviderSpecificInputUnion;
}

/** Migrate provider specific input. */
export interface MigrateProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
}

/** Collection of migration recovery points. */
export interface MigrationRecoveryPointCollection {
  /** The migration recovery point details. */
  value?: MigrationRecoveryPoint[];
  /** The value of next link. */
  nextLink?: string;
}

/** Migration item recovery point properties. */
export interface MigrationRecoveryPointProperties {
  /**
   * The recovery point time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryPointTime?: Date;
  /**
   * The recovery point type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryPointType?: MigrationRecoveryPointType;
}

/** Pause replication input. */
export interface PauseReplicationInput {
  /** Pause replication input properties. */
  properties: PauseReplicationInputProperties;
}

/** Pause replication input properties. */
export interface PauseReplicationInputProperties {
  /** The class type. */
  instanceType: string;
}

/** Resume replication input. */
export interface ResumeReplicationInput {
  /** Resume replication input properties. */
  properties: ResumeReplicationInputProperties;
}

/** Resume replication input properties. */
export interface ResumeReplicationInputProperties {
  /** The provider specific input for resume replication. */
  providerSpecificDetails: ResumeReplicationProviderSpecificInputUnion;
}

/** Resume replication provider specific input. */
export interface ResumeReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
}

/** Resync input. */
export interface ResyncInput {
  /** Resync input properties. */
  properties: ResyncInputProperties;
}

/** Resync input properties. */
export interface ResyncInputProperties {
  /** The provider specific details. */
  providerSpecificDetails: ResyncProviderSpecificInputUnion;
}

/** Resync provider specific input. */
export interface ResyncProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
}

/** Input for test migrate. */
export interface TestMigrateInput {
  /** Test migrate input properties. */
  properties: TestMigrateInputProperties;
}

/** Test migrate input properties. */
export interface TestMigrateInputProperties {
  /** The provider specific details. */
  providerSpecificDetails: TestMigrateProviderSpecificInputUnion;
}

/** Test migrate provider specific input. */
export interface TestMigrateProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
}

/** Input for test migrate cleanup. */
export interface TestMigrateCleanupInput {
  /** Test migrate cleanup input properties. */
  properties: TestMigrateCleanupInputProperties;
}

/** Test migrate cleanup input properties. */
export interface TestMigrateCleanupInputProperties {
  /** Test migrate cleanup comments. */
  comments?: string;
}

/** Protectable item collection. */
export interface ProtectableItemCollection {
  /** The Protectable item details. */
  value?: ProtectableItem[];
  /** The value of next link. */
  nextLink?: string;
}

/** Replication protected item custom data details. */
export interface ProtectableItemProperties {
  /** The name. */
  friendlyName?: string;
  /** The protection status. */
  protectionStatus?: string;
  /** The ARM resource of protected items. */
  replicationProtectedItemId?: string;
  /** The recovery provider ARM Id. */
  recoveryServicesProviderId?: string;
  /** The Current protection readiness errors. */
  protectionReadinessErrors?: string[];
  /** The list of replication providers supported for the protectable item. */
  supportedReplicationProviders?: string[];
  /** The Replication provider custom settings. */
  customDetails?: ConfigurationSettingsUnion;
}

/** Replication provider specific settings. */
export interface ConfigurationSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "HyperVVirtualMachine"
    | "ReplicationGroupDetails"
    | "VmmVirtualMachine"
    | "VMwareVirtualMachine";
}

/** Replication protected item collection. */
export interface ReplicationProtectedItemCollection {
  /** The Replication protected item details. */
  value?: ReplicationProtectedItem[];
  /** The value of next link. */
  nextLink?: string;
}

/** Replication protected item custom data details. */
export interface ReplicationProtectedItemProperties {
  /** The name. */
  friendlyName?: string;
  /** The type of protected item type. */
  protectedItemType?: string;
  /** The protected item ARM Id. */
  protectableItemId?: string;
  /** The recovery provider ARM Id. */
  recoveryServicesProviderId?: string;
  /** The friendly name of the primary fabric. */
  primaryFabricFriendlyName?: string;
  /** The fabric provider of the primary fabric. */
  primaryFabricProvider?: string;
  /** The friendly name of recovery fabric. */
  recoveryFabricFriendlyName?: string;
  /** The Arm Id of recovery fabric. */
  recoveryFabricId?: string;
  /** The name of primary protection container friendly name. */
  primaryProtectionContainerFriendlyName?: string;
  /** The name of recovery container friendly name. */
  recoveryProtectionContainerFriendlyName?: string;
  /** The protection status. */
  protectionState?: string;
  /** The protection state description. */
  protectionStateDescription?: string;
  /** The Current active location of the PE. */
  activeLocation?: string;
  /** The Test failover state. */
  testFailoverState?: string;
  /** The Test failover state description. */
  testFailoverStateDescription?: string;
  /** The switch provider state. */
  switchProviderState?: string;
  /** The switch provider state description. */
  switchProviderStateDescription?: string;
  /** The allowed operations on the Replication protected item. */
  allowedOperations?: string[];
  /** The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration. */
  replicationHealth?: string;
  /** The consolidated failover health for the VM. */
  failoverHealth?: string;
  /** List of health errors. */
  healthErrors?: HealthError[];
  /** The ID of Policy governing this PE. */
  policyId?: string;
  /** The name of Policy governing this PE. */
  policyFriendlyName?: string;
  /** The Last successful failover time. */
  lastSuccessfulFailoverTime?: Date;
  /** The Last successful test failover time. */
  lastSuccessfulTestFailoverTime?: Date;
  /** The current scenario. */
  currentScenario?: CurrentScenarioDetails;
  /** The recovery point ARM Id to which the Vm was failed over. */
  failoverRecoveryPointId?: string;
  /** The Replication provider custom settings. */
  providerSpecificDetails?: ReplicationProviderSpecificSettingsUnion;
  /** The recovery container Id. */
  recoveryContainerId?: string;
  /** The correlation Id for events associated with this protected item. */
  eventCorrelationId?: string;
}

/** Current scenario details of the protected entity. */
export interface CurrentScenarioDetails {
  /** Scenario name. */
  scenarioName?: string;
  /** ARM Id of the job being executed. */
  jobId?: string;
  /** Start time of the workflow. */
  startTime?: Date;
}

/** Replication provider specific settings. */
export interface ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2ACrossClusterMigration"
    | "A2A"
    | "HyperVReplicaAzure"
    | "HyperVReplicaBaseReplicationDetails"
    | "HyperVReplica2012R2"
    | "HyperVReplica2012"
    | "InMageAzureV2"
    | "InMageRcmFailback"
    | "InMageRcm"
    | "InMage";
}

/** Enable protection input. */
export interface EnableProtectionInput {
  /** Enable protection input properties. */
  properties?: EnableProtectionInputProperties;
}

/** Enable protection input properties. */
export interface EnableProtectionInputProperties {
  /** The Policy Id. */
  policyId?: string;
  /** The protectable item Id. */
  protectableItemId?: string;
  /** The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null. */
  providerSpecificDetails?: EnableProtectionProviderSpecificInputUnion;
}

/** Enable protection provider specific input. */
export interface EnableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2ACrossClusterMigration"
    | "A2A"
    | "HyperVReplicaAzure"
    | "InMageAzureV2"
    | "InMage"
    | "InMageRcm";
}

/** Update replication protected item input. */
export interface UpdateReplicationProtectedItemInput {
  /** Update replication protected item properties. */
  properties?: UpdateReplicationProtectedItemInputProperties;
}

/** Update protected item input properties. */
export interface UpdateReplicationProtectedItemInputProperties {
  /** Target Azure VM name given by the user. */
  recoveryAzureVMName?: string;
  /** Target Azure VM size. */
  recoveryAzureVMSize?: string;
  /** Target Azure Network Id. */
  selectedRecoveryAzureNetworkId?: string;
  /** The Azure Network Id for test failover. */
  selectedTfoAzureNetworkId?: string;
  /** The selected source nic Id which will be used as the primary nic during failover. */
  selectedSourceNicId?: string;
  /** The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum. */
  enableRdpOnTargetOption?: string;
  /** The list of VM nic details. */
  vmNics?: VMNicInputDetails[];
  /** License type. */
  licenseType?: LicenseType;
  /** The target availability set Id. */
  recoveryAvailabilitySetId?: string;
  /** The provider specific input to update replication protected item. */
  providerSpecificDetails?: UpdateReplicationProtectedItemProviderInputUnion;
}

/** Hyper V VM network input details. */
export interface VMNicInputDetails {
  /** The nic Id. */
  nicId?: string;
  /** The IP configurations to be used by NIC during test failover and failover. */
  ipConfigs?: IPConfigInputDetails[];
  /** Selection type for failover. */
  selectionType?: string;
  /** The id of the NSG associated with the NIC. */
  recoveryNetworkSecurityGroupId?: string;
  /** Whether the NIC has accelerated networking enabled. */
  enableAcceleratedNetworkingOnRecovery?: boolean;
  /** The NSG to be used by NIC during test failover. */
  tfoNetworkSecurityGroupId?: string;
  /** Whether the test NIC has accelerated networking enabled. */
  enableAcceleratedNetworkingOnTfo?: boolean;
  /** The name of the NIC to be used when creating target NICs. */
  recoveryNicName?: string;
  /** The resource group of the NIC to be used when creating target NICs. */
  recoveryNicResourceGroupName?: string;
  /** A value indicating whether an existing NIC is allowed to be reused during failover subject to availability. */
  reuseExistingNic?: boolean;
  /** The name of the NIC to be used when creating target NICs in TFO. */
  tfoNicName?: string;
  /** The resource group of the NIC to be used when creating target NICs in TFO. */
  tfoNicResourceGroupName?: string;
  /** A value indicating whether an existing NIC is allowed to be reused during test failover subject to availability. */
  tfoReuseExistingNic?: boolean;
  /** Target NIC name. */
  targetNicName?: string;
}

export interface IPConfigInputDetails {
  ipConfigName?: string;
  isPrimary?: boolean;
  isSeletedForFailover?: boolean;
  recoverySubnetName?: string;
  recoveryStaticIPAddress?: string;
  recoveryPublicIPAddressId?: string;
  recoveryLBBackendAddressPoolIds?: string[];
  tfoSubnetName?: string;
  tfoStaticIPAddress?: string;
  tfoPublicIPAddressId?: string;
  tfoLBBackendAddressPoolIds?: string[];
}

/** Update replication protected item provider specific input. */
export interface UpdateReplicationProtectedItemProviderInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A" | "HyperVReplicaAzure" | "InMageAzureV2" | "InMageRcm";
}

/** Input for add disk(s) operation. */
export interface AddDisksInput {
  /** Add disks input properties. */
  properties?: AddDisksInputProperties;
}

/** Add Disks input properties. */
export interface AddDisksInputProperties {
  /** The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null. */
  providerSpecificDetails: AddDisksProviderSpecificInputUnion;
}

/** Add Disks provider specific input. */
export interface AddDisksProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** Input to apply recovery point. */
export interface ApplyRecoveryPointInput {
  /** The input properties to apply recovery point. */
  properties: ApplyRecoveryPointInputProperties;
}

/** Input properties to apply recovery point. */
export interface ApplyRecoveryPointInputProperties {
  /** The recovery point Id. */
  recoveryPointId?: string;
  /** Provider specific input for applying recovery point. */
  providerSpecificDetails: ApplyRecoveryPointProviderSpecificInputUnion;
}

/** Provider specific input for apply recovery point. */
export interface ApplyRecoveryPointProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2A"
    | "A2ACrossClusterMigration"
    | "HyperVReplicaAzure"
    | "InMageAzureV2"
    | "InMageRcm";
}

/** Input definition for planned failover. */
export interface PlannedFailoverInput {
  /** Planned failover input properties. */
  properties?: PlannedFailoverInputProperties;
}

/** Input definition for planned failover input properties. */
export interface PlannedFailoverInputProperties {
  /** Failover direction. */
  failoverDirection?: string;
  /** Provider specific settings. */
  providerSpecificDetails?: PlannedFailoverProviderSpecificFailoverInputUnion;
}

/** Provider specific failover input. */
export interface PlannedFailoverProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "HyperVReplicaAzureFailback"
    | "HyperVReplicaAzure"
    | "InMageRcmFailback";
}

/** Collection of recovery point details. */
export interface RecoveryPointCollection {
  /** The recovery point details. */
  value?: RecoveryPoint[];
  /** The value of next link. */
  nextLink?: string;
}

/** Recovery point properties. */
export interface RecoveryPointProperties {
  /** The recovery point time. */
  recoveryPointTime?: Date;
  /** The recovery point type: ApplicationConsistent, CrashConsistent. */
  recoveryPointType?: string;
  /** The provider specific details for the recovery point. */
  providerSpecificDetails?: ProviderSpecificRecoveryPointDetailsUnion;
}

/** Replication provider specific recovery point details. */
export interface ProviderSpecificRecoveryPointDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A" | "InMageAzureV2" | "InMageRcm";
}

/** Disable protection input. */
export interface DisableProtectionInput {
  /** Disable protection input properties. */
  properties: DisableProtectionInputProperties;
}

/** Disable protection input properties. */
export interface DisableProtectionInputProperties {
  /** Disable protection reason. It can have values NotSpecified/MigrationComplete. */
  disableProtectionReason?: DisableProtectionReason;
  /** Replication provider specific input. */
  replicationProviderInput?: DisableProtectionProviderSpecificInputUnion;
}

/** Disable protection provider specific input. */
export interface DisableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
}

/** Input for remove disk(s) operation. */
export interface RemoveDisksInput {
  /** Remove disk input properties. */
  properties?: RemoveDisksInputProperties;
}

/** Remove Disk input properties. */
export interface RemoveDisksInputProperties {
  /** The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null. */
  providerSpecificDetails?: RemoveDisksProviderSpecificInputUnion;
}

/** Remove Disk provider specific input. */
export interface RemoveDisksProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** Reverse replication input. */
export interface ReverseReplicationInput {
  /** Reverse replication properties. */
  properties?: ReverseReplicationInputProperties;
}

/** Reverse replication input properties. */
export interface ReverseReplicationInputProperties {
  /** Failover direction. */
  failoverDirection?: string;
  /** Provider specific reverse replication input. */
  providerSpecificDetails?: ReverseReplicationProviderSpecificInputUnion;
}

/** Provider specific reverse replication input. */
export interface ReverseReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2A"
    | "HyperVReplicaAzure"
    | "InMageAzureV2"
    | "InMageRcmFailback"
    | "InMageRcm"
    | "InMage";
}

/** Resolve health input. */
export interface ResolveHealthInput {
  /** Disable resolve health input properties. */
  properties?: ResolveHealthInputProperties;
}

/** Resolve health input properties. */
export interface ResolveHealthInputProperties {
  /** Health errors. */
  healthErrors?: ResolveHealthError[];
}

/** Resolve health errors input properties. */
export interface ResolveHealthError {
  /** Health error id. */
  healthErrorId?: string;
}

/** Input definition for switch provider. */
export interface SwitchProviderInput {
  /** Switch provider input properties. */
  properties?: SwitchProviderInputProperties;
}

/** Input definition for switch provider input properties. */
export interface SwitchProviderInputProperties {
  /** Target provider type. */
  targetInstanceType?: string;
  /** Provider specific settings. */
  providerSpecificDetails?: SwitchProviderSpecificInputUnion;
}

/** Provider specific switch provider input. */
export interface SwitchProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
}

/** Target compute size collection. */
export interface TargetComputeSizeCollection {
  /** The list of target compute sizes. */
  value?: TargetComputeSize[];
  /** The value of next link. */
  nextLink?: string;
}

/** Represents applicable recovery vm sizes. */
export interface TargetComputeSize {
  /** The Id. */
  id?: string;
  /** The name. */
  name?: string;
  /** The Type of the object. */
  type?: string;
  /** The custom data. */
  properties?: TargetComputeSizeProperties;
}

/** Represents applicable recovery vm sizes properties. */
export interface TargetComputeSizeProperties {
  /** Target compute size name. */
  name?: string;
  /** Target compute size display name. */
  friendlyName?: string;
  /** The maximum cpu cores count supported by target compute size. */
  cpuCoresCount?: number;
  /**
   * The Available vCPUs supported by target compute size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vCPUsAvailable?: number;
  /** The maximum memory in GB supported by target compute size. */
  memoryInGB?: number;
  /** The maximum data disks count supported by target compute size. */
  maxDataDiskCount?: number;
  /** The maximum Nics count supported by target compute size. */
  maxNicsCount?: number;
  /** The reasons why the target compute size is not applicable for the protected item. */
  errors?: ComputeSizeErrorDetails[];
  /** The value indicating whether the target compute size supports high Iops. */
  highIopsSupported?: string;
  /** The supported HyperV Generations. */
  hyperVGenerations?: string[];
}

/** Represents the error used to indicate why the target compute size is not applicable. */
export interface ComputeSizeErrorDetails {
  /** The error message. */
  message?: string;
  /** The severity of the error. */
  severity?: string;
}

/** Input definition for test failover. */
export interface TestFailoverInput {
  /** Test failover input properties. */
  properties: TestFailoverInputProperties;
}

/** Input definition for test failover input properties. */
export interface TestFailoverInputProperties {
  /** Test failover direction. */
  failoverDirection?: string;
  /** Network type to be used for test failover. */
  networkType?: string;
  /** The id of the network to be used for test failover. */
  networkId?: string;
  /** Provider specific settings. */
  providerSpecificDetails?: TestFailoverProviderSpecificInputUnion;
}

/** Provider specific test failover input. */
export interface TestFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2A"
    | "HyperVReplicaAzure"
    | "InMageAzureV2"
    | "InMageRcm"
    | "InMage";
}

/** Input definition for test failover cleanup. */
export interface TestFailoverCleanupInput {
  /** Test failover cleanup input properties. */
  properties: TestFailoverCleanupInputProperties;
}

/** Input definition for test failover cleanup input properties. */
export interface TestFailoverCleanupInputProperties {
  /** Test failover cleanup comments. */
  comments?: string;
}

/** Input definition for unplanned failover. */
export interface UnplannedFailoverInput {
  /** Unplanned failover input properties. */
  properties: UnplannedFailoverInputProperties;
}

/** Input definition for unplanned failover input properties. */
export interface UnplannedFailoverInputProperties {
  /** Failover direction. */
  failoverDirection?: string;
  /** Source site operations status. */
  sourceSiteOperations?: string;
  /** Provider specific settings. */
  providerSpecificDetails?: UnplannedFailoverProviderSpecificInputUnion;
}

/** Provider specific unplanned failover input. */
export interface UnplannedFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2A"
    | "HyperVReplicaAzure"
    | "InMageAzureV2"
    | "InMageRcm"
    | "InMage";
}

/** Update appliance for replication protected item input. */
export interface UpdateApplianceForReplicationProtectedItemInput {
  /** Update appliance replication protected item properties. */
  properties: UpdateApplianceForReplicationProtectedItemInputProperties;
}

/** Update appliance for protected item input properties. */
export interface UpdateApplianceForReplicationProtectedItemInputProperties {
  /** The target appliance Id. */
  targetApplianceId: string;
  /** The provider specific input to update replication protected item. */
  providerSpecificDetails: UpdateApplianceForReplicationProtectedItemProviderSpecificInputUnion;
}

/** Update replication protected item provider specific input. */
export interface UpdateApplianceForReplicationProtectedItemProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
}

/** Request to update the mobility service on a protected item. */
export interface UpdateMobilityServiceRequest {
  /** The properties of the update mobility service request. */
  properties?: UpdateMobilityServiceRequestProperties;
}

/** The properties of an update mobility service request. */
export interface UpdateMobilityServiceRequestProperties {
  /** The CS run as account Id. */
  runAsAccountId?: string;
}

/** Protection container mapping collection class. */
export interface ProtectionContainerMappingCollection {
  /** List of container mappings. */
  value?: ProtectionContainerMapping[];
  /** Link to fetch rest of the data. */
  nextLink?: string;
}

/** Protection container mapping properties. */
export interface ProtectionContainerMappingProperties {
  /** Paired protection container ARM ID. */
  targetProtectionContainerId?: string;
  /** Friendly name of paired container. */
  targetProtectionContainerFriendlyName?: string;
  /** Provider specific provider details. */
  providerSpecificDetails?: ProtectionContainerMappingProviderSpecificDetailsUnion;
  /** Health of pairing. */
  health?: string;
  /** Health error. */
  healthErrorDetails?: HealthError[];
  /** Policy ARM Id. */
  policyId?: string;
  /** Association Status. */
  state?: string;
  /** Friendly name of source protection container. */
  sourceProtectionContainerFriendlyName?: string;
  /** Friendly name of source fabric. */
  sourceFabricFriendlyName?: string;
  /** Friendly name of target fabric. */
  targetFabricFriendlyName?: string;
  /** Friendly name of replication policy. */
  policyFriendlyName?: string;
}

/** Container mapping provider specific details. */
export interface ProtectionContainerMappingProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A" | "InMageRcm" | "VMwareCbt";
}

/** Configure pairing input. */
export interface CreateProtectionContainerMappingInput {
  /** Configure protection input properties. */
  properties?: CreateProtectionContainerMappingInputProperties;
}

/** Configure pairing input properties. */
export interface CreateProtectionContainerMappingInputProperties {
  /** The target unique protection container name. */
  targetProtectionContainerId?: string;
  /** Applicable policy. */
  policyId?: string;
  /** Provider specific input for pairing. */
  providerSpecificInput?: ReplicationProviderSpecificContainerMappingInputUnion;
}

/** Provider specific input for pairing operations. */
export interface ReplicationProviderSpecificContainerMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A" | "VMwareCbt";
}

/** Container pairing update input. */
export interface UpdateProtectionContainerMappingInput {
  /** Update protection container mapping input properties. */
  properties?: UpdateProtectionContainerMappingInputProperties;
}

/** Container pairing update input. */
export interface UpdateProtectionContainerMappingInputProperties {
  /** Provider specific input for updating protection container mapping. */
  providerSpecificInput?: ReplicationProviderSpecificUpdateContainerMappingInputUnion;
}

/** Provider specific input for update pairing operations. */
export interface ReplicationProviderSpecificUpdateContainerMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A" | "InMageRcm";
}

/** Container unpairing input. */
export interface RemoveProtectionContainerMappingInput {
  /** Configure protection input properties. */
  properties?: RemoveProtectionContainerMappingInputProperties;
}

/** Unpairing input properties. */
export interface RemoveProtectionContainerMappingInputProperties {
  /** Provider specific input for unpairing. */
  providerSpecificInput?: ReplicationProviderContainerUnmappingInput;
}

/** Provider specific input for unpairing operations. */
export interface ReplicationProviderContainerUnmappingInput {
  /** The class type. */
  instanceType?: string;
}

/** Switch protection input. */
export interface SwitchProtectionInput {
  /** Switch protection properties. */
  properties?: SwitchProtectionInputProperties;
}

/** Switch protection input properties. */
export interface SwitchProtectionInputProperties {
  /** The unique replication protected item name. */
  replicationProtectedItemName?: string;
  /** Provider specific switch protection input. */
  providerSpecificDetails?: SwitchProtectionProviderSpecificInputUnion;
}

/** Provider specific switch protection input. */
export interface SwitchProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** Collection of providers. */
export interface RecoveryServicesProviderCollection {
  /** The Servers details. */
  value?: RecoveryServicesProvider[];
  /** The value of next link. */
  nextLink?: string;
}

/** Recovery services provider properties. */
export interface RecoveryServicesProviderProperties {
  /** Type of the site. */
  fabricType?: string;
  /** Friendly name of the DRA. */
  friendlyName?: string;
  /** The provider version. */
  providerVersion?: string;
  /** The fabric provider. */
  serverVersion?: string;
  /** DRA version status. */
  providerVersionState?: string;
  /** Expiry date of the version. */
  providerVersionExpiryDate?: Date;
  /** The fabric friendly name. */
  fabricFriendlyName?: string;
  /** Time when last heartbeat was sent by the DRA. */
  lastHeartBeat?: Date;
  /** A value indicating whether DRA is responsive. */
  connectionStatus?: string;
  /** Number of protected VMs currently managed by the DRA. */
  protectedItemCount?: number;
  /** The scenarios allowed on this provider. */
  allowedScenarios?: string[];
  /** The recovery services provider health error details. */
  healthErrorDetails?: HealthError[];
  /** The DRA Id. */
  draIdentifier?: string;
  /** The machine Id. */
  machineId?: string;
  /** The machine name. */
  machineName?: string;
  /** The Bios Id. */
  biosId?: string;
  /** The authentication identity details. */
  authenticationIdentityDetails?: IdentityProviderDetails;
  /** The resource access identity details. */
  resourceAccessIdentityDetails?: IdentityProviderDetails;
  /** The data plane authentication identity details. */
  dataPlaneAuthenticationIdentityDetails?: IdentityProviderDetails;
  /** The provider version details. */
  providerVersionDetails?: VersionDetails;
}

/** Identity provider details. */
export interface IdentityProviderDetails {
  /** The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services. */
  tenantId?: string;
  /** The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services. */
  applicationId?: string;
  /** The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services. */
  objectId?: string;
  /** The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services. */
  audience?: string;
  /** The base authority for Azure Active Directory authentication. */
  aadAuthority?: string;
}

/** Version related details. */
export interface VersionDetails {
  /** The agent version. */
  version?: string;
  /** Version expiry date. */
  expiryDate?: Date;
  /** A value indicating whether security update required. */
  status?: AgentVersionStatus;
}

/** Input required to add a provider. */
export interface AddRecoveryServicesProviderInput {
  /** The properties of an add provider request. */
  properties: AddRecoveryServicesProviderInputProperties;
}

/** The properties of an add provider request. */
export interface AddRecoveryServicesProviderInputProperties {
  /** The name of the machine where the provider is getting added. */
  machineName: string;
  /** The Id of the machine where the provider is getting added. */
  machineId?: string;
  /** The Bios Id of the machine. */
  biosId?: string;
  /** The identity provider input for DRA authentication. */
  authenticationIdentityInput: IdentityProviderInput;
  /** The identity provider input for resource access. */
  resourceAccessIdentityInput: IdentityProviderInput;
  /** The identity provider input for data plane authentication. */
  dataPlaneAuthenticationIdentityInput?: IdentityProviderInput;
}

/** Identity provider input. */
export interface IdentityProviderInput {
  /** The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services. */
  tenantId: string;
  /** The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services. */
  applicationId: string;
  /** The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services. */
  objectId: string;
  /** The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services. */
  audience: string;
  /** The base authority for Azure Active Directory authentication. */
  aadAuthority: string;
}

/** Collection of storage details. */
export interface StorageClassificationCollection {
  /** The storage details. */
  value?: StorageClassification[];
  /** The value of next link. */
  nextLink?: string;
}

/** Storage object properties. */
export interface StorageClassificationProperties {
  /** Friendly name of the Storage classification. */
  friendlyName?: string;
}

/** Collection of storage mapping details. */
export interface StorageClassificationMappingCollection {
  /** The storage details. */
  value?: StorageClassificationMapping[];
  /** The value of next link. */
  nextLink?: string;
}

/** Storage mapping properties. */
export interface StorageClassificationMappingProperties {
  /** Target storage object Id. */
  targetStorageClassificationId?: string;
}

/** Storage mapping input. */
export interface StorageClassificationMappingInput {
  /** Storage mapping input properties. */
  properties?: StorageMappingInputProperties;
}

/** Storage mapping input properties. */
export interface StorageMappingInputProperties {
  /** The ID of the storage object. */
  targetStorageClassificationId?: string;
}

/** Collection of vCenter details. */
export interface VCenterCollection {
  /** The vCenter details. */
  value?: VCenter[];
  /** The value of next link. */
  nextLink?: string;
}

/** vCenter properties. */
export interface VCenterProperties {
  /** Friendly name of the vCenter. */
  friendlyName?: string;
  /** VCenter internal ID. */
  internalId?: string;
  /** The time when the last heartbeat was received by vCenter. */
  lastHeartbeat?: Date;
  /** The VCenter discovery status. */
  discoveryStatus?: string;
  /** The process server Id. */
  processServerId?: string;
  /** The IP address of the vCenter. */
  ipAddress?: string;
  /** The infrastructure Id of vCenter. */
  infrastructureId?: string;
  /** The port number for discovery. */
  port?: string;
  /** The account Id which has privileges to discover the vCenter. */
  runAsAccountId?: string;
  /** The ARM resource name of the fabric containing this VCenter. */
  fabricArmResourceName?: string;
  /** The health errors for this VCenter. */
  healthErrors?: HealthError[];
}

/** Input required to add vCenter. */
export interface AddVCenterRequest {
  /** The properties of an add vCenter request. */
  properties?: AddVCenterRequestProperties;
}

/** The properties of an add vCenter request. */
export interface AddVCenterRequestProperties {
  /** The friendly name of the vCenter. */
  friendlyName?: string;
  /** The IP address of the vCenter to be discovered. */
  ipAddress?: string;
  /** The process server Id from where the discovery is orchestrated. */
  processServerId?: string;
  /** The port number for discovery. */
  port?: string;
  /** The account Id which has privileges to discover the vCenter. */
  runAsAccountId?: string;
}

/** Input required to update vCenter. */
export interface UpdateVCenterRequest {
  /** The update VCenter Request Properties. */
  properties?: UpdateVCenterRequestProperties;
}

/** The properties of an update vCenter request. */
export interface UpdateVCenterRequestProperties {
  /** The friendly name of the vCenter. */
  friendlyName?: string;
  /** The IP address of the vCenter to be discovered. */
  ipAddress?: string;
  /** The process server Id from where the update can be orchestrated. */
  processServerId?: string;
  /** The port number for discovery. */
  port?: string;
  /** The CS account Id which has privileges to update the vCenter. */
  runAsAccountId?: string;
}

/** Collection of jobs. */
export interface JobCollection {
  /** The list of jobs. */
  value?: Job[];
  /** The value of next link. */
  nextLink?: string;
}

/** Job custom data details. */
export interface JobProperties {
  /** The activity id. */
  activityId?: string;
  /** The ScenarioName. */
  scenarioName?: string;
  /** The DisplayName. */
  friendlyName?: string;
  /** The status of the Job. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other. */
  state?: string;
  /** The description of the state of the Job. For e.g. - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped. */
  stateDescription?: string;
  /** The tasks. */
  tasks?: ASRTask[];
  /** The errors. */
  errors?: JobErrorDetails[];
  /** The start time. */
  startTime?: Date;
  /** The end time. */
  endTime?: Date;
  /** The Allowed action the job. */
  allowedActions?: string[];
  /** The affected Object Id. */
  targetObjectId?: string;
  /** The name of the affected object. */
  targetObjectName?: string;
  /** The type of the affected object which is of Microsoft.Azure.SiteRecovery.V2015_11_10.AffectedObjectType class. */
  targetInstanceType?: string;
  /** The custom job details like test failover job details. */
  customDetails?: JobDetailsUnion;
}

/** Task of the Job. */
export interface ASRTask {
  /** The Id. */
  taskId?: string;
  /** The unique Task name. */
  name?: string;
  /** The start time. */
  startTime?: Date;
  /** The end time. */
  endTime?: Date;
  /** The state/actions applicable on this task. */
  allowedActions?: string[];
  /** The name. */
  friendlyName?: string;
  /** The State. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other. */
  state?: string;
  /** The description of the task state. For example - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped. */
  stateDescription?: string;
  /** The type of task. Details in CustomDetails property depend on this type. */
  taskType?: string;
  /** The custom task details based on the task type. */
  customDetails?: TaskTypeDetailsUnion;
  /** The custom task details based on the task type, if the task type is GroupTaskDetails or one of the types derived from it. */
  groupTaskCustomDetails?: GroupTaskDetailsUnion;
  /** The task error details. */
  errors?: JobErrorDetails[];
}

/** Task details based on specific task type. */
export interface TaskTypeDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "AutomationRunbookTaskDetails"
    | "ConsistencyCheckTaskDetails"
    | "JobTaskDetails"
    | "FabricReplicationGroupTaskDetails"
    | "ManualActionTaskDetails"
    | "ScriptActionTaskDetails"
    | "VirtualMachineTaskDetails"
    | "VmNicUpdatesTaskDetails";
}

/** This class represents the group task details when parent child relationship exists in the drill down. */
export interface GroupTaskDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "InlineWorkflowTaskDetails"
    | "RecoveryPlanGroupTaskDetails"
    | "RecoveryPlanShutdownGroupTaskDetails";
  /** The child tasks. */
  childTasks?: ASRTask[];
}

/** This class contains the error details per object. */
export interface JobErrorDetails {
  /** The Service error details. */
  serviceErrorDetails?: ServiceError;
  /** The Provider error details. */
  providerErrorDetails?: ProviderError;
  /** Error level of error. */
  errorLevel?: string;
  /** The creation time of job error. */
  creationTime?: Date;
  /** The Id of the task. */
  taskId?: string;
}

/** ASR error model. */
export interface ServiceError {
  /** Error code. */
  code?: string;
  /** Error message. */
  message?: string;
  /** Possible causes of error. */
  possibleCauses?: string;
  /** Recommended action to resolve error. */
  recommendedAction?: string;
  /** Activity Id. */
  activityId?: string;
}

/** This class contains the error details per object. */
export interface ProviderError {
  /** The Error code. */
  errorCode?: number;
  /** The Error message. */
  errorMessage?: string;
  /** The Provider error Id. */
  errorId?: string;
  /** The possible causes for the error. */
  possibleCauses?: string;
  /** The recommended action to resolve the error. */
  recommendedAction?: string;
}

/** Job details based on specific job type. */
export interface JobDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "AsrJobDetails"
    | "ExportJobDetails"
    | "FailoverJobDetails"
    | "SwitchProtectionJobDetails"
    | "TestFailoverJobDetails";
  /** The affected object properties like source server, source cloud, target server, target cloud etc. based on the workflow object details. */
  affectedObjectDetails?: { [propertyName: string]: string };
}

/** Resume job params. */
export interface ResumeJobParams {
  /** Resume job properties. */
  properties?: ResumeJobParamsProperties;
}

/** Resume job properties. */
export interface ResumeJobParamsProperties {
  /** Resume job comments. */
  comments?: string;
}

/** Query parameter to enumerate jobs. */
export interface JobQueryParameter {
  /** Date time to get jobs from. */
  startTime?: string;
  /** Date time to get jobs upto. */
  endTime?: string;
  /** The Id of the fabric to search jobs under. */
  fabricId?: string;
  /** The type of objects. */
  affectedObjectTypes?: string;
  /** The states of the job to be filtered can be in. */
  jobStatus?: string;
  /** The output type of the jobs. */
  jobOutputType?: ExportJobOutputSerializationType;
  /** The job Name. */
  jobName?: string;
  /** The timezone offset for the location of the request (in minutes). */
  timezoneOffset?: number;
}

/** Protection Profile Collection details. */
export interface PolicyCollection {
  /** The policy details. */
  value?: Policy[];
  /** The value of next link. */
  nextLink?: string;
}

/** Protection profile custom data details. */
export interface PolicyProperties {
  /** The FriendlyName. */
  friendlyName?: string;
  /** The ReplicationChannelSetting. */
  providerSpecificDetails?: PolicyProviderSpecificDetailsUnion;
}

/** Base class for Provider specific details for policies. */
export interface PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2A"
    | "HyperVReplicaAzure"
    | "HyperVReplicaBasePolicyDetails"
    | "HyperVReplica2012R2"
    | "HyperVReplica2012"
    | "InMageAzureV2"
    | "InMageBasePolicyDetails"
    | "InMage"
    | "InMageRcmFailback"
    | "InMageRcm"
    | "VMwareCbt";
}

/** Protection Policy input. */
export interface CreatePolicyInput {
  /** Policy creation properties. */
  properties?: CreatePolicyInputProperties;
}

/** Policy creation properties. */
export interface CreatePolicyInputProperties {
  /** The ReplicationProviderSettings. */
  providerSpecificInput?: PolicyProviderSpecificInputUnion;
}

/** Base class for provider specific input. */
export interface PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2ACrossClusterMigration"
    | "A2A"
    | "HyperVReplicaAzure"
    | "HyperVReplica2012"
    | "HyperVReplica2012R2"
    | "InMageAzureV2"
    | "InMage"
    | "InMageRcmFailback"
    | "InMageRcm"
    | "VMwareCbt";
}

/** Update policy input. */
export interface UpdatePolicyInput {
  /** The ReplicationProviderSettings. */
  properties?: UpdatePolicyInputProperties;
}

/** Policy update properties. */
export interface UpdatePolicyInputProperties {
  /** The ReplicationProviderSettings. */
  replicationProviderSettings?: PolicyProviderSpecificInputUnion;
}

/** Replication protection intent objects collection. */
export interface ReplicationProtectionIntentCollection {
  /** The Replication protection intent details. */
  value?: ReplicationProtectionIntent[];
  /** The value of next link. */
  nextLink?: string;
}

/** Replication protection intent custom data details. */
export interface ReplicationProtectionIntentProperties {
  /** The name. */
  friendlyName?: string;
  /**
   * The job Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobId?: string;
  /**
   * The job state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobState?: string;
  /**
   * A value indicating whether the intent object is active.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isActive?: boolean;
  /**
   * The creation time in UTC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTimeUTC?: string;
  /** The Replication provider custom settings. */
  providerSpecificDetails?: ReplicationProtectionIntentProviderSpecificSettingsUnion;
}

/** Replication provider specific settings. */
export interface ReplicationProtectionIntentProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** Create protection intent input. */
export interface CreateProtectionIntentInput {
  /** Create protection intent input properties. */
  properties?: CreateProtectionIntentProperties;
}

/** Create protection intent input properties. */
export interface CreateProtectionIntentProperties {
  /** The ReplicationProviderInput. For A2A provider, it will be A2ACreateProtectionIntentInput object. */
  providerSpecificDetails?: CreateProtectionIntentProviderSpecificDetailsUnion;
}

/** Create protection intent provider specific input. */
export interface CreateProtectionIntentProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** Recovery plan collection details. */
export interface RecoveryPlanCollection {
  /** The list of recovery plans. */
  value?: RecoveryPlan[];
  /** The value of next link. */
  nextLink?: string;
}

/** Recovery plan properties. */
export interface RecoveryPlanProperties {
  /** The friendly name. */
  friendlyName?: string;
  /** The primary fabric Id. */
  primaryFabricId?: string;
  /** The primary fabric friendly name. */
  primaryFabricFriendlyName?: string;
  /** The recovery fabric Id. */
  recoveryFabricId?: string;
  /** The recovery fabric friendly name. */
  recoveryFabricFriendlyName?: string;
  /** The failover deployment model. */
  failoverDeploymentModel?: string;
  /** The list of replication providers. */
  replicationProviders?: string[];
  /** The list of allowed operations. */
  allowedOperations?: string[];
  /** The start time of the last planned failover. */
  lastPlannedFailoverTime?: Date;
  /** The start time of the last unplanned failover. */
  lastUnplannedFailoverTime?: Date;
  /** The start time of the last test failover. */
  lastTestFailoverTime?: Date;
  /** The current scenario details. */
  currentScenario?: CurrentScenarioDetails;
  /** The recovery plan status. */
  currentScenarioStatus?: string;
  /** The recovery plan status description. */
  currentScenarioStatusDescription?: string;
  /** The recovery plan groups. */
  groups?: RecoveryPlanGroup[];
  /** The provider id and provider specific details. */
  providerSpecificDetails?: RecoveryPlanProviderSpecificDetailsUnion[];
}

/** Recovery plan group details. */
export interface RecoveryPlanGroup {
  /** The group type. */
  groupType: RecoveryPlanGroupType;
  /** The list of protected items. */
  replicationProtectedItems?: RecoveryPlanProtectedItem[];
  /** The start group actions. */
  startGroupActions?: RecoveryPlanAction[];
  /** The end group actions. */
  endGroupActions?: RecoveryPlanAction[];
}

/** Recovery plan protected item. */
export interface RecoveryPlanProtectedItem {
  /** The ARM Id of the recovery plan protected item. */
  id?: string;
  /** The virtual machine Id. */
  virtualMachineId?: string;
}

/** Recovery plan action details. */
export interface RecoveryPlanAction {
  /** The action name. */
  actionName: string;
  /** The list of failover types. */
  failoverTypes: ReplicationProtectedItemOperation[];
  /** The list of failover directions. */
  failoverDirections: PossibleOperationsDirections[];
  /** The custom details. */
  customDetails: RecoveryPlanActionDetailsUnion;
}

/** Recovery plan action custom details. */
export interface RecoveryPlanActionDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "AutomationRunbookActionDetails"
    | "ManualActionDetails"
    | "ScriptActionDetails";
}

/** Recovery plan provider specific details. */
export interface RecoveryPlanProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** Create recovery plan input class. */
export interface CreateRecoveryPlanInput {
  /** Recovery plan creation properties. */
  properties: CreateRecoveryPlanInputProperties;
}

/** Recovery plan creation properties. */
export interface CreateRecoveryPlanInputProperties {
  /** The primary fabric Id. */
  primaryFabricId: string;
  /** The recovery fabric Id. */
  recoveryFabricId: string;
  /** The failover deployment model. */
  failoverDeploymentModel?: FailoverDeploymentModel;
  /** The recovery plan groups. */
  groups: RecoveryPlanGroup[];
  /** The provider specific input. */
  providerSpecificInput?: RecoveryPlanProviderSpecificInputUnion[];
}

/** Recovery plan provider specific input base class. */
export interface RecoveryPlanProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** Update recovery plan input class. */
export interface UpdateRecoveryPlanInput {
  /** Recovery plan update properties. */
  properties?: UpdateRecoveryPlanInputProperties;
}

/** Recovery plan update properties. */
export interface UpdateRecoveryPlanInputProperties {
  /** The recovery plan groups. */
  groups?: RecoveryPlanGroup[];
}

/** Recovery plan planned failover input. */
export interface RecoveryPlanPlannedFailoverInput {
  /** The recovery plan planned failover input properties. */
  properties: RecoveryPlanPlannedFailoverInputProperties;
}

/** Recovery plan planned failover input properties. */
export interface RecoveryPlanPlannedFailoverInputProperties {
  /** The failover direction. */
  failoverDirection: PossibleOperationsDirections;
  /** The provider specific properties. */
  providerSpecificDetails?: RecoveryPlanProviderSpecificFailoverInputUnion[];
}

/** Recovery plan provider specific failover input. */
export interface RecoveryPlanProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "A2A"
    | "HyperVReplicaAzureFailback"
    | "HyperVReplicaAzure"
    | "InMageAzureV2"
    | "InMage"
    | "InMageRcmFailback"
    | "InMageRcm";
}

/** Recovery plan test failover input. */
export interface RecoveryPlanTestFailoverInput {
  /** The recovery plan test failover input properties. */
  properties: RecoveryPlanTestFailoverInputProperties;
}

/** Recovery plan test failover input properties. */
export interface RecoveryPlanTestFailoverInputProperties {
  /** The failover direction. */
  failoverDirection: PossibleOperationsDirections;
  /** The network type to be used for test failover. */
  networkType: string;
  /** The Id of the network to be used for test failover. */
  networkId?: string;
  /** The provider specific properties. */
  providerSpecificDetails?: RecoveryPlanProviderSpecificFailoverInputUnion[];
}

/** Recovery plan test failover cleanup input. */
export interface RecoveryPlanTestFailoverCleanupInput {
  /** The recovery plan test failover cleanup input properties. */
  properties: RecoveryPlanTestFailoverCleanupInputProperties;
}

/** Recovery plan test failover cleanup input properties. */
export interface RecoveryPlanTestFailoverCleanupInputProperties {
  /** The test failover cleanup comments. */
  comments?: string;
}

/** Recovery plan unplanned failover input. */
export interface RecoveryPlanUnplannedFailoverInput {
  /** The recovery plan unplanned failover input properties. */
  properties: RecoveryPlanUnplannedFailoverInputProperties;
}

/** Recovery plan unplanned failover input properties. */
export interface RecoveryPlanUnplannedFailoverInputProperties {
  /** The failover direction. */
  failoverDirection: PossibleOperationsDirections;
  /** A value indicating whether source site operations are required. */
  sourceSiteOperations: SourceSiteOperations;
  /** The provider specific properties. */
  providerSpecificDetails?: RecoveryPlanProviderSpecificFailoverInputUnion[];
}

/** Supported operating systems properties. */
export interface SupportedOSProperties {
  /** The supported operating systems property list. */
  supportedOsList?: SupportedOSProperty[];
}

/** Supported operating systems property. */
export interface SupportedOSProperty {
  /** The replication provider type. */
  instanceType?: string;
  /** The list of supported operating systems. */
  supportedOs?: SupportedOSDetails[];
}

/** Supported operating system details. */
export interface SupportedOSDetails {
  /** The name. */
  osName?: string;
  /** The type. */
  osType?: string;
  /** The list of version for operating system. */
  osVersions?: OSVersionWrapper[];
}

/** Wrapper model for OSVersion to include version and service pack info. */
export interface OSVersionWrapper {
  /** The version. */
  version?: string;
  /** The service pack. */
  servicePack?: string;
}

/** class to define the health summary of the Vault. */
export interface VaultHealthProperties {
  /** The list of errors on the vault. */
  vaultErrors?: HealthError[];
  /** The list of the health detail of the protected items in the vault. */
  protectedItemsHealth?: ResourceHealthSummary;
  /** The list of the health detail of the fabrics in the vault. */
  fabricsHealth?: ResourceHealthSummary;
  /** The list of the health detail of the containers in the vault. */
  containersHealth?: ResourceHealthSummary;
}

/** Base class to define the health summary of the resources contained under an Arm resource. */
export interface ResourceHealthSummary {
  /** The count of total resources under the container. */
  resourceCount?: number;
  /** The list of summary of health errors across the resources under the container. */
  issues?: HealthErrorSummary[];
  /** The categorized resource counts. */
  categorizedResourceCounts?: { [propertyName: string]: number };
}

/** class to define the summary of the health error details. */
export interface HealthErrorSummary {
  /** The code of the health error. */
  summaryCode?: string;
  /** The category of the health error. */
  category?: HealthErrorCategory;
  /** Severity of error. */
  severity?: Severity;
  /** The summary message of the health error. */
  summaryMessage?: string;
  /** The type of affected ARM resource. */
  affectedResourceType?: string;
  /** The sub type of any subcomponent within the ARM resource that this might be applicable. Value remains null if not applicable. */
  affectedResourceSubtype?: string;
  /** The list of affected resource correlation Ids. This can be used to uniquely identify the count of items affected by a specific category and severity as well as count of item affected by an specific issue. */
  affectedResourceCorrelationIds?: string[];
}

/** Vault setting collection. */
export interface VaultSettingCollection {
  /** The list of vault setting. */
  value?: VaultSetting[];
  /** The value of next link. */
  nextLink?: string;
}

/** Vault setting properties. */
export interface VaultSettingProperties {
  /** The migration solution ARM Id. */
  migrationSolutionId?: string;
  /** VMware to Azure provider type. */
  vmwareToAzureProviderType?: string;
}

/** Input to create vault setting. */
export interface VaultSettingCreationInput {
  /** Vault setting creation input properties. */
  properties: VaultSettingCreationInputProperties;
}

/** Input to create vault setting. */
export interface VaultSettingCreationInputProperties {
  /** The migration solution Id. */
  migrationSolutionId?: string;
  /** VMware to Azure provider type. */
  vmwareToAzureProviderType?: string;
}

/** A2A disk input details. */
export interface A2AVmDiskInputDetails {
  /** The disk Uri. */
  diskUri: string;
  /** The recovery VHD storage account Id. */
  recoveryAzureStorageAccountId: string;
  /** The primary staging storage account Id. */
  primaryStagingAzureStorageAccountId: string;
}

/** A2A managed disk input details. */
export interface A2AVmManagedDiskInputDetails {
  /** The disk Id. */
  diskId: string;
  /** The primary staging storage account Arm Id. */
  primaryStagingAzureStorageAccountId: string;
  /** The target resource group Arm Id. */
  recoveryResourceGroupId: string;
  /** The replica disk type. Its an optional value and will be same as source disk type if not user provided. */
  recoveryReplicaDiskAccountType?: string;
  /** The target disk type after failover. Its an optional value and will be same as source disk type if not user provided. */
  recoveryTargetDiskAccountType?: string;
  /** The recovery disk encryption set Id. */
  recoveryDiskEncryptionSetId?: string;
  /** The recovery disk encryption information (for one / single pass flows). */
  diskEncryptionInfo?: DiskEncryptionInfo;
}

/** Recovery disk encryption info (BEK and KEK). */
export interface DiskEncryptionInfo {
  /** The recovery KeyVault reference for secret. */
  diskEncryptionKeyInfo?: DiskEncryptionKeyInfo;
  /** The recovery KeyVault reference for key. */
  keyEncryptionKeyInfo?: KeyEncryptionKeyInfo;
}

/** Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows). */
export interface DiskEncryptionKeyInfo {
  /** The secret url / identifier. */
  secretIdentifier?: string;
  /** The KeyVault resource ARM id for secret. */
  keyVaultResourceArmId?: string;
}

/** Key Encryption Key (KEK) information. */
export interface KeyEncryptionKeyInfo {
  /** The key URL / identifier. */
  keyIdentifier?: string;
  /** The KeyVault resource ARM Id for key. */
  keyVaultResourceArmId?: string;
}

/** Protection Profile custom input. */
export interface ProtectionProfileCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing" | "New";
}

/** Storage account custom input. */
export interface StorageAccountCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
}

/** Recovery Availability Set custom input. */
export interface RecoveryAvailabilitySetCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
}

/** Recovery Virtual network custom input. */
export interface RecoveryVirtualNetworkCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing" | "New";
}

/** Recovery Proximity placement group custom input. */
export interface RecoveryProximityPlacementGroupCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
}

/** Azure VM unmanaged disk input details. */
export interface A2AProtectionIntentDiskInputDetails {
  /** The disk Uri. */
  diskUri: string;
  /** The recovery VHD storage account input. */
  recoveryAzureStorageAccountCustomInput?: StorageAccountCustomDetailsUnion;
  /** The primary staging storage account input. */
  primaryStagingStorageAccountCustomInput?: StorageAccountCustomDetailsUnion;
}

/** Azure VM managed disk input details. */
export interface A2AProtectionIntentManagedDiskInputDetails {
  /** The disk Id. */
  diskId: string;
  /** The primary staging storage account input. */
  primaryStagingStorageAccountCustomInput?: StorageAccountCustomDetailsUnion;
  /** The recovery resource group input. */
  recoveryResourceGroupCustomInput?: RecoveryResourceGroupCustomDetailsUnion;
  /** The replica disk type. Its an optional value and will be same as source disk type if not user provided. */
  recoveryReplicaDiskAccountType?: string;
  /** The target disk type after failover. Its an optional value and will be same as source disk type if not user provided. */
  recoveryTargetDiskAccountType?: string;
  /** The recovery disk encryption set Id. */
  recoveryDiskEncryptionSetId?: string;
  /** The recovery disk encryption information (for one / single pass flows). */
  diskEncryptionInfo?: DiskEncryptionInfo;
}

/** Recovery Resource Group custom input. */
export interface RecoveryResourceGroupCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
}

/** Extended location of the resource. */
export interface ExtendedLocation {
  /** The name of the extended location. */
  name: string;
  /** The extended location type. */
  type: ExtendedLocationType;
}

/** ExtendedLocation details data. */
export interface A2AExtendedLocationDetails {
  /** The primary ExtendedLocation. */
  primaryExtendedLocation?: ExtendedLocation;
  /** The recovery ExtendedLocation. */
  recoveryExtendedLocation?: ExtendedLocation;
}

/** A2A protected disk details. */
export interface A2AProtectedDiskDetails {
  /** The disk uri. */
  diskUri?: string;
  /** The recovery disk storage account. */
  recoveryAzureStorageAccountId?: string;
  /** The primary disk storage account. */
  primaryDiskAzureStorageAccountId?: string;
  /** Recovery disk uri. */
  recoveryDiskUri?: string;
  /** The disk name. */
  diskName?: string;
  /** The disk capacity in bytes. */
  diskCapacityInBytes?: number;
  /** The primary staging storage account. */
  primaryStagingAzureStorageAccountId?: string;
  /** The type of disk. */
  diskType?: string;
  /** A value indicating whether resync is required for this disk. */
  resyncRequired?: boolean;
  /** The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property. */
  monitoringPercentageCompletion?: number;
  /** The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property. */
  monitoringJobType?: string;
  /** The data pending for replication in MB at staging account. */
  dataPendingInStagingStorageAccountInMB?: number;
  /** The data pending at source virtual machine in MB. */
  dataPendingAtSourceAgentInMB?: number;
  /** The disk state. */
  diskState?: string;
  /** The disk level operations list. */
  allowedDiskLevelOperation?: string[];
  /** A value indicating whether vm has encrypted os disk or not. */
  isDiskEncrypted?: boolean;
  /** The secret URL / identifier (BEK). */
  secretIdentifier?: string;
  /** The KeyVault resource id for secret (BEK). */
  dekKeyVaultArmId?: string;
  /** A value indicating whether disk key got encrypted or not. */
  isDiskKeyEncrypted?: boolean;
  /** The key URL / identifier (KEK). */
  keyIdentifier?: string;
  /** The KeyVault resource id for key (KEK). */
  kekKeyVaultArmId?: string;
  /** The failover name for the managed disk. */
  failoverDiskName?: string;
  /** The test failover name for the managed disk. */
  tfoDiskName?: string;
}

/** A2A protected managed disk details. */
export interface A2AProtectedManagedDiskDetails {
  /** The managed disk Arm id. */
  diskId?: string;
  /** The recovery disk resource group Arm Id. */
  recoveryResourceGroupId?: string;
  /** Recovery target disk Arm Id. */
  recoveryTargetDiskId?: string;
  /** Recovery replica disk Arm Id. */
  recoveryReplicaDiskId?: string;
  /** Recovery original target disk Arm Id. */
  recoveryOrignalTargetDiskId?: string;
  /** The replica disk type. Its an optional value and will be same as source disk type if not user provided. */
  recoveryReplicaDiskAccountType?: string;
  /** The target disk type after failover. Its an optional value and will be same as source disk type if not user provided. */
  recoveryTargetDiskAccountType?: string;
  /** The recovery disk encryption set Id. */
  recoveryDiskEncryptionSetId?: string;
  /** The primary disk encryption set Id. */
  primaryDiskEncryptionSetId?: string;
  /** The disk name. */
  diskName?: string;
  /** The disk capacity in bytes. */
  diskCapacityInBytes?: number;
  /** The primary staging storage account. */
  primaryStagingAzureStorageAccountId?: string;
  /** The type of disk. */
  diskType?: string;
  /** A value indicating whether resync is required for this disk. */
  resyncRequired?: boolean;
  /** The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property. */
  monitoringPercentageCompletion?: number;
  /** The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property. */
  monitoringJobType?: string;
  /** The data pending for replication in MB at staging account. */
  dataPendingInStagingStorageAccountInMB?: number;
  /** The data pending at source virtual machine in MB. */
  dataPendingAtSourceAgentInMB?: number;
  /** The disk state. */
  diskState?: string;
  /** The disk level operations list. */
  allowedDiskLevelOperation?: string[];
  /** A value indicating whether vm has encrypted os disk or not. */
  isDiskEncrypted?: boolean;
  /** The secret URL / identifier (BEK). */
  secretIdentifier?: string;
  /** The KeyVault resource id for secret (BEK). */
  dekKeyVaultArmId?: string;
  /** A value indicating whether disk key got encrypted or not. */
  isDiskKeyEncrypted?: boolean;
  /** The key URL / identifier (KEK). */
  keyIdentifier?: string;
  /** The KeyVault resource id for key (KEK). */
  kekKeyVaultArmId?: string;
  /** The failover name for the managed disk. */
  failoverDiskName?: string;
  /** The test failover name for the managed disk. */
  tfoDiskName?: string;
}

/** A2A unprotected disk details. */
export interface A2AUnprotectedDiskDetails {
  /** The source lun Id for the data disk. */
  diskLunId?: number;
  /** A value indicating whether the disk auto protection is enabled. */
  diskAutoProtectionStatus?: AutoProtectionOfDataDisk;
}

/** Hyper V VM network details. */
export interface VMNicDetails {
  /** The nic Id. */
  nicId?: string;
  /** The replica nic Id. */
  replicaNicId?: string;
  /** The source nic ARM Id. */
  sourceNicArmId?: string;
  /** VM network name. */
  vMNetworkName?: string;
  /** Recovery VM network Id. */
  recoveryVMNetworkId?: string;
  /** The IP configurations of the NIC. */
  ipConfigs?: IPConfigDetails[];
  /** Selection type for failover. */
  selectionType?: string;
  /** The id of the NSG associated with the NIC. */
  recoveryNetworkSecurityGroupId?: string;
  /** A value indicating whether the NIC has accelerated networking enabled. */
  enableAcceleratedNetworkingOnRecovery?: boolean;
  /** The network to be used by NIC during test failover. */
  tfoVMNetworkId?: string;
  /** The NSG to be used by NIC during test failover. */
  tfoNetworkSecurityGroupId?: string;
  /** Whether the TFO NIC has accelerated networking enabled. */
  enableAcceleratedNetworkingOnTfo?: boolean;
  /** The name of the NIC to be used when creating target NICs. */
  recoveryNicName?: string;
  /** The resource group of the NIC to be used when creating target NICs. */
  recoveryNicResourceGroupName?: string;
  /** A value indicating whether an existing NIC is allowed to be reused during failover subject to availability. */
  reuseExistingNic?: boolean;
  /** The name of the NIC to be used when creating target NICs in TFO. */
  tfoRecoveryNicName?: string;
  /** The resource group of the NIC to be used when creating target NICs in TFO. */
  tfoRecoveryNicResourceGroupName?: string;
  /** A value indicating whether an existing NIC is allowed to be reused during test failover subject to availability. */
  tfoReuseExistingNic?: boolean;
  /** Target NIC name. */
  targetNicName?: string;
}

export interface IPConfigDetails {
  name?: string;
  isPrimary?: boolean;
  subnetName?: string;
  staticIPAddress?: string;
  ipAddressType?: string;
  isSeletedForFailover?: boolean;
  recoverySubnetName?: string;
  recoveryStaticIPAddress?: string;
  recoveryIPAddressType?: string;
  recoveryPublicIPAddressId?: string;
  recoveryLBBackendAddressPoolIds?: string[];
  tfoSubnetName?: string;
  tfoStaticIPAddress?: string;
  tfoPublicIPAddressId?: string;
  tfoLBBackendAddressPoolIds?: string[];
}

/** Azure to Azure VM synced configuration details. */
export interface AzureToAzureVmSyncedConfigDetails {
  /** The Azure VM tags. */
  tags?: { [propertyName: string]: string };
  /** The Azure VM input endpoints. */
  inputEndpoints?: InputEndpoint[];
}

export interface InputEndpoint {
  endpointName?: string;
  privatePort?: number;
  publicPort?: number;
  protocol?: string;
}

/** A2A Vm managed disk update details. */
export interface A2AVmManagedDiskUpdateDetails {
  /** The disk Id. */
  diskId?: string;
  /** The target disk type before failover. */
  recoveryTargetDiskAccountType?: string;
  /** The replica disk type before failover. */
  recoveryReplicaDiskAccountType?: string;
  /** The recovery os disk encryption information. */
  diskEncryptionInfo?: DiskEncryptionInfo;
  /** The target disk name for unplanned failover operation. */
  failoverDiskName?: string;
  /** The target disk name for test failover operation. */
  tfoDiskName?: string;
}

/** Zone details data. */
export interface A2AZoneDetails {
  /** Source zone info. */
  source?: string;
  /** The target zone info. */
  target?: string;
}

/** Agent details. */
export interface AgentDetails {
  /**
   * The Id of the agent running on the server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentId?: string;
  /**
   * The Id of the machine to which the agent is registered.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly machineId?: string;
  /**
   * The machine BIOS Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly biosId?: string;
  /**
   * The machine FQDN.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * The disks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly disks?: AgentDiskDetails[];
}

/** Agent disk details. */
export interface AgentDiskDetails {
  /**
   * The disk Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskId?: string;
  /**
   * The disk name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskName?: string;
  /**
   * A value indicating whether the disk is the OS disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOSDisk?: string;
  /**
   * The disk capacity in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacityInBytes?: number;
  /**
   * The lun of disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lunId?: number;
}

/** Query parameter to get appliance. */
export interface ApplianceQueryParameter {
  /** The providerType to be used for fetching appliance details. */
  providerType?: string;
}

/** Disk details for E2A provider. */
export interface AzureVmDiskDetails {
  /** VHD type. */
  vhdType?: string;
  /** The VHD id. */
  vhdId?: string;
  /** The disk resource id. */
  diskId?: string;
  /** VHD name. */
  vhdName?: string;
  /** Max side in MB. */
  maxSizeMB?: string;
  /** Blob uri of the Azure disk. */
  targetDiskLocation?: string;
  /** The target Azure disk name. */
  targetDiskName?: string;
  /** Ordinal\LunId of the disk for the Azure VM. */
  lunId?: string;
  /** The DiskEncryptionSet ARM ID. */
  diskEncryptionSetId?: string;
  /** The custom target Azure disk name. */
  customTargetDiskName?: string;
}

/** This class stores the monitoring details for consistency check of inconsistent Protected Entity. */
export interface InconsistentVmDetails {
  /** The Vm name. */
  vmName?: string;
  /** The Cloud name. */
  cloudName?: string;
  /** The list of details regarding state of the Protected Entity in SRS and On prem. */
  details?: string[];
  /** The list of error ids. */
  errorIds?: string[];
}

/** The datastore details of the MT. */
export interface DataStore {
  /** The symbolic name of data store. */
  symbolicName?: string;
  /** The uuid of data store. */
  uuid?: string;
  /** The capacity of data store in GBs. */
  capacity?: string;
  /** The free space of data store in GBs. */
  freeSpace?: string;
  /** The type of data store. */
  type?: string;
}

/** Onprem disk details data. */
export interface DiskDetails {
  /** The hard disk max size in MB. */
  maxSizeMB?: number;
  /** The type of the volume. */
  vhdType?: string;
  /** The VHD Id. */
  vhdId?: string;
  /** The VHD name. */
  vhdName?: string;
}

/** Volume details. */
export interface DiskVolumeDetails {
  /** The volume label. */
  label?: string;
  /** The volume name. */
  name?: string;
}

/** DRA details. */
export interface DraDetails {
  /**
   * The DRA Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The DRA name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The DRA Bios Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly biosId?: string;
  /**
   * The version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The last heartbeat received from the DRA.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthError[];
  /**
   * The count of protected items which are protected in forward direction.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly forwardProtectedItemCount?: number;
  /**
   * The count of protected items which are protected in reverse direction.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reverseProtectedItemCount?: number;
}

/** Implements the event query parameter. */
export interface EventQueryParameter {
  /** The source id of the events to be queried. */
  eventCode?: string;
  /** The severity of the events to be queried. */
  severity?: string;
  /** The type of the events to be queried. */
  eventType?: string;
  /** The affected object server id of the events to be queried. */
  fabricName?: string;
  /** The affected object name of the events to be queried. */
  affectedObjectFriendlyName?: string;
  /** The affected object correlationId for the events to be queried. */
  affectedObjectCorrelationId?: string;
  /** The start time of the time range within which the events are to be queried. */
  startTime?: Date;
  /** The end time of the time range within which the events are to be queried. */
  endTime?: Date;
}

/** Query parameter to get fabric. */
export interface FabricQueryParameter {
  /** A value indicating whether the zone to zone mappings are to be returned. */
  zoneToZoneMappings?: string;
  /** A value indicating whether the agent details are to be fetched. */
  fetchAgentDetails?: string;
  /** The BIOS Id to be used for fetching agent details. */
  biosId?: string;
  /** The FQDN to be used for fetching agent details. */
  fqdn?: string;
  /** The type of the discovered machine to be used for fetching agent details. */
  discoveryType?: string;
  /** The OS type to be used for fetching agent details. */
  osType?: string;
}

/** This class contains the minimal job details required to navigate to the desired drill down. */
export interface JobEntity {
  /** The job id. */
  jobId?: string;
  /** The job display name. */
  jobFriendlyName?: string;
  /** The object id. */
  targetObjectId?: string;
  /** The object name. */
  targetObjectName?: string;
  /** The workflow affected object type. */
  targetInstanceType?: string;
  /** The job name. Enum type ScenarioName. */
  jobScenarioName?: string;
}

/** Failover details for a replication protected item. */
export interface FailoverReplicationProtectedItemDetails {
  /** The name. */
  name?: string;
  /** The friendly name. */
  friendlyName?: string;
  /** The test Vm name. */
  testVmName?: string;
  /** The test Vm friendly name. */
  testVmFriendlyName?: string;
  /** The network connection status. */
  networkConnectionStatus?: string;
  /** The network friendly name. */
  networkFriendlyName?: string;
  /** The network subnet. */
  subnet?: string;
  /** The recovery point Id. */
  recoveryPointId?: string;
  /** The recovery point time. */
  recoveryPointTime?: Date;
}

/** Hyper-V host details. */
export interface HyperVHostDetails {
  /**
   * The Hyper-V host Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The Hyper-V host name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The Mars agent version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marsAgentVersion?: string;
}

/** Disk input details. */
export interface HyperVReplicaAzureDiskInputDetails {
  /** The DiskId. */
  diskId?: string;
  /** The LogStorageAccountId. */
  logStorageAccountId?: string;
  /** The DiskType. */
  diskType?: DiskAccountType;
  /** The DiskEncryptionSet ARM ID. */
  diskEncryptionSetId?: string;
}

/** Hyper-V Managed disk details. */
export interface HyperVReplicaAzureManagedDiskDetails {
  /** The disk Id. */
  diskId?: string;
  /** Seed managed disk Id. */
  seedManagedDiskId?: string;
  /** The replica disk type. */
  replicaDiskType?: string;
  /** The disk encryption set ARM Id. */
  diskEncryptionSetId?: string;
}

/** Initial replication details. */
export interface InitialReplicationDetails {
  /** Initial replication type. */
  initialReplicationType?: string;
  /** The initial replication progress percentage. */
  initialReplicationProgressPercentage?: string;
}

/** Disk Details. */
export interface OSDetails {
  /** VM Disk details. */
  osType?: string;
  /** Product type. */
  productType?: string;
  /** The OSEdition. */
  osEdition?: string;
  /** The OS Version. */
  oSVersion?: string;
  /** The OS Major Version. */
  oSMajorVersion?: string;
  /** The OS Minor Version. */
  oSMinorVersion?: string;
}

/** Disk input for update. */
export interface UpdateDiskInput {
  /** The disk Id. */
  diskId: string;
  /** The target disk name. */
  targetDiskName?: string;
}

/** The details of the InMage agent. */
export interface InMageAgentDetails {
  /** The agent version. */
  agentVersion?: string;
  /** A value indicating whether installed agent needs to be updated. */
  agentUpdateStatus?: string;
  /** A value indicating whether reboot is required after update is applied. */
  postUpdateRebootStatus?: string;
  /** Agent expiry date. */
  agentExpiryDate?: Date;
}

/** Disk input details. */
export interface InMageAzureV2DiskInputDetails {
  /** The DiskId. */
  diskId?: string;
  /** The LogStorageAccountId. */
  logStorageAccountId?: string;
  /** The DiskType. */
  diskType?: DiskAccountType;
  /** The DiskEncryptionSet ARM ID. */
  diskEncryptionSetId?: string;
}

/** InMageAzureV2 Managed disk details. */
export interface InMageAzureV2ManagedDiskDetails {
  /** The disk id. */
  diskId?: string;
  /** Seed managed disk Id. */
  seedManagedDiskId?: string;
  /** The replica disk type. */
  replicaDiskType?: string;
  /** The DiskEncryptionSet ARM ID. */
  diskEncryptionSetId?: string;
  /** The target disk name. */
  targetDiskName?: string;
}

/** InMageAzureV2 protected disk details. */
export interface InMageAzureV2ProtectedDiskDetails {
  /** The disk id. */
  diskId?: string;
  /** The disk name. */
  diskName?: string;
  /** The protection stage. */
  protectionStage?: string;
  /** The health error code for the disk. */
  healthErrorCode?: string;
  /** The RPO in seconds. */
  rpoInSeconds?: number;
  /** A value indicating whether resync is required for this disk. */
  resyncRequired?: string;
  /** The resync progress percentage. */
  resyncProgressPercentage?: number;
  /** The resync duration in seconds. */
  resyncDurationInSeconds?: number;
  /** The disk capacity in bytes. */
  diskCapacityInBytes?: number;
  /** The disk file system capacity in bytes. */
  fileSystemCapacityInBytes?: number;
  /** The source data transit in MB. */
  sourceDataInMegaBytes?: number;
  /** The PS data transit in MB. */
  psDataInMegaBytes?: number;
  /** The target data transit in MB. */
  targetDataInMegaBytes?: number;
  /** A value indicating whether disk is resized. */
  diskResized?: string;
  /** The last RPO calculated time. */
  lastRpoCalculatedTime?: Date;
  /** The resync processed bytes. */
  resyncProcessedBytes?: number;
  /** The resync total transferred bytes. */
  resyncTotalTransferredBytes?: number;
  /** The resync last 15 minutes transferred bytes. */
  resyncLast15MinutesTransferredBytes?: number;
  /** The last data transfer time in UTC. */
  resyncLastDataTransferTimeUTC?: Date;
  /** The resync start time. */
  resyncStartTime?: Date;
  /** The Progress Health. */
  progressHealth?: string;
  /** The Progress Status. */
  progressStatus?: string;
  /** The seconds to take for switch provider. */
  secondsToTakeSwitchProvider?: number;
}

/** InMageAzureV2 switch provider blocking error details. */
export interface InMageAzureV2SwitchProviderBlockingErrorDetails {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
  /**
   * The possible causes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly possibleCauses?: string;
  /**
   * The recommended action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendedAction?: string;
  /**
   * The error message parameters.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessageParameters?: { [propertyName: string]: string };
  /**
   * The error tags.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorTags?: { [propertyName: string]: string };
}

/** InMageAzureV2 switch provider details. */
export interface InMageAzureV2SwitchProviderDetails {
  /**
   * The target vault Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetVaultId?: string;
  /**
   * The target resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetResourceId?: string;
  /**
   * The target fabric Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetFabricId?: string;
  /**
   * The target appliance Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetApplianceId?: string;
}

/** VMware/Physical specific Disk Details. */
export interface InMageDiskDetails {
  /** The disk Id. */
  diskId?: string;
  /** The disk name. */
  diskName?: string;
  /** The disk size in MB. */
  diskSizeInMB?: string;
  /** Whether disk is system disk or data disk. */
  diskType?: string;
  /** Whether disk is dynamic disk or basic disk. */
  diskConfiguration?: string;
  /** Volumes of the disk. */
  volumeList?: DiskVolumeDetails[];
}

/** DiskExclusionInput when doing enable protection of virtual machine in InMage provider. */
export interface InMageDiskExclusionInput {
  /** The volume label based option for disk exclusion. */
  volumeOptions?: InMageVolumeExclusionOptions[];
  /** The guest disk signature based option for disk exclusion. */
  diskSignatureOptions?: InMageDiskSignatureExclusionOptions[];
}

/** Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider. */
export interface InMageVolumeExclusionOptions {
  /** The volume label. The disk having any volume with this label will be excluded from replication. */
  volumeLabel?: string;
  /** The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false. */
  onlyExcludeIfSingleVolume?: string;
}

/** Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider. */
export interface InMageDiskSignatureExclusionOptions {
  /** The guest signature of disk to be excluded from replication. */
  diskSignature?: string;
}

/** InMageFabric switch provider blocking error details. */
export interface InMageFabricSwitchProviderBlockingErrorDetails {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
  /**
   * The possible causes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly possibleCauses?: string;
  /**
   * The recommended action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendedAction?: string;
  /**
   * The error message parameters.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessageParameters?: { [propertyName: string]: string };
  /**
   * The error tags.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorTags?: { [propertyName: string]: string };
}

/** InMage protected disk details. */
export interface InMageProtectedDiskDetails {
  /** The disk id. */
  diskId?: string;
  /** The disk name. */
  diskName?: string;
  /** The protection stage. */
  protectionStage?: string;
  /** The health error code for the disk. */
  healthErrorCode?: string;
  /** The RPO in seconds. */
  rpoInSeconds?: number;
  /** A value indicating whether resync is required for this disk. */
  resyncRequired?: string;
  /** The resync progress percentage. */
  resyncProgressPercentage?: number;
  /** The resync duration in seconds. */
  resyncDurationInSeconds?: number;
  /** The disk capacity in bytes. */
  diskCapacityInBytes?: number;
  /** The file system capacity in bytes. */
  fileSystemCapacityInBytes?: number;
  /** The source data transit in MB. */
  sourceDataInMB?: number;
  /** The PS data transit in MB. */
  psDataInMB?: number;
  /** The target data transit in MB. */
  targetDataInMB?: number;
  /** A value indicating whether disk is resized. */
  diskResized?: string;
  /** The last RPO calculated time. */
  lastRpoCalculatedTime?: Date;
  /** The resync processed bytes. */
  resyncProcessedBytes?: number;
  /** The resync total transferred bytes. */
  resyncTotalTransferredBytes?: number;
  /** The resync last 15 minutes transferred bytes. */
  resyncLast15MinutesTransferredBytes?: number;
  /** The last data transfer time in UTC. */
  resyncLastDataTransferTimeUTC?: Date;
  /** The resync start time. */
  resyncStartTime?: Date;
  /** The Progress Health. */
  progressHealth?: string;
  /** The Progress Status. */
  progressStatus?: string;
}

/** InMageRcm source agent upgrade blocking error details. */
export interface InMageRcmAgentUpgradeBlockingErrorDetails {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
  /**
   * The possible causes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly possibleCauses?: string;
  /**
   * The recommended action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendedAction?: string;
  /**
   * The error message parameters.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessageParameters?: { [propertyName: string]: string };
  /**
   * The error tags.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorTags?: { [propertyName: string]: string };
}

/** InMageRcm appliance details. */
export interface InMageRcmApplianceDetails {
  /**
   * The appliance Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The fabric ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricArmId?: string;
  /**
   * The process server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processServer?: ProcessServerDetails;
  /**
   * The of RCM proxy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rcmProxy?: RcmProxyDetails;
  /**
   * The push installer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pushInstaller?: PushInstallerDetails;
  /**
   * The replication agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationAgent?: ReplicationAgentDetails;
  /**
   * The reprotect agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reprotectAgent?: ReprotectAgentDetails;
  /**
   * The Mars agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marsAgent?: MarsAgentDetails;
  /**
   * The DRA.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dra?: DraDetails;
  /**
   * The switch provider blocking error information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly switchProviderBlockingErrorDetails?: InMageRcmFabricSwitchProviderBlockingErrorDetails[];
}

/** Process server details. */
export interface ProcessServerDetails {
  /**
   * The process server Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The process server name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The process server Bios Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly biosId?: string;
  /**
   * The fabric object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectId?: string;
  /**
   * The process server Fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * The list of IP addresses for communicating with the RCM component.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddresses?: string[];
  /**
   * The version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The last heartbeat received from the process server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The total memory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalMemoryInBytes?: number;
  /**
   * The available memory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableMemoryInBytes?: number;
  /**
   * The used memory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly usedMemoryInBytes?: number;
  /**
   * The memory usage percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memoryUsagePercentage?: number;
  /**
   * The total disk space.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalSpaceInBytes?: number;
  /**
   * The available disk space.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableSpaceInBytes?: number;
  /**
   * The used disk space.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly usedSpaceInBytes?: number;
  /**
   * The free disk space percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly freeSpacePercentage?: number;
  /**
   * The uploading pending data in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly throughputUploadPendingDataInBytes?: number;
  /**
   * The throughput in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly throughputInBytes?: number;
  /**
   * The processor usage percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processorUsagePercentage?: number;
  /**
   * The throughput status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly throughputStatus?: RcmComponentStatus;
  /**
   * The system load.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemLoad?: number;
  /**
   * The system load status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemLoadStatus?: RcmComponentStatus;
  /**
   * The disk usage status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskUsageStatus?: RcmComponentStatus;
  /**
   * The memory usage status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memoryUsageStatus?: RcmComponentStatus;
  /**
   * The processor usage status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processorUsageStatus?: RcmComponentStatus;
  /**
   * The health of the process server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthError[];
  /**
   * The protected item count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemCount?: number;
  /**
   * The historic health of the process server based on the health in last 24 hours.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly historicHealth?: ProtectionHealth;
}

/** RCM proxy details. */
export interface RcmProxyDetails {
  /**
   * The RCM proxy Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The RCM proxy name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The RCM proxy Bios Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly biosId?: string;
  /**
   * The fabric object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectId?: string;
  /**
   * The RCM proxy Fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * The client authentication type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientAuthenticationType?: string;
  /**
   * The version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The last heartbeat received from the RCM proxy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The health of the RCM proxy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthError[];
}

/** Push installer details. */
export interface PushInstallerDetails {
  /**
   * The push installer Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The push installer name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The push installer Bios Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly biosId?: string;
  /**
   * The fabric object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectId?: string;
  /**
   * The push installer Fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * The version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The last heartbeat received from the push installer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The health of the push installer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthError[];
}

/** Replication agent details. */
export interface ReplicationAgentDetails {
  /**
   * The replication agent Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The replication agent name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The replication agent Bios Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly biosId?: string;
  /**
   * The fabric object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectId?: string;
  /**
   * The replication agent Fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * The version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The last heartbeat received from the replication agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The health of the replication agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthError[];
}

/** Reprotect agent details. */
export interface ReprotectAgentDetails {
  /**
   * The reprotect agent Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The reprotect agent name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The reprotect agent Bios Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly biosId?: string;
  /**
   * The fabric object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectId?: string;
  /**
   * The reprotect agent Fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * The version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The last heartbeat received from the reprotect agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The health of the reprotect agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthError[];
  /**
   * The protected item count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemCount?: number;
  /**
   * The list of accessible datastores fetched from discovery.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accessibleDatastores?: string[];
  /**
   * The Vcenter Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vcenterId?: string;
  /**
   * The last time when SDS information discovered in SRS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastDiscoveryInUtc?: Date;
}

/** Mars agent details. */
export interface MarsAgentDetails {
  /**
   * The Mars agent Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The Mars agent name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The Mars agent Bios Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly biosId?: string;
  /**
   * The fabric object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectId?: string;
  /**
   * The Mars agent Fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * The version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The last heartbeat received from the Mars agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The health of the Mars agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthError[];
}

/** InMageRcmFabric switch provider blocking error details. */
export interface InMageRcmFabricSwitchProviderBlockingErrorDetails {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
  /**
   * The possible causes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly possibleCauses?: string;
  /**
   * The recommended action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendedAction?: string;
  /**
   * The error message parameters.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessageParameters?: { [propertyName: string]: string };
  /**
   * The error tags.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorTags?: { [propertyName: string]: string };
}

/** InMageRcm discovered protected VM details. */
export interface InMageRcmDiscoveredProtectedVmDetails {
  /**
   * The VCenter Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vCenterId?: string;
  /**
   * The VCenter fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vCenterFqdn?: string;
  /**
   * The list of datastores.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly datastores?: string[];
  /**
   * The list of IP addresses.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddresses?: string[];
  /**
   * The VMware tools status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmwareToolsStatus?: string;
  /**
   * The VM power status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly powerStatus?: string;
  /**
   * The VM fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmFqdn?: string;
  /**
   * The VM's OS name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
  /**
   * The SDS created timestamp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdTimestamp?: Date;
  /**
   * The SDS updated timestamp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedTimestamp?: Date;
  /**
   * A value indicating whether the VM is deleted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDeleted?: boolean;
  /**
   * The last time when SDS information discovered in SRS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastDiscoveryTimeInUtc?: Date;
}

/** InMageRcm disk input. */
export interface InMageRcmDiskInput {
  /** The disk Id. */
  diskId: string;
  /** The log storage account ARM Id. */
  logStorageAccountId: string;
  /** The disk type. */
  diskType: DiskAccountType;
  /** The DiskEncryptionSet ARM Id. */
  diskEncryptionSetId?: string;
}

/** InMageRcm disk input. */
export interface InMageRcmDisksDefaultInput {
  /** The log storage account ARM Id. */
  logStorageAccountId: string;
  /** The disk type. */
  diskType: DiskAccountType;
  /** The DiskEncryptionSet ARM Id. */
  diskEncryptionSetId?: string;
}

/** InMageRcmFailback discovered VM details. */
export interface InMageRcmFailbackDiscoveredProtectedVmDetails {
  /**
   * The VCenter Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vCenterId?: string;
  /**
   * The VCenter fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vCenterFqdn?: string;
  /**
   * The list of datastores.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly datastores?: string[];
  /**
   * The list of IP addresses.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddresses?: string[];
  /**
   * The VMware tools status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmwareToolsStatus?: string;
  /**
   * The VM power status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly powerStatus?: string;
  /**
   * The VM fqdn.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmFqdn?: string;
  /**
   * The VM's OS name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
  /**
   * The SDS created timestamp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdTimestamp?: Date;
  /**
   * The SDS updated timestamp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly updatedTimestamp?: Date;
  /**
   * A value indicating whether the VM is deleted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDeleted?: boolean;
  /**
   * The last time when SDS information discovered in SRS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastDiscoveryTimeInUtc?: Date;
}

/** InMageRcmFailback mobility agent details. */
export interface InMageRcmFailbackMobilityAgentDetails {
  /**
   * The agent version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The latest agent version available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestVersion?: string;
  /**
   * The driver version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly driverVersion?: string;
  /**
   * The latest upgradeable version available without reboot.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestUpgradableVersionWithoutReboot?: string;
  /**
   * The agent version expiry date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentVersionExpiryDate?: Date;
  /**
   * The driver version expiry date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly driverVersionExpiryDate?: Date;
  /**
   * The time of the last heartbeat received from the agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The whether update is possible or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reasonsBlockingUpgrade?: AgentUpgradeBlockedReason[];
  /**
   * A value indicating whether agent is upgradeable or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isUpgradeable?: string;
}

/** InMageRcmFailback NIC details. */
export interface InMageRcmFailbackNicDetails {
  /**
   * The mac address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly macAddress?: string;
  /**
   * The network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /**
   * The adapter type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly adapterType?: string;
  /**
   * The IP address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceIpAddress?: string;
}

/** InMageRcmFailback protected disk details. */
export interface InMageRcmFailbackProtectedDiskDetails {
  /**
   * The disk Id (reported by source agent).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskId?: string;
  /**
   * The disk name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskName?: string;
  /**
   * A value indicating whether the disk is the OS disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOSDisk?: string;
  /**
   * The disk capacity in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacityInBytes?: number;
  /**
   * The disk Uuid (reported by vCenter).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskUuid?: string;
  /**
   * The data pending in log data store in MB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPendingInLogDataStoreInMB?: number;
  /**
   * The data pending at source agent in MB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPendingAtSourceAgentInMB?: number;
  /**
   * A value indicating whether initial replication is complete or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isInitialReplicationComplete?: string;
  /** The initial replication details. */
  irDetails?: InMageRcmFailbackSyncDetails;
  /** The resync details. */
  resyncDetails?: InMageRcmFailbackSyncDetails;
  /**
   * The last sync time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSyncTime?: Date;
}

/** InMageRcmFailback disk level sync details. */
export interface InMageRcmFailbackSyncDetails {
  /**
   * The progress health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly progressHealth?: DiskReplicationProgressHealth;
  /**
   * The transferred bytes from source VM to azure for the disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferredBytes?: number;
  /**
   * The bytes transferred in last 15 minutes from source VM to target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly last15MinutesTransferredBytes?: number;
  /**
   * The time of the last data transfer from source VM to target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastDataTransferTimeUtc?: string;
  /**
   * The total processed bytes. This includes bytes that are transferred from source VM to target and matched bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processedBytes?: number;
  /**
   * The start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: string;
  /**
   * The last refresh time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRefreshTime?: string;
  /**
   * Progress in percentage. Progress percentage is calculated based on processed bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly progressPercentage?: number;
}

/** InMageRcm last source agent upgrade error details. */
export interface InMageRcmLastAgentUpgradeErrorDetails {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
  /**
   * The possible causes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly possibleCauses?: string;
  /**
   * The recommended action.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendedAction?: string;
  /**
   * The error message parameters.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessageParameters?: { [propertyName: string]: string };
  /**
   * The error tags.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorTags?: { [propertyName: string]: string };
}

/** InMageRcm mobility agent details. */
export interface InMageRcmMobilityAgentDetails {
  /**
   * The agent version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The latest agent version available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestVersion?: string;
  /**
   * The latest agent version release date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestAgentReleaseDate?: string;
  /**
   * The driver version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly driverVersion?: string;
  /**
   * The latest upgradeable version available without reboot.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestUpgradableVersionWithoutReboot?: string;
  /**
   * The agent version expiry date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentVersionExpiryDate?: Date;
  /**
   * The driver version expiry date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly driverVersionExpiryDate?: Date;
  /**
   * The time of the last heartbeat received from the agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeatUtc?: Date;
  /**
   * The whether update is possible or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reasonsBlockingUpgrade?: AgentUpgradeBlockedReason[];
  /**
   * A value indicating whether agent is upgradeable or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isUpgradeable?: string;
}

/** InMageRcm NIC details. */
export interface InMageRcmNicDetails {
  /**
   * The NIC Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nicId?: string;
  /** A value indicating whether this is the primary NIC. */
  isPrimaryNic?: string;
  /** A value indicating whether this NIC is selected for failover. */
  isSelectedForFailover?: string;
  /**
   * The source IP address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceIPAddress?: string;
  /**
   * The source IP address type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceIPAddressType?: EthernetAddressType;
  /**
   * Source network Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceNetworkId?: string;
  /**
   * Source subnet name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceSubnetName?: string;
  /** The target IP address. */
  targetIPAddress?: string;
  /** The target IP address type. */
  targetIPAddressType?: EthernetAddressType;
  /** Target subnet name. */
  targetSubnetName?: string;
  /** Test subnet name. */
  testSubnetName?: string;
  /** The test IP address. */
  testIPAddress?: string;
  /** The test IP address type. */
  testIPAddressType?: EthernetAddressType;
}

/** InMageRcm NIC input. */
export interface InMageRcmNicInput {
  /** The NIC Id. */
  nicId: string;
  /** A value indicating whether this is the primary NIC. */
  isPrimaryNic: string;
  /** A value indicating whether this NIC is selected for failover. */
  isSelectedForFailover?: string;
  /** Target subnet name. */
  targetSubnetName?: string;
  /** The target static IP address. */
  targetStaticIPAddress?: string;
  /** The test subnet name. */
  testSubnetName?: string;
  /** The test static IP address. */
  testStaticIPAddress?: string;
}

/** InMageRcm protected disk details. */
export interface InMageRcmProtectedDiskDetails {
  /**
   * The disk Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskId?: string;
  /**
   * The disk name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskName?: string;
  /**
   * A value indicating whether the disk is the OS disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOSDisk?: string;
  /**
   * The disk capacity in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacityInBytes?: number;
  /**
   * The log storage account ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logStorageAccountId?: string;
  /**
   * The DiskEncryptionSet ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskEncryptionSetId?: string;
  /**
   * The ARM Id of the seed managed disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly seedManagedDiskId?: string;
  /**
   * The uri of the seed blob.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly seedBlobUri?: string;
  /**
   * The ARM Id of the target managed disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetManagedDiskId?: string;
  /** The disk type. */
  diskType?: DiskAccountType;
  /**
   * The data pending in log data store in MB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPendingInLogDataStoreInMB?: number;
  /**
   * The data pending at source agent in MB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPendingAtSourceAgentInMB?: number;
  /**
   * A value indicating whether initial replication is complete or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isInitialReplicationComplete?: string;
  /** The initial replication details. */
  irDetails?: InMageRcmSyncDetails;
  /** The resync details. */
  resyncDetails?: InMageRcmSyncDetails;
}

/** InMageRcm disk level sync details. */
export interface InMageRcmSyncDetails {
  /**
   * The progress health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly progressHealth?: DiskReplicationProgressHealth;
  /**
   * The transferred bytes from source VM to azure for the disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferredBytes?: number;
  /**
   * The bytes transferred in last 15 minutes from source VM to azure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly last15MinutesTransferredBytes?: number;
  /**
   * The time of the last data transfer from source VM to azure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastDataTransferTimeUtc?: string;
  /**
   * The total processed bytes. This includes bytes that are transferred from source VM to azure and matched bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processedBytes?: number;
  /**
   * The start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: string;
  /**
   * The last refresh time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRefreshTime?: string;
  /**
   * Progress in percentage. Progress percentage is calculated based on processed bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly progressPercentage?: number;
}

/** Details of the OS Disk. */
export interface OSDiskDetails {
  /** The id of the disk containing the OS. */
  osVhdId?: string;
  /** The type of the OS on the VM. */
  osType?: string;
  /** The OS disk VHD name. */
  vhdName?: string;
}

/** Details of a Master Target Server. */
export interface MasterTargetServer {
  /** The server Id. */
  id?: string;
  /** The IP address of the server. */
  ipAddress?: string;
  /** The server name. */
  name?: string;
  /** The OS type of the server. */
  osType?: string;
  /** The version of the scout component on the server. */
  agentVersion?: string;
  /** The last heartbeat received from the server. */
  lastHeartbeat?: Date;
  /** Version status. */
  versionStatus?: string;
  /** The retention volumes of Master target Server. */
  retentionVolumes?: RetentionVolume[];
  /** The list of data stores in the fabric. */
  dataStores?: DataStore[];
  /** Validation errors. */
  validationErrors?: HealthError[];
  /** Health errors. */
  healthErrors?: HealthError[];
  /** Disk count of the master target. */
  diskCount?: number;
  /** OS Version of the master target. */
  osVersion?: string;
  /** Agent expiry date. */
  agentExpiryDate?: Date;
  /** MARS agent version. */
  marsAgentVersion?: string;
  /** MARS agent expiry date. */
  marsAgentExpiryDate?: Date;
  /** Agent version details. */
  agentVersionDetails?: VersionDetails;
  /** Mars agent version details. */
  marsAgentVersionDetails?: VersionDetails;
}

/** The retention details of the MT. */
export interface RetentionVolume {
  /** The volume name. */
  volumeName?: string;
  /** The volume capacity. */
  capacityInBytes?: number;
  /** The free space available in this volume. */
  freeSpaceInBytes?: number;
  /** The threshold percentage. */
  thresholdPercentage?: number;
}

/** Query parameter to enumerate migration items. */
export interface MigrationItemsQueryParameter {
  /** The source fabric name filter. */
  sourceFabricName?: string;
  /** The source container name filter. */
  sourceContainerName?: string;
  /** The replication provider type. */
  instanceType?: string;
}

/** The Mobility Service update details. */
export interface MobilityServiceUpdate {
  /** The version of the latest update. */
  version?: string;
  /** The reboot status of the update - whether it is required or not. */
  rebootStatus?: string;
  /** The OS type. */
  osType?: string;
}

/** Details of the Process Server. */
export interface ProcessServer {
  /** The Process Server's friendly name. */
  friendlyName?: string;
  /** The Process Server Id. */
  id?: string;
  /** The IP address of the server. */
  ipAddress?: string;
  /** The OS type of the server. */
  osType?: string;
  /** The version of the scout component on the server. */
  agentVersion?: string;
  /** The last heartbeat received from the server. */
  lastHeartbeat?: Date;
  /** Version status. */
  versionStatus?: string;
  /** The list of the mobility service updates available on the Process Server. */
  mobilityServiceUpdates?: MobilityServiceUpdate[];
  /** The agent generated Id. */
  hostId?: string;
  /** The servers configured with this PS. */
  machineCount?: string;
  /** The number of replication pairs configured in this PS. */
  replicationPairCount?: string;
  /** The percentage of the system load. */
  systemLoad?: string;
  /** The system load status. */
  systemLoadStatus?: string;
  /** The percentage of the CPU load. */
  cpuLoad?: string;
  /** The CPU load status. */
  cpuLoadStatus?: string;
  /** The total memory. */
  totalMemoryInBytes?: number;
  /** The available memory. */
  availableMemoryInBytes?: number;
  /** The memory usage status. */
  memoryUsageStatus?: string;
  /** The total space. */
  totalSpaceInBytes?: number;
  /** The available space. */
  availableSpaceInBytes?: number;
  /** The space usage status. */
  spaceUsageStatus?: string;
  /** The PS service status. */
  psServiceStatus?: string;
  /** The PS SSL cert expiry date. */
  sslCertExpiryDate?: Date;
  /** CS SSL cert expiry date. */
  sslCertExpiryRemainingDays?: number;
  /** OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0. */
  osVersion?: string;
  /** Health errors. */
  healthErrors?: HealthError[];
  /** Agent expiry date. */
  agentExpiryDate?: Date;
  /** The agent version details. */
  agentVersionDetails?: VersionDetails;
  /**
   * The health of Process Server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: ProtectionHealth;
  /**
   * The process server stats refresh time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly psStatsRefreshTime?: Date;
  /**
   * The uploading pending data in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly throughputUploadPendingDataInBytes?: number;
  /**
   * The throughput in MBps.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly throughputInMBps?: number;
  /**
   * The throughput in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly throughputInBytes?: number;
  /**
   * The throughput status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly throughputStatus?: string;
  /**
   * The MARS communication status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marsCommunicationStatus?: string;
  /**
   * The MARS registration status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marsRegistrationStatus?: string;
}

/** Query parameter to enumerate Protectable items. */
export interface ProtectableItemQueryParameter {
  /** State of the Protectable item query filter. */
  state?: string;
}

/** Query parameter to enumerate protected items. */
export interface ProtectedItemsQueryParameter {
  /** The source fabric name filter. */
  sourceFabricName?: string;
  /** The recovery plan filter. */
  recoveryPlanName?: string;
  /** The source fabric location filter. */
  sourceFabricLocation?: string;
  /** The fabric object Id filter. */
  fabricObjectId?: string;
  /** The vCenter name filter. */
  vCenterName?: string;
  /** The replication provider type. */
  instanceType?: string;
  /** Whether Multi VM group is auto created or specified by user. */
  multiVmGroupCreateOption?: MultiVmGroupCreateOption;
  /** The process server Id filter. */
  processServerId?: string;
}

/** Azure role assignment details. */
export interface RoleAssignment {
  /** The ARM Id of the role assignment. */
  id?: string;
  /** The name of the role assignment. */
  name?: string;
  /** Role assignment scope. */
  scope?: string;
  /** Principal Id. */
  principalId?: string;
  /** Role definition id. */
  roleDefinitionId?: string;
}

/** CS Accounts Details. */
export interface RunAsAccount {
  /** The CS RunAs account Id. */
  accountId?: string;
  /** The CS RunAs account name. */
  accountName?: string;
}

/** VMwareCbt disk input. */
export interface VMwareCbtDiskInput {
  /** The disk Id. */
  diskId: string;
  /** The disk type. */
  diskType?: DiskAccountType;
  /** A value indicating whether the disk is the OS disk. */
  isOSDisk: string;
  /** The log storage account ARM Id. */
  logStorageAccountId: string;
  /** The key vault secret name of the log storage account. */
  logStorageAccountSasSecretName: string;
  /** The DiskEncryptionSet ARM Id. */
  diskEncryptionSetId?: string;
}

/** VMwareCbt protected disk details. */
export interface VMwareCbtProtectedDiskDetails {
  /**
   * The disk id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskId?: string;
  /**
   * The disk name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskName?: string;
  /** The disk type. */
  diskType?: DiskAccountType;
  /**
   * The disk path.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskPath?: string;
  /**
   * A value indicating whether the disk is the OS disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOSDisk?: string;
  /**
   * The disk capacity in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacityInBytes?: number;
  /**
   * The log storage account ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logStorageAccountId?: string;
  /**
   * The key vault secret name of the log storage account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logStorageAccountSasSecretName?: string;
  /**
   * The DiskEncryptionSet ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskEncryptionSetId?: string;
  /**
   * The ARM Id of the seed managed disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly seedManagedDiskId?: string;
  /**
   * The uri of the seed blob.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly seedBlobUri?: string;
  /**
   * The ARM Id of the target managed disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetManagedDiskId?: string;
  /**
   * The uri of the target blob.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetBlobUri?: string;
  /** The name for the target managed disk. */
  targetDiskName?: string;
}

/** VMwareCbt NIC details. */
export interface VMwareCbtNicDetails {
  /**
   * The NIC Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nicId?: string;
  /** A value indicating whether this is the primary NIC. */
  isPrimaryNic?: string;
  /**
   * The source IP address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceIPAddress?: string;
  /**
   * The source IP address type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceIPAddressType?: EthernetAddressType;
  /**
   * Source network Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceNetworkId?: string;
  /** The target IP address. */
  targetIPAddress?: string;
  /** The target IP address type. */
  targetIPAddressType?: EthernetAddressType;
  /** Target subnet name. */
  targetSubnetName?: string;
  /** Source network Id. */
  testNetworkId?: string;
  /** Test subnet name. */
  testSubnetName?: string;
  /** The test IP address. */
  testIPAddress?: string;
  /** The test IP address type. */
  testIPAddressType?: EthernetAddressType;
  /** Target NIC name. */
  targetNicName?: string;
  /** A value indicating whether this NIC is selected for migration. */
  isSelectedForMigration?: string;
}

/** VMwareCbt NIC input. */
export interface VMwareCbtNicInput {
  /** The NIC Id. */
  nicId: string;
  /** A value indicating whether this is the primary NIC. */
  isPrimaryNic: string;
  /** Target subnet name. */
  targetSubnetName?: string;
  /** The static IP address. */
  targetStaticIPAddress?: string;
  /** A value indicating whether this NIC is selected for migration. */
  isSelectedForMigration?: string;
  /** Target NIC name. */
  targetNicName?: string;
  /** The test subnet name. */
  testSubnetName?: string;
  /** The test static IP address. */
  testStaticIPAddress?: string;
}

/** VMwareCbt disk input for update. */
export interface VMwareCbtUpdateDiskInput {
  /** The disk Id. */
  diskId: string;
  /** The target disk name. */
  targetDiskName?: string;
  /** A value indicating whether the disk is the OS disk. */
  isOSDisk?: string;
}

/** Implements the Alert class. */
export interface Alert extends Resource {
  /** Alert related data. */
  properties?: AlertProperties;
}

/** Implements the Event class. */
export interface Event extends Resource {
  /** Event related data. */
  properties?: EventProperties;
}

/** Fabric definition. */
export interface Fabric extends Resource {
  /** Fabric related data. */
  properties?: FabricProperties;
}

/** Logical network data model. */
export interface LogicalNetwork extends Resource {
  /** The Logical Network Properties. */
  properties?: LogicalNetworkProperties;
}

/** Network model. */
export interface Network extends Resource {
  /** The Network Properties. */
  properties?: NetworkProperties;
}

/** Network Mapping model. Ideally it should have been possible to inherit this class from prev version in InheritedModels as long as there is no difference in structure or method signature. Since there were no base Models for certain fields and methods viz NetworkMappingProperties and Load with required return type, the class has been introduced in its entirety with references to base models to facilitate extensions in subsequent versions. */
export interface NetworkMapping extends Resource {
  /** The Network Mapping Properties. */
  properties?: NetworkMappingProperties;
}

/** Protection container details. */
export interface ProtectionContainer extends Resource {
  /** The custom data. */
  properties?: ProtectionContainerProperties;
}

/** Migration item. */
export interface MigrationItem extends Resource {
  /** The migration item properties. */
  properties?: MigrationItemProperties;
}

/** Recovery point for a migration item. */
export interface MigrationRecoveryPoint extends Resource {
  /** Recovery point properties. */
  properties?: MigrationRecoveryPointProperties;
}

/** Replication protected item. */
export interface ProtectableItem extends Resource {
  /** The custom data. */
  properties?: ProtectableItemProperties;
}

/** Replication protected item. */
export interface ReplicationProtectedItem extends Resource {
  /** The custom data. */
  properties?: ReplicationProtectedItemProperties;
}

/** Recovery point. */
export interface RecoveryPoint extends Resource {
  /** The recovery point properties. */
  properties?: RecoveryPointProperties;
}

/** Protection container mapping object. */
export interface ProtectionContainerMapping extends Resource {
  /** The custom data. */
  properties?: ProtectionContainerMappingProperties;
}

/** Provider details. */
export interface RecoveryServicesProvider extends Resource {
  /** Provider properties. */
  properties?: RecoveryServicesProviderProperties;
}

/** Storage object definition. */
export interface StorageClassification extends Resource {
  /** Properties of the storage object. */
  properties?: StorageClassificationProperties;
}

/** Storage mapping object. */
export interface StorageClassificationMapping extends Resource {
  /** Properties of the storage mapping object. */
  properties?: StorageClassificationMappingProperties;
}

/** vCenter definition. */
export interface VCenter extends Resource {
  /** VCenter related data. */
  properties?: VCenterProperties;
}

/** Job details. */
export interface Job extends Resource {
  /** The custom data. */
  properties?: JobProperties;
}

/** Protection profile details. */
export interface Policy extends Resource {
  /** The custom data. */
  properties?: PolicyProperties;
}

/** Replication protection intent. */
export interface ReplicationProtectionIntent extends Resource {
  /** The custom data. */
  properties?: ReplicationProtectionIntentProperties;
}

/** Recovery plan details. */
export interface RecoveryPlan extends Resource {
  /** The custom details. */
  properties?: RecoveryPlanProperties;
}

/** Supported operating systems. */
export interface SupportedOperatingSystems extends Resource {
  /** The supported operating systems properties. */
  properties?: SupportedOSProperties;
}

/** Vault health details definition. */
export interface VaultHealthDetails extends Resource {
  /** The vault health related data. */
  properties?: VaultHealthProperties;
}

/** Vault setting. */
export interface VaultSetting extends Resource {
  /** The vault setting properties. */
  properties?: VaultSettingProperties;
}

/** InMageRcm appliance specific details. */
export interface InMageRcmApplianceSpecificDetails
  extends ApplianceSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /**
   * The list of appliances.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appliances?: InMageRcmApplianceDetails[];
}

/** Model class for event details of a A2A event. */
export interface A2AEventDetails extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The protected item arm name. */
  protectedItemName?: string;
  /** The azure vm arm id. */
  fabricObjectId?: string;
  /** Fabric arm name. */
  fabricName?: string;
  /** The fabric location. */
  fabricLocation?: string;
  /** Remote fabric arm name. */
  remoteFabricName?: string;
  /** Remote fabric location. */
  remoteFabricLocation?: string;
}

/** Model class for event details of a HyperVReplica E2E event. */
export interface HyperVReplica2012EventDetails
  extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplica2012";
  /** The container friendly name. */
  containerName?: string;
  /** The fabric friendly name. */
  fabricName?: string;
  /** The remote container name. */
  remoteContainerName?: string;
  /** The remote fabric name. */
  remoteFabricName?: string;
}

/** Model class for event details of a HyperVReplica blue E2E event. */
export interface HyperVReplica2012R2EventDetails
  extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplica2012R2";
  /** The container friendly name. */
  containerName?: string;
  /** The fabric friendly name. */
  fabricName?: string;
  /** The remote container name. */
  remoteContainerName?: string;
  /** The remote fabric name. */
  remoteFabricName?: string;
}

/** Model class for event details of a HyperVReplica E2A event. */
export interface HyperVReplicaAzureEventDetails
  extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** The container friendly name. */
  containerName?: string;
  /** The fabric friendly name. */
  fabricName?: string;
  /** The remote container name. */
  remoteContainerName?: string;
}

/** Abstract model class for event details of a HyperVReplica E2E event. */
export interface HyperVReplicaBaseEventDetails
  extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaBaseEventDetails";
  /** The container friendly name. */
  containerName?: string;
  /** The fabric friendly name. */
  fabricName?: string;
  /** The remote container name. */
  remoteContainerName?: string;
  /** The remote fabric name. */
  remoteFabricName?: string;
}

/** Model class for event details of a VMwareAzureV2 event. */
export interface InMageAzureV2EventDetails
  extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** InMage Event type. Takes one of the values of InMageDataContract.InMageMonitoringEventType. */
  eventType?: string;
  /** InMage Event Category. */
  category?: string;
  /** InMage Event Component. */
  component?: string;
  /** Corrective Action string for the event. */
  correctiveAction?: string;
  /** InMage Event Details. */
  details?: string;
  /** InMage Event Summary. */
  summary?: string;
  /** VMware Site name. */
  siteName?: string;
}

/** Event details for InMageRcm provider. */
export interface InMageRcmEventDetails extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /**
   * The protected item name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemName?: string;
  /**
   * The protected item name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmName?: string;
  /**
   * The latest agent version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latestAgentVersion?: string;
  /**
   * The job Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobId?: string;
  /**
   * The fabric name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricName?: string;
  /**
   * The appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applianceName?: string;
  /**
   * The server type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverType?: string;
  /**
   * The component display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly componentDisplayName?: string;
}

/** Event details for InMageRcmFailback provider. */
export interface InMageRcmFailbackEventDetails
  extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcmFailback";
  /**
   * The protected item name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemName?: string;
  /**
   * The protected item name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmName?: string;
  /**
   * The appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applianceName?: string;
  /**
   * The server type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverType?: string;
  /**
   * The component display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly componentDisplayName?: string;
}

/** Event details for VMwareCbt provider. */
export interface VMwareCbtEventDetails extends EventProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /**
   * The migration item name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationItemName?: string;
}

/** Model class for event details of a job status event. */
export interface JobStatusEventDetails extends EventSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "JobStatus";
  /** Job arm id for the event. */
  jobId?: string;
  /** JobName for the Event. */
  jobFriendlyName?: string;
  /** JobStatus for the Event. */
  jobStatus?: string;
  /** AffectedObjectType for the event. */
  affectedObjectType?: string;
}

/** Azure Fabric Specific Details. */
export interface AzureFabricSpecificDetails extends FabricSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "Azure";
  /** The Location for the Azure fabric. */
  location?: string;
  /** The container Ids for the Azure fabric. */
  containerIds?: string[];
  /** The zones. */
  zones?: A2AZoneDetails[];
  /** The ExtendedLocations. */
  extendedLocations?: A2AExtendedLocationDetails[];
}

/** HyperVSite fabric specific details. */
export interface HyperVSiteDetails extends FabricSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVSite";
  /** The list of Hyper-V hosts associated with the fabric. */
  hyperVHosts?: HyperVHostDetails[];
}

/** InMageRcm fabric specific details. */
export interface InMageRcmFabricSpecificDetails extends FabricSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /**
   * The ARM Id of the VMware site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmwareSiteId?: string;
  /**
   * The ARM Id of the physical site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly physicalSiteId?: string;
  /**
   * The service endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceEndpoint?: string;
  /**
   * The service resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceResourceId?: string;
  /**
   * The service container Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceContainerId?: string;
  /**
   * The data plane Uri.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataPlaneUri?: string;
  /**
   * The control plane Uri.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly controlPlaneUri?: string;
  /** The source agent identity details. */
  sourceAgentIdentityDetails?: IdentityProviderDetails;
  /**
   * The list of process servers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processServers?: ProcessServerDetails[];
  /**
   * The list of RCM proxies.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rcmProxies?: RcmProxyDetails[];
  /**
   * The list of push installers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pushInstallers?: PushInstallerDetails[];
  /**
   * The list of replication agents.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationAgents?: ReplicationAgentDetails[];
  /**
   * The list of reprotect agents.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reprotectAgents?: ReprotectAgentDetails[];
  /**
   * The list of Mars agents.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marsAgents?: MarsAgentDetails[];
  /**
   * The list of DRAs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dras?: DraDetails[];
  /**
   * The list of agent details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentDetails?: AgentDetails[];
}

/** VMM fabric specific details. */
export interface VmmDetails extends FabricSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMM";
}

/** Store the fabric details specific to the VMware fabric. */
export interface VMwareDetails extends FabricSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMware";
  /** The list of Process Servers associated with the fabric. */
  processServers?: ProcessServer[];
  /** The list of Master Target servers associated with the fabric. */
  masterTargetServers?: MasterTargetServer[];
  /** The list of run as accounts created on the server. */
  runAsAccounts?: RunAsAccount[];
  /** The number of replication pairs configured in this CS. */
  replicationPairCount?: string;
  /** The number of process servers. */
  processServerCount?: string;
  /** The number of source and target servers configured to talk to this CS. */
  agentCount?: string;
  /** The number of protected servers. */
  protectedServers?: string;
  /** The percentage of the system load. */
  systemLoad?: string;
  /** The system load status. */
  systemLoadStatus?: string;
  /** The percentage of the CPU load. */
  cpuLoad?: string;
  /** The CPU load status. */
  cpuLoadStatus?: string;
  /** The total memory. */
  totalMemoryInBytes?: number;
  /** The available memory. */
  availableMemoryInBytes?: number;
  /** The memory usage status. */
  memoryUsageStatus?: string;
  /** The total space. */
  totalSpaceInBytes?: number;
  /** The available space. */
  availableSpaceInBytes?: number;
  /** The space usage status. */
  spaceUsageStatus?: string;
  /** The web load. */
  webLoad?: string;
  /** The web load status. */
  webLoadStatus?: string;
  /** The database server load. */
  databaseServerLoad?: string;
  /** The database server load status. */
  databaseServerLoadStatus?: string;
  /** The CS service status. */
  csServiceStatus?: string;
  /** The IP address. */
  ipAddress?: string;
  /** The agent Version. */
  agentVersion?: string;
  /** The host name. */
  hostName?: string;
  /** The last heartbeat received from CS server. */
  lastHeartbeat?: Date;
  /** Version status. */
  versionStatus?: string;
  /** CS SSL cert expiry date. */
  sslCertExpiryDate?: Date;
  /** CS SSL cert expiry date. */
  sslCertExpiryRemainingDays?: number;
  /** PS template version. */
  psTemplateVersion?: string;
  /** Agent expiry date. */
  agentExpiryDate?: Date;
  /** The agent version details. */
  agentVersionDetails?: VersionDetails;
  /** The switch provider blocking error information. */
  switchProviderBlockingErrorDetails?: InMageFabricSwitchProviderBlockingErrorDetails[];
}

/** VMwareV2 fabric specific details. */
export interface VMwareV2FabricSpecificDetails extends FabricSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareV2";
  /**
   * The ARM Id of the VMware site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmwareSiteId?: string;
  /**
   * The ARM Id of the physical site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly physicalSiteId?: string;
  /**
   * The Migration solution ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationSolutionId?: string;
  /**
   * The service endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceEndpoint?: string;
  /**
   * The service resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceResourceId?: string;
  /**
   * The service container Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceContainerId?: string;
  /**
   * The list of process servers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processServers?: ProcessServerDetails[];
}

/** Fabric provider specific settings. */
export interface AzureFabricCreationInput extends FabricSpecificCreationInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "Azure";
  /** The Location. */
  location?: string;
}

/** InMageRcm fabric provider specific settings. */
export interface InMageRcmFabricCreationInput
  extends FabricSpecificCreationInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The ARM Id of the VMware site. */
  vmwareSiteId: string;
  /** The ARM Id of the physical site. */
  physicalSiteId: string;
  /** The identity provider input for source agent authentication. */
  sourceAgentIdentity: IdentityProviderInput;
}

/** VMwareV2 fabric provider specific settings. */
export interface VMwareV2FabricCreationInput
  extends FabricSpecificCreationInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareV2";
  /** The ARM Id of the VMware site. */
  vmwareSiteId?: string;
  /** The ARM Id of the physical site. */
  physicalSiteId?: string;
  /** The ARM Id of the migration solution. */
  migrationSolutionId: string;
}

/** A2A Network Mapping fabric specific settings. */
export interface AzureToAzureNetworkMappingSettings
  extends NetworkMappingFabricSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzureToAzure";
  /** The primary fabric location. */
  primaryFabricLocation?: string;
  /** The recovery fabric location. */
  recoveryFabricLocation?: string;
}

/** E2A Network Mapping fabric specific settings. */
export interface VmmToAzureNetworkMappingSettings
  extends NetworkMappingFabricSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VmmToAzure";
}

/** E2E Network Mapping fabric specific settings. */
export interface VmmToVmmNetworkMappingSettings
  extends NetworkMappingFabricSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VmmToVmm";
}

/** Create network mappings input properties/behavior specific to Azure to Azure Network mapping. */
export interface AzureToAzureCreateNetworkMappingInput
  extends FabricSpecificCreateNetworkMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzureToAzure";
  /** The primary azure vnet Id. */
  primaryNetworkId: string;
}

/** Create network mappings input properties/behavior specific to Vmm to Azure Network mapping. */
export interface VmmToAzureCreateNetworkMappingInput
  extends FabricSpecificCreateNetworkMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VmmToAzure";
}

/** Create network mappings input properties/behavior specific to vmm to vmm Network mapping. */
export interface VmmToVmmCreateNetworkMappingInput
  extends FabricSpecificCreateNetworkMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VmmToVmm";
}

/** Updates network mappings input. */
export interface AzureToAzureUpdateNetworkMappingInput
  extends FabricSpecificUpdateNetworkMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzureToAzure";
  /** The primary azure vnet Id. */
  primaryNetworkId?: string;
}

/** Update network mappings input properties/behavior specific to vmm to azure. */
export interface VmmToAzureUpdateNetworkMappingInput
  extends FabricSpecificUpdateNetworkMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VmmToAzure";
}

/** Update network mappings input properties/behavior specific to vmm to vmm. */
export interface VmmToVmmUpdateNetworkMappingInput
  extends FabricSpecificUpdateNetworkMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VmmToVmm";
}

/** A2A cloud creation input. */
export interface A2AContainerCreationInput
  extends ReplicationProviderSpecificContainerCreationInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** A2ACrossClusterMigration cloud creation input. */
export interface A2ACrossClusterMigrationContainerCreationInput
  extends ReplicationProviderSpecificContainerCreationInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2ACrossClusterMigration";
}

/** VMwareCbt container creation input. */
export interface VMwareCbtContainerCreationInput
  extends ReplicationProviderSpecificContainerCreationInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
}

/** VMwareCbt provider specific settings. */
export interface VMwareCbtMigrationDetails
  extends MigrationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /**
   * The ARM Id of the VM discovered in VMware.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmwareMachineId?: string;
  /**
   * The type of the OS on the VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: string;
  /**
   * The firmware type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly firmwareType?: string;
  /**
   * The target generation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetGeneration?: string;
  /** License Type of the VM to be used. */
  licenseType?: string;
  /** The SQL Server license type. */
  sqlServerLicenseType?: string;
  /**
   * The data mover run as account Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataMoverRunAsAccountId?: string;
  /**
   * The snapshot run as account Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly snapshotRunAsAccountId?: string;
  /**
   * The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageAccountId?: string;
  /** Target VM name. */
  targetVmName?: string;
  /** The target VM size. */
  targetVmSize?: string;
  /**
   * The target location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetLocation?: string;
  /** The target resource group Id. */
  targetResourceGroupId?: string;
  /** The target availability set Id. */
  targetAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target proximity placement group Id. */
  targetProximityPlacementGroupId?: string;
  /** The target boot diagnostics storage account ARM Id. */
  targetBootDiagnosticsStorageAccountId?: string;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The list of protected disks. */
  protectedDisks?: VMwareCbtProtectedDiskDetails[];
  /** The target network Id. */
  targetNetworkId?: string;
  /** The test network Id. */
  testNetworkId?: string;
  /** The network details. */
  vmNics?: VMwareCbtNicDetails[];
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
  /**
   * The recovery point Id to which the VM was migrated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationRecoveryPointId?: string;
  /**
   * The last recovery point received time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointReceived?: Date;
  /**
   * The last recovery point Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointId?: string;
  /**
   * The initial seeding progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialSeedingProgressPercentage?: number;
  /**
   * The migration progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationProgressPercentage?: number;
  /**
   * The resync progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressPercentage?: number;
  /**
   * The resume progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resumeProgressPercentage?: number;
  /**
   * The initial seeding retry count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialSeedingRetryCount?: number;
  /**
   * The resync retry count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRetryCount?: number;
  /**
   * The resume retry count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resumeRetryCount?: number;
  /**
   * A value indicating whether resync is required.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRequired?: string;
  /**
   * The resync state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncState?: ResyncState;
  /** A value indicating whether auto resync is to be done. */
  performAutoResync?: string;
  /** The tags for the seed disks. */
  seedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target disks. */
  targetDiskTags?: { [propertyName: string]: string };
}

/** VMwareCbt specific enable migration input. */
export interface VMwareCbtEnableMigrationInput
  extends EnableMigrationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** The ARM Id of the VM discovered in VMware. */
  vmwareMachineId: string;
  /** The disks to include list. */
  disksToInclude: VMwareCbtDiskInput[];
  /** License type. */
  licenseType?: LicenseType;
  /** The SQL Server license type. */
  sqlServerLicenseType?: SqlServerLicenseType;
  /** A value indicating whether bulk SQL RP registration to be done. */
  performSqlBulkRegistration?: string;
  /** The data mover run as account Id. */
  dataMoverRunAsAccountId: string;
  /** The snapshot run as account Id. */
  snapshotRunAsAccountId: string;
  /** The target VM name. */
  targetVmName?: string;
  /** The target VM size. */
  targetVmSize?: string;
  /** The target resource group ARM Id. */
  targetResourceGroupId: string;
  /** The target network ARM Id. */
  targetNetworkId: string;
  /** The selected test network ARM Id. */
  testNetworkId?: string;
  /** The target subnet name. */
  targetSubnetName?: string;
  /** The selected test subnet name. */
  testSubnetName?: string;
  /** The target availability set ARM Id. */
  targetAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target proximity placement group ARM Id. */
  targetProximityPlacementGroupId?: string;
  /** The target boot diagnostics storage account ARM Id. */
  targetBootDiagnosticsStorageAccountId?: string;
  /** A value indicating whether auto resync is to be done. */
  performAutoResync?: string;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The tags for the seed disks. */
  seedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target disks. */
  targetDiskTags?: { [propertyName: string]: string };
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
}

/** VMwareCbt specific update migration item input. */
export interface VMwareCbtUpdateMigrationItemInput
  extends UpdateMigrationItemProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** The target VM name. */
  targetVmName?: string;
  /** The target VM size. */
  targetVmSize?: string;
  /** The target resource group ARM Id. */
  targetResourceGroupId?: string;
  /** The target availability set ARM Id. */
  targetAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target proximity placement group ARM Id. */
  targetProximityPlacementGroupId?: string;
  /** The target boot diagnostics storage account ARM Id. */
  targetBootDiagnosticsStorageAccountId?: string;
  /** The target network ARM Id. */
  targetNetworkId?: string;
  /** The test network ARM Id. */
  testNetworkId?: string;
  /** The list of NIC details. */
  vmNics?: VMwareCbtNicInput[];
  /** The list of disk update properties. */
  vmDisks?: VMwareCbtUpdateDiskInput[];
  /** The license type. */
  licenseType?: LicenseType;
  /** The SQL Server license type. */
  sqlServerLicenseType?: SqlServerLicenseType;
  /** A value indicating whether auto resync is to be done. */
  performAutoResync?: string;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The tags for the target disks. */
  targetDiskTags?: { [propertyName: string]: string };
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
}

/** VMwareCbt specific migrate input. */
export interface VMwareCbtMigrateInput extends MigrateProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** A value indicating whether VM is to be shutdown. */
  performShutdown: string;
}

/** VMwareCbt specific resume replication input. */
export interface VMwareCbtResumeReplicationInput
  extends ResumeReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** A value indicating whether Migration resources to be deleted. */
  deleteMigrationResources?: string;
}

/** VMwareCbt specific resync input. */
export interface VMwareCbtResyncInput extends ResyncProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** A value indicating whether CBT is to be reset. */
  skipCbtReset: string;
}

/** VMwareCbt specific test migrate input. */
export interface VMwareCbtTestMigrateInput
  extends TestMigrateProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** The recovery point Id. */
  recoveryPointId: string;
  /** The test network Id. */
  networkId: string;
  /** The list of NIC details. */
  vmNics?: VMwareCbtNicInput[];
}

/** Single Host fabric provider specific VM settings. */
export interface HyperVVirtualMachineDetails extends ConfigurationSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVVirtualMachine" | "VmmVirtualMachine";
  /** The source id of the object. */
  sourceItemId?: string;
  /** The id of the object in fabric. */
  generation?: string;
  /** The Last replication time. */
  osDetails?: OSDetails;
  /** The Last successful failover time. */
  diskDetails?: DiskDetails[];
  /** A value indicating whether the VM has a physical disk attached. String value of SrsDataContract.PresenceStatus enum. */
  hasPhysicalDisk?: PresenceStatus;
  /** A value indicating whether the VM has a fibre channel adapter attached. String value of SrsDataContract.PresenceStatus enum. */
  hasFibreChannelAdapter?: PresenceStatus;
  /** A value indicating whether the VM has a shared VHD attached. String value of SrsDataContract.PresenceStatus enum. */
  hasSharedVhd?: PresenceStatus;
  /** The Id of the hyper-v host in fabric. */
  hyperVHostId?: string;
}

/** Replication group details. This will be used in case of San. */
export interface ReplicationGroupDetails extends ConfigurationSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ReplicationGroupDetails";
}

/** VMware provider specific settings. */
export interface VMwareVirtualMachineDetails extends ConfigurationSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareVirtualMachine";
  /** The ID generated by the InMage agent after it gets installed on guest. This is the ID to be used during InMage CreateProtection. */
  agentGeneratedId?: string;
  /** The value indicating if InMage scout agent is installed on guest. */
  agentInstalled?: string;
  /** The OsType installed on VM. */
  osType?: string;
  /** The agent version. */
  agentVersion?: string;
  /** The IP address. */
  ipAddress?: string;
  /** The value indicating whether VM is powered on. */
  poweredOn?: string;
  /** The VCenter infrastructure Id. */
  vCenterInfrastructureId?: string;
  /** A value indicating the discovery type of the machine. Value can be vCenter or physical. */
  discoveryType?: string;
  /** The disk details. */
  diskDetails?: InMageDiskDetails[];
  /** The validation errors. */
  validationErrors?: HealthError[];
}

/** A2A provider specific settings. */
export interface A2ACrossClusterMigrationReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2ACrossClusterMigration";
  /** The fabric specific object Id of the virtual machine. */
  fabricObjectId?: string;
  /** Primary fabric location. */
  primaryFabricLocation?: string;
  /** The type of operating system. */
  osType?: string;
  /** The protection state for the vm. */
  vmProtectionState?: string;
  /** The protection state description for the vm. */
  vmProtectionStateDescription?: string;
  /** An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing. */
  lifecycleId?: string;
}

/** A2A provider specific settings. */
export interface A2AReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The fabric specific object Id of the virtual machine. */
  fabricObjectId?: string;
  /**
   * The initial primary availability zone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialPrimaryZone?: string;
  /**
   * The initial primary fabric location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialPrimaryFabricLocation?: string;
  /**
   * The initial recovery availability zone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialRecoveryZone?: string;
  /** The initial primary extended location. */
  initialPrimaryExtendedLocation?: ExtendedLocation;
  /** The initial recovery extended location. */
  initialRecoveryExtendedLocation?: ExtendedLocation;
  /**
   * The initial recovery fabric location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialRecoveryFabricLocation?: string;
  /** The multi vm group Id. */
  multiVmGroupId?: string;
  /** The multi vm group name. */
  multiVmGroupName?: string;
  /** Whether Multi VM group is auto created or specified by user. */
  multiVmGroupCreateOption?: MultiVmGroupCreateOption;
  /** The management Id. */
  managementId?: string;
  /** The list of protected disks. */
  protectedDisks?: A2AProtectedDiskDetails[];
  /** The list of unprotected disks. */
  unprotectedDisks?: A2AUnprotectedDiskDetails[];
  /** The list of protected managed disks. */
  protectedManagedDisks?: A2AProtectedManagedDiskDetails[];
  /** The recovery boot diagnostic storage account Arm Id. */
  recoveryBootDiagStorageAccountId?: string;
  /** Primary fabric location. */
  primaryFabricLocation?: string;
  /** The recovery fabric location. */
  recoveryFabricLocation?: string;
  /** The type of operating system. */
  osType?: string;
  /** The size of recovery virtual machine. */
  recoveryAzureVMSize?: string;
  /** The name of recovery virtual machine. */
  recoveryAzureVMName?: string;
  /** The recovery resource group. */
  recoveryAzureResourceGroupId?: string;
  /** The recovery cloud service. */
  recoveryCloudService?: string;
  /** The recovery availability set. */
  recoveryAvailabilitySet?: string;
  /** The recovery virtual network. */
  selectedRecoveryAzureNetworkId?: string;
  /** The test failover virtual network. */
  selectedTfoAzureNetworkId?: string;
  /** The virtual machine nic details. */
  vmNics?: VMNicDetails[];
  /** The synced configuration details. */
  vmSyncedConfigDetails?: AzureToAzureVmSyncedConfigDetails;
  /** The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property. */
  monitoringPercentageCompletion?: number;
  /** The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property. */
  monitoringJobType?: string;
  /** The last heartbeat received from the source server. */
  lastHeartbeat?: Date;
  /** The agent version. */
  agentVersion?: string;
  /** Agent expiry date. */
  agentExpiryDate?: Date;
  /** A value indicating whether replication agent update is required. */
  isReplicationAgentUpdateRequired?: boolean;
  /**
   * Agent certificate expiry date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentCertificateExpiryDate?: Date;
  /** A value indicating whether agent certificate update is required. */
  isReplicationAgentCertificateUpdateRequired?: boolean;
  /** The recovery fabric object Id. */
  recoveryFabricObjectId?: string;
  /** The protection state for the vm. */
  vmProtectionState?: string;
  /** The protection state description for the vm. */
  vmProtectionStateDescription?: string;
  /** An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing. */
  lifecycleId?: string;
  /** The test failover fabric object Id. */
  testFailoverRecoveryFabricObjectId?: string;
  /** The last RPO value in seconds. */
  rpoInSeconds?: number;
  /** The time (in UTC) when the last RPO value was calculated by Protection Service. */
  lastRpoCalculatedTime?: Date;
  /** The primary availability zone. */
  primaryAvailabilityZone?: string;
  /** The recovery availability zone. */
  recoveryAvailabilityZone?: string;
  /** The primary Extended Location. */
  primaryExtendedLocation?: ExtendedLocation;
  /** The recovery Extended Location. */
  recoveryExtendedLocation?: ExtendedLocation;
  /**
   * The encryption type of the VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmEncryptionType?: VmEncryptionType;
  /** The test failover vm name. */
  tfoAzureVMName?: string;
  /**
   * The recovery azure generation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryAzureGeneration?: string;
  /** The recovery proximity placement group Id. */
  recoveryProximityPlacementGroupId?: string;
  /** A value indicating whether the auto protection is enabled. */
  autoProtectionOfDataDisk?: AutoProtectionOfDataDisk;
  /** The recovery virtual machine scale set id. */
  recoveryVirtualMachineScaleSetId?: string;
  /** The recovery capacity reservation group Id. */
  recoveryCapacityReservationGroupId?: string;
}

/** Hyper V Replica Azure provider specific settings. */
export interface HyperVReplicaAzureReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** Azure VM Disk details. */
  azureVmDiskDetails?: AzureVmDiskDetails[];
  /** Recovery Azure given name. */
  recoveryAzureVmName?: string;
  /** The Recovery Azure VM size. */
  recoveryAzureVMSize?: string;
  /** The recovery Azure storage account. */
  recoveryAzureStorageAccount?: string;
  /** The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection. */
  recoveryAzureLogStorageAccountId?: string;
  /** The Last replication time. */
  lastReplicatedTime?: Date;
  /** Last RPO value. */
  rpoInSeconds?: number;
  /** The last RPO calculated time. */
  lastRpoCalculatedTime?: Date;
  /** The virtual machine Id. */
  vmId?: string;
  /** The protection state for the vm. */
  vmProtectionState?: string;
  /** The protection state description for the vm. */
  vmProtectionStateDescription?: string;
  /** Initial replication details. */
  initialReplicationDetails?: InitialReplicationDetails;
  /** The PE Network details. */
  vmNics?: VMNicDetails[];
  /** The selected recovery azure network Id. */
  selectedRecoveryAzureNetworkId?: string;
  /** The selected source nic Id which will be used as the primary nic during failover. */
  selectedSourceNicId?: string;
  /** The encryption info. */
  encryption?: string;
  /** The operating system info. */
  oSDetails?: OSDetails;
  /** The RAM size of the VM on the primary side. */
  sourceVmRamSizeInMB?: number;
  /** The CPU count of the VM on the primary side. */
  sourceVmCpuCount?: number;
  /** The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum. */
  enableRdpOnTargetOption?: string;
  /** The target resource group Id. */
  recoveryAzureResourceGroupId?: string;
  /** The recovery availability set Id. */
  recoveryAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target proximity placement group Id. */
  targetProximityPlacementGroupId?: string;
  /** A value indicating whether managed disks should be used during failover. */
  useManagedDisks?: string;
  /** License Type of the VM to be used. */
  licenseType?: string;
  /** The SQL Server license type. */
  sqlServerLicenseType?: string;
  /**
   * The last recovery point received time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointReceived?: Date;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The tags for the seed managed disks. */
  seedManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target managed disks. */
  targetManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
  /** The list of protected managed disks. */
  protectedManagedDisks?: HyperVReplicaAzureManagedDiskDetails[];
}

/** Hyper V replica provider specific settings base class. */
export interface HyperVReplicaBaseReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaBaseReplicationDetails";
  /** The Last replication time. */
  lastReplicatedTime?: Date;
  /** The PE Network details. */
  vmNics?: VMNicDetails[];
  /** The virtual machine Id. */
  vmId?: string;
  /** The protection state for the vm. */
  vmProtectionState?: string;
  /** The protection state description for the vm. */
  vmProtectionStateDescription?: string;
  /** Initial replication details. */
  initialReplicationDetails?: InitialReplicationDetails;
  /** VM disk details. */
  vMDiskDetails?: DiskDetails[];
}

/** HyperV replica 2012 R2 (Blue) replication details. */
export interface HyperVReplicaBlueReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplica2012R2";
  /** The Last replication time. */
  lastReplicatedTime?: Date;
  /** The PE Network details. */
  vmNics?: VMNicDetails[];
  /** The virtual machine Id. */
  vmId?: string;
  /** The protection state for the vm. */
  vmProtectionState?: string;
  /** The protection state description for the vm. */
  vmProtectionStateDescription?: string;
  /** Initial replication details. */
  initialReplicationDetails?: InitialReplicationDetails;
  /** VM disk details. */
  vMDiskDetails?: DiskDetails[];
}

/** HyperV replica 2012 replication details. */
export interface HyperVReplicaReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplica2012";
  /** The Last replication time. */
  lastReplicatedTime?: Date;
  /** The PE Network details. */
  vmNics?: VMNicDetails[];
  /** The virtual machine Id. */
  vmId?: string;
  /** The protection state for the vm. */
  vmProtectionState?: string;
  /** The protection state description for the vm. */
  vmProtectionStateDescription?: string;
  /** Initial replication details. */
  initialReplicationDetails?: InitialReplicationDetails;
  /** VM disk details. */
  vMDiskDetails?: DiskDetails[];
}

/** InMageAzureV2 provider specific settings. */
export interface InMageAzureV2ReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The infrastructure VM Id. */
  infrastructureVmId?: string;
  /** The vCenter infrastructure Id. */
  vCenterInfrastructureId?: string;
  /** The protection stage. */
  protectionStage?: string;
  /** The virtual machine Id. */
  vmId?: string;
  /** The protection state for the vm. */
  vmProtectionState?: string;
  /** The protection state description for the vm. */
  vmProtectionStateDescription?: string;
  /** The resync progress percentage. */
  resyncProgressPercentage?: number;
  /** The RPO in seconds. */
  rpoInSeconds?: number;
  /** The compressed data change rate in MB. */
  compressedDataRateInMB?: number;
  /** The uncompressed data change rate in MB. */
  uncompressedDataRateInMB?: number;
  /** The source IP address. */
  ipAddress?: string;
  /** The agent version. */
  agentVersion?: string;
  /** Agent expiry date. */
  agentExpiryDate?: Date;
  /** A value indicating whether installed agent needs to be updated. */
  isAgentUpdateRequired?: string;
  /** A value indicating whether the source server requires a restart after update. */
  isRebootAfterUpdateRequired?: string;
  /** The last heartbeat received from the source server. */
  lastHeartbeat?: Date;
  /** The process server Id. */
  processServerId?: string;
  /** The process server name. */
  processServerName?: string;
  /** The multi vm group Id. */
  multiVmGroupId?: string;
  /** The multi vm group name. */
  multiVmGroupName?: string;
  /** A value indicating whether multi vm sync is enabled or disabled. */
  multiVmSyncStatus?: string;
  /** The list of protected disks. */
  protectedDisks?: InMageAzureV2ProtectedDiskDetails[];
  /** A value indicating whether any disk is resized for this VM. */
  diskResized?: string;
  /** The master target Id. */
  masterTargetId?: string;
  /** The CPU count of the VM on the primary side. */
  sourceVmCpuCount?: number;
  /** The RAM size of the VM on the primary side. */
  sourceVmRamSizeInMB?: number;
  /** The type of the OS on the VM. */
  osType?: string;
  /** The OS disk VHD name. */
  vhdName?: string;
  /** The id of the disk containing the OS. */
  osDiskId?: string;
  /** Azure VM Disk details. */
  azureVMDiskDetails?: AzureVmDiskDetails[];
  /** Recovery Azure given name. */
  recoveryAzureVMName?: string;
  /** The Recovery Azure VM size. */
  recoveryAzureVMSize?: string;
  /** The recovery Azure storage account. */
  recoveryAzureStorageAccount?: string;
  /** The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection. */
  recoveryAzureLogStorageAccountId?: string;
  /** The PE Network details. */
  vmNics?: VMNicDetails[];
  /** The selected recovery azure network Id. */
  selectedRecoveryAzureNetworkId?: string;
  /** The test failover virtual network. */
  selectedTfoAzureNetworkId?: string;
  /** The selected source nic Id which will be used as the primary nic during failover. */
  selectedSourceNicId?: string;
  /** A value indicating the discovery type of the machine. Value can be vCenter or physical. */
  discoveryType?: string;
  /** The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum. */
  enableRdpOnTargetOption?: string;
  /** The datastores of the on-premise machine. Value can be list of strings that contain datastore names. */
  datastores?: string[];
  /** The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM. */
  targetVmId?: string;
  /** The target resource group Id. */
  recoveryAzureResourceGroupId?: string;
  /** The recovery availability set Id. */
  recoveryAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target proximity placement group Id. */
  targetProximityPlacementGroupId?: string;
  /** A value indicating whether managed disks should be used during failover. */
  useManagedDisks?: string;
  /** License Type of the VM to be used. */
  licenseType?: string;
  /** The SQL Server license type. */
  sqlServerLicenseType?: string;
  /** The validation errors of the on-premise machine Value can be list of validation errors. */
  validationErrors?: HealthError[];
  /** The last RPO calculated time. */
  lastRpoCalculatedTime?: Date;
  /** The last update time received from on-prem components. */
  lastUpdateReceivedTime?: Date;
  /** The replica id of the protected item. */
  replicaId?: string;
  /** The OS Version of the protected item. */
  osVersion?: string;
  /** The list of protected managed disks. */
  protectedManagedDisks?: InMageAzureV2ManagedDiskDetails[];
  /**
   * The last recovery point received time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointReceived?: Date;
  /** The firmware type of this protected item. */
  firmwareType?: string;
  /** The target generation for this protected item. */
  azureVmGeneration?: string;
  /** A value indicating whether additional IR stats are available or not. */
  isAdditionalStatsAvailable?: boolean;
  /** The total transferred data in bytes. */
  totalDataTransferred?: number;
  /** The progress health. */
  totalProgressHealth?: string;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The tags for the seed managed disks. */
  seedManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target managed disks. */
  targetManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
  /** The switch provider blocking error information. */
  switchProviderBlockingErrorDetails?: InMageAzureV2SwitchProviderBlockingErrorDetails[];
  /** The switch provider blocking error information. */
  switchProviderDetails?: InMageAzureV2SwitchProviderDetails;
}

/** InMageRcmFailback provider specific details. */
export interface InMageRcmFailbackReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcmFailback";
  /**
   * The virtual machine internal identifier.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly internalIdentifier?: string;
  /**
   * The ARM Id of the azure VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureVirtualMachineId?: string;
  /**
   * The multi VM group name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly multiVmGroupName?: string;
  /**
   * The reprotect agent Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reprotectAgentId?: string;
  /**
   * The reprotect agent name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reprotectAgentName?: string;
  /**
   * The type of the OS on the VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: string;
  /**
   * The log storage account ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logStorageAccountId?: string;
  /**
   * The target vCenter Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetvCenterId?: string;
  /**
   * The target datastore name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetDataStoreName?: string;
  /**
   * The target VM name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetVmName?: string;
  /**
   * The initial replication progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProgressPercentage?: number;
  /**
   * The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProcessedBytes?: number;
  /**
   * The initial replication transferred bytes from source VM to target for all selected disks on source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationTransferredBytes?: number;
  /**
   * The initial replication progress health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProgressHealth?: VmReplicationProgressHealth;
  /**
   * The resync progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressPercentage?: number;
  /**
   * The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProcessedBytes?: number;
  /**
   * The resync transferred bytes from source VM to target for all selected disks on source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncTransferredBytes?: number;
  /**
   * The resync progress health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressHealth?: VmReplicationProgressHealth;
  /**
   * A value indicating whether resync is required.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRequired?: string;
  /**
   * The resync state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncState?: ResyncState;
  /** The list of protected disks. */
  protectedDisks?: InMageRcmFailbackProtectedDiskDetails[];
  /** The mobility agent information. */
  mobilityAgentDetails?: InMageRcmFailbackMobilityAgentDetails;
  /** The network details. */
  vmNics?: InMageRcmFailbackNicDetails[];
  /**
   * The last planned failover start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastPlannedFailoverStartTime?: Date;
  /**
   * The last planned failover status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastPlannedFailoverStatus?: PlannedFailoverStatus;
  /** The discovered VM information. */
  discoveredVmDetails?: InMageRcmFailbackDiscoveredProtectedVmDetails;
  /**
   * The policy Id used by the forward replication.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUsedPolicyId?: string;
  /**
   * The policy friendly name used by the forward replication.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUsedPolicyFriendlyName?: string;
  /**
   * A value indicating whether agent registration was successful after failover.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isAgentRegistrationSuccessfulAfterFailover?: boolean;
}

/** InMageRcm provider specific details. */
export interface InMageRcmReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /**
   * The virtual machine internal identifier.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly internalIdentifier?: string;
  /**
   * The ARM Id of the discovered VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricDiscoveryMachineId?: string;
  /**
   * The multi VM group name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly multiVmGroupName?: string;
  /**
   * The type of the discovered VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly discoveryType?: string;
  /**
   * The process server Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processServerId?: string;
  /**
   * The processor core count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processorCoreCount?: number;
  /**
   * The allocated memory in MB.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allocatedMemoryInMB?: number;
  /**
   * The process server name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processServerName?: string;
  /**
   * The run-as account Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly runAsAccountId?: string;
  /**
   * The type of the OS on the VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: string;
  /**
   * The firmware type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly firmwareType?: string;
  /**
   * The IP address of the primary network interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly primaryNicIpAddress?: string;
  /**
   * The target generation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetGeneration?: string;
  /** License Type of the VM to be used. */
  licenseType?: string;
  /**
   * The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageAccountId?: string;
  /** Target VM name. */
  targetVmName?: string;
  /** The target VM size. */
  targetVmSize?: string;
  /** The target resource group Id. */
  targetResourceGroupId?: string;
  /** The target location. */
  targetLocation?: string;
  /** The target availability set Id. */
  targetAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target proximity placement group Id. */
  targetProximityPlacementGroupId?: string;
  /** The target boot diagnostics storage account ARM Id. */
  targetBootDiagnosticsStorageAccountId?: string;
  /** The target network Id. */
  targetNetworkId?: string;
  /** The test network Id. */
  testNetworkId?: string;
  /**
   * The recovery point Id to which the VM was failed over.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failoverRecoveryPointId?: string;
  /**
   * The last recovery point received time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointReceived?: Date;
  /**
   * The last recovery point objective value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRpoInSeconds?: number;
  /**
   * The last recovery point objective calculated time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRpoCalculatedTime?: Date;
  /**
   * The last recovery point Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointId?: string;
  /**
   * The initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProgressPercentage?: number;
  /**
   * The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProcessedBytes?: number;
  /**
   * The initial replication transferred bytes from source VM to azure for all selected disks on source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationTransferredBytes?: number;
  /**
   * The initial replication progress health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProgressHealth?: VmReplicationProgressHealth;
  /**
   * The resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressPercentage?: number;
  /**
   * The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProcessedBytes?: number;
  /**
   * The resync transferred bytes from source VM to azure for all selected disks on source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncTransferredBytes?: number;
  /**
   * The resync progress health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressHealth?: VmReplicationProgressHealth;
  /**
   * A value indicating whether resync is required.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRequired?: string;
  /**
   * The resync state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncState?: ResyncState;
  /**
   * The agent auto upgrade state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentUpgradeState?: MobilityAgentUpgradeState;
  /**
   * The last agent upgrade type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastAgentUpgradeType?: string;
  /**
   * The agent upgrade job Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentUpgradeJobId?: string;
  /**
   * The agent version to which last agent upgrade was attempted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentUpgradeAttemptToVersion?: string;
  /** The list of protected disks. */
  protectedDisks?: InMageRcmProtectedDiskDetails[];
  /**
   * A value indicating whether last agent upgrade was successful or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isLastUpgradeSuccessful?: string;
  /**
   * A value indicating whether agent registration was successful after failover.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isAgentRegistrationSuccessfulAfterFailover?: boolean;
  /** The mobility agent information. */
  mobilityAgentDetails?: InMageRcmMobilityAgentDetails;
  /** The last agent upgrade error information. */
  lastAgentUpgradeErrorDetails?: InMageRcmLastAgentUpgradeErrorDetails[];
  /** The agent upgrade blocking error information. */
  agentUpgradeBlockingErrorDetails?: InMageRcmAgentUpgradeBlockingErrorDetails[];
  /** The network details. */
  vmNics?: InMageRcmNicDetails[];
  /** The discovered VM details. */
  discoveredVmDetails?: InMageRcmDiscoveredProtectedVmDetails;
}

/** InMage provider specific settings. */
export interface InMageReplicationDetails
  extends ReplicationProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always. */
  activeSiteType?: string;
  /** The CPU count of the VM on the primary side. */
  sourceVmCpuCount?: number;
  /** The RAM size of the VM on the primary side. */
  sourceVmRamSizeInMB?: number;
  /** The OS details. */
  osDetails?: OSDiskDetails;
  /** The protection stage. */
  protectionStage?: string;
  /** The virtual machine Id. */
  vmId?: string;
  /** The protection state for the vm. */
  vmProtectionState?: string;
  /** The protection state description for the vm. */
  vmProtectionStateDescription?: string;
  /** The resync details of the machine. */
  resyncDetails?: InitialReplicationDetails;
  /** The retention window start time. */
  retentionWindowStart?: Date;
  /** The retention window end time. */
  retentionWindowEnd?: Date;
  /** The compressed data change rate in MB. */
  compressedDataRateInMB?: number;
  /** The uncompressed data change rate in MB. */
  uncompressedDataRateInMB?: number;
  /** The RPO in seconds. */
  rpoInSeconds?: number;
  /** The list of protected disks. */
  protectedDisks?: InMageProtectedDiskDetails[];
  /** The source IP address. */
  ipAddress?: string;
  /** The last heartbeat received from the source server. */
  lastHeartbeat?: Date;
  /** The process server Id. */
  processServerId?: string;
  /** The master target Id. */
  masterTargetId?: string;
  /** The collection of Consistency points. */
  consistencyPoints?: { [propertyName: string]: Date };
  /** A value indicating whether any disk is resized for this VM. */
  diskResized?: string;
  /** A value indicating whether the source server requires a restart after update. */
  rebootAfterUpdateStatus?: string;
  /** The multi vm group Id, if any. */
  multiVmGroupId?: string;
  /** The multi vm group name, if any. */
  multiVmGroupName?: string;
  /** A value indicating whether the multi vm sync is enabled or disabled. */
  multiVmSyncStatus?: string;
  /** The agent details. */
  agentDetails?: InMageAgentDetails;
  /** The vCenter infrastructure Id. */
  vCenterInfrastructureId?: string;
  /** The infrastructure VM Id. */
  infrastructureVmId?: string;
  /** The PE Network details. */
  vmNics?: VMNicDetails[];
  /** A value indicating the discovery type of the machine. */
  discoveryType?: string;
  /** A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null. */
  azureStorageAccountId?: string;
  /** The datastores of the on-premise machine Value can be list of strings that contain datastore names. */
  datastores?: string[];
  /** The validation errors of the on-premise machine Value can be list of validation errors. */
  validationErrors?: HealthError[];
  /** The last RPO calculated time. */
  lastRpoCalculatedTime?: Date;
  /** The last update time received from on-prem components. */
  lastUpdateReceivedTime?: Date;
  /** The replica id of the protected item. */
  replicaId?: string;
  /** The OS Version of the protected item. */
  osVersion?: string;
  /** A value indicating whether additional IR stats are available or not. */
  isAdditionalStatsAvailable?: boolean;
  /** The total transferred data in bytes. */
  totalDataTransferred?: number;
  /** The progress health. */
  totalProgressHealth?: string;
}

/** A2A Cross-Cluster Migration enable protection input. */
export interface A2ACrossClusterMigrationEnableProtectionInput
  extends EnableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2ACrossClusterMigration";
  /** The fabric specific object Id of the virtual machine. */
  fabricObjectId?: string;
  /** The recovery container Id. */
  recoveryContainerId?: string;
}

/** A2A enable protection input. */
export interface A2AEnableProtectionInput
  extends EnableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The fabric specific object Id of the virtual machine. */
  fabricObjectId: string;
  /** The recovery container Id. */
  recoveryContainerId?: string;
  /** The recovery resource group Id. Valid for V2 scenarios. */
  recoveryResourceGroupId?: string;
  /** The recovery cloud service Id. Valid for V1 scenarios. */
  recoveryCloudServiceId?: string;
  /** The recovery availability set Id. */
  recoveryAvailabilitySetId?: string;
  /** The recovery proximity placement group Id. */
  recoveryProximityPlacementGroupId?: string;
  /** The list of vm disk details. */
  vmDisks?: A2AVmDiskInputDetails[];
  /** The list of vm managed disk details. */
  vmManagedDisks?: A2AVmManagedDiskInputDetails[];
  /** The multi vm group name. */
  multiVmGroupName?: string;
  /** The multi vm group id. */
  multiVmGroupId?: string;
  /** The boot diagnostic storage account. */
  recoveryBootDiagStorageAccountId?: string;
  /** The recovery disk encryption information (for two pass flows). */
  diskEncryptionInfo?: DiskEncryptionInfo;
  /** The recovery availability zone. */
  recoveryAvailabilityZone?: string;
  /** The recovery extended location. */
  recoveryExtendedLocation?: ExtendedLocation;
  /** The recovery Azure virtual network ARM id. */
  recoveryAzureNetworkId?: string;
  /** The recovery subnet name. */
  recoverySubnetName?: string;
  /** The virtual machine scale set Id. */
  recoveryVirtualMachineScaleSetId?: string;
  /** The recovery capacity reservation group Id. */
  recoveryCapacityReservationGroupId?: string;
}

/** HyperVReplicaAzure specific enable protection input. */
export interface HyperVReplicaAzureEnableProtectionInput
  extends EnableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** The Hyper-V host VM Id. */
  hvHostVmId?: string;
  /** The VM Name. */
  vmName?: string;
  /** The OS type associated with VM. */
  osType?: string;
  /** The OS disk VHD id associated with VM. */
  vhdId?: string;
  /** The storage account Id. */
  targetStorageAccountId?: string;
  /** The selected target Azure network Id. */
  targetAzureNetworkId?: string;
  /** The selected target Azure subnet Id. */
  targetAzureSubnetId?: string;
  /** The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum. */
  enableRdpOnTargetOption?: string;
  /** The target azure VM Name. */
  targetAzureVmName?: string;
  /** The storage account to be used for logging during replication. */
  logStorageAccountId?: string;
  /** The list of VHD Ids of disks to be protected. */
  disksToInclude?: string[];
  /** The Id of the target resource group (for classic deployment) in which the failover VM is to be created. */
  targetAzureV1ResourceGroupId?: string;
  /** The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created. */
  targetAzureV2ResourceGroupId?: string;
  /** A value indicating whether managed disks should be used during failover. */
  useManagedDisks?: string;
  /** The target availability set ARM Id for resource manager deployment. */
  targetAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** License type. */
  licenseType?: LicenseType;
  /** The SQL Server license type. */
  sqlServerLicenseType?: SqlServerLicenseType;
  /** The target VM size. */
  targetVmSize?: string;
  /** The proximity placement group ARM Id. */
  targetProximityPlacementGroupId?: string;
  /** A value indicating whether managed disks should be used during replication. */
  useManagedDisksForReplication?: string;
  /** The DiskType. */
  diskType?: DiskAccountType;
  /** The disks to include list for managed disks. */
  disksToIncludeForManagedDisks?: HyperVReplicaAzureDiskInputDetails[];
  /** The DiskEncryptionSet ARM Id. */
  diskEncryptionSetId?: string;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The tags for the seed managed disks. */
  seedManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target managed disks. */
  targetManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
}

/** VMware Azure specific enable protection input. */
export interface InMageAzureV2EnableProtectionInput
  extends EnableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The Master target Id. */
  masterTargetId?: string;
  /** The Process Server Id. */
  processServerId?: string;
  /** The storage account Id. */
  storageAccountId?: string;
  /** The CS account Id. */
  runAsAccountId?: string;
  /** The multi VM group Id. */
  multiVmGroupId?: string;
  /** The multi VM group name. */
  multiVmGroupName?: string;
  /** The disks to include list. */
  disksToInclude?: InMageAzureV2DiskInputDetails[];
  /** The selected target Azure network Id. */
  targetAzureNetworkId?: string;
  /** The selected target Azure subnet Id. */
  targetAzureSubnetId?: string;
  /** The selected option to enable RDP\SSH on target VM after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum. */
  enableRdpOnTargetOption?: string;
  /** The target azure VM Name. */
  targetAzureVmName?: string;
  /** The storage account to be used for logging during replication. */
  logStorageAccountId?: string;
  /** The Id of the target resource group (for classic deployment) in which the failover VM is to be created. */
  targetAzureV1ResourceGroupId?: string;
  /** The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created. */
  targetAzureV2ResourceGroupId?: string;
  /** The DiskType. */
  diskType?: DiskAccountType;
  /** The target availability set ARM Id for resource manager deployment. */
  targetAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The proximity placement group ARM Id. */
  targetProximityPlacementGroupId?: string;
  /** License type. */
  licenseType?: LicenseType;
  /** The SQL Server license type. */
  sqlServerLicenseType?: SqlServerLicenseType;
  /** The target VM size. */
  targetVmSize?: string;
  /** The DiskEncryptionSet ARM Id. */
  diskEncryptionSetId?: string;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The tags for the seed managed disks. */
  seedManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target managed disks. */
  targetManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
}

/** VMware Azure specific enable protection input. */
export interface InMageEnableProtectionInput
  extends EnableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** The VM Name. */
  vmFriendlyName?: string;
  /** The Master Target Id. */
  masterTargetId: string;
  /** The Process Server Id. */
  processServerId: string;
  /** The retention drive to use on the MT. */
  retentionDrive: string;
  /** The CS account Id. */
  runAsAccountId?: string;
  /** The multi VM group Id. */
  multiVmGroupId: string;
  /** The multi VM group name. */
  multiVmGroupName: string;
  /** The target datastore name. */
  datastoreName?: string;
  /** The enable disk exclusion input. */
  diskExclusionInput?: InMageDiskExclusionInput;
  /** The disks to include list. */
  disksToInclude?: string[];
}

/** InMageRcm specific enable protection input. */
export interface InMageRcmEnableProtectionInput
  extends EnableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The ARM Id of discovered machine. */
  fabricDiscoveryMachineId: string;
  /** The disks to include list. */
  disksToInclude?: InMageRcmDiskInput[];
  /** The default disk input. */
  disksDefault?: InMageRcmDisksDefaultInput;
  /** The target resource group ARM Id. */
  targetResourceGroupId: string;
  /** The selected target network ARM Id. */
  targetNetworkId?: string;
  /** The selected test network ARM Id. */
  testNetworkId?: string;
  /** The selected target subnet name. */
  targetSubnetName?: string;
  /** The selected test subnet name. */
  testSubnetName?: string;
  /** The target VM name. */
  targetVmName?: string;
  /** The target VM size. */
  targetVmSize?: string;
  /** The license type. */
  licenseType?: LicenseType;
  /** The target availability set ARM Id. */
  targetAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target proximity placement group Id. */
  targetProximityPlacementGroupId?: string;
  /** The target boot diagnostics storage account ARM Id. */
  targetBootDiagnosticsStorageAccountId?: string;
  /** The run-as account Id. */
  runAsAccountId?: string;
  /** The process server Id. */
  processServerId: string;
  /** The multi VM group name. */
  multiVmGroupName?: string;
}

/** InMage Azure V2 input to update replication protected item. */
export interface A2AUpdateReplicationProtectedItemInput
  extends UpdateReplicationProtectedItemProviderInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The target cloud service ARM Id (for V1). */
  recoveryCloudServiceId?: string;
  /** The target resource group ARM Id (for V2). */
  recoveryResourceGroupId?: string;
  /** Managed disk update details. */
  managedDiskUpdateDetails?: A2AVmManagedDiskUpdateDetails[];
  /** The boot diagnostic storage account. */
  recoveryBootDiagStorageAccountId?: string;
  /** The recovery os disk encryption information. */
  diskEncryptionInfo?: DiskEncryptionInfo;
  /** The user given name for Test Failover VM. */
  tfoAzureVMName?: string;
  /** The recovery proximity placement group Id. */
  recoveryProximityPlacementGroupId?: string;
  /** The recovery virtual machine scale set Id. */
  recoveryVirtualMachineScaleSetId?: string;
  /** The recovery capacity reservation group Id. */
  recoveryCapacityReservationGroupId?: string;
}

/** HyperV replica Azure input to update replication protected item. */
export interface HyperVReplicaAzureUpdateReplicationProtectedItemInput
  extends UpdateReplicationProtectedItemProviderInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** The recovery Azure resource group Id for classic deployment. */
  recoveryAzureV1ResourceGroupId?: string;
  /** The recovery Azure resource group Id for resource manager deployment. */
  recoveryAzureV2ResourceGroupId?: string;
  /** A value indicating whether managed disks should be used during failover. */
  useManagedDisks?: string;
  /** The dictionary of disk resource Id to disk encryption set ARM Id. */
  diskIdToDiskEncryptionMap?: { [propertyName: string]: string };
  /** The target proximity placement group Id. */
  targetProximityPlacementGroupId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The tags for the target managed disks. */
  targetManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
  /** The SQL Server license type. */
  sqlServerLicenseType?: SqlServerLicenseType;
  /** The list of disk update properties. */
  vmDisks?: UpdateDiskInput[];
}

/** InMage Azure V2 input to update replication protected item. */
export interface InMageAzureV2UpdateReplicationProtectedItemInput
  extends UpdateReplicationProtectedItemProviderInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The recovery Azure resource group Id for classic deployment. */
  recoveryAzureV1ResourceGroupId?: string;
  /** The recovery Azure resource group Id for resource manager deployment. */
  recoveryAzureV2ResourceGroupId?: string;
  /** A value indicating whether managed disks should be used during failover. */
  useManagedDisks?: string;
  /** The target proximity placement group Id. */
  targetProximityPlacementGroupId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target VM tags. */
  targetVmTags?: { [propertyName: string]: string };
  /** The tags for the target managed disks. */
  targetManagedDiskTags?: { [propertyName: string]: string };
  /** The tags for the target NICs. */
  targetNicTags?: { [propertyName: string]: string };
  /** The SQL Server license type. */
  sqlServerLicenseType?: SqlServerLicenseType;
  /** The list of disk update properties. */
  vmDisks?: UpdateDiskInput[];
}

/** InMageRcm provider specific input to update replication protected item. */
export interface InMageRcmUpdateReplicationProtectedItemInput
  extends UpdateReplicationProtectedItemProviderInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The target VM name. */
  targetVmName?: string;
  /** The target VM size. */
  targetVmSize?: string;
  /** The target resource group ARM Id. */
  targetResourceGroupId?: string;
  /** The target availability set ARM Id. */
  targetAvailabilitySetId?: string;
  /** The target availability zone. */
  targetAvailabilityZone?: string;
  /** The target proximity placement group Id. */
  targetProximityPlacementGroupId?: string;
  /** The target boot diagnostics storage account ARM Id. */
  targetBootDiagnosticsStorageAccountId?: string;
  /** The target network ARM Id. */
  targetNetworkId?: string;
  /** The test network ARM Id. */
  testNetworkId?: string;
  /** The list of NIC details. */
  vmNics?: InMageRcmNicInput[];
  /** The license type. */
  licenseType?: LicenseType;
}

/** A2A add disk(s) input. */
export interface A2AAddDisksInput extends AddDisksProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The list of vm disk details. */
  vmDisks?: A2AVmDiskInputDetails[];
  /** The list of vm managed disk details. */
  vmManagedDisks?: A2AVmManagedDiskInputDetails[];
}

/** ApplyRecoveryPoint input specific to A2A provider. */
export interface A2AApplyRecoveryPointInput
  extends ApplyRecoveryPointProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
}

/** ApplyRecoveryPoint input specific to A2ACrossClusterMigration provider. */
export interface A2ACrossClusterMigrationApplyRecoveryPointInput
  extends ApplyRecoveryPointProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2ACrossClusterMigration";
}

/** ApplyRecoveryPoint input specific to HyperVReplicaAzure provider. */
export interface HyperVReplicaAzureApplyRecoveryPointInput
  extends ApplyRecoveryPointProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** The primary kek certificate pfx. */
  primaryKekCertificatePfx?: string;
  /** The secondary kek certificate pfx. */
  secondaryKekCertificatePfx?: string;
}

/** ApplyRecoveryPoint input specific to InMageAzureV2 provider. */
export interface InMageAzureV2ApplyRecoveryPointInput
  extends ApplyRecoveryPointProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
}

/** ApplyRecoveryPoint input specific to InMageRcm provider. */
export interface InMageRcmApplyRecoveryPointInput
  extends ApplyRecoveryPointProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The recovery point Id. */
  recoveryPointId: string;
}

/** HyperVReplicaAzureFailback specific planned failover input. */
export interface HyperVReplicaAzureFailbackProviderInput
  extends PlannedFailoverProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzureFailback";
  /** Data sync option. */
  dataSyncOption?: string;
  /** ALR options to create alternate recovery. */
  recoveryVmCreationOption?: string;
  /** Provider Id for alternate location. */
  providerIdForAlternateRecovery?: string;
}

/** HyperVReplicaAzure specific planned failover input. */
export interface HyperVReplicaAzurePlannedFailoverProviderInput
  extends PlannedFailoverProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** Primary kek certificate pfx. */
  primaryKekCertificatePfx?: string;
  /** Secondary kek certificate pfx. */
  secondaryKekCertificatePfx?: string;
  /** The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** Provider specific input for InMageRcmFailback failover. */
export interface InMageRcmFailbackPlannedFailoverProviderInput
  extends PlannedFailoverProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcmFailback";
  /** The recovery point type. */
  recoveryPointType: InMageRcmFailbackRecoveryPointType;
}

/** A2A provider specific recovery point details. */
export interface A2ARecoveryPointDetails
  extends ProviderSpecificRecoveryPointDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** A value indicating whether the recovery point is multi VM consistent. */
  recoveryPointSyncType?: RecoveryPointSyncType;
  /** List of disk ids representing a recovery point. */
  disks?: string[];
}

/** InMage Azure V2 provider specific recovery point details. */
export interface InMageAzureV2RecoveryPointDetails
  extends ProviderSpecificRecoveryPointDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** A value indicating whether the recovery point is multi VM consistent. */
  isMultiVmSyncPoint?: string;
}

/** InMageRcm provider specific recovery point details. */
export interface InMageRcmRecoveryPointDetails
  extends ProviderSpecificRecoveryPointDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /**
   * A value indicating whether the recovery point is multi VM consistent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMultiVmSyncPoint?: string;
}

/** InMage disable protection provider specific input. */
export interface InMageDisableProtectionProviderSpecificInput
  extends DisableProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** A value indicating whether the replica VM should be destroyed or retained. Values from Delete and Retain. */
  replicaVmDeletionStatus?: string;
}

/** A2A remove disk(s) input. */
export interface A2ARemoveDisksInput extends RemoveDisksProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The list of vm disk vhd URIs. */
  vmDisksUris?: string[];
  /** The list of vm managed disk Ids. */
  vmManagedDisksIds?: string[];
}

/** Azure specific reprotect input. */
export interface A2AReprotectInput
  extends ReverseReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The recovery container Id. */
  recoveryContainerId?: string;
  /** The list of vm disk details. */
  vmDisks?: A2AVmDiskInputDetails[];
  /** The recovery resource group Id. Valid for V2 scenarios. */
  recoveryResourceGroupId?: string;
  /** The recovery cloud service Id. Valid for V1 scenarios. */
  recoveryCloudServiceId?: string;
  /** The recovery availability set. */
  recoveryAvailabilitySetId?: string;
  /** The Policy Id. */
  policyId?: string;
}

/** Azure specific reprotect input. */
export interface HyperVReplicaAzureReprotectInput
  extends ReverseReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** The Hyper-V host Vm Id. */
  hvHostVmId?: string;
  /** The Vm Name. */
  vmName?: string;
  /** The OS type associated with vm. */
  osType?: string;
  /** The OS disk VHD id associated with vm. */
  vHDId?: string;
  /** The storage account name. */
  storageAccountId?: string;
  /** The storage account to be used for logging during replication. */
  logStorageAccountId?: string;
}

/** InMageAzureV2 specific provider input. */
export interface InMageAzureV2ReprotectInput
  extends ReverseReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The Master target Id. */
  masterTargetId?: string;
  /** The Process Server Id. */
  processServerId?: string;
  /** The storage account id. */
  storageAccountId?: string;
  /** The CS account Id. */
  runAsAccountId?: string;
  /** The Policy Id. */
  policyId?: string;
  /** The storage account to be used for logging during replication. */
  logStorageAccountId?: string;
  /** The disks to include list. */
  disksToInclude?: string[];
}

/** InMageRcmFailback specific provider input. */
export interface InMageRcmFailbackReprotectInput
  extends ReverseReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcmFailback";
  /** The process server Id. */
  processServerId: string;
  /** The run as account Id. */
  runAsAccountId?: string;
  /** The Policy Id. */
  policyId: string;
}

/** InMageRcm specific provider input. */
export interface InMageRcmReprotectInput
  extends ReverseReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The reprotect agent Id. */
  reprotectAgentId: string;
  /** The target datastore name. */
  datastoreName: string;
  /** The log storage account ARM Id. */
  logStorageAccountId: string;
  /** The Policy Id. */
  policyId?: string;
}

/** InMageAzureV2 specific provider input. */
export interface InMageReprotectInput
  extends ReverseReplicationProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** The Master Target Id. */
  masterTargetId: string;
  /** The Process Server Id. */
  processServerId: string;
  /** The retention drive to use on the MT. */
  retentionDrive: string;
  /** The CS account Id. */
  runAsAccountId?: string;
  /** The target datastore name. */
  datastoreName?: string;
  /** The enable disk exclusion input. */
  diskExclusionInput?: InMageDiskExclusionInput;
  /** The Policy Id. */
  profileId: string;
  /** The disks to include list. */
  disksToInclude?: string[];
}

/** Provider specific input for InMageAzureV2 switch provider. */
export interface InMageAzureV2SwitchProviderInput
  extends SwitchProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The target vault Id. */
  targetVaultID: string;
  /** The target fabric Id. */
  targetFabricID: string;
  /** The target appliance Id. */
  targetApplianceID: string;
}

/** A2A provider specific input for test failover. */
export interface A2ATestFailoverInput
  extends TestFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The recovery point id to be passed to test failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
  /** A value indicating whether to use recovery cloud service for TFO or not. */
  cloudServiceCreationOption?: string;
}

/** HvrA provider specific input for test failover. */
export interface HyperVReplicaAzureTestFailoverInput
  extends TestFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** Primary kek certificate pfx. */
  primaryKekCertificatePfx?: string;
  /** Secondary kek certificate pfx. */
  secondaryKekCertificatePfx?: string;
  /** The recovery point id to be passed to test failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** InMageAzureV2 provider specific input for test failover. */
export interface InMageAzureV2TestFailoverInput
  extends TestFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The recovery point id to be passed to test failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** InMageRcm provider specific input for test failover. */
export interface InMageRcmTestFailoverInput
  extends TestFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The test network Id. */
  networkId?: string;
  /** The recovery point id to be passed to test failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** Provider specific input for InMage test failover. */
export interface InMageTestFailoverInput
  extends TestFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** The recovery point type. Values from LatestTime, LatestTag or Custom. In the case of custom, the recovery point provided by RecoveryPointId will be used. In the other two cases, recovery point id will be ignored. */
  recoveryPointType?: RecoveryPointType;
  /** The recovery point id to be passed to test failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** A2A provider specific input for unplanned failover. */
export interface A2AUnplannedFailoverInput
  extends UnplannedFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
  /** A value indicating whether to use recovery cloud service for failover or not. */
  cloudServiceCreationOption?: string;
}

/** HvrA provider specific input for unplanned failover. */
export interface HyperVReplicaAzureUnplannedFailoverInput
  extends UnplannedFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** Primary kek certificate pfx. */
  primaryKekCertificatePfx?: string;
  /** Secondary kek certificate pfx. */
  secondaryKekCertificatePfx?: string;
  /** The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** InMageAzureV2 provider specific input for unplanned failover. */
export interface InMageAzureV2UnplannedFailoverInput
  extends UnplannedFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** InMageRcm provider specific input for unplanned failover. */
export interface InMageRcmUnplannedFailoverInput
  extends UnplannedFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** A value indicating whether VM is to be shutdown. */
  performShutdown: string;
  /** The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** Provider specific input for InMage unplanned failover. */
export interface InMageUnplannedFailoverInput
  extends UnplannedFailoverProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** The recovery point type. Values from LatestTime, LatestTag or Custom. In the case of custom, the recovery point provided by RecoveryPointId will be used. In the other two cases, recovery point id will be ignored. */
  recoveryPointType?: RecoveryPointType;
  /** The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed. */
  recoveryPointId?: string;
}

/** InMageRcm provider specific input to update appliance for replication protected item. */
export interface InMageRcmUpdateApplianceForReplicationProtectedItemInput
  extends UpdateApplianceForReplicationProtectedItemProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The run as account Id. */
  runAsAccountId?: string;
}

/** A2A provider specific settings. */
export interface A2AProtectionContainerMappingDetails
  extends ProtectionContainerMappingProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** A value indicating whether the auto update is enabled. */
  agentAutoUpdateStatus?: AgentAutoUpdateStatus;
  /** The automation account arm id. */
  automationAccountArmId?: string;
  /** A value indicating the type authentication to use for automation Account. */
  automationAccountAuthenticationType?: AutomationAccountAuthenticationType;
  /** The schedule arm name. */
  scheduleName?: string;
  /** The job schedule arm name. */
  jobScheduleName?: string;
}

/** InMageRcm provider specific container mapping details. */
export interface InMageRcmProtectionContainerMappingDetails
  extends ProtectionContainerMappingProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /**
   * A value indicating whether the flag for enable agent auto upgrade.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enableAgentAutoUpgrade?: string;
}

/** VMwareCbt provider specific container mapping details. */
export interface VMwareCbtProtectionContainerMappingDetails
  extends ProtectionContainerMappingProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /**
   * The target key vault ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly keyVaultId?: string;
  /**
   * The target key vault URI.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly keyVaultUri?: string;
  /**
   * The storage account ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageAccountId?: string;
  /**
   * The secret name of the storage account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageAccountSasSecretName?: string;
  /**
   * The secret name of the service bus connection string.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceBusConnectionStringSecretName?: string;
  /**
   * The target location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetLocation?: string;
  /**
   * The role size to NIC count map.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly roleSizeToNicCountMap?: { [propertyName: string]: number };
}

/** A2A container mapping input. */
export interface A2AContainerMappingInput
  extends ReplicationProviderSpecificContainerMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** A value indicating whether the auto update is enabled. */
  agentAutoUpdateStatus?: AgentAutoUpdateStatus;
  /** The automation account arm id. */
  automationAccountArmId?: string;
  /** A value indicating the type authentication to use for automation Account. */
  automationAccountAuthenticationType?: AutomationAccountAuthenticationType;
}

/** VMwareCbt container mapping input. */
export interface VMwareCbtContainerMappingInput
  extends ReplicationProviderSpecificContainerMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** The target key vault ARM Id. */
  keyVaultId?: string;
  /** The target key vault URL. */
  keyVaultUri?: string;
  /** The storage account ARM Id. */
  storageAccountId: string;
  /** The secret name of the storage account. */
  storageAccountSasSecretName?: string;
  /** The secret name of the service bus connection string. */
  serviceBusConnectionStringSecretName?: string;
  /** The target location. */
  targetLocation: string;
}

/** A2A update protection container mapping. */
export interface A2AUpdateContainerMappingInput
  extends ReplicationProviderSpecificUpdateContainerMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** A value indicating whether the auto update is enabled. */
  agentAutoUpdateStatus?: AgentAutoUpdateStatus;
  /** The automation account arm id. */
  automationAccountArmId?: string;
  /** A value indicating the type authentication to use for automation Account. */
  automationAccountAuthenticationType?: AutomationAccountAuthenticationType;
}

/** InMageRcm update protection container mapping. */
export interface InMageRcmUpdateContainerMappingInput
  extends ReplicationProviderSpecificUpdateContainerMappingInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** A value indicating whether agent auto upgrade has to be enabled. */
  enableAgentAutoUpgrade: string;
}

/** A2A specific switch protection input. */
export interface A2ASwitchProtectionInput
  extends SwitchProtectionProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The recovery container Id. */
  recoveryContainerId?: string;
  /** The list of vm disk details. */
  vmDisks?: A2AVmDiskInputDetails[];
  /** The list of vm managed disk details. */
  vmManagedDisks?: A2AVmManagedDiskInputDetails[];
  /** The recovery resource group Id. Valid for V2 scenarios. */
  recoveryResourceGroupId?: string;
  /** The recovery cloud service Id. Valid for V1 scenarios. */
  recoveryCloudServiceId?: string;
  /** The recovery availability set. */
  recoveryAvailabilitySetId?: string;
  /** The Policy Id. */
  policyId?: string;
  /** The boot diagnostic storage account. */
  recoveryBootDiagStorageAccountId?: string;
  /** The recovery availability zone. */
  recoveryAvailabilityZone?: string;
  /** The recovery proximity placement group Id. */
  recoveryProximityPlacementGroupId?: string;
  /** The virtual machine scale set id. */
  recoveryVirtualMachineScaleSetId?: string;
  /** The recovery capacity reservation group Id. */
  recoveryCapacityReservationGroupId?: string;
  /** The recovery disk encryption information. */
  diskEncryptionInfo?: DiskEncryptionInfo;
}

/** This class represents the task details for an automation runbook. */
export interface AutomationRunbookTaskDetails extends TaskTypeDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AutomationRunbookTaskDetails";
  /** The recovery plan task name. */
  name?: string;
  /** The cloud service of the automation runbook account. */
  cloudServiceName?: string;
  /** The subscription Id of the automation runbook account. */
  subscriptionId?: string;
  /** The automation account name of the runbook. */
  accountName?: string;
  /** The runbook Id. */
  runbookId?: string;
  /** The runbook name. */
  runbookName?: string;
  /** The job Id of the runbook execution. */
  jobId?: string;
  /** The execution output of the runbook. */
  jobOutput?: string;
  /** A value indicating whether it is a primary side script or not. */
  isPrimarySideScript?: boolean;
}

/** This class contains monitoring details of all the inconsistent Protected Entities in Vmm. */
export interface ConsistencyCheckTaskDetails extends TaskTypeDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ConsistencyCheckTaskDetails";
  /** The list of inconsistent Vm details. */
  vmDetails?: InconsistentVmDetails[];
}

/** This class represents a task which is actually a workflow so that one can navigate to its individual drill down. */
export interface JobTaskDetails extends TaskTypeDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "JobTaskDetails"
    | "FabricReplicationGroupTaskDetails"
    | "VirtualMachineTaskDetails";
  /** The job entity. */
  jobTask?: JobEntity;
}

/** This class represents the manual action task details. */
export interface ManualActionTaskDetails extends TaskTypeDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ManualActionTaskDetails";
  /** The name. */
  name?: string;
  /** The instructions. */
  instructions?: string;
  /** The observation. */
  observation?: string;
}

/** This class represents the script action task details. */
export interface ScriptActionTaskDetails extends TaskTypeDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ScriptActionTaskDetails";
  /** The name. */
  name?: string;
  /** The path. */
  path?: string;
  /** The output. */
  output?: string;
  /** A value indicating whether it is a primary side script or not. */
  isPrimarySideScript?: boolean;
}

/** This class represents the vm NicUpdates task details. */
export interface VmNicUpdatesTaskDetails extends TaskTypeDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VmNicUpdatesTaskDetails";
  /** Virtual machine Id. */
  vmId?: string;
  /** Nic Id. */
  nicId?: string;
  /** Name of the Nic. */
  name?: string;
}

/** This class represents the inline workflow task details. */
export interface InlineWorkflowTaskDetails extends GroupTaskDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InlineWorkflowTaskDetails";
  /** The list of child workflow ids. */
  workflowIds?: string[];
}

/** This class represents the recovery plan group task. */
export interface RecoveryPlanGroupTaskDetails extends GroupTaskDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "RecoveryPlanGroupTaskDetails"
    | "RecoveryPlanShutdownGroupTaskDetails";
  /** The name. */
  name?: string;
  /** The group identifier. */
  groupId?: string;
  /** The group type. */
  rpGroupType?: string;
}

/** This class represents job details based on specific job type. */
export interface AsrJobDetails extends JobDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AsrJobDetails";
}

/** This class represents details for export jobs workflow. */
export interface ExportJobDetails extends JobDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ExportJobDetails";
  /** BlobUri of the exported jobs. */
  blobUri?: string;
  /** The sas token to access blob. */
  sasToken?: string;
}

/** This class represents the details for a failover job. */
export interface FailoverJobDetails extends JobDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "FailoverJobDetails";
  /** The test VM details. */
  protectedItemDetails?: FailoverReplicationProtectedItemDetails[];
}

/** This class represents details for switch protection job. */
export interface SwitchProtectionJobDetails extends JobDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "SwitchProtectionJobDetails";
  /** ARM Id of the new replication protected item. */
  newReplicationProtectedItemId?: string;
}

/** This class represents the details for a test failover job. */
export interface TestFailoverJobDetails extends JobDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "TestFailoverJobDetails";
  /** The test failover status. */
  testFailoverStatus?: string;
  /** The test failover comments. */
  comments?: string;
  /** The test network name. */
  networkName?: string;
  /** The test network friendly name. */
  networkFriendlyName?: string;
  /** The test network type (see TestFailoverInput enum for possible values). */
  networkType?: string;
  /** The test VM details. */
  protectedItemDetails?: FailoverReplicationProtectedItemDetails[];
}

/** A2A specific policy details. */
export interface A2APolicyDetails extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The recovery point threshold in minutes. */
  recoveryPointThresholdInMinutes?: number;
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistory?: number;
  /** The app consistent snapshot frequency in minutes. */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. */
  multiVmSyncStatus?: string;
  /** The crash consistent snapshot frequency in minutes. */
  crashConsistentFrequencyInMinutes?: number;
}

/** Hyper-V Replica Azure specific protection profile details. */
export interface HyperVReplicaAzurePolicyDetails
  extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** The duration (in hours) to which point the recovery history needs to be maintained. */
  recoveryPointHistoryDurationInHours?: number;
  /** The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM. */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /** The replication interval. */
  replicationInterval?: number;
  /** The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately. */
  onlineReplicationStartTime?: string;
  /** A value indicating whether encryption is enabled for virtual machines in this cloud. */
  encryption?: string;
  /** The active storage account Id. */
  activeStorageAccountId?: string;
}

/** Base class for HyperVReplica policy details. */
export interface HyperVReplicaBasePolicyDetails
  extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaBasePolicyDetails";
  /** A value indicating the number of recovery points. */
  recoveryPoints?: number;
  /** A value indicating the application consistent frequency. */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /** A value indicating whether compression has to be enabled. */
  compression?: string;
  /** A value indicating whether IR is online. */
  initialReplicationMethod?: string;
  /** A value indicating the online IR start time. */
  onlineReplicationStartTime?: string;
  /** A value indicating the offline IR import path. */
  offlineReplicationImportPath?: string;
  /** A value indicating the offline IR export path. */
  offlineReplicationExportPath?: string;
  /** A value indicating the recovery HTTPS port. */
  replicationPort?: number;
  /** A value indicating the authentication type. */
  allowedAuthenticationType?: number;
  /** A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud. */
  replicaDeletionOption?: string;
}

/** Hyper-V Replica Blue specific protection profile details. */
export interface HyperVReplicaBluePolicyDetails
  extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplica2012R2";
  /** A value indicating the replication interval. */
  replicationFrequencyInSeconds?: number;
  /** A value indicating the number of recovery points. */
  recoveryPoints?: number;
  /** A value indicating the application consistent frequency. */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /** A value indicating whether compression has to be enabled. */
  compression?: string;
  /** A value indicating whether IR is online. */
  initialReplicationMethod?: string;
  /** A value indicating the online IR start time. */
  onlineReplicationStartTime?: string;
  /** A value indicating the offline IR import path. */
  offlineReplicationImportPath?: string;
  /** A value indicating the offline IR export path. */
  offlineReplicationExportPath?: string;
  /** A value indicating the recovery HTTPS port. */
  replicationPort?: number;
  /** A value indicating the authentication type. */
  allowedAuthenticationType?: number;
  /** A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud */
  replicaDeletionOption?: string;
}

/** Hyper-V Replica Blue specific protection profile details. */
export interface HyperVReplicaPolicyDetails
  extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplica2012";
  /** A value indicating the number of recovery points. */
  recoveryPoints?: number;
  /** A value indicating the application consistent frequency. */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /** A value indicating whether compression has to be enabled. */
  compression?: string;
  /** A value indicating whether IR is online. */
  initialReplicationMethod?: string;
  /** A value indicating the online IR start time. */
  onlineReplicationStartTime?: string;
  /** A value indicating the offline IR import path. */
  offlineReplicationImportPath?: string;
  /** A value indicating the offline IR export path. */
  offlineReplicationExportPath?: string;
  /** A value indicating the recovery HTTPS port. */
  replicationPort?: number;
  /** A value indicating the authentication type. */
  allowedAuthenticationType?: number;
  /** A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud */
  replicaDeletionOption?: string;
}

/** InMage Azure v2 specific protection profile details. */
export interface InMageAzureV2PolicyDetails
  extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The crash consistent snapshot frequency in minutes. */
  crashConsistentFrequencyInMinutes?: number;
  /** The recovery point threshold in minutes. */
  recoveryPointThresholdInMinutes?: number;
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistory?: number;
  /** The app consistent snapshot frequency in minutes. */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. */
  multiVmSyncStatus?: string;
}

/** Base class for the policies of providers using InMage replication. */
export interface InMageBasePolicyDetails extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageBasePolicyDetails";
  /** The recovery point threshold in minutes. */
  recoveryPointThresholdInMinutes?: number;
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistory?: number;
  /** The app consistent snapshot frequency in minutes. */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. */
  multiVmSyncStatus?: string;
}

/** InMage specific protection profile details. */
export interface InMagePolicyDetails extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** The recovery point threshold in minutes. */
  recoveryPointThresholdInMinutes?: number;
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistory?: number;
  /** The app consistent snapshot frequency in minutes. */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. */
  multiVmSyncStatus?: string;
}

/** InMageRcm failback specific policy details. */
export interface InMageRcmFailbackPolicyDetails
  extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcmFailback";
  /** The app consistent snapshot frequency in minutes. */
  appConsistentFrequencyInMinutes?: number;
  /** The crash consistent snapshot frequency in minutes. */
  crashConsistentFrequencyInMinutes?: number;
}

/** InMageRcm specific policy details. */
export interface InMageRcmPolicyDetails extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistoryInMinutes?: number;
  /** The app consistent snapshot frequency in minutes. */
  appConsistentFrequencyInMinutes?: number;
  /** The crash consistent snapshot frequency in minutes. */
  crashConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. */
  enableMultiVmSync?: string;
}

/** VMware Cbt specific policy details. */
export interface VmwareCbtPolicyDetails extends PolicyProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistoryInMinutes?: number;
  /** The app consistent snapshot frequency in minutes. */
  appConsistentFrequencyInMinutes?: number;
  /** The crash consistent snapshot frequency in minutes. */
  crashConsistentFrequencyInMinutes?: number;
}

/** A2A Cross-Cluster Migration Policy creation input. */
export interface A2ACrossClusterMigrationPolicyCreationInput
  extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2ACrossClusterMigration";
}

/** A2A Policy creation input. */
export interface A2APolicyCreationInput extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistory?: number;
  /** The crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes?: number;
  /** The app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'. */
  multiVmSyncStatus: SetMultiVmSyncStatus;
}

/** Hyper-V Replica Azure specific input for creating a protection profile. */
export interface HyperVReplicaAzurePolicyInput
  extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** The duration (in hours) to which point the recovery history needs to be maintained. */
  recoveryPointHistoryDuration?: number;
  /** The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM. */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /** The replication interval. */
  replicationInterval?: number;
  /** The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately. */
  onlineReplicationStartTime?: string;
  /** The list of storage accounts to which the VMs in the primary cloud can replicate to. */
  storageAccounts?: string[];
}

/** Hyper-V Replica specific policy Input. */
export interface HyperVReplicaPolicyInput extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplica2012" | "HyperVReplica2012R2";
  /** A value indicating the number of recovery points. */
  recoveryPoints?: number;
  /** A value indicating the application consistent frequency. */
  applicationConsistentSnapshotFrequencyInHours?: number;
  /** A value indicating whether compression has to be enabled. */
  compression?: string;
  /** A value indicating whether IR is online. */
  initialReplicationMethod?: string;
  /** A value indicating the online IR start time. */
  onlineReplicationStartTime?: string;
  /** A value indicating the offline IR import path. */
  offlineReplicationImportPath?: string;
  /** A value indicating the offline IR export path. */
  offlineReplicationExportPath?: string;
  /** A value indicating the recovery HTTPS port. */
  replicationPort?: number;
  /** A value indicating the authentication type. */
  allowedAuthenticationType?: number;
  /** A value indicating whether the VM has to be auto deleted. */
  replicaDeletion?: string;
}

/** VMWare Azure specific policy Input. */
export interface InMageAzureV2PolicyInput extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The recovery point threshold in minutes. */
  recoveryPointThresholdInMinutes?: number;
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistory?: number;
  /** The crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes?: number;
  /** The app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'. */
  multiVmSyncStatus: SetMultiVmSyncStatus;
}

/** VMWare Azure specific protection profile Input. */
export interface InMagePolicyInput extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** The recovery point threshold in minutes. */
  recoveryPointThresholdInMinutes?: number;
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistory?: number;
  /** The app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'. */
  multiVmSyncStatus: SetMultiVmSyncStatus;
}

/** InMageRcmFailback policy creation input. */
export interface InMageRcmFailbackPolicyCreationInput
  extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcmFailback";
  /** The crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes?: number;
  /** The app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes?: number;
}

/** InMageRcm policy creation input. */
export interface InMageRcmPolicyCreationInput
  extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistoryInMinutes?: number;
  /** The crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes?: number;
  /** The app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. */
  enableMultiVmSync?: string;
}

/** VMware Cbt policy creation input. */
export interface VMwareCbtPolicyCreationInput
  extends PolicyProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareCbt";
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistoryInMinutes?: number;
  /** The crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes?: number;
  /** The app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes?: number;
}

/** A2A provider specific settings. */
export interface A2AReplicationIntentDetails
  extends ReplicationProtectionIntentProviderSpecificSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The fabric specific object Id of the virtual machine. */
  fabricObjectId?: string;
  /** The primary location for the virtual machine. */
  primaryLocation?: string;
  /** The recovery location for the virtual machine. */
  recoveryLocation?: string;
  /** The recovery subscription Id of the virtual machine. */
  recoverySubscriptionId?: string;
  /** The list of vm disk details. */
  vmDisks?: A2AProtectionIntentDiskInputDetails[];
  /** The list of vm managed disk details. */
  vmManagedDisks?: A2AProtectionIntentManagedDiskInputDetails[];
  /** The recovery resource group id. */
  recoveryResourceGroupId?: string;
  /** The protection profile custom details. */
  protectionProfile?: ProtectionProfileCustomDetailsUnion;
  /** The primary staging storage account details. */
  primaryStagingStorageAccount?: StorageAccountCustomDetailsUnion;
  /** The recovery availability set details. */
  recoveryAvailabilitySet?: RecoveryAvailabilitySetCustomDetailsUnion;
  /** The recovery virtual network details. */
  recoveryVirtualNetwork?: RecoveryVirtualNetworkCustomDetailsUnion;
  /** The recovery proximity placement group custom details. */
  recoveryProximityPlacementGroup?: RecoveryProximityPlacementGroupCustomDetailsUnion;
  /** A value indicating whether the auto protection is enabled. */
  autoProtectionOfDataDisk?: AutoProtectionOfDataDisk;
  /** The multi vm group name. */
  multiVmGroupName?: string;
  /** The multi vm group id. */
  multiVmGroupId?: string;
  /** The boot diagnostic storage account. */
  recoveryBootDiagStorageAccount?: StorageAccountCustomDetailsUnion;
  /** The recovery disk encryption information (for two pass flows). */
  diskEncryptionInfo?: DiskEncryptionInfo;
  /** The recovery availability zone. */
  recoveryAvailabilityZone?: string;
  /** The recovery availability type of the virtual machine. */
  recoveryAvailabilityType: string;
  /** A value indicating whether the auto update is enabled. */
  agentAutoUpdateStatus?: AgentAutoUpdateStatus;
  /** The automation account arm id. */
  automationAccountArmId?: string;
  /** A value indicating the type authentication to use for automation Account. */
  automationAccountAuthenticationType?: AutomationAccountAuthenticationType;
}

/** A2A create protection intent input. */
export interface A2ACreateProtectionIntentInput
  extends CreateProtectionIntentProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The fabric specific object Id of the virtual machine. */
  fabricObjectId: string;
  /** The primary location for the virtual machine. */
  primaryLocation: string;
  /** The recovery location for the virtual machine. */
  recoveryLocation: string;
  /** The recovery subscription Id of the virtual machine. */
  recoverySubscriptionId: string;
  /** The recovery availability type of the virtual machine. */
  recoveryAvailabilityType: A2ARecoveryAvailabilityType;
  /** The protection profile custom inputs. */
  protectionProfileCustomInput?: ProtectionProfileCustomDetailsUnion;
  /** The recovery resource group Id. Valid for V2 scenarios. */
  recoveryResourceGroupId: string;
  /** The primary staging storage account input. */
  primaryStagingStorageAccountCustomInput?: StorageAccountCustomDetailsUnion;
  /** The recovery availability set input. */
  recoveryAvailabilitySetCustomInput?: RecoveryAvailabilitySetCustomDetailsUnion;
  /** The recovery virtual network input. */
  recoveryVirtualNetworkCustomInput?: RecoveryVirtualNetworkCustomDetailsUnion;
  /** The recovery proximity placement group custom input. */
  recoveryProximityPlacementGroupCustomInput?: RecoveryProximityPlacementGroupCustomDetailsUnion;
  /** A value indicating whether the auto protection is enabled. */
  autoProtectionOfDataDisk?: AutoProtectionOfDataDisk;
  /** The list of vm disk inputs. */
  vmDisks?: A2AProtectionIntentDiskInputDetails[];
  /** The list of vm managed disk inputs. */
  vmManagedDisks?: A2AProtectionIntentManagedDiskInputDetails[];
  /** The multi vm group name. */
  multiVmGroupName?: string;
  /** The multi vm group id. */
  multiVmGroupId?: string;
  /** The boot diagnostic storage account. */
  recoveryBootDiagStorageAccount?: StorageAccountCustomDetailsUnion;
  /** The recovery disk encryption information (for two pass flows). */
  diskEncryptionInfo?: DiskEncryptionInfo;
  /** The recovery availability zone. */
  recoveryAvailabilityZone?: string;
  /** A value indicating whether the auto update is enabled. */
  agentAutoUpdateStatus?: AgentAutoUpdateStatus;
  /** A value indicating the authentication type for automation account. The default value is "RunAsAccount". */
  automationAccountAuthenticationType?: AutomationAccountAuthenticationType;
  /** The automation account arm id. */
  automationAccountArmId?: string;
}

/** Recovery plan Automation runbook action details. */
export interface RecoveryPlanAutomationRunbookActionDetails
  extends RecoveryPlanActionDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AutomationRunbookActionDetails";
  /** The runbook ARM Id. */
  runbookId?: string;
  /** The runbook timeout. */
  timeout?: string;
  /** The fabric location. */
  fabricLocation: RecoveryPlanActionLocation;
}

/** Recovery plan manual action details. */
export interface RecoveryPlanManualActionDetails
  extends RecoveryPlanActionDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ManualActionDetails";
  /** The manual action description. */
  description?: string;
}

/** Recovery plan script action details. */
export interface RecoveryPlanScriptActionDetails
  extends RecoveryPlanActionDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ScriptActionDetails";
  /** The script path. */
  path: string;
  /** The script timeout. */
  timeout?: string;
  /** The fabric location. */
  fabricLocation: RecoveryPlanActionLocation;
}

/** Recovery plan A2A specific details. */
export interface RecoveryPlanA2ADetails
  extends RecoveryPlanProviderSpecificDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The primary zone. */
  primaryZone?: string;
  /** The recovery zone. */
  recoveryZone?: string;
  /** The primary extended location. */
  primaryExtendedLocation?: ExtendedLocation;
  /** The recovery extended location. */
  recoveryExtendedLocation?: ExtendedLocation;
}

/** Recovery plan A2A input. */
export interface RecoveryPlanA2AInput
  extends RecoveryPlanProviderSpecificInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The primary zone. */
  primaryZone?: string;
  /** The recovery zone. */
  recoveryZone?: string;
  /** The primary extended location. */
  primaryExtendedLocation?: ExtendedLocation;
  /** The recovery extended location. */
  recoveryExtendedLocation?: ExtendedLocation;
}

/** Recovery plan A2A failover input. */
export interface RecoveryPlanA2AFailoverInput
  extends RecoveryPlanProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "A2A";
  /** The recovery point type. */
  recoveryPointType: A2ARpRecoveryPointType;
  /** A value indicating whether to use recovery cloud service for TFO or not. */
  cloudServiceCreationOption?: string;
  /** A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover. */
  multiVmSyncPointOption?: MultiVmSyncPointOption;
}

/** Recovery plan HVR Azure failback input. */
export interface RecoveryPlanHyperVReplicaAzureFailbackInput
  extends RecoveryPlanProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzureFailback";
  /** The data sync option. */
  dataSyncOption: DataSyncStatus;
  /** The ALR option. */
  recoveryVmCreationOption: AlternateLocationRecoveryOption;
}

/** Recovery plan HVR Azure failover input. */
export interface RecoveryPlanHyperVReplicaAzureFailoverInput
  extends RecoveryPlanProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplicaAzure";
  /** The primary KEK certificate PFX. */
  primaryKekCertificatePfx?: string;
  /** The secondary KEK certificate PFX. */
  secondaryKekCertificatePfx?: string;
  /** The recovery point type. */
  recoveryPointType?: HyperVReplicaAzureRpRecoveryPointType;
}

/** Recovery plan InMageAzureV2 failover input. */
export interface RecoveryPlanInMageAzureV2FailoverInput
  extends RecoveryPlanProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageAzureV2";
  /** The recovery point type. */
  recoveryPointType: InMageV2RpRecoveryPointType;
  /** A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover. */
  useMultiVmSyncPoint?: string;
}

/** Recovery plan InMage failover input. */
export interface RecoveryPlanInMageFailoverInput
  extends RecoveryPlanProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMage";
  /** The recovery point type. */
  recoveryPointType: RpInMageRecoveryPointType;
}

/** Recovery plan InMageRcmFailback failover input. */
export interface RecoveryPlanInMageRcmFailbackFailoverInput
  extends RecoveryPlanProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcmFailback";
  /** The recovery point type. */
  recoveryPointType: InMageRcmFailbackRecoveryPointType;
  /** A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover. */
  useMultiVmSyncPoint?: string;
}

/** Recovery plan InMageRcm failover input. */
export interface RecoveryPlanInMageRcmFailoverInput
  extends RecoveryPlanProviderSpecificFailoverInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "InMageRcm";
  /** The recovery point type. */
  recoveryPointType: RecoveryPlanPointType;
  /** A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover. */
  useMultiVmSyncPoint?: string;
}

/** Existing storage account input. */
export interface ExistingProtectionProfile
  extends ProtectionProfileCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
  /** The protection profile Arm Id. Throw error, if resource does not exists. */
  protectionProfileId: string;
}

/** New Protection profile input. */
export interface NewProtectionProfile extends ProtectionProfileCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "New";
  /** The protection profile input. */
  policyName: string;
  /** The duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistory?: number;
  /** The crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes?: number;
  /** The app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes?: number;
  /** A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'. */
  multiVmSyncStatus: SetMultiVmSyncStatus;
}

/** Existing storage account input. */
export interface ExistingStorageAccount extends StorageAccountCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
  /** The storage account Arm Id. Throw error, if resource does not exists. */
  azureStorageAccountId: string;
}

/** Existing recovery availability set input. */
export interface ExistingRecoveryAvailabilitySet
  extends RecoveryAvailabilitySetCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
  /** The recovery availability set Id. Will throw error, if resource does not exist. */
  recoveryAvailabilitySetId?: string;
}

/** Existing recovery virtual network input. */
export interface ExistingRecoveryVirtualNetwork
  extends RecoveryVirtualNetworkCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
  /** The recovery virtual network Id. Will throw error, if resource does not exist. */
  recoveryVirtualNetworkId: string;
  /** The recovery subnet name. */
  recoverySubnetName?: string;
}

/** Recovery virtual network input to create new virtual network from given source network. */
export interface NewRecoveryVirtualNetwork
  extends RecoveryVirtualNetworkCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "New";
  /** The name of the resource group to be used to create the recovery virtual network. If absent, target network would be created in the same resource group as target VM. */
  recoveryVirtualNetworkResourceGroupName?: string;
  /** The recovery virtual network name. */
  recoveryVirtualNetworkName?: string;
}

/** Existing recovery proximity placement group input. */
export interface ExistingRecoveryProximityPlacementGroup
  extends RecoveryProximityPlacementGroupCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
  /** The recovery proximity placement group Id. Will throw error, if resource does not exist. */
  recoveryProximityPlacementGroupId?: string;
}

/** Existing recovery resource group input. */
export interface ExistingRecoveryResourceGroup
  extends RecoveryResourceGroupCustomDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  resourceType: "Existing";
  /** The recovery resource group Id. Valid for V2 scenarios. */
  recoveryResourceGroupId?: string;
}

/** VMM fabric provider specific VM settings. */
export interface VmmVirtualMachineDetails extends HyperVVirtualMachineDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VmmVirtualMachine";
}

/** This class represents the fabric replication group task details. */
export interface FabricReplicationGroupTaskDetails extends JobTaskDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "FabricReplicationGroupTaskDetails";
  /** The skipped reason. */
  skippedReason?: string;
  /** The skipped reason string. */
  skippedReasonString?: string;
}

/** This class represents the virtual machine task details. */
export interface VirtualMachineTaskDetails extends JobTaskDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VirtualMachineTaskDetails";
  /** The skipped reason. */
  skippedReason?: string;
  /** The skipped reason string. */
  skippedReasonString?: string;
}

/** This class represents the recovery plan shutdown group task details. */
export interface RecoveryPlanShutdownGroupTaskDetails
  extends RecoveryPlanGroupTaskDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "RecoveryPlanShutdownGroupTaskDetails";
}

/** HyperV Replica Blue policy input. */
export interface HyperVReplicaBluePolicyInput extends HyperVReplicaPolicyInput {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVReplica2012R2";
  /** A value indicating the replication interval. */
  replicationFrequencyInSeconds?: number;
}

/** Defines headers for ReplicationProtectedItems_updateMobilityService operation. */
export interface ReplicationProtectedItemsUpdateMobilityServiceHeaders {
  location?: string;
}

/** Known values of {@link HealthErrorCustomerResolvability} that the service accepts. */
export enum KnownHealthErrorCustomerResolvability {
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed"
}

/**
 * Defines values for HealthErrorCustomerResolvability. \
 * {@link KnownHealthErrorCustomerResolvability} can be used interchangeably with HealthErrorCustomerResolvability,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allowed** \
 * **NotAllowed**
 */
export type HealthErrorCustomerResolvability = string;

/** Known values of {@link MigrationState} that the service accepts. */
export enum KnownMigrationState {
  /** None */
  None = "None",
  /** EnableMigrationInProgress */
  EnableMigrationInProgress = "EnableMigrationInProgress",
  /** EnableMigrationFailed */
  EnableMigrationFailed = "EnableMigrationFailed",
  /** DisableMigrationInProgress */
  DisableMigrationInProgress = "DisableMigrationInProgress",
  /** DisableMigrationFailed */
  DisableMigrationFailed = "DisableMigrationFailed",
  /** InitialSeedingInProgress */
  InitialSeedingInProgress = "InitialSeedingInProgress",
  /** InitialSeedingFailed */
  InitialSeedingFailed = "InitialSeedingFailed",
  /** Replicating */
  Replicating = "Replicating",
  /** MigrationInProgress */
  MigrationInProgress = "MigrationInProgress",
  /** MigrationSucceeded */
  MigrationSucceeded = "MigrationSucceeded",
  /** MigrationFailed */
  MigrationFailed = "MigrationFailed",
  /** ResumeInProgress */
  ResumeInProgress = "ResumeInProgress",
  /** ResumeInitiated */
  ResumeInitiated = "ResumeInitiated",
  /** SuspendingProtection */
  SuspendingProtection = "SuspendingProtection",
  /** ProtectionSuspended */
  ProtectionSuspended = "ProtectionSuspended",
  /** MigrationCompletedWithInformation */
  MigrationCompletedWithInformation = "MigrationCompletedWithInformation",
  /** MigrationPartiallySucceeded */
  MigrationPartiallySucceeded = "MigrationPartiallySucceeded"
}

/**
 * Defines values for MigrationState. \
 * {@link KnownMigrationState} can be used interchangeably with MigrationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **EnableMigrationInProgress** \
 * **EnableMigrationFailed** \
 * **DisableMigrationInProgress** \
 * **DisableMigrationFailed** \
 * **InitialSeedingInProgress** \
 * **InitialSeedingFailed** \
 * **Replicating** \
 * **MigrationInProgress** \
 * **MigrationSucceeded** \
 * **MigrationFailed** \
 * **ResumeInProgress** \
 * **ResumeInitiated** \
 * **SuspendingProtection** \
 * **ProtectionSuspended** \
 * **MigrationCompletedWithInformation** \
 * **MigrationPartiallySucceeded**
 */
export type MigrationState = string;

/** Known values of {@link TestMigrationState} that the service accepts. */
export enum KnownTestMigrationState {
  /** None */
  None = "None",
  /** TestMigrationInProgress */
  TestMigrationInProgress = "TestMigrationInProgress",
  /** TestMigrationSucceeded */
  TestMigrationSucceeded = "TestMigrationSucceeded",
  /** TestMigrationFailed */
  TestMigrationFailed = "TestMigrationFailed",
  /** TestMigrationCleanupInProgress */
  TestMigrationCleanupInProgress = "TestMigrationCleanupInProgress",
  /** TestMigrationCompletedWithInformation */
  TestMigrationCompletedWithInformation = "TestMigrationCompletedWithInformation",
  /** TestMigrationPartiallySucceeded */
  TestMigrationPartiallySucceeded = "TestMigrationPartiallySucceeded"
}

/**
 * Defines values for TestMigrationState. \
 * {@link KnownTestMigrationState} can be used interchangeably with TestMigrationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **TestMigrationInProgress** \
 * **TestMigrationSucceeded** \
 * **TestMigrationFailed** \
 * **TestMigrationCleanupInProgress** \
 * **TestMigrationCompletedWithInformation** \
 * **TestMigrationPartiallySucceeded**
 */
export type TestMigrationState = string;

/** Known values of {@link ProtectionHealth} that the service accepts. */
export enum KnownProtectionHealth {
  /** None */
  None = "None",
  /** Normal */
  Normal = "Normal",
  /** Warning */
  Warning = "Warning",
  /** Critical */
  Critical = "Critical"
}

/**
 * Defines values for ProtectionHealth. \
 * {@link KnownProtectionHealth} can be used interchangeably with ProtectionHealth,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Normal** \
 * **Warning** \
 * **Critical**
 */
export type ProtectionHealth = string;

/** Known values of {@link MigrationItemOperation} that the service accepts. */
export enum KnownMigrationItemOperation {
  /** DisableMigration */
  DisableMigration = "DisableMigration",
  /** TestMigrate */
  TestMigrate = "TestMigrate",
  /** TestMigrateCleanup */
  TestMigrateCleanup = "TestMigrateCleanup",
  /** Migrate */
  Migrate = "Migrate",
  /** StartResync */
  StartResync = "StartResync",
  /** PauseReplication */
  PauseReplication = "PauseReplication",
  /** ResumeReplication */
  ResumeReplication = "ResumeReplication"
}

/**
 * Defines values for MigrationItemOperation. \
 * {@link KnownMigrationItemOperation} can be used interchangeably with MigrationItemOperation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DisableMigration** \
 * **TestMigrate** \
 * **TestMigrateCleanup** \
 * **Migrate** \
 * **StartResync** \
 * **PauseReplication** \
 * **ResumeReplication**
 */
export type MigrationItemOperation = string;

/** Known values of {@link MigrationRecoveryPointType} that the service accepts. */
export enum KnownMigrationRecoveryPointType {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** ApplicationConsistent */
  ApplicationConsistent = "ApplicationConsistent",
  /** CrashConsistent */
  CrashConsistent = "CrashConsistent"
}

/**
 * Defines values for MigrationRecoveryPointType. \
 * {@link KnownMigrationRecoveryPointType} can be used interchangeably with MigrationRecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **ApplicationConsistent** \
 * **CrashConsistent**
 */
export type MigrationRecoveryPointType = string;

/** Known values of {@link LicenseType} that the service accepts. */
export enum KnownLicenseType {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** NoLicenseType */
  NoLicenseType = "NoLicenseType",
  /** WindowsServer */
  WindowsServer = "WindowsServer"
}

/**
 * Defines values for LicenseType. \
 * {@link KnownLicenseType} can be used interchangeably with LicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **NoLicenseType** \
 * **WindowsServer**
 */
export type LicenseType = string;

/** Known values of {@link DisableProtectionReason} that the service accepts. */
export enum KnownDisableProtectionReason {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** MigrationComplete */
  MigrationComplete = "MigrationComplete"
}

/**
 * Defines values for DisableProtectionReason. \
 * {@link KnownDisableProtectionReason} can be used interchangeably with DisableProtectionReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **MigrationComplete**
 */
export type DisableProtectionReason = string;

/** Known values of {@link AgentVersionStatus} that the service accepts. */
export enum KnownAgentVersionStatus {
  /** Supported */
  Supported = "Supported",
  /** NotSupported */
  NotSupported = "NotSupported",
  /** Deprecated */
  Deprecated = "Deprecated",
  /** UpdateRequired */
  UpdateRequired = "UpdateRequired",
  /** SecurityUpdateRequired */
  SecurityUpdateRequired = "SecurityUpdateRequired"
}

/**
 * Defines values for AgentVersionStatus. \
 * {@link KnownAgentVersionStatus} can be used interchangeably with AgentVersionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Supported** \
 * **NotSupported** \
 * **Deprecated** \
 * **UpdateRequired** \
 * **SecurityUpdateRequired**
 */
export type AgentVersionStatus = string;

/** Known values of {@link ExportJobOutputSerializationType} that the service accepts. */
export enum KnownExportJobOutputSerializationType {
  /** Json */
  Json = "Json",
  /** Xml */
  Xml = "Xml",
  /** Excel */
  Excel = "Excel"
}

/**
 * Defines values for ExportJobOutputSerializationType. \
 * {@link KnownExportJobOutputSerializationType} can be used interchangeably with ExportJobOutputSerializationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Json** \
 * **Xml** \
 * **Excel**
 */
export type ExportJobOutputSerializationType = string;

/** Known values of {@link RecoveryPlanGroupType} that the service accepts. */
export enum KnownRecoveryPlanGroupType {
  /** Shutdown */
  Shutdown = "Shutdown",
  /** Boot */
  Boot = "Boot",
  /** Failover */
  Failover = "Failover"
}

/**
 * Defines values for RecoveryPlanGroupType. \
 * {@link KnownRecoveryPlanGroupType} can be used interchangeably with RecoveryPlanGroupType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Shutdown** \
 * **Boot** \
 * **Failover**
 */
export type RecoveryPlanGroupType = string;

/** Known values of {@link ReplicationProtectedItemOperation} that the service accepts. */
export enum KnownReplicationProtectedItemOperation {
  /** ReverseReplicate */
  ReverseReplicate = "ReverseReplicate",
  /** Commit */
  Commit = "Commit",
  /** PlannedFailover */
  PlannedFailover = "PlannedFailover",
  /** UnplannedFailover */
  UnplannedFailover = "UnplannedFailover",
  /** DisableProtection */
  DisableProtection = "DisableProtection",
  /** TestFailover */
  TestFailover = "TestFailover",
  /** TestFailoverCleanup */
  TestFailoverCleanup = "TestFailoverCleanup",
  /** Failback */
  Failback = "Failback",
  /** FinalizeFailback */
  FinalizeFailback = "FinalizeFailback",
  /** CancelFailover */
  CancelFailover = "CancelFailover",
  /** ChangePit */
  ChangePit = "ChangePit",
  /** RepairReplication */
  RepairReplication = "RepairReplication",
  /** SwitchProtection */
  SwitchProtection = "SwitchProtection",
  /** CompleteMigration */
  CompleteMigration = "CompleteMigration"
}

/**
 * Defines values for ReplicationProtectedItemOperation. \
 * {@link KnownReplicationProtectedItemOperation} can be used interchangeably with ReplicationProtectedItemOperation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ReverseReplicate** \
 * **Commit** \
 * **PlannedFailover** \
 * **UnplannedFailover** \
 * **DisableProtection** \
 * **TestFailover** \
 * **TestFailoverCleanup** \
 * **Failback** \
 * **FinalizeFailback** \
 * **CancelFailover** \
 * **ChangePit** \
 * **RepairReplication** \
 * **SwitchProtection** \
 * **CompleteMigration**
 */
export type ReplicationProtectedItemOperation = string;

/** Known values of {@link PossibleOperationsDirections} that the service accepts. */
export enum KnownPossibleOperationsDirections {
  /** PrimaryToRecovery */
  PrimaryToRecovery = "PrimaryToRecovery",
  /** RecoveryToPrimary */
  RecoveryToPrimary = "RecoveryToPrimary"
}

/**
 * Defines values for PossibleOperationsDirections. \
 * {@link KnownPossibleOperationsDirections} can be used interchangeably with PossibleOperationsDirections,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PrimaryToRecovery** \
 * **RecoveryToPrimary**
 */
export type PossibleOperationsDirections = string;

/** Known values of {@link FailoverDeploymentModel} that the service accepts. */
export enum KnownFailoverDeploymentModel {
  /** NotApplicable */
  NotApplicable = "NotApplicable",
  /** Classic */
  Classic = "Classic",
  /** ResourceManager */
  ResourceManager = "ResourceManager"
}

/**
 * Defines values for FailoverDeploymentModel. \
 * {@link KnownFailoverDeploymentModel} can be used interchangeably with FailoverDeploymentModel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotApplicable** \
 * **Classic** \
 * **ResourceManager**
 */
export type FailoverDeploymentModel = string;

/** Known values of {@link SourceSiteOperations} that the service accepts. */
export enum KnownSourceSiteOperations {
  /** Required */
  Required = "Required",
  /** NotRequired */
  NotRequired = "NotRequired"
}

/**
 * Defines values for SourceSiteOperations. \
 * {@link KnownSourceSiteOperations} can be used interchangeably with SourceSiteOperations,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Required** \
 * **NotRequired**
 */
export type SourceSiteOperations = string;

/** Known values of {@link HealthErrorCategory} that the service accepts. */
export enum KnownHealthErrorCategory {
  /** None */
  None = "None",
  /** Replication */
  Replication = "Replication",
  /** TestFailover */
  TestFailover = "TestFailover",
  /** Configuration */
  Configuration = "Configuration",
  /** FabricInfrastructure */
  FabricInfrastructure = "FabricInfrastructure",
  /** VersionExpiry */
  VersionExpiry = "VersionExpiry",
  /** AgentAutoUpdateInfra */
  AgentAutoUpdateInfra = "AgentAutoUpdateInfra",
  /** AgentAutoUpdateArtifactDeleted */
  AgentAutoUpdateArtifactDeleted = "AgentAutoUpdateArtifactDeleted",
  /** AgentAutoUpdateRunAsAccount */
  AgentAutoUpdateRunAsAccount = "AgentAutoUpdateRunAsAccount",
  /** AgentAutoUpdateRunAsAccountExpiry */
  AgentAutoUpdateRunAsAccountExpiry = "AgentAutoUpdateRunAsAccountExpiry",
  /** AgentAutoUpdateRunAsAccountExpired */
  AgentAutoUpdateRunAsAccountExpired = "AgentAutoUpdateRunAsAccountExpired"
}

/**
 * Defines values for HealthErrorCategory. \
 * {@link KnownHealthErrorCategory} can be used interchangeably with HealthErrorCategory,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Replication** \
 * **TestFailover** \
 * **Configuration** \
 * **FabricInfrastructure** \
 * **VersionExpiry** \
 * **AgentAutoUpdateInfra** \
 * **AgentAutoUpdateArtifactDeleted** \
 * **AgentAutoUpdateRunAsAccount** \
 * **AgentAutoUpdateRunAsAccountExpiry** \
 * **AgentAutoUpdateRunAsAccountExpired**
 */
export type HealthErrorCategory = string;

/** Known values of {@link Severity} that the service accepts. */
export enum KnownSeverity {
  /** None */
  None = "NONE",
  /** Warning */
  Warning = "Warning",
  /** Error */
  Error = "Error",
  /** Info */
  Info = "Info"
}

/**
 * Defines values for Severity. \
 * {@link KnownSeverity} can be used interchangeably with Severity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NONE** \
 * **Warning** \
 * **Error** \
 * **Info**
 */
export type Severity = string;

/** Known values of {@link AgentAutoUpdateStatus} that the service accepts. */
export enum KnownAgentAutoUpdateStatus {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for AgentAutoUpdateStatus. \
 * {@link KnownAgentAutoUpdateStatus} can be used interchangeably with AgentAutoUpdateStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type AgentAutoUpdateStatus = string;

/** Known values of {@link AutomationAccountAuthenticationType} that the service accepts. */
export enum KnownAutomationAccountAuthenticationType {
  /** RunAsAccount */
  RunAsAccount = "RunAsAccount",
  /** SystemAssignedIdentity */
  SystemAssignedIdentity = "SystemAssignedIdentity"
}

/**
 * Defines values for AutomationAccountAuthenticationType. \
 * {@link KnownAutomationAccountAuthenticationType} can be used interchangeably with AutomationAccountAuthenticationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RunAsAccount** \
 * **SystemAssignedIdentity**
 */
export type AutomationAccountAuthenticationType = string;

/** Known values of {@link A2ARecoveryAvailabilityType} that the service accepts. */
export enum KnownA2ARecoveryAvailabilityType {
  /** Single */
  Single = "Single",
  /** AvailabilitySet */
  AvailabilitySet = "AvailabilitySet",
  /** AvailabilityZone */
  AvailabilityZone = "AvailabilityZone"
}

/**
 * Defines values for A2ARecoveryAvailabilityType. \
 * {@link KnownA2ARecoveryAvailabilityType} can be used interchangeably with A2ARecoveryAvailabilityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Single** \
 * **AvailabilitySet** \
 * **AvailabilityZone**
 */
export type A2ARecoveryAvailabilityType = string;

/** Known values of {@link AutoProtectionOfDataDisk} that the service accepts. */
export enum KnownAutoProtectionOfDataDisk {
  /** Disabled */
  Disabled = "Disabled",
  /** Enabled */
  Enabled = "Enabled"
}

/**
 * Defines values for AutoProtectionOfDataDisk. \
 * {@link KnownAutoProtectionOfDataDisk} can be used interchangeably with AutoProtectionOfDataDisk,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type AutoProtectionOfDataDisk = string;

/** Known values of {@link ExtendedLocationType} that the service accepts. */
export enum KnownExtendedLocationType {
  /** EdgeZone */
  EdgeZone = "EdgeZone"
}

/**
 * Defines values for ExtendedLocationType. \
 * {@link KnownExtendedLocationType} can be used interchangeably with ExtendedLocationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EdgeZone**
 */
export type ExtendedLocationType = string;

/** Known values of {@link SetMultiVmSyncStatus} that the service accepts. */
export enum KnownSetMultiVmSyncStatus {
  /** Enable */
  Enable = "Enable",
  /** Disable */
  Disable = "Disable"
}

/**
 * Defines values for SetMultiVmSyncStatus. \
 * {@link KnownSetMultiVmSyncStatus} can be used interchangeably with SetMultiVmSyncStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enable** \
 * **Disable**
 */
export type SetMultiVmSyncStatus = string;

/** Known values of {@link RecoveryPointSyncType} that the service accepts. */
export enum KnownRecoveryPointSyncType {
  /** MultiVmSyncRecoveryPoint */
  MultiVmSyncRecoveryPoint = "MultiVmSyncRecoveryPoint",
  /** PerVmRecoveryPoint */
  PerVmRecoveryPoint = "PerVmRecoveryPoint"
}

/**
 * Defines values for RecoveryPointSyncType. \
 * {@link KnownRecoveryPointSyncType} can be used interchangeably with RecoveryPointSyncType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MultiVmSyncRecoveryPoint** \
 * **PerVmRecoveryPoint**
 */
export type RecoveryPointSyncType = string;

/** Known values of {@link MultiVmGroupCreateOption} that the service accepts. */
export enum KnownMultiVmGroupCreateOption {
  /** AutoCreated */
  AutoCreated = "AutoCreated",
  /** UserSpecified */
  UserSpecified = "UserSpecified"
}

/**
 * Defines values for MultiVmGroupCreateOption. \
 * {@link KnownMultiVmGroupCreateOption} can be used interchangeably with MultiVmGroupCreateOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AutoCreated** \
 * **UserSpecified**
 */
export type MultiVmGroupCreateOption = string;

/** Known values of {@link VmEncryptionType} that the service accepts. */
export enum KnownVmEncryptionType {
  /** NotEncrypted */
  NotEncrypted = "NotEncrypted",
  /** OnePassEncrypted */
  OnePassEncrypted = "OnePassEncrypted",
  /** TwoPassEncrypted */
  TwoPassEncrypted = "TwoPassEncrypted"
}

/**
 * Defines values for VmEncryptionType. \
 * {@link KnownVmEncryptionType} can be used interchangeably with VmEncryptionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotEncrypted** \
 * **OnePassEncrypted** \
 * **TwoPassEncrypted**
 */
export type VmEncryptionType = string;

/** Known values of {@link DiskAccountType} that the service accepts. */
export enum KnownDiskAccountType {
  /** StandardLRS */
  StandardLRS = "Standard_LRS",
  /** PremiumLRS */
  PremiumLRS = "Premium_LRS",
  /** StandardSSDLRS */
  StandardSSDLRS = "StandardSSD_LRS"
}

/**
 * Defines values for DiskAccountType. \
 * {@link KnownDiskAccountType} can be used interchangeably with DiskAccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard_LRS** \
 * **Premium_LRS** \
 * **StandardSSD_LRS**
 */
export type DiskAccountType = string;

/** Known values of {@link SqlServerLicenseType} that the service accepts. */
export enum KnownSqlServerLicenseType {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** NoLicenseType */
  NoLicenseType = "NoLicenseType",
  /** Payg */
  Payg = "PAYG",
  /** Ahub */
  Ahub = "AHUB"
}

/**
 * Defines values for SqlServerLicenseType. \
 * {@link KnownSqlServerLicenseType} can be used interchangeably with SqlServerLicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **NoLicenseType** \
 * **PAYG** \
 * **AHUB**
 */
export type SqlServerLicenseType = string;

/** Known values of {@link PresenceStatus} that the service accepts. */
export enum KnownPresenceStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Present */
  Present = "Present",
  /** NotPresent */
  NotPresent = "NotPresent"
}

/**
 * Defines values for PresenceStatus. \
 * {@link KnownPresenceStatus} can be used interchangeably with PresenceStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Present** \
 * **NotPresent**
 */
export type PresenceStatus = string;

/** Known values of {@link RcmComponentStatus} that the service accepts. */
export enum KnownRcmComponentStatus {
  /** Healthy */
  Healthy = "Healthy",
  /** Warning */
  Warning = "Warning",
  /** Critical */
  Critical = "Critical",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for RcmComponentStatus. \
 * {@link KnownRcmComponentStatus} can be used interchangeably with RcmComponentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Healthy** \
 * **Warning** \
 * **Critical** \
 * **Unknown**
 */
export type RcmComponentStatus = string;

/** Known values of {@link AgentUpgradeBlockedReason} that the service accepts. */
export enum KnownAgentUpgradeBlockedReason {
  /** AlreadyOnLatestVersion */
  AlreadyOnLatestVersion = "AlreadyOnLatestVersion",
  /** RebootRequired */
  RebootRequired = "RebootRequired",
  /** AgentNoHeartbeat */
  AgentNoHeartbeat = "AgentNoHeartbeat",
  /** RcmProxyNoHeartbeat */
  RcmProxyNoHeartbeat = "RcmProxyNoHeartbeat",
  /** ProcessServerNoHeartbeat */
  ProcessServerNoHeartbeat = "ProcessServerNoHeartbeat",
  /** IncompatibleApplianceVersion */
  IncompatibleApplianceVersion = "IncompatibleApplianceVersion",
  /** NotProtected */
  NotProtected = "NotProtected",
  /** UnsupportedProtectionScenario */
  UnsupportedProtectionScenario = "UnsupportedProtectionScenario",
  /** DistroIsNotReported */
  DistroIsNotReported = "DistroIsNotReported",
  /** DistroNotSupportedForUpgrade */
  DistroNotSupportedForUpgrade = "DistroNotSupportedForUpgrade",
  /** MissingUpgradePath */
  MissingUpgradePath = "MissingUpgradePath",
  /** InvalidAgentVersion */
  InvalidAgentVersion = "InvalidAgentVersion",
  /** InvalidDriverVersion */
  InvalidDriverVersion = "InvalidDriverVersion",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for AgentUpgradeBlockedReason. \
 * {@link KnownAgentUpgradeBlockedReason} can be used interchangeably with AgentUpgradeBlockedReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AlreadyOnLatestVersion** \
 * **RebootRequired** \
 * **AgentNoHeartbeat** \
 * **RcmProxyNoHeartbeat** \
 * **ProcessServerNoHeartbeat** \
 * **IncompatibleApplianceVersion** \
 * **NotProtected** \
 * **UnsupportedProtectionScenario** \
 * **DistroIsNotReported** \
 * **DistroNotSupportedForUpgrade** \
 * **MissingUpgradePath** \
 * **InvalidAgentVersion** \
 * **InvalidDriverVersion** \
 * **Unknown**
 */
export type AgentUpgradeBlockedReason = string;

/** Known values of {@link InMageRcmFailbackRecoveryPointType} that the service accepts. */
export enum KnownInMageRcmFailbackRecoveryPointType {
  /** ApplicationConsistent */
  ApplicationConsistent = "ApplicationConsistent",
  /** CrashConsistent */
  CrashConsistent = "CrashConsistent"
}

/**
 * Defines values for InMageRcmFailbackRecoveryPointType. \
 * {@link KnownInMageRcmFailbackRecoveryPointType} can be used interchangeably with InMageRcmFailbackRecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ApplicationConsistent** \
 * **CrashConsistent**
 */
export type InMageRcmFailbackRecoveryPointType = string;

/** Known values of {@link DiskReplicationProgressHealth} that the service accepts. */
export enum KnownDiskReplicationProgressHealth {
  /** None */
  None = "None",
  /** InProgress */
  InProgress = "InProgress",
  /** SlowProgress */
  SlowProgress = "SlowProgress",
  /** NoProgress */
  NoProgress = "NoProgress",
  /** Queued */
  Queued = "Queued"
}

/**
 * Defines values for DiskReplicationProgressHealth. \
 * {@link KnownDiskReplicationProgressHealth} can be used interchangeably with DiskReplicationProgressHealth,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **InProgress** \
 * **SlowProgress** \
 * **NoProgress** \
 * **Queued**
 */
export type DiskReplicationProgressHealth = string;

/** Known values of {@link VmReplicationProgressHealth} that the service accepts. */
export enum KnownVmReplicationProgressHealth {
  /** None */
  None = "None",
  /** InProgress */
  InProgress = "InProgress",
  /** SlowProgress */
  SlowProgress = "SlowProgress",
  /** NoProgress */
  NoProgress = "NoProgress"
}

/**
 * Defines values for VmReplicationProgressHealth. \
 * {@link KnownVmReplicationProgressHealth} can be used interchangeably with VmReplicationProgressHealth,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **InProgress** \
 * **SlowProgress** \
 * **NoProgress**
 */
export type VmReplicationProgressHealth = string;

/** Known values of {@link ResyncState} that the service accepts. */
export enum KnownResyncState {
  /** None */
  None = "None",
  /** PreparedForResynchronization */
  PreparedForResynchronization = "PreparedForResynchronization",
  /** StartedResynchronization */
  StartedResynchronization = "StartedResynchronization"
}

/**
 * Defines values for ResyncState. \
 * {@link KnownResyncState} can be used interchangeably with ResyncState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **PreparedForResynchronization** \
 * **StartedResynchronization**
 */
export type ResyncState = string;

/** Known values of {@link PlannedFailoverStatus} that the service accepts. */
export enum KnownPlannedFailoverStatus {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for PlannedFailoverStatus. \
 * {@link KnownPlannedFailoverStatus} can be used interchangeably with PlannedFailoverStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Cancelled** \
 * **Unknown**
 */
export type PlannedFailoverStatus = string;

/** Known values of {@link EthernetAddressType} that the service accepts. */
export enum KnownEthernetAddressType {
  /** Dynamic */
  Dynamic = "Dynamic",
  /** Static */
  Static = "Static"
}

/**
 * Defines values for EthernetAddressType. \
 * {@link KnownEthernetAddressType} can be used interchangeably with EthernetAddressType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Dynamic** \
 * **Static**
 */
export type EthernetAddressType = string;

/** Known values of {@link MobilityAgentUpgradeState} that the service accepts. */
export enum KnownMobilityAgentUpgradeState {
  /** None */
  None = "None",
  /** Started */
  Started = "Started",
  /** Completed */
  Completed = "Completed",
  /** Commit */
  Commit = "Commit"
}

/**
 * Defines values for MobilityAgentUpgradeState. \
 * {@link KnownMobilityAgentUpgradeState} can be used interchangeably with MobilityAgentUpgradeState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Started** \
 * **Completed** \
 * **Commit**
 */
export type MobilityAgentUpgradeState = string;

/** Known values of {@link RecoveryPointType} that the service accepts. */
export enum KnownRecoveryPointType {
  /** LatestTime */
  LatestTime = "LatestTime",
  /** LatestTag */
  LatestTag = "LatestTag",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for RecoveryPointType. \
 * {@link KnownRecoveryPointType} can be used interchangeably with RecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LatestTime** \
 * **LatestTag** \
 * **Custom**
 */
export type RecoveryPointType = string;

/** Known values of {@link A2ARpRecoveryPointType} that the service accepts. */
export enum KnownA2ARpRecoveryPointType {
  /** Latest */
  Latest = "Latest",
  /** LatestApplicationConsistent */
  LatestApplicationConsistent = "LatestApplicationConsistent",
  /** LatestCrashConsistent */
  LatestCrashConsistent = "LatestCrashConsistent",
  /** LatestProcessed */
  LatestProcessed = "LatestProcessed"
}

/**
 * Defines values for A2ARpRecoveryPointType. \
 * {@link KnownA2ARpRecoveryPointType} can be used interchangeably with A2ARpRecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Latest** \
 * **LatestApplicationConsistent** \
 * **LatestCrashConsistent** \
 * **LatestProcessed**
 */
export type A2ARpRecoveryPointType = string;

/** Known values of {@link MultiVmSyncPointOption} that the service accepts. */
export enum KnownMultiVmSyncPointOption {
  /** UseMultiVmSyncRecoveryPoint */
  UseMultiVmSyncRecoveryPoint = "UseMultiVmSyncRecoveryPoint",
  /** UsePerVmRecoveryPoint */
  UsePerVmRecoveryPoint = "UsePerVmRecoveryPoint"
}

/**
 * Defines values for MultiVmSyncPointOption. \
 * {@link KnownMultiVmSyncPointOption} can be used interchangeably with MultiVmSyncPointOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UseMultiVmSyncRecoveryPoint** \
 * **UsePerVmRecoveryPoint**
 */
export type MultiVmSyncPointOption = string;

/** Known values of {@link RecoveryPlanActionLocation} that the service accepts. */
export enum KnownRecoveryPlanActionLocation {
  /** Primary */
  Primary = "Primary",
  /** Recovery */
  Recovery = "Recovery"
}

/**
 * Defines values for RecoveryPlanActionLocation. \
 * {@link KnownRecoveryPlanActionLocation} can be used interchangeably with RecoveryPlanActionLocation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary** \
 * **Recovery**
 */
export type RecoveryPlanActionLocation = string;

/** Known values of {@link DataSyncStatus} that the service accepts. */
export enum KnownDataSyncStatus {
  /** ForDownTime */
  ForDownTime = "ForDownTime",
  /** ForSynchronization */
  ForSynchronization = "ForSynchronization"
}

/**
 * Defines values for DataSyncStatus. \
 * {@link KnownDataSyncStatus} can be used interchangeably with DataSyncStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ForDownTime** \
 * **ForSynchronization**
 */
export type DataSyncStatus = string;

/** Known values of {@link AlternateLocationRecoveryOption} that the service accepts. */
export enum KnownAlternateLocationRecoveryOption {
  /** CreateVmIfNotFound */
  CreateVmIfNotFound = "CreateVmIfNotFound",
  /** NoAction */
  NoAction = "NoAction"
}

/**
 * Defines values for AlternateLocationRecoveryOption. \
 * {@link KnownAlternateLocationRecoveryOption} can be used interchangeably with AlternateLocationRecoveryOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CreateVmIfNotFound** \
 * **NoAction**
 */
export type AlternateLocationRecoveryOption = string;

/** Known values of {@link HyperVReplicaAzureRpRecoveryPointType} that the service accepts. */
export enum KnownHyperVReplicaAzureRpRecoveryPointType {
  /** Latest */
  Latest = "Latest",
  /** LatestApplicationConsistent */
  LatestApplicationConsistent = "LatestApplicationConsistent",
  /** LatestProcessed */
  LatestProcessed = "LatestProcessed"
}

/**
 * Defines values for HyperVReplicaAzureRpRecoveryPointType. \
 * {@link KnownHyperVReplicaAzureRpRecoveryPointType} can be used interchangeably with HyperVReplicaAzureRpRecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Latest** \
 * **LatestApplicationConsistent** \
 * **LatestProcessed**
 */
export type HyperVReplicaAzureRpRecoveryPointType = string;

/** Known values of {@link InMageV2RpRecoveryPointType} that the service accepts. */
export enum KnownInMageV2RpRecoveryPointType {
  /** Latest */
  Latest = "Latest",
  /** LatestApplicationConsistent */
  LatestApplicationConsistent = "LatestApplicationConsistent",
  /** LatestCrashConsistent */
  LatestCrashConsistent = "LatestCrashConsistent",
  /** LatestProcessed */
  LatestProcessed = "LatestProcessed"
}

/**
 * Defines values for InMageV2RpRecoveryPointType. \
 * {@link KnownInMageV2RpRecoveryPointType} can be used interchangeably with InMageV2RpRecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Latest** \
 * **LatestApplicationConsistent** \
 * **LatestCrashConsistent** \
 * **LatestProcessed**
 */
export type InMageV2RpRecoveryPointType = string;

/** Known values of {@link RpInMageRecoveryPointType} that the service accepts. */
export enum KnownRpInMageRecoveryPointType {
  /** LatestTime */
  LatestTime = "LatestTime",
  /** LatestTag */
  LatestTag = "LatestTag",
  /** Custom */
  Custom = "Custom"
}

/**
 * Defines values for RpInMageRecoveryPointType. \
 * {@link KnownRpInMageRecoveryPointType} can be used interchangeably with RpInMageRecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LatestTime** \
 * **LatestTag** \
 * **Custom**
 */
export type RpInMageRecoveryPointType = string;

/** Known values of {@link RecoveryPlanPointType} that the service accepts. */
export enum KnownRecoveryPlanPointType {
  /** Latest */
  Latest = "Latest",
  /** LatestApplicationConsistent */
  LatestApplicationConsistent = "LatestApplicationConsistent",
  /** LatestCrashConsistent */
  LatestCrashConsistent = "LatestCrashConsistent",
  /** LatestProcessed */
  LatestProcessed = "LatestProcessed"
}

/**
 * Defines values for RecoveryPlanPointType. \
 * {@link KnownRecoveryPlanPointType} can be used interchangeably with RecoveryPlanPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Latest** \
 * **LatestApplicationConsistent** \
 * **LatestCrashConsistent** \
 * **LatestProcessed**
 */
export type RecoveryPlanPointType = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationsDiscoveryCollection;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationsDiscoveryCollection;

/** Optional parameters. */
export interface ReplicationAlertSettingsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationAlertSettingsListResponse = AlertCollection;

/** Optional parameters. */
export interface ReplicationAlertSettingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationAlertSettingsGetResponse = Alert;

/** Optional parameters. */
export interface ReplicationAlertSettingsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type ReplicationAlertSettingsCreateResponse = Alert;

/** Optional parameters. */
export interface ReplicationAlertSettingsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationAlertSettingsListNextResponse = AlertCollection;

/** Optional parameters. */
export interface ReplicationAppliancesListOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
}

/** Contains response data for the list operation. */
export type ReplicationAppliancesListResponse = ApplianceCollection;

/** Optional parameters. */
export interface ReplicationAppliancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationAppliancesListNextResponse = ApplianceCollection;

/** Optional parameters. */
export interface ReplicationEligibilityResultsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationEligibilityResultsListResponse = ReplicationEligibilityResultsCollection;

/** Optional parameters. */
export interface ReplicationEligibilityResultsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationEligibilityResultsGetResponse = ReplicationEligibilityResults;

/** Optional parameters. */
export interface ReplicationEventsListOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
}

/** Contains response data for the list operation. */
export type ReplicationEventsListResponse = EventCollection;

/** Optional parameters. */
export interface ReplicationEventsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationEventsGetResponse = Event;

/** Optional parameters. */
export interface ReplicationEventsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationEventsListNextResponse = EventCollection;

/** Optional parameters. */
export interface ReplicationFabricsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationFabricsListResponse = FabricCollection;

/** Optional parameters. */
export interface ReplicationFabricsGetOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
}

/** Contains response data for the get operation. */
export type ReplicationFabricsGetResponse = Fabric;

/** Optional parameters. */
export interface ReplicationFabricsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationFabricsCreateResponse = Fabric;

/** Optional parameters. */
export interface ReplicationFabricsPurgeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationFabricsCheckConsistencyOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the checkConsistency operation. */
export type ReplicationFabricsCheckConsistencyResponse = Fabric;

/** Optional parameters. */
export interface ReplicationFabricsMigrateToAadOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationFabricsReassociateGatewayOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the reassociateGateway operation. */
export type ReplicationFabricsReassociateGatewayResponse = Fabric;

/** Optional parameters. */
export interface ReplicationFabricsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationFabricsRenewCertificateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the renewCertificate operation. */
export type ReplicationFabricsRenewCertificateResponse = Fabric;

/** Optional parameters. */
export interface ReplicationFabricsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationFabricsListNextResponse = FabricCollection;

/** Optional parameters. */
export interface ReplicationLogicalNetworksListByReplicationFabricsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabrics operation. */
export type ReplicationLogicalNetworksListByReplicationFabricsResponse = LogicalNetworkCollection;

/** Optional parameters. */
export interface ReplicationLogicalNetworksGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationLogicalNetworksGetResponse = LogicalNetwork;

/** Optional parameters. */
export interface ReplicationLogicalNetworksListByReplicationFabricsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabricsNext operation. */
export type ReplicationLogicalNetworksListByReplicationFabricsNextResponse = LogicalNetworkCollection;

/** Optional parameters. */
export interface ReplicationNetworksListByReplicationFabricsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabrics operation. */
export type ReplicationNetworksListByReplicationFabricsResponse = NetworkCollection;

/** Optional parameters. */
export interface ReplicationNetworksGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationNetworksGetResponse = Network;

/** Optional parameters. */
export interface ReplicationNetworksListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationNetworksListResponse = NetworkCollection;

/** Optional parameters. */
export interface ReplicationNetworksListByReplicationFabricsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabricsNext operation. */
export type ReplicationNetworksListByReplicationFabricsNextResponse = NetworkCollection;

/** Optional parameters. */
export interface ReplicationNetworksListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationNetworksListNextResponse = NetworkCollection;

/** Optional parameters. */
export interface ReplicationNetworkMappingsListByReplicationNetworksOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationNetworks operation. */
export type ReplicationNetworkMappingsListByReplicationNetworksResponse = NetworkMappingCollection;

/** Optional parameters. */
export interface ReplicationNetworkMappingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationNetworkMappingsGetResponse = NetworkMapping;

/** Optional parameters. */
export interface ReplicationNetworkMappingsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationNetworkMappingsCreateResponse = NetworkMapping;

/** Optional parameters. */
export interface ReplicationNetworkMappingsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationNetworkMappingsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ReplicationNetworkMappingsUpdateResponse = NetworkMapping;

/** Optional parameters. */
export interface ReplicationNetworkMappingsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationNetworkMappingsListResponse = NetworkMappingCollection;

/** Optional parameters. */
export interface ReplicationNetworkMappingsListByReplicationNetworksNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationNetworksNext operation. */
export type ReplicationNetworkMappingsListByReplicationNetworksNextResponse = NetworkMappingCollection;

/** Optional parameters. */
export interface ReplicationNetworkMappingsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationNetworkMappingsListNextResponse = NetworkMappingCollection;

/** Optional parameters. */
export interface ReplicationProtectionContainersListByReplicationFabricsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabrics operation. */
export type ReplicationProtectionContainersListByReplicationFabricsResponse = ProtectionContainerCollection;

/** Optional parameters. */
export interface ReplicationProtectionContainersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationProtectionContainersGetResponse = ProtectionContainer;

/** Optional parameters. */
export interface ReplicationProtectionContainersCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationProtectionContainersCreateResponse = ProtectionContainer;

/** Optional parameters. */
export interface ReplicationProtectionContainersDiscoverProtectableItemOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the discoverProtectableItem operation. */
export type ReplicationProtectionContainersDiscoverProtectableItemResponse = ProtectionContainer;

/** Optional parameters. */
export interface ReplicationProtectionContainersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationProtectionContainersSwitchProtectionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the switchProtection operation. */
export type ReplicationProtectionContainersSwitchProtectionResponse = ProtectionContainer;

/** Optional parameters. */
export interface ReplicationProtectionContainersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationProtectionContainersListResponse = ProtectionContainerCollection;

/** Optional parameters. */
export interface ReplicationProtectionContainersListByReplicationFabricsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabricsNext operation. */
export type ReplicationProtectionContainersListByReplicationFabricsNextResponse = ProtectionContainerCollection;

/** Optional parameters. */
export interface ReplicationProtectionContainersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationProtectionContainersListNextResponse = ProtectionContainerCollection;

/** Optional parameters. */
export interface ReplicationMigrationItemsListByReplicationProtectionContainersOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
  /** The pagination token. */
  skipToken?: string;
  /** The page size. */
  takeToken?: string;
}

/** Contains response data for the listByReplicationProtectionContainers operation. */
export type ReplicationMigrationItemsListByReplicationProtectionContainersResponse = MigrationItemCollection;

/** Optional parameters. */
export interface ReplicationMigrationItemsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationMigrationItemsGetResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationMigrationItemsCreateResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** The delete option. */
  deleteOption?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationMigrationItemsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ReplicationMigrationItemsUpdateResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsMigrateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the migrate operation. */
export type ReplicationMigrationItemsMigrateResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsPauseReplicationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the pauseReplication operation. */
export type ReplicationMigrationItemsPauseReplicationResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsResumeReplicationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resumeReplication operation. */
export type ReplicationMigrationItemsResumeReplicationResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsResyncOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resync operation. */
export type ReplicationMigrationItemsResyncResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsTestMigrateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the testMigrate operation. */
export type ReplicationMigrationItemsTestMigrateResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsTestMigrateCleanupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the testMigrateCleanup operation. */
export type ReplicationMigrationItemsTestMigrateCleanupResponse = MigrationItem;

/** Optional parameters. */
export interface ReplicationMigrationItemsListOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
  /** The pagination token. */
  skipToken?: string;
  /** The page size. */
  takeToken?: string;
}

/** Contains response data for the list operation. */
export type ReplicationMigrationItemsListResponse = MigrationItemCollection;

/** Optional parameters. */
export interface ReplicationMigrationItemsListByReplicationProtectionContainersNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectionContainersNext operation. */
export type ReplicationMigrationItemsListByReplicationProtectionContainersNextResponse = MigrationItemCollection;

/** Optional parameters. */
export interface ReplicationMigrationItemsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationMigrationItemsListNextResponse = MigrationItemCollection;

/** Optional parameters. */
export interface MigrationRecoveryPointsListByReplicationMigrationItemsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationMigrationItems operation. */
export type MigrationRecoveryPointsListByReplicationMigrationItemsResponse = MigrationRecoveryPointCollection;

/** Optional parameters. */
export interface MigrationRecoveryPointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MigrationRecoveryPointsGetResponse = MigrationRecoveryPoint;

/** Optional parameters. */
export interface MigrationRecoveryPointsListByReplicationMigrationItemsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationMigrationItemsNext operation. */
export type MigrationRecoveryPointsListByReplicationMigrationItemsNextResponse = MigrationRecoveryPointCollection;

/** Optional parameters. */
export interface ReplicationProtectableItemsListByReplicationProtectionContainersOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
  /** take OData query parameter. */
  take?: string;
  /** skipToken OData query parameter. */
  skipToken?: string;
}

/** Contains response data for the listByReplicationProtectionContainers operation. */
export type ReplicationProtectableItemsListByReplicationProtectionContainersResponse = ProtectableItemCollection;

/** Optional parameters. */
export interface ReplicationProtectableItemsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationProtectableItemsGetResponse = ProtectableItem;

/** Optional parameters. */
export interface ReplicationProtectableItemsListByReplicationProtectionContainersNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectionContainersNext operation. */
export type ReplicationProtectableItemsListByReplicationProtectionContainersNextResponse = ProtectableItemCollection;

/** Optional parameters. */
export interface ReplicationProtectedItemsListByReplicationProtectionContainersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectionContainers operation. */
export type ReplicationProtectedItemsListByReplicationProtectionContainersResponse = ReplicationProtectedItemCollection;

/** Optional parameters. */
export interface ReplicationProtectedItemsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationProtectedItemsGetResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationProtectedItemsCreateResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsPurgeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationProtectedItemsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ReplicationProtectedItemsUpdateResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsAddDisksOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the addDisks operation. */
export type ReplicationProtectedItemsAddDisksResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsApplyRecoveryPointOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the applyRecoveryPoint operation. */
export type ReplicationProtectedItemsApplyRecoveryPointResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsFailoverCancelOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the failoverCancel operation. */
export type ReplicationProtectedItemsFailoverCancelResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsFailoverCommitOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the failoverCommit operation. */
export type ReplicationProtectedItemsFailoverCommitResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsPlannedFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the plannedFailover operation. */
export type ReplicationProtectedItemsPlannedFailoverResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationProtectedItemsRemoveDisksOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the removeDisks operation. */
export type ReplicationProtectedItemsRemoveDisksResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsRepairReplicationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the repairReplication operation. */
export type ReplicationProtectedItemsRepairReplicationResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsReprotectOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the reprotect operation. */
export type ReplicationProtectedItemsReprotectResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsResolveHealthErrorsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resolveHealthErrors operation. */
export type ReplicationProtectedItemsResolveHealthErrorsResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsSwitchProviderOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the switchProvider operation. */
export type ReplicationProtectedItemsSwitchProviderResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsTestFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the testFailover operation. */
export type ReplicationProtectedItemsTestFailoverResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsTestFailoverCleanupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the testFailoverCleanup operation. */
export type ReplicationProtectedItemsTestFailoverCleanupResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsUnplannedFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the unplannedFailover operation. */
export type ReplicationProtectedItemsUnplannedFailoverResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsUpdateApplianceOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateAppliance operation. */
export type ReplicationProtectedItemsUpdateApplianceResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsUpdateMobilityServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateMobilityService operation. */
export type ReplicationProtectedItemsUpdateMobilityServiceResponse = ReplicationProtectedItem;

/** Optional parameters. */
export interface ReplicationProtectedItemsListOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
  /** The pagination token. Possible values: "FabricId" or "FabricId_CloudId" or null. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type ReplicationProtectedItemsListResponse = ReplicationProtectedItemCollection;

/** Optional parameters. */
export interface ReplicationProtectedItemsListByReplicationProtectionContainersNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectionContainersNext operation. */
export type ReplicationProtectedItemsListByReplicationProtectionContainersNextResponse = ReplicationProtectedItemCollection;

/** Optional parameters. */
export interface ReplicationProtectedItemsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationProtectedItemsListNextResponse = ReplicationProtectedItemCollection;

/** Optional parameters. */
export interface RecoveryPointsListByReplicationProtectedItemsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectedItems operation. */
export type RecoveryPointsListByReplicationProtectedItemsResponse = RecoveryPointCollection;

/** Optional parameters. */
export interface RecoveryPointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RecoveryPointsGetResponse = RecoveryPoint;

/** Optional parameters. */
export interface RecoveryPointsListByReplicationProtectedItemsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectedItemsNext operation. */
export type RecoveryPointsListByReplicationProtectedItemsNextResponse = RecoveryPointCollection;

/** Optional parameters. */
export interface TargetComputeSizesListByReplicationProtectedItemsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectedItems operation. */
export type TargetComputeSizesListByReplicationProtectedItemsResponse = TargetComputeSizeCollection;

/** Optional parameters. */
export interface TargetComputeSizesListByReplicationProtectedItemsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectedItemsNext operation. */
export type TargetComputeSizesListByReplicationProtectedItemsNextResponse = TargetComputeSizeCollection;

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsListByReplicationProtectionContainersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectionContainers operation. */
export type ReplicationProtectionContainerMappingsListByReplicationProtectionContainersResponse = ProtectionContainerMappingCollection;

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationProtectionContainerMappingsGetResponse = ProtectionContainerMapping;

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationProtectionContainerMappingsCreateResponse = ProtectionContainerMapping;

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsPurgeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ReplicationProtectionContainerMappingsUpdateResponse = ProtectionContainerMapping;

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationProtectionContainerMappingsListResponse = ProtectionContainerMappingCollection;

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsListByReplicationProtectionContainersNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationProtectionContainersNext operation. */
export type ReplicationProtectionContainerMappingsListByReplicationProtectionContainersNextResponse = ProtectionContainerMappingCollection;

/** Optional parameters. */
export interface ReplicationProtectionContainerMappingsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationProtectionContainerMappingsListNextResponse = ProtectionContainerMappingCollection;

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersListByReplicationFabricsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabrics operation. */
export type ReplicationRecoveryServicesProvidersListByReplicationFabricsResponse = RecoveryServicesProviderCollection;

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationRecoveryServicesProvidersGetResponse = RecoveryServicesProvider;

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationRecoveryServicesProvidersCreateResponse = RecoveryServicesProvider;

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersPurgeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersRefreshProviderOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the refreshProvider operation. */
export type ReplicationRecoveryServicesProvidersRefreshProviderResponse = RecoveryServicesProvider;

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationRecoveryServicesProvidersListResponse = RecoveryServicesProviderCollection;

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersListByReplicationFabricsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabricsNext operation. */
export type ReplicationRecoveryServicesProvidersListByReplicationFabricsNextResponse = RecoveryServicesProviderCollection;

/** Optional parameters. */
export interface ReplicationRecoveryServicesProvidersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationRecoveryServicesProvidersListNextResponse = RecoveryServicesProviderCollection;

/** Optional parameters. */
export interface ReplicationStorageClassificationsListByReplicationFabricsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabrics operation. */
export type ReplicationStorageClassificationsListByReplicationFabricsResponse = StorageClassificationCollection;

/** Optional parameters. */
export interface ReplicationStorageClassificationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationStorageClassificationsGetResponse = StorageClassification;

/** Optional parameters. */
export interface ReplicationStorageClassificationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationStorageClassificationsListResponse = StorageClassificationCollection;

/** Optional parameters. */
export interface ReplicationStorageClassificationsListByReplicationFabricsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabricsNext operation. */
export type ReplicationStorageClassificationsListByReplicationFabricsNextResponse = StorageClassificationCollection;

/** Optional parameters. */
export interface ReplicationStorageClassificationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationStorageClassificationsListNextResponse = StorageClassificationCollection;

/** Optional parameters. */
export interface ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationStorageClassifications operation. */
export type ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsResponse = StorageClassificationMappingCollection;

/** Optional parameters. */
export interface ReplicationStorageClassificationMappingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationStorageClassificationMappingsGetResponse = StorageClassificationMapping;

/** Optional parameters. */
export interface ReplicationStorageClassificationMappingsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationStorageClassificationMappingsCreateResponse = StorageClassificationMapping;

/** Optional parameters. */
export interface ReplicationStorageClassificationMappingsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationStorageClassificationMappingsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationStorageClassificationMappingsListResponse = StorageClassificationMappingCollection;

/** Optional parameters. */
export interface ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationStorageClassificationsNext operation. */
export type ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsNextResponse = StorageClassificationMappingCollection;

/** Optional parameters. */
export interface ReplicationStorageClassificationMappingsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationStorageClassificationMappingsListNextResponse = StorageClassificationMappingCollection;

/** Optional parameters. */
export interface ReplicationvCentersListByReplicationFabricsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabrics operation. */
export type ReplicationvCentersListByReplicationFabricsResponse = VCenterCollection;

/** Optional parameters. */
export interface ReplicationvCentersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationvCentersGetResponse = VCenter;

/** Optional parameters. */
export interface ReplicationvCentersCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationvCentersCreateResponse = VCenter;

/** Optional parameters. */
export interface ReplicationvCentersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationvCentersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ReplicationvCentersUpdateResponse = VCenter;

/** Optional parameters. */
export interface ReplicationvCentersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationvCentersListResponse = VCenterCollection;

/** Optional parameters. */
export interface ReplicationvCentersListByReplicationFabricsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByReplicationFabricsNext operation. */
export type ReplicationvCentersListByReplicationFabricsNextResponse = VCenterCollection;

/** Optional parameters. */
export interface ReplicationvCentersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationvCentersListNextResponse = VCenterCollection;

/** Optional parameters. */
export interface ReplicationJobsListOptionalParams
  extends coreClient.OperationOptions {
  /** OData filter options. */
  filter?: string;
}

/** Contains response data for the list operation. */
export type ReplicationJobsListResponse = JobCollection;

/** Optional parameters. */
export interface ReplicationJobsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationJobsGetResponse = Job;

/** Optional parameters. */
export interface ReplicationJobsCancelOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the cancel operation. */
export type ReplicationJobsCancelResponse = Job;

/** Optional parameters. */
export interface ReplicationJobsRestartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the restart operation. */
export type ReplicationJobsRestartResponse = Job;

/** Optional parameters. */
export interface ReplicationJobsResumeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resume operation. */
export type ReplicationJobsResumeResponse = Job;

/** Optional parameters. */
export interface ReplicationJobsExportOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the export operation. */
export type ReplicationJobsExportResponse = Job;

/** Optional parameters. */
export interface ReplicationJobsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationJobsListNextResponse = JobCollection;

/** Optional parameters. */
export interface ReplicationPoliciesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationPoliciesListResponse = PolicyCollection;

/** Optional parameters. */
export interface ReplicationPoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationPoliciesGetResponse = Policy;

/** Optional parameters. */
export interface ReplicationPoliciesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationPoliciesCreateResponse = Policy;

/** Optional parameters. */
export interface ReplicationPoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationPoliciesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ReplicationPoliciesUpdateResponse = Policy;

/** Optional parameters. */
export interface ReplicationPoliciesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationPoliciesListNextResponse = PolicyCollection;

/** Optional parameters. */
export interface ReplicationProtectionIntentsListOptionalParams
  extends coreClient.OperationOptions {
  /** The pagination token. */
  skipToken?: string;
  /** The page size. */
  takeToken?: string;
}

/** Contains response data for the list operation. */
export type ReplicationProtectionIntentsListResponse = ReplicationProtectionIntentCollection;

/** Optional parameters. */
export interface ReplicationProtectionIntentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationProtectionIntentsGetResponse = ReplicationProtectionIntent;

/** Optional parameters. */
export interface ReplicationProtectionIntentsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type ReplicationProtectionIntentsCreateResponse = ReplicationProtectionIntent;

/** Optional parameters. */
export interface ReplicationProtectionIntentsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationProtectionIntentsListNextResponse = ReplicationProtectionIntentCollection;

/** Optional parameters. */
export interface ReplicationRecoveryPlansListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationRecoveryPlansListResponse = RecoveryPlanCollection;

/** Optional parameters. */
export interface ReplicationRecoveryPlansGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationRecoveryPlansGetResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationRecoveryPlansCreateResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ReplicationRecoveryPlansUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ReplicationRecoveryPlansUpdateResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansFailoverCancelOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the failoverCancel operation. */
export type ReplicationRecoveryPlansFailoverCancelResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansFailoverCommitOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the failoverCommit operation. */
export type ReplicationRecoveryPlansFailoverCommitResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansPlannedFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the plannedFailover operation. */
export type ReplicationRecoveryPlansPlannedFailoverResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansReprotectOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the reprotect operation. */
export type ReplicationRecoveryPlansReprotectResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansTestFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the testFailover operation. */
export type ReplicationRecoveryPlansTestFailoverResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansTestFailoverCleanupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the testFailoverCleanup operation. */
export type ReplicationRecoveryPlansTestFailoverCleanupResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansUnplannedFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the unplannedFailover operation. */
export type ReplicationRecoveryPlansUnplannedFailoverResponse = RecoveryPlan;

/** Optional parameters. */
export interface ReplicationRecoveryPlansListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationRecoveryPlansListNextResponse = RecoveryPlanCollection;

/** Optional parameters. */
export interface SupportedOperatingSystemsGetOptionalParams
  extends coreClient.OperationOptions {
  /** The instance type. */
  instanceType?: string;
}

/** Contains response data for the get operation. */
export type SupportedOperatingSystemsGetResponse = SupportedOperatingSystems;

/** Optional parameters. */
export interface ReplicationVaultHealthGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationVaultHealthGetResponse = VaultHealthDetails;

/** Optional parameters. */
export interface ReplicationVaultHealthRefreshOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the refresh operation. */
export type ReplicationVaultHealthRefreshResponse = VaultHealthDetails;

/** Optional parameters. */
export interface ReplicationVaultSettingListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationVaultSettingListResponse = VaultSettingCollection;

/** Optional parameters. */
export interface ReplicationVaultSettingGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationVaultSettingGetResponse = VaultSetting;

/** Optional parameters. */
export interface ReplicationVaultSettingCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationVaultSettingCreateResponse = VaultSetting;

/** Optional parameters. */
export interface ReplicationVaultSettingListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationVaultSettingListNextResponse = VaultSettingCollection;

/** Optional parameters. */
export interface SiteRecoveryManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
