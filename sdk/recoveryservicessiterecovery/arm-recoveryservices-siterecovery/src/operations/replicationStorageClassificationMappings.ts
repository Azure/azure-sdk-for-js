/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/replicationStorageClassificationMappingsMappers";
import * as Parameters from "../models/parameters";
import { SiteRecoveryManagementClientContext } from "../siteRecoveryManagementClientContext";

/** Class representing a ReplicationStorageClassificationMappings. */
export class ReplicationStorageClassificationMappings {
  private readonly client: SiteRecoveryManagementClientContext;

  /**
   * Create a ReplicationStorageClassificationMappings.
   * @param {SiteRecoveryManagementClientContext} client Reference to the service client.
   */
  constructor(client: SiteRecoveryManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the storage classification mappings for the fabric.
   * @summary Gets the list of storage classification mappings objects under a storage.
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classfication name.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsResponse>
   */
  listByReplicationStorageClassifications(fabricName: string, storageClassificationName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsResponse>;
  /**
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classfication name.
   * @param callback The callback
   */
  listByReplicationStorageClassifications(fabricName: string, storageClassificationName: string, callback: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): void;
  /**
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classfication name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByReplicationStorageClassifications(fabricName: string, storageClassificationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): void;
  listByReplicationStorageClassifications(fabricName: string, storageClassificationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.StorageClassificationMappingCollection>, callback?: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): Promise<Models.ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        storageClassificationName,
        options
      },
      listByReplicationStorageClassificationsOperationSpec,
      callback) as Promise<Models.ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsResponse>;
  }

  /**
   * Gets the details of the specified storage classification mapping.
   * @summary Gets the details of a storage classification mapping.
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classification name.
   * @param storageClassificationMappingName Storage classification mapping name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationStorageClassificationMappingsGetResponse>
   */
  get(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationStorageClassificationMappingsGetResponse>;
  /**
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classification name.
   * @param storageClassificationMappingName Storage classification mapping name.
   * @param callback The callback
   */
  get(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, callback: msRest.ServiceCallback<Models.StorageClassificationMapping>): void;
  /**
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classification name.
   * @param storageClassificationMappingName Storage classification mapping name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageClassificationMapping>): void;
  get(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.StorageClassificationMapping>, callback?: msRest.ServiceCallback<Models.StorageClassificationMapping>): Promise<Models.ReplicationStorageClassificationMappingsGetResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        storageClassificationName,
        storageClassificationMappingName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ReplicationStorageClassificationMappingsGetResponse>;
  }

  /**
   * The operation to create a storage classification mapping.
   * @summary Create storage classification mapping.
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classification name.
   * @param storageClassificationMappingName Storage classification mapping name.
   * @param pairingInput Pairing input.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationStorageClassificationMappingsCreateResponse>
   */
  create(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: Models.StorageClassificationMappingInput, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationStorageClassificationMappingsCreateResponse> {
    return this.beginCreate(fabricName,storageClassificationName,storageClassificationMappingName,pairingInput,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ReplicationStorageClassificationMappingsCreateResponse>;
  }

  /**
   * The operation to delete a storage classification mapping.
   * @summary Delete a storage classification mapping.
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classification name.
   * @param storageClassificationMappingName Storage classification mapping name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(fabricName,storageClassificationName,storageClassificationMappingName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Lists the storage classification mappings in the vault.
   * @summary Gets the list of storage classification mappings objects under a vault.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationStorageClassificationMappingsListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.ReplicationStorageClassificationMappingsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.StorageClassificationMappingCollection>, callback?: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): Promise<Models.ReplicationStorageClassificationMappingsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ReplicationStorageClassificationMappingsListResponse>;
  }

  /**
   * The operation to create a storage classification mapping.
   * @summary Create storage classification mapping.
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classification name.
   * @param storageClassificationMappingName Storage classification mapping name.
   * @param pairingInput Pairing input.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreate(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: Models.StorageClassificationMappingInput, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        storageClassificationName,
        storageClassificationMappingName,
        pairingInput,
        options
      },
      beginCreateOperationSpec,
      options);
  }

  /**
   * The operation to delete a storage classification mapping.
   * @summary Delete a storage classification mapping.
   * @param fabricName Fabric name.
   * @param storageClassificationName Storage classification name.
   * @param storageClassificationMappingName Storage classification mapping name.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        storageClassificationName,
        storageClassificationMappingName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Lists the storage classification mappings for the fabric.
   * @summary Gets the list of storage classification mappings objects under a storage.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsNextResponse>
   */
  listByReplicationStorageClassificationsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByReplicationStorageClassificationsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByReplicationStorageClassificationsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): void;
  listByReplicationStorageClassificationsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.StorageClassificationMappingCollection>, callback?: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): Promise<Models.ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByReplicationStorageClassificationsNextOperationSpec,
      callback) as Promise<Models.ReplicationStorageClassificationMappingsListByReplicationStorageClassificationsNextResponse>;
  }

  /**
   * Lists the storage classification mappings in the vault.
   * @summary Gets the list of storage classification mappings objects under a vault.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationStorageClassificationMappingsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationStorageClassificationMappingsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.StorageClassificationMappingCollection>, callback?: msRest.ServiceCallback<Models.StorageClassificationMappingCollection>): Promise<Models.ReplicationStorageClassificationMappingsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.ReplicationStorageClassificationMappingsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByReplicationStorageClassificationsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.storageClassificationName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.StorageClassificationMappingCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings/{storageClassificationMappingName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.storageClassificationName,
    Parameters.storageClassificationMappingName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.StorageClassificationMapping
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationStorageClassificationMappings",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.StorageClassificationMappingCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings/{storageClassificationMappingName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.storageClassificationName,
    Parameters.storageClassificationMappingName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "pairingInput",
    mapper: {
      ...Mappers.StorageClassificationMappingInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.StorageClassificationMapping
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings/{storageClassificationMappingName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.storageClassificationName,
    Parameters.storageClassificationMappingName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByReplicationStorageClassificationsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.StorageClassificationMappingCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.StorageClassificationMappingCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
