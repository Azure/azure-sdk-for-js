/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/replicationEventsMappers";
import * as Parameters from "../models/parameters";
import { SiteRecoveryManagementClientContext } from "../siteRecoveryManagementClientContext";

/** Class representing a ReplicationEvents. */
export class ReplicationEvents {
  private readonly client: SiteRecoveryManagementClientContext;

  /**
   * Create a ReplicationEvents.
   * @param {SiteRecoveryManagementClientContext} client Reference to the service client.
   */
  constructor(client: SiteRecoveryManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets the list of Azure Site Recovery events for the vault.
   * @summary Gets the list of Azure Site Recovery events.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationEventsListResponse>
   */
  list(options?: Models.ReplicationEventsListOptionalParams): Promise<Models.ReplicationEventsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.EventCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: Models.ReplicationEventsListOptionalParams, callback: msRest.ServiceCallback<Models.EventCollection>): void;
  list(options?: Models.ReplicationEventsListOptionalParams | msRest.ServiceCallback<Models.EventCollection>, callback?: msRest.ServiceCallback<Models.EventCollection>): Promise<Models.ReplicationEventsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ReplicationEventsListResponse>;
  }

  /**
   * The operation to get the details of an Azure Site recovery event.
   * @summary Get the details of an Azure Site recovery event.
   * @param eventName The name of the Azure Site Recovery event.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationEventsGetResponse>
   */
  get(eventName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationEventsGetResponse>;
  /**
   * @param eventName The name of the Azure Site Recovery event.
   * @param callback The callback
   */
  get(eventName: string, callback: msRest.ServiceCallback<Models.Event>): void;
  /**
   * @param eventName The name of the Azure Site Recovery event.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(eventName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Event>): void;
  get(eventName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Event>, callback?: msRest.ServiceCallback<Models.Event>): Promise<Models.ReplicationEventsGetResponse> {
    return this.client.sendOperationRequest(
      {
        eventName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ReplicationEventsGetResponse>;
  }

  /**
   * Gets the list of Azure Site Recovery events for the vault.
   * @summary Gets the list of Azure Site Recovery events.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationEventsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationEventsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.EventCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EventCollection>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EventCollection>, callback?: msRest.ServiceCallback<Models.EventCollection>): Promise<Models.ReplicationEventsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.ReplicationEventsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationEvents",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EventCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationEvents/{eventName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.eventName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Event
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EventCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
