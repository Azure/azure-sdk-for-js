/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/recoveryPointsMappers";
import * as Parameters from "../models/parameters";
import { SiteRecoveryManagementClientContext } from "../siteRecoveryManagementClientContext";

/** Class representing a RecoveryPoints. */
export class RecoveryPoints {
  private readonly client: SiteRecoveryManagementClientContext;

  /**
   * Create a RecoveryPoints.
   * @param {SiteRecoveryManagementClientContext} client Reference to the service client.
   */
  constructor(client: SiteRecoveryManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the available recovery points for a replication protected item.
   * @summary Get recovery points for a replication protected item.
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item's name.
   * @param [options] The optional parameters
   * @returns Promise<Models.RecoveryPointsListByReplicationProtectedItemsResponse>
   */
  listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: msRest.RequestOptionsBase): Promise<Models.RecoveryPointsListByReplicationProtectedItemsResponse>;
  /**
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item's name.
   * @param callback The callback
   */
  listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: msRest.ServiceCallback<Models.RecoveryPointCollection>): void;
  /**
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item's name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecoveryPointCollection>): void;
  listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.RecoveryPointCollection>, callback?: msRest.ServiceCallback<Models.RecoveryPointCollection>): Promise<Models.RecoveryPointsListByReplicationProtectedItemsResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        replicatedProtectedItemName,
        options
      },
      listByReplicationProtectedItemsOperationSpec,
      callback) as Promise<Models.RecoveryPointsListByReplicationProtectedItemsResponse>;
  }

  /**
   * Get the details of specified recovery point.
   * @summary Get a recovery point.
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item's name.
   * @param recoveryPointName The recovery point name.
   * @param [options] The optional parameters
   * @returns Promise<Models.RecoveryPointsGetResponse>
   */
  get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, recoveryPointName: string, options?: msRest.RequestOptionsBase): Promise<Models.RecoveryPointsGetResponse>;
  /**
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item's name.
   * @param recoveryPointName The recovery point name.
   * @param callback The callback
   */
  get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, recoveryPointName: string, callback: msRest.ServiceCallback<Models.RecoveryPoint>): void;
  /**
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item's name.
   * @param recoveryPointName The recovery point name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, recoveryPointName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecoveryPoint>): void;
  get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, recoveryPointName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.RecoveryPoint>, callback?: msRest.ServiceCallback<Models.RecoveryPoint>): Promise<Models.RecoveryPointsGetResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        replicatedProtectedItemName,
        recoveryPointName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.RecoveryPointsGetResponse>;
  }

  /**
   * Lists the available recovery points for a replication protected item.
   * @summary Get recovery points for a replication protected item.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.RecoveryPointsListByReplicationProtectedItemsNextResponse>
   */
  listByReplicationProtectedItemsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RecoveryPointsListByReplicationProtectedItemsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByReplicationProtectedItemsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RecoveryPointCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByReplicationProtectedItemsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecoveryPointCollection>): void;
  listByReplicationProtectedItemsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.RecoveryPointCollection>, callback?: msRest.ServiceCallback<Models.RecoveryPointCollection>): Promise<Models.RecoveryPointsListByReplicationProtectedItemsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByReplicationProtectedItemsNextOperationSpec,
      callback) as Promise<Models.RecoveryPointsListByReplicationProtectedItemsNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByReplicationProtectedItemsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.replicatedProtectedItemName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.RecoveryPointCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints/{recoveryPointName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.replicatedProtectedItemName,
    Parameters.recoveryPointName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.RecoveryPoint
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByReplicationProtectedItemsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.RecoveryPointCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
