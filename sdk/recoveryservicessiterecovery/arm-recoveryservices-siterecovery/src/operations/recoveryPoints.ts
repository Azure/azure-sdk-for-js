/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RecoveryPoints } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SiteRecoveryManagementClient } from "../siteRecoveryManagementClient";
import {
  RecoveryPoint,
  RecoveryPointsListByReplicationProtectedItemsNextOptionalParams,
  RecoveryPointsListByReplicationProtectedItemsOptionalParams,
  RecoveryPointsListByReplicationProtectedItemsResponse,
  RecoveryPointsGetOptionalParams,
  RecoveryPointsGetResponse,
  RecoveryPointsListByReplicationProtectedItemsNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing RecoveryPoints operations. */
export class RecoveryPointsImpl implements RecoveryPoints {
  private readonly client: SiteRecoveryManagementClient;

  /**
   * Initialize a new instance of the class RecoveryPoints class.
   * @param client Reference to the service client
   */
  constructor(client: SiteRecoveryManagementClient) {
    this.client = client;
  }

  /**
   * Lists the available recovery points for a replication protected item.
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item name.
   * @param options The options parameters.
   */
  public listByReplicationProtectedItems(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: RecoveryPointsListByReplicationProtectedItemsOptionalParams
  ): PagedAsyncIterableIterator<RecoveryPoint> {
    const iter = this.listByReplicationProtectedItemsPagingAll(
      fabricName,
      protectionContainerName,
      replicatedProtectedItemName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByReplicationProtectedItemsPagingPage(
          fabricName,
          protectionContainerName,
          replicatedProtectedItemName,
          options
        );
      }
    };
  }

  private async *listByReplicationProtectedItemsPagingPage(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: RecoveryPointsListByReplicationProtectedItemsOptionalParams
  ): AsyncIterableIterator<RecoveryPoint[]> {
    let result = await this._listByReplicationProtectedItems(
      fabricName,
      protectionContainerName,
      replicatedProtectedItemName,
      options
    );
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByReplicationProtectedItemsNext(
        fabricName,
        protectionContainerName,
        replicatedProtectedItemName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByReplicationProtectedItemsPagingAll(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: RecoveryPointsListByReplicationProtectedItemsOptionalParams
  ): AsyncIterableIterator<RecoveryPoint> {
    for await (const page of this.listByReplicationProtectedItemsPagingPage(
      fabricName,
      protectionContainerName,
      replicatedProtectedItemName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Lists the available recovery points for a replication protected item.
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item name.
   * @param options The options parameters.
   */
  private _listByReplicationProtectedItems(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    options?: RecoveryPointsListByReplicationProtectedItemsOptionalParams
  ): Promise<RecoveryPointsListByReplicationProtectedItemsResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        replicatedProtectedItemName,
        options
      },
      listByReplicationProtectedItemsOperationSpec
    );
  }

  /**
   * Get the details of specified recovery point.
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item name.
   * @param recoveryPointName The recovery point name.
   * @param options The options parameters.
   */
  get(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    recoveryPointName: string,
    options?: RecoveryPointsGetOptionalParams
  ): Promise<RecoveryPointsGetResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        replicatedProtectedItemName,
        recoveryPointName,
        options
      },
      getOperationSpec
    );
  }

  /**
   * ListByReplicationProtectedItemsNext
   * @param fabricName The fabric name.
   * @param protectionContainerName The protection container name.
   * @param replicatedProtectedItemName The replication protected item name.
   * @param nextLink The nextLink from the previous successful call to the
   *                 ListByReplicationProtectedItems method.
   * @param options The options parameters.
   */
  private _listByReplicationProtectedItemsNext(
    fabricName: string,
    protectionContainerName: string,
    replicatedProtectedItemName: string,
    nextLink: string,
    options?: RecoveryPointsListByReplicationProtectedItemsNextOptionalParams
  ): Promise<RecoveryPointsListByReplicationProtectedItemsNextResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        replicatedProtectedItemName,
        nextLink,
        options
      },
      listByReplicationProtectedItemsNextOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listByReplicationProtectedItemsOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.RecoveryPointCollection
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.replicatedProtectedItemName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints/{recoveryPointName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.RecoveryPoint
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.replicatedProtectedItemName,
    Parameters.recoveryPointName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listByReplicationProtectedItemsNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.RecoveryPointCollection
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.nextLink,
    Parameters.resourceName,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.replicatedProtectedItemName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
