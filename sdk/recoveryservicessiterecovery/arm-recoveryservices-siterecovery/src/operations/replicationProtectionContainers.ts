/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/replicationProtectionContainersMappers";
import * as Parameters from "../models/parameters";
import { SiteRecoveryManagementClientContext } from "../siteRecoveryManagementClientContext";

/** Class representing a ReplicationProtectionContainers. */
export class ReplicationProtectionContainers {
  private readonly client: SiteRecoveryManagementClientContext;

  /**
   * Create a ReplicationProtectionContainers.
   * @param {SiteRecoveryManagementClientContext} client Reference to the service client.
   */
  constructor(client: SiteRecoveryManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the protection containers in the specified fabric.
   * @summary Gets the list of protection container for a fabric.
   * @param fabricName Fabric name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainersListByReplicationFabricsResponse>
   */
  listByReplicationFabrics(fabricName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainersListByReplicationFabricsResponse>;
  /**
   * @param fabricName Fabric name.
   * @param callback The callback
   */
  listByReplicationFabrics(fabricName: string, callback: msRest.ServiceCallback<Models.ProtectionContainerCollection>): void;
  /**
   * @param fabricName Fabric name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByReplicationFabrics(fabricName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerCollection>): void;
  listByReplicationFabrics(fabricName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerCollection>, callback?: msRest.ServiceCallback<Models.ProtectionContainerCollection>): Promise<Models.ReplicationProtectionContainersListByReplicationFabricsResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        options
      },
      listByReplicationFabricsOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainersListByReplicationFabricsResponse>;
  }

  /**
   * Gets the details of a protection container.
   * @summary Gets the protection container details.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainersGetResponse>
   */
  get(fabricName: string, protectionContainerName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainersGetResponse>;
  /**
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param callback The callback
   */
  get(fabricName: string, protectionContainerName: string, callback: msRest.ServiceCallback<Models.ProtectionContainer>): void;
  /**
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(fabricName: string, protectionContainerName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainer>): void;
  get(fabricName: string, protectionContainerName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainer>, callback?: msRest.ServiceCallback<Models.ProtectionContainer>): Promise<Models.ReplicationProtectionContainersGetResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainersGetResponse>;
  }

  /**
   * Operation to create a protection container.
   * @summary Create a protection container.
   * @param fabricName Unique fabric ARM name.
   * @param protectionContainerName Unique protection container ARM name.
   * @param creationInput Creation input.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainersCreateResponse>
   */
  create(fabricName: string, protectionContainerName: string, creationInput: Models.CreateProtectionContainerInput, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainersCreateResponse> {
    return this.beginCreate(fabricName,protectionContainerName,creationInput,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ReplicationProtectionContainersCreateResponse>;
  }

  /**
   * The operation to a add a protectable item to a protection container(Add physical server.)
   * @summary Adds a protectable item to the replication protection container.
   * @param fabricName The name of the fabric.
   * @param protectionContainerName The name of the protection container.
   * @param discoverProtectableItemRequest The request object to add a protectable item.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainersDiscoverProtectableItemResponse>
   */
  discoverProtectableItem(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: Models.DiscoverProtectableItemRequest, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainersDiscoverProtectableItemResponse> {
    return this.beginDiscoverProtectableItem(fabricName,protectionContainerName,discoverProtectableItemRequest,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ReplicationProtectionContainersDiscoverProtectableItemResponse>;
  }

  /**
   * Operation to remove a protection container.
   * @summary Removes a protection container.
   * @param fabricName Unique fabric ARM name.
   * @param protectionContainerName Unique protection container ARM name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(fabricName: string, protectionContainerName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(fabricName,protectionContainerName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Operation to switch protection from one container to another or one replication provider to
   * another.
   * @summary Switches protection from one container to another or one replication provider to
   * another.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param switchInput Switch protection input.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainersSwitchProtectionResponse>
   */
  switchProtection(fabricName: string, protectionContainerName: string, switchInput: Models.SwitchProtectionInput, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainersSwitchProtectionResponse> {
    return this.beginSwitchProtection(fabricName,protectionContainerName,switchInput,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ReplicationProtectionContainersSwitchProtectionResponse>;
  }

  /**
   * Lists the protection containers in a vault.
   * @summary Gets the list of all protection containers in a vault.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainersListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainersListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.ProtectionContainerCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerCollection>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerCollection>, callback?: msRest.ServiceCallback<Models.ProtectionContainerCollection>): Promise<Models.ReplicationProtectionContainersListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainersListResponse>;
  }

  /**
   * Operation to create a protection container.
   * @summary Create a protection container.
   * @param fabricName Unique fabric ARM name.
   * @param protectionContainerName Unique protection container ARM name.
   * @param creationInput Creation input.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreate(fabricName: string, protectionContainerName: string, creationInput: Models.CreateProtectionContainerInput, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        protectionContainerName,
        creationInput,
        options
      },
      beginCreateOperationSpec,
      options);
  }

  /**
   * The operation to a add a protectable item to a protection container(Add physical server.)
   * @summary Adds a protectable item to the replication protection container.
   * @param fabricName The name of the fabric.
   * @param protectionContainerName The name of the protection container.
   * @param discoverProtectableItemRequest The request object to add a protectable item.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDiscoverProtectableItem(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: Models.DiscoverProtectableItemRequest, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        protectionContainerName,
        discoverProtectableItemRequest,
        options
      },
      beginDiscoverProtectableItemOperationSpec,
      options);
  }

  /**
   * Operation to remove a protection container.
   * @summary Removes a protection container.
   * @param fabricName Unique fabric ARM name.
   * @param protectionContainerName Unique protection container ARM name.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(fabricName: string, protectionContainerName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        protectionContainerName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Operation to switch protection from one container to another or one replication provider to
   * another.
   * @summary Switches protection from one container to another or one replication provider to
   * another.
   * @param fabricName Unique fabric name.
   * @param protectionContainerName Protection container name.
   * @param switchInput Switch protection input.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginSwitchProtection(fabricName: string, protectionContainerName: string, switchInput: Models.SwitchProtectionInput, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        protectionContainerName,
        switchInput,
        options
      },
      beginSwitchProtectionOperationSpec,
      options);
  }

  /**
   * Lists the protection containers in the specified fabric.
   * @summary Gets the list of protection container for a fabric.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainersListByReplicationFabricsNextResponse>
   */
  listByReplicationFabricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainersListByReplicationFabricsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByReplicationFabricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProtectionContainerCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByReplicationFabricsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerCollection>): void;
  listByReplicationFabricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerCollection>, callback?: msRest.ServiceCallback<Models.ProtectionContainerCollection>): Promise<Models.ReplicationProtectionContainersListByReplicationFabricsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByReplicationFabricsNextOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainersListByReplicationFabricsNextResponse>;
  }

  /**
   * Lists the protection containers in a vault.
   * @summary Gets the list of all protection containers in a vault.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainersListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainersListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProtectionContainerCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerCollection>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerCollection>, callback?: msRest.ServiceCallback<Models.ProtectionContainerCollection>): Promise<Models.ReplicationProtectionContainersListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainersListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByReplicationFabricsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainer
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationProtectionContainers",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "creationInput",
    mapper: {
      ...Mappers.CreateProtectionContainerInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainer
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDiscoverProtectableItemOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/discoverProtectableItem",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "discoverProtectableItemRequest",
    mapper: {
      ...Mappers.DiscoverProtectableItemRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainer
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/remove",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginSwitchProtectionOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/switchprotection",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "switchInput",
    mapper: {
      ...Mappers.SwitchProtectionInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainer
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByReplicationFabricsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
