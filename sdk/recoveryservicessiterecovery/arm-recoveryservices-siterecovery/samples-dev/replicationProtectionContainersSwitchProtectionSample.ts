/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  SwitchProtectionInput,
  SiteRecoveryManagementClient
} from "@azure/arm-recoveryservices-siterecovery";
import { DefaultAzureCredential } from "@azure/identity";

/**
 * This sample demonstrates how to Operation to switch protection from one container to another or one replication provider to another.
 *
 * @summary Operation to switch protection from one container to another or one replication provider to another.
 * x-ms-original-file: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2021-11-01/examples/ReplicationProtectionContainers_SwitchProtection.json
 */
async function switchesProtectionFromOneContainerToAnotherOrOneReplicationProviderToAnother() {
  const resourceName = "priyanponeboxvault";
  const resourceGroupName = "priyanprg";
  const subscriptionId = "42195872-7e70-4f8a-837f-84b28ecbb78b";
  const fabricName = "CentralUSCanSite";
  const protectionContainerName = "CentralUSCancloud";
  const switchInput: SwitchProtectionInput = {
    properties: {
      providerSpecificDetails: { instanceType: "A2A" },
      replicationProtectedItemName: "a2aSwapOsVm"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new SiteRecoveryManagementClient(
    credential,
    resourceName,
    resourceGroupName,
    subscriptionId
  );
  const result = await client.replicationProtectionContainers.beginSwitchProtectionAndWait(
    fabricName,
    protectionContainerName,
    switchInput
  );
  console.log(result);
}

switchesProtectionFromOneContainerToAnotherOrOneReplicationProviderToAnother().catch(
  console.error
);
