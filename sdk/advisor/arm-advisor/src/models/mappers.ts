/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const MetadataEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataEntity",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String",
        },
      },
      dependsOn: {
        serializedName: "properties.dependsOn",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      applicableScenarios: {
        serializedName: "properties.applicableScenarios",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      supportedValues: {
        serializedName: "properties.supportedValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataSupportedValueDetail",
            },
          },
        },
      },
    },
  },
};

export const MetadataSupportedValueDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSupportedValueDetail",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ARMErrorResponseBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ARMErrorResponseBody",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ArmErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ARMErrorResponseBody",
        },
      },
    },
  },
};

export const MetadataEntityListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataEntityListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataEntity",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ConfigurationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigData",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DigestConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DigestConfig",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      actionGroupResourceId: {
        serializedName: "actionGroupResourceId",
        type: {
          name: "String",
        },
      },
      frequency: {
        serializedName: "frequency",
        type: {
          name: "Number",
        },
      },
      categories: {
        serializedName: "categories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      language: {
        serializedName: "language",
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ResourceRecommendationBaseListResult: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ResourceRecommendationBaseListResult",
      modelProperties: {
        nextLink: {
          serializedName: "nextLink",
          type: {
            name: "String",
          },
        },
        value: {
          serializedName: "value",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "ResourceRecommendationBase",
              },
            },
          },
        },
      },
    },
  };

export const ShortDescription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ShortDescription",
    modelProperties: {
      problem: {
        serializedName: "problem",
        type: {
          name: "String",
        },
      },
      solution: {
        serializedName: "solution",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceMetadata",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      source: {
        serializedName: "source",
        type: {
          name: "String",
        },
      },
      action: {
        serializedName: "action",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } },
          },
        },
      },
      singular: {
        serializedName: "singular",
        type: {
          name: "String",
        },
      },
      plural: {
        serializedName: "plural",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TrackedRecommendationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedRecommendationProperties",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String",
        },
      },
      postponedTime: {
        serializedName: "postponedTime",
        type: {
          name: "DateTime",
        },
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String",
        },
      },
      priority: {
        serializedName: "priority",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecommendationPropertiesReview: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecommendationPropertiesReview",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecommendationPropertiesResourceWorkload: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "RecommendationPropertiesResourceWorkload",
      modelProperties: {
        id: {
          serializedName: "id",
          type: {
            name: "String",
          },
        },
        name: {
          serializedName: "name",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const OperationEntityListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationEntityListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationEntity",
            },
          },
        },
      },
    },
  },
};

export const OperationEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationEntity",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplayInfo",
        },
      },
    },
  },
};

export const OperationDisplayInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplayInfo",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String",
        },
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TrackedRecommendationPropertiesPayload: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "TrackedRecommendationPropertiesPayload",
      modelProperties: {
        properties: {
          serializedName: "properties",
          type: {
            name: "Composite",
            className: "TrackedRecommendationPropertiesPayloadProperties",
          },
        },
      },
    },
  };

export const TrackedRecommendationPropertiesPayloadProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "TrackedRecommendationPropertiesPayloadProperties",
      modelProperties: {
        trackedProperties: {
          serializedName: "trackedProperties",
          type: {
            name: "Composite",
            className: "TrackedRecommendationProperties",
          },
        },
      },
    },
  };

export const SuppressionContractListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SuppressionContractListResult",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SuppressionContract",
            },
          },
        },
      },
    },
  },
};

export const PredictionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PredictionRequest",
    modelProperties: {
      predictionType: {
        serializedName: "properties.predictionType",
        type: {
          name: "String",
        },
      },
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const PredictionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PredictionResponse",
    modelProperties: {
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      predictionType: {
        serializedName: "properties.predictionType",
        type: {
          name: "String",
        },
      },
      category: {
        serializedName: "properties.category",
        type: {
          name: "String",
        },
      },
      impact: {
        serializedName: "properties.impact",
        type: {
          name: "String",
        },
      },
      impactedField: {
        serializedName: "properties.impactedField",
        type: {
          name: "String",
        },
      },
      lastUpdated: {
        serializedName: "properties.lastUpdated",
        type: {
          name: "DateTime",
        },
      },
      shortDescription: {
        serializedName: "properties.shortDescription",
        type: {
          name: "Composite",
          className: "ShortDescription",
        },
      },
    },
  },
};

export const AdvisorScoreResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdvisorScoreResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdvisorScoreEntity",
            },
          },
        },
      },
    },
  },
};

export const AdvisorScoreEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdvisorScoreEntityProperties",
    modelProperties: {
      lastRefreshedScore: {
        serializedName: "lastRefreshedScore",
        type: {
          name: "Composite",
          className: "ScoreEntity",
        },
      },
      timeSeries: {
        serializedName: "timeSeries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TimeSeriesEntityItem",
            },
          },
        },
      },
    },
  },
};

export const ScoreEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScoreEntity",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "String",
        },
      },
      score: {
        serializedName: "score",
        type: {
          name: "Number",
        },
      },
      consumptionUnits: {
        serializedName: "consumptionUnits",
        type: {
          name: "Number",
        },
      },
      impactedResourceCount: {
        serializedName: "impactedResourceCount",
        type: {
          name: "Number",
        },
      },
      potentialScoreIncrease: {
        serializedName: "potentialScoreIncrease",
        type: {
          name: "Number",
        },
      },
      categoryCount: {
        serializedName: "categoryCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const TimeSeriesEntityItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TimeSeriesEntityItem",
    modelProperties: {
      aggregationLevel: {
        serializedName: "aggregationLevel",
        type: {
          name: "String",
        },
      },
      scoreHistory: {
        serializedName: "scoreHistory",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScoreEntity",
            },
          },
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const AssessmentResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentResult",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      workloadId: {
        serializedName: "properties.workloadId",
        type: {
          name: "String",
        },
      },
      workloadName: {
        serializedName: "properties.workloadName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentId: {
        serializedName: "properties.assessmentId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typeId: {
        serializedName: "properties.typeId",
        type: {
          name: "String",
        },
      },
      typePropertiesType: {
        serializedName: "properties.type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      score: {
        serializedName: "properties.score",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      state: {
        serializedName: "properties.state",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typeVersion: {
        serializedName: "properties.typeVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      locale: {
        serializedName: "properties.locale",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentResult",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentTypeListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentTypeListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentTypeResult",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentTypeResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentTypeResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      title: {
        serializedName: "title",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      locale: {
        serializedName: "locale",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkloadResult",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadResult",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResiliencyReviewCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResiliencyReviewCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResiliencyReview",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResiliencyReview: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResiliencyReview",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      reviewName: {
        serializedName: "properties.reviewName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      workloadName: {
        serializedName: "properties.workloadName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      reviewStatus: {
        serializedName: "properties.reviewStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendationsCount: {
        serializedName: "properties.recommendationsCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      publishedAt: {
        serializedName: "properties.publishedAt",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      updatedAt: {
        serializedName: "properties.updatedAt",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TriageRecommendationCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TriageRecommendationCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TriageRecommendation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TriageRecommendation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TriageRecommendation",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      reviewId: {
        serializedName: "properties.reviewId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      title: {
        serializedName: "properties.title",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      priority: {
        serializedName: "properties.priority",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      appliesToSubscriptions: {
        serializedName: "properties.appliesToSubscriptions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      recommendationStatus: {
        serializedName: "properties.recommendationStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      updatedAt: {
        serializedName: "properties.updatedAt",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      rejectReason: {
        serializedName: "properties.rejectReason",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      potentialBenefits: {
        serializedName: "properties.potentialBenefits",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      notes: {
        serializedName: "properties.notes",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecommendationRejectBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecommendationRejectBody",
    modelProperties: {
      reasonForRejection: {
        serializedName: "reasonForRejection",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TriageResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TriageResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TriageResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ConfigData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConfigData",
    modelProperties: {
      ...Resource.type.modelProperties,
      exclude: {
        serializedName: "properties.exclude",
        type: {
          name: "Boolean",
        },
      },
      lowCpuThreshold: {
        serializedName: "properties.lowCpuThreshold",
        type: {
          name: "String",
        },
      },
      duration: {
        serializedName: "properties.duration",
        type: {
          name: "String",
        },
      },
      digests: {
        serializedName: "properties.digests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DigestConfig",
            },
          },
        },
      },
    },
  },
};

export const ResourceRecommendationBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceRecommendationBase",
    modelProperties: {
      ...Resource.type.modelProperties,
      category: {
        serializedName: "properties.category",
        type: {
          name: "String",
        },
      },
      impact: {
        serializedName: "properties.impact",
        type: {
          name: "String",
        },
      },
      impactedField: {
        serializedName: "properties.impactedField",
        type: {
          name: "String",
        },
      },
      impactedValue: {
        serializedName: "properties.impactedValue",
        type: {
          name: "String",
        },
      },
      lastUpdated: {
        serializedName: "properties.lastUpdated",
        type: {
          name: "DateTime",
        },
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } },
          },
        },
      },
      recommendationTypeId: {
        serializedName: "properties.recommendationTypeId",
        type: {
          name: "String",
        },
      },
      risk: {
        serializedName: "properties.risk",
        type: {
          name: "String",
        },
      },
      shortDescription: {
        serializedName: "properties.shortDescription",
        type: {
          name: "Composite",
          className: "ShortDescription",
        },
      },
      suppressionIds: {
        serializedName: "properties.suppressionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid",
            },
          },
        },
      },
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      resourceMetadata: {
        serializedName: "properties.resourceMetadata",
        type: {
          name: "Composite",
          className: "ResourceMetadata",
        },
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      label: {
        serializedName: "properties.label",
        type: {
          name: "String",
        },
      },
      learnMoreLink: {
        serializedName: "properties.learnMoreLink",
        type: {
          name: "String",
        },
      },
      potentialBenefits: {
        serializedName: "properties.potentialBenefits",
        type: {
          name: "String",
        },
      },
      actions: {
        serializedName: "properties.actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Dictionary",
              value: {
                type: { name: "Dictionary", value: { type: { name: "any" } } },
              },
            },
          },
        },
      },
      remediation: {
        serializedName: "properties.remediation",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } },
          },
        },
      },
      exposedMetadataProperties: {
        serializedName: "properties.exposedMetadataProperties",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "any" } } },
          },
        },
      },
      tracked: {
        serializedName: "properties.tracked",
        type: {
          name: "Boolean",
        },
      },
      trackedProperties: {
        serializedName: "properties.trackedProperties",
        type: {
          name: "Composite",
          className: "TrackedRecommendationProperties",
        },
      },
      review: {
        serializedName: "properties.review",
        type: {
          name: "Composite",
          className: "RecommendationPropertiesReview",
        },
      },
      resourceWorkload: {
        serializedName: "properties.resourceWorkload",
        type: {
          name: "Composite",
          className: "RecommendationPropertiesResourceWorkload",
        },
      },
      sourceSystem: {
        serializedName: "properties.sourceSystem",
        type: {
          name: "String",
        },
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SuppressionContract: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SuppressionContract",
    modelProperties: {
      ...Resource.type.modelProperties,
      suppressionId: {
        serializedName: "properties.suppressionId",
        type: {
          name: "String",
        },
      },
      ttl: {
        serializedName: "properties.ttl",
        type: {
          name: "String",
        },
      },
      expirationTimeStamp: {
        serializedName: "properties.expirationTimeStamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const AdvisorScoreEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdvisorScoreEntity",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AdvisorScoreEntityProperties",
        },
      },
    },
  },
};

export const TriageResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TriageResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      reviewId: {
        serializedName: "properties.reviewId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendationId: {
        serializedName: "properties.recommendationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceGroup: {
        serializedName: "properties.resourceGroup",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceType: {
        serializedName: "properties.resourceType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "properties.resourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceName: {
        serializedName: "properties.resourceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecommendationsGenerateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecommendationsGenerateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String",
        },
      },
    },
  },
};
