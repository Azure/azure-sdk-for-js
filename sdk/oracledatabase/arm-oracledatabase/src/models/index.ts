/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type AutonomousDatabaseBasePropertiesUnion =
  | AutonomousDatabaseBaseProperties
  | AutonomousDatabaseCloneProperties
  | AutonomousDatabaseProperties;

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a AutonomousDatabase list operation. */
export interface AutonomousDatabaseListResult {
  /** The AutonomousDatabase items on this page */
  value: AutonomousDatabase[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Autonomous Database base resource model. */
export interface AutonomousDatabaseBaseProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  dataBaseType: "Clone" | "Regular";
  /**
   * Admin password.
   * This value contains a credential. Consider obscuring before showing to users
   */
  adminPassword?: string;
  /** The maintenance schedule type of the Autonomous Database Serverless. */
  autonomousMaintenanceScheduleType?: AutonomousMaintenanceScheduleType;
  /** The character set for the autonomous database. */
  characterSet?: string;
  /** The compute amount (CPUs) available to the database. */
  computeCount?: number;
  /** The compute model of the Autonomous Database. */
  computeModel?: ComputeModel;
  /** The number of CPU cores to be made available to the database. */
  cpuCoreCount?: number;
  /** Customer Contacts. */
  customerContacts?: CustomerContact[];
  /** The quantity of data in the database, in terabytes. */
  dataStorageSizeInTbs?: number;
  /** The size, in gigabytes, of the data volume that will be created and attached to the database. */
  dataStorageSizeInGbs?: number;
  /** A valid Oracle Database version for Autonomous Database. */
  dbVersion?: string;
  /** The Autonomous Database workload type */
  dbWorkload?: WorkloadType;
  /** The user-friendly name for the Autonomous Database. */
  displayName?: string;
  /** Indicates if auto scaling is enabled for the Autonomous Database CPU core count. */
  isAutoScalingEnabled?: boolean;
  /** Indicates if auto scaling is enabled for the Autonomous Database storage. */
  isAutoScalingForStorageEnabled?: boolean;
  /**
   * The list of [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly peerDbIds?: string[];
  /** The database OCID of the Disaster Recovery peer database, which is located in a different region from the current peer database. */
  peerDbId?: string;
  /** Indicates whether the Autonomous Database has local or called in-region Data Guard enabled. */
  isLocalDataGuardEnabled?: boolean;
  /**
   * Indicates whether the Autonomous Database has Cross Region Data Guard enabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isRemoteDataGuardEnabled?: boolean;
  /**
   * Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly localDisasterRecoveryType?: DisasterRecoveryType;
  /**
   * Local Autonomous Disaster Recovery standby database details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly localStandbyDb?: AutonomousDatabaseStandbySummary;
  /**
   * Indicates the number of seconds of data loss for a Data Guard failover.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedDataRecoveryInSeconds?: number;
  /** Specifies if the Autonomous Database requires mTLS connections. */
  isMtlsConnectionRequired?: boolean;
  /** Specifies if the Autonomous Database preview version is being provisioned. */
  isPreviewVersionWithServiceTermsAccepted?: boolean;
  /** The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED. */
  licenseModel?: LicenseModel;
  /** The character set for the Autonomous Database. */
  ncharacterSet?: string;
  /**
   * Additional information about the current lifecycle state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /**
   * Azure resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AzureResourceProvisioningState;
  /**
   * Views lifecycleState
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: AutonomousDatabaseLifecycleState;
  /** The list of scheduled operations. */
  scheduledOperations?: ScheduledOperationsType;
  /** The private endpoint Ip address for the resource. */
  privateEndpointIp?: string;
  /** The resource's private endpoint label. */
  privateEndpointLabel?: string;
  /**
   * HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ociUrl?: string;
  /** Client subnet */
  subnetId?: string;
  /** VNET for network connectivity */
  vnetId?: string;
  /**
   * The date and time that the database was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * The date and time when maintenance will begin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeMaintenanceBegin?: Date;
  /**
   * The date and time when maintenance will end.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeMaintenanceEnd?: Date;
  /**
   * The current amount of storage in use for user and system data, in terabytes (TB).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actualUsedDataStorageSizeInTbs?: number;
  /**
   * The amount of storage currently allocated for the database tables and billed for, rounded up.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allocatedStorageSizeInTbs?: number;
  /**
   * Information about Oracle APEX Application Development.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apexDetails?: ApexDetailsType;
  /**
   * List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableUpgradeVersions?: string[];
  /**
   * The connection string used to connect to the Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionStrings?: ConnectionStringType;
  /**
   * The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionUrls?: ConnectionUrlType;
  /**
   * Status of the Data Safe registration for this Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataSafeStatus?: DataSafeStatusType;
  /** The Oracle Database Edition that applies to the Autonomous databases. */
  databaseEdition?: DatabaseEditionType;
  /** Autonomous Database ID */
  autonomousDatabaseId?: string;
  /**
   * The area assigned to In-Memory tables in Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly inMemoryAreaInGbs?: number;
  /**
   * The date and time when the next long-term backup would be created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLongTermBackupTimeStamp?: Date;
  /** Details for the long-term backup schedule. */
  longTermBackupSchedule?: LongTermBackUpScheduleDetails;
  /**
   * Indicates if the Autonomous Database version is a preview version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isPreview?: boolean;
  /** Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard */
  localAdgAutoFailoverMaxDataLossLimit?: number;
  /**
   * The amount of memory (in GBs) enabled per ECPU or OCPU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memoryPerOracleComputeUnitInGbs?: number;
  /** Indicates the Autonomous Database mode. */
  openMode?: OpenModeType;
  /**
   * Status of Operations Insights for this Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationsInsightsStatus?: OperationsInsightsStatusType;
  /** The Autonomous Database permission level. */
  permissionLevel?: PermissionLevelType;
  /**
   * The private endpoint for the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpoint?: string;
  /**
   * An array of CPU values that an Autonomous Database can be scaled to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisionableCpus?: number[];
  /** The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled. */
  role?: RoleType;
  /**
   * The URL of the Service Console for the Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceConsoleUrl?: string;
  /**
   * The SQL Web Developer URL for the Oracle Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sqlWebDeveloperUrl?: string;
  /**
   * The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportedRegionsToCloneTo?: string[];
  /**
   * The date and time the Autonomous Data Guard role was switched for the Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeDataGuardRoleChanged?: string;
  /**
   * The date and time the Always Free database will be automatically deleted because of inactivity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeDeletionOfFreeAutonomousDatabase?: string;
  /**
   * The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeLocalDataGuardEnabled?: string;
  /**
   * The timestamp of the last failover operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeOfLastFailover?: string;
  /**
   * The date and time when last refresh happened.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeOfLastRefresh?: string;
  /**
   * The refresh point timestamp (UTC).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeOfLastRefreshPoint?: string;
  /**
   * The timestamp of the last switchover operation for the Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeOfLastSwitchover?: string;
  /**
   * The date and time the Always Free database will be stopped because of inactivity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeReclamationOfFreeAutonomousDatabase?: string;
  /**
   * The storage space consumed by Autonomous Database in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly usedDataStorageSizeInGbs?: number;
  /**
   * The amount of storage that has been used, in terabytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly usedDataStorageSizeInTbs?: number;
  /**
   * Database ocid
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /** Retention period, in days, for long-term backups */
  backupRetentionPeriodInDays?: number;
  /** The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25'] */
  whitelistedIps?: string[];
}

/** CustomerContact resource properties */
export interface CustomerContact {
  /** The email address used by Oracle to send notifications regarding databases and infrastructure. */
  email: string;
}

/** Autonomous Disaster Recovery standby database details. */
export interface AutonomousDatabaseStandbySummary {
  /** The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover. */
  lagTimeInSeconds?: number;
  /** The current state of the Autonomous Database. */
  lifecycleState?: AutonomousDatabaseLifecycleState;
  /** Additional information about the current lifecycle state. */
  lifecycleDetails?: string;
  /** The date and time the Autonomous Data Guard role was switched for the standby Autonomous Database. */
  timeDataGuardRoleChanged?: string;
  /** The date and time the Disaster Recovery role was switched for the standby Autonomous Database. */
  timeDisasterRecoveryRoleChanged?: string;
}

/** The list of scheduled operations. */
export interface ScheduledOperationsType {
  /** Day of week */
  dayOfWeek: DayOfWeek;
  /** auto start time. value must be of ISO-8601 format HH:mm */
  scheduledStartTime?: string;
  /** auto stop time. value must be of ISO-8601 format HH:mm */
  scheduledStopTime?: string;
}

/** DayOfWeek resource properties */
export interface DayOfWeek {
  /** Name of the day of the week. */
  name: DayOfWeekName;
}

/** Information about Oracle APEX Application Development. */
export interface ApexDetailsType {
  /** The Oracle APEX Application Development version. */
  apexVersion?: string;
  /** The Oracle REST Data Services (ORDS) version. */
  ordsVersion?: string;
}

/** Connection strings to connect to an Oracle Autonomous Database. */
export interface ConnectionStringType {
  /** Returns all connection strings that can be used to connect to the Autonomous Database. */
  allConnectionStrings?: AllConnectionStringType;
  /** The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements. */
  dedicated?: string;
  /** The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements. */
  high?: string;
  /** The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements. */
  low?: string;
  /** The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements. */
  medium?: string;
  /** A list of connection string profiles to allow clients to group, filter and select connection string values based on structured metadata. */
  profiles?: ProfileType[];
}

/** The connection string profile to allow clients to group, filter and select connection string values based on structured metadata. */
export interface AllConnectionStringType {
  /** The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements. */
  high?: string;
  /** The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements. */
  low?: string;
  /** The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements. */
  medium?: string;
}

/** The connection string profile to allow clients to group, filter and select connection string values based on structured metadata. */
export interface ProfileType {
  /** Consumer group used by the connection. */
  consumerGroup?: ConsumerGroup;
  /** A user-friendly name for the connection. */
  displayName: string;
  /** Host format used in connection string. */
  hostFormat: HostFormatType;
  /** True for a regional connection string, applicable to cross-region DG only. */
  isRegional?: boolean;
  /** Protocol used by the connection. */
  protocol: ProtocolType;
  /** Specifies whether the listener performs a direct hand-off of the session, or redirects the session. */
  sessionMode: SessionModeType;
  /** Specifies whether the connection string is using the long (LONG), Easy Connect (EZCONNECT), or Easy Connect Plus (EZCONNECTPLUS) format. */
  syntaxFormat: SyntaxFormatType;
  /** Specifies whether the TLS handshake is using one-way (SERVER) or mutual (MUTUAL) authentication. */
  tlsAuthentication?: TlsAuthenticationType;
  /** Connection string value. */
  value: string;
}

/** The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. */
export interface ConnectionUrlType {
  /** Oracle Application Express (APEX) URL. */
  apexUrl?: string;
  /** The URL of the Database Transforms for the Autonomous Database. */
  databaseTransformsUrl?: string;
  /** The URL of the Graph Studio for the Autonomous Database. */
  graphStudioUrl?: string;
  /** The URL of the Oracle Machine Learning (OML) Notebook for the Autonomous Database. */
  machineLearningNotebookUrl?: string;
  /** The URL of the MongoDB API for the Autonomous Database. */
  mongoDbUrl?: string;
  /** The Oracle REST Data Services (ORDS) URL of the Web Access for the Autonomous Database. */
  ordsUrl?: string;
  /** Oracle SQL Developer Web URL. */
  sqlDevWebUrl?: string;
}

/** Details for the long-term backup schedule. */
export interface LongTermBackUpScheduleDetails {
  /** The frequency of the long-term backup schedule */
  repeatCadence?: RepeatCadenceType;
  /** The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month. */
  timeOfBackup?: Date;
  /** Retention period, in days, for backups. */
  retentionPeriodInDays?: number;
  /** Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`. */
  isDisabled?: boolean;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The response of a CloudExadataInfrastructure list operation. */
export interface CloudExadataInfrastructureListResult {
  /** The CloudExadataInfrastructure items on this page */
  value: CloudExadataInfrastructure[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** CloudExadataInfrastructure resource model */
export interface CloudExadataInfrastructureProperties {
  /**
   * Exadata infra ocid
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /** The number of compute servers for the cloud Exadata infrastructure. */
  computeCount?: number;
  /** The number of storage servers for the cloud Exadata infrastructure. */
  storageCount?: number;
  /**
   * The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalStorageSizeInGbs?: number;
  /**
   * The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableStorageSizeInGbs?: number;
  /**
   * The date and time the cloud Exadata infrastructure resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: string;
  /**
   * Additional information about the current lifecycle state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /** maintenanceWindow property */
  maintenanceWindow?: MaintenanceWindow;
  /**
   * The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedPatchingTime?: EstimatedPatchingTime;
  /** The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. */
  customerContacts?: CustomerContact[];
  /**
   * CloudExadataInfrastructure provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AzureResourceProvisioningState;
  /**
   * CloudExadataInfrastructure lifecycle state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: CloudExadataInfrastructureLifecycleState;
  /** The model name of the cloud Exadata infrastructure resource. */
  shape: string;
  /**
   * HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ociUrl?: string;
  /**
   * The total number of CPU cores allocated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cpuCount?: number;
  /**
   * The total number of CPU cores available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxCpuCount?: number;
  /**
   * The memory allocated in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memorySizeInGbs?: number;
  /**
   * The total memory available in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxMemoryInGbs?: number;
  /**
   * The local node storage to be allocated in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbNodeStorageSizeInGbs?: number;
  /**
   * The total local node storage available in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxDbNodeStorageSizeInGbs?: number;
  /**
   * The quantity of data in the database, in terabytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataStorageSizeInTbs?: number;
  /**
   * The total available DATA disk group size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxDataStorageInTbs?: number;
  /**
   * The software version of the database servers (dom0) in the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbServerVersion?: string;
  /**
   * The software version of the storage servers (cells) in the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageServerVersion?: string;
  /**
   * The requested number of additional storage servers activated for the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activatedStorageCount?: number;
  /**
   * The requested number of additional storage servers for the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalStorageCount?: number;
  /** The name for the Exadata infrastructure. */
  displayName: string;
  /**
   * The OCID of the last maintenance run.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMaintenanceRunId?: string;
  /**
   * The OCID of the next maintenance run.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextMaintenanceRunId?: string;
  /**
   * Monthly Db Server version
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthlyDbServerVersion?: string;
  /**
   * Monthly Storage Server version
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthlyStorageServerVersion?: string;
}

/** MaintenanceWindow resource properties */
export interface MaintenanceWindow {
  /** The maintenance window scheduling preference. */
  preference?: Preference;
  /** Months during the year when maintenance should be performed. */
  months?: Month[];
  /** Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. */
  weeksOfMonth?: number[];
  /** Days during the week when maintenance should be performed. */
  daysOfWeek?: DayOfWeek[];
  /** The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC */
  hoursOfDay?: number[];
  /** Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. */
  leadTimeInWeeks?: number;
  /** Cloud Exadata infrastructure node patching method. */
  patchingMode?: PatchingMode;
  /** Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive). */
  customActionTimeoutInMins?: number;
  /** If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations. */
  isCustomActionTimeoutEnabled?: boolean;
  /** is Monthly Patching Enabled */
  isMonthlyPatchingEnabled?: boolean;
}

/** Month resource properties */
export interface Month {
  /** Name of the month of the year. */
  name: MonthName;
}

/** The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching). */
export interface EstimatedPatchingTime {
  /**
   * The estimated time required in minutes for database server patching.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedDbServerPatchingTime?: number;
  /**
   * The estimated time required in minutes for network switch patching.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedNetworkSwitchesPatchingTime?: number;
  /**
   * The estimated time required in minutes for storage server patching.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedStorageServerPatchingTime?: number;
  /**
   * The estimated total time required in minutes for all patching operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalEstimatedPatchingTime?: number;
}

/** The response of a CloudVmCluster list operation. */
export interface CloudVmClusterListResult {
  /** The CloudVmCluster items on this page */
  value: CloudVmCluster[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** CloudVmCluster resource model */
export interface CloudVmClusterProperties {
  /**
   * Cloud VM Cluster ocid
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * The port number configured for the listener on the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly listenerPort?: number;
  /**
   * The number of nodes in the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nodeCount?: number;
  /** The data disk group size to be allocated in GBs per VM. */
  storageSizeInGbs?: number;
  /** The data disk group size to be allocated in TBs. */
  dataStorageSizeInTbs?: number;
  /** The local node storage to be allocated in GBs. */
  dbNodeStorageSizeInGbs?: number;
  /** The memory to be allocated in GBs. */
  memorySizeInGbs?: number;
  /**
   * The date and time that the cloud VM cluster was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * Additional information about the current lifecycle state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /** The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm). */
  timeZone?: string;
  /** The OCID of the zone the cloud VM cluster is associated with. */
  zoneId?: string;
  /** The hostname for the cloud VM cluster. */
  hostname: string;
  /** The domain name for the cloud VM cluster. */
  domain?: string;
  /** The number of CPU cores enabled on the cloud VM cluster. */
  cpuCoreCount: number;
  /** The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part. */
  ocpuCount?: number;
  /** The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. */
  clusterName?: string;
  /** The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage. */
  dataStoragePercentage?: number;
  /** If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster. */
  isLocalBackupEnabled?: boolean;
  /** Cloud Exadata Infrastructure ID */
  cloudExadataInfrastructureId: string;
  /** If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created. */
  isSparseDiskgroupEnabled?: boolean;
  /** Operating system version of the image. */
  systemVersion?: string;
  /** The public key portion of one or more key pairs used for SSH access to the cloud VM cluster. */
  sshPublicKeys: string[];
  /** The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. */
  licenseModel?: LicenseModel;
  /**
   * The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskRedundancy?: DiskRedundancy;
  /**
   * The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scanIpIds?: string[];
  /**
   * The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vipIds?: string[];
  /**
   * The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scanDnsName?: string;
  /** The TCP Single Client Access Name (SCAN) port. The default port is 1521. */
  scanListenerPortTcp?: number;
  /** The TCPS Single Client Access Name (SCAN) port. The default port is 2484. */
  scanListenerPortTcpSsl?: number;
  /**
   * The OCID of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scanDnsRecordId?: string;
  /**
   * The model name of the Exadata hardware running the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shape?: string;
  /**
   * CloudVmCluster provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AzureResourceProvisioningState;
  /**
   * CloudVmCluster lifecycle state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: CloudVmClusterLifecycleState;
  /** VNET for network connectivity */
  vnetId: string;
  /** Oracle Grid Infrastructure (GI) software version */
  giVersion: string;
  /**
   * HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ociUrl?: string;
  /**
   * HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nsgUrl?: string;
  /** Client subnet */
  subnetId: string;
  /** Client OCI backup subnet CIDR, default is 192.168.252.0/22 */
  backupSubnetCidr?: string;
  /** CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default. */
  nsgCidrs?: NsgCidr[];
  /** Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS. */
  dataCollectionOptions?: DataCollectionOptions;
  /** Display Name */
  displayName: string;
  /** The list of compute servers to be added to the cloud VM cluster. */
  computeNodes?: string[];
  /**
   * iormConfigCache details for cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly iormConfigCache?: ExadataIormConfig;
  /**
   * The OCID of the last maintenance update history entry.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdateHistoryEntryId?: string;
  /** The list of DB servers. */
  dbServers?: string[];
  /**
   * Cluster compartmentId
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly compartmentId?: string;
  /**
   * Cluster subnet ocid
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subnetOcid?: string;
}

/** A rule for allowing inbound (INGRESS) IP packets */
export interface NsgCidr {
  /** Conceptually, this is the range of IP addresses that a packet coming into the instance can come from. */
  source: string;
  /** Destination port range to specify particular destination ports for TCP rules. */
  destinationPortRange?: PortRange;
}

/** Port Range to specify particular destination ports for TCP rules. */
export interface PortRange {
  /** The minimum port number, which must not be greater than the maximum port number. */
  min: number;
  /** The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value. */
  max: number;
}

/** DataCollectionOptions resource properties */
export interface DataCollectionOptions {
  /** Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. */
  isDiagnosticsEventsEnabled?: boolean;
  /** Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. */
  isHealthMonitoringEnabled?: boolean;
  /** Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. */
  isIncidentLogsEnabled?: boolean;
}

/** ExadataIormConfig for cloud vm cluster */
export interface ExadataIormConfig {
  /** An array of IORM settings for all the database in the Exadata DB system. */
  dbPlans?: DbIormConfig[];
  /** Additional information about the current lifecycleState. */
  lifecycleDetails?: string;
  /** The current state of IORM configuration for the Exadata DB system. */
  lifecycleState?: IormLifecycleState;
  /** The current value for the IORM objective. The default is AUTO. */
  objective?: Objective;
}

/** DbIormConfig for cloud vm cluster */
export interface DbIormConfig {
  /** The database name. For the default DbPlan, the dbName is default. */
  dbName?: string;
  /** The flash cache limit for this database. This value is internally configured based on the share value assigned to the database. */
  flashCacheLimit?: string;
  /** The relative priority of this database. */
  share?: number;
}

/** The response of a AutonomousDatabaseCharacterSet list operation. */
export interface AutonomousDatabaseCharacterSetListResult {
  /** The AutonomousDatabaseCharacterSet items on this page */
  value: AutonomousDatabaseCharacterSet[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** AutonomousDatabaseCharacterSet resource model */
export interface AutonomousDatabaseCharacterSetProperties {
  /**
   * The Oracle Autonomous Database supported character sets.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly characterSet: string;
}

/** The response of a AutonomousDatabaseNationalCharacterSet list operation. */
export interface AutonomousDatabaseNationalCharacterSetListResult {
  /** The AutonomousDatabaseNationalCharacterSet items on this page */
  value: AutonomousDatabaseNationalCharacterSet[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** AutonomousDatabaseNationalCharacterSet resource model */
export interface AutonomousDatabaseNationalCharacterSetProperties {
  /**
   * The Oracle Autonomous Database supported national character sets.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly characterSet: string;
}

/** The response of a AutonomousDbVersion list operation. */
export interface AutonomousDbVersionListResult {
  /** The AutonomousDbVersion items on this page */
  value: AutonomousDbVersion[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** AutonomousDbVersion resource model */
export interface AutonomousDbVersionProperties {
  /**
   * Supported Autonomous Db versions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version: string;
  /**
   * The Autonomous Database workload type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbWorkload?: WorkloadType;
  /**
   * True if this version of the Oracle Database software's default is free.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDefaultForFree?: boolean;
  /**
   * True if this version of the Oracle Database software's default is paid.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDefaultForPaid?: boolean;
  /**
   * True if this version of the Oracle Database software can be used for Always-Free Autonomous Databases.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isFreeTierEnabled?: boolean;
  /**
   * True if this version of the Oracle Database software has payments enabled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isPaidEnabled?: boolean;
}

/** The response of a DbSystemShape list operation. */
export interface DbSystemShapeListResult {
  /** The DbSystemShape items on this page */
  value: DbSystemShape[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** DbSystemShape resource model */
export interface DbSystemShapeProperties {
  /**
   * The family of the shape used for the DB system.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shapeFamily?: string;
  /**
   * The maximum number of CPU cores that can be enabled on the DB system for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableCoreCount: number;
  /**
   * The minimum number of CPU cores that can be enabled on the DB system for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minimumCoreCount?: number;
  /**
   * The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly runtimeMinimumCoreCount?: number;
  /**
   * The discrete number by which the CPU core count for this shape can be increased or decreased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly coreCountIncrement?: number;
  /**
   * The minimum number of Exadata storage servers available for the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minStorageCount?: number;
  /**
   * The maximum number of Exadata storage servers available for the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxStorageCount?: number;
  /**
   * The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableDataStoragePerServerInTbs?: number;
  /**
   * The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableMemoryPerNodeInGbs?: number;
  /**
   * The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableDbNodePerNodeInGbs?: number;
  /**
   * The minimum number of CPU cores that can be enabled per node for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minCoreCountPerNode?: number;
  /**
   * The maximum memory that can be enabled for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableMemoryInGbs?: number;
  /**
   * The minimum memory that need be allocated per node for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minMemoryPerNodeInGbs?: number;
  /**
   * The maximum Db Node storage that can be enabled for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableDbNodeStorageInGbs?: number;
  /**
   * The minimum Db Node storage that need be allocated per node for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minDbNodeStoragePerNodeInGbs?: number;
  /**
   * The maximum DATA storage that can be enabled for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableDataStorageInTbs?: number;
  /**
   * The minimum data storage that need be allocated for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minDataStorageInTbs?: number;
  /**
   * The minimum number of database nodes available for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minimumNodeCount?: number;
  /**
   * The maximum number of database nodes available for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximumNodeCount?: number;
  /**
   * The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableCoreCountPerNode?: number;
}

/** The response of a DnsPrivateView list operation. */
export interface DnsPrivateViewListResult {
  /** The DnsPrivateView items on this page */
  value: DnsPrivateView[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Views resource model */
export interface DnsPrivateViewProperties {
  /**
   * The OCID of the view
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid: string;
  /**
   * The display name of the view resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isProtected: boolean;
  /**
   * Views lifecycleState
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: DnsPrivateViewsLifecycleState;
  /**
   * The canonical absolute URL of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly self: string;
  /**
   * views timeCreated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated: Date;
  /**
   * views timeCreated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeUpdated: Date;
  /**
   * Azure resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** The response of a DnsPrivateZone list operation. */
export interface DnsPrivateZoneListResult {
  /** The DnsPrivateZone items on this page */
  value: DnsPrivateZone[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Zones resource model */
export interface DnsPrivateZoneProperties {
  /**
   * The OCID of the Zone
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid: string;
  /**
   * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isProtected: boolean;
  /**
   * Zones lifecycleState
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: DnsPrivateZonesLifecycleState;
  /**
   * The canonical absolute URL of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly self: string;
  /**
   * The current serial of the zone. As seen in the zone's SOA record.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serial: number;
  /**
   * Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version: string;
  /**
   * The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly viewId?: string;
  /**
   * The type of the zone. Must be either PRIMARY or SECONDARY. SECONDARY is only supported for GLOBAL zones.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zoneType: ZoneType;
  /**
   * Zones timeCreated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated: Date;
  /**
   * Azure resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** The response of a GiVersion list operation. */
export interface GiVersionListResult {
  /** The GiVersion items on this page */
  value: GiVersion[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** GiVersion resource model */
export interface GiVersionProperties {
  /**
   * A valid Oracle Grid Infrastructure (GI) software version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version: string;
}

/** The response of a SystemVersion list operation. */
export interface SystemVersionListResult {
  /** The SystemVersion items on this page */
  value: SystemVersion[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** System Version Resource model */
export interface SystemVersionProperties {
  /**
   * A valid Oracle System Version
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemVersion: string;
}

/** The response of a OracleSubscription list operation. */
export interface OracleSubscriptionListResult {
  /** The OracleSubscription items on this page */
  value: OracleSubscription[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Oracle Subscription resource model */
export interface OracleSubscriptionProperties {
  /**
   * OracleSubscriptionProvisioningState provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: OracleSubscriptionProvisioningState;
  /**
   * SAAS subscription ID generated by Marketplace
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly saasSubscriptionId?: string;
  /**
   * Cloud Account Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudAccountId?: string;
  /**
   * Cloud Account provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudAccountState?: CloudAccountProvisioningState;
  /** Term Unit. P1Y, P3Y, etc, see Durations https://en.wikipedia.org/wiki/ISO_8601 */
  termUnit?: string;
  /** Product code for the term unit */
  productCode?: string;
  /** Intent for the update operation */
  intent?: Intent;
}

/** Plan for the resource. */
export interface Plan {
  /** A user defined name of the 3rd Party Artifact that is being procured. */
  name: string;
  /** The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic */
  publisher: string;
  /** The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. */
  product: string;
  /** A publisher provided promotion code as provisioned in Data Market for the said product/artifact. */
  promotionCode?: string;
  /** The version of the desired product/artifact. */
  version?: string;
}

/** The type used for update operations of the OracleSubscription. */
export interface OracleSubscriptionUpdate {
  /** Details of the resource plan. */
  plan?: PlanUpdate;
  /** The updatable properties of the OracleSubscription. */
  properties?: OracleSubscriptionUpdateProperties;
}

/** ResourcePlanTypeUpdate model definition */
export interface PlanUpdate {
  /** A user defined name of the 3rd Party Artifact that is being procured. */
  name?: string;
  /** The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic */
  publisher?: string;
  /** The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. */
  product?: string;
  /** A publisher provided promotion code as provisioned in Data Market for the said product/artifact. */
  promotionCode?: string;
  /** The version of the desired product/artifact. */
  version?: string;
}

/** The updatable properties of the OracleSubscription. */
export interface OracleSubscriptionUpdateProperties {
  /** Product code for the term unit */
  productCode?: string;
  /** Intent for the update operation */
  intent?: Intent;
}

/** Activation Links model */
export interface ActivationLinks {
  /**
   * New Cloud Account Activation Link
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly newCloudAccountActivationLink?: string;
  /**
   * Existing Cloud Account Activation Link
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly existingCloudAccountActivationLink?: string;
}

/** Cloud Account Details model */
export interface CloudAccountDetails {
  /**
   * Cloud Account name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudAccountName?: string;
  /**
   * Cloud Account Home region
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudAccountHomeRegion?: string;
}

/** SaaS Subscription Details model */
export interface SaasSubscriptionDetails {
  /**
   * Purchased SaaS subscription ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * SaaS subscription name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionName?: string;
  /**
   * Creation Date and Time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * Purchased offer ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offerId?: string;
  /**
   * Purchased offer's plan ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly planId?: string;
  /**
   * Indicates the status of the Subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly saasSubscriptionStatus?: string;
  /**
   * Publisher ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherId?: string;
  /**
   * Purchaser Email ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaserEmailId?: string;
  /**
   * Purchaser Tenant ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaserTenantId?: string;
  /**
   * Purchase Term Unit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termUnit?: string;
  /**
   * AutoRenew flag
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isAutoRenew?: boolean;
  /**
   * FreeTrial flag
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isFreeTrial?: boolean;
}

/** The type used for update operations of the AutonomousDatabase. */
export interface AutonomousDatabaseUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The updatable properties of the AutonomousDatabase. */
  properties?: AutonomousDatabaseUpdateProperties;
}

/** The updatable properties of the AutonomousDatabase. */
export interface AutonomousDatabaseUpdateProperties {
  /**
   * Admin password.
   * This value contains a credential. Consider obscuring before showing to users
   */
  adminPassword?: string;
  /** The maintenance schedule type of the Autonomous Database Serverless. */
  autonomousMaintenanceScheduleType?: AutonomousMaintenanceScheduleType;
  /** The compute amount (CPUs) available to the database. */
  computeCount?: number;
  /** The number of CPU cores to be made available to the database. */
  cpuCoreCount?: number;
  /** Customer Contacts. */
  customerContacts?: CustomerContact[];
  /** The quantity of data in the database, in terabytes. */
  dataStorageSizeInTbs?: number;
  /** The size, in gigabytes, of the data volume that will be created and attached to the database. */
  dataStorageSizeInGbs?: number;
  /** The user-friendly name for the Autonomous Database. */
  displayName?: string;
  /** Indicates if auto scaling is enabled for the Autonomous Database CPU core count. */
  isAutoScalingEnabled?: boolean;
  /** Indicates if auto scaling is enabled for the Autonomous Database storage. */
  isAutoScalingForStorageEnabled?: boolean;
  /** The database OCID of the Disaster Recovery peer database, which is located in a different region from the current peer database. */
  peerDbId?: string;
  /** Indicates whether the Autonomous Database has local or called in-region Data Guard enabled. */
  isLocalDataGuardEnabled?: boolean;
  /** Specifies if the Autonomous Database requires mTLS connections. */
  isMtlsConnectionRequired?: boolean;
  /** The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED. */
  licenseModel?: LicenseModel;
  /** The list of scheduled operations. */
  scheduledOperations?: ScheduledOperationsTypeUpdate;
  /** The Oracle Database Edition that applies to the Autonomous databases. */
  databaseEdition?: DatabaseEditionType;
  /** Details for the long-term backup schedule. */
  longTermBackupSchedule?: LongTermBackUpScheduleDetails;
  /** Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard */
  localAdgAutoFailoverMaxDataLossLimit?: number;
  /** Indicates the Autonomous Database mode. */
  openMode?: OpenModeType;
  /** The Autonomous Database permission level. */
  permissionLevel?: PermissionLevelType;
  /** The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled. */
  role?: RoleType;
  /** Retention period, in days, for long-term backups */
  backupRetentionPeriodInDays?: number;
  /** The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25'] */
  whitelistedIps?: string[];
}

/** The list of scheduled operations. */
export interface ScheduledOperationsTypeUpdate {
  /** Day of week */
  dayOfWeek?: DayOfWeekUpdate;
  /** auto start time. value must be of ISO-8601 format HH:mm */
  scheduledStartTime?: string;
  /** auto stop time. value must be of ISO-8601 format HH:mm */
  scheduledStopTime?: string;
}

/** DayOfWeek resource properties */
export interface DayOfWeekUpdate {
  /** Name of the day of the week. */
  name?: DayOfWeekName;
}

/** The response of a AutonomousDatabaseBackup list operation. */
export interface AutonomousDatabaseBackupListResult {
  /** The AutonomousDatabaseBackup items on this page */
  value: AutonomousDatabaseBackup[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** AutonomousDatabaseBackup resource model */
export interface AutonomousDatabaseBackupProperties {
  /**
   * The OCID of the Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly autonomousDatabaseOcid?: string;
  /**
   * The size of the database in terabytes at the time the backup was taken.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly databaseSizeInTbs?: number;
  /**
   * A valid Oracle Database version for Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbVersion?: string;
  /** The user-friendly name for the backup. The name does not have to be unique. */
  displayName?: string;
  /**
   * The OCID of the Autonomous Database backup.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * Indicates whether the backup is user-initiated or automatic.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isAutomatic?: boolean;
  /**
   * Indicates whether the backup can be used to restore the associated Autonomous Database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isRestorable?: boolean;
  /**
   * Additional information about the current lifecycle state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /**
   * The current state of the backup.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: AutonomousDatabaseBackupLifecycleState;
  /** Retention period, in days, for long-term backups. */
  retentionPeriodInDays?: number;
  /**
   * The backup size in terabytes (TB).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sizeInTbs?: number;
  /**
   * Timestamp until when the backup will be available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeAvailableTil?: Date;
  /**
   * The date and time the backup started.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeStarted?: string;
  /**
   * The date and time the backup completed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeEnded?: string;
  /**
   * The type of backup.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupType?: AutonomousDatabaseBackupType;
  /**
   * Azure resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AzureResourceProvisioningState;
}

/** The type used for update operations of the AutonomousDatabaseBackup. */
export interface AutonomousDatabaseBackupUpdate {
  /** The updatable properties of the AutonomousDatabaseBackup. */
  properties?: AutonomousDatabaseBackupUpdateProperties;
}

/** The updatable properties of the AutonomousDatabaseBackup. */
export interface AutonomousDatabaseBackupUpdateProperties {
  /** Retention period, in days, for long-term backups. */
  retentionPeriodInDays?: number;
}

/** PeerDb Details */
export interface PeerDbDetails {
  /** The database OCID of the Disaster Recovery peer database, which is located in a different region from the current peer database. */
  peerDbId?: string;
}

/** Autonomous Database Generate Wallet resource model. */
export interface GenerateAutonomousDatabaseWalletDetails {
  /** The type of wallet to generate. */
  generateType?: GenerateType;
  /** True when requesting regional connection strings in PDB connect info, applicable to cross-region DG only. */
  isRegional?: boolean;
  /**
   * The password to encrypt the keys inside the wallet
   * This value contains a credential. Consider obscuring before showing to users
   */
  password: string;
}

/** Autonomous Database Wallet File resource model. */
export interface AutonomousDatabaseWalletFile {
  /** The base64 encoded wallet files */
  walletFiles: string;
}

/** Details to restore an Oracle Autonomous Database. */
export interface RestoreAutonomousDatabaseDetails {
  /** The time to restore the database to. */
  timestamp: Date;
}

/** The type used for update operations of the CloudExadataInfrastructure. */
export interface CloudExadataInfrastructureUpdate {
  /** CloudExadataInfrastructure zones */
  zones?: string[];
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The updatable properties of the CloudExadataInfrastructure. */
  properties?: CloudExadataInfrastructureUpdateProperties;
}

/** The updatable properties of the CloudExadataInfrastructure. */
export interface CloudExadataInfrastructureUpdateProperties {
  /** The number of compute servers for the cloud Exadata infrastructure. */
  computeCount?: number;
  /** The number of storage servers for the cloud Exadata infrastructure. */
  storageCount?: number;
  /** maintenanceWindow property */
  maintenanceWindow?: MaintenanceWindow;
  /** The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. */
  customerContacts?: CustomerContact[];
  /** The name for the Exadata infrastructure. */
  displayName?: string;
}

/** The response of a DbServer list operation. */
export interface DbServerListResult {
  /** The DbServer items on this page */
  value: DbServer[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** DbServer resource properties */
export interface DbServerProperties {
  /**
   * Db server name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * The name for the Db Server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The OCID of the compartment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly compartmentId?: string;
  /**
   * The OCID of the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exadataInfrastructureId?: string;
  /**
   * The number of CPU cores enabled on the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cpuCoreCount?: number;
  /**
   * dbServerPatching details of the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbServerPatchingDetails?: DbServerPatchingDetails;
  /**
   * The total memory available in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxMemoryInGbs?: number;
  /**
   * The allocated local node storage in GBs on the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbNodeStorageSizeInGbs?: number;
  /**
   * The OCID of the VM Clusters associated with the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmClusterIds?: string[];
  /**
   * The OCID of the Db nodes associated with the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbNodeIds?: string[];
  /**
   * Lifecycle details of dbServer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /**
   * DbServer provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: DbServerProvisioningState;
  /**
   * The total number of CPU cores available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxCpuCount?: number;
  /**
   * The list of OCIDs of the Autonomous VM Clusters associated with the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly autonomousVmClusterIds?: string[];
  /**
   * The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly autonomousVirtualMachineIds?: string[];
  /**
   * The total max dbNode storage in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxDbNodeStorageInGbs?: number;
  /**
   * The total memory size in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memorySizeInGbs?: number;
  /**
   * The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shape?: string;
  /**
   * The date and time that the Db Server was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * Azure resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** DbServer Patching Properties */
export interface DbServerPatchingDetails {
  /**
   * Estimated Patch Duration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedPatchDuration?: number;
  /**
   * Patching Status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly patchingStatus?: DbServerPatchingStatus;
  /**
   * Time Patching Ended
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timePatchingEnded?: Date;
  /**
   * Time Patching Started
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timePatchingStarted?: Date;
}

/** The type used for update operations of the CloudVmCluster. */
export interface CloudVmClusterUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The updatable properties of the CloudVmCluster. */
  properties?: CloudVmClusterUpdateProperties;
}

/** The updatable properties of the CloudVmCluster. */
export interface CloudVmClusterUpdateProperties {
  /** The data disk group size to be allocated in GBs per VM. */
  storageSizeInGbs?: number;
  /** The data disk group size to be allocated in TBs. */
  dataStorageSizeInTbs?: number;
  /** The local node storage to be allocated in GBs. */
  dbNodeStorageSizeInGbs?: number;
  /** The memory to be allocated in GBs. */
  memorySizeInGbs?: number;
  /** The number of CPU cores enabled on the cloud VM cluster. */
  cpuCoreCount?: number;
  /** The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part. */
  ocpuCount?: number;
  /** The public key portion of one or more key pairs used for SSH access to the cloud VM cluster. */
  sshPublicKeys?: string[];
  /** The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. */
  licenseModel?: LicenseModel;
  /** Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS. */
  dataCollectionOptions?: DataCollectionOptions;
  /** Display Name */
  displayName?: string;
  /** The list of compute servers to be added to the cloud VM cluster. */
  computeNodes?: string[];
}

/** Add/Remove (Virtual Machine) DbNode model */
export interface AddRemoveDbNode {
  /** Db servers ocids */
  dbServers: string[];
}

/** The response of a DbNode list operation. */
export interface DbNodeListResult {
  /** The DbNode items on this page */
  value: DbNode[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of DbNodeResource */
export interface DbNodeProperties {
  /**
   * DbNode OCID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid: string;
  /**
   * Additional information about the planned maintenance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalDetails?: string;
  /**
   * The OCID of the backup IP address associated with the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupIpId?: string;
  /**
   * The OCID of the second backup VNIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupVnic2Id?: string;
  /**
   * The OCID of the backup VNIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupVnicId?: string;
  /**
   * The number of CPU cores enabled on the Db node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cpuCoreCount?: number;
  /**
   * The allocated local node storage in GBs on the Db node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbNodeStorageSizeInGbs?: number;
  /**
   * The OCID of the Exacc Db server associated with the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbServerId?: string;
  /**
   * The OCID of the DB system.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbSystemId: string;
  /**
   * The name of the Fault Domain the instance is contained in.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly faultDomain?: string;
  /**
   * The OCID of the host IP address associated with the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostIpId?: string;
  /**
   * The host name for the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostname?: string;
  /**
   * The current state of the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: DbNodeProvisioningState;
  /**
   * Lifecycle details of Db Node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /**
   * The type of database node maintenance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maintenanceType?: DbNodeMaintenanceType;
  /**
   * The allocated memory in GBs on the Db node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memorySizeInGbs?: number;
  /**
   * The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly softwareStorageSizeInGb?: number;
  /**
   * The date and time that the database node was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * End date and time of maintenance window.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeMaintenanceWindowEnd?: Date;
  /**
   * Start date and time of maintenance window.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeMaintenanceWindowStart?: Date;
  /**
   * The OCID of the second VNIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vnic2Id?: string;
  /**
   * The OCID of the VNIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vnicId?: string;
  /**
   * Azure resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** DbNode action object */
export interface DbNodeAction {
  /** Db action */
  action: DbNodeActionEnum;
}

/** Private Ip Addresses filter */
export interface PrivateIpAddressesFilter {
  /** Subnet OCID */
  subnetId: string;
  /** VCN OCID */
  vnicId: string;
}

/** PrivateIpAddress resource properties */
export interface PrivateIpAddressProperties {
  /** PrivateIpAddresses displayName */
  displayName: string;
  /** PrivateIpAddresses hostnameLabel */
  hostnameLabel: string;
  /** PrivateIpAddresses Id */
  ocid: string;
  /** PrivateIpAddresses ipAddress */
  ipAddress: string;
  /** PrivateIpAddresses subnetId */
  subnetId: string;
}

/** The response of a VirtualNetworkAddress list operation. */
export interface VirtualNetworkAddressListResult {
  /** The VirtualNetworkAddress items on this page */
  value: VirtualNetworkAddress[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** virtualNetworkAddress resource properties */
export interface VirtualNetworkAddressProperties {
  /** Virtual network Address address. */
  ipAddress?: string;
  /** Virtual Machine OCID. */
  vmOcid?: string;
  /**
   * Application VIP OCID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * Virtual network address fully qualified domain name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domain?: string;
  /**
   * Additional information about the current lifecycle state of the application virtual IP (VIP) address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /**
   * Azure resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AzureResourceProvisioningState;
  /**
   * virtual network address lifecycle state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleState?: VirtualNetworkAddressLifecycleState;
  /**
   * The date and time when the create operation for the application virtual IP (VIP) address completed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeAssigned?: Date;
}

/** SystemVersions filter */
export interface SystemVersionsFilter {
  /** Grid Infrastructure version */
  giVersion: string;
  /** Exadata shape */
  shape: string;
  /** Check If we have to list only latest versions */
  isLatestVersion?: boolean;
}

/** validation error */
export interface ValidationError {
  /** error code */
  code: string;
  /** error message */
  message: string;
}

/** validation result */
export interface ValidationResult {
  /**
   * validation status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status: ValidationStatus;
  /** validation error */
  error: ValidationError;
}

/** Autonomous Database clone resource model. */
export interface AutonomousDatabaseCloneProperties
  extends AutonomousDatabaseBaseProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  dataBaseType: "Clone";
  /** The source of the database. */
  source?: SourceType;
  /** The Azure ID of the Autonomous Database that was cloned to create the current Autonomous Database. */
  sourceId: string;
  /** The Autonomous Database clone type. */
  cloneType: CloneType;
  /**
   * Indicates if the refreshable clone can be reconnected to its source database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isReconnectCloneEnabled?: boolean;
  /**
   * Indicates if the Autonomous Database is a refreshable clone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isRefreshableClone?: boolean;
  /** The refresh mode of the clone. */
  refreshableModel?: RefreshableModelType;
  /**
   * The refresh status of the clone.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly refreshableStatus?: RefreshableStatusType;
  /** The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database. */
  timeUntilReconnectCloneEnabled?: string;
}

/** Autonomous Database resource model. */
export interface AutonomousDatabaseProperties
  extends AutonomousDatabaseBaseProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  dataBaseType: "Regular";
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Autonomous Database  resource model. */
export interface AutonomousDatabase extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: AutonomousDatabaseBasePropertiesUnion;
}

/** CloudExadataInfrastructure resource definition */
export interface CloudExadataInfrastructure extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: CloudExadataInfrastructureProperties;
  /** CloudExadataInfrastructure zones */
  zones: string[];
}

/** CloudVmCluster resource definition */
export interface CloudVmCluster extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: CloudVmClusterProperties;
}

/** AutonomousDatabaseCharacterSets resource definition */
export interface AutonomousDatabaseCharacterSet extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: AutonomousDatabaseCharacterSetProperties;
}

/** AutonomousDatabaseNationalCharacterSets resource definition */
export interface AutonomousDatabaseNationalCharacterSet extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: AutonomousDatabaseNationalCharacterSetProperties;
}

/** AutonomousDbVersion resource definition */
export interface AutonomousDbVersion extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: AutonomousDbVersionProperties;
}

/** DbSystemShape resource definition */
export interface DbSystemShape extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: DbSystemShapeProperties;
}

/** DnsPrivateView resource definition */
export interface DnsPrivateView extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: DnsPrivateViewProperties;
}

/** DnsPrivateZone resource definition */
export interface DnsPrivateZone extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: DnsPrivateZoneProperties;
}

/** GiVersion resource definition */
export interface GiVersion extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: GiVersionProperties;
}

/** SystemVersion resource Definition */
export interface SystemVersion extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: SystemVersionProperties;
}

/** OracleSubscription resource definition */
export interface OracleSubscription extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: OracleSubscriptionProperties;
  /** Details of the resource plan. */
  plan?: Plan;
}

/** AutonomousDatabaseBackup resource definition */
export interface AutonomousDatabaseBackup extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: AutonomousDatabaseBackupProperties;
}

/** DbServer resource model */
export interface DbServer extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: DbServerProperties;
}

/** The DbNode resource belonging to vmCluster */
export interface DbNode extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: DbNodeProperties;
}

/** Virtual IP resource belonging to a vm cluster resource. */
export interface VirtualNetworkAddress extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: VirtualNetworkAddressProperties;
}

/** Defines headers for AutonomousDatabases_createOrUpdate operation. */
export interface AutonomousDatabasesCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabases_update operation. */
export interface AutonomousDatabasesUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabases_delete operation. */
export interface AutonomousDatabasesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabases_failover operation. */
export interface AutonomousDatabasesFailoverHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabases_restore operation. */
export interface AutonomousDatabasesRestoreHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabases_shrink operation. */
export interface AutonomousDatabasesShrinkHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabases_switchover operation. */
export interface AutonomousDatabasesSwitchoverHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudExadataInfrastructures_createOrUpdate operation. */
export interface CloudExadataInfrastructuresCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudExadataInfrastructures_update operation. */
export interface CloudExadataInfrastructuresUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudExadataInfrastructures_delete operation. */
export interface CloudExadataInfrastructuresDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudExadataInfrastructures_addStorageCapacity operation. */
export interface CloudExadataInfrastructuresAddStorageCapacityHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudVmClusters_createOrUpdate operation. */
export interface CloudVmClustersCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudVmClusters_update operation. */
export interface CloudVmClustersUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudVmClusters_delete operation. */
export interface CloudVmClustersDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudVmClusters_addVms operation. */
export interface CloudVmClustersAddVmsHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudVmClusters_removeVms operation. */
export interface CloudVmClustersRemoveVmsHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for OracleSubscriptions_createOrUpdate operation. */
export interface OracleSubscriptionsCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for OracleSubscriptions_update operation. */
export interface OracleSubscriptionsUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for OracleSubscriptions_delete operation. */
export interface OracleSubscriptionsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for OracleSubscriptions_listActivationLinks operation. */
export interface OracleSubscriptionsListActivationLinksHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for OracleSubscriptions_listCloudAccountDetails operation. */
export interface OracleSubscriptionsListCloudAccountDetailsHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for OracleSubscriptions_listSaasSubscriptionDetails operation. */
export interface OracleSubscriptionsListSaasSubscriptionDetailsHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabaseBackups_createOrUpdate operation. */
export interface AutonomousDatabaseBackupsCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabaseBackups_update operation. */
export interface AutonomousDatabaseBackupsUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AutonomousDatabaseBackups_delete operation. */
export interface AutonomousDatabaseBackupsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for DbNodes_action operation. */
export interface DbNodesActionHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for VirtualNetworkAddresses_createOrUpdate operation. */
export interface VirtualNetworkAddressesCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for VirtualNetworkAddresses_delete operation. */
export interface VirtualNetworkAddressesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link DataBaseType} that the service accepts. */
export enum KnownDataBaseType {
  /** Regular DB */
  Regular = "Regular",
  /** Clone DB */
  Clone = "Clone",
}

/**
 * Defines values for DataBaseType. \
 * {@link KnownDataBaseType} can be used interchangeably with DataBaseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Regular**: Regular DB \
 * **Clone**: Clone DB
 */
export type DataBaseType = string;

/** Known values of {@link AutonomousMaintenanceScheduleType} that the service accepts. */
export enum KnownAutonomousMaintenanceScheduleType {
  /** Early maintenance schedule */
  Early = "Early",
  /** Regular maintenance schedule */
  Regular = "Regular",
}

/**
 * Defines values for AutonomousMaintenanceScheduleType. \
 * {@link KnownAutonomousMaintenanceScheduleType} can be used interchangeably with AutonomousMaintenanceScheduleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Early**: Early maintenance schedule \
 * **Regular**: Regular maintenance schedule
 */
export type AutonomousMaintenanceScheduleType = string;

/** Known values of {@link ComputeModel} that the service accepts. */
export enum KnownComputeModel {
  /** ECPU model type */
  Ecpu = "ECPU",
  /** OCPU model type */
  Ocpu = "OCPU",
}

/**
 * Defines values for ComputeModel. \
 * {@link KnownComputeModel} can be used interchangeably with ComputeModel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ECPU**: ECPU model type \
 * **OCPU**: OCPU model type
 */
export type ComputeModel = string;

/** Known values of {@link WorkloadType} that the service accepts. */
export enum KnownWorkloadType {
  /** OLTP - indicates an Autonomous Transaction Processing database */
  Oltp = "OLTP",
  /** DW - indicates an Autonomous Data Warehouse database */
  DW = "DW",
  /** AJD - indicates an Autonomous JSON Database */
  AJD = "AJD",
  /** APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type. */
  Apex = "APEX",
}

/**
 * Defines values for WorkloadType. \
 * {@link KnownWorkloadType} can be used interchangeably with WorkloadType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OLTP**: OLTP - indicates an Autonomous Transaction Processing database \
 * **DW**: DW - indicates an Autonomous Data Warehouse database \
 * **AJD**: AJD - indicates an Autonomous JSON Database \
 * **APEX**: APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
 */
export type WorkloadType = string;

/** Known values of {@link DisasterRecoveryType} that the service accepts. */
export enum KnownDisasterRecoveryType {
  /** ADG type */
  Adg = "Adg",
  /** Backup based type */
  BackupBased = "BackupBased",
}

/**
 * Defines values for DisasterRecoveryType. \
 * {@link KnownDisasterRecoveryType} can be used interchangeably with DisasterRecoveryType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Adg**: ADG type \
 * **BackupBased**: Backup based type
 */
export type DisasterRecoveryType = string;

/** Known values of {@link AutonomousDatabaseLifecycleState} that the service accepts. */
export enum KnownAutonomousDatabaseLifecycleState {
  /** Indicates that resource in Provisioning state */
  Provisioning = "Provisioning",
  /** Indicates that resource in Available state */
  Available = "Available",
  /** Indicates that resource in Stopping state */
  Stopping = "Stopping",
  /** Indicates that resource in Stopped state */
  Stopped = "Stopped",
  /** Indicates that resource in Starting state */
  Starting = "Starting",
  /** Indicates that resource in Terminating state */
  Terminating = "Terminating",
  /** Indicates that resource in Terminated state */
  Terminated = "Terminated",
  /** Indicates that resource in Unavailable state */
  Unavailable = "Unavailable",
  /** Indicates that resource in RestoreInProgress state */
  RestoreInProgress = "RestoreInProgress",
  /** Indicates that resource in RestoreFailed state */
  RestoreFailed = "RestoreFailed",
  /** Indicates that resource in BackupInProgress state */
  BackupInProgress = "BackupInProgress",
  /** Indicates that resource in ScaleInProgress state */
  ScaleInProgress = "ScaleInProgress",
  /** Indicates that resource is available but needs attention */
  AvailableNeedsAttention = "AvailableNeedsAttention",
  /** Indicates that resource in Updating state */
  Updating = "Updating",
  /** Indicates that resource maintenance in progress state */
  MaintenanceInProgress = "MaintenanceInProgress",
  /** Indicates that resource in Restarting state */
  Restarting = "Restarting",
  /** Indicates that resource in Recreating state */
  Recreating = "Recreating",
  /** Indicates that resource role change in progress state */
  RoleChangeInProgress = "RoleChangeInProgress",
  /** Indicates that resource in Upgrading state */
  Upgrading = "Upgrading",
  /** IIndicates that resource in Inaccessible state */
  Inaccessible = "Inaccessible",
  /** Indicates that resource in Standby state */
  Standby = "Standby",
}

/**
 * Defines values for AutonomousDatabaseLifecycleState. \
 * {@link KnownAutonomousDatabaseLifecycleState} can be used interchangeably with AutonomousDatabaseLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Provisioning**: Indicates that resource in Provisioning state \
 * **Available**: Indicates that resource in Available state \
 * **Stopping**: Indicates that resource in Stopping state \
 * **Stopped**: Indicates that resource in Stopped state \
 * **Starting**: Indicates that resource in Starting state \
 * **Terminating**: Indicates that resource in Terminating state \
 * **Terminated**: Indicates that resource in Terminated state \
 * **Unavailable**: Indicates that resource in Unavailable state \
 * **RestoreInProgress**: Indicates that resource in RestoreInProgress state \
 * **RestoreFailed**: Indicates that resource in RestoreFailed state \
 * **BackupInProgress**: Indicates that resource in BackupInProgress state \
 * **ScaleInProgress**: Indicates that resource in ScaleInProgress state \
 * **AvailableNeedsAttention**: Indicates that resource is available but needs attention \
 * **Updating**: Indicates that resource in Updating state \
 * **MaintenanceInProgress**: Indicates that resource maintenance in progress state \
 * **Restarting**: Indicates that resource in Restarting state \
 * **Recreating**: Indicates that resource in Recreating state \
 * **RoleChangeInProgress**: Indicates that resource role change in progress state \
 * **Upgrading**: Indicates that resource in Upgrading state \
 * **Inaccessible**: IIndicates that resource in Inaccessible state \
 * **Standby**: Indicates that resource in Standby state
 */
export type AutonomousDatabaseLifecycleState = string;

/** Known values of {@link LicenseModel} that the service accepts. */
export enum KnownLicenseModel {
  /** License included */
  LicenseIncluded = "LicenseIncluded",
  /** Bring Your Own License */
  BringYourOwnLicense = "BringYourOwnLicense",
}

/**
 * Defines values for LicenseModel. \
 * {@link KnownLicenseModel} can be used interchangeably with LicenseModel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LicenseIncluded**: License included \
 * **BringYourOwnLicense**: Bring Your Own License
 */
export type LicenseModel = string;

/** Known values of {@link AzureResourceProvisioningState} that the service accepts. */
export enum KnownAzureResourceProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Indicates that resource in Provisioning state */
  Provisioning = "Provisioning",
}

/**
 * Defines values for AzureResourceProvisioningState. \
 * {@link KnownAzureResourceProvisioningState} can be used interchangeably with AzureResourceProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Provisioning**: Indicates that resource in Provisioning state
 */
export type AzureResourceProvisioningState = string;

/** Known values of {@link DayOfWeekName} that the service accepts. */
export enum KnownDayOfWeekName {
  /** Monday value */
  Monday = "Monday",
  /** Tuesday value */
  Tuesday = "Tuesday",
  /** Wednesday value */
  Wednesday = "Wednesday",
  /** Thursday value */
  Thursday = "Thursday",
  /** Friday value */
  Friday = "Friday",
  /** Saturday value */
  Saturday = "Saturday",
  /** Sunday value */
  Sunday = "Sunday",
}

/**
 * Defines values for DayOfWeekName. \
 * {@link KnownDayOfWeekName} can be used interchangeably with DayOfWeekName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Monday**: Monday value \
 * **Tuesday**: Tuesday value \
 * **Wednesday**: Wednesday value \
 * **Thursday**: Thursday value \
 * **Friday**: Friday value \
 * **Saturday**: Saturday value \
 * **Sunday**: Sunday value
 */
export type DayOfWeekName = string;

/** Known values of {@link ConsumerGroup} that the service accepts. */
export enum KnownConsumerGroup {
  /** High group */
  High = "High",
  /** Medium group */
  Medium = "Medium",
  /** Low group */
  Low = "Low",
  /** TP group */
  Tp = "Tp",
  /** TPurgent group */
  Tpurgent = "Tpurgent",
}

/**
 * Defines values for ConsumerGroup. \
 * {@link KnownConsumerGroup} can be used interchangeably with ConsumerGroup,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **High**: High group \
 * **Medium**: Medium group \
 * **Low**: Low group \
 * **Tp**: TP group \
 * **Tpurgent**: TPurgent group
 */
export type ConsumerGroup = string;

/** Known values of {@link HostFormatType} that the service accepts. */
export enum KnownHostFormatType {
  /** FQDN format */
  Fqdn = "Fqdn",
  /** IP format */
  Ip = "Ip",
}

/**
 * Defines values for HostFormatType. \
 * {@link KnownHostFormatType} can be used interchangeably with HostFormatType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Fqdn**: FQDN format \
 * **Ip**: IP format
 */
export type HostFormatType = string;

/** Known values of {@link ProtocolType} that the service accepts. */
export enum KnownProtocolType {
  /** TCP protocol */
  TCP = "TCP",
  /** TCPS protocol */
  Tcps = "TCPS",
}

/**
 * Defines values for ProtocolType. \
 * {@link KnownProtocolType} can be used interchangeably with ProtocolType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP**: TCP protocol \
 * **TCPS**: TCPS protocol
 */
export type ProtocolType = string;

/** Known values of {@link SessionModeType} that the service accepts. */
export enum KnownSessionModeType {
  /** Direct session mode */
  Direct = "Direct",
  /** Redirect session mode */
  Redirect = "Redirect",
}

/**
 * Defines values for SessionModeType. \
 * {@link KnownSessionModeType} can be used interchangeably with SessionModeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Direct**: Direct session mode \
 * **Redirect**: Redirect session mode
 */
export type SessionModeType = string;

/** Known values of {@link SyntaxFormatType} that the service accepts. */
export enum KnownSyntaxFormatType {
  /** Long format */
  Long = "Long",
  /** Ezconnect format */
  Ezconnect = "Ezconnect",
  /** Ezconnectplus format */
  Ezconnectplus = "Ezconnectplus",
}

/**
 * Defines values for SyntaxFormatType. \
 * {@link KnownSyntaxFormatType} can be used interchangeably with SyntaxFormatType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Long**: Long format \
 * **Ezconnect**: Ezconnect format \
 * **Ezconnectplus**: Ezconnectplus format
 */
export type SyntaxFormatType = string;

/** Known values of {@link TlsAuthenticationType} that the service accepts. */
export enum KnownTlsAuthenticationType {
  /** Server authentication */
  Server = "Server",
  /** Mutual TLS */
  Mutual = "Mutual",
}

/**
 * Defines values for TlsAuthenticationType. \
 * {@link KnownTlsAuthenticationType} can be used interchangeably with TlsAuthenticationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Server**: Server authentication \
 * **Mutual**: Mutual TLS
 */
export type TlsAuthenticationType = string;

/** Known values of {@link DataSafeStatusType} that the service accepts. */
export enum KnownDataSafeStatusType {
  /** Registering status */
  Registering = "Registering",
  /** Registered status */
  Registered = "Registered",
  /** Deregistering status */
  Deregistering = "Deregistering",
  /** NotRegistered status */
  NotRegistered = "NotRegistered",
  /** Failed status */
  Failed = "Failed",
}

/**
 * Defines values for DataSafeStatusType. \
 * {@link KnownDataSafeStatusType} can be used interchangeably with DataSafeStatusType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Registering**: Registering status \
 * **Registered**: Registered status \
 * **Deregistering**: Deregistering status \
 * **NotRegistered**: NotRegistered status \
 * **Failed**: Failed status
 */
export type DataSafeStatusType = string;

/** Known values of {@link DatabaseEditionType} that the service accepts. */
export enum KnownDatabaseEditionType {
  /** Standard edition */
  StandardEdition = "StandardEdition",
  /** Enterprise edition */
  EnterpriseEdition = "EnterpriseEdition",
}

/**
 * Defines values for DatabaseEditionType. \
 * {@link KnownDatabaseEditionType} can be used interchangeably with DatabaseEditionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **StandardEdition**: Standard edition \
 * **EnterpriseEdition**: Enterprise edition
 */
export type DatabaseEditionType = string;

/** Known values of {@link RepeatCadenceType} that the service accepts. */
export enum KnownRepeatCadenceType {
  /** Repeat one time */
  OneTime = "OneTime",
  /** Repeat weekly */
  Weekly = "Weekly",
  /** Repeat monthly */
  Monthly = "Monthly",
  /** Repeat yearly */
  Yearly = "Yearly",
}

/**
 * Defines values for RepeatCadenceType. \
 * {@link KnownRepeatCadenceType} can be used interchangeably with RepeatCadenceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OneTime**: Repeat one time \
 * **Weekly**: Repeat weekly \
 * **Monthly**: Repeat monthly \
 * **Yearly**: Repeat yearly
 */
export type RepeatCadenceType = string;

/** Known values of {@link OpenModeType} that the service accepts. */
export enum KnownOpenModeType {
  /** ReadOnly mode */
  ReadOnly = "ReadOnly",
  /** ReadWrite mode */
  ReadWrite = "ReadWrite",
}

/**
 * Defines values for OpenModeType. \
 * {@link KnownOpenModeType} can be used interchangeably with OpenModeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ReadOnly**: ReadOnly mode \
 * **ReadWrite**: ReadWrite mode
 */
export type OpenModeType = string;

/** Known values of {@link OperationsInsightsStatusType} that the service accepts. */
export enum KnownOperationsInsightsStatusType {
  /** Enabling status */
  Enabling = "Enabling",
  /** Enabled status */
  Enabled = "Enabled",
  /** Disabling status */
  Disabling = "Disabling",
  /** NotEnabled status */
  NotEnabled = "NotEnabled",
  /** FailedEnabling status */
  FailedEnabling = "FailedEnabling",
  /** FailedDisabling status */
  FailedDisabling = "FailedDisabling",
}

/**
 * Defines values for OperationsInsightsStatusType. \
 * {@link KnownOperationsInsightsStatusType} can be used interchangeably with OperationsInsightsStatusType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabling**: Enabling status \
 * **Enabled**: Enabled status \
 * **Disabling**: Disabling status \
 * **NotEnabled**: NotEnabled status \
 * **FailedEnabling**: FailedEnabling status \
 * **FailedDisabling**: FailedDisabling status
 */
export type OperationsInsightsStatusType = string;

/** Known values of {@link PermissionLevelType} that the service accepts. */
export enum KnownPermissionLevelType {
  /** Restricted permission level */
  Restricted = "Restricted",
  /** Unrestricted permission level */
  Unrestricted = "Unrestricted",
}

/**
 * Defines values for PermissionLevelType. \
 * {@link KnownPermissionLevelType} can be used interchangeably with PermissionLevelType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Restricted**: Restricted permission level \
 * **Unrestricted**: Unrestricted permission level
 */
export type PermissionLevelType = string;

/** Known values of {@link RoleType} that the service accepts. */
export enum KnownRoleType {
  /** Primary role */
  Primary = "Primary",
  /** Standby role */
  Standby = "Standby",
  /** DisabledStandby role */
  DisabledStandby = "DisabledStandby",
  /** BackupCopy role */
  BackupCopy = "BackupCopy",
  /** SnapshotStandby role */
  SnapshotStandby = "SnapshotStandby",
}

/**
 * Defines values for RoleType. \
 * {@link KnownRoleType} can be used interchangeably with RoleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary**: Primary role \
 * **Standby**: Standby role \
 * **DisabledStandby**: DisabledStandby role \
 * **BackupCopy**: BackupCopy role \
 * **SnapshotStandby**: SnapshotStandby role
 */
export type RoleType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Preference} that the service accepts. */
export enum KnownPreference {
  /** No preference */
  NoPreference = "NoPreference",
  /** Custom preference */
  CustomPreference = "CustomPreference",
}

/**
 * Defines values for Preference. \
 * {@link KnownPreference} can be used interchangeably with Preference,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoPreference**: No preference \
 * **CustomPreference**: Custom preference
 */
export type Preference = string;

/** Known values of {@link MonthName} that the service accepts. */
export enum KnownMonthName {
  /** January value */
  January = "January",
  /** February value */
  February = "February",
  /** March value */
  March = "March",
  /** April value */
  April = "April",
  /** May value */
  May = "May",
  /** June value */
  June = "June",
  /** July value */
  July = "July",
  /** August value */
  August = "August",
  /** September value */
  September = "September",
  /** October value */
  October = "October",
  /** November value */
  November = "November",
  /** December value */
  December = "December",
}

/**
 * Defines values for MonthName. \
 * {@link KnownMonthName} can be used interchangeably with MonthName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **January**: January value \
 * **February**: February value \
 * **March**: March value \
 * **April**: April value \
 * **May**: May value \
 * **June**: June value \
 * **July**: July value \
 * **August**: August value \
 * **September**: September value \
 * **October**: October value \
 * **November**: November value \
 * **December**: December value
 */
export type MonthName = string;

/** Known values of {@link PatchingMode} that the service accepts. */
export enum KnownPatchingMode {
  /** Rolling patching */
  Rolling = "Rolling",
  /** Non Rolling patching */
  NonRolling = "NonRolling",
}

/**
 * Defines values for PatchingMode. \
 * {@link KnownPatchingMode} can be used interchangeably with PatchingMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Rolling**: Rolling patching \
 * **NonRolling**: Non Rolling patching
 */
export type PatchingMode = string;

/** Known values of {@link CloudExadataInfrastructureLifecycleState} that the service accepts. */
export enum KnownCloudExadataInfrastructureLifecycleState {
  /** Indicates that resource in Provisioning state */
  Provisioning = "Provisioning",
  /** Indicates that resource in Available state */
  Available = "Available",
  /** Indicates that resource in Updating state */
  Updating = "Updating",
  /** Indicates that resource in Terminating state */
  Terminating = "Terminating",
  /** Indicates that resource in Terminated state */
  Terminated = "Terminated",
  /** Indicates that resource maintenance in progress state */
  MaintenanceInProgress = "MaintenanceInProgress",
  /** Indicates that resource in Failed state */
  Failed = "Failed",
}

/**
 * Defines values for CloudExadataInfrastructureLifecycleState. \
 * {@link KnownCloudExadataInfrastructureLifecycleState} can be used interchangeably with CloudExadataInfrastructureLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Provisioning**: Indicates that resource in Provisioning state \
 * **Available**: Indicates that resource in Available state \
 * **Updating**: Indicates that resource in Updating state \
 * **Terminating**: Indicates that resource in Terminating state \
 * **Terminated**: Indicates that resource in Terminated state \
 * **MaintenanceInProgress**: Indicates that resource maintenance in progress state \
 * **Failed**: Indicates that resource in Failed state
 */
export type CloudExadataInfrastructureLifecycleState = string;

/** Known values of {@link DiskRedundancy} that the service accepts. */
export enum KnownDiskRedundancy {
  /** High redundancy */
  High = "High",
  /** Normal redundancy */
  Normal = "Normal",
}

/**
 * Defines values for DiskRedundancy. \
 * {@link KnownDiskRedundancy} can be used interchangeably with DiskRedundancy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **High**: High redundancy \
 * **Normal**: Normal redundancy
 */
export type DiskRedundancy = string;

/** Known values of {@link CloudVmClusterLifecycleState} that the service accepts. */
export enum KnownCloudVmClusterLifecycleState {
  /** Indicates that resource in Provisioning state */
  Provisioning = "Provisioning",
  /** Indicates that resource in Available state */
  Available = "Available",
  /** Indicates that resource in Updating state */
  Updating = "Updating",
  /** Indicates that resource in Terminating state */
  Terminating = "Terminating",
  /** Indicates that resource in Terminated state */
  Terminated = "Terminated",
  /** Indicates that resource Maintenance in progress state */
  MaintenanceInProgress = "MaintenanceInProgress",
  /** Indicates that resource in Failed state */
  Failed = "Failed",
}

/**
 * Defines values for CloudVmClusterLifecycleState. \
 * {@link KnownCloudVmClusterLifecycleState} can be used interchangeably with CloudVmClusterLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Provisioning**: Indicates that resource in Provisioning state \
 * **Available**: Indicates that resource in Available state \
 * **Updating**: Indicates that resource in Updating state \
 * **Terminating**: Indicates that resource in Terminating state \
 * **Terminated**: Indicates that resource in Terminated state \
 * **MaintenanceInProgress**: Indicates that resource Maintenance in progress state \
 * **Failed**: Indicates that resource in Failed state
 */
export type CloudVmClusterLifecycleState = string;

/** Known values of {@link IormLifecycleState} that the service accepts. */
export enum KnownIormLifecycleState {
  /** Indicates that resource in Provisioning state */
  BootStrapping = "BootStrapping",
  /** Indicates that resource in Enabled state */
  Enabled = "Enabled",
  /** Indicates that resource in Disabled state */
  Disabled = "Disabled",
  /** Indicates that resource in Updating state */
  Updating = "Updating",
  /** Indicates that resource in Failed state */
  Failed = "Failed",
}

/**
 * Defines values for IormLifecycleState. \
 * {@link KnownIormLifecycleState} can be used interchangeably with IormLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BootStrapping**: Indicates that resource in Provisioning state \
 * **Enabled**: Indicates that resource in Enabled state \
 * **Disabled**: Indicates that resource in Disabled state \
 * **Updating**: Indicates that resource in Updating state \
 * **Failed**: Indicates that resource in Failed state
 */
export type IormLifecycleState = string;

/** Known values of {@link Objective} that the service accepts. */
export enum KnownObjective {
  /** Low latency objective */
  LowLatency = "LowLatency",
  /** High throughput objective */
  HighThroughput = "HighThroughput",
  /** Balanced objective */
  Balanced = "Balanced",
  /** Auto objective */
  Auto = "Auto",
  /** Basic objective */
  Basic = "Basic",
}

/**
 * Defines values for Objective. \
 * {@link KnownObjective} can be used interchangeably with Objective,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LowLatency**: Low latency objective \
 * **HighThroughput**: High throughput objective \
 * **Balanced**: Balanced objective \
 * **Auto**: Auto objective \
 * **Basic**: Basic objective
 */
export type Objective = string;

/** Known values of {@link DnsPrivateViewsLifecycleState} that the service accepts. */
export enum KnownDnsPrivateViewsLifecycleState {
  /** DNS Private View is active */
  Active = "Active",
  /** DNS Private View is deleted */
  Deleted = "Deleted",
  /** DNS Private View is deleting */
  Deleting = "Deleting",
  /** DNS Private View is updating */
  Updating = "Updating",
}

/**
 * Defines values for DnsPrivateViewsLifecycleState. \
 * {@link KnownDnsPrivateViewsLifecycleState} can be used interchangeably with DnsPrivateViewsLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active**: DNS Private View is active \
 * **Deleted**: DNS Private View is deleted \
 * **Deleting**: DNS Private View is deleting \
 * **Updating**: DNS Private View is updating
 */
export type DnsPrivateViewsLifecycleState = string;

/** Known values of {@link ResourceProvisioningState} that the service accepts. */
export enum KnownResourceProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
}

/**
 * Defines values for ResourceProvisioningState. \
 * {@link KnownResourceProvisioningState} can be used interchangeably with ResourceProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled.
 */
export type ResourceProvisioningState = string;

/** Known values of {@link DnsPrivateZonesLifecycleState} that the service accepts. */
export enum KnownDnsPrivateZonesLifecycleState {
  /** DNS Private Zones is active */
  Active = "Active",
  /** DNS Private Zones is creating */
  Creating = "Creating",
  /** DNS Private Zones is deleted */
  Deleted = "Deleted",
  /** DNS Private Zones is deleting */
  Deleting = "Deleting",
  /** DNS Private Zones is updating */
  Updating = "Updating",
}

/**
 * Defines values for DnsPrivateZonesLifecycleState. \
 * {@link KnownDnsPrivateZonesLifecycleState} can be used interchangeably with DnsPrivateZonesLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active**: DNS Private Zones is active \
 * **Creating**: DNS Private Zones is creating \
 * **Deleted**: DNS Private Zones is deleted \
 * **Deleting**: DNS Private Zones is deleting \
 * **Updating**: DNS Private Zones is updating
 */
export type DnsPrivateZonesLifecycleState = string;

/** Known values of {@link ZoneType} that the service accepts. */
export enum KnownZoneType {
  /** Primary zone */
  Primary = "Primary",
  /** Secondary zone */
  Secondary = "Secondary",
}

/**
 * Defines values for ZoneType. \
 * {@link KnownZoneType} can be used interchangeably with ZoneType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary**: Primary zone \
 * **Secondary**: Secondary zone
 */
export type ZoneType = string;

/** Known values of {@link OracleSubscriptionProvisioningState} that the service accepts. */
export enum KnownOracleSubscriptionProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
}

/**
 * Defines values for OracleSubscriptionProvisioningState. \
 * {@link KnownOracleSubscriptionProvisioningState} can be used interchangeably with OracleSubscriptionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled.
 */
export type OracleSubscriptionProvisioningState = string;

/** Known values of {@link CloudAccountProvisioningState} that the service accepts. */
export enum KnownCloudAccountProvisioningState {
  /** Pending - Initial state when Oracle cloud account is not configured */
  Pending = "Pending",
  /** Provisioning - State when Oracle cloud account is being provisioned */
  Provisioning = "Provisioning",
  /** Available - State when Oracle cloud account cloud linking is complete and it is available */
  Available = "Available",
}

/**
 * Defines values for CloudAccountProvisioningState. \
 * {@link KnownCloudAccountProvisioningState} can be used interchangeably with CloudAccountProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending**: Pending - Initial state when Oracle cloud account is not configured \
 * **Provisioning**: Provisioning - State when Oracle cloud account is being provisioned \
 * **Available**: Available - State when Oracle cloud account cloud linking is complete and it is available
 */
export type CloudAccountProvisioningState = string;

/** Known values of {@link Intent} that the service accepts. */
export enum KnownIntent {
  /** Retain intent */
  Retain = "Retain",
  /** Reset intent */
  Reset = "Reset",
}

/**
 * Defines values for Intent. \
 * {@link KnownIntent} can be used interchangeably with Intent,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Retain**: Retain intent \
 * **Reset**: Reset intent
 */
export type Intent = string;

/** Known values of {@link AutonomousDatabaseBackupLifecycleState} that the service accepts. */
export enum KnownAutonomousDatabaseBackupLifecycleState {
  /** AutonomousDatabase backup is creating */
  Creating = "Creating",
  /** AutonomousDatabase backup is active */
  Active = "Active",
  /** AutonomousDatabase backup is deleting */
  Deleting = "Deleting",
  /** AutonomousDatabase backup is failed */
  Failed = "Failed",
  /** AutonomousDatabase backup is updating */
  Updating = "Updating",
}

/**
 * Defines values for AutonomousDatabaseBackupLifecycleState. \
 * {@link KnownAutonomousDatabaseBackupLifecycleState} can be used interchangeably with AutonomousDatabaseBackupLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating**: AutonomousDatabase backup is creating \
 * **Active**: AutonomousDatabase backup is active \
 * **Deleting**: AutonomousDatabase backup is deleting \
 * **Failed**: AutonomousDatabase backup is failed \
 * **Updating**: AutonomousDatabase backup is updating
 */
export type AutonomousDatabaseBackupLifecycleState = string;

/** Known values of {@link AutonomousDatabaseBackupType} that the service accepts. */
export enum KnownAutonomousDatabaseBackupType {
  /** Incremental backup */
  Incremental = "Incremental",
  /** Full backup */
  Full = "Full",
  /** LongTerm backup */
  LongTerm = "LongTerm",
}

/**
 * Defines values for AutonomousDatabaseBackupType. \
 * {@link KnownAutonomousDatabaseBackupType} can be used interchangeably with AutonomousDatabaseBackupType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Incremental**: Incremental backup \
 * **Full**: Full backup \
 * **LongTerm**: LongTerm backup
 */
export type AutonomousDatabaseBackupType = string;

/** Known values of {@link GenerateType} that the service accepts. */
export enum KnownGenerateType {
  /** Generate single */
  Single = "Single",
  /** Generate all */
  All = "All",
}

/**
 * Defines values for GenerateType. \
 * {@link KnownGenerateType} can be used interchangeably with GenerateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Single**: Generate single \
 * **All**: Generate all
 */
export type GenerateType = string;

/** Known values of {@link DbServerPatchingStatus} that the service accepts. */
export enum KnownDbServerPatchingStatus {
  /** Patching scheduled */
  Scheduled = "Scheduled",
  /** Patching in progress */
  MaintenanceInProgress = "MaintenanceInProgress",
  /** Patching failed */
  Failed = "Failed",
  /** Patching completed */
  Complete = "Complete",
}

/**
 * Defines values for DbServerPatchingStatus. \
 * {@link KnownDbServerPatchingStatus} can be used interchangeably with DbServerPatchingStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Scheduled**: Patching scheduled \
 * **MaintenanceInProgress**: Patching in progress \
 * **Failed**: Patching failed \
 * **Complete**: Patching completed
 */
export type DbServerPatchingStatus = string;

/** Known values of {@link DbServerProvisioningState} that the service accepts. */
export enum KnownDbServerProvisioningState {
  /** Indicates that resource in Creating state */
  Creating = "Creating",
  /** Indicates that resource in Available state */
  Available = "Available",
  /** Indicates that resource in Unavailable state */
  Unavailable = "Unavailable",
  /** Indicates that resource in Deleting state */
  Deleting = "Deleting",
  /** Indicates that resource in Deleted state */
  Deleted = "Deleted",
  /** Indicates that resource maintenance in progress state */
  MaintenanceInProgress = "MaintenanceInProgress",
}

/**
 * Defines values for DbServerProvisioningState. \
 * {@link KnownDbServerProvisioningState} can be used interchangeably with DbServerProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating**: Indicates that resource in Creating state \
 * **Available**: Indicates that resource in Available state \
 * **Unavailable**: Indicates that resource in Unavailable state \
 * **Deleting**: Indicates that resource in Deleting state \
 * **Deleted**: Indicates that resource in Deleted state \
 * **MaintenanceInProgress**: Indicates that resource maintenance in progress state
 */
export type DbServerProvisioningState = string;

/** Known values of {@link DbNodeProvisioningState} that the service accepts. */
export enum KnownDbNodeProvisioningState {
  /** Indicates that resource in Provisioning state */
  Provisioning = "Provisioning",
  /** Indicates that resource in Available state */
  Available = "Available",
  /** Indicates that resource in Updating state */
  Updating = "Updating",
  /** Indicates that resource in Stopping state */
  Stopping = "Stopping",
  /** Indicates that resource in Stopped state */
  Stopped = "Stopped",
  /** Indicates that resource in Starting state */
  Starting = "Starting",
  /** Indicates that resource in Terminating state */
  Terminating = "Terminating",
  /** Indicates that resource in Terminated state */
  Terminated = "Terminated",
  /** Indicates that resource in Failed state */
  Failed = "Failed",
}

/**
 * Defines values for DbNodeProvisioningState. \
 * {@link KnownDbNodeProvisioningState} can be used interchangeably with DbNodeProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Provisioning**: Indicates that resource in Provisioning state \
 * **Available**: Indicates that resource in Available state \
 * **Updating**: Indicates that resource in Updating state \
 * **Stopping**: Indicates that resource in Stopping state \
 * **Stopped**: Indicates that resource in Stopped state \
 * **Starting**: Indicates that resource in Starting state \
 * **Terminating**: Indicates that resource in Terminating state \
 * **Terminated**: Indicates that resource in Terminated state \
 * **Failed**: Indicates that resource in Failed state
 */
export type DbNodeProvisioningState = string;

/** Known values of {@link DbNodeMaintenanceType} that the service accepts. */
export enum KnownDbNodeMaintenanceType {
  /** VMDB reboot migration maintenance type */
  VmdbRebootMigration = "VmdbRebootMigration",
}

/**
 * Defines values for DbNodeMaintenanceType. \
 * {@link KnownDbNodeMaintenanceType} can be used interchangeably with DbNodeMaintenanceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VmdbRebootMigration**: VMDB reboot migration maintenance type
 */
export type DbNodeMaintenanceType = string;

/** Known values of {@link DbNodeActionEnum} that the service accepts. */
export enum KnownDbNodeActionEnum {
  /** Start DbNode */
  Start = "Start",
  /** Stop DbNode */
  Stop = "Stop",
  /** Soft reset DbNode */
  SoftReset = "SoftReset",
  /** Reset DbNode */
  Reset = "Reset",
}

/**
 * Defines values for DbNodeActionEnum. \
 * {@link KnownDbNodeActionEnum} can be used interchangeably with DbNodeActionEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Start**: Start DbNode \
 * **Stop**: Stop DbNode \
 * **SoftReset**: Soft reset DbNode \
 * **Reset**: Reset DbNode
 */
export type DbNodeActionEnum = string;

/** Known values of {@link VirtualNetworkAddressLifecycleState} that the service accepts. */
export enum KnownVirtualNetworkAddressLifecycleState {
  /** Indicates that resource in Provisioning state */
  Provisioning = "Provisioning",
  /** Indicates that resource in Available state */
  Available = "Available",
  /** Indicates that resource in Terminating state */
  Terminating = "Terminating",
  /** Indicates that resource in Terminated state */
  Terminated = "Terminated",
  /** Indicates that resource in Failed state */
  Failed = "Failed",
}

/**
 * Defines values for VirtualNetworkAddressLifecycleState. \
 * {@link KnownVirtualNetworkAddressLifecycleState} can be used interchangeably with VirtualNetworkAddressLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Provisioning**: Indicates that resource in Provisioning state \
 * **Available**: Indicates that resource in Available state \
 * **Terminating**: Indicates that resource in Terminating state \
 * **Terminated**: Indicates that resource in Terminated state \
 * **Failed**: Indicates that resource in Failed state
 */
export type VirtualNetworkAddressLifecycleState = string;

/** Known values of {@link SourceType} that the service accepts. */
export enum KnownSourceType {
  /** None source */
  None = "None",
  /** Database source */
  Database = "Database",
  /** Backup from ID source */
  BackupFromId = "BackupFromId",
  /** Backup from timestamp source */
  BackupFromTimestamp = "BackupFromTimestamp",
  /** Clone to refreshable source */
  CloneToRefreshable = "CloneToRefreshable",
  /** Cross region dataguard source */
  CrossRegionDataguard = "CrossRegionDataguard",
  /** cross region disaster recovery source */
  CrossRegionDisasterRecovery = "CrossRegionDisasterRecovery",
}

/**
 * Defines values for SourceType. \
 * {@link KnownSourceType} can be used interchangeably with SourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: None source \
 * **Database**: Database source \
 * **BackupFromId**: Backup from ID source \
 * **BackupFromTimestamp**: Backup from timestamp source \
 * **CloneToRefreshable**: Clone to refreshable source \
 * **CrossRegionDataguard**: Cross region dataguard source \
 * **CrossRegionDisasterRecovery**: cross region disaster recovery source
 */
export type SourceType = string;

/** Known values of {@link CloneType} that the service accepts. */
export enum KnownCloneType {
  /** Full clone */
  Full = "Full",
  /** Metadata only */
  Metadata = "Metadata",
}

/**
 * Defines values for CloneType. \
 * {@link KnownCloneType} can be used interchangeably with CloneType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Full**: Full clone \
 * **Metadata**: Metadata only
 */
export type CloneType = string;

/** Known values of {@link RefreshableModelType} that the service accepts. */
export enum KnownRefreshableModelType {
  /** Automatic refreshable model type */
  Automatic = "Automatic",
  /** Manual refreshable model type */
  Manual = "Manual",
}

/**
 * Defines values for RefreshableModelType. \
 * {@link KnownRefreshableModelType} can be used interchangeably with RefreshableModelType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Automatic**: Automatic refreshable model type \
 * **Manual**: Manual refreshable model type
 */
export type RefreshableModelType = string;

/** Known values of {@link RefreshableStatusType} that the service accepts. */
export enum KnownRefreshableStatusType {
  /** Refreshing status */
  Refreshing = "Refreshing",
  /** NotRefreshing status */
  NotRefreshing = "NotRefreshing",
}

/**
 * Defines values for RefreshableStatusType. \
 * {@link KnownRefreshableStatusType} can be used interchangeably with RefreshableStatusType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Refreshing**: Refreshing status \
 * **NotRefreshing**: NotRefreshing status
 */
export type RefreshableStatusType = string;

/** Known values of {@link ValidationStatus} that the service accepts. */
export enum KnownValidationStatus {
  /** Validation succeeded */
  Succeeded = "Succeeded",
  /** Validation failed */
  Failed = "Failed",
}

/**
 * Defines values for ValidationStatus. \
 * {@link KnownValidationStatus} can be used interchangeably with ValidationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Validation succeeded \
 * **Failed**: Validation failed
 */
export type ValidationStatus = string;

/** Known values of {@link UpdateAction} that the service accepts. */
export enum KnownUpdateAction {
  /** Rolling apply action */
  RollingApply = "RollingApply",
  /** Non rolling apply action */
  NonRollingApply = "NonRollingApply",
  /** Pre-check action */
  PreCheck = "PreCheck",
  /** Rollback action */
  RollBack = "RollBack",
}

/**
 * Defines values for UpdateAction. \
 * {@link KnownUpdateAction} can be used interchangeably with UpdateAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RollingApply**: Rolling apply action \
 * **NonRollingApply**: Non rolling apply action \
 * **PreCheck**: Pre-check action \
 * **RollBack**: Rollback action
 */
export type UpdateAction = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface AutonomousDatabasesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type AutonomousDatabasesListBySubscriptionResponse =
  AutonomousDatabaseListResult;

/** Optional parameters. */
export interface AutonomousDatabasesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AutonomousDatabasesListByResourceGroupResponse =
  AutonomousDatabaseListResult;

/** Optional parameters. */
export interface AutonomousDatabasesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AutonomousDatabasesGetResponse = AutonomousDatabase;

/** Optional parameters. */
export interface AutonomousDatabasesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AutonomousDatabasesCreateOrUpdateResponse = AutonomousDatabase;

/** Optional parameters. */
export interface AutonomousDatabasesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AutonomousDatabasesUpdateResponse = AutonomousDatabase;

/** Optional parameters. */
export interface AutonomousDatabasesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AutonomousDatabasesDeleteResponse =
  AutonomousDatabasesDeleteHeaders;

/** Optional parameters. */
export interface AutonomousDatabasesFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the failover operation. */
export type AutonomousDatabasesFailoverResponse = AutonomousDatabase;

/** Optional parameters. */
export interface AutonomousDatabasesGenerateWalletOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the generateWallet operation. */
export type AutonomousDatabasesGenerateWalletResponse =
  AutonomousDatabaseWalletFile;

/** Optional parameters. */
export interface AutonomousDatabasesRestoreOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the restore operation. */
export type AutonomousDatabasesRestoreResponse = AutonomousDatabase;

/** Optional parameters. */
export interface AutonomousDatabasesShrinkOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the shrink operation. */
export type AutonomousDatabasesShrinkResponse = AutonomousDatabase;

/** Optional parameters. */
export interface AutonomousDatabasesSwitchoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the switchover operation. */
export type AutonomousDatabasesSwitchoverResponse = AutonomousDatabase;

/** Optional parameters. */
export interface AutonomousDatabasesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type AutonomousDatabasesListBySubscriptionNextResponse =
  AutonomousDatabaseListResult;

/** Optional parameters. */
export interface AutonomousDatabasesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AutonomousDatabasesListByResourceGroupNextResponse =
  AutonomousDatabaseListResult;

/** Optional parameters. */
export interface CloudExadataInfrastructuresListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type CloudExadataInfrastructuresListBySubscriptionResponse =
  CloudExadataInfrastructureListResult;

/** Optional parameters. */
export interface CloudExadataInfrastructuresListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type CloudExadataInfrastructuresListByResourceGroupResponse =
  CloudExadataInfrastructureListResult;

/** Optional parameters. */
export interface CloudExadataInfrastructuresGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CloudExadataInfrastructuresGetResponse = CloudExadataInfrastructure;

/** Optional parameters. */
export interface CloudExadataInfrastructuresCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CloudExadataInfrastructuresCreateOrUpdateResponse =
  CloudExadataInfrastructure;

/** Optional parameters. */
export interface CloudExadataInfrastructuresUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type CloudExadataInfrastructuresUpdateResponse =
  CloudExadataInfrastructure;

/** Optional parameters. */
export interface CloudExadataInfrastructuresDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type CloudExadataInfrastructuresDeleteResponse =
  CloudExadataInfrastructuresDeleteHeaders;

/** Optional parameters. */
export interface CloudExadataInfrastructuresAddStorageCapacityOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the addStorageCapacity operation. */
export type CloudExadataInfrastructuresAddStorageCapacityResponse =
  CloudExadataInfrastructure;

/** Optional parameters. */
export interface CloudExadataInfrastructuresListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type CloudExadataInfrastructuresListBySubscriptionNextResponse =
  CloudExadataInfrastructureListResult;

/** Optional parameters. */
export interface CloudExadataInfrastructuresListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type CloudExadataInfrastructuresListByResourceGroupNextResponse =
  CloudExadataInfrastructureListResult;

/** Optional parameters. */
export interface CloudVmClustersListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type CloudVmClustersListBySubscriptionResponse =
  CloudVmClusterListResult;

/** Optional parameters. */
export interface CloudVmClustersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type CloudVmClustersListByResourceGroupResponse =
  CloudVmClusterListResult;

/** Optional parameters. */
export interface CloudVmClustersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CloudVmClustersGetResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CloudVmClustersCreateOrUpdateResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type CloudVmClustersUpdateResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type CloudVmClustersDeleteResponse = CloudVmClustersDeleteHeaders;

/** Optional parameters. */
export interface CloudVmClustersAddVmsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the addVms operation. */
export type CloudVmClustersAddVmsResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersListPrivateIpAddressesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPrivateIpAddresses operation. */
export type CloudVmClustersListPrivateIpAddressesResponse =
  PrivateIpAddressProperties[];

/** Optional parameters. */
export interface CloudVmClustersRemoveVmsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the removeVms operation. */
export type CloudVmClustersRemoveVmsResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type CloudVmClustersListBySubscriptionNextResponse =
  CloudVmClusterListResult;

/** Optional parameters. */
export interface CloudVmClustersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type CloudVmClustersListByResourceGroupNextResponse =
  CloudVmClusterListResult;

/** Optional parameters. */
export interface AutonomousDatabaseCharacterSetsListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type AutonomousDatabaseCharacterSetsListByLocationResponse =
  AutonomousDatabaseCharacterSetListResult;

/** Optional parameters. */
export interface AutonomousDatabaseCharacterSetsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AutonomousDatabaseCharacterSetsGetResponse =
  AutonomousDatabaseCharacterSet;

/** Optional parameters. */
export interface AutonomousDatabaseCharacterSetsListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type AutonomousDatabaseCharacterSetsListByLocationNextResponse =
  AutonomousDatabaseCharacterSetListResult;

/** Optional parameters. */
export interface AutonomousDatabaseNationalCharacterSetsListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type AutonomousDatabaseNationalCharacterSetsListByLocationResponse =
  AutonomousDatabaseNationalCharacterSetListResult;

/** Optional parameters. */
export interface AutonomousDatabaseNationalCharacterSetsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AutonomousDatabaseNationalCharacterSetsGetResponse =
  AutonomousDatabaseNationalCharacterSet;

/** Optional parameters. */
export interface AutonomousDatabaseNationalCharacterSetsListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type AutonomousDatabaseNationalCharacterSetsListByLocationNextResponse =
  AutonomousDatabaseNationalCharacterSetListResult;

/** Optional parameters. */
export interface AutonomousDatabaseVersionsListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type AutonomousDatabaseVersionsListByLocationResponse =
  AutonomousDbVersionListResult;

/** Optional parameters. */
export interface AutonomousDatabaseVersionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AutonomousDatabaseVersionsGetResponse = AutonomousDbVersion;

/** Optional parameters. */
export interface AutonomousDatabaseVersionsListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type AutonomousDatabaseVersionsListByLocationNextResponse =
  AutonomousDbVersionListResult;

/** Optional parameters. */
export interface DbSystemShapesListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type DbSystemShapesListByLocationResponse = DbSystemShapeListResult;

/** Optional parameters. */
export interface DbSystemShapesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DbSystemShapesGetResponse = DbSystemShape;

/** Optional parameters. */
export interface DbSystemShapesListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type DbSystemShapesListByLocationNextResponse = DbSystemShapeListResult;

/** Optional parameters. */
export interface DnsPrivateViewsListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type DnsPrivateViewsListByLocationResponse = DnsPrivateViewListResult;

/** Optional parameters. */
export interface DnsPrivateViewsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DnsPrivateViewsGetResponse = DnsPrivateView;

/** Optional parameters. */
export interface DnsPrivateViewsListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type DnsPrivateViewsListByLocationNextResponse =
  DnsPrivateViewListResult;

/** Optional parameters. */
export interface DnsPrivateZonesListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type DnsPrivateZonesListByLocationResponse = DnsPrivateZoneListResult;

/** Optional parameters. */
export interface DnsPrivateZonesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DnsPrivateZonesGetResponse = DnsPrivateZone;

/** Optional parameters. */
export interface DnsPrivateZonesListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type DnsPrivateZonesListByLocationNextResponse =
  DnsPrivateZoneListResult;

/** Optional parameters. */
export interface GiVersionsListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type GiVersionsListByLocationResponse = GiVersionListResult;

/** Optional parameters. */
export interface GiVersionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GiVersionsGetResponse = GiVersion;

/** Optional parameters. */
export interface GiVersionsListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type GiVersionsListByLocationNextResponse = GiVersionListResult;

/** Optional parameters. */
export interface SystemVersionsListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type SystemVersionsListByLocationResponse = SystemVersionListResult;

/** Optional parameters. */
export interface SystemVersionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SystemVersionsGetResponse = SystemVersion;

/** Optional parameters. */
export interface SystemVersionsListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type SystemVersionsListByLocationNextResponse = SystemVersionListResult;

/** Optional parameters. */
export interface OracleSubscriptionsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type OracleSubscriptionsListBySubscriptionResponse =
  OracleSubscriptionListResult;

/** Optional parameters. */
export interface OracleSubscriptionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OracleSubscriptionsGetResponse = OracleSubscription;

/** Optional parameters. */
export interface OracleSubscriptionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type OracleSubscriptionsCreateOrUpdateResponse = OracleSubscription;

/** Optional parameters. */
export interface OracleSubscriptionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type OracleSubscriptionsUpdateResponse = OracleSubscription;

/** Optional parameters. */
export interface OracleSubscriptionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type OracleSubscriptionsDeleteResponse =
  OracleSubscriptionsDeleteHeaders;

/** Optional parameters. */
export interface OracleSubscriptionsListActivationLinksOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listActivationLinks operation. */
export type OracleSubscriptionsListActivationLinksResponse = ActivationLinks;

/** Optional parameters. */
export interface OracleSubscriptionsListCloudAccountDetailsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listCloudAccountDetails operation. */
export type OracleSubscriptionsListCloudAccountDetailsResponse =
  CloudAccountDetails;

/** Optional parameters. */
export interface OracleSubscriptionsListSaasSubscriptionDetailsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listSaasSubscriptionDetails operation. */
export type OracleSubscriptionsListSaasSubscriptionDetailsResponse =
  SaasSubscriptionDetails;

/** Optional parameters. */
export interface OracleSubscriptionsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type OracleSubscriptionsListBySubscriptionNextResponse =
  OracleSubscriptionListResult;

/** Optional parameters. */
export interface AutonomousDatabaseBackupsListByAutonomousDatabaseOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByAutonomousDatabase operation. */
export type AutonomousDatabaseBackupsListByAutonomousDatabaseResponse =
  AutonomousDatabaseBackupListResult;

/** Optional parameters. */
export interface AutonomousDatabaseBackupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AutonomousDatabaseBackupsGetResponse = AutonomousDatabaseBackup;

/** Optional parameters. */
export interface AutonomousDatabaseBackupsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AutonomousDatabaseBackupsCreateOrUpdateResponse =
  AutonomousDatabaseBackup;

/** Optional parameters. */
export interface AutonomousDatabaseBackupsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AutonomousDatabaseBackupsUpdateResponse = AutonomousDatabaseBackup;

/** Optional parameters. */
export interface AutonomousDatabaseBackupsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AutonomousDatabaseBackupsDeleteResponse =
  AutonomousDatabaseBackupsDeleteHeaders;

/** Optional parameters. */
export interface AutonomousDatabaseBackupsListByAutonomousDatabaseNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByAutonomousDatabaseNext operation. */
export type AutonomousDatabaseBackupsListByAutonomousDatabaseNextResponse =
  AutonomousDatabaseBackupListResult;

/** Optional parameters. */
export interface DbServersListByCloudExadataInfrastructureOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudExadataInfrastructure operation. */
export type DbServersListByCloudExadataInfrastructureResponse =
  DbServerListResult;

/** Optional parameters. */
export interface DbServersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DbServersGetResponse = DbServer;

/** Optional parameters. */
export interface DbServersListByCloudExadataInfrastructureNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudExadataInfrastructureNext operation. */
export type DbServersListByCloudExadataInfrastructureNextResponse =
  DbServerListResult;

/** Optional parameters. */
export interface DbNodesListByCloudVmClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudVmCluster operation. */
export type DbNodesListByCloudVmClusterResponse = DbNodeListResult;

/** Optional parameters. */
export interface DbNodesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DbNodesGetResponse = DbNode;

/** Optional parameters. */
export interface DbNodesActionOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the action operation. */
export type DbNodesActionResponse = DbNode;

/** Optional parameters. */
export interface DbNodesListByCloudVmClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudVmClusterNext operation. */
export type DbNodesListByCloudVmClusterNextResponse = DbNodeListResult;

/** Optional parameters. */
export interface VirtualNetworkAddressesListByCloudVmClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudVmCluster operation. */
export type VirtualNetworkAddressesListByCloudVmClusterResponse =
  VirtualNetworkAddressListResult;

/** Optional parameters. */
export interface VirtualNetworkAddressesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VirtualNetworkAddressesGetResponse = VirtualNetworkAddress;

/** Optional parameters. */
export interface VirtualNetworkAddressesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualNetworkAddressesCreateOrUpdateResponse =
  VirtualNetworkAddress;

/** Optional parameters. */
export interface VirtualNetworkAddressesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type VirtualNetworkAddressesDeleteResponse =
  VirtualNetworkAddressesDeleteHeaders;

/** Optional parameters. */
export interface VirtualNetworkAddressesListByCloudVmClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudVmClusterNext operation. */
export type VirtualNetworkAddressesListByCloudVmClusterNextResponse =
  VirtualNetworkAddressListResult;

/** Optional parameters. */
export interface OracleDatabaseManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
