/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AutonomousDatabaseBackup,
  AutonomousDatabaseBackupsListByAutonomousDatabaseOptionalParams,
  AutonomousDatabaseBackupsGetOptionalParams,
  AutonomousDatabaseBackupsGetResponse,
  AutonomousDatabaseBackupsCreateOrUpdateOptionalParams,
  AutonomousDatabaseBackupsCreateOrUpdateResponse,
  AutonomousDatabaseBackupUpdate,
  AutonomousDatabaseBackupsUpdateOptionalParams,
  AutonomousDatabaseBackupsUpdateResponse,
  AutonomousDatabaseBackupsDeleteOptionalParams,
  AutonomousDatabaseBackupsDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AutonomousDatabaseBackups. */
export interface AutonomousDatabaseBackups {
  /**
   * List AutonomousDatabaseBackup resources by AutonomousDatabase
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param autonomousdatabasename The database name.
   * @param options The options parameters.
   */
  listByAutonomousDatabase(
    resourceGroupName: string,
    autonomousdatabasename: string,
    options?: AutonomousDatabaseBackupsListByAutonomousDatabaseOptionalParams,
  ): PagedAsyncIterableIterator<AutonomousDatabaseBackup>;
  /**
   * Get a AutonomousDatabaseBackup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param autonomousdatabasename The database name.
   * @param adbbackupid AutonomousDatabaseBackup id
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    autonomousdatabasename: string,
    adbbackupid: string,
    options?: AutonomousDatabaseBackupsGetOptionalParams,
  ): Promise<AutonomousDatabaseBackupsGetResponse>;
  /**
   * Create a AutonomousDatabaseBackup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param autonomousdatabasename The database name.
   * @param adbbackupid AutonomousDatabaseBackup id
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    autonomousdatabasename: string,
    adbbackupid: string,
    resource: AutonomousDatabaseBackup,
    options?: AutonomousDatabaseBackupsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AutonomousDatabaseBackupsCreateOrUpdateResponse>,
      AutonomousDatabaseBackupsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a AutonomousDatabaseBackup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param autonomousdatabasename The database name.
   * @param adbbackupid AutonomousDatabaseBackup id
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    autonomousdatabasename: string,
    adbbackupid: string,
    resource: AutonomousDatabaseBackup,
    options?: AutonomousDatabaseBackupsCreateOrUpdateOptionalParams,
  ): Promise<AutonomousDatabaseBackupsCreateOrUpdateResponse>;
  /**
   * Update a AutonomousDatabaseBackup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param autonomousdatabasename The database name.
   * @param adbbackupid AutonomousDatabaseBackup id
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    autonomousdatabasename: string,
    adbbackupid: string,
    properties: AutonomousDatabaseBackupUpdate,
    options?: AutonomousDatabaseBackupsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AutonomousDatabaseBackupsUpdateResponse>,
      AutonomousDatabaseBackupsUpdateResponse
    >
  >;
  /**
   * Update a AutonomousDatabaseBackup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param autonomousdatabasename The database name.
   * @param adbbackupid AutonomousDatabaseBackup id
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    autonomousdatabasename: string,
    adbbackupid: string,
    properties: AutonomousDatabaseBackupUpdate,
    options?: AutonomousDatabaseBackupsUpdateOptionalParams,
  ): Promise<AutonomousDatabaseBackupsUpdateResponse>;
  /**
   * Delete a AutonomousDatabaseBackup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param autonomousdatabasename The database name.
   * @param adbbackupid AutonomousDatabaseBackup id
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    autonomousdatabasename: string,
    adbbackupid: string,
    options?: AutonomousDatabaseBackupsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AutonomousDatabaseBackupsDeleteResponse>,
      AutonomousDatabaseBackupsDeleteResponse
    >
  >;
  /**
   * Delete a AutonomousDatabaseBackup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param autonomousdatabasename The database name.
   * @param adbbackupid AutonomousDatabaseBackup id
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    autonomousdatabasename: string,
    adbbackupid: string,
    options?: AutonomousDatabaseBackupsDeleteOptionalParams,
  ): Promise<AutonomousDatabaseBackupsDeleteResponse>;
}
