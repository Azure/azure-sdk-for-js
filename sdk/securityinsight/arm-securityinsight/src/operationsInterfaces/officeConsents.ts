/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  OfficeConsent,
  OfficeConsentsListOptionalParams,
  OfficeConsentsGetOptionalParams,
  OfficeConsentsGetResponse,
  OfficeConsentsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a OfficeConsents. */
export interface OfficeConsents {
  /**
   * Gets all office365 consents.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: OfficeConsentsListOptionalParams
  ): PagedAsyncIterableIterator<OfficeConsent>;
  /**
   * Gets an office365 consent.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param consentId consent ID
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    consentId: string,
    options?: OfficeConsentsGetOptionalParams
  ): Promise<OfficeConsentsGetResponse>;
  /**
   * Delete the office365 consent.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param consentId consent ID
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    consentId: string,
    options?: OfficeConsentsDeleteOptionalParams
  ): Promise<void>;
}
