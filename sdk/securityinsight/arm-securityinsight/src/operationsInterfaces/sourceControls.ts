/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SourceControl,
  SourceControlsListOptionalParams,
  SourceControlsGetOptionalParams,
  SourceControlsGetResponse,
  SourceControlsDeleteOptionalParams,
  SourceControlsCreateOptionalParams,
  SourceControlsCreateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SourceControls. */
export interface SourceControls {
  /**
   * Gets all source controls, without source control items.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: SourceControlsListOptionalParams
  ): PagedAsyncIterableIterator<SourceControl>;
  /**
   * Gets a source control byt its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sourceControlId Source control Id
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    sourceControlId: string,
    options?: SourceControlsGetOptionalParams
  ): Promise<SourceControlsGetResponse>;
  /**
   * Delete a source control.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sourceControlId Source control Id
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    sourceControlId: string,
    options?: SourceControlsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Creates a source control.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param sourceControlId Source control Id
   * @param sourceControl The SourceControl
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    workspaceName: string,
    sourceControlId: string,
    sourceControl: SourceControl,
    options?: SourceControlsCreateOptionalParams
  ): Promise<SourceControlsCreateResponse>;
}
