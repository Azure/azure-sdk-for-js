/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  IncidentTask,
  IncidentTasksListOptionalParams,
  IncidentTasksGetOptionalParams,
  IncidentTasksGetResponse,
  IncidentTasksCreateOrUpdateOptionalParams,
  IncidentTasksCreateOrUpdateResponse,
  IncidentTasksDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a IncidentTasks. */
export interface IncidentTasks {
  /**
   * Gets all incident tasks.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param incidentId Incident ID
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    incidentId: string,
    options?: IncidentTasksListOptionalParams
  ): PagedAsyncIterableIterator<IncidentTask>;
  /**
   * Gets an incident task.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param incidentId Incident ID
   * @param incidentTaskId Incident task ID
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    incidentId: string,
    incidentTaskId: string,
    options?: IncidentTasksGetOptionalParams
  ): Promise<IncidentTasksGetResponse>;
  /**
   * Creates or updates the incident task.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param incidentId Incident ID
   * @param incidentTaskId Incident task ID
   * @param incidentTask The incident task
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    incidentId: string,
    incidentTaskId: string,
    incidentTask: IncidentTask,
    options?: IncidentTasksCreateOrUpdateOptionalParams
  ): Promise<IncidentTasksCreateOrUpdateResponse>;
  /**
   * Delete the incident task.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param incidentId Incident ID
   * @param incidentTaskId Incident task ID
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    incidentId: string,
    incidentTaskId: string,
    options?: IncidentTasksDeleteOptionalParams
  ): Promise<void>;
}
