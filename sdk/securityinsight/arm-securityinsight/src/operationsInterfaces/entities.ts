/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  EntityUnion,
  EntitiesListOptionalParams,
  EntitiesGetOptionalParams,
  EntitiesGetResponse,
  EntityExpandParameters,
  EntitiesExpandOptionalParams,
  EntitiesExpandResponse,
  EntityItemQueryKind,
  EntitiesQueriesOptionalParams,
  EntitiesQueriesResponse,
  EntityGetInsightsParameters,
  EntitiesGetInsightsOptionalParams,
  EntitiesGetInsightsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Entities. */
export interface Entities {
  /**
   * Gets all entities.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: EntitiesListOptionalParams
  ): PagedAsyncIterableIterator<EntityUnion>;
  /**
   * Gets an entity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param entityId entity ID
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    entityId: string,
    options?: EntitiesGetOptionalParams
  ): Promise<EntitiesGetResponse>;
  /**
   * Expands an entity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param entityId entity ID
   * @param parameters The parameters required to execute an expand operation on the given entity.
   * @param options The options parameters.
   */
  expand(
    resourceGroupName: string,
    workspaceName: string,
    entityId: string,
    parameters: EntityExpandParameters,
    options?: EntitiesExpandOptionalParams
  ): Promise<EntitiesExpandResponse>;
  /**
   * Get Insights and Activities for an entity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param entityId entity ID
   * @param kind The Kind parameter for queries
   * @param options The options parameters.
   */
  queries(
    resourceGroupName: string,
    workspaceName: string,
    entityId: string,
    kind: EntityItemQueryKind,
    options?: EntitiesQueriesOptionalParams
  ): Promise<EntitiesQueriesResponse>;
  /**
   * Execute Insights for an entity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param entityId entity ID
   * @param parameters The parameters required to execute insights on the given entity.
   * @param options The options parameters.
   */
  getInsights(
    resourceGroupName: string,
    workspaceName: string,
    entityId: string,
    parameters: EntityGetInsightsParameters,
    options?: EntitiesGetInsightsOptionalParams
  ): Promise<EntitiesGetInsightsResponse>;
}
