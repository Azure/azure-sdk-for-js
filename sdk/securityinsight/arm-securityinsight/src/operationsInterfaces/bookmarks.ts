/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Bookmark,
  BookmarksListOptionalParams,
  BookmarksGetOptionalParams,
  BookmarksGetResponse,
  BookmarksCreateOrUpdateOptionalParams,
  BookmarksCreateOrUpdateResponse,
  BookmarksDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Bookmarks. */
export interface Bookmarks {
  /**
   * Gets all bookmarks.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: BookmarksListOptionalParams
  ): PagedAsyncIterableIterator<Bookmark>;
  /**
   * Gets a bookmark.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param bookmarkId Bookmark ID
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    bookmarkId: string,
    options?: BookmarksGetOptionalParams
  ): Promise<BookmarksGetResponse>;
  /**
   * Creates or updates the bookmark.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param bookmarkId Bookmark ID
   * @param bookmark The bookmark
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    bookmarkId: string,
    bookmark: Bookmark,
    options?: BookmarksCreateOrUpdateOptionalParams
  ): Promise<BookmarksCreateOrUpdateResponse>;
  /**
   * Delete the bookmark.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param bookmarkId Bookmark ID
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    bookmarkId: string,
    options?: BookmarksDeleteOptionalParams
  ): Promise<void>;
}
