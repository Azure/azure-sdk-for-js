/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Relation,
  BookmarkRelationsListOptionalParams,
  BookmarkRelationsGetOptionalParams,
  BookmarkRelationsGetResponse,
  BookmarkRelationsCreateOrUpdateOptionalParams,
  BookmarkRelationsCreateOrUpdateResponse,
  BookmarkRelationsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BookmarkRelations. */
export interface BookmarkRelations {
  /**
   * Gets all bookmark relations.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param bookmarkId Bookmark ID
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    bookmarkId: string,
    options?: BookmarkRelationsListOptionalParams
  ): PagedAsyncIterableIterator<Relation>;
  /**
   * Gets a bookmark relation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param bookmarkId Bookmark ID
   * @param relationName Relation Name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    bookmarkId: string,
    relationName: string,
    options?: BookmarkRelationsGetOptionalParams
  ): Promise<BookmarkRelationsGetResponse>;
  /**
   * Creates the bookmark relation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param bookmarkId Bookmark ID
   * @param relationName Relation Name
   * @param relation The relation model
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    bookmarkId: string,
    relationName: string,
    relation: Relation,
    options?: BookmarkRelationsCreateOrUpdateOptionalParams
  ): Promise<BookmarkRelationsCreateOrUpdateResponse>;
  /**
   * Delete the bookmark relation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param bookmarkId Bookmark ID
   * @param relationName Relation Name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    bookmarkId: string,
    relationName: string,
    options?: BookmarkRelationsDeleteOptionalParams
  ): Promise<void>;
}
