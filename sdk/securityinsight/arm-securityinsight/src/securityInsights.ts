/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { SecurityInsightsContext } from "./securityInsightsContext";


class SecurityInsights extends SecurityInsightsContext {
  // Operation groups
  operations: operations.Operations;
  alertRules: operations.AlertRules;
  actions: operations.Actions;
  alertRuleTemplates: operations.AlertRuleTemplates;
  bookmarks: operations.Bookmarks;
  dataConnectors: operations.DataConnectors;
  incidents: operations.Incidents;
  incidentComments: operations.IncidentComments;

  /**
   * Initializes a new instance of the SecurityInsights class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId Azure subscription ID
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.SecurityInsightsOptions) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.alertRules = new operations.AlertRules(this);
    this.actions = new operations.Actions(this);
    this.alertRuleTemplates = new operations.AlertRuleTemplates(this);
    this.bookmarks = new operations.Bookmarks(this);
    this.dataConnectors = new operations.DataConnectors(this);
    this.incidents = new operations.Incidents(this);
    this.incidentComments = new operations.IncidentComments(this);
  }
}

// Operation Specifications

export {
  SecurityInsights,
  SecurityInsightsContext,
  Models as SecurityInsightsModels,
  Mappers as SecurityInsightsMappers
};
export * from "./operations";
