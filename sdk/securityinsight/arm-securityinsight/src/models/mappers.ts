/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const DataConnectorDataTypeCommon: msRest.CompositeMapper = {
  serializedName: "DataConnectorDataTypeCommon",
  type: {
    name: "Composite",
    className: "DataConnectorDataTypeCommon",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertsDataTypeOfDataConnector: msRest.CompositeMapper = {
  serializedName: "AlertsDataTypeOfDataConnector",
  type: {
    name: "Composite",
    className: "AlertsDataTypeOfDataConnector",
    modelProperties: {
      alerts: {
        serializedName: "alerts",
        type: {
          name: "Composite",
          className: "DataConnectorDataTypeCommon"
        }
      }
    }
  }
};

export const ResourceWithEtag: msRest.CompositeMapper = {
  serializedName: "ResourceWithEtag",
  type: {
    name: "Composite",
    className: "ResourceWithEtag",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnector: msRest.CompositeMapper = {
  serializedName: "DataConnector",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "DataConnector",
    className: "DataConnector",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AADDataConnector: msRest.CompositeMapper = {
  serializedName: "AzureActiveDirectory",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "AADDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const AATPDataConnector: msRest.CompositeMapper = {
  serializedName: "AzureAdvancedThreatProtection",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "AATPDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const ASCDataConnector: msRest.CompositeMapper = {
  serializedName: "AzureSecurityCenter",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "ASCDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionRequest: msRest.CompositeMapper = {
  serializedName: "ActionRequest",
  type: {
    name: "Composite",
    className: "ActionRequest",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      logicAppResourceId: {
        required: true,
        serializedName: "properties.logicAppResourceId",
        type: {
          name: "String"
        }
      },
      triggerUri: {
        required: true,
        serializedName: "properties.triggerUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionPropertiesBase: msRest.CompositeMapper = {
  serializedName: "ActionPropertiesBase",
  type: {
    name: "Composite",
    className: "ActionPropertiesBase",
    modelProperties: {
      logicAppResourceId: {
        required: true,
        serializedName: "logicAppResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionResponse: msRest.CompositeMapper = {
  serializedName: "ActionResponse",
  type: {
    name: "Composite",
    className: "ActionResponse",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      logicAppResourceId: {
        required: true,
        serializedName: "properties.logicAppResourceId",
        type: {
          name: "String"
        }
      },
      workflowId: {
        serializedName: "properties.workflowId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertRule: msRest.CompositeMapper = {
  serializedName: "AlertRule",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "AlertRule",
    className: "AlertRule",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertRuleTemplate: msRest.CompositeMapper = {
  serializedName: "AlertRuleTemplate",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "AlertRuleTemplate",
    className: "AlertRuleTemplate",
    modelProperties: {
      ...Resource.type.modelProperties,
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertRuleTemplateDataSource: msRest.CompositeMapper = {
  serializedName: "AlertRuleTemplateDataSource",
  type: {
    name: "Composite",
    className: "AlertRuleTemplateDataSource",
    modelProperties: {
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "dataTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AwsCloudTrailDataConnectorDataTypesLogs: msRest.CompositeMapper = {
  serializedName: "AwsCloudTrailDataConnectorDataTypes_logs",
  type: {
    name: "Composite",
    className: "AwsCloudTrailDataConnectorDataTypesLogs",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const AwsCloudTrailDataConnectorDataTypes: msRest.CompositeMapper = {
  serializedName: "AwsCloudTrailDataConnectorDataTypes",
  type: {
    name: "Composite",
    className: "AwsCloudTrailDataConnectorDataTypes",
    modelProperties: {
      logs: {
        serializedName: "logs",
        type: {
          name: "Composite",
          className: "AwsCloudTrailDataConnectorDataTypesLogs"
        }
      }
    }
  }
};

export const AwsCloudTrailDataConnector: msRest.CompositeMapper = {
  serializedName: "AmazonWebServicesCloudTrail",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "AwsCloudTrailDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      awsRoleArn: {
        serializedName: "properties.awsRoleArn",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AwsCloudTrailDataConnectorDataTypes"
        }
      }
    }
  }
};

export const UserInfo: msRest.CompositeMapper = {
  serializedName: "UserInfo",
  type: {
    name: "Composite",
    className: "UserInfo",
    modelProperties: {
      email: {
        readOnly: true,
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      objectId: {
        required: true,
        nullable: true,
        serializedName: "objectId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const IncidentInfo: msRest.CompositeMapper = {
  serializedName: "IncidentInfo",
  type: {
    name: "Composite",
    className: "IncidentInfo",
    modelProperties: {
      incidentId: {
        serializedName: "incidentId",
        type: {
          name: "String"
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      relationName: {
        serializedName: "relationName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Bookmark: msRest.CompositeMapper = {
  serializedName: "Bookmark",
  type: {
    name: "Composite",
    className: "Bookmark",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      created: {
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      query: {
        required: true,
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      queryResult: {
        serializedName: "properties.queryResult",
        type: {
          name: "String"
        }
      },
      updated: {
        serializedName: "properties.updated",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      eventTime: {
        serializedName: "properties.eventTime",
        type: {
          name: "DateTime"
        }
      },
      queryStartTime: {
        serializedName: "properties.queryStartTime",
        type: {
          name: "DateTime"
        }
      },
      queryEndTime: {
        serializedName: "properties.queryEndTime",
        type: {
          name: "DateTime"
        }
      },
      incidentInfo: {
        serializedName: "properties.incidentInfo",
        type: {
          name: "Composite",
          className: "IncidentInfo"
        }
      }
    }
  }
};

export const ClientInfo: msRest.CompositeMapper = {
  serializedName: "ClientInfo",
  type: {
    name: "Composite",
    className: "ClientInfo",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "Uuid"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const DataConnectorTenantId: msRest.CompositeMapper = {
  serializedName: "DataConnectorTenantId",
  type: {
    name: "Composite",
    className: "DataConnectorTenantId",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnectorWithAlertsProperties: msRest.CompositeMapper = {
  serializedName: "DataConnectorWithAlertsProperties",
  type: {
    name: "Composite",
    className: "DataConnectorWithAlertsProperties",
    modelProperties: {
      dataTypes: {
        serializedName: "dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const FusionAlertRule: msRest.CompositeMapper = {
  serializedName: "Fusion",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AlertRule.type.polymorphicDiscriminator,
    uberParent: "AlertRule",
    className: "FusionAlertRule",
    modelProperties: {
      ...AlertRule.type.modelProperties,
      alertRuleTemplateName: {
        required: true,
        serializedName: "properties.alertRuleTemplateName",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      enabled: {
        required: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedUtc",
        type: {
          name: "DateTime"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      tactics: {
        readOnly: true,
        serializedName: "properties.tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const FusionAlertRuleTemplate: msRest.CompositeMapper = {
  serializedName: "Fusion",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AlertRuleTemplate.type.polymorphicDiscriminator,
    uberParent: "AlertRuleTemplate",
    className: "FusionAlertRuleTemplate",
    modelProperties: {
      ...AlertRuleTemplate.type.modelProperties,
      alertRulesCreatedByTemplateCount: {
        serializedName: "properties.alertRulesCreatedByTemplateCount",
        type: {
          name: "Number"
        }
      },
      createdDateUTC: {
        readOnly: true,
        serializedName: "properties.createdDateUTC",
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requiredDataConnectors: {
        serializedName: "properties.requiredDataConnectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRuleTemplateDataSource"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IncidentAdditionalData: msRest.CompositeMapper = {
  serializedName: "IncidentAdditionalData",
  type: {
    name: "Composite",
    className: "IncidentAdditionalData",
    modelProperties: {
      alertsCount: {
        readOnly: true,
        serializedName: "alertsCount",
        type: {
          name: "Number"
        }
      },
      bookmarksCount: {
        readOnly: true,
        serializedName: "bookmarksCount",
        type: {
          name: "Number"
        }
      },
      commentsCount: {
        readOnly: true,
        serializedName: "commentsCount",
        type: {
          name: "Number"
        }
      },
      alertProductNames: {
        readOnly: true,
        serializedName: "alertProductNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tactics: {
        readOnly: true,
        serializedName: "tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IncidentLabel: msRest.CompositeMapper = {
  serializedName: "IncidentLabel",
  type: {
    name: "Composite",
    className: "IncidentLabel",
    modelProperties: {
      labelName: {
        required: true,
        serializedName: "labelName",
        type: {
          name: "String"
        }
      },
      labelType: {
        readOnly: true,
        serializedName: "labelType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IncidentOwnerInfo: msRest.CompositeMapper = {
  serializedName: "IncidentOwnerInfo",
  type: {
    name: "Composite",
    className: "IncidentOwnerInfo",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      assignedTo: {
        serializedName: "assignedTo",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "Uuid"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Incident: msRest.CompositeMapper = {
  serializedName: "Incident",
  type: {
    name: "Composite",
    className: "Incident",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      additionalData: {
        readOnly: true,
        serializedName: "properties.additionalData",
        type: {
          name: "Composite",
          className: "IncidentAdditionalData"
        }
      },
      classification: {
        serializedName: "properties.classification",
        type: {
          name: "String"
        }
      },
      classificationComment: {
        serializedName: "properties.classificationComment",
        type: {
          name: "String"
        }
      },
      classificationReason: {
        serializedName: "properties.classificationReason",
        type: {
          name: "String"
        }
      },
      createdTimeUtc: {
        readOnly: true,
        serializedName: "properties.createdTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      firstActivityTimeUtc: {
        serializedName: "properties.firstActivityTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      incidentUrl: {
        readOnly: true,
        serializedName: "properties.incidentUrl",
        type: {
          name: "String"
        }
      },
      incidentNumber: {
        readOnly: true,
        serializedName: "properties.incidentNumber",
        type: {
          name: "Number"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IncidentLabel"
            }
          }
        }
      },
      lastActivityTimeUtc: {
        serializedName: "properties.lastActivityTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedTimeUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      owner: {
        serializedName: "properties.owner",
        type: {
          name: "Composite",
          className: "IncidentOwnerInfo"
        }
      },
      relatedAnalyticRuleIds: {
        readOnly: true,
        serializedName: "properties.relatedAnalyticRuleIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      severity: {
        required: true,
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      title: {
        required: true,
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IncidentComment: msRest.CompositeMapper = {
  serializedName: "IncidentComment",
  type: {
    name: "Composite",
    className: "IncidentComment",
    modelProperties: {
      ...Resource.type.modelProperties,
      createdTimeUtc: {
        readOnly: true,
        serializedName: "properties.createdTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      message: {
        required: true,
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      },
      author: {
        readOnly: true,
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "ClientInfo"
        }
      }
    }
  }
};

export const MCASDataConnectorDataTypes: msRest.CompositeMapper = {
  serializedName: "MCASDataConnectorDataTypes",
  type: {
    name: "Composite",
    className: "MCASDataConnectorDataTypes",
    modelProperties: {
      ...AlertsDataTypeOfDataConnector.type.modelProperties,
      discoveryLogs: {
        serializedName: "discoveryLogs",
        type: {
          name: "Composite",
          className: "DataConnectorDataTypeCommon"
        }
      }
    }
  }
};

export const MCASDataConnector: msRest.CompositeMapper = {
  serializedName: "MicrosoftCloudAppSecurity",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "MCASDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "MCASDataConnectorDataTypes"
        }
      }
    }
  }
};

export const MDATPDataConnector: msRest.CompositeMapper = {
  serializedName: "MicrosoftDefenderAdvancedThreatProtection",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "MDATPDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const MicrosoftSecurityIncidentCreationAlertRule: msRest.CompositeMapper = {
  serializedName: "MicrosoftSecurityIncidentCreation",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AlertRule.type.polymorphicDiscriminator,
    uberParent: "AlertRule",
    className: "MicrosoftSecurityIncidentCreationAlertRule",
    modelProperties: {
      ...AlertRule.type.modelProperties,
      displayNamesFilter: {
        serializedName: "properties.displayNamesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayNamesExcludeFilter: {
        serializedName: "properties.displayNamesExcludeFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      productFilter: {
        required: true,
        serializedName: "properties.productFilter",
        type: {
          name: "String"
        }
      },
      severitiesFilter: {
        serializedName: "properties.severitiesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      alertRuleTemplateName: {
        serializedName: "properties.alertRuleTemplateName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      enabled: {
        required: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedUtc",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const MicrosoftSecurityIncidentCreationAlertRuleCommonProperties: msRest.CompositeMapper = {
  serializedName: "MicrosoftSecurityIncidentCreationAlertRuleCommonProperties",
  type: {
    name: "Composite",
    className: "MicrosoftSecurityIncidentCreationAlertRuleCommonProperties",
    modelProperties: {
      displayNamesFilter: {
        serializedName: "displayNamesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayNamesExcludeFilter: {
        serializedName: "displayNamesExcludeFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      productFilter: {
        required: true,
        serializedName: "productFilter",
        type: {
          name: "String"
        }
      },
      severitiesFilter: {
        serializedName: "severitiesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MicrosoftSecurityIncidentCreationAlertRuleTemplate: msRest.CompositeMapper = {
  serializedName: "MicrosoftSecurityIncidentCreation",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AlertRuleTemplate.type.polymorphicDiscriminator,
    uberParent: "AlertRuleTemplate",
    className: "MicrosoftSecurityIncidentCreationAlertRuleTemplate",
    modelProperties: {
      ...AlertRuleTemplate.type.modelProperties,
      alertRulesCreatedByTemplateCount: {
        serializedName: "properties.alertRulesCreatedByTemplateCount",
        type: {
          name: "Number"
        }
      },
      createdDateUTC: {
        readOnly: true,
        serializedName: "properties.createdDateUTC",
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requiredDataConnectors: {
        serializedName: "properties.requiredDataConnectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRuleTemplateDataSource"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      displayNamesFilter: {
        serializedName: "properties.displayNamesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayNamesExcludeFilter: {
        serializedName: "properties.displayNamesExcludeFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      productFilter: {
        required: true,
        serializedName: "properties.productFilter",
        type: {
          name: "String"
        }
      },
      severitiesFilter: {
        serializedName: "properties.severitiesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OfficeConsent: msRest.CompositeMapper = {
  serializedName: "OfficeConsent",
  type: {
    name: "Composite",
    className: "OfficeConsent",
    modelProperties: {
      ...Resource.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      tenantName: {
        readOnly: true,
        serializedName: "properties.tenantName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OfficeConsentList: msRest.CompositeMapper = {
  serializedName: "OfficeConsentList",
  type: {
    name: "Composite",
    className: "OfficeConsentList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OfficeConsent"
            }
          }
        }
      }
    }
  }
};

export const OfficeDataConnectorDataTypesExchange: msRest.CompositeMapper = {
  serializedName: "OfficeDataConnectorDataTypes_exchange",
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypesExchange",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const OfficeDataConnectorDataTypesSharePoint: msRest.CompositeMapper = {
  serializedName: "OfficeDataConnectorDataTypes_sharePoint",
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypesSharePoint",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const OfficeDataConnectorDataTypesTeams: msRest.CompositeMapper = {
  serializedName: "OfficeDataConnectorDataTypes_teams",
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypesTeams",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const OfficeDataConnectorDataTypes: msRest.CompositeMapper = {
  serializedName: "OfficeDataConnectorDataTypes",
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypes",
    modelProperties: {
      exchange: {
        serializedName: "exchange",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypesExchange"
        }
      },
      sharePoint: {
        serializedName: "sharePoint",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypesSharePoint"
        }
      },
      teams: {
        serializedName: "teams",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypesTeams"
        }
      }
    }
  }
};

export const OfficeDataConnector: msRest.CompositeMapper = {
  serializedName: "Office365",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "OfficeDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypes"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScheduledAlertRule: msRest.CompositeMapper = {
  serializedName: "Scheduled",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AlertRule.type.polymorphicDiscriminator,
    uberParent: "AlertRule",
    className: "ScheduledAlertRule",
    modelProperties: {
      ...AlertRule.type.modelProperties,
      query: {
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      queryFrequency: {
        serializedName: "properties.queryFrequency",
        type: {
          name: "TimeSpan"
        }
      },
      queryPeriod: {
        serializedName: "properties.queryPeriod",
        type: {
          name: "TimeSpan"
        }
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      triggerOperator: {
        serializedName: "properties.triggerOperator",
        type: {
          name: "Enum",
          allowedValues: [
            "GreaterThan",
            "LessThan",
            "Equal",
            "NotEqual"
          ]
        }
      },
      triggerThreshold: {
        serializedName: "properties.triggerThreshold",
        type: {
          name: "Number"
        }
      },
      alertRuleTemplateName: {
        serializedName: "properties.alertRuleTemplateName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      enabled: {
        required: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedUtc",
        type: {
          name: "DateTime"
        }
      },
      suppressionDuration: {
        required: true,
        serializedName: "properties.suppressionDuration",
        type: {
          name: "TimeSpan"
        }
      },
      suppressionEnabled: {
        required: true,
        serializedName: "properties.suppressionEnabled",
        type: {
          name: "Boolean"
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ScheduledAlertRuleCommonProperties: msRest.CompositeMapper = {
  serializedName: "ScheduledAlertRuleCommonProperties",
  type: {
    name: "Composite",
    className: "ScheduledAlertRuleCommonProperties",
    modelProperties: {
      query: {
        serializedName: "query",
        type: {
          name: "String"
        }
      },
      queryFrequency: {
        serializedName: "queryFrequency",
        type: {
          name: "TimeSpan"
        }
      },
      queryPeriod: {
        serializedName: "queryPeriod",
        type: {
          name: "TimeSpan"
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      triggerOperator: {
        serializedName: "triggerOperator",
        type: {
          name: "Enum",
          allowedValues: [
            "GreaterThan",
            "LessThan",
            "Equal",
            "NotEqual"
          ]
        }
      },
      triggerThreshold: {
        serializedName: "triggerThreshold",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ScheduledAlertRuleTemplate: msRest.CompositeMapper = {
  serializedName: "Scheduled",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AlertRuleTemplate.type.polymorphicDiscriminator,
    uberParent: "AlertRuleTemplate",
    className: "ScheduledAlertRuleTemplate",
    modelProperties: {
      ...AlertRuleTemplate.type.modelProperties,
      alertRulesCreatedByTemplateCount: {
        serializedName: "properties.alertRulesCreatedByTemplateCount",
        type: {
          name: "Number"
        }
      },
      createdDateUTC: {
        readOnly: true,
        serializedName: "properties.createdDateUTC",
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requiredDataConnectors: {
        serializedName: "properties.requiredDataConnectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRuleTemplateDataSource"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      query: {
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      queryFrequency: {
        serializedName: "properties.queryFrequency",
        type: {
          name: "TimeSpan"
        }
      },
      queryPeriod: {
        serializedName: "properties.queryPeriod",
        type: {
          name: "TimeSpan"
        }
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      triggerOperator: {
        serializedName: "properties.triggerOperator",
        type: {
          name: "Enum",
          allowedValues: [
            "GreaterThan",
            "LessThan",
            "Equal",
            "NotEqual"
          ]
        }
      },
      triggerThreshold: {
        serializedName: "properties.triggerThreshold",
        type: {
          name: "Number"
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Settings: msRest.CompositeMapper = {
  serializedName: "Settings",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "Settings",
    className: "Settings",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TIDataConnectorDataTypesIndicators: msRest.CompositeMapper = {
  serializedName: "TIDataConnectorDataTypes_indicators",
  type: {
    name: "Composite",
    className: "TIDataConnectorDataTypesIndicators",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const TIDataConnectorDataTypes: msRest.CompositeMapper = {
  serializedName: "TIDataConnectorDataTypes",
  type: {
    name: "Composite",
    className: "TIDataConnectorDataTypes",
    modelProperties: {
      indicators: {
        serializedName: "indicators",
        type: {
          name: "Composite",
          className: "TIDataConnectorDataTypesIndicators"
        }
      }
    }
  }
};

export const TIDataConnector: msRest.CompositeMapper = {
  serializedName: "ThreatIntelligence",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "TIDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      tipLookbackPeriod: {
        nullable: true,
        serializedName: "properties.tipLookbackPeriod",
        type: {
          name: "DateTime"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "TIDataConnectorDataTypes"
        }
      }
    }
  }
};

export const ThreatIntelligence: msRest.CompositeMapper = {
  serializedName: "ThreatIntelligence",
  type: {
    name: "Composite",
    className: "ThreatIntelligence",
    modelProperties: {
      confidence: {
        readOnly: true,
        serializedName: "confidence",
        type: {
          name: "Number"
        }
      },
      providerName: {
        readOnly: true,
        serializedName: "providerName",
        type: {
          name: "String"
        }
      },
      reportLink: {
        readOnly: true,
        serializedName: "reportLink",
        type: {
          name: "String"
        }
      },
      threatDescription: {
        readOnly: true,
        serializedName: "threatDescription",
        type: {
          name: "String"
        }
      },
      threatName: {
        readOnly: true,
        serializedName: "threatName",
        type: {
          name: "String"
        }
      },
      threatType: {
        readOnly: true,
        serializedName: "threatType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ToggleSettings: msRest.CompositeMapper = {
  serializedName: "ToggleSettings",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Settings.type.polymorphicDiscriminator,
    uberParent: "Settings",
    className: "ToggleSettings",
    modelProperties: {
      ...Settings.type.modelProperties,
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const UebaSettings: msRest.CompositeMapper = {
  serializedName: "UebaSettings",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Settings.type.polymorphicDiscriminator,
    uberParent: "Settings",
    className: "UebaSettings",
    modelProperties: {
      ...Settings.type.modelProperties,
      atpLicenseStatus: {
        readOnly: true,
        serializedName: "properties.atpLicenseStatus",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      },
      statusInMcas: {
        readOnly: true,
        serializedName: "properties.statusInMcas",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationsList: msRest.CompositeMapper = {
  serializedName: "OperationsList",
  type: {
    name: "Composite",
    className: "OperationsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const AlertRulesList: msRest.CompositeMapper = {
  serializedName: "AlertRulesList",
  type: {
    name: "Composite",
    className: "AlertRulesList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRule"
            }
          }
        }
      }
    }
  }
};

export const ActionsList: msRest.CompositeMapper = {
  serializedName: "ActionsList",
  type: {
    name: "Composite",
    className: "ActionsList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionResponse"
            }
          }
        }
      }
    }
  }
};

export const AlertRuleTemplatesList: msRest.CompositeMapper = {
  serializedName: "AlertRuleTemplatesList",
  type: {
    name: "Composite",
    className: "AlertRuleTemplatesList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRuleTemplate"
            }
          }
        }
      }
    }
  }
};

export const BookmarkList: msRest.CompositeMapper = {
  serializedName: "BookmarkList",
  type: {
    name: "Composite",
    className: "BookmarkList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Bookmark"
            }
          }
        }
      }
    }
  }
};

export const DataConnectorList: msRest.CompositeMapper = {
  serializedName: "DataConnectorList",
  type: {
    name: "Composite",
    className: "DataConnectorList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataConnector"
            }
          }
        }
      }
    }
  }
};

export const IncidentList: msRest.CompositeMapper = {
  serializedName: "IncidentList",
  type: {
    name: "Composite",
    className: "IncidentList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Incident"
            }
          }
        }
      }
    }
  }
};

export const IncidentCommentList: msRest.CompositeMapper = {
  serializedName: "IncidentCommentList",
  type: {
    name: "Composite",
    className: "IncidentCommentList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IncidentComment"
            }
          }
        }
      }
    }
  }
};

export const discriminators = {
  'DataConnector.AzureActiveDirectory' : AADDataConnector,
  'DataConnector.AzureAdvancedThreatProtection' : AATPDataConnector,
  'DataConnector.AzureSecurityCenter' : ASCDataConnector,
  'AlertRule' : AlertRule,
  'AlertRuleTemplate' : AlertRuleTemplate,
  'DataConnector.AmazonWebServicesCloudTrail' : AwsCloudTrailDataConnector,
  'DataConnector' : DataConnector,
  'AlertRule.Fusion' : FusionAlertRule,
  'AlertRuleTemplate.Fusion' : FusionAlertRuleTemplate,
  'DataConnector.MicrosoftCloudAppSecurity' : MCASDataConnector,
  'DataConnector.MicrosoftDefenderAdvancedThreatProtection' : MDATPDataConnector,
  'AlertRule.MicrosoftSecurityIncidentCreation' : MicrosoftSecurityIncidentCreationAlertRule,
  'AlertRuleTemplate.MicrosoftSecurityIncidentCreation' : MicrosoftSecurityIncidentCreationAlertRuleTemplate,
  'DataConnector.Office365' : OfficeDataConnector,
  'AlertRule.Scheduled' : ScheduledAlertRule,
  'AlertRuleTemplate.Scheduled' : ScheduledAlertRuleTemplate,
  'Settings' : Settings,
  'DataConnector.ThreatIntelligence' : TIDataConnector,
  'Settings.ToggleSettings' : ToggleSettings,
  'Settings.UebaSettings' : UebaSettings

};
