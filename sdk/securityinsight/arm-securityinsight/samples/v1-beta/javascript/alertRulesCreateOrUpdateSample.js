/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { SecurityInsights } = require("@azure/arm-securityinsight");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Creates or updates the alert rule.
 *
 * @summary Creates or updates the alert rule.
 * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-09-01-preview/examples/alertRules/CreateFusionAlertRuleWithFusionScenarioExclusion.json
 */
async function createsOrUpdatesAFusionAlertRuleWithScenarioExclusionPattern() {
  const subscriptionId =
    process.env["SECURITYINSIGHT_SUBSCRIPTION_ID"] || "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
  const resourceGroupName = process.env["SECURITYINSIGHT_RESOURCE_GROUP"] || "myRg";
  const workspaceName = "myWorkspace";
  const ruleId = "myFirstFusionRule";
  const alertRule = {
    alertRuleTemplateName: "f71aba3d-28fb-450b-b192-4e76a83015c8",
    enabled: true,
    etag: "3d00c3ca-0000-0100-0000-5d42d5010000",
    kind: "Fusion",
    sourceSettings: [
      { enabled: true, sourceName: "Anomalies", sourceSubTypes: [] },
      {
        enabled: true,
        sourceName: "Alert providers",
        sourceSubTypes: [
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Azure Active Directory Identity Protection",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Azure Defender",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Azure Defender for IoT",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft 365 Defender",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft Cloud App Security",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft Defender for Endpoint",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft Defender for Identity",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft Defender for Office 365",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Azure Sentinel scheduled analytics rules",
          },
        ],
      },
      {
        enabled: true,
        sourceName: "Raw logs from other sources",
        sourceSubTypes: [
          {
            enabled: true,
            severityFilters: { filters: [] },
            sourceSubTypeName: "Palo Alto Networks",
          },
        ],
      },
    ],
  };
  const credential = new DefaultAzureCredential();
  const client = new SecurityInsights(credential, subscriptionId);
  const result = await client.alertRules.createOrUpdate(
    resourceGroupName,
    workspaceName,
    ruleId,
    alertRule
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Creates or updates the alert rule.
 *
 * @summary Creates or updates the alert rule.
 * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-09-01-preview/examples/alertRules/CreateFusionAlertRule.json
 */
async function createsOrUpdatesAFusionAlertRule() {
  const subscriptionId =
    process.env["SECURITYINSIGHT_SUBSCRIPTION_ID"] || "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
  const resourceGroupName = process.env["SECURITYINSIGHT_RESOURCE_GROUP"] || "myRg";
  const workspaceName = "myWorkspace";
  const ruleId = "myFirstFusionRule";
  const alertRule = {
    alertRuleTemplateName: "f71aba3d-28fb-450b-b192-4e76a83015c8",
    enabled: true,
    etag: "3d00c3ca-0000-0100-0000-5d42d5010000",
    kind: "Fusion",
    sourceSettings: [
      { enabled: true, sourceName: "Anomalies", sourceSubTypes: [] },
      {
        enabled: true,
        sourceName: "Alert providers",
        sourceSubTypes: [
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Azure Active Directory Identity Protection",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Azure Defender",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Azure Defender for IoT",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft 365 Defender",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft Cloud App Security",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft Defender for Endpoint",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft Defender for Identity",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Microsoft Defender for Office 365",
          },
          {
            enabled: true,
            severityFilters: {
              filters: [
                { enabled: true, severity: "High" },
                { enabled: true, severity: "Medium" },
                { enabled: true, severity: "Low" },
                { enabled: true, severity: "Informational" },
              ],
            },
            sourceSubTypeName: "Azure Sentinel scheduled analytics rules",
          },
        ],
      },
      {
        enabled: true,
        sourceName: "Raw logs from other sources",
        sourceSubTypes: [
          {
            enabled: true,
            severityFilters: { filters: [] },
            sourceSubTypeName: "Palo Alto Networks",
          },
        ],
      },
    ],
  };
  const credential = new DefaultAzureCredential();
  const client = new SecurityInsights(credential, subscriptionId);
  const result = await client.alertRules.createOrUpdate(
    resourceGroupName,
    workspaceName,
    ruleId,
    alertRule
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Creates or updates the alert rule.
 *
 * @summary Creates or updates the alert rule.
 * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-09-01-preview/examples/alertRules/CreateMicrosoftSecurityIncidentCreationAlertRule.json
 */
async function createsOrUpdatesAMicrosoftSecurityIncidentCreationRule() {
  const subscriptionId =
    process.env["SECURITYINSIGHT_SUBSCRIPTION_ID"] || "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
  const resourceGroupName = process.env["SECURITYINSIGHT_RESOURCE_GROUP"] || "myRg";
  const workspaceName = "myWorkspace";
  const ruleId = "microsoftSecurityIncidentCreationRuleExample";
  const alertRule = {
    displayName: "testing displayname",
    enabled: true,
    etag: '"260097e0-0000-0d00-0000-5d6fa88f0000"',
    kind: "MicrosoftSecurityIncidentCreation",
    productFilter: "Microsoft Cloud App Security",
  };
  const credential = new DefaultAzureCredential();
  const client = new SecurityInsights(credential, subscriptionId);
  const result = await client.alertRules.createOrUpdate(
    resourceGroupName,
    workspaceName,
    ruleId,
    alertRule
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Creates or updates the alert rule.
 *
 * @summary Creates or updates the alert rule.
 * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-09-01-preview/examples/alertRules/CreateNrtAlertRule.json
 */
async function createsOrUpdatesANrtAlertRule() {
  const subscriptionId =
    process.env["SECURITYINSIGHT_SUBSCRIPTION_ID"] || "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
  const resourceGroupName = process.env["SECURITYINSIGHT_RESOURCE_GROUP"] || "myRg";
  const workspaceName = "myWorkspace";
  const ruleId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5";
  const alertRule = {
    description: "",
    displayName: "Rule2",
    enabled: true,
    etag: '"0300bf09-0000-0000-0000-5c37296e0000"',
    eventGroupingSettings: { aggregationKind: "AlertPerResult" },
    incidentConfiguration: {
      createIncident: true,
      groupingConfiguration: {
        enabled: true,
        groupByEntities: ["Host", "Account"],
        lookbackDuration: "PT5H",
        matchingMethod: "Selected",
        reopenClosedIncident: false,
      },
    },
    kind: "NRT",
    query:
      "ProtectionStatus | extend HostCustomEntity = Computer | extend IPCustomEntity = ComputerIP_Hidden",
    severity: "High",
    suppressionDuration: "PT1H",
    suppressionEnabled: false,
    tactics: ["Persistence", "LateralMovement"],
    techniques: ["T1037", "T1021"],
  };
  const credential = new DefaultAzureCredential();
  const client = new SecurityInsights(credential, subscriptionId);
  const result = await client.alertRules.createOrUpdate(
    resourceGroupName,
    workspaceName,
    ruleId,
    alertRule
  );
  console.log(result);
}

/**
 * This sample demonstrates how to Creates or updates the alert rule.
 *
 * @summary Creates or updates the alert rule.
 * x-ms-original-file: specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2022-09-01-preview/examples/alertRules/CreateScheduledAlertRule.json
 */
async function createsOrUpdatesAScheduledAlertRule() {
  const subscriptionId =
    process.env["SECURITYINSIGHT_SUBSCRIPTION_ID"] || "d0cfe6b2-9ac0-4464-9919-dccaee2e48c0";
  const resourceGroupName = process.env["SECURITYINSIGHT_RESOURCE_GROUP"] || "myRg";
  const workspaceName = "myWorkspace";
  const ruleId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5";
  const alertRule = {
    description: "An example for a scheduled rule",
    alertDetailsOverride: {
      alertDescriptionFormat: "Suspicious activity was made by {{ComputerIP}}",
      alertDisplayNameFormat: "Alert from {{Computer}}",
    },
    customDetails: {
      operatingSystemName: "OSName",
      operatingSystemType: "OSType",
    },
    displayName: "My scheduled rule",
    enabled: true,
    entityMappings: [
      {
        entityType: "Host",
        fieldMappings: [{ columnName: "Computer", identifier: "FullName" }],
      },
      {
        entityType: "IP",
        fieldMappings: [{ columnName: "ComputerIP", identifier: "Address" }],
      },
    ],
    etag: '"0300bf09-0000-0000-0000-5c37296e0000"',
    eventGroupingSettings: { aggregationKind: "AlertPerResult" },
    incidentConfiguration: {
      createIncident: true,
      groupingConfiguration: {
        enabled: true,
        groupByAlertDetails: ["DisplayName"],
        groupByCustomDetails: ["OperatingSystemType", "OperatingSystemName"],
        groupByEntities: ["Host"],
        lookbackDuration: "PT5H",
        matchingMethod: "Selected",
        reopenClosedIncident: false,
      },
    },
    kind: "Scheduled",
    query: "Heartbeat",
    queryFrequency: "PT1H",
    queryPeriod: "P2DT1H30M",
    severity: "High",
    suppressionDuration: "PT1H",
    suppressionEnabled: false,
    tactics: ["Persistence", "LateralMovement"],
    techniques: ["T1037", "T1021"],
    triggerOperator: "GreaterThan",
    triggerThreshold: 0,
  };
  const credential = new DefaultAzureCredential();
  const client = new SecurityInsights(credential, subscriptionId);
  const result = await client.alertRules.createOrUpdate(
    resourceGroupName,
    workspaceName,
    ruleId,
    alertRule
  );
  console.log(result);
}

async function main() {
  createsOrUpdatesAFusionAlertRuleWithScenarioExclusionPattern();
  createsOrUpdatesAFusionAlertRule();
  createsOrUpdatesAMicrosoftSecurityIncidentCreationRule();
  createsOrUpdatesANrtAlertRule();
  createsOrUpdatesAScheduledAlertRule();
}

main().catch(console.error);
