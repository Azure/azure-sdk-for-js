/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  App,
  AppsListBySubscriptionOptionalParams,
  AppsListByResourceGroupOptionalParams,
  AppTemplate,
  AppsListTemplatesOptionalParams,
  AppsGetOptionalParams,
  AppsGetResponse,
  AppsCreateOrUpdateOptionalParams,
  AppsCreateOrUpdateResponse,
  AppPatch,
  AppsUpdateOptionalParams,
  AppsUpdateResponse,
  AppsDeleteOptionalParams,
  AppsDeleteResponse,
  OperationInputs,
  AppsCheckNameAvailabilityOptionalParams,
  AppsCheckNameAvailabilityResponse,
  AppsCheckSubdomainAvailabilityOptionalParams,
  AppsCheckSubdomainAvailabilityResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Apps. */
export interface Apps {
  /**
   * Get all IoT Central Applications in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AppsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<App>;
  /**
   * Get all the IoT Central Applications in a resource group.
   * @param resourceGroupName The name of the resource group that contains the IoT Central application.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AppsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<App>;
  /**
   * Get all available application templates.
   * @param options The options parameters.
   */
  listTemplates(
    options?: AppsListTemplatesOptionalParams
  ): PagedAsyncIterableIterator<AppTemplate>;
  /**
   * Get the metadata of an IoT Central application.
   * @param resourceGroupName The name of the resource group that contains the IoT Central application.
   * @param resourceName The ARM resource name of the IoT Central application.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    options?: AppsGetOptionalParams
  ): Promise<AppsGetResponse>;
  /**
   * Create or update the metadata of an IoT Central application. The usual pattern to modify a property
   * is to retrieve the IoT Central application metadata and security metadata, and then combine them
   * with the modified values in a new body to update the IoT Central application.
   * @param resourceGroupName The name of the resource group that contains the IoT Central application.
   * @param resourceName The ARM resource name of the IoT Central application.
   * @param app The IoT Central application metadata and security metadata.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    app: App,
    options?: AppsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AppsCreateOrUpdateResponse>,
      AppsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update the metadata of an IoT Central application. The usual pattern to modify a property
   * is to retrieve the IoT Central application metadata and security metadata, and then combine them
   * with the modified values in a new body to update the IoT Central application.
   * @param resourceGroupName The name of the resource group that contains the IoT Central application.
   * @param resourceName The ARM resource name of the IoT Central application.
   * @param app The IoT Central application metadata and security metadata.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    app: App,
    options?: AppsCreateOrUpdateOptionalParams
  ): Promise<AppsCreateOrUpdateResponse>;
  /**
   * Update the metadata of an IoT Central application.
   * @param resourceGroupName The name of the resource group that contains the IoT Central application.
   * @param resourceName The ARM resource name of the IoT Central application.
   * @param appPatch The IoT Central application metadata and security metadata.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    resourceName: string,
    appPatch: AppPatch,
    options?: AppsUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<AppsUpdateResponse>, AppsUpdateResponse>
  >;
  /**
   * Update the metadata of an IoT Central application.
   * @param resourceGroupName The name of the resource group that contains the IoT Central application.
   * @param resourceName The ARM resource name of the IoT Central application.
   * @param appPatch The IoT Central application metadata and security metadata.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    appPatch: AppPatch,
    options?: AppsUpdateOptionalParams
  ): Promise<AppsUpdateResponse>;
  /**
   * Delete an IoT Central application.
   * @param resourceGroupName The name of the resource group that contains the IoT Central application.
   * @param resourceName The ARM resource name of the IoT Central application.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    options?: AppsDeleteOptionalParams
  ): Promise<
    PollerLike<PollOperationState<AppsDeleteResponse>, AppsDeleteResponse>
  >;
  /**
   * Delete an IoT Central application.
   * @param resourceGroupName The name of the resource group that contains the IoT Central application.
   * @param resourceName The ARM resource name of the IoT Central application.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    options?: AppsDeleteOptionalParams
  ): Promise<AppsDeleteResponse>;
  /**
   * Check if an IoT Central application name is available.
   * @param operationInputs Set the name parameter in the OperationInputs structure to the name of the
   *                        IoT Central application to check.
   * @param options The options parameters.
   */
  checkNameAvailability(
    operationInputs: OperationInputs,
    options?: AppsCheckNameAvailabilityOptionalParams
  ): Promise<AppsCheckNameAvailabilityResponse>;
  /**
   * Check if an IoT Central application subdomain is available.
   * @param operationInputs Set the name parameter in the OperationInputs structure to the subdomain of
   *                        the IoT Central application to check.
   * @param options The options parameters.
   */
  checkSubdomainAvailability(
    operationInputs: OperationInputs,
    options?: AppsCheckSubdomainAvailabilityOptionalParams
  ): Promise<AppsCheckSubdomainAvailabilityResponse>;
}
