/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  ConfigurationProfile as ConfigurationProfileMapper,
  ConfigurationProfileUpdate as ConfigurationProfileUpdateMapper,
  ConfigurationProfileAssignment as ConfigurationProfileAssignmentMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const bestPracticeName: OperationURLParameter = {
  parameterPath: "bestPracticeName",
  mapper: {
    serializedName: "bestPracticeName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-05-04",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const versionName: OperationURLParameter = {
  parameterPath: "versionName",
  mapper: {
    serializedName: "versionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: ConfigurationProfileMapper
};

export const configurationProfileName: OperationURLParameter = {
  parameterPath: "configurationProfileName",
  mapper: {
    serializedName: "configurationProfileName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: ConfigurationProfileUpdateMapper
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: ConfigurationProfileAssignmentMapper
};

export const configurationProfileAssignmentName: OperationURLParameter = {
  parameterPath: "configurationProfileAssignmentName",
  mapper: {
    serializedName: "configurationProfileAssignmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmName: OperationURLParameter = {
  parameterPath: "vmName",
  mapper: {
    serializedName: "vmName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const machineName: OperationURLParameter = {
  parameterPath: "machineName",
  mapper: {
    serializedName: "machineName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const clusterName: OperationURLParameter = {
  parameterPath: "clusterName",
  mapper: {
    serializedName: "clusterName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const reportName: OperationURLParameter = {
  parameterPath: "reportName",
  mapper: {
    serializedName: "reportName",
    required: true,
    type: {
      name: "String"
    }
  }
};
