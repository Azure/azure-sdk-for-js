/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const AccountIdentity: msRest.CompositeMapper = {
  serializedName: "AccountIdentity",
  type: {
    name: "Composite",
    className: "AccountIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned",
            "None"
          ]
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Account: msRest.CompositeMapper = {
  serializedName: "Account",
  type: {
    name: "Composite",
    className: "Account",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AccountIdentity"
        }
      }
    }
  }
};

export const ConfigurationProfileAssignmentCompliance: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfileAssignmentCompliance",
  type: {
    name: "Composite",
    className: "ConfigurationProfileAssignmentCompliance",
    modelProperties: {
      updateStatus: {
        nullable: true,
        readOnly: true,
        serializedName: "updateStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationProfileAssignmentProperties: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfileAssignmentProperties",
  type: {
    name: "Composite",
    className: "ConfigurationProfileAssignmentProperties",
    modelProperties: {
      configurationProfile: {
        serializedName: "configurationProfile",
        type: {
          name: "String"
        }
      },
      targetId: {
        serializedName: "targetId",
        type: {
          name: "String"
        }
      },
      accountId: {
        serializedName: "accountId",
        type: {
          name: "String"
        }
      },
      configurationProfilePreferenceId: {
        nullable: true,
        serializedName: "configurationProfilePreferenceId",
        type: {
          name: "String"
        }
      },
      provisioningStatus: {
        readOnly: true,
        serializedName: "provisioningStatus",
        type: {
          name: "String"
        }
      },
      compliance: {
        serializedName: "compliance",
        type: {
          name: "Composite",
          className: "ConfigurationProfileAssignmentCompliance"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ConfigurationProfileAssignment: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfileAssignment",
  type: {
    name: "Composite",
    className: "ConfigurationProfileAssignment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ConfigurationProfileAssignmentProperties"
        }
      }
    }
  }
};

export const ConfigurationProfilePreferenceVmBackup: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfilePreferenceVmBackup",
  type: {
    name: "Composite",
    className: "ConfigurationProfilePreferenceVmBackup",
    modelProperties: {
      timeZone: {
        nullable: true,
        serializedName: "timeZone",
        type: {
          name: "String"
        }
      },
      instantRpRetentionRangeInDays: {
        serializedName: "instantRpRetentionRangeInDays",
        type: {
          name: "Number"
        }
      },
      retentionPolicy: {
        nullable: true,
        serializedName: "retentionPolicy",
        type: {
          name: "String"
        }
      },
      schedulePolicy: {
        nullable: true,
        serializedName: "schedulePolicy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationProfilePreferenceAntiMalware: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfilePreferenceAntiMalware",
  type: {
    name: "Composite",
    className: "ConfigurationProfilePreferenceAntiMalware",
    modelProperties: {
      enableRealTimeProtection: {
        nullable: true,
        serializedName: "enableRealTimeProtection",
        type: {
          name: "String"
        }
      },
      exclusions: {
        nullable: true,
        serializedName: "exclusions",
        type: {
          name: "Object"
        }
      },
      runScheduledScan: {
        nullable: true,
        serializedName: "runScheduledScan",
        type: {
          name: "String"
        }
      },
      scanType: {
        nullable: true,
        serializedName: "scanType",
        type: {
          name: "String"
        }
      },
      scanDay: {
        nullable: true,
        serializedName: "scanDay",
        type: {
          name: "String"
        }
      },
      scanTimeInMinutes: {
        nullable: true,
        serializedName: "scanTimeInMinutes",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigurationProfilePreferenceProperties: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfilePreferenceProperties",
  type: {
    name: "Composite",
    className: "ConfigurationProfilePreferenceProperties",
    modelProperties: {
      vmBackup: {
        serializedName: "vmBackup",
        type: {
          name: "Composite",
          className: "ConfigurationProfilePreferenceVmBackup"
        }
      },
      antiMalware: {
        serializedName: "antiMalware",
        type: {
          name: "Composite",
          className: "ConfigurationProfilePreferenceAntiMalware"
        }
      }
    }
  }
};

export const ConfigurationProfilePreference: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfilePreference",
  type: {
    name: "Composite",
    className: "ConfigurationProfilePreference",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ConfigurationProfilePreferenceProperties"
        }
      }
    }
  }
};

export const ErrorResponseBody: msRest.CompositeMapper = {
  serializedName: "ErrorResponseBody",
  type: {
    name: "Composite",
    className: "ErrorResponseBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseBody"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      statusCode: {
        serializedName: "properties.statusCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccountList: msRest.CompositeMapper = {
  serializedName: "AccountList",
  type: {
    name: "Composite",
    className: "AccountList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Account"
            }
          }
        }
      }
    }
  }
};

export const ConfigurationProfileAssignmentList: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfileAssignmentList",
  type: {
    name: "Composite",
    className: "ConfigurationProfileAssignmentList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationProfileAssignment"
            }
          }
        }
      }
    }
  }
};

export const ConfigurationProfilePreferenceList: msRest.CompositeMapper = {
  serializedName: "ConfigurationProfilePreferenceList",
  type: {
    name: "Composite",
    className: "ConfigurationProfilePreferenceList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConfigurationProfilePreference"
            }
          }
        }
      }
    }
  }
};

export const OperationList: msRest.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};
